quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Testability,"There can be multiple attributes in the forward declaration, see the added test in `roottest/cling/dict/enum` (reduced from a case reported by CMS in https://github.com/cms-sw/cmssw/issues/42234), so we have to look for the last closing parentheses. (cherry picked from commit 9d2f7612a6e88d3a7148b19e131402349bac509b, backport of https://github.com/root-project/root/pull/13319)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13326:75,test,test,75,https://root.cern,https://github.com/root-project/root/pull/13326,2,['test'],['test']
Testability,There is PR which changes a way how JsMVA uses JSROOT: . https://github.com/root-project/root/pull/12484. Somebody should test and approve it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12441#issuecomment-1798019066:122,test,test,122,https://root.cern,https://github.com/root-project/root/issues/12441#issuecomment-1798019066,1,['test'],['test']
Testability,"There is a `custom_diff.py` script in roottest that makes the test cmsUnloadwork fail. I will close this pull request for now, as I don't want to touch that script at the moment, but later on I might reopen once this last test is also fixed after removing the blank line print out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4250#issuecomment-538909969:62,test,test,62,https://root.cern,https://github.com/root-project/root/pull/4250#issuecomment-538909969,2,['test'],['test']
Testability,"There is a `if(clad)` in the CMakeLists.txt to disable clad if there is no internet connection. However, it doesn't work right now, because it's after `include(RootBuildOptions)`, meaning the `clad` flag is not even set yet (only if explicitly set by the user, but not if we go with the default `clad=ON`). This logic error is fixed by this commit. To be backported to the 6.32 release branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15488:312,log,logic,312,https://root.cern,https://github.com/root-project/root/pull/15488,1,['log'],['logic']
Testability,"There is a hook which allows you to define your logging function, and it then uses it to print a nested output log, where the nesting level depends on how many intervals you have in flight. See the description here: https://github.com/AliceO2Group/AliceO2/pull/11645",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13146#issuecomment-1669590947:48,log,logging,48,https://root.cern,https://github.com/root-project/root/pull/13146#issuecomment-1669590947,2,['log'],"['log', 'logging']"
Testability,"There is a logging statement to estimate whether the number of requested; partitions is reasonable given the entries in the first file. This; should not happen every time, but on explicit user request. Python; logging defaults to WARNING, so move the statement to DEBUG to give; better control.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10905:11,log,logging,11,https://root.cern,https://github.com/root-project/root/pull/10905,2,['log'],['logging']
Testability,"There is a side-effect to this patch: the global print level remains different after the VariableMetricBuilder ran. The fact, that there is a global print level at all while there is also a local print level in VariableMetricBuilder, shows that the logging in MINUIT2 is only half-way done. Properly fixing that requires more involved patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2305#issuecomment-405347314:249,log,logging,249,https://root.cern,https://github.com/root-project/root/pull/2305#issuecomment-405347314,1,['log'],['logging']
Testability,"There is a suspicious failure, this assertion is triggered by the failing test:; ```; root.exe: /data/sftnight/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/SymbolStringPool.h:146: llvm::orc::SymbolStringPool::~SymbolStringPool(): Assertion `Pool.empty() && ""Dangling references at pool destruction time""' failed.; ```; I cannot judge if this could be related to the fix in LLVM or not. @Axel-Naumann and @vgvassilev, please advise. Should I drop that change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10890#issuecomment-1173932209:36,assert,assertion,36,https://root.cern,https://github.com/root-project/root/pull/10890#issuecomment-1173932209,3,"['Assert', 'assert', 'test']","['Assertion', 'assertion', 'test']"
Testability,There is a test already in `testHistFactory`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15543#issuecomment-2116983972:11,test,test,11,https://root.cern,https://github.com/root-project/root/pull/15543#issuecomment-2116983972,2,['test'],"['test', 'testHistFactory']"
Testability,"There is a test failure in `python-regression-regression` that needs to be investigated, we can't merge this for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5797#issuecomment-639357969:11,test,test,11,https://root.cern,https://github.com/root-project/root/pull/5797#issuecomment-639357969,1,['test'],['test']
Testability,"There is an infinite loop in; `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++; while (!fObjectMap.empty()) {; auto elem = fObjectMap.begin();; auto cppobj = elem->first;; auto klassid = elem->second;; auto pyclass = CreateScopeProxy(klassid);; auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {; ...; } else {; // Non-owning proxy, just unregister to clean tables.; // The proxy deletion by Python will have no effect on C++, so all good; MemoryRegulator::UnregisterPyObject(pyobj, pyclass);; }; }; ```. In the second code branch, the object is not removed from the `fObjMap`,; if `UnregisterPyObject` doesn't call the unregister hook because it; quits early. This can happen if there is not C++ object corresponding to; the regulated python object, causing an infinite loop because; `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed; after the cppyy upgrade. Probably the code path was not hit before. Addresses; https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15106:948,log,logic,948,https://root.cern,https://github.com/root-project/root/pull/15106,2,"['log', 'test']","['logic', 'test']"
Testability,"There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8425#issuecomment-861684735:59,test,test,59,https://root.cern,https://github.com/root-project/root/pull/8425#issuecomment-861684735,1,['test'],['test']
Testability,"There is no Xcode12 binaries here https://root.cern.ch/releases/release-62202/ so I cannot test that quick.; CI with root by Xcode11 has this crash in zevis. Versions match there.; I see this crash locally with Xcode10. Again, no mismatch.; That makes sense to open a separate issue on this. Meanwhile, is that is not possible run zevis on specific mac, maybe you have linux around?. Best regards,; Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-694232545:91,test,test,91,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-694232545,1,['test'],['test']
Testability,"There is problems with the doxygen head:; ```; build % cmake .. ; CMake Error at /Applications/CMake.app/Contents/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find PythonInterp (missing: PYTHON_EXECUTABLE); Call Stack (most recent call first):; /Applications/CMake.app/Contents/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /Applications/CMake.app/Contents/share/cmake-3.22/Modules/FindPythonInterp.cmake:169 (FIND_PACKAGE_HANDLE_STANDARD_ARGS); CMakeLists.txt:112 (find_package). -- Configuring incomplete, errors occurred!; See also ""/Users/couet/git/doxygen/build/CMakeFiles/CMakeOutput.log"".; See also ""/Users/couet/git/doxygen/build/CMakeFiles/CMakeError.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1080460317:677,log,log,677,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1080460317,2,['log'],['log']
Testability,"There is side effect when resizing web browser. I saw situation when both buttons - ""Enter full screen"" and ""Exit full screen"" appears at the same time. Just toggle ""full screen"", then made web browser smaller (main page hides) and then again web browser bigger. Please check logic here. And also name ""full screen"" is misleading. Wider or thinner",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4646#issuecomment-576355570:276,log,logic,276,https://root.cern,https://github.com/root-project/root/pull/4646#issuecomment-576355570,1,['log'],['logic']
Testability,There is some failing test but it seems not related to the changes in web gui doc. @linev @bellenot @axel do you think I can merge nevertheless ? .. I guess so...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7138#issuecomment-774980976:22,test,test,22,https://root.cern,https://github.com/root-project/root/pull/7138#issuecomment-774980976,1,['test'],['test']
Testability,There seems to be infrastructure issues :( : ; ```; 07:41:59 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200610-1234/Update.xml; 07:41:59 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds; 07:41:59 Problems when submitting via HTTP; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5603#issuecomment-642024757:149,Test,Testing,149,https://root.cern,https://github.com/root-project/root/pull/5603#issuecomment-642024757,1,['Test'],['Testing']
Testability,There should not be any difference ... this test is very basic.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6373#issuecomment-696598343:44,test,test,44,https://root.cern,https://github.com/root-project/root/issues/6373#issuecomment-696598343,1,['test'],['test']
Testability,"There was a segmentation fault in the RooFit batch mode with; multithreading that happened when there were too many threads for the; number of events to be calculated. This caused a `std::size_t` underflow in this line:; ```C++; // roofit/batchcompute/src/RooBatchCompute.cxx; batches.setNEvents(nEvents - idx * batches.getNEvents());; ```; And then the computation tried to access entries that were out of; bounds. This commit adds one more line to reset the number of threads to how; many are needed. Like this we avoid the underflow and also spawing; unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,; such that the BatchMode tests are also run in the CI and we can avoid; problems like this in the future. Before, the interpreted tests were not declared as longtests, and the; compiled versions were not. This is now flipped, such that the compiled; BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10754:615,test,tests,615,https://root.cern,https://github.com/root-project/root/pull/10754,4,['test'],['tests']
Testability,"There was an evil hack in `RooAbsOptTestStatistic`:. ```c++; _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;; ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13639:383,test,test,383,https://root.cern,https://github.com/root-project/root/pull/13639,1,['test'],['test']
Testability,"There was some naming inconsistency between `minuit2-*` and `minuit2_*` CMake options; this standardizes that to match ROOT (`minuit2_*`); due to a mismatch, mpi and openmp could not be enabled in the standalone build. This also fixes an error in commit 1a75a687f19 that has incorrect CMake syntax (mixing `set_property` and `set_target_properties` style - would only affect CMake < 3.9 due to surrounding if statement). Running tests with MPI enabled will actually try to run the tests with MPI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1809:429,test,tests,429,https://root.cern,https://github.com/root-project/root/pull/1809,2,['test'],['tests']
Testability,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```; Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V ; UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl; Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl; Add coverage exclude regular expressions.; SetCTestConfiguration:CMakeCommand:/usr/bin/cmake; UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl; Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl; Test project /scratchnvme/bendavid/rootdev2/build; Constructing a list of tests; Ignore test: roottest-cling-parsing-semicolon; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 76; Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake""; 76: Environment variables: ; 76: ROOT_HIST=0; 76: Test timeout computed to be: 1500; 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc; 76: [==========] Running 104 tests from 3 test suites.; 76: [----------] Global test environment se",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-741456188:52,test,tests,52,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-741456188,4,['test'],"['test-corethreadtestUnit', 'tests']"
Testability,"There's a new libcmaes 0.9.4 version that has been successfully tested against this PR to Root. Most importantly, it implements a workaround for a bug in clang, thus allowing libcmaes to be successfully built with clang.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/40#issuecomment-69172177:64,test,tested,64,https://root.cern,https://github.com/root-project/root/pull/40#issuecomment-69172177,1,['test'],['tested']
Testability,"There's no automated checking of that plot. Therefore, we won't know if something changes. I would therefore advise to *not* compute it in the doxygen job, and write a proper test for it.; Otherwise, the dox job gets mistaken as a test, but nothing gets checked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6107#issuecomment-667916056:175,test,test,175,https://root.cern,https://github.com/root-project/root/pull/6107#issuecomment-667916056,2,['test'],['test']
Testability,"There's no need for it, as in the MT case we build one output tree; per task (i.e. per input tree cluster), so there will be no need; of resetting output branch addresses. TODO: test that this is still true when friends are present (I don't think it is?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2207:178,test,test,178,https://root.cern,https://github.com/root-project/root/pull/2207,1,['test'],['test']
Testability,There's nothing inherently wrong with linking libCling against an llvm with visible symbols. If it's broken (you reported privately that a gtest is broken by this) then we should fix / redesign the test instead of requiring symbols to be hidden. The reason builtin-llvm hides its symbols is to allow frameworks to link against ROOT *and* their own llvm. Framework maintainers are experts enough to figure that that providing an external llvm *and* a *different* llvm is calling for trouble.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4736#issuecomment-572057231:198,test,test,198,https://root.cern,https://github.com/root-project/root/pull/4736#issuecomment-572057231,1,['test'],['test']
Testability,"There's something that looks like a fix for this TChainParsing test failure in recent master, let me try to rebase that branch and see if that helps...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5062#issuecomment-591454596:63,test,test,63,https://root.cern,https://github.com/root-project/root/pull/5062#issuecomment-591454596,1,['test'],['test']
Testability,These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn; - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. ; - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13634:234,test,tests,234,https://root.cern,https://github.com/root-project/root/pull/13634,1,['test'],['tests']
Testability,"These changes achieve two things:. 1. Performance improvement of CUDA backend by factor two by better organizing the copies from host to device; 2. Avoid the hardcoded maximum number of input variables for the compute function, which was a problem for RooAddPdfs with many components. More detail in the commit descriptions. Here are the reproduced CHEP 2023 plots with this PR:. ![benchRooFitBackends](https://github.com/root-project/root/assets/6578603/785828ac-5265-449a-833f-ff9ea018c649). ![benchRooFitUnbinned](https://github.com/root-project/root/assets/6578603/f79a8cc5-bb12-4efb-9917-790a06fe2f63). The older benchmark results can be found in this CHEP presentation:; https://indico.jlab.org/event/459/contributions/11570/attachments/9440/13688/roofit_heterogeneous_chep_2023_with_transitions.pdf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13556:618,benchmark,benchmark,618,https://root.cern,https://github.com/root-project/root/pull/13556,1,['benchmark'],['benchmark']
Testability,"These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. Fixes https://github.com/root-project/root/issues/13543. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13902:319,test,tested,319,https://root.cern,https://github.com/root-project/root/pull/13902,1,['test'],['tested']
Testability,"These changes are fine, but could probably be added to #1092 to be tested together. Otherwise, feel free to just merge and rebase the other PR, I don't think this one has anything controversial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1098#issuecomment-333511544:67,test,tested,67,https://root.cern,https://github.com/root-project/root/pull/1098#issuecomment-333511544,1,['test'],['tested']
Testability,"These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14018:741,test,tested,741,https://root.cern,https://github.com/root-project/root/pull/14018,1,['test'],['tested']
Testability,These changes backport the commits that add numba support in cppyy master to PyROOT. It currently supports passing objects to C++ functions and returning builtin types from the functions inside numba JIT'ed code. It also supports accessing data members and methods from class types. The [tests added](https://github.com/sudo-panda/roottest/compare/502450f83a346aa1267fc4f48b6d749fa6038611..numba) can also be used to understand the support that is provided through this PR. ## Checklist:. - [ ] Pass all python tests in `roottest` (1 test failing - `roottest-python-memory-memory`); - [ ] Add numba test to `roottest`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11096:288,test,tests,288,https://root.cern,https://github.com/root-project/root/pull/11096,4,['test'],"['test', 'tests']"
Testability,"These changes passed all tests before, so I doubt the failures are related. If libCore got built and linked correctly, then this PR should be fine, as it's just a refactoring on how to build libCore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10690#issuecomment-1401487159:25,test,tests,25,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1401487159,1,['test'],['tests']
Testability,"These changes seem to have more implications than I thought (I only ran the relevant tests, not others). Will investigate the test failures asap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5140#issuecomment-597840578:85,test,tests,85,https://root.cern,https://github.com/root-project/root/pull/5140#issuecomment-597840578,2,['test'],"['test', 'tests']"
Testability,"These changes test and provide the functionality to access quantities called ""mybranch.mysubbranch""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1701:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/1701,1,['test'],['test']
Testability,"These commands, bound respectively to `ESC l` and `ESC u`, should {lower,upper}case the next word; however, only the first character was changed. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10144:167,test,tested,167,https://root.cern,https://github.com/root-project/root/pull/10144,1,['test'],['tested']
Testability,"These commits fix the tab completion for JupyROOT notebooks. This fixes [ROOT-8346](https://sft.its.cern.ch/jira/browse/ROOT-8346) and [ROOT-8347](https://sft.its.cern.ch/jira/browse/ROOT-8347). There still seem to be issues though, for example; ```; TString a (SHIFT+ENTER); a.D(TAB)a(TAB); ```; completes to; ```; a.Data()ta(); ```; But to me this seems to be caused outside of ROOT. The completions were tested using this [test](https://gist.github.com/suhlatwork/ef20df8ffeef8cf9212d6535ef2e8137#file-testtcjupyroot-py).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/559:407,test,tested,407,https://root.cern,https://github.com/root-project/root/pull/559,3,['test'],"['test', 'tested', 'testtcjupyroot-py']"
Testability,These commits fix two GenVector failing [tests](http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=342982).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/502:41,test,tests,41,https://root.cern,https://github.com/root-project/root/pull/502,1,['test'],['tests']
Testability,"These differences were not there when last time we updated to v6.24 branch commit b802a6b (see https://github.com/cms-sw/cmsdist/pull/6730#issuecomment-799704333 and https://cmssdt.cern.ch/SDT/jenkins-artifacts/baseLineComparisons/CMSSW_11_3_X_2021-03-14-2300+963134/41710/validateJR.html ). . It could be that some of latest cmssw changes might have caused these differences, I am re-running the tests based on latest cmssw release now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-811685526:397,test,tests,397,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-811685526,1,['test'],['tests']
Testability,"These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:; * the original implementation by Fred James, with parameters for; - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`; - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;; * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:; - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and; - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;; * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and; * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8383:1173,test,tests,1173,https://root.cern,https://github.com/root-project/root/pull/8383,1,['test'],['tests']
Testability,These failures seem unrelated. We have run successfully the test suite on windows last time. After that the changes were squashing the review comments into the relevant commit to keep good history.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1415093433:60,test,test,60,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1415093433,1,['test'],['test']
Testability,These files are available in the source tree. By trying these local copies before trying the remote copies it is possible to run the tests without network access.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/403:133,test,tests,133,https://root.cern,https://github.com/root-project/root/pull/403,1,['test'],['tests']
Testability,"These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```; core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]; extern char *getenv ();; ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13764:538,test,tested,538,https://root.cern,https://github.com/root-project/root/pull/13764,1,['test'],['tested']
Testability,These fixes replace using MethodDNN with MethodDL in tests and tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5704:53,test,tests,53,https://root.cern,https://github.com/root-project/root/pull/5704,1,['test'],['tests']
Testability,"These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function.; This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:; ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5365:700,log,log,700,https://root.cern,https://github.com/root-project/root/pull/5365,1,['log'],['log']
Testability,These names collided with those in; tree/dataframe/test/dataframe_samplecallback.cxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9259:51,test,test,51,https://root.cern,https://github.com/root-project/root/pull/9259,1,['test'],['test']
Testability,These need to be corrected (`///<!` instead of `///<`):; ```; tmva//tmva/inc/TMVA/RuleFitAPI.h:193: mutable MsgLogger fLogger; ///< message logger; tmva//tmva/inc/TMVA/Reader.h:161: mutable MsgLogger* fLogger; ///< message logger; tmva//tmva/inc/TMVA/Config.h:145: mutable MsgLogger* fLogger; ///< message logger; tmva//tmva/inc/TMVA/Types.h:181: mutable MsgLogger* fLogger; ///< message logger; tmva//tmva/inc/TMVA/KDEKernel.h:88: mutable MsgLogger* fLogger; ///< message logger; tmva//tmva/inc/TMVA/PDEFoamKernelBase.h:44: mutable MsgLogger* fLogger; //! message logger; tmva//tmva/inc/TMVA/QuickMVAProbEstimator.h:37: mutable MsgLogger* fLogger;; tmva//tmva/inc/TMVA/OptimizeConfigParameters.h:97: mutable MsgLogger* fLogger; ///< message logger; tmva//tmva/inc/TMVA/LDA.h:78: mutable MsgLogger *fLogger; ///< message logging service; tmva//tmva/inc/TMVA/FitterBase.h:88: mutable MsgLogger* fLogger; // message logger; tmva//tmva/inc/TMVA/ModulekNN.h:163: mutable MsgLogger* fLogger; // message logger; tmva//tmva/inc/TMVA/Timer.h:96: mutable MsgLogger* fLogger; ///< the output logger; tmva//tmva/inc/TMVA/RuleFit.h:173: mutable MsgLogger* fLogger; ///< message logger; tmva//tmva/inc/TMVA/Tools.h:227: mutable MsgLogger* fLogger;; tmva//tmva/inc/TMVA/RuleCut.h:97: mutable MsgLogger* fLogger; // message logger; tmva//tmva/inc/TMVA/ExpectedErrorPruneTool.h:77: mutable MsgLogger* fLogger; ///< message logger; tmva//tmva/inc/TMVA/ROCCalc.h:77: mutable MsgLogger* fLogger; //! message logger; tmva//tmva/inc/TMVA/CostComplexityPruneTool.h:86: mutable MsgLogger* fLogger; //! output stream to save logging information; tmva//tmva/inc/TMVA/GeneticAlgorithm.h:101: mutable MsgLogger* fLogger; // message logger; tmva//tmva/inc/TMVA/VarTransformHandler.h:48: mutable MsgLogger* fLogger; //! message logger; tmva//tmva/inc/TMVA/SimulatedAnnealing.h:118: mutable MsgLogger* fLogger; ///< message logger; tmva//tmva/inc/TMVA/GeneticPopulation.h:99: mutable MsgLogger* fLogger; ///< message logger; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792#issuecomment-1925352541:140,log,logger,140,https://root.cern,https://github.com/root-project/root/issues/9792#issuecomment-1925352541,20,['log'],"['logger', 'logging']"
Testability,"These new functionalities would really benefit from some tests if you can, to be added in https://github.com/root-project/roottest/tree/master/python/cmdLineUtils",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14419#issuecomment-2045522496:57,test,tests,57,https://root.cern,https://github.com/root-project/root/pull/14419#issuecomment-2045522496,1,['test'],['tests']
Testability,"These symbols may not be found automatically. See also upstream issue https://github.com/llvm/llvm-project/issues/61289. This fixes the test `DynamicLibraryManager/cached_realpath.C`, approach by Lang Hames.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13286:136,test,test,136,https://root.cern,https://github.com/root-project/root/pull/13286,1,['test'],['test']
Testability,"These test failures are unexpected, will investigate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5356#issuecomment-613900297:6,test,test,6,https://root.cern,https://github.com/root-project/root/pull/5356#issuecomment-613900297,1,['test'],['test']
Testability,These tests are expected to fail at the moment. RNTupleDS needs a little tweak to use RRVecField instead of RVectorField to read collections. Re-test and merge after #10623 is in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10621:6,test,tests,6,https://root.cern,https://github.com/root-project/root/pull/10621,2,['test'],"['test', 'tests']"
Testability,These tests ensure that the functionality of the current PyROOT is as well available in experimental PyROOT. No explicit pythonizations are added since the feature is now provided directly by CPyCppyy.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3475:6,test,tests,6,https://root.cern,https://github.com/root-project/root/pull/3475,1,['test'],['tests']
Testability,These tests failures are not related. Some of them are due to missing backports.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5353#issuecomment-615131549:6,test,tests,6,https://root.cern,https://github.com/root-project/root/pull/5353#issuecomment-615131549,1,['test'],['tests']
Testability,"These usages of `R__ASSERT` were meant to check preconditions; that are guaranteed by the program's logic, i.e. are only; relevant for catching bugs in our code. Let's disable them; in production code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9268:100,log,logic,100,https://root.cern,https://github.com/root-project/root/pull/9268,1,['log'],['logic']
Testability,"These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16661:13,test,tests,13,https://root.cern,https://github.com/root-project/root/pull/16661,7,['test'],"['test', 'tests']"
Testability,"Third time's a charm: https://github.com/root-project/root/pull/11205. @kgizdov ; > If including the forward declaration in a CMake test compiles, you set a variable that enables it in the code; otherwise, the forward declaration is switched off in the code. What am I missing?. The case where the forward declaration doesn't work *and* the `json_fwd.hpp` header is not provided. In the PR linked above, I propose to just error out in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1219172690:132,test,test,132,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1219172690,1,['test'],['test']
Testability,"This LGTM (also in view of https://github.com/root-project/roottest/pull/1118, thanks for the test!), but is now marked as a Draft - what does this mean?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15408#issuecomment-2096375277:94,test,test,94,https://root.cern,https://github.com/root-project/root/pull/15408#issuecomment-2096375277,1,['test'],['test']
Testability,This PR achieves several things in the RooFit HS3 format:. * JSON -> WS -> JSON closure in the HistFactory test (the JSON is now invariant); * Fix export of RooDataSets with only one entry; * Automatically export RooDataSets that represents binned datasets to the same format at binned datasets; * Also export special `Lumi` parameter from HistFactory; * Achieve exactly the same fit results with the same parameters when exporting HistFactory workspace to JSON and importing it back,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12594:107,test,test,107,https://root.cern,https://github.com/root-project/root/pull/12594,1,['test'],['test']
Testability,This PR actually tests the noimt setup which seems to have passed now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5448#issuecomment-618873775:17,test,tests,17,https://root.cern,https://github.com/root-project/root/pull/5448#issuecomment-618873775,1,['test'],['tests']
Testability,"This PR addresses the TODO comments to remove the superfluous public getters / properties logic in `TreeHeadNode`. Currently, just parses the user arguments in the `__init__` method and stores the needed attributes. My idea is that in the end we'll only need to store `npartitions` and `tree` (which are always needed) plus `defaultbranches` and `friendinfo` as ""optional"" class attributes (meaning they are initialized to `None` and changed if some conditions apply). . For simplicity, in this PR I still leave `treename` and `inputfiles` attributes which are needed in the `Ranges.get_clusters` function. The next PRs will address:; * The assumption we only have one unique treename in the RDataFrame; * Change in `Ranges.get_clusters` to accept a `TTree` instance as argument, pairing it with new C++ functions in `ROOT::Internal::TreeUtils` to retrieve a vector of clusters (plus some other metadata) depending if it's a TTree or TChain. If the logic for this PR is approved I'll add more docs and commit messages",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8816:90,log,logic,90,https://root.cern,https://github.com/root-project/root/pull/8816,2,['log'],['logic']
Testability,"This PR addresses the code quality issues identified by @Axel-Naumann and @lmoneta . One of the points raised can be tackled in multiple ways. The purpose of publishing this PR now with the **[Do Not Merge]** tag is to facilitate discussion (see last section). I can then apply what we agree upon, update the PR and Lorenzo can merge. . ## Solved; The following issues have been addressed (1 commit per issue more or less): . * Compilation warnings are solved.; * Assumptions about the size of passed matrices are asserted where appropriate.; * Flow of control in unit tests is simplified by exiting early with an error code when a test fails.; * Floating point arithmetic issue solved when checking whether a float is actually an int. ## Discussion. One of the comments has to do with the overly verbose signature of propagation functions in all architectures. This is caused because we always need to pass the convolution parameters besides the actual inputs and outputs (strides, padding, kernel sizes are already 7 parameters that are often passed together). . One proposed solution is to capture them in a struct (perhaps called `ConvParams`) and then pass this struct around instead. I like this approach because it greatly simplifies the signatures. . An alternative approach could be to let the layer methods pass a pointer (or reference) to the calling object (`this`). The advantage is that the verbose functions accept different parameters, for example the forward prop expects the convolution parameters (stride, padding, kernel size) while the backward pass expects the input and output size. Passing a reference to the layer itself will allow each function to pick what it needs, thus allowing us to simplify all calls with a common strategy. I would like to hear opinions on which method to choose.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2321:514,assert,asserted,514,https://root.cern,https://github.com/root-project/root/pull/2321,3,"['assert', 'test']","['asserted', 'test', 'tests']"
Testability,"This PR addresses the report in [ROOT-9859](https://sft.its.cern.ch/jira/browse/ROOT-9859) about the change in behaviour of `__str__`, which now relies on cling to obtain a pretty printing for a class. With this PR, if what we obtain from cling is not pretty but just an address, we fall back to `__repr__` in `__str__`. The PR contains the changes for both current and experimental PyROOT, together with their respective tests and tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3152:422,test,tests,422,https://root.cern,https://github.com/root-project/root/pull/3152,1,['test'],['tests']
Testability,"This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15116:725,benchmark,benchmark,725,https://root.cern,https://github.com/root-project/root/pull/15116,1,['benchmark'],['benchmark']
Testability,This PR adds a message viewing accessible through top left menu.; At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7270:202,log,log,202,https://root.cern,https://github.com/root-project/root/pull/7270,1,['log'],['log']
Testability,"This PR adds a new callback to the PyKeras method.; I've build ROOT without any errors and run the ctests and all of them passed. . You can try out this new callback with:; `sudo pip install keras --upgrade`; `sudo pip install tensorflow --upgrade`. And then run: `python tutorials/tmva/keras/ClassificationKeras.py`. The callback will create a new directory called 'logs'.; Then you can call while or after training tensorboard: `tensorboard --logdir=./logs`; Now you can open the link from your terminal and visualize the network and training. ; The `ClassificationKeras.py` script, seems to be not compatible with the Keras 2.x API right now, therefore you can revert the changes of this PR in this specific script after testing. More information on TensorBoard: https://www.tensorflow.org/get_started/summaries_and_tensorboard. Also pointing to the author of the PyKeras implementation: @stwunsch. Thanks in advance for reviewing this PR!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1353:367,log,logs,367,https://root.cern,https://github.com/root-project/root/pull/1353,4,"['log', 'test']","['logdir', 'logs', 'testing']"
Testability,"This PR adds a new data source for `RDataFrame` that is able to provide data from SQlite `SELECT` queries. It will be useful for cvmfs, where we have file catalogs and monitoring information in sqlite files. For instance, one can do. auto rdf = ROOT::RDF::MakeSqliteDataFrame(""catalog.sqlite"", ""select * from catalog"");; auto h = rdf.Define(""lname"", ""name.length()"").Histo1D(""lname"");. to show the distribution of file name sizes. There are probably more use cases, for instance sqlite export of conditions data. This is work in progress, I'm posting it for early comments and feedback. My open points are. - Unit and integration tests are yet to be done; - The data source work single-threaded only at the moment. I initially thought it might be enough to return only a single row in `GetEntryRanges()` to make it thread-safe but that's apparently not enough. So I'm now thinking to wrap `SetEntry()` and `GetEntryRanges()` in a mutex.; - The code is not reusing `TSQLiteServer`. It felt like it requires stretching the `TSQLServer` interface in perhaps unwanted ways, for saving only a handful of direct sqlite API calls. On the other hand, with (probably quite a bit) more work it might be possible to have a more general data source that works on any SQL result set.; - Determining column types in SQlite is tricky as it is dynamically typed and in principle each row can have different column types. If a table column is queried as is, I can use the default/declared column type. For expressions, I'll use the type of the first row of the result set. Still it can result in a column to be of type `NULL` where subsequent rows actually have meaningful values. My guess is that the current heuristic is practical enough, and of course the user can formulate the `SELECT` query to avoid ambiguity.; - It would not be impossible to add support for remote reading of sqlite files. To do so, one can add a custom implementation of an sqlite virtual file system to have data pouring in directly from HTT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2322:630,test,tests,630,https://root.cern,https://github.com/root-project/root/pull/2322,1,['test'],['tests']
Testability,"This PR adds a new version of the `RDataSource::GetColumnReaders` method. This new version allows the implementation of per-datasource, lazy column readers that know how to communicate with the concrete associated datasource type. As a consequence, datasource implementations are not required to load; values of all required columns when `RDataSource::SetEntry` is called, but; the loading can be delayed to the moment in which a value is actually; needed. In case of strict upstream `Filters`, this should result in; less work performed and therefore improved runtimes. For the `lhcb` benchmark at https://github.com/jblomer/iotools, using the new lazy column readers for `RNTupleDS` results in a 40% runtime improvement.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6348:586,benchmark,benchmark,586,https://root.cern,https://github.com/root-project/root/pull/6348,1,['benchmark'],['benchmark']
Testability,This PR adds a test for #14710,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16763:15,test,test,15,https://root.cern,https://github.com/root-project/root/pull/16763,1,['test'],['test']
Testability,"This PR adds a test to check the right behaviour when reading character arrays into Python strings, as reported in [ROOT-9768](https://sft.its.cern.ch/jira/browse/ROOT-9768). In modern Cppyy (and therefore in experimental PyROOT), character arrays are treated differently than numeric arrays: they are converted into Python strings taking into account the '\0' character that marks end of string in C.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2925:15,test,test,15,https://root.cern,https://github.com/root-project/root/pull/2925,1,['test'],['test']
Testability,"This PR adds an extra factory function for creating an `RNTupleImporter` by directly providing a pointer to the `TTree` to import, rather than the tree name and file name. With this, it should also become possible to import `TChain`s down the road, but this will require another PR. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12475:289,test,tested,289,https://root.cern,https://github.com/root-project/root/pull/12475,1,['test'],['tested']
Testability,"This PR adds branch type inference to Histo1D with weights, as well as Histo2D, Histo3D, Profile1D and Profile2D both with and without weights.; Code has been simplified. Docs have been updated. A related PR in roottest introduces testing for the new functionality.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/532:231,test,testing,231,https://root.cern,https://github.com/root-project/root/pull/532,1,['test'],['testing']
Testability,This PR adds in TreeProcessorMP support for processing TTree datasets filtering via a TEntryList.; A new set of Process methods taking a TEntryList * as 3rd argument has been added.; A test for the new functionality is ready to be pushed in roottest once this is pushed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/573:185,test,test,185,https://root.cern,https://github.com/root-project/root/pull/573,1,['test'],['test']
Testability,"This PR adds some (mostly size and compression-related) methods to the `RNTupleInspector` utility class. There are some small TODOs left, but I first wanted to collect some feedback. - [x] tested changes locally; - [x] updated the docs (if necessary); - [ ] add support for all field structures in `GetColumnsForField`; - [ ] decide on when to collect the (size) data: on creation of the `RNTupleInspector` object (how it is done now), or in a more on-the-fly approach",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12395:189,test,tested,189,https://root.cern,https://github.com/root-project/root/pull/12395,1,['test'],['tested']
Testability,"This PR adds some (mostly size and compression-related) methods to the `RNTupleInspector` utility class. There are some small TODOs left, but I first wanted to collect some feedback. - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] add support for all field structures in `GetColumnsForField`; - [x] decide on when to collect the (size) data: on creation of the `RNTupleInspector` object (how it is done now), or in a more on-the-fly approach",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12396:189,test,tested,189,https://root.cern,https://github.com/root-project/root/pull/12396,1,['test'],['tested']
Testability,"This PR adds support for `std::multimap` and `std::unordered_multimap` fields. The on-disk representation is exactly the same as `std::(unordered)_map`, so the only addition is the type name resolution for type-erased fields and the `RField` template specializations. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16331:289,test,tested,289,https://root.cern,https://github.com/root-project/root/pull/16331,1,['test'],['tested']
Testability,"This PR adds support for `std::multiset` and `std::unordered_multiset` fields. The on-disk representation is exactly the same as `std::(unordered)_set`, so the only addition is the type name resolution for type-erased fields and the `RField` template specializations. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16330:289,test,tested,289,https://root.cern,https://github.com/root-project/root/pull/16330,1,['test'],['tested']
Testability,"This PR adds support for defining, parsing and generating code for custom operator in TMVA SOFIE. SOFIE is being developed following the ONNX standards, but cases may arise when a particular operator is not defined or developed. In those scenarios, an user can still integrate the operator using the custom operator implementation. . For adding a custom operator in `RModel`, the user has to define the input tensor names, output tensor names, attribute values, output tensor shapes and a header file name. The `Generate()` function for the custom operator must be defined in a separate header file under a namespace, which is called for computing the output tensor values. . ## Checklist:; - [x] `ROperator_Custom` class; - [x] Including usage in generated code; - [x] Tests for ROperator_Custom operator; - [ ] Tutorials explaining the usage",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11065:770,Test,Tests,770,https://root.cern,https://github.com/root-project/root/pull/11065,1,['Test'],['Tests']
Testability,"This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress; - [x] Support for Keras Convolution Layers(Conv2D) ; - [x] Support for `padding=""valid""`; - [x] Support for `padding=""same""`; - [x] Tests. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9666:250,Test,Tests,250,https://root.cern,https://github.com/root-project/root/pull/9666,2,"['Test', 'test']","['Tests', 'tested']"
Testability,"This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress; - [x] Support for PyTorch Convolution Layers (Conv2D) ; - [x] Support for Keras Convolution Layers(Conv2D) ; - [x] Support for `padding=""valid""`; - [x] Support for `padding=""same""`. ## Checklist:; - [ ] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8974:321,test,tested,321,https://root.cern,https://github.com/root-project/root/pull/8974,1,['test'],['tested']
Testability,This PR adds support for parsing Convolution layers from PyTorch models into an RModel object. Progress; - [x] Support for PyTorch Convolution Layers (Conv2D); - [x] Tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9119:166,Test,Tests,166,https://root.cern,https://github.com/root-project/root/pull/9119,1,['Test'],['Tests']
Testability,This PR adds support for parsing SELU and Sigmoid Activation from Keras models into an RModel object. ## Checklist:. - [x] Tested changes locally; - [x] Tests for Parsing Keras & PyTorch models; - [x] Add ONNX model with Selu & Sigmoid operator for tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9000:123,Test,Tested,123,https://root.cern,https://github.com/root-project/root/pull/9000,3,"['Test', 'test']","['Tested', 'Tests', 'tests']"
Testability,This PR adds support for parsing the Keras Reshape layer in SOFIE RModel. ## Checklist:; - [x] Parsing function; - [x] Tests; - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11055:119,Test,Tests,119,https://root.cern,https://github.com/root-project/root/pull/11055,2,"['Test', 'test']","['Tests', 'tested']"
Testability,"This PR adds support for the LZ4 compression algorithm (branch has been significantly cleaned up). In testing with the sample `Event` object found in the `test` subdirectory, we found that the resulting files were about 13% larger than the default compression settings. Deserialization speed was 95% of the uncompressed speed. As discussed with @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/590:102,test,testing,102,https://root.cern,https://github.com/root-project/root/pull/590,2,['test'],"['test', 'testing']"
Testability,"This PR adds the RNTupleInspector class to the RNTuple utility package and can be used for (static) inspection of RNTuples. It currently provides basic information on the size and compression of a given RNTuple. Next steps will adding functionality for for getting size and compression data on a per-column and per-type basis, and to provide a way to visualize this information. ## Checklist:. -[x] Add unit tests; -[x] Add usage documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12013:408,test,tests,408,https://root.cern,https://github.com/root-project/root/pull/12013,1,['test'],['tests']
Testability,"This PR adds the `RNTupleDescriptor::GetColumnIterable()` method, which returns an iterator over all (logical) columns of the RNTuple (without having to specify a field). Some questions to still consider:; 1. The original `RNTupleDescriptor::GetColumnIterable(const RFieldDescriptor &field)` method returns an iterator over the _logical_ columns. Would it make more sense to return physical columns for this method or should we stay consistent across methods? For the `RNTupleInspector`, we're interested in physical columns but if we have the logical columns we could filter out the non-physical ones.; 2. The original method only returns the columns for the specified field, without considering its potential sub-fields. Would it be useful to add a flag to toggle whether the columns for sub-fields should be included (in a separate PR)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12893:102,log,logical,102,https://root.cern,https://github.com/root-project/root/pull/12893,2,['log'],['logical']
Testability,This PR adds the `RNTupleInspector` functionality to get a histogram showing the distribution of the compressed page sizes for either a single column (provided its physical ID) or all columns of a given type. The lower and upper bounds of the returned histogram are determined by the smallest and largest page size. The number of bins can be provided when calling the function (the default is set to 64). ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14099:426,test,tested,426,https://root.cern,https://github.com/root-project/root/pull/14099,1,['test'],['tested']
Testability,"This PR adds the feature to get a histogram representing different possible column type-related properties. These properties are the type count, number of elements per type, compressed size per type and uncompressed size per type. The current version automatically sets the histogram title based on the information it shows. The title can be changed after returning it using `TH1::SetTitle`. An alternative could be to add another argument which has the default value that is currently used but can be used to provided an alternative title. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13715:562,test,tested,562,https://root.cern,https://github.com/root-project/root/pull/13715,1,['test'],['tested']
Testability,"This PR adds the following fixes and improvements to `RNTupleInspector::GetPageSizeDistribution`:; * When the provided column type is not present in the RNTuple being inspected, an empty histogram is returned.; * When a provided column ID is not present in the RNTuple being inspected, an exception is thrown.; * Default axis titles have been added.; * An overloaded method to provide multiple column IDs at once has been added. The method taking only one ID has been adapted to use this overload.; * The option to provide multiple column types at once has been added. Here, a `THStack` is returned rather than a `TH1D`. The method taking only one type has been adapted to use this overload. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14323:713,test,tested,713,https://root.cern,https://github.com/root-project/root/pull/14323,1,['test'],['tested']
Testability,"This PR adds the functionality to print per-column type information for a given RNTuple. Output can be formatted in both a text-based table as well as CSV (and may be extended with more formats where desired). ## Example. For an RNTuple with 75 rows each containing one [ComplexStructUtil](https://github.com/root-project/root/blob/3acc0e601bd74ffd876c755069e8e989d922521c/tree/ntupleutil/v7/test/CustomStructUtil.hxx#L36) field, the default (table-formatted) output is as follows:. ```; root [1] inspector->PrintColumnTypeInfo(); column type | count | # elements | bytes on disk | bytes in memory; ----------------|---------|-----------------|-----------------|-----------------; SplitIndex64 | 2 | 150 | 72 | 1200 ; SplitReal32 | 4 | 300 | 189 | 1200 ; SplitUInt32 | 3 | 225 | 123 | 900 ; ```. And the CSV-formatted output:. ```; root [2] inspector->PrintColumnTypeInfo(ROOT::Experimental::ENTupleInspectorPrintFormat::kCSV); columnType,count,nElements,onDiskSize,inMemSize; SplitIndex64,2,150,72,1200; SplitReal32,4,300,189,1200; SplitUInt32,3,225,123,900; ```. Additionally, it is possible to define where the output should be written to (default is stdout).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13699:392,test,test,392,https://root.cern,https://github.com/root-project/root/pull/13699,1,['test'],['test']
Testability,"This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15985:751,test,tested,751,https://root.cern,https://github.com/root-project/root/pull/15985,1,['test'],['tested']
Testability,"This PR adds to RooFit:. 1. Parallelism to gradient calculation in Minuit2 minimization in the form of a extensible interface in the RooFit::MultiProcess package.; 2. A refactored test statistics framework with cleaner separation of computation and physics/statistics concepts than in existing RooAbsTestStatistic derived classes. Currently, RooFit::TestStatistics is part of roofitcore. Note: `TestStatistics/likelihood_builders` still has to be finished, this will be done in the coming few weeks.; 3. RooFitZMQ, a wrapper of ZeroMQ functionality used in RooFit::MultiProcess for communication between processes. Modified after [code](https://gitlab.cern.ch/raaij/generate_and_sort/-/tree/master/ZMQ), contributed by @roelaaij. RooFitZMQ maybe still needs some attention, because in its current form it includes a big part of the libzmq source tree (needed for ppoll, see below), which I'm sure causes licensing issues (it's LGPLv3). I'm open to suggestions on how to handle this. To make the above additions possible, some modifications to both RooFit and non-RooFit code were made as well:. 1. In `Minuit2`:; 1. We added a subclass of the AnalyticalGradientCalculator called the ExternalInternalGradientCalculator. Whereas the AGC assumes that the gradient that is passed to it (from outside of Minuit2) is in normal parameter space, the EIGC allows its (External) user to use Minuit2 ""Internal"" parameter space, i.e. the parameter space that may be bounded into some range using transformation functions. This allowed us to exactly (floating point bit-wise) replicate the Minuit2 gradient calculation outside of Minuit2 itself, allowing us to parallelize this gradient calculation process exactly without having to worry about breaking Minuit2. The replication, `NumericalDerivatorMinuit2`, was based on earlier work by @lmoneta who already had separated out the bulk of the gradient calculation code from Minuit2.; 2. To make this all work, we also had to upgrade precision of the transformation",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:180,test,test,180,https://root.cern,https://github.com/root-project/root/pull/8294,3,"['Test', 'test']","['TestStatistics', 'test']"
Testability,"This PR adds two sets of pythonizations to `TSeqCollection` and its subclasses:; - Injection of item access methods (`__getitem__`, `__setitem__`, `__delitem__`), both for integer indices and slices.; - Injection of Python-list-like methods (`insert`, `pop`, `reverse`, `sort`, `index`). The PR also includes the corresponding unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3387:332,test,tests,332,https://root.cern,https://github.com/root-project/root/pull/3387,1,['test'],['tests']
Testability,"This PR adds vectorized implementations of several functions in TMath. It is a work in progress, just to receive early feedback. Currently, the following functions are vectorized and tested:. - TMath::Min; - TMath::Gaus; - TMath::BreitWigner; - TMath::CauchyDist; - TMath::LaplaceDist; - TMath::LaplaceDistI. TODO:; - [ ] Refactor the tests to avoid repeated code.; - [ ] Implement remaining functions.; - [ ] Discuss what to do with functions that, i.e., receive an Int_t and return a Double_t. When vectorizing this kind of patterns, one problem arises: the length of integers and double vectors cannot be assumed to be the same. Any comment is more than welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/655:183,test,tested,183,https://root.cern,https://github.com/root-project/root/pull/655,2,['test'],"['tested', 'tests']"
Testability,"This PR adds vectorized implementations of the following TMath functions using VecCore backend :. - Log2; - Breit-Wigner; - Gaus; - LaplaceDist; - LaplaceDistI; - Freq; - Bessel I0, I1, J0, J1. The first batch includes functions for which a definite speedup is obtained. Left out are the ones with more conditional branches. Work is ongoing to implement them as well. [Here](https://github.com/root-project/rootbench/pull/79) is the PR for benchmarks. Benchmarks from a trial run :; ```; ----------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------; BM_TMath_Log2 340895 ns 340801 ns 2042; BM_TMath_BreitWigner 42236 ns 42227 ns 16562; BM_TMath_Gaus 280188 ns 280130 ns 2476; BM_TMath_LaplaceDist 246254 ns 246176 ns 2834; BM_TMath_LaplaceDistI 291277 ns 291221 ns 2405; BM_TMath_Freq 388384 ns 388278 ns 1816; BM_TMath_BesselI0 283500 ns 283445 ns 2466; BM_TMath_BesselI1 327932 ns 327847 ns 2134; BM_TMath_BesselJ0 744044 ns 743897 ns 938; BM_TMath_BesselJ1 735381 ns 735235 ns 937; BM_VectorizedTMath_Log2 97462 ns 97433 ns 7079; BM_VectorizedTMath_BreitWigner 20773 ns 20769 ns 33494; BM_VectorizedTMath_Gaus 127413 ns 127385 ns 5519; BM_VectorizedTMath_LaplaceDist 118903 ns 118870 ns 5845; BM_VectorizedTMath_LaplaceDistI 130724 ns 130693 ns 5367; BM_VectorizedTMath_Freq 267444 ns 267389 ns 2590; BM_VectorizedTMath_BesselI0 177544 ns 177503 ns 3936; BM_VectorizedTMath_BesselI1 206571 ns 206523 ns 3370; BM_VectorizedTMath_BesselJ0 326378 ns 326312 ns 2144; BM_VectorizedTMath_BesselJ1 343600 ns 343531 ns 2014; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236:440,benchmark,benchmarks,440,https://root.cern,https://github.com/root-project/root/pull/2236,3,"['Benchmark', 'benchmark']","['Benchmark', 'Benchmarks', 'benchmarks']"
Testability,"This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7812:335,test,test,335,https://root.cern,https://github.com/root-project/root/pull/7812,2,['test'],"['test', 'tests']"
Testability,"This PR and their roottest sibling PR contain fixes for the following tests:. Roottest python basic tests:; - roottest-python-basic-basic; - roottest-python-basic-overload. Roofit tutorials fixed by the addition of a pythonisation to get the using declarations of `RooAbsData` into `RooDataHist`. This pythonisation will not be needed anymore when a general solution is provided by the bindings, mainly by merging this Cppyy patch into ROOT: https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/using_decls.diff; - tutorial-roofit-rf106_plotdecoration-py; - tutorial-roofit-rf610_visualerror-py; - pyunittests-pyroot-pyz-roodatahist-ploton; - tutorial-roofit-rf315_projectpdf-py; - tutorial-roofit-rf402_datahandling-py. Related to https://bitbucket.org/wlav/cppyy/issues/66/cppoverload-addmethod-cppoverload-clears; - tutorial-roofit-rf307_fullpereventerrors-py; - tutorial-roofit-rf706_histpdf-py. Some fixes for the following test, although it still can't be re-enabled due to https://bitbucket.org/wlav/cppyy/issues/145/enum-values-not-defined-as-constants; - roottest-python-basic-datatype. Some fixes for the following test, but still can't be re-enabled (more issues to investigate):; - roottest-python-regression-regression",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4294:70,test,tests,70,https://root.cern,https://github.com/root-project/root/pull/4294,4,['test'],"['test', 'tests']"
Testability,"This PR applies some fixes described in detail in the commit messages, with the goal to enable again the `IntegrateBins_SubRange` unit test which is done in the last commit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10269:135,test,test,135,https://root.cern,https://github.com/root-project/root/pull/10269,1,['test'],['test']
Testability,This PR back port some of the changes applied in https://github.com/root-project/root/pull/13634 ; to use .h5 files instead of .keras for the pymva and SOFIE tests. ; Without this change the building of the Keras parser tests of SOFIE fails,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14926:158,test,tests,158,https://root.cern,https://github.com/root-project/root/pull/14926,2,['test'],['tests']
Testability,This PR backports in 6.26 some fixes from master in the build configuration for SOFIE. . - backport fix from #PR 11481 (movie some Sofie parser definition in implementation); - backport fix from #PR 11545 (fix some issues with no rt modules); - backport fix from the tests #11529 (apply some fixes in the building of SOFIE tests),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11576:267,test,tests,267,https://root.cern,https://github.com/root-project/root/pull/11576,2,['test'],['tests']
Testability,"This PR brings coverage of RNTuple+RVec almost on par with RNTuple+std::vector, e.g. by templating some existing std::vector tests over the collection type. There is one issue: in `RNTuple.ComplexRVec`, the element type's constructor and destructor gets called a different number of times for RVec than for std::vector, but I _think_ RVec is right and std::vector is wrong because of https://github.com/root-project/root/issues/10520 . I'd like to hear what Jakob thinks though :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10665:125,test,tests,125,https://root.cern,https://github.com/root-project/root/pull/10665,1,['test'],['tests']
Testability,This PR can be merged only when Ubu24 tests are all passing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15542:38,test,tests,38,https://root.cern,https://github.com/root-project/root/pull/15542,1,['test'],['tests']
Testability,"This PR change the longtest labels for some of the tests. ; Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. ; Their running for every PR is essential. ; Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3426:51,test,tests,51,https://root.cern,https://github.com/root-project/root/pull/3426,6,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,"This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13726:600,test,tested,600,https://root.cern,https://github.com/root-project/root/pull/13726,1,['test'],['tested']
Testability,"This PR changes the way CPyCppyy is built to also generate its pcm and rootmap files. This is relevant to fix the `roottest-python-cling` tests, which use `TPython`, now in CPyCppyy. Moreover, the PR includes a few relevant CPyCppyy headers in the PCH and sets the `CLING_STANDARD_PCH`, to prevent Cppyy from checking the PCH, in the environment scripts of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3575:138,test,tests,138,https://root.cern,https://github.com/root-project/root/pull/3575,1,['test'],['tests']
Testability,"This PR completes the fix provided for ROOT-8935 with another fix for ROOT-10279, by preventing; the injection of the constants of a scoped enum into the scope of the enum. The bug surfaced as a result of modifying `PropertyProxy::Set` to fix ROOT-9835. There is still a pending issue identified while testing the fixes above: when a scoped enum belongs to the global namespace, once we do a lookup of that scoped enum its constants are added to the global space too and can be accessed as `ROOT.constant_name`, which is wrong. A subsequent PR will fix this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4246:302,test,testing,302,https://root.cern,https://github.com/root-project/root/pull/4246,1,['test'],['testing']
Testability,This PR concludes ROOT-8766. Tests for this functionality are added by a separate PR to roottest.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/535:29,Test,Tests,29,https://root.cern,https://github.com/root-project/root/pull/535,1,['Test'],['Tests']
Testability,This PR contains some follow-up changes to https://github.com/root-project/root/pull/8700 and https://github.com/root-project/root/pull/9078:. * avoid using `std::shared_ptr` for return values; * change copyright of roofitcore/TestStatistics to `(c) CERN` (requested by @Axel-Naumann in https://github.com/root-project/root/pull/8700#discussion_r738407080); * I used now the same copyright headers from https://github.com/root-project/root/pull/9078 also for the TestStatistics; * fix a build warning in non-debug mode; * don't install zmq.hpp header from builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9345:227,Test,TestStatistics,227,https://root.cern,https://github.com/root-project/root/pull/9345,2,['Test'],['TestStatistics']
Testability,This PR could also be used to update the reference file for [roottest_root_core_recursive_recursivewarning](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/182593/testReport/projectroot.roottest.root.core/recursive/roottest_root_core_recursive_recursivewarning/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13478#issuecomment-1682668527:188,test,testReport,188,https://root.cern,https://github.com/root-project/root/pull/13478#issuecomment-1682668527,1,['test'],['testReport']
Testability,"This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10123:288,test,tests,288,https://root.cern,https://github.com/root-project/root/pull/10123,1,['test'],['tests']
Testability,This PR enables globbing on ROOT_ADD_GTEST. Instead of specifying a test in CMake as ; ```; ROOT_ADD_GTEST(myTest test1.cxx test2.cxx test3.cxx); ```; This PR enables specifying it as:; ```; ROOT_ADD_GTEST(myTest test*.cxx); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/633:68,test,test,68,https://root.cern,https://github.com/root-project/root/pull/633,2,['test'],['test']
Testability,"This PR enhances the Max Pooling Layer in the following ways:. 1. **Increased test coverage.** Tests have been added for the backwards propagation, covering the cases where `depth > 1`, as well as overlapping receptive fields. The testing suite was also refactored using templates to eliminate code duplication. 2. **Bug Fix**. The newly added tests exposed a bug in the `Reference` implementation of back-propagation, in the case of overlapping receptive fields. The bug is resolved. 3. **CUDA implementation.** The GPU version is now fully functional in both forward and backward propagation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2175:78,test,test,78,https://root.cern,https://github.com/root-project/root/pull/2175,4,"['Test', 'test']","['Tests', 'test', 'testing', 'tests']"
Testability,This PR extends the support for `std::map` fields with `std::unordered_map` fields. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14089:105,test,tested,105,https://root.cern,https://github.com/root-project/root/pull/14089,1,['test'],['tested']
Testability,"This PR extends the support for `std::set` fields with `std::unordered_set` fields. N.B. We might want to consider moving the dictionary entries for the tests of these types (along with the ones for `std::map` fields) to a dedicated LinkDef file, since technically they don't have anything to do with the `CustomStruct` test type. This can be addressed in a separate PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14069:153,test,tests,153,https://root.cern,https://github.com/root-project/root/pull/14069,2,['test'],"['test', 'tests']"
Testability,"This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types.; 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394:933,test,tests,933,https://root.cern,https://github.com/root-project/root/pull/394,3,"['Test', 'test']","['Tested', 'test', 'tests']"
Testability,This PR fixes #11707 by providing a test in roottest (sister PR https://github.com/root-project/roottest/pull/1210),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16766:36,test,test,36,https://root.cern,https://github.com/root-project/root/pull/16766,1,['test'],['test']
Testability,This PR fixes #12108 by providing a test. We want to make sure that on Windows the test passes as well.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16335:36,test,test,36,https://root.cern,https://github.com/root-project/root/pull/16335,2,['test'],['test']
Testability,"This PR fixes #13691 , although we might want to revisit the logic of [`TDirectoryFile::~TDirectoryFile`](https://github.com/root-project/root/blob/e8bdfaf5add048e5301bc8f96927ed6c7d3a8db2/io/io/src/TDirectoryFile.cxx#L178) since it's weird that it was triggered this way, IMHO. If deemed appropriate, I can use the small reproducer of the linked issue as a unittest of this fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13692:61,log,logic,61,https://root.cern,https://github.com/root-project/root/pull/13692,1,['log'],['logic']
Testability,"This PR fixes #15617, where the number of files is incorrectly returned by `RInterfaceBase`/`RDFDescription` for RDF's constructed from an `RDataSource`. It involves the addition of `GetNFiles` to the public interface of `RDataSource` and calling it in the relevant places. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15653:295,test,tested,295,https://root.cern,https://github.com/root-project/root/pull/15653,1,['test'],['tested']
Testability,This PR fixes -Dclingtest=On to add target cling and check-cling to ROOT. This in turn will build the cling binary and run its test suite.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1161:127,test,test,127,https://root.cern,https://github.com/root-project/root/pull/1161,1,['test'],['test']
Testability,"This PR fixes :. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-debian10-i386,SPEC=default,V=master/lastCompletedBuild/testReport/junit/projectroot/test/test_stressgraphics/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13636:172,test,testReport,172,https://root.cern,https://github.com/root-project/root/pull/13636,2,['test'],"['test', 'testReport']"
Testability,"This PR fixes ; - #15919; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:; https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python; import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())""; ```. Gives:; ```; Warning: failed offset calculation between TList and TViewPubFunctions; Type: TViewPubFunctions; ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()); ```; and the warning disappears:. ```; Type: TList; ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16177:47,test,tested,47,https://root.cern,https://github.com/root-project/root/pull/16177,1,['test'],['tested']
Testability,This PR fixes ROOT-10152.; It also adds a better test and a proper fix for ROOT-9563.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6238:49,test,test,49,https://root.cern,https://github.com/root-project/root/pull/6238,1,['test'],['test']
Testability,This PR fixes [ROOT-9219](https://sft.its.cern.ch/jira/browse/ROOT-9219) and optimises and streamlines the access to columns.; A test was of course added.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1558:129,test,test,129,https://root.cern,https://github.com/root-project/root/pull/1558,1,['test'],['test']
Testability,"This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```; /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'); 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'); 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;; ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/453:252,test,tests,252,https://root.cern,https://github.com/root-project/root/pull/453,4,"['log', 'test']","['logs', 'test', 'tests']"
Testability,This PR fixes backports the fix to keep eager execution on macOS to avoid multi-processing issue that gives timeout of tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13807:119,test,tests,119,https://root.cern,https://github.com/root-project/root/pull/13807,1,['test'],['tests']
Testability,This PR fixes compiling the code for parsing Keras model when the C-API of Python 2 is used. In this case some functions are not available in Python.h. Those functions are used to parse the convolutional layers from Keras. ; This PR excludes the parsing of this layer and avoid calling those functions available only in Python3. ; Also the tests using the cone layer parsing are disabled.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11950:340,test,tests,340,https://root.cern,https://github.com/root-project/root/pull/11950,1,['test'],['tests']
Testability,This PR fixes following failures:; 1. http://cdash.cern.ch/testDetails.php?test=42006642&build=497548; 2. http://cdash.cern.ch/testDetails.php?test=42274691&build=497583. Before merging it should be understood why. @etejedor The tests for `TTree.AsMatrix` run all fine but the tutorial fails occasionally with a segfault (only on Mac OS and only on these two versions). It is not related to the `TTree.AsMatrix` code but to the creation of a `TFile` inside a Python function. Any ideas?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1957:59,test,testDetails,59,https://root.cern,https://github.com/root-project/root/pull/1957,5,['test'],"['test', 'testDetails', 'tests']"
Testability,"This PR fixes https://github.com/root-project/root/issues/12043 . It should also address sporadic failures seen in our jenkins CI due to sometimes Dask assigning two tasks to the same worker process, thus the second task using the same DefinePerSample node of the first task and collapsing into the same situation as the linked issue. The first commit contains the actual fix, then tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13787:382,test,tests,382,https://root.cern,https://github.com/root-project/root/pull/13787,1,['test'],['tests']
Testability,"This PR fixes some formatting for displaying the leaf count arrays RNTuple schema, as well as some other (very) minor formatting improvements. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14141:164,test,tested,164,https://root.cern,https://github.com/root-project/root/pull/14141,1,['test'],['tested']
Testability,This PR fixes the Concat operator for concatenating on the 0th axis and adds corresponding test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11594:91,test,test,91,https://root.cern,https://github.com/root-project/root/pull/11594,1,['test'],['test']
Testability,This PR fixes the broken test on ix32. Consider backport to 6.28.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12468#issuecomment-1464963225:25,test,test,25,https://root.cern,https://github.com/root-project/root/pull/12468#issuecomment-1464963225,1,['test'],['test']
Testability,"This PR fixes the copy constructor of the `ROOT::Fit::BinDtaa` class, ; solving the problem reported in ; https://root-forum.cern.ch/t/globalchi2-function-for-many-histograms-in-root-fitfcn/42016/10. In addition this PR fixes a small issue of one mathcore tests, which was reporting a linking error in case both IMT and VECCORE were not present",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6776:256,test,tests,256,https://root.cern,https://github.com/root-project/root/pull/6776,1,['test'],['tests']
Testability,"This PR fixes the incorrect calculation of the compressed size by the `RNTupleInspector`. Because the vector of compressed page sizes is not cleared after each loop iteration, the accumulation needs to happen only after the loop has finished. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14316:249,test,tested,249,https://root.cern,https://github.com/root-project/root/pull/14316,1,['test'],['tested']
Testability,This PR fixes the incorrect fetching of the type for branches containing split collections of user-defined classes. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12073:137,test,tested,137,https://root.cern,https://github.com/root-project/root/pull/12073,1,['test'],['tested']
Testability,"This PR fixes the initialisation of the gradient function pointer which caused a failure in TFormula::Print(""V""). The PR introduces also a test for TFormula::Print",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2962:139,test,test,139,https://root.cern,https://github.com/root-project/root/pull/2962,1,['test'],['test']
Testability,"This PR fixes the jira item, refactors the code of the models in order to simplify and reduce code duplication and extends significantly the test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1759:141,test,test,141,https://root.cern,https://github.com/root-project/root/pull/1759,1,['test'],['test']
Testability,This PR fixes the remaining ASAN build test failures in RooFit. More detail can be found in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11192:39,test,test,39,https://root.cern,https://github.com/root-project/root/pull/11192,1,['test'],['test']
Testability,This PR fixes: ; - stressHistoFit - so not use colour (even black) to keep a nice output log; - TMVA Keras tutorial: use different output file to avoid sporadic failures; - mathmore (GSL) : add a check for correct GSL version (2.3) introducing the new function `gsl_linalg_cholesky_decomp1`. Use the older `gsl_linalg_cholesky_decomp` for the old versions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13047:89,log,log,89,https://root.cern,https://github.com/root-project/root/pull/13047,1,['log'],['log']
Testability,"This PR follows up on https://github.com/root-project/root/pull/7723, which introduced the pythonization of `RooAbsReal::plotOn`. However, the unit test that came with #7723 also assumed pythonizations of `RooAbsPdf::plotOn` and `RooAbsData::plotOn`. This was not noticed before since the unit tests were not run in the continuous integration. This PR refactors the RooFit pythonization code to easily pythonize also `RooAbsPdf::plotOn` and `RooAbsData::plotOn` such that the unit tests pass. I need to figure out what needs to be done to run the pythonization unit tests in the bot tests for the future. Please take a look @Harshalzzzzzzz, this should be interesting for you!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7753:148,test,test,148,https://root.cern,https://github.com/root-project/root/pull/7753,5,['test'],"['test', 'tests']"
Testability,"This PR for now fixes #14748, but IMO down the line we might need a more tailored representation for friends (at least in how they are presented to the user). Friends are (virtually) represented as untyped records. To properly create them as fields (neede e.g. for `Show` and `PrintInfo`), we artificially bind them to an untyped `RRecordField`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14749:367,test,tested,367,https://root.cern,https://github.com/root-project/root/pull/14749,1,['test'],['tested']
Testability,"This PR implements a feature to combine ntuples in 2 different ways, by chaining them (combine ntuples with different clusters) or befriending them (combine ntuples with different fields). Chaining can be done in 2 ways:. 1. Create one RNTupleReader from multiple files. (`auto ntupleReader = RNTupleReader::Open(std::string_view ntupleName, std::vector<std::string> fileNames);`); 2. Combine 2 RNTupleReader into one. This can be done with move-semantics (`auto reader = RNTupleReader::ChainReader(ntupleName, std::move(reader1), std::move(reader2));`) or without (`auto reader = RNTupleReader::ChainReader(ntupleName, reader1, reader2);`). Befriending is done very similarly, but with an extra Enum class parameter:; 1. Create one RNTupleReader from multiple files. (`auto ntupleReader = RNTupleReader::Open(std::string_view ntupleName, std::vector<std::string> fileNames, ROOT::Experimental::EFileOpeningOptions::kFriend);`); 2. Combine 2 RNTupleReader into one. This can be done with move-semantics (`auto reader = RNTupleReader::ChainReader(ntupleName, std::move(reader1), std::move(reader2), ROOT::Experimental::EFileOpeningOptions::kFriend);`) or without (`auto reader = RNTupleReader::ChainReader(ntupleName, reader1, reader2, ROOT::Experimental::EFileOpeningOptions::kFriend);`). It has been tested to work for: ChainOfChainOfChains, FriendsOfFriendsOfFriends, ChainOfFriends and FriendsOfChain. All tests have been done for .root and raw-files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4541:1301,test,tested,1301,https://root.cern,https://github.com/root-project/root/pull/4541,2,['test'],"['tested', 'tests']"
Testability,This PR implements and tests all the functions of the `Reshape Layer` in CUDA. Those are:. 1. The `Flatten` function.; 2. The `Deflatten` function.; 3. The ` Reshape` function. I additionally refactored the respective testing suite to remove code duplication between the same tests implemented in different architectures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2233:23,test,tests,23,https://root.cern,https://github.com/root-project/root/pull/2233,3,['test'],"['testing', 'tests']"
Testability,"This PR implements the feature to read numpy arrays with `RDataFrame`. See following example for the use-case:. ```python; data = {; ""x"": numpy.array([1, 2, 3]),; ""y"": numpy.array([4, 5, 6]); }. df = ROOT.ROOT.RDF.MakeNumpyDataFrame(data); df2 = df.Filter(""x>1"").Define(""z"", ""x*y""). assert(df2.Mean(""z"").GetValue(), 14); ```. Edit: Up to now it works only with C++17 since `std::string_view` is not yet available in experimental PyROOT as backport.; Edit: Renamed `MakeRDataFrame` to `MakeNumpyDataFrame`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3424:283,assert,assert,283,https://root.cern,https://github.com/root-project/root/pull/3424,1,['assert'],['assert']
Testability,"This PR implements the possibility to store global observables in RooFit datasets, and makes the necessary changes in the `RooAbsPdf::fitTo` code path to consider the global observables in the data if available. If one wants to restore the old behavior of taking the global observable values from the model even if they are stored in the data, one can use the new `GlobalObservablesSource` command argument. . Unit tests for all new functionality is also implemented. Please find the more information in the commit messages. Ideas for future developments in future PRs:; 1. make it possible to specify the global observables when generating a dataset:; `model.generate(x, 1000, GlobalObservables(g))`; 2. make it possible to also sample global observable values when generating a toy dataset:; `model.generate({x, g}, 1000, GlobalObservables(g))`; 3. Add a tutorial to show all the new functionality related to global observables. Closes https://github.com/root-project/root/issues/8123.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8878:415,test,tests,415,https://root.cern,https://github.com/root-project/root/pull/8878,1,['test'],['tests']
Testability,"This PR improves the speed for evaluating weights in `RooHistPdf`; and `RooHistFunc` for one dimensional histograms with no interpolation.; In the future, `RooDataHist::weights()` can be extended to cover; cases with higher dimensions and interpolation. The function `RooDataHist::weights()` was implemented to enable; vectorized evaluations of bin weights. In `RooHistPdf` it is implemented; using the new function `RooHistPdf::computeBatch()`, which calls; `RooDataHist::weights()` in the case of no interpolation and 1D; histograms, and `RooAbsReal::computeBatch()` otherwise. In; `RooHistFunc::computeBatch`, `RooDataHist::weights()` is called in the; case of no interpolation and 1D histograms and is unchanged in the other cases. To calculate the weight, bin indices are stored as a vector; using `RooAbsBinning::binNumbers`, which was implemented in #11151. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11171:930,test,tested,930,https://root.cern,https://github.com/root-project/root/pull/11171,1,['test'],['tested']
Testability,This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). ; This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5367:21,test,test,21,https://root.cern,https://github.com/root-project/root/pull/5367,2,['test'],"['test', 'tests']"
Testability,"This PR increases the tolerance for SOFIE-GNN testing. Due to different floating representations in Python frameworks and C++ implementations, it will be better to have a tolerance of 10^-5 and not 10^-7 which was the default previously.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13608:46,test,testing,46,https://root.cern,https://github.com/root-project/root/pull/13608,1,['test'],['testing']
Testability,This PR intends to test what's tested in the cppcompleter.py. It fails for PR #5884 however this test should show that the issue is somewhere in the way we test it on the python side... cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6011:19,test,test,19,https://root.cern,https://github.com/root-project/root/pull/6011,4,['test'],"['test', 'tested']"
Testability,"This PR introduces (with unit tests!) the concept of a forward-compatibility feature break flag for `TBasket`. This allows the `TBasket` class to identify if the object being deserialized was written by a newer version of ROOT using a feature that breaks forward-compatibility. Note that much care was taken so older versions of ROOT that *don't* recognize the new flag will believe the file is corrupt; they will give a misleading error message, but will not silently serve corrupted data. If this approach goes forward, I intend to backport the flags to older versions of ROOT -- they should be able to recognize files they aren't supposed to read. I do not plan to backport the new IO features themselves.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/959:30,test,tests,30,https://root.cern,https://github.com/root-project/root/pull/959,1,['test'],['tests']
Testability,"This PR introduces a few changes to old PyROOT and new PyROOT for forward and backward compatibility reasons, respectively. Old PyROOT:; - Issue a deprecation warning when the conversion None -> null pointer happens; - Add forward compatible names for `AsCObject` (`as_cobject`) and `BindObject` (`bind_object`); - Make nullptr accessible as cppyy.nullptr; - Make pythonization functions accessible via cppyy.py ; - Issue a deprecation warning when using `buffer.SetSize`, and add `buffer.reshape` to be forward compatible; - Add a few attribute names for proxies (objects, classes, callables) that forward compatible with new PyROOT. New PyROOT; - Add `MakeNullPointer(klass)` as `bind_object(0,klass)`; - Provide `BindObject` and `AsCObject`. Related test PR:; https://github.com/root-project/roottest/pull/425",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4661:753,test,test,753,https://root.cern,https://github.com/root-project/root/pull/4661,1,['test'],['test']
Testability,"This PR introduces a new format option for `RNTupleReader::Show()` that shows all fields if no model is specified, and only the fields present in the model if there is one. It also changes the default show format to this option. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). Fixes #12031.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12026:250,test,tested,250,https://root.cern,https://github.com/root-project/root/pull/12026,1,['test'],['tested']
Testability,This PR introduces a new way to express python unit tests with two CMake functions (see commit message) and leverages the new mechanism to re-formulate the PyROOT unit tests and to add new tests for the TDF pyROOT interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1031:52,test,tests,52,https://root.cern,https://github.com/root-project/root/pull/1031,3,['test'],['tests']
Testability,"This PR introduces the NumericalDerivatorMinuit2 class, based on original code by @lmoneta (https://github.com/lmoneta/root/blob/lvmini/math/mathcore/src/NumericalDerivator.cxx). It replicates the Minuit2 numerical derivator calculations, but in a a stand alone class. This allows it to be used from RooFit to manually calculate gradients outside of Minuit2, e.g. in a parallelized way. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8567:408,test,tested,408,https://root.cern,https://github.com/root-project/root/pull/8567,1,['test'],['tested']
Testability,"This PR introduces the first steps towards MT support for the `RNTupleIndex`, by enabling mulithreaded building of the index. To enable this, the index itself now manages multiple _index partitions_, which are essentially sub-indices for a particular entry range. These entry ranges are currently set according to the cluster boundaries, but further benchmarking and evaluation will be required to determine the optimal partitioning scheme.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16679:350,benchmark,benchmarking,350,https://root.cern,https://github.com/root-project/root/pull/16679,1,['benchmark'],['benchmarking']
Testability,"This PR introduces the functionality offered by `ROOT::RDF::RunGraphs` in distributed RDataFrame. Some things may still need polishing or discussion.; - [x] Implement function for the Spark backend; - [x] Implement generic function available in the distributed module; - [x] Add test for the Spark backend; - [ ] Discuss whether we should keep the logic that all actions should be triggered by the same type of distributed backend (i.e. a user can submit N Spark jobs concurrently, but not N Spark jobs and M Dask jobs from the same call to RunGraphs); - [ ] Discuss default value of `concurrent_runs` parameter, i.e. number of jobs submitted concurrently from the client to the scheduler.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8972:279,test,test,279,https://root.cern,https://github.com/root-project/root/pull/8972,2,"['log', 'test']","['logic', 'test']"
Testability,"This PR introduces the logic necessary in TTreeReader to detect when an entry being read is ""incomplete"" for the following situations:; * When switching to a new tree in the chain, if a branch that was expected to be found is not available; * When doing event matching with TTreeIndex, in case one or more of the friend trees did not match the index value for the current entry. It also introduces new functionality in RDataFrame to allow users to act upon the situations described above:; * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing.; * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded.; * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded. The tutorials `df036_missingBranches` and `df037_TTreeEventMatching` show example usage of the new functionalities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15641:23,log,logic,23,https://root.cern,https://github.com/root-project/root/pull/15641,1,['log'],['logic']
Testability,"This PR introduces the possibility of converting all `TTree`s that are present in a `TFile` to `RNTuple`s at once. Concretely, it implements an additional factory method that requires only the source file path and the destination path. Because we now deal with multiple trees at the same time, `SetNTupleName` has been replaced by `SetNTupleNames`, which takes the name of the original tree and the name of the corresponding ntuple. Optionally, we could keep `SetNTupleName` as well in case there's only one tree and throw an exception when multiple trees are being imported at the same time. The `Create` factory method could be expanded with an optional parameter that takes a list of tree names (or regexes) to import, in case it is not desired that every tree is imported. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12486:798,test,tested,798,https://root.cern,https://github.com/root-project/root/pull/12486,1,['test'],['tested']
Testability,"This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**; - [x] RModel_GNN class; - [x] RFunction class for graph-based functions; - [x] GraphInput structure for providing inputs to the graph; - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface); - [x] Initialize & Generate function for RModel_GNN class; - [x] RFunction_MLP for updation; - [x] RFunction_Mean for aggregate; - [x] RFunction_Sum for aggregate; - [x] RModel_GraphIndependent class; - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions); - [x] Tests for RModel_GNN and RModel_GraphIndependent; - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208:738,Test,Tests,738,https://root.cern,https://github.com/root-project/root/pull/11208,2,['Test'],['Tests']
Testability,This PR introduces:; - A mechanism to forbid istantiation of RVec<bool>; - A mechanism to treat vector<bool> as such and not as RVec<bool> with jitted actions and transformations; - Tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2186:182,Test,Tests,182,https://root.cern,https://github.com/root-project/root/pull/2186,1,['Test'],['Tests']
Testability,"This PR is a backport of #12781. The change in this PR fixes a segfault when defining a C++20 concept if definition shadowing is enabled.; In principle, for a `TemplateDecl`, `isDefinition()` issues a recursive call passing the templated decl as a parameter. A `ConceptDecl`, however, should always be considered a definition. Also, update the DeclShadowing test incorporating a C++20 concept. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #12779.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12782:358,test,test,358,https://root.cern,https://github.com/root-project/root/pull/12782,2,['test'],"['test', 'tested']"
Testability,This PR is a continuation of #12145 and adds the option to specify the maximum number of entries in the original `TTree` to import. ## Checklist; - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12472:152,test,tested,152,https://root.cern,https://github.com/root-project/root/pull/12472,1,['test'],['tested']
Testability,This PR is a draft for now to test developments with the CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10789:30,test,test,30,https://root.cern,https://github.com/root-project/root/pull/10789,1,['test'],['test']
Testability,"This PR is a new attempt on #1166. It adds the `geom` and `geombuilder` modules, with:; - geombuilder set OFF by default; - geom set ON by default. Disabling geom also disables its dependant modules, i.e. Eve and gviz3d. Related roottest PR: https://github.com/root-project/roottest/pull/1190. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16514:315,test,tested,315,https://root.cern,https://github.com/root-project/root/pull/16514,1,['test'],['tested']
Testability,This PR is a part of LZ4 testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/855:25,test,testing,25,https://root.cern,https://github.com/root-project/root/pull/855,1,['test'],['testing']
Testability,"This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13724:453,test,tested,453,https://root.cern,https://github.com/root-project/root/pull/13724,1,['test'],['tested']
Testability,"This PR is a refactoring. RFilter does not need to keep fNSlots stored, it only requires the value; at construction time. fLastCheckedEntry can be reset per-slot in; InitSlot rather than being reallocated whenever InitNode is called. This also uniforms the logic of RFilter and RDefine w.r.t. the; treatment of fLastCheckedEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9170:257,log,logic,257,https://root.cern,https://github.com/root-project/root/pull/9170,1,['log'],['logic']
Testability,"This PR is a work in progress for a parallel version of the snapshot action introduced recently to TDataFrame. This version compiles and passes the `test_snaphot.C` test from roottest.git, but still needs quite a bit of work. I imported the files we use with attributed authorship for each part, but we now need to move them to the right place if needed and refactor the interfaces according to feedback from various sources. Please feel free to make comments directly on the code, and I will try to address everything by the deadline for branching out 6.10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/533:165,test,test,165,https://root.cern,https://github.com/root-project/root/pull/533,1,['test'],['test']
Testability,"This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`; - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`; - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`; - `TActionResultProxy.hxx`: class `TActionResultProxy`; - `TDFOperations.{hxx,cxx}`: all `*Operation` classes; - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**; - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency; - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`; - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`; - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/423:69,test,test,69,https://root.cern,https://github.com/root-project/root/pull/423,3,"['log', 'test']","['logically', 'test', 'tests']"
Testability,"This PR is addressing one of the `TODO`s left by @hageboeck in the RooFit code:. https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooNLLVar.cxx#L326. I hope this goes in the good direction. I still have to see how I can cover all the changes with tests, so this is a draft PR for now. The most controversial part is probably the `_offset` subtraction: https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooNLLVar.cxx#L454. It originally looked like this:. ```C++; Double_t y = -_offset - (carry + _offsetCarry);; Double_t t = result + y;; carry = (t - result) - y;; result = t;; ```. I'm not sure if that works. By definition, `_offset` is in the same order of magnitude as `result`, so the `carry + _offsetCarry` is lost when adding it with `_offset`, no? I think to subtract KahanSums of the same order of magnitude, one should better add the sums and carries individually and then make a dummy addition such that the carry can ""spill over"" into the sum if it got large enough after addition:. ```C++; KahanSum<T, N>& operator-=(KahanSum<T, N> const& other) {; fSum[0] -= other.Sum();; fCarry[0] -= other.Carry();; // add zero such that if the summed carry is large enough to be partly represented in the sum, it will happen; Add(T{});; return *this;; }; ```. @lmoneta",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7126:269,test,tests,269,https://root.cern,https://github.com/root-project/root/pull/7126,1,['test'],['tests']
Testability,This PR is for testing on 6.28 in the Linux CI the using of Python ML tools in TMVA,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15236:15,test,testing,15,https://root.cern,https://github.com/root-project/root/pull/15236,1,['test'],['testing']
Testability,This PR is here to test CmsBot testing infrastructure. DO NOT MERGE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2875:19,test,test,19,https://root.cern,https://github.com/root-project/root/pull/2875,2,['test'],"['test', 'testing']"
Testability,"This PR is now based on https://github.com/root-project/root/pull/16162 and https://github.com/root-project/root/pull/16165 . The changes are divided in two commits: those related to TTreeReader alone and those related to RDataFrame. . Tests are missing for the RDF-related changes, will be added depending on the first round of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15641#issuecomment-2323337054:236,Test,Tests,236,https://root.cern,https://github.com/root-project/root/pull/15641#issuecomment-2323337054,1,['Test'],['Tests']
Testability,This PR is now fine and can be merged. I will add now also a simple test for the new mod. operator,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/977#issuecomment-349961499:68,test,test,68,https://root.cern,https://github.com/root-project/root/pull/977#issuecomment-349961499,1,['test'],['test']
Testability,This PR is obsolete. I see the test failing today on [CDash](http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=376860). Closing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/628#issuecomment-317648884:31,test,test,31,https://root.cern,https://github.com/root-project/root/pull/628#issuecomment-317648884,1,['test'],['test']
Testability,"This PR is on top of #1777 and adds the method `TTree.AsMatrix(columns)` as pythonization, which returns the content of the tree as numpy array powered by `TDataFrame` and the memory adption with the `__array_interface__`. TODO:; - ~~Infere the final datatype of the numpy array in a clever way (currently `double` is the default). Implicit type conversion is done by the lambda passed to `TDataFrame` in the backend.~~ Done in python, with tests.; - ~~More error-handling?~~ Can't think of any more checks.; - ~~More tests? Corner-cases missed?~~ Ideas? Any corner-cases missed?; - ~~What about not supported datatypes? Currently implemented for `float`, `double`, `int`, `unsigned int`, `long`, `unsigned long`. This is dependent on the memory adption feature of #1777 for `std.vector`.~~ Added proper error-handling.; - ~~Apply `clang-format`~~ ~~ Let's travis do this.; - ~~Shall we provide a `TTree.AsMatrix()` without given columns, which defaults to all columns? -> Most likely: Yes (but with proper error-handling!) -> White-listing branch types?~~ Done.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1856:441,test,tests,441,https://root.cern,https://github.com/root-project/root/pull/1856,2,['test'],['tests']
Testability,"This PR is related to https://github.com/root-project/root/issues/8707. ROOT_ADD_TEST now takes FIXTURES_SETUP, FIXTURES_CLEANUP and; FIXTURES_REQUIRED arguments (lists). also add RESOURCE_LOCK to prevent parallel execution of a test; takes a single lock name. n.b: fixtures and resource lock namespaces are each different from; test namespaces. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (in the file)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8722:229,test,test,229,https://root.cern,https://github.com/root-project/root/pull/8722,3,['test'],"['test', 'tested']"
Testability,"This PR is replaced by #9307 , that includes the commits of this PR and extends it adding the test program",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8882#issuecomment-971692152:94,test,test,94,https://root.cern,https://github.com/root-project/root/pull/8882#issuecomment-971692152,1,['test'],['test']
Testability,"This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8369:815,test,tested,815,https://root.cern,https://github.com/root-project/root/pull/8369,1,['test'],['tested']
Testability,"This PR is the same of #15078 but adds a commit with a test of the new feature. @ferdymercury , feel free to cherry-pick the commit in your code, if you think it's adequate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15124:55,test,test,55,https://root.cern,https://github.com/root-project/root/pull/15124,1,['test'],['test']
Testability,"This PR is to address GitHub issue https://github.com/root-project/root/issues/9353. So far, it is only a revert of d91509e so I can see the failures in the CI (on my system, the RooFit tests are still passing even after reverting said commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9374:186,test,tests,186,https://root.cern,https://github.com/root-project/root/pull/9374,1,['test'],['tests']
Testability,"This PR looks a big improvement in fixing #7890 and #7933. Here are some test results run on Ubuntu 20. - Test create/delete a RooArgSet, simple example shown in #7933. - with current mater (i.e. including #7904 and #7935): ; - Time to create/delete 10M RooArgSet : 125 sec; - Increase of Memory ~ 1 GB; - with master + this PR: ; - Time to create/delete 10M RooArgSet : 0.8 sec; - total memory increase + 25 Mb); - using 6.15 (before including current MemPoolForRooSets (-> #2866 ); - Time to create/delete 10M RooArgSet : 2.9 sec; - memory increase : 0 ; ; - Running RooStats toy generation + likelihood evaluation on Histfactory tutorial model using in totoal 300k toys: ; ```; StandardHypoTestInvDemo(""$ROOTSYS/tutorials/histfactory/results/example_combined_GaussExample_model.root"",""combined"",""ModelConfig"","""",""obsData"",0,0,true,2,0,5,100000); ```. - master : Time: 344 sec Memory : ~ 3.5 GB; - master + this PR : Time: 157 sec Memory: 570 Mb; - 6.15 Time: 197 sec Memory: 240 Mb; . Runing the master on MacOsX, I have observed a much smaller memory increase, but a much longer time spent with allocating/deallocating RooArgSet's when their total count increases.; This is not observed anymore after applying this PR. So in conclusion:. - this PR fixes the increase time spent in allocate/deallocate RooArgSet over time, which will slow down toys analysis when number of toys increase; - there is still some increase in memory usage, but it is much smaller than before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7954#issuecomment-824721395:73,test,test,73,https://root.cern,https://github.com/root-project/root/pull/7954#issuecomment-824721395,2,"['Test', 'test']","['Test', 'test']"
Testability,"This PR mainly adds pythonisations for `TCollection` and its subclasses. It also adds a pythonisation for `TIter`, which is necessary to iterate over `TCollection`s. The corresponding unit tests for every pythonisation are also proposed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3298:189,test,tests,189,https://root.cern,https://github.com/root-project/root/pull/3298,1,['test'],['tests']
Testability,"This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""; struct TestClass {; template<class T> void templatedMember(const T& value) { }; };; """"""). t = ROOT.TestClass(); t.templatedMember('int')(1); ```; The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3237:236,Test,TestClass,236,https://root.cern,https://github.com/root-project/root/pull/3237,4,"['Test', 'test']","['TestClass', 'tests']"
Testability,"This PR modifies the behaviour of `TTree::Branch` in Python so that proxy references can be passed as arguments from the Python side, more precisely in cases where the C++ implementation of the method expects the address of a pointer. For example:; ```python; v = ROOT.std.vector('int')(); t.SetBranchAddress(""my_vector_branch"", v); ```. Tests for the aforementioned pythonization are also included in this PR. There is one test missing, which covers the case when the new branch to be created is a field of a struct, for example:; ```python; ROOT.gInterpreter.Declare(""""""; struct MyStruct {; int myint1;; int myint2;; };; """"""). ms = ROOT.MyStruct(); ms.myint1 = some_value; t.Branch('myint1b', addressof(ms, 'myint1'), 'myint1balias/I'); ```; In the current PyROOT, in order to get the address of the struct field, one would use the `AddressOf` function. The equivalent in modern Cppyy seems to be `addressof`, but it has a bug when using it as specified above. [A PR](https://bitbucket.org/wlav/cpycppyy/pull-requests/10/addressof-fix-retrieval-of-address-of-an) has been submitted to Cppyy to fix the issue. Moreover, this PR includes an additional fix and test for `TTree::SetBranchAddress`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2894:338,Test,Tests,338,https://root.cern,https://github.com/root-project/root/pull/2894,3,"['Test', 'test']","['Tests', 'test']"
Testability,"This PR moves the dictionaries for STL containers required for testing to a separate LinkDef. The rationale behind this is that these dictionaries are not directly related to the `CustomStruct` and once #13904 and #14069 are merged even more (unrelated) dictionary entries would be added, so it would be good to avoid clutter and separate these.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14072:63,test,testing,63,https://root.cern,https://github.com/root-project/root/pull/14072,1,['test'],['testing']
Testability,"This PR moves the responsibility of knowing which custom columns have been defined at which point of the functional graph from `TCustomColumn` to `TInterface`. As an added improvement `TInterface` now checks that custom columns do not override each other (which was wrongly allowed before). As a consequence, `TCustomColumn` nodes are not required to be in the functional graph anymore (their function was to signal the point where a certain column name became valid), allowing simplifications of the graph traversing that TDF does during the event loop (e.g. to check all filters in a functional chain). `Define` now returns the same type as the node it was called on rather than `TInterface<TCustomColumn<Fun, PrevNode>>`. For this reason this PR is expected to break `test_templateRecursionLimit`, which depends on the exact type returned by `Define`. The test will be fixed by a separate PR to roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/924:859,test,test,859,https://root.cern,https://github.com/root-project/root/pull/924,1,['test'],['test']
Testability,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```; pip install keras theano; ```. Testing:. ```; # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression); ctest -V -R PyMVA; # Check out examples; cd tutorials/tmva/keras; # Classification; ./ClassificationKeras.py; root -l LaunchClasGUI.C; ./ApplicationClassificationKeras.py; # Regression; ./RegressionKeras.py; root -l LaunchRegGUI.C; ./ApplicationRegressionKeras.py; # Multiclass; ./MulticlassKeras.py; root -l LaunchMultGUI.py; ```. Questionable lines of code from my point of view:; - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/280#issuecomment-253197836:137,Test,Testing,137,https://root.cern,https://github.com/root-project/root/pull/280#issuecomment-253197836,4,"['Test', 'test']","['Testing', 'test', 'testPyKeras', 'tests']"
Testability,This PR needs to be tested also with the VMC packages masters; please wait with merge when this is verified. Thank you.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3513#issuecomment-470650348:20,test,tested,20,https://root.cern,https://github.com/root-project/root/pull/3513#issuecomment-470650348,1,['test'],['tested']
Testability,"This PR proposes a unification of the pythonizations for `TTree` and its subclasses. The same strategy could be followed for `TDirectory` and its subclasses. Only one pythonizor function is proposed for `TTree` and its subclasses, which instead of checking the name of the class, it checks whether it `InheritsFrom('TTree')`. The tests for the `SetBranchAddress`, pythonic iterator and branch-as-attribute syntax have been extended to test those pythonizations also for `TChain` and `TNtuple`, as example of two commonly used `TTree` subclasses. Note that, with this approach, we could still have pythonizations that are specific e.g. to `TTree` or `TNtuple`. This would only require to check for the right condition in the pythonizor function. We could also have more than one pythonizor function, if we wanted those class-specific pythonizations to be encapsulated in just one function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2799:330,test,tests,330,https://root.cern,https://github.com/root-project/root/pull/2799,2,['test'],"['test', 'tests']"
Testability,This PR provides several fixes for histogram and profile having labels. n particular: ; - fix ROOT-7894 by using now for TProfile::Merge the same logic as TH1::Merge. (impelmentation based on TH1Merger class); - fix #6403 for TProfile::LabelsOption when there are weights; - fix also another bug for handling of underflow/overflow in TProfile::ExtendAxis . Add several new tests for these case in stressHistogram,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6442:146,log,logic,146,https://root.cern,https://github.com/root-project/root/pull/6442,2,"['log', 'test']","['logic', 'tests']"
Testability,"This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR.; Other additions that will be accounted for in one or more follow-up PRs include:; - The possibility for users to provide their own entries/value pointers to the processor.; - The possibility for users to specify the `RNTupleModel` used to construct the processor entry.; - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15084:1152,test,tested,1152,https://root.cern,https://github.com/root-project/root/pull/15084,1,['test'],['tested']
Testability,"This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT.; https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3351:342,log,logic,342,https://root.cern,https://github.com/root-project/root/pull/3351,1,['log'],['logic']
Testability,"This PR reactivates and fixes the test for RooGradMinimizerFcn (introduced in #8596). The first commit provides a way for external gradient calculators to use previous gradient information (gradient itself, second derivatives, step size) to calculate the next gradient values. Simultaneously, it allows the external calculator to pass back (via the same arrays to keep the redesign as minimal as possible, in anticipation of planned dedicated Hessian support) the second derivative and step sizes, so they can also be reused in the next gradient calculation. All of this reuse was already going on in Numerical2PGradientCalculator, but external gradient calculators had no access to this data, because the FCNGradAdaptor and IMultiGradFunction had no support for passing it back and forth. The commit also implements use of this mechanism in ExternalInternalGradientCalculator and in RooGradMinimizerFcn. The second commit reactivates the (already existing) test, and fixes it, because it turned out it had a small remaining bug. The bug was fixed by removing an unused parameter from `NumericalGradient::SetInitialGradient`, so that was two birds with one stone.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8694:34,test,test,34,https://root.cern,https://github.com/root-project/root/pull/8694,2,['test'],['test']
Testability,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16090:426,log,logic,426,https://root.cern,https://github.com/root-project/root/pull/16090,4,"['log', 'test']","['logic', 'tested', 'tests']"
Testability,"This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8569:181,log,logistics,181,https://root.cern,https://github.com/root-project/root/pull/8569,2,"['log', 'test']","['logistics', 'tested']"
Testability,This PR removes the `RResult` wrapper from the public `RNTupleImporter` interface; private methods are still wrapped. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12565:139,test,tested,139,https://root.cern,https://github.com/root-project/root/pull/12565,1,['test'],['tested']
Testability,This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. ; This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS; (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13718:105,test,test,105,https://root.cern,https://github.com/root-project/root/pull/13718,1,['test'],['test']
Testability,This PR replace #2215 from @HDembinski as suggested by him. . There is no need to compute the precision in Minuit2. ; For testing and comparison the previous code to compute the numerical precision is now put in a new function MnMachinePrecision::ComputePrecision(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5216:122,test,testing,122,https://root.cern,https://github.com/root-project/root/pull/5216,1,['test'],['testing']
Testability,"This PR replaces #1533. Now TH1::FindFirst(Last)Bin is modified and there exists only a common function for TH1 working for all dimensions. ; The TH2, and TH3 specific functions are then removed. . A test is also added in hist/hist/test",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3399:200,test,test,200,https://root.cern,https://github.com/root-project/root/pull/3399,2,['test'],['test']
Testability,This PR replaces #2278 from the GSOC student Sidharta and provides the regression support (including a test) for MethodDL. . The test has been improved to check the obtained deviations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2901:103,test,test,103,https://root.cern,https://github.com/root-project/root/pull/2901,2,['test'],['test']
Testability,This PR resolves this failing test on ARM: http://cdash.cern.ch/testDetails.php?test=23147537&build=332879,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/439:30,test,test,30,https://root.cern,https://github.com/root-project/root/pull/439,3,['test'],"['test', 'testDetails']"
Testability,"This PR roots our llvm vendor drop to the LLVM's 5.0 release. Updating llvm will enable C++17 support in ROOT. There are many advantages of doing that such as relying on a release which is very thoroughly tested. After many years, this update removes practically all cling/ROOT-specific patches from llvm which means that technically we can link against vanilla llvm. Note that we still have (a reduced) set of patches in clang. Note this comes with a few issues (thus the do-not-merge label):; * We have two failures in cling's testsuite (visible when building with -Dclingtest=On) -- they seem to be coming from a stack-corruption when the JIT is supposed to throw an exception;; * A few roottest failures which I want to make sure it is the same set as on my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1218:205,test,tested,205,https://root.cern,https://github.com/root-project/root/pull/1218,2,['test'],"['tested', 'testsuite']"
Testability,"This PR should be merged after `TSlotStack` is upgraded to not use static thread-local storage,; and one test case is expected to fail until this happens.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2238:105,test,test,105,https://root.cern,https://github.com/root-project/root/pull/2238,1,['test'],['test']
Testability,"This PR should finally fix the build warnings in the master nightlies,; after the unsuccessful fix attempt in commit; 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with; this change by compiling the following example snippet under gcc48:. ```C++; // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(); : arr_{{}}; {}. std::array<int, 10> arr_ = {{}};; };. int main() {; A a{};; std::cout << a.arr_[0] << std::endl;; return 0;; }; ```. The warnings are reproduced, and can successfully be suppressed by; replacing `{}` with `{{}}`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8489:373,test,test,373,https://root.cern,https://github.com/root-project/root/pull/8489,2,['test'],['test']
Testability,"This PR should finally fix the build warnings in the master nightlies,; after the unsuccessful fix attempt in commit; 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with; this change by compiling the following example snippet under gcc48:. ```C++; // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(); : arr_{{}}; {}. std::array<int, 10> arr_ = {{}};; };. int main() {; A a{};; std::cout << a.arr_[0] << std::endl;; return 0;; }; ```. The warnings are reproduced, and can successfully be suppressed by; replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8500:373,test,test,373,https://root.cern,https://github.com/root-project/root/pull/8500,6,['test'],['test']
Testability,"This PR should fix a race condition with some of the TMVA tutorials on ARM, as they all use the same files in the `dataset` folder: http://cdash.cern.ch/testDetails.php?test=22693533&build=331203",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/420:153,test,testDetails,153,https://root.cern,https://github.com/root-project/root/pull/420,2,['test'],"['test', 'testDetails']"
Testability,"This PR should fix the JupyROOT failures on MacOS 10.15, such as:. https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/5479/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/. by ensuring `libJupyROOT` is generated with the `.so` suffix as the other libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5478#issuecomment-620512213:149,test,testReport,149,https://root.cern,https://github.com/root-project/root/pull/5478#issuecomment-620512213,1,['test'],['testReport']
Testability,"This PR should fix the build warnings in the v6.18 nightlies. I have checked that the missing field initializer warnings go away with; this change by compiling the following example snippet under gcc48:. ```C++; // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(); : arr_{{}}; {}. std::array<int, 10> arr_ = {{}};; };. int main() {; A a{};; std::cout << a.arr_[0] << std::endl;; return 0;; }; ```. The warnings are reproduced, and can successfully be suppressed by; replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9157:275,test,test,275,https://root.cern,https://github.com/root-project/root/pull/9157,2,['test'],['test']
Testability,This PR should fix the failures of some PyTorch tests caused by using Python2 instead of Python3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12168:48,test,tests,48,https://root.cern,https://github.com/root-project/root/pull/12168,1,['test'],['tests']
Testability,"This PR shows the ingredients needed to provide a fix (or more like a workaround) to https://github.com/root-project/root/issues/8505. * A new function `TEntryList::AddSubList` which purpose is specifically of adding a sub list to the main TEntryList. With this we can avoid the logic of `TEntryList::Add` that merges multiple TEntryList referring to the same tree into a global list.; * A slight modification in `TChain::SetEntryList` to grab the sub-TEntryList with the same index as the current sub-tree in the chain. Currently, this is done instead with `GetEntryList(treename, filename, opt)` that will always report the same sub-TEntryList referring to the ""first"" file (because all files of the sublists of the global TEntryList have the same name). The changes are not definitive at all. I wanted to ask your opinion if it's a valid way forward. If so, I will polish the code and prepare it for a real PR. With this commit, the following snippet; ```cpp; int main(){; auto start_1{0};; auto start_2{0};; auto end_1{20};; auto end_2{10};. TEntryList elists;; TEntryList elist1{""e"",""e"",""entries"",""file_20entries_1.root""};; TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. for(auto entry = start_1; entry < end_1; entry++){; elist1.Enter(entry);; }. for(auto entry = start_2; entry < end_2; entry++){; elist2.Enter(entry);; }. elists.AddSubList(&elist1);; elists.AddSubList(&elist2);. TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists, ""sync"");. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";; }; ```; Outputs the correct result:; ```; $: ./tentrylist_emptysource_addsublist ; 30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8660:279,log,logic,279,https://root.cern,https://github.com/root-project/root/pull/8660,1,['log'],['logic']
Testability,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-654947753:79,test,test,79,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-654947753,4,['test'],"['test', 'test-if-numba-is-there', 'tests']"
Testability,"This PR still causes macOS 14 ARM test failures. I have [reverted](https://github.com/root-project/root/commit/ab6cdd5ddaf2294f55793d409508ec93dfcffc25) the commit that caused this; please feel free to come up with a ""good compromise""!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14107#issuecomment-1825792260:34,test,test,34,https://root.cern,https://github.com/root-project/root/pull/14107#issuecomment-1825792260,1,['test'],['test']
Testability,This PR tests the CI builds. It is same as #15115,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15123:8,test,tests,8,https://root.cern,https://github.com/root-project/root/pull/15123,1,['test'],['tests']
Testability,"This PR turns on CCache for mac builds. This will remove a bit of pressure from the build nodes, e.g. for the build of ROOT's llvm during nightlies and all executables of the tests (unless they need to be rebuilt, of course)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14647:175,test,tests,175,https://root.cern,https://github.com/root-project/root/pull/14647,1,['test'],['tests']
Testability,"This PR updates Cppyy and adapts experimental PyROOT to the changes. It also re-enables a few tests. The following PRs merged and issues fixed in Cppyy are incorporated by this update:. https://bitbucket.org/wlav/cpycppyy/pull-requests/24/fixes-for-memoryregulator-recursiveremove; https://bitbucket.org/wlav/cpycppyy/pull-requests/25/proposal-for-setting-hooks-for-custom. https://bitbucket.org/wlav/cppyy/issues/113/assignment-to-c-global-from-python-does; https://bitbucket.org/wlav/cppyy/issues/115/instantiation-for-c-float-picked-when; https://bitbucket.org/wlav/cppyy/issues/121/dir-does-not-return-auto-instantiated; https://bitbucket.org/wlav/cppyy/issues/131/problem-constructing-object-of-templated; https://bitbucket.org/wlav/cppyy/issues/138/crash-when-deleting-an-object-of-a-python; https://bitbucket.org/wlav/cppyy/issues/139/wrong-overload-picked-when-passing-object. There is still one more pending issue, introduced recently in Cppyy, which affects a few tests:; https://bitbucket.org/wlav/cppyy/issues/136/item-assignment-not-working-in-templated; Those tests have been disabled temporarily. Once a bug fix is available it will be ported right away to experimental PyROOT's Cppyy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4264:94,test,tests,94,https://root.cern,https://github.com/root-project/root/pull/4264,3,['test'],['tests']
Testability,"This PR updates the Cppyy copy of experimental PyROOT, in particular with:; - cppyy v1.4.1; - cppyy_backend v1.7.0 (clingwrapper); - CPyCppyy v1.5.1. This update brings in, among other things:; * A few fixes in Cppyy for Windows.; * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:; https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/; * A fix for `addressof` in Cppyy.; * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit.; * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3322:366,test,tests,366,https://root.cern,https://github.com/root-project/root/pull/3322,1,['test'],['tests']
Testability,"This PR was approved, are the test failures related? Otherwise I believe we could merge and close the issue? @linev @couet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14671#issuecomment-1966734646:30,test,test,30,https://root.cern,https://github.com/root-project/root/pull/14671#issuecomment-1966734646,1,['test'],['test']
Testability,"This PR:; - Generalises the DataSetFactory::RandomGenerator class and moves it to TMVA::Tools.; - Replaces use of the old class with the new one.; - Adds test cases for the new class. This could be taken a step further and be put in a separate header in ROOT proper alongside its friends `ROOT::Math::TRandomEngine<Engine>`, `TRandom : public ROOT::Math::TRandomEngine`, `ROOT::Math::StdEngine<Engine>`, and `TRandomGen<Engine> : public TRandom`.; These classes define the TRandom interface and adapts foreign interfaced to that of TRandom. This PR provides an interface for going in the other direction. One could then imagine renaming this class to `TRandomAsStdEngine` and move it outside of TMVA for all to benefit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1628:154,test,test,154,https://root.cern,https://github.com/root-project/root/pull/1628,1,['test'],['test']
Testability,This PR:; - adds the RRVecField type for type-erased I/O of RVecs with RNTuple; - removes some special-casing of `RVec<bool>` which is unnecessary now that we have RVec 2.0; - adds RPrintValueVisitor support for RVecs; - adds tests for type-erased I/O of RVecs; - adds tests for `ntuple->Show` + RVecs; - adds tests for interop I/O of std::vectors and RVecs (i.e. writing one and reading the other). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary): I don't think it's necessary. This PR fixes #6347 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8770:226,test,tests,226,https://root.cern,https://github.com/root-project/root/pull/8770,4,['test'],"['tested', 'tests']"
Testability,"This Pull Request adds more speaking information to users to make warnings of the type; `delgam < 0 : first derivatives increasing along search line`; useful. Note that I do not have too much knowledge on the details of Minuit2, and the information messages of course reflect my state of knowledge. If someone else with more in-depth knowledge on Minuit2 could check that this is valid, that would of course be very valuable!. The motivation for this PR is that these warnings can hint to significant issues in the minimized function, however as a user, it is difficult to understand the problem or what to look for if one does not know how Minuit exactly works. Also they so far miss information needed to actually use these warnings to find problems with the minimized function. This commit adds explanatory text printed in loglevel `Info`, and a short discovery note in the old warnings. To demonstrate why this warning + info with the new `s0` and `p1` information is useful, this is an example where I encountered them in the wild and used its newly printed `s0` and `p1` information to plot the function between `s0` and `p1`, pointing to an issue in the likelihood function I use:. ![image](https://user-images.githubusercontent.com/31772910/199365936-6994973a-8946-4083-b1b9-da2f4f69cc6f.png). This commit also adds a link to the ""Tutorial"" that is referenced for documentation, since otherwise it is very non-trivial for inexperienced people to find it just based on its mention in a comment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11652:826,log,loglevel,826,https://root.cern,https://github.com/root-project/root/pull/11652,1,['log'],['loglevel']
Testability,"This Pull request adds Google Test fixture functionality in the RNTuple DAOS test suite, enabling automatic storage cleanup when running unit tests with real DAOS clusters. ## Changes or fixes:. - Introduces a fixture class for the test suite and registers all five existing tests under it through the `TEST_F` macro. ; - Consolidates shared functionality in the fixture definition. Namely, pool and container label data and expected diagnostics messages from `ROOT::TestSupport`. ; - Uses the `TearDownTestSuite()` call to automatically destroy DAOS containers created for the unit tests when all of them are completed.; - Replaces some duplicated string literals that specify ntuples and models for variables.; - Introduces preproc definition `R__DAOS_TEST_MOCK` to CMake to bypass container destruction system call if using the mock library as underlying storage. ## Pending:. - One error message is not currently suppressed, as it is not emitted by ROOT's exception diagnostics: `client ERR src/client/api/container.c:148 daos_cont_create_with_label() daos_cont_create label=test-multiple-ntuples failed, DER_EXIST(-1004): 'Entity already exists'`. This is the (normal) output of `RDaosContainer` attempting to create a container by default, and ignoring the error if it already exists in the DAOS pool. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12106:30,Test,Test,30,https://root.cern,https://github.com/root-project/root/pull/12106,10,"['Test', 'mock', 'test']","['Test', 'TestSupport', 'mock', 'test', 'test-multiple-ntuples', 'tested', 'tests']"
Testability,"This Pull request adds a missing period in a member-function description for better readability. Changes or fixes: cosmetic change in the description of the `TH1::LabelsInflate()`. Without this change there is no newline between ""Refill histogram"" and ""This function is called by..."" as shown in this screenshot:; ![image](https://user-images.githubusercontent.com/7541582/123423509-4dc71400-d5c8-11eb-8ea5-ca6ebad9dfe7.png). Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8540:444,test,tested,444,https://root.cern,https://github.com/root-project/root/pull/8540,1,['test'],['tested']
Testability,"This Pull request adds several improvements to use UNU.RAN using the DistSampler interface; (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. ; ; The major improvements are:; - Improvements in using directly the string API from `DistSampler`; - Better support for setting method and method options using the `DistSamplerOptions` class; - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface; - Add test program for all the new DistSampler functionality. This PR fixes #7332",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8630:471,test,test,471,https://root.cern,https://github.com/root-project/root/pull/8630,1,['test'],['test']
Testability,"This Pull request adds the `RNTupleInspector` class to the `RNTuple` utility package and can be used for (static) inspection of `RNTuples`. It currently provides basic information on the size and compression of a given `RNTuple`. Next steps will adding functionality for for getting size and compression data on a per-column and per-type basis, and to provide a way to visualize this information. ## Checklist:; - [x] Add unit tests; - [x] Add usage documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11996:427,test,tests,427,https://root.cern,https://github.com/root-project/root/pull/11996,1,['test'],['tests']
Testability,This Pull request exclude running of SOFIE tests when Blas is not found (this is when `tmva-cpu=Off`),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11721:43,test,tests,43,https://root.cern,https://github.com/root-project/root/pull/11721,1,['test'],['tests']
Testability,"This Pull request extends `RPageSink::RPageSinkDaos` to implement `RPageSinkDaos::CommitSealedPageVImpl()`, of signature: ; ```c++; vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(span<RPageStorage::RSealedPageGroup> ranges); ```; , which is virtually declared in the parent class `RPageSink` since PR #10775. . The implemented method modifies the default behavior for committing page ranges, i.e. calling `::CommitSealedPage` repeatedly for each individual page. ; Instead, it coalesces the buffered page ranges - e.g. all pages in a column or cluster - into a batch of vector writes, enabling I/O parallelization after recent optimizations to the `RDaos` library. . As with the batched fetching case in `RPageSourceDaos::LoadClusters()`, the page write requests are aggregated by the pair (Object ID, Distribution Key). This pair is part of the `RDaosKey` determined by the mapping strategy set in `kDefaultDaosMapping` from the pages metadata and the `RPageSinkDaos` instance's atomic counter `fPageId` that uniquely identifies pages in the storage sink. ## Changes or fixes:. * Implements `std::vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges)`; * Modifies the default behavior in `RPageSink::CommitSealedPageV()` to coalesce pages before sending out the write request to storage; * Enables optimized (i.e. batched) vector write requests of multiple pages within a column range by exploiting the refactored `RDaos` interface and the generalized ntuple-object mappings in `RPageStorageDaos`. ## Checklist:. - [x] tested changes locally and on openlab cluster `olsky-03` with DAOS 2.0.x; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10944:1589,test,tested,1589,https://root.cern,https://github.com/root-project/root/pull/10944,1,['test'],['tested']
Testability,"This Pull request extends the initial work of Vedant in #15811 adding the correct support for the tensor generated by the ; Constant operator. These tensors are like initialised tensors but they are not written in the weight file. They are initialised in the Session constructors with the given value, known when parsing the model (it is an attribute of the operator). . The PR has also been tested locally with the model provided in https://root-forum.cern.ch/t/tmva-sofie-operator-type-constant/59599",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15837:392,test,tested,392,https://root.cern,https://github.com/root-project/root/pull/15837,1,['test'],['tested']
Testability,"This Pull request fixes a bug in `RPageSourceDaos` in which the cluster bunch default size does not get overridden by the one provided in `RNTupleReadOptions`. This change thus enables the prefetching of a configurable number of clusters while the current bunch is being processed, similarly to what is done in the constructor for `RPageSourceFile`. ## Changes or fixes:. - `RPageSourceDaos` ctor now uses the value in `RNTupleReadOptions::fClusterBunchSize` to initialize its `RClusterPool` with configurable read-ahead number of clusters, overwriting the default value of `1`. The change parallels the constructor implementation of `RPageSourceFile`. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Related to PR #9100, which introduced the prefetching capability.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10889:676,test,tested,676,https://root.cern,https://github.com/root-project/root/pull/10889,1,['test'],['tested']
Testability,"This Pull request fixes some issues when fitting variable bins histograms. In addition it provides a new version of the fitting test, stressHistoFit.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12883:128,test,test,128,https://root.cern,https://github.com/root-project/root/pull/12883,1,['test'],['test']
Testability,This Pull request fixes the correct dependency of some TMVA tutorial and PyMVA tests to avoid that the input data files are written at the same time. The PR contains also a fix for th TMVA_SOFIE_RSofieReader tutorial to handle correctly the model output vector,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12211:79,test,tests,79,https://root.cern,https://github.com/root-project/root/pull/12211,1,['test'],['tests']
Testability,"This Pull request fixes this issue https://github.com/root-project/root/issues/14565. It implment the FLT_MAX mechanism for THStack::GetMaximum() and THStack::GetMiniumum(); The following example illustrates the mechanism:. ```; void hstackgetmax() {; auto hs = new THStack(""hs"",""Stacked 1D histograms"");; auto h1st = new TH1F(""h1st"",""test hstack"",10,-4,4);; h1st->FillRandom(""gaus"",20000);; hs->Add(h1st);; auto h2st = new TH1F(""h2st"",""test hstack"",10,-4,4);; h2st->FillRandom(""gaus"",15000);; hs->Add(h2st);; auto h3st = new TH1F(""h3st"",""test hstack"",10,-4,4);; h3st->FillRandom(""gaus"",10000);; hs->Add(h3st);; auto C = new TCanvas();; C->Divide(2,1);; C->cd(1); hs->Draw();; C->cd(2); hs->Draw(""nostack"");; printf(""Max = %f\n"", hs->GetMaximum());; printf(""Max nostack = %f\n"", hs->GetMaximum(""nostack""));; printf(""Max = %f\n"", hs->GetMaximum("""", 10000));; printf(""Max nostack = %f\n"", hs->GetMaximum(""nostack"", 4000));; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14666:335,test,test,335,https://root.cern,https://github.com/root-project/root/pull/14666,3,['test'],['test']
Testability,"This Pull request introduces the Root Storage for BDT. ; Initially developed by @guitargeek(https://github.com/guitargeek/tmva-to-xgboost/) this PR implements the data structure for storing the model configuration & weights, Parse function for translating a TMVA BDT `.xml` file, and a mapping interface for generating inference code. ## Progress; - [x] Data structure for storing model configuration and weights; - [x] Serialization of the class for writing/reading to `.root` files; - [x] `Parse()` function for translating a TMVA BDT `.xml` file ; - [ ] Mapping Interface to TMVA Tree Inference for generating inference code. ## Checklist:; - [x] tested changes for `Parse()`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8873:650,test,tested,650,https://root.cern,https://github.com/root-project/root/pull/8873,1,['test'],['tested']
Testability,"This Pull request introduces wrappers to obfuscate backend-specific implementation details, distancing the storage layer functionality in `RPageStorageDaos` from the concrete backend in `RDaos` and `libdaos`. . ## Changes or fixes:. - Wraps the dictionary that groups page requests by their co-locality keys (a type previously aliased as `MultiObjectRWOperation_t`) into a new wrapper class `MultiObjectRWOperation`. The class manages the insertion of new request akeys and associated IOVs into the dictionary and exposes `begin` and `end` iterators for it.; - Moves `RDaosKey` to the header file and aliases the concrete types of `DistributionKey_t` and `AttributeKey_t`, used by other structures in the backend.; - Introduce wrapper structure `RDaosIov` to obfuscate the libdaos-specific `d_iov_t` structure and `d_iov_set()` call from the storage layer for object stores.; - Hide DAOS error code resolution function (`d_errstr`) in `GetDaosError()`.; - Directly use existing `RDaosObject::ObjClassId` wrapper structure around the default metadata class definition in the storage layer. ## Checklist:. - [x] tested changes locally + DAOS `delphi` node; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12109:1110,test,tested,1110,https://root.cern,https://github.com/root-project/root/pull/12109,1,['test'],['tested']
Testability,This Pull request is a back port of the fix for the KS 1 sample test ; (see #9819 ). This PR fixes #9636,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9855:64,test,test,64,https://root.cern,https://github.com/root-project/root/pull/9855,1,['test'],['test']
Testability,This Pull request makes minor formatting of code and documentation in RModelParsers. ## Checklist:; - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8954:106,test,tested,106,https://root.cern,https://github.com/root-project/root/pull/8954,1,['test'],['tested']
Testability,This Pull request makes the conversion of stl vectors to RVec optional when using Snapshot() . ## Changes or fixes:; Propagating the relevant flag to the Snapshot() call. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15503,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15895:192,test,tested,192,https://root.cern,https://github.com/root-project/root/pull/15895,1,['test'],['tested']
Testability,This Pull request modifies `tmva/sofie/CMakeLists.txt` by adding `ROperator_Conv.hxx` in the INCLUDE files. ## Checklist:; - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8896:129,test,tested,129,https://root.cern,https://github.com/root-project/root/pull/8896,1,['test'],['tested']
Testability,This Pull request provides the support for 3d convolution. . A test is added in TestSofieModel,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9457:63,test,test,63,https://root.cern,https://github.com/root-project/root/pull/9457,2,"['Test', 'test']","['TestSofieModel', 'test']"
Testability,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10795:1337,test,tested,1337,https://root.cern,https://github.com/root-project/root/pull/10795,1,['test'],['tested']
Testability,"This Pull request refactors `RPageSourceDaos::LoadClusters()` to coalesce the fetch requests for pages in the same cluster bunch before calling `RDaosContainer::ReadV`, instead of launching a call to remote storage for the pages of each cluster separately. A cluster bunch corresponds to all clusters being fetched together by `LoadClusters()` at a time. . Since the call by `ReadV()` is ultimately blocking until all requests are done, this change enables the asynchronous page fetch requests from different clusters to share queue and flight time; thus, remote storage can parallelize them toward a higher read throughput. . The requests are still coalesced according to object ID and distribution key resulting from the mapping strategy in `kDefaultDaosMapping`. The modification allows support for new mappings that do not feature the ntuple cluster ID among the object ID and distribution key (i.e. such page requests may now be parallelized despite not being from the same cluster). ## Changes or fixes:; - `RPageSourceDaos::LoadClusters()` has been refactored to batch up page requests from all provided clusters before the blocking `RDaosContainer::ReadV()` call. ## Checklist:. - [x] tested changes locally + openlab `olsky-03`; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10982:1193,test,tested,1193,https://root.cern,https://github.com/root-project/root/pull/10982,1,['test'],['tested']
Testability,"This Pull request removes a log message reported when using MethodCategory, see ; https://root-forum.cern.ch/t/stray-cout-in-tmva-getmvavalue/50287",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10707:28,log,log,28,https://root.cern,https://github.com/root-project/root/pull/10707,1,['log'],['log']
Testability,This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15403:100,test,test,100,https://root.cern,https://github.com/root-project/root/pull/15403,1,['test'],['test']
Testability,This Pull request replaces #8847 from @axmat adding the GRU operator to TMVA SOFIE. In addition to the original code from Axmat it adds a full network test of a GRU and fix some issues in the operator.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9390:151,test,test,151,https://root.cern,https://github.com/root-project/root/pull/9390,1,['test'],['test']
Testability,This Pull request updates xrootd version (by M.K.Simon). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8963:78,test,tested,78,https://root.cern,https://github.com/root-project/root/pull/8963,1,['test'],['tested']
Testability,This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10435:103,test,tested,103,https://root.cern,https://github.com/root-project/root/pull/10435,1,['test'],['tested']
Testability,This Pull request: updates `CladDerivator.h` to follow Clad custom derivative where all functions are based on pushforwards and pullbacks. ## Changes: [CladDerivator.h](https://github.com/root-project/root/blob/master/math/mathcore/inc/Math/CladDerivator.h); ## Checklist:. - [ X] tested changes locally; - [ ] updated the docs (if necessary): not required. This PR fixes # https://github.com/vgvassilev/clad/issues/510,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12021:281,test,tested,281,https://root.cern,https://github.com/root-project/root/pull/12021,1,['test'],['tested']
Testability,This addresses a warning of recent Clang versions about the `use of bitwise '|' with boolean operands [-Wbitwise-instead-of-logical]`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10787:124,log,logical,124,https://root.cern,https://github.com/root-project/root/pull/10787,1,['log'],['logical']
Testability,This addresses point 1 of issue ROOT-9742. A test macro with instructions on how optical surface information can be retrieved from TGeoManager is provided in: tutorials/geom/gdml/testoptical.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3149:45,test,test,45,https://root.cern,https://github.com/root-project/root/pull/3149,2,['test'],"['test', 'testoptical']"
Testability,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8417:15,test,test,15,https://root.cern,https://github.com/root-project/root/pull/8417,4,"['Test', 'test']","['Test', 'test']"
Testability,This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK; PDF output.......................................... 5 FAILED; Result = 12968; Reference = 12802; Error = 166 (was 150); GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK; PDF output......................................... 43 FAILED; Result = 14206; Reference = 14075; Error = 131 (was 100); GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5957:38,Test,Test,38,https://root.cern,https://github.com/root-project/root/pull/5957,2,['Test'],['Test']
Testability,"This adds gdb pretty printers for a few objects such as TString and TNamed, as well; as a couple of RooFit objects. gdb can automatically load them if `add-auto-load-safe-path`; is set to ROOT's lib directory.; The printers should only be installed during debug builds. A couple of things are still unclear:; - `file(COPY ...` is used to copy the printers into the build directory. This will only run when cmake is run, but not during make. The pretty-printers will therefore not get updated. Is that a problem? A solution should be to create targets that are being kept up-to-date by make.; - Is it correct to use `install(FILES ...)` to install?; - I added a roottest that starts root.exe in gdb, and tries to load the printers. This may fail; o With old gdbs; o With release builds. gdb should fail to load the printers because they are not installed. Probably, the test should be disabled during release builds. Let's see if it fails as expected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3633:869,test,test,869,https://root.cern,https://github.com/root-project/root/pull/3633,1,['test'],['test']
Testability,"This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp; * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`; still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15437:152,test,tests,152,https://root.cern,https://github.com/root-project/root/pull/15437,4,['test'],"['test', 'tests']"
Testability,"This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp; * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`; still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321. (cherry picked from commit c767271b30bde91d885d147b95e2f91d3d7a20b6, backport of https://github.com/root-project/root/pull/15437)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15753:152,test,tests,152,https://root.cern,https://github.com/root-project/root/pull/15753,4,['test'],"['test', 'tests']"
Testability,This allows for testing that there is no unexpected duplicate (duplicates are unavoidable in case; of 'multiple' pass throught the TTree cluster(s)).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1982:16,test,testing,16,https://root.cern,https://github.com/root-project/root/pull/1982,1,['test'],['testing']
Testability,This allows to interactively adjust histogram parameters before; performing a projection to a lower dimensional representation. This patch implements ROOT-4515. A unit test is being added in root-mirror/roottest/pull/6.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/212:168,test,test,168,https://root.cern,https://github.com/root-project/root/pull/212,1,['test'],['test']
Testability,This allows to resolved using statement and find the target enum. This fixes #15406 and is tested by https://github.com/root-project/roottest/pull/1118. This also fixes: https://github.com/root-project/root/issues/12685,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15408:91,test,tested,91,https://root.cern,https://github.com/root-project/root/pull/15408,1,['test'],['tested']
Testability,This also fixes the test `roottest-root-core-execStatusBitsCheck` when building with `runtime_cxxmodules=OFF`. Closes https://github.com/root-project/root/issues/13058,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13363:20,test,test,20,https://root.cern,https://github.com/root-project/root/pull/13363,1,['test'],['test']
Testability,This also has the advantage that they don't try to upload test results that the nodes happen to find in the filesystem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13086:58,test,test,58,https://root.cern,https://github.com/root-project/root/pull/13086,1,['test'],['test']
Testability,This also includes rudimentary support for numeric integrals in 1D with; the codegen backend as a demonstrator. A second commit cleans up the `RooFuncWrapper` class a little bit. A unit test that fits a 1D function created with the RooClassFactory using `codegen` is also added.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13812:186,test,test,186,https://root.cern,https://github.com/root-project/root/pull/13812,1,['test'],['test']
Testability,This assumption was causing rare breakages in test/datasource_root.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1205:46,test,test,46,https://root.cern,https://github.com/root-project/root/pull/1205,1,['test'],['test']
Testability,"This avoids an error in the nightlies:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-debian10-i386,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_v7_ntuple_ntpl008_import/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13447:186,test,testReport,186,https://root.cern,https://github.com/root-project/root/pull/13447,1,['test'],['testReport']
Testability,This avoids problems during ctest like:; ```; 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec; Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C...; SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory); Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written.; (int) 0; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3029:54,Test,Test,54,https://root.cern,https://github.com/root-project/root/pull/3029,1,['Test'],['Test']
Testability,"This avoids the indirect dependence of ROOT on CURL, because the CURL dependence of CFITSIO is optional since version 3.49: https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/docs/changes.txt#L199. Note: I tested the `builtin_cfitsio` locally on Linux, and for macOS and Linux the CI will cover it because these platforms configure with `builtin_cfitsio=ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15508:236,test,tested,236,https://root.cern,https://github.com/root-project/root/pull/15508,1,['test'],['tested']
Testability,"This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:; ```cpp; #include ""TFile.h""; #include ""TTree.h""; #include ""TString.h""; #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;; const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {; TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");; TTree *tree = new TTree(""tree"", """");; tree->Branch(""outval"", &outval);; for (unsigned int ientry = 0; ientry < nentries; ++ientry) {; tree->Fill();; }; tree->Write();; fout->Close();. // make sure that each key has a distinct timestamp to maximally; // provoke different hashes for streamer info in each file; std::this_thread::sleep_for(1100ms);; }. }; ```. Test event loop:; ```python; import ROOT; ROOT.gInterpreter.ProcessLine("".O3""); ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""); chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain); res = d.Sum(""outval""). resval = res.GetValue(); print(resval); ```. With 256 threa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9486:972,test,test,972,https://root.cern,https://github.com/root-project/root/pull/9486,1,['test'],['test']
Testability,"This broke the tests:; ```; 729: Processing /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C...; 729: In file included from input_line_10:1:; 729: /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C:39:43: error: use of undeclared identifier 'scat'; 729: TPaletteAxis *palette = (TPaletteAxis*)scat->GetGraph()->GetListOfFunctions()->FindObject(""palette"");; 729: ^; ```. Tutorials are executed as part of the CI and therefore should *never* be merged with `[skip-ci]`! The simple fix is in https://github.com/root-project/root/pull/15923.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15871#issuecomment-2188647929:15,test,tests,15,https://root.cern,https://github.com/root-project/root/pull/15871#issuecomment-2188647929,1,['test'],['tests']
Testability,"This bug report:; ![obraz_2021-01-05_030717](https://user-images.githubusercontent.com/483575/103598565-36ee1180-4f03-11eb-891b-2a66e7bb2062.png). Reference from tutorial: https://root.cern.ch/doc/master/alice__vsd_8C.html; ![image](https://user-images.githubusercontent.com/483575/103598652-6e5cbe00-4f03-11eb-9716-f77d792b80e9.png). ### Describe the bug; By running one of the ROOT tutorials:. $ root alice_vsd.C. I do not see any button to change events (see the image above). Apparently, from the log:. > gif2ASImage():2300:</usr/lib/root/6.22/icons/GoBack.gif> (null); > Warning in <TASImage::GetMask>: No image; > gif2ASImage():2300:</usr/lib/root/6.22/icons/GoForward.gif> (null); > Warning in <TASImage::GetMask>: No image. however:; ```; $ ls -all /usr/lib/root/6.22/icons/GoBack.gif /usr/lib/root/6.22/icons/GoForward.gif; -rw-r--r-- 1 root root 1177 11-27 16:00 /usr/lib/root/6.22/icons/GoBack.gif; -rw-r--r-- 1 root root 1166 11-27 16:00 /usr/lib/root/6.22/icons/GoForward.gif; ```. ### Expected behavior; I expect to see buttons with figures. ### To Reproduce; $ root alice_vsd.C. from the eve tutorials. ### Setup. 1. ROOT version: 6.22.06; 2. Operating system: Linux Gentoo; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: compiled from sources via Gentoo package manager/portage, uses external libafterimage",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6985:501,log,log,501,https://root.cern,https://github.com/root-project/root/issues/6985,1,['log'],['log']
Testability,This can be problematic in test environments.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15346:27,test,test,27,https://root.cern,https://github.com/root-project/root/pull/15346,1,['test'],['test']
Testability,"This can have a significant influence on the first cluster size: Because the written bytes are misreported, it will grow quite large (by factors above the target size). Later clusters will sort of auto-correct with the compression ratio logic...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14636#issuecomment-1934519332:237,log,logic,237,https://root.cern,https://github.com/root-project/root/pull/14636#issuecomment-1934519332,1,['log'],['logic']
Testability,"This causes a flood of ""NON_XML_CHAR"" etc output in Jenkins, cluttering the output and making the actual failure virtually invisible. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12908:199,test,tested,199,https://root.cern,https://github.com/root-project/root/pull/12908,1,['test'],['tested']
Testability,"This chane is an optimization of the PyROOT value printing. Instead of jitting the value printing at every invocation of the __str__ method, the jitting now happens only once per type. The printer function pointers are stored in a map. The time needed to print is now equivalent to the previous one only for the first print, much faster afterwards. The memory used is also much lower, since traces in the AST are left only at the first print and only the type name and function pointer are stored in an unordered_map. Fixes https://github.com/root-project/root/issues/12817. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13901:640,test,tested,640,https://root.cern,https://github.com/root-project/root/pull/13901,1,['test'],['tested']
Testability,This change can be tested only in collection_proxies.C demo.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7369:19,test,tested,19,https://root.cern,https://github.com/root-project/root/pull/7369,1,['test'],['tested']
Testability,This change deals with argument parsing and could not have caused the test failures in the reports.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4349#issuecomment-528822213:70,test,test,70,https://root.cern,https://github.com/root-project/root/pull/4349#issuecomment-528822213,1,['test'],['test']
Testability,"This change is an optimization of the PyROOT value printing. Instead of jitting the value printing at every invocation of the __str__ method, the jitting now happens only once per type. The printer function pointers are stored in a map. The time needed to print is now equivalent to the previous one only for the first print, much faster afterwards. The memory used is also much lower, since traces in the AST are left only at the first print and only the type name and function pointer are stored in an unordered_map. Fixes https://github.com/root-project/root/issues/12817. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # https://github.com/root-project/root/issues/12817",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13876:641,test,tested,641,https://root.cern,https://github.com/root-project/root/pull/13876,1,['test'],['tested']
Testability,"This change is introduced to fix a problem with redefinition of RooMath; when running stressRooFit in interpreted mode on some CI nodes. You can see the errors here for example:; https://github.com/root-project/root/pull/9004#issuecomment-954950871. Copy paste from the log:; ```; Processing /home/sftnight/build/workspace/root-pullrequests-build/root/test/stressRooFit.cxx...; In file included from input_line_8:1:; In file included from /home/sftnight/build/workspace/root-pullrequests-build/root/test/stressRooFit.cxx:15:; /home/sftnight/build/workspace/root-pullrequests-build/build/include/RooMath.h:25:7: error: redefinition of 'RooMath'; class RooMath {; ^; /home/sftnight/build/workspace/root-pullrequests-build/build/include/RooGaussModel.h:21:10: note: '/home/sftnight/build/workspace/root-pullrequests-build/build/include/RooMath.h' included multiple times, additional include site in header from module 'RooFit.RooGaussModel.h'; #include ""RooMath.h""; ^; /home/sftnight/build/workspace/root-pullrequests-build/build/include/module.modulemap:2717:10: note: RooFit.RooGaussModel.h defined here; module ""RooGaussModel.h"" { header ""RooGaussModel.h"" export * }; ^; /home/sftnight/build/workspace/root-pullrequests-build/root/test/stressRooFit.cxx:15:10: note: '/home/sftnight/build/workspace/root-pullrequests-build/build/include/RooMath.h' included multiple times, additional include site here; #include ""RooMath.h""; ^; CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:227 (message):; error code: 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9214:270,log,log,270,https://root.cern,https://github.com/root-project/root/pull/9214,4,"['log', 'test']","['log', 'test']"
Testability,This changes are need for collection_proxies.C demo to work.; Tested this on Fedora 30.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4079:62,Test,Tested,62,https://root.cern,https://github.com/root-project/root/pull/4079,1,['Test'],['Tested']
Testability,"This class is for internal testing only and can be used to measure the software overhead of serializing elements into pages, without actually writing them onto disk or even serializing the RNTuple headers and footers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14502:27,test,testing,27,https://root.cern,https://github.com/root-project/root/pull/14502,1,['test'],['testing']
Testability,"This code is outdated and needs to be updated. But we anyway don't use or; test this code in any way, so let's send it to the git history were dead; code belongs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1461:75,test,test,75,https://root.cern,https://github.com/root-project/root/pull/1461,1,['test'],['test']
Testability,This commit adds support for using RooNllVarNew in code-squashing/AD. It also adds a new test that uses code-squashing and AD based derivatives to minimize a simple model.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12576:89,test,test,89,https://root.cern,https://github.com/root-project/root/pull/12576,1,['test'],['test']
Testability,"This commit adjusts the allowed deviation from the expected value so that the test passes. The reported error is (with slight variations in the exact numbers):. /builddir/build/BUILD/root-6.20.06/roofit/roostats/test/testHypoTestInvResult.cxx:24: Failure; The difference between result->UpperLimitEstimatedError() and 0.059684301 is 1.1846561807221656e-07, which exceeds 1.E-8, where; result->UpperLimitEstimatedError() evaluates to 0.05968418253438193,; 0.059684301 evaluates to 0.059684301000000002, and; 1.E-8 evaluates to 1e-08.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5867:78,test,test,78,https://root.cern,https://github.com/root-project/root/pull/5867,3,['test'],"['test', 'testHypoTestInvResult']"
Testability,This commit changes the default behaviour of tests on Windows to accomodate Module builds. @vgvassilev @bellenot,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6179:45,test,tests,45,https://root.cern,https://github.com/root-project/root/pull/6179,1,['test'],['tests']
Testability,"This commit changes the way in which the input dataset is split in logical ranges of entries. It also changes the subsequent creation of an RDataFrame instance inside a distributed task.; For a TTree based dataset, this happens through the creation of a TChain that represents the subset of the original dataset that contains the entries in the range. Before this commit:; For the TTree based case, the entries of the range are global with respect to the TChain created inside the distributed task.; `TChain.SetCacheEntryRange` is called with the start and end entries of the range to make sure we don't read more than needed; An RDataFrame is created with the chain as argument. The `Range` operation is used to select only the entries of the TChain in the current task that are inside the input entry range. After this commit:; For the TTree based case, the input range will report global entries with respect to the TChain of the task. But it will also report local entries with respect to each single file of the TChain in the current task.; A global TEntryList is created and filled with one sub-TEntryList per file in the chain. This allows to do a preselection directly in the TChain of the entries that should be processed or not.; `SetCacheEntryRange` is still called to ensure we don't read more than needed (hence the need to still keep global entries in the range object); The TChain (with the TEntryList) is passed as argument to an RDataFrame constructor. ## TODOs. - [x] ~add some check against using multiple times the same filename, to prevent hitting https://github.com/root-project/root/issues/8505~ No longer needed after #8660 ; - [x] Old tests adapted to new logic; - [x] Added one new test to check against reading the wrong number of entries depending on the number of partitions (a result of using TEntryList with multiple times the same treename and filename)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8646:67,log,logical,67,https://root.cern,https://github.com/root-project/root/pull/8646,4,"['log', 'test']","['logic', 'logical', 'test', 'tests']"
Testability,"This commit contains automatic changes done by `clang-tidy`. This commit was generated more or less automatically with this Python; script that uses `clang-tidy`:. ```Python; import os; import glob; import subprocess; import tqdm. """"""; For clang-tidy to work, you have to copy the compile_commands.json from the; build directory back into the repo directory (just like in; .ci/copy_headers.sh).; """""". def get_sources(directory, extensions):. files = []. for ext in extensions:; files += glob.glob(; os.path.join(directory, ""**/*"" + ext), recursive=True; ). return files. """"""; Recursively find extensions in directory, to figure out whic hextensions; should be globbed for.; find . -type f -name '*.*' | sed 's|.*\.||' | sort -u; """"""; extensions = ["".h"", "".hpp"", "".hxx"", "".cpp"", "".cc"", "".cxx""]. """"""; Some extensions are recognized as C and not as C++ files by clang-tidy. We; need to rename them, and this dict specifies how file extensions should be; replaced.; """"""; rename_dict = {"".h"": "".hpp""}. files = get_sources(""test"", extensions). cflags = (; subprocess.check_output([""root-config"", ""--cflags""]).strip().decode(""utf-8""); ). for file in tqdm.tqdm(files):. file_renamed = file; for ext, ext_renamed in rename_dict.items():; if file.endswith(ext):; file_renamed = file.replace(ext, ext_renamed). if file_renamed != file:; os.rename(file, file_renamed). cmd = [; ""clang-tidy"",; ""-checks=modernize-use-override"",; ""--fix"",; file_renamed,; ""--"",; ] + cflags.split("" ""); subprocess.call(cmd, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL). if file_renamed != file:; os.rename(file_renamed, file). """"""; Finally, replace the ClassDef with the ClassDefOverride macros.; find test -type f -print | xargs sed -i 's/ClassDef(/ClassDefOverride(/'; ...and change back the ClassDefOverride of non-overriding base classes.; """"""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11438:1018,test,test,1018,https://root.cern,https://github.com/root-project/root/pull/11438,2,['test'],['test']
Testability,"This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** segmentation violation; ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3; * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10); * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13926:1433,test,tested,1433,https://root.cern,https://github.com/root-project/root/pull/13926,1,['test'],['tested']
Testability,"This commit fixes a problem in weighted fits with CUDA, replacing the kernel for weighted NLL sums with a new multi-block kernel that works for all unit tests. The `stressRooFit` test suite is now passing again with the CUDA backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13311:153,test,tests,153,https://root.cern,https://github.com/root-project/root/pull/13311,2,['test'],"['test', 'tests']"
Testability,"This commit fixes two issues:. 1. Introduce `RooProduct` constructor from two RooAbsReals to be; consistent with the `RooRrodPdf`, which has a constructor from two; RooAbsPdfs. 2. Remove a useless dummy constructor for a `RooProdPdf` with no; factors, which somehow prevented the constructor from a RooFit; collection to be picked up correctly by `RooWorkspace::factory()`. The request to change the RooProduct and RooProdPdf constructors from; RooFit collections to take RooArgSets and not RooArgLists (https://github.com/root-project/root/issues/7809#issuecomment-817683625) was not; followed. This would be a breaking change for people that use; `RooProduct` to square a function for example. A unit test for the issue was also implemented. Closes https://github.com/root-project/root/issues/7809.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10797:703,test,test,703,https://root.cern,https://github.com/root-project/root/pull/10797,1,['test'],['test']
Testability,"This commit https://github.com/root-project/root/pull/12484/commits/b9d085e4540c3a12253da77c56f581df3e68c1ad is adjusting to python3. I am not sure if changes in other scripts is necessary. > So given that JsROOT is not working very well and no user complained, I would not spend more time on this and suggest to merge this PR and close the issue. Here problem not jsroot but jsMVA. I have no tests to check functionality of NeuralNetwork. Most probably it will not work after merging PR. Therefore I prefer test it before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12484#issuecomment-2126329940:393,test,tests,393,https://root.cern,https://github.com/root-project/root/pull/12484#issuecomment-2126329940,2,['test'],"['test', 'tests']"
Testability,"This commit provides a rewrite of key functions of TGeoParallelWorld, achieving: . (a) faster initialization; (b) faster execution of the Safety function (from ~O(N) to ~O(1)) ; (c) faster or equal execution of FindNode/FindBoundary functions (~log(N)) ; (d) less memory consumption (better memory scalability). The development for this commit was motivated from a use case in ALICE, in which the parallel world ""scene"" can be very large (~100K volumes). In this case, TGeoVoxelFinder takes very long; to construct and consumes a very large amount of memory (GBs). In addition, the evaluation of the Safety function dominates the Geant simulation time. The improvements in this commit are mainly achieved through:. * The use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442:245,log,log,245,https://root.cern,https://github.com/root-project/root/pull/16442,1,['log'],['log']
Testability,"This commit provides an (optional) optimization to reduce the cost of safety evaluations associated with TGeoParallelWorld. The approach consists in the introduction of additional cache-state in TGeoNavigator. This state remembers the last location for which TGeoParallelWorld::Safety was evaluated, together with the corresponding value returned. Since TGeoNavigator follows the evolution of tracks step-by-step, we have some sort of history-locality. This means that the cache-state has a high-probability of being relevant for multiple track locations in a row. The optimization proposed here is orthogonal to other improvements. It adds on top of algorithmic improvements within TGeoParallelWorld (bounding volume hierarchies, see separate PR), gaining a few extra percent in speed. By default, the new feature is not enabled by default for backward compatibility. Once fully verified, we can make it the default mode. That said, in ALICE simulations, the caching did not modify stepping behaviour and yielded identical results compared to not doing the caching. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16470:1088,test,tested,1088,https://root.cern,https://github.com/root-project/root/pull/16470,1,['test'],['tested']
Testability,This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it.; Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. ; In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before.; This commit fixes the problem reported in ; ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3425:411,test,test,411,https://root.cern,https://github.com/root-project/root/pull/3425,3,"['log', 'test']","['log', 'test', 'testRootFinder']"
Testability,"This commit refactors the mapper function so that the logic responsible; for creating the correct RDataFrame instance based on the type of data; source is done in its corresponding HeadNode class. This makes the; interface more uniform and will contribute to adding new data sources in; the future more easily. In each HeadNode class there is now a method; called `generate_rdf_creator`, responsible for creating a function that; in turns knows how to build an RDataFrame instance from one metadata; range (i.e. the information sent to a distributed task).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9298:54,log,logic,54,https://root.cern,https://github.com/root-project/root/pull/9298,1,['log'],['logic']
Testability,This commit reverts root-project/root@69568116cd. The CtorsConstants variable is not used. The commit log has a simple tests which now works without this patch. Thanks to Jonas Hahnfeld (@hahnjo) for pointing this out!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10827:102,log,log,102,https://root.cern,https://github.com/root-project/root/pull/10827,2,"['log', 'test']","['log', 'tests']"
Testability,This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12511:70,mock,mock,70,https://root.cern,https://github.com/root-project/root/pull/12511,2,"['mock', 'test']","['mock', 'test']"
Testability,"This conservative assert intended to capture future uses of the shouldPermanentlyIgnore routine and check if we have specified an absolute non-symlinked path. Turns out that when we scan for libraries we iterate a given folder which may move files around. Then the iterable (official) filename's real path might differ at the point of iteration and the point of the check. Some file systems use a temporary filename while copying/moving file and the rename it to the real filename preserving atomicity of the operations. It looks like this exactly happens in the description of ROOT-10791 -- the iterator gives the expected real path of the filename which is not yet available when we ask for the real path of that path we get something different (using the same inode) eg: `mathsymb.ps` vs `mathsymb.ps_tmp_4810`. Instead of asserting, let the file system handles this instead. Kudos to Philippe Canal (@pcanal) for investigating this sporadic failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5683:18,assert,assert,18,https://root.cern,https://github.com/root-project/root/pull/5683,2,['assert'],"['assert', 'asserting']"
Testability,"This conservative assert intended to capture future uses of the; shouldPermanentlyIgnore routine and check if we have specified an absolute; non-symlinked path. Turns out that when we scan for libraries we iterate a given folder which may; move files around. Then the iterable (official) filename's real path might; differ at the point of iteration and the point of the check. Some file systems; use a temporary filename while copying/moving file and the rename it to the; real filename preserving atomicity of the operations. It looks like this exactly happens in the description of ROOT-10791 -- the; iterator gives the expected real path of the filename which is not yet available; when we ask for the real path of that path we get something different (using the; same inode) eg: `mathsymb.ps` vs `mathsymb.ps_tmp_4810`. Instead of asserting, let the file system handles this instead. Kudos to Philippe Canal for investigating this sporadic failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5741:18,assert,assert,18,https://root.cern,https://github.com/root-project/root/pull/5741,2,['assert'],"['assert', 'asserting']"
Testability,"This ctor makes the following buggy code compile, but we would prefer it to rather not compile:. ```cpp; TList mylist = new TList();; ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary) - added to deprecation list",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15451:160,test,tested,160,https://root.cern,https://github.com/root-project/root/pull/15451,1,['test'],['tested']
Testability,"This currently compiles and works, but probably should not (we are reading the subcollection as if it were a scalar):. https://github.com/root-project/root/blob/6bd78bb934c2ef8833ca70dd78c7872315cb99a6/tree/ntuple/v7/test/rfield_vector.cxx#L23-L31",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10466:217,test,test,217,https://root.cern,https://github.com/root-project/root/issues/10466,1,['test'],['test']
Testability,"This depends on #5998 . - TMVA was somehow vetoing dataframe python tutorials. These have been reactivated.; - The vetoing logic in general has been overhauled, so it's more straight-forward, and the number of active / vetoed tutorials is correctly reported by cmake.; - Fix a few tutorials that wouldn't launch or compile. ### Overhaul of veto-or-fail when python packages are missing; Disable (instead of veto) python tutorials that cannot work when python packages are missing. This happens by listing the required packages when registering the test or tutorial:; ```; ROOT_ADD_PYUNITTEST(pyroot_pyz_ttree_branch ttree_branch.py PYTHON_DEPS numpy); ```; Before launching the tutorial/test, cmake will run a fixture, which is a simple `import <package>`. If this passes, all dependent tutorials/tests are run. If it fails, it looks like this:; ![image](https://user-images.githubusercontent.com/16205615/86784643-0c112680-c062-11ea-84a8-8ef4c5eb8e23.png). The advantage of this is that one doesn't even have to open the test output, because cmake already communicates clearly that the failure is due to missing packages. As discussed in Moday's meeting, all tests with extra runtime dependencies now are also labelled `python_runtime_deps`. This gets assigned automatically if `PYTHON_DEPS` is not empty.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5938:123,log,logic,123,https://root.cern,https://github.com/root-project/root/pull/5938,6,"['log', 'test']","['logic', 'test', 'tests']"
Testability,"This editor command (usually binded to Ctrl+T), transposes the character located at the cursor and the one to its left.; However, its behavior was incorrect if the cursor was at end of the line, invoking `std::string::operator[]()` passing an index that is out of bounds. In that case, as per GNU Readline behavior, it should swap the two last characters. ## Checklist:; - [X] tested changes locally. This PR fixes #10133.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10142:377,test,tested,377,https://root.cern,https://github.com/root-project/root/pull/10142,1,['test'],['tested']
Testability,This enabled shorter command line invocations like `root -qle 1+1` instead of `root -q -l -e 1+1`. Not sure how we should go about testing. The non-combined options are sort of tested by running `hsimple.C` at the end of the build.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2616:131,test,testing,131,https://root.cern,https://github.com/root-project/root/pull/2616,2,['test'],"['tested', 'testing']"
Testability,"This enables us to write performance benchmarks for specific ROOT functional points. Some of the advantages:; * We can split performance tests from unit tests;; * We can configure the benchmarks in a uniform way, specifying classes of benchmarks along with their running parameters (such as iterations);; * We can calculate asymptotic complexity (Big O) of the benchmarked items;; * Multithreading is a first class citizen;; * We can fine tune optimization levels (preventing some code to be optimized away);; * Rich reporting options;; * Possibility for calculating statistical performance deviations;; * More can be found [here](https://github.com/google/benchmark). This would enable finer grained benchmarking of vectorized code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/688:37,benchmark,benchmarks,37,https://root.cern,https://github.com/root-project/root/pull/688,8,"['benchmark', 'test']","['benchmark', 'benchmarked', 'benchmarking', 'benchmarks', 'tests']"
Testability,This excludes tests which are failing in runtime modules nightly builds.; We want to add runtime modules bot to incrementals and PRs so that; people can fix their bugs before commiting.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1992:14,test,tests,14,https://root.cern,https://github.com/root-project/root/pull/1992,1,['test'],['tests']
Testability,"This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"".; Just as for BeginEH, EndEH might not see the complete picture of an already; evaluated EST from a different Decl in the redecl chain. Teach it to look; at the most recent. This assert hits when:; - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;; - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get; an updated EST; In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked; at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6139:55,assert,assert,55,https://root.cern,https://github.com/root-project/root/pull/6139,3,"['assert', 'test']","['assert', 'test']"
Testability,This extends the aforementioned ranges of integral-like values to model random access ranges. The unit tests have been extended to cover the new functionality.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12140:103,test,tests,103,https://root.cern,https://github.com/root-project/root/pull/12140,1,['test'],['tests']
Testability,"This failure exists since ROOT 6: while CINT happily converted 1 to the world, cling refuses to convert it to e.g. const char*. Pass `0` which is ""more compatible"" with datatypes. This is still terrible design, but at least it is not making things worse, only better... Before TNamed::SetName was looked up as a call `named.SetName(1)` which - with cling - means that no method is found. Now `named.SetName(0)` finds the right method. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12956:500,test,tested,500,https://root.cern,https://github.com/root-project/root/pull/12956,1,['test'],['tested']
Testability,This first version is there for testing. Adequate doc will be added before merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3046#issuecomment-441602211:32,test,testing,32,https://root.cern,https://github.com/root-project/root/pull/3046#issuecomment-441602211,1,['test'],['testing']
Testability,"This fix #6726. As reported by CMSSW tests (for example: cms-sw/cmsdist#6314 (comment)) where the data appear odd/corrupted, there is an issue in TStreamerInfo::GenerateInfoForPair (which is almost always used for std::pair in the tip of v6.22 and master). The problem is when calculating the offset of the second data member, TStreamerInfo::GenerateInfoForPair uses (unwittingly, of course :) ), the value zero for the size of the enums.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6728:37,test,tests,37,https://root.cern,https://github.com/root-project/root/pull/6728,2,['test'],['tests']
Testability,"This fix will be needed for 6.30 too. Opening this PR now so that you know it is needed, but I will be continuing to run some tests today and may push some more changes if I find more bugs!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13784:126,test,tests,126,https://root.cern,https://github.com/root-project/root/pull/13784,1,['test'],['tests']
Testability,"This fixed the warnings for me and passes on all systems, but it seems we didn't get a build slot on centos7 yet. As it will most likely also pass there too, can we get this merged @dpiparo that I can test #759 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/762#issuecomment-315048862:201,test,test,201,https://root.cern,https://github.com/root-project/root/pull/762#issuecomment-315048862,1,['test'],['test']
Testability,This fixes #10357 (a race condition when reading vectors with custom; allocators with TTreeProcessorMT that also affected RDataFrame). Co-authored-by: Philippe Canal <pcanal@fnal.gov>. EDIT: regression test at https://github.com/root-project/roottest/pull/866,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10361:202,test,test,202,https://root.cern,https://github.com/root-project/root/pull/10361,1,['test'],['test']
Testability,This fixes #12263 at least as tested from the Celeritas builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12264:30,test,tested,30,https://root.cern,https://github.com/root-project/root/pull/12264,1,['test'],['tested']
Testability,This fixes #13574. This prevents complains about the internals of `unique_ptr` when we are just investigating its suitability for streaming. . Also do not complains about a transient `std::tuple` even if we can not stream it (for example if one of component is a private entity). Test at https://github.com/root-project/roottest/pull/1030,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13900:280,Test,Test,280,https://root.cern,https://github.com/root-project/root/pull/13900,1,['Test'],['Test']
Testability,"This fixes #14372. During the upgrade to LLVM16, the check for validity of the existing `FileEntry` was removed:. ```; - if (UFE.isValid() &&; - llvm::sys::toTimeT(Status.getLastModificationTime()) == UFE.ModTime) {; + if (llvm::sys::toTimeT(Status.getLastModificationTime()) == UFE->ModTime) {; ```. In praticed this resulted in the usage of the zero-initialized `FileEntry` for files with mtime equal zero. The check for the mod time is a ROOT specific patch introduced by commit 8d492b6b9ca359294d018995d097736f762866c8 we the commit log:. Make sure the inode did not get updated since we read it. During the upgrade to LLVM svn revision 214630, the code was sub-optimally merged with the new related code:. ```; + if (UFE.isValid()) { // Already have an entry with this inode, return it.; +; + // FIXME: this hack ensures that if we look up a file by a virtual path in; + // the VFS that the getDir() will have the virtual path, even if we found; + // the file by a 'real' path first. This is required in order to find a; + // module's structure when its headers/module map are mapped in the VFS.; + // We should remove this as soon as we can properly support a file having; + // multiple names.; + if (DirInfo != UFE.Dir && Data.IsVFSMapped); + UFE.Dir = DirInfo;; + }; if (UFE.isValid() && Data.ModTime == UFE.ModTime) {; - // Already have an entry with this inode, return it.; - // If the stat process opened the file, close it to avoid a FD leak.; - if (F); - delete F;; -; return &UFE;; }; ```. where the new code (top part) should also have not been executed unless the UFE was actually returned. This also made meger the LLVM code more challenged were one the change was:; ```; - if (UFE.isValid()) { // Already have an entry with this inode, return it.; + if (ReusingEntry) { // Already have an entry with this inode, return it. ```; this lead to the inadvertent removal of `UFE.isValid() conditional` in the patched part (and the forgetting of adding `ReusingEntry conditional`). This pat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14373:537,log,log,537,https://root.cern,https://github.com/root-project/root/pull/14373,1,['log'],['log']
Testability,"This fixes #14425 (the reproducer is added as test). Note that the patch comes straight from upstream cppyy https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 even though it's a patch in TCling. I open this PR as a draft to start the discussion as to how we can integrate this change, since it's necessary to fix a bug that also affects usage of ROOT classes via PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14426:46,test,test,46,https://root.cern,https://github.com/root-project/root/pull/14426,1,['test'],['test']
Testability,This fixes #15460. Extend the test accordingly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15461:30,test,test,30,https://root.cern,https://github.com/root-project/root/pull/15461,2,['test'],['test']
Testability,"This fixes #9136. Without this commit, SelectLooper would select the 'GenericLooper'; in the case of an emulated proxy for STL collection with (in the; name) a custom allocator. However the GenericLooper only usable; for collection with a compiled collection proxy. In particular, GenericLooper is calling the 'Next' function which; is not defined for vector ... and emulated collection. Using; it lead to an assert complaining (right fully so) that an; 'undefined' function is being called.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9764:409,assert,assert,409,https://root.cern,https://github.com/root-project/root/pull/9764,1,['assert'],['assert']
Testability,This fixes ROOT-10324 and a new test for TEfficiency and TGraphAsymmErrors::Divide has been added.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4423:32,test,test,32,https://root.cern,https://github.com/root-project/root/pull/4423,1,['test'],['test']
Testability,"This fixes ROOT-10504. the script:; ```. namespace boost { namespace mpl {. // Commenting the next line make the assert failure go away; struct TTUBE {};. }}. ```; reproduce the problem with 'just' ROOT. The trigger is the auto-loading of a library that has a dictionary with has forward decl string .. which all starts with:; ```; static const char* fwdDeclCode = R""DICTFWDDCLS(; extern int __Cling_Autoloading_Map;; ....; ```. The order of parsing is (with many ellipsis):; ```; ""<<< cling interactive line includer >>>"" : line 9 : #include “standalone.C”; standalone.C : line 1 : #pragma GCC diagnostic push; standalone.C : line 2 : #pragma GCC diagnostic ignored ""-Wuninitialized"" // Inserted in Diag map; standalone.C : line 3 : #pragma GCC diagnostic ignored ""-Wsign-conversion"" // Inserted in Diag map; standalone.C : line 8 : struct TTUBE {} ; // triggers auto-loading and thus recursive parsing. ""<<< cling interactive line includer >>>"" : line 10 : parse dict fwd declare string; input_line_9 : line 2 : #pragma clang diagnostic ignored ""-Wkeyword-compat"" // Inserted in Diag map; input_line_9 : line 3 : #pragma clang diagnostic ignored ""-Wignored-attributes"" // Inserted in Diag map; input_line_9 : line 4 : #pragma clang diagnostic ignored ""-Wreturn-type-c-linkage"" // Inserted in Diag map. end of file. standalone.C : line 12 : #pragma GCC diagnostic pop // Inserted in Diag map; ```; The last line triggers the assert because when recording the state change, it records it as being from; ```; standalone.C : line 12; ""<<< cling interactive line includer >>>"" : line 9; ```; but when recording the last one, it notices that the last state change that happened, indirectly, for the file '<<< cling interactive line includer >>>' happened at line 10 (because of the pragma in input_line_9 which is 'recorded' as being included by line 10),; which makes that the state change for ```standalone.C:12``` happens 'ealier' than the last state change as far as the pseudo-file ""<<< cling interac",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4882:113,assert,assert,113,https://root.cern,https://github.com/root-project/root/pull/4882,2,['assert'],['assert']
Testability,This fixes ROOT-7608.; Move to protected also the functions of TH1 that do not make sense for TH2Poly.; Add a test for getting/setting the bin error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3568:110,test,test,110,https://root.cern,https://github.com/root-project/root/pull/3568,1,['test'],['test']
Testability,This fixes ROOT-9068 issue.; Tests in roottest have also been updated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1238:29,Test,Tests,29,https://root.cern,https://github.com/root-project/root/pull/1238,1,['Test'],['Tests']
Testability,This fixes `gtest-tree-ntuple-v7-test-ntuple-types` in a PCH build.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13353:33,test,test-ntuple-types,33,https://root.cern,https://github.com/root-project/root/pull/13353,1,['test'],['test-ntuple-types']
Testability,This fixes `test/CodeUnloading/PCH/VTables.C` with C++17 and later.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13283:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/13283,1,['test'],['test']
Testability,This fixes a nightly build issue on OSX with -Druntime_cxxmodules=On by default. There rootcling still needs to parse the assert statement even if NDEBUG is defined.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5320:122,assert,assert,122,https://root.cern,https://github.com/root-project/root/pull/5320,2,['assert'],['assert']
Testability,"This fixes a race condition in which a TTreeReader and its; TTreeReaderValues could be deleted concurrently:; Thread #1) a task ends and pushes back processing slot; Thread #2) a task starts and overwrites thread-local TTreeReaderValues; Thread #1) first task deletes TTreeReader. I have not run a stress-test on this PR yet, to check for rare crashes. Will update as soon as I do.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/837:305,test,test,305,https://root.cern,https://github.com/root-project/root/pull/837,1,['test'],['test']
Testability,This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec; Beta distribution 		................ OK; Gamma distribution 		................ OK; Chisquare distribution 		................ OK; Normal distribution 		................ OK; BreitWigner distribution 		................ OK; F distribution 		................ OK; lognormal distribution 		................ OK; Exponential distribution 		................ OK; Landau distribution 		................ OK; Uniform distribution 		................ OK; ******************************************************************************; 	Test of Physics Vector (GenVector package); ******************************************************************************; XYVector creation 		................ OK; XYVector addition 		................ OK; XYVector creation 		................ OK; XYVector setting 		................ OK; XYVector -> Polar2DVector 		................ OK; Vector conversion 		................ OK; XYVector operations 		..............; Polar2DVector operations 		................ OK; XYVector delta values 		..............; Polar2DVector delta values 		................ OK; XYVector write 		................ OK; XYVector read 		................ OK; XYVector after read 		................ OK; Polar2DVector write 		................ OK; Polar2DVector read 		................ OK; Polar2DVector after read 		................ OK; XYZVector creation 		................ OK; XYZVector addition 		................ OK; XYZVector creation 		................ OK; XYZVector setting 		................ OK; XYZVector -> Polar3DVector 		................ OK; Vector conversion 		................ OK; XYZVector operations 		..............; Polar3DVector operations 		................ OK; XYZVector delta values 		..............; Polar3DVector delta values 		................ OK; XYZVector write 		................ OK; XYZ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/401:13,test,test,13,https://root.cern,https://github.com/root-project/root/pull/401,5,"['Test', 'log', 'test']","['Test', 'lognormal', 'test', 'test-stressmathcore']"
Testability,"This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec; tgamma(9.0) :	 OK; lgamma(0.1) :	 OK; inc_gamma(1,0.001) :	 OK; inc_gamma(100,99) :	 OK; inc_gamma_c(100,99) :	 OK; inc_gamma_c(1000,1000.1) :	 OK; erf(0.5) :	 OK; erfc(-1.0) :	 OK; beta(1.0, 5.0) :	 OK; inc_beta(1,1,1) :	 OK; inc_beta(0.5,0.1,1.0) :	 OK; assoc_laguerre(4, 2, 0.5) :	 OK; assoc_legendre(10, 1, -0.5) :	 OK; comp_ellint_1(0.50) :	 OK; comp_ellint_2(0.50) :	 OK; comp_ellint_3(0.5, 0.5) :	 OK; conf_hyperg(1, 1.5, 1) :	 OK; cyl_bessel_i(1.0, 1.0) :	 OK; cyl_bessel_j(0.75, 1.0) :	 OK; cyl_bessel_k(1.0, 1.0) :	 OK; cyl_neumann(0.75, 1.0) :	 OK; ellint_1(0.50, PI/3.0) :	 OK; ellint_2(0.50, PI/3.0) :	 OK; ellint_3(-0.50, 0.5, PI/3.0) :	 OK; expint(1.0) :	 OK; hyperg(8, -8, 1, 0.5) :	 OK; laguerre(4, 1.) :	 FAILED ; Discrepancy in laguerre(4, 1.) () :; -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16); legendre(10, -0.5) :	 OK; riemann_zeta(-0.5) :	 OK; sph_bessel(1, 10.0) :	 OK; sph_legendre(3, 1, PI/2.) :	 OK; sph_neumann(0, 1.0) :	 OK; airy_Ai(-0.5) :	 OK; airy_Bi(0.5) :	 OK; airy_Ai_deriv(-2) :	 OK; airy_Bi_deriv(-3) :	 OK; airy_zero_Ai(2) :	 OK; airy_zero_Bi(2) :	 OK; airy_zero_Ai_deriv(2) :	 OK; airy_zero_Bi_deriv(2) :	 OK; Error: Special Functions Test FAILED !!!!!; CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):; error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/400:13,test,test,13,https://root.cern,https://github.com/root-project/root/pull/400,4,"['Test', 'test']","['Test', 'test', 'testSpecFunc']"
Testability,This fixes an assert in isBloomFilterEmpty which assumes the bloom filter is already built. This is a fix for PR #4717.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5563:14,assert,assert,14,https://root.cern,https://github.com/root-project/root/pull/5563,1,['assert'],['assert']
Testability,This fixes and adds tests for #6964 and should also fix #6944 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6965:20,test,tests,20,https://root.cern,https://github.com/root-project/root/pull/6965,1,['test'],['tests']
Testability,This fixes building ROOT (and installing the prerequisite python packages) e.g. on Alma9. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12517:155,test,tested,155,https://root.cern,https://github.com/root-project/root/pull/12517,1,['test'],['tested']
Testability,"This fixes random failures of the `R__USE_IMT` part of the `datasource-root` test on Windows, due to file name corruptions, like for example:; ```; [ RUN ] TRootTDS.DefineSlotMT; Error in <TFile::TFile>: file C:/root-dev/build/x64/debug/tree/dataframe/test/G__NTupleStruct.vcx does not exist; [ OK ] TRootTDS.DefineSlotMT (191 ms); [ RUN ] TRootTDS.FromARDFMT; Error in <TFile::Init>: C:/root-dev/build/x64/debug/tree/dataframe/test/INSTALL.vcxproj not a ROOT file; C:\root-dev\git\master\tree\dataframe\test\datasource_root.cxx(175): error: Expected equality of these values:; 29.; Which is: 29; *max; Which is: 23; [ FAILED ] TRootTDS.FromARDFMT (6 ms); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13469:77,test,test,77,https://root.cern,https://github.com/root-project/root/pull/13469,4,['test'],['test']
Testability,"This fixes re-running tests on Windows. According to [the documentation](https://github.com/root-project/root/blob/master/config/rootrc.in#L384-L390), this is already the default for the other platforms, while the default is 3 for Windows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7288:22,test,tests,22,https://root.cern,https://github.com/root-project/root/pull/7288,1,['test'],['tests']
Testability,This fixes some wrongly handled cases in TDF's runtime type deduction logic. This PR renders #1529 obsolete.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1532:70,log,logic,70,https://root.cern,https://github.com/root-project/root/pull/1532,1,['log'],['logic']
Testability,This fixes test failure:; ```; 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8366:11,test,test,11,https://root.cern,https://github.com/root-project/root/pull/8366,2,"['Test', 'test']","['Test', 'test']"
Testability,This fixes that we often rebuild parts of ROOT by just doing simple git things. Before this change; we had this dependency on the header VCSRevision.h which is used by different parts of LLVM:; ```; interpreter/llvm/src/include/llvm/Support/VCSRevision.h:; input: CUSTOM_COMMAND; /home/teemperor/root/root-trunk2/.git/logs/HEAD <- Timestamp of this changes a lot!; /home/teemperor/root/root-trunk2/interpreter/llvm/src/cmake/modules/GenerateVersionFromCVS.cmake; outputs:; interpreter/llvm/src/include/llvm/Support/llvm_vcsrevision_h; interpreter/llvm/src/include/llvm/Support/CMakeFiles/llvm_vcsrevision_h; ```. After this change we no longer have the git head in here:. ```; teemperor@ftlserver ~/r/trunk-build2> ninja -t query interpreter/llvm/src/include/llvm/Support/VCSRevision.h; interpreter/llvm/src/include/llvm/Support/VCSRevision.h:; outputs:; interpreter/llvm/src/include/llvm/Support/CMakeFiles/llvm_vcsrevision_h; ```. I added two commits: One that fixes the current builds in a hacky way and one that is doing it properly but only goes into effect once we have the next LLVM upgrade (as the flag for configuring this is just added recently).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/813:318,log,logs,318,https://root.cern,https://github.com/root-project/root/pull/813,1,['log'],['logs']
Testability,"This fixes the ASAN test failure of `testLikelihoodSerial` seen in the; nightlies:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastBuild/testReport/junit/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testLikelihoodJob/. Following up on #12835.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12880:20,test,test,20,https://root.cern,https://github.com/root-project/root/pull/12880,4,['test'],"['test', 'testLikelihoodSerial', 'testReport']"
Testability,"This fixes the following compilation errors on Windows:; ```; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C2039: 'TreeUtils': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' mus",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:263,test,test,263,https://root.cern,https://github.com/root-project/root/pull/11153,3,['test'],['test']
Testability,This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx...; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]; 151: #define FOREGROUND_BLUE 1; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here; 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]; 151: #define FOREGROUND_GREEN 2; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here; 151: #define FOREGROUND_GREEN 0x0002 // text color contains green.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]; 151: #define FOREGROUND_RED 4; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here; 151: #define FOREGROUND_RED 0x0004 // text color contains red.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]; 151: #define FOREGROUND_INTENSITY 8; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here; 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded; 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3312:40,test,test-stresshistofit-interpreted,40,https://root.cern,https://github.com/root-project/root/pull/3312,5,['test'],"['test', 'test-stresshistofit-interpreted']"
Testability,"This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found, do the option QUIET is added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5002:1042,log,log,1042,https://root.cern,https://github.com/root-project/root/pull/5002,2,['log'],['log']
Testability,This fixes the nightlies from today: http://cdash.cern.ch/testSummary.php?project=1&name=pyunittests-pyroot-import-load-libs&date=2020-04-08,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5321:58,test,testSummary,58,https://root.cern,https://github.com/root-project/root/pull/5321,1,['test'],['testSummary']
Testability,"This fixes the problem on the ubuntu node and doesn't break the normal builds on the ubuntu node. The other nodes are dead due to infrastructure problems. As the only functional change is behind an `if(modules)` and we know it compiles, I'll merge this now to test my next PR fixing the missing modulemaps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1087#issuecomment-333478195:260,test,test,260,https://root.cern,https://github.com/root-project/root/pull/1087#issuecomment-333478195,1,['test'],['test']
Testability,"This fixes the results of multi-range fits where the shape of the pdf; depends on the normalization set, e.g. with a multidimenstional; `RooProdPdf`. A unit test was implemented to test that the result of such a 2D; multi-range fit is compatible with the fit result over the full range.; It is expected that if the union of the ranges is the full range, the; result will exactly match the full-range fit. This has already been; checked so far in the 1D case. The `stressRooFit` reference file has been updated, because there is; such a 2D multi-range fits in the tests (see also the; rf312_multirangefit tutorial).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9150:157,test,test,157,https://root.cern,https://github.com/root-project/root/pull/9150,3,['test'],"['test', 'tests']"
Testability,"This fixes the test `gtest-tree-ntuple-v7-test-ntuple-types` when building with `runtime_cxxmodules=OFF`, see #13058.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13131:15,test,test,15,https://root.cern,https://github.com/root-project/root/pull/13131,2,['test'],"['test', 'test-ntuple-types']"
Testability,"This fixes the test `roottest-root-core-execStatusBitsCheck` when building with `runtime_cxxmodules=OFF`, see #13058. ---. I don't know if there is an easier / better solution for this...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134:15,test,test,15,https://root.cern,https://github.com/root-project/root/pull/13134,1,['test'],['test']
Testability,"This fixes warnings such as these:; ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; ```; # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10145:1218,test,tested,1218,https://root.cern,https://github.com/root-project/root/pull/10145,1,['test'],['tested']
Testability,"This follow-up PR further improved the situation after #12380. In particular, the staging area of a collection cannot (apparently) be iterated -- see; https://github.com/root-project/root/blob/master/io/io/src/TGenCollectionProxy.cxx#L1573.; Other uses in the ROOT repository rely on `TVirtualCollectionProxy::At()`. However, we can instead exploit the fact that the staging area is backed by an array, i.e. the elements are contiguous in memory. Use this optimization also for `kSTLvector` collections, which was a TODO anyways. This should also provide an advantage/simplification to PR #12948. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13197:618,test,tested,618,https://root.cern,https://github.com/root-project/root/pull/13197,1,['test'],['tested']
Testability,"This follows the C++ Core Guidelines item F.16, 'For ""in"" parameters, pass cheaply-copied types by value and others by reference to const.' `RClusterIndex` consists of two 64-bit values which for most recent platforms with 64-bit pointers is cheap to copy and better to pass in two registers instead of passing a pointer to stack memory. This in turn helps some recursive calls in RNTuple, for example `RColumn::ReadV` (at the moment of writing). In numbers, this scores a single-digit performance improvement in the usual ATLAS analysis benchmark, -5% analysis runtime on my system. The other usual benchmarks show no changes beyond fluctuations. This changes was prepared by running; ```; $ git grep -l ""RClusterIndex &"" | xargs sed -i ""s/const \(ROOT::Experimental::\)\?RClusterIndex &/\\1RClusterIndex /g""; ```; then reverting the change in `RNTupleUtil.hxx` for the copy-constructor and copy-assignment operator, and finally running clang-format.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14406:538,benchmark,benchmark,538,https://root.cern,https://github.com/root-project/root/pull/14406,2,['benchmark'],"['benchmark', 'benchmarks']"
Testability,"This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11790:210,test,tested,210,https://root.cern,https://github.com/root-project/root/pull/11790,2,['test'],"['test', 'tested']"
Testability,"This follows up on 46642ca1c40, reducing the relative tolerance in one case to make the test pass again on macOS ARM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14107:88,test,test,88,https://root.cern,https://github.com/root-project/root/pull/14107,1,['test'],['test']
Testability,"This follows up on a previous commit 92fbd0db47 with the title:; ```; [RF] Modernize `RooVectorDataStore::RealFullVector` class; ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element; ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12503:416,log,logged,416,https://root.cern,https://github.com/root-project/root/pull/12503,1,['log'],['logged']
Testability,"This functionality was put there to understand the potential benefits of generating optimized C++ shared libraries on-the-fly starting from the RDataFrame operations requested by the user in the application. With the benchmarks done so far, we have never seen a real reason to switch to this behaviour from the traditional PyROOT based approach. Also, it needed extra care when dealing with some special operations that cross the Python-C++ boundary (e.g. `AsNumpy`). We can remove it for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13232:217,benchmark,benchmarks,217,https://root.cern,https://github.com/root-project/root/pull/13232,1,['benchmark'],['benchmarks']
Testability,"This goes hand-in-hand with #169 . ; These were found in a different way, though: ; By creating them with their default constructor and trying to stream them to a memory buffer (the ""StreamingTest"" of https://github.com/olifre/rootStaticAnalyzer ). . This PR demotes some class-versions for classes which break when streamed (and which are not supposed to be streamed) and makes one more member transient which should be transient (in TTreeFormula). . There's one more remaining issue:. ```; Error in <TStreamerInfo::Build>: TRandom1, discarding: const unsigned int* fTheSeeds, no [dimension]; ```. I'm not sure what the ""dimension"" should be for this member - it's not so clear from the ranlux code to me. . More issues are probably still there since rootStaticAnalyzer right now excludes some classes from testing completely if their construction / destruction using the default constructor fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/170:808,test,testing,808,https://root.cern,https://github.com/root-project/root/pull/170,1,['test'],['testing']
Testability,This has been also tested with the default C++11 standard for both host and device.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5598#issuecomment-627614485:19,test,tested,19,https://root.cern,https://github.com/root-project/root/pull/5598#issuecomment-627614485,1,['test'],['tested']
Testability,"This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration); - Enable multi-class classification; - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification; - Add return error codes to `PyMethodBase::Unserialize()` function; - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/303:178,test,test,178,https://root.cern,https://github.com/root-project/root/pull/303,3,['test'],['test']
Testability,"This has not been implemented so far. This commit also includes a unit; test for it. For easier toggling of squared weights, a new virtual function; `RooAbsArg::applyWeightsSquared` was introduced such that one doesn't; have to pick up manully the likelihood classes from the computation; graph when applying the weights squared correction. To be backported to 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10229:72,test,test,72,https://root.cern,https://github.com/root-project/root/pull/10229,1,['test'],['test']
Testability,"This https://github.com/root-project/root/pull/5048 should fix the `asnumpy` test failure, which is not related to the changes of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5036#issuecomment-589728485:77,test,test,77,https://root.cern,https://github.com/root-project/root/pull/5036#issuecomment-589728485,1,['test'],['test']
Testability,"This implementation intends to pave the way for the support of tree/chain friends in TDataFrame MT. For that purpose, now TTreeProcessorMT stores the information about the friends of the processed tree/chain. In order to provide support for friends, this implementation proposes a new way of dealing with chains in TTreeProcessorMT. The old way consisted in operating file by file, obtaining a TTree from each file and then constructing a TTreeReader for the particular range a task was going to process in that TTree. The aforementioned implementation prevented the support for friend chains, since there was no chain to add the friends to, only trees. In this new implementation, TTreeProcessorMT always constructs a chain per TTreeView, from which TTreeReaders are created to operate on ranges of the chain. If necessary, friends could be added to that chain. I have also extended roottest-root-multicore-tp_process_imt to test the friends case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1299:926,test,test,926,https://root.cern,https://github.com/root-project/root/pull/1299,1,['test'],['test']
Testability,This improves the situations. The first 3 tests are now properly disabled. This leaves this test:; ```; 353 - gtest-tmva-pymva-TestRModelParserKeras; ```; as an issue (and the related but maybe or maybe not different https://github.com/root-project/root/issues/16719),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16722#issuecomment-2427284187:42,test,tests,42,https://root.cern,https://github.com/root-project/root/pull/16722#issuecomment-2427284187,3,"['Test', 'test']","['TestRModelParserKeras', 'test', 'tests']"
Testability,"This in turn fixes a problem with TTreeProcessorMT and multi-thread; RDataFrame ""forgetting"" about the TTreeIndexes associated with; input friend trees. It fixes https://github.com/root-project/root/issues/12260,; ""[DF] Bogus data read from indexed friend trees in multi-thread runs"". A test is added for this case as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12269:287,test,test,287,https://root.cern,https://github.com/root-project/root/pull/12269,1,['test'],['test']
Testability,"This is CPyCppyy upstream's commit:; https://github.com/wlav/CPyCppyy/commit/64fd89050a66bf8cb119f236cadd365efa07b005. If I backport this commit to root, I still get the same failures in some test during the Python garbage collection as when I use my attempted patch above. Are there other changes from upstream that are relevant?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10799#issuecomment-1174770897:192,test,test,192,https://root.cern,https://github.com/root-project/root/issues/10799#issuecomment-1174770897,1,['test'],['test']
Testability,"This is ROOT6 support for [CMA-ES](https://www.lri.fr/~hansen/cmaesintro.html), a state-of-the-art black box stochastic minimizer. The implementation uses [libcmaes](https://github.com/beniz/libcmaes), a novel high performance C++11 (with Python bindings) library for blackbox optimization. The new minimizer yields better results than Minuit2 for most problems, though for an higher computation cost on average. See below for links to relevant benchmarks backing up these claims. This implementation is on behalf of [Inria Saclay Research group TAO](http://www.inria.fr/en/teams/tao), [Laboratoire de l'Accelerateur Lineaire, group AppStat](http://appstat.lal.in2p3.fr/) and [University Paris-Sud LRI](https://www.lri.fr/index_en.php?lang=EN). ===Features===; - Seamless replacement for Minuit, Minuit2 and Fumili; - Seamless support for RooFit; - Relying on libcmaes allows for best performances known for CMA-ES + access to several flavors of the original algorithm, yielding best results with a trade off for computational cost, as needed; - Compilation support for both Autotools and CMake; - Included tutorial files, tests, and a special benchmark vs Minuit2. ===Documentation===; - Main documentation for building and using the new minimizer is here: https://github.com/beniz/libcmaes/wiki/using-CMA-ES-in-CERN's-ROOT. ===Performances===; - On-par with Minuit2 on low dimensional problems (< 10-D), consistently beats Minuit2 in higher dimension, leading to better fits. These claims are backed by two benchmarks and two experiments on real world data (we are still waiting from some results from usage at CERN); - Benchmark CMA-ES vs Minuit on [BBOB](http://coco.gforge.inria.fr/doku.php?id=bbob-2013) available here: https://drive.google.com/open?id=0B3J1vWYhta9ibktXc2JLRUExUTA&authuser=0; - In-ROOT benchmark vs Minuit2 on low-dimensional problems, results available here: https://drive.google.com/open?id=0B3J1vWYhta9iTmR0T0hnN21lSGM&authuser=0; - Beats out Minuit2 up to 98% of the time o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/40:445,benchmark,benchmarks,445,https://root.cern,https://github.com/root-project/root/pull/40,3,"['benchmark', 'test']","['benchmark', 'benchmarks', 'tests']"
Testability,"This is a PR including a lot of work on the convolutional layer. It can be logically divided the following parts:. 1. Back propagation in CUDA (this was the most complex). 2. Forward propagation in CUDA (this was a comparatively simpler task). 3. Helper static methods such as a column based sum reduction and matrix equality checkers for every architecture. 4. An element by element detailed test case for backward and forward propagation. The one on forward propagation was designed and solved on paper. I was not able to do the same for back-propagation, instead I considered the CPU implementation to be correct and asserted that the CUDA outputs the same result. 5. Trivial bug fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2216:75,log,logically,75,https://root.cern,https://github.com/root-project/root/pull/2216,6,"['assert', 'log', 'test']","['asserted', 'logically', 'test']"
Testability,This is a backport of #12025 by @hahnjo and fixes the corresponding test failure in v6-28-00-patches.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12212:68,test,test,68,https://root.cern,https://github.com/root-project/root/pull/12212,1,['test'],['test']
Testability,"This is a backport of #7031 to the 6-24-00-patches branch. I cherry-picked two of the three commits.; I left the test suite out, as it finally should go to roottest.git, as far as I understood it. This is basically to get the thing started. cc: @pcanal, @dennisklein",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7794:113,test,test,113,https://root.cern,https://github.com/root-project/root/pull/7794,1,['test'],['test']
Testability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12017; 2. https://github.com/root-project/root/pull/12022; Only the commits 1, 2, 5, and 6 that are relevant to fix the problem and testing; 3. https://github.com/root-project/root/pull/12024; 4. https://github.com/root-project/root/pull/12029; 5. https://github.com/root-project/root/pull/12030; 6. https://github.com/root-project/root/pull/12033; 7. https://github.com/root-project/root/pull/12039; 8. https://github.com/root-project/root/pull/12046; 9. https://github.com/root-project/root/pull/12051. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12057:354,test,testing,354,https://root.cern,https://github.com/root-project/root/pull/12057,1,['test'],['testing']
Testability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11401; 2. https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11402:372,test,testRooSimultaneous,372,https://root.cern,https://github.com/root-project/root/pull/11402,1,['test'],['testRooSimultaneous']
Testability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `aa270ad60b`) are the ones that are not in `v6-28-00-patches` (as of `44db6e0`). ```txt; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma; f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`; b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation; 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf.; 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files.; 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial.; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12723:503,test,testRooFuncWrapper,503,https://root.cern,https://github.com/root-project/root/pull/12723,1,['test'],['testRooFuncWrapper']
Testability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashConte",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12722:513,test,test,513,https://root.cern,https://github.com/root-project/root/pull/12722,4,"['log', 'test']","['logging', 'test', 'testNaNPacker']"
Testability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12682; 2. https://github.com/root-project/root/pull/12696; 3. https://github.com/root-project/root/pull/12699; 4. https://github.com/root-project/root/pull/12702; 5. https://github.com/root-project/root/pull/12707. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12708:770,test,test,770,https://root.cern,https://github.com/root-project/root/pull/12708,3,['test'],"['test', 'testNaNPacker']"
Testability,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:; ```; [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o; /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:; /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’; extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()); ^; In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’; void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"); ^~~~~~~~~~~~~; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’; void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"); ^~~~~~~~~~~~~; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4160#issuecomment-519477877:148,log,log,148,https://root.cern,https://github.com/root-project/root/pull/4160#issuecomment-519477877,2,['log'],['log']
Testability,"This is a better fix for not_fn, where the check is now applied in the right place, and the test runs regardless (it could check for the not_fn define as well). Followup to #3413 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3432:92,test,test,92,https://root.cern,https://github.com/root-project/root/pull/3432,1,['test'],['test']
Testability,"This is a breakthrough: thanks for insisting to the end.; The code looks good to me.; Assumption 1) can be clarified in the doc. Assumption 2) is deeply rooted inside the very concept of tree. As for the const cast, it's less than optimal but I agree this can wait for 6.14 given also that at the moment we not only do not write out C arrays but we do that in a bogus fashion. I can merge this PR as soon as the tests and the coding conventions checks are green. The present 2 test failures can be fixed easily and are not due to this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1173#issuecomment-336022015:412,test,tests,412,https://root.cern,https://github.com/root-project/root/pull/1173#issuecomment-336022015,2,['test'],"['test', 'tests']"
Testability,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:; > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16279#issuecomment-2301679152:98,test,testing,98,https://root.cern,https://github.com/root-project/root/pull/16279#issuecomment-2301679152,6,"['Test', 'test']","['TestSupport', 'test', 'testing']"
Testability,"This is a cherry pick of the `loader.py` in cppyy-backend version clingwrapper-1.7.2, which has the new treatment of `CLING_STANDARD_PCH` and its setting to `'none'` to prevent the PCH check by Cppyy. It should fix the new test failures that appeared last night in the experimental PyROOT builds. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/76/. A complete update will come for the three packages of Cppyy once the functionality of this PR:; https://github.com/root-project/root/pull/3579; is merged into `TCling`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3581:223,test,test,223,https://root.cern,https://github.com/root-project/root/pull/3581,1,['test'],['test']
Testability,This is a collection small things I found while working on HistFactory models -- the last batch before getting to the actual HistFactory stuff. @guitargeek Maybe the last commit is interesting for some things you tweaked? (Only in tests or debug builds of course),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8099:231,test,tests,231,https://root.cern,https://github.com/root-project/root/pull/8099,1,['test'],['tests']
Testability,This is a continuation of https://github.com/root-project/root/pull/3858/ with some fixes for the failing tests:. - projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_cintrun; - projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint; - projectroot.roottest.python.basic.roottest_python_basic_overload; - projectroot.roottest.python.cpp.roottest_python_cpp_advanced,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3911:106,test,tests,106,https://root.cern,https://github.com/root-project/root/pull/3911,1,['test'],['tests']
Testability,"This is a copy of #6300, where one commit has been removed. Testing now if windows is happy without the commit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6323:60,Test,Testing,60,https://root.cern,https://github.com/root-project/root/pull/6323,1,['Test'],['Testing']
Testability,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11783:611,test,test,611,https://root.cern,https://github.com/root-project/root/pull/11783,3,['test'],"['test', 'tests']"
Testability,"This is a draft pull request to document the work in progress and to have a platform for discussion. The goal of this PR is to add two new verbosity levels for the logging of Minuit2, ""Warning"" and ""Debug"", which turn the formerly compile-time options to enable increased logging output into run-time options. Follows the proposal in #6421",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705:164,log,logging,164,https://root.cern,https://github.com/root-project/root/pull/6705,2,['log'],['logging']
Testability,"This is a fix for ROOT-7121. If a cache is updated in RooVectorDataStore and the cache has more than 1000 elements to be updated, an array on the stack will overrun and smash the stack. roofit will therefore crash. Solution: RooVectorDataStore uses a std::vector instead of an array[1000] to hold the pointers to the cache elements. Comments on the speed of the fix:; Using a std::vector placed on the stack (mimicking the original implementation), the fits would get slower. Therefore I added the vector as a member of RooVectorDataStore. This saves the time of constantly having to reallocate the vector. I tested with my (private) workspace: The crash is fixed. Unfortunately, I cannot provide this workspace.; To give a more meaningful test for you guys, I ran all the roofit/roostats tutorials and diffed the logs to check if roofit gives the same results. The diffs are attached. Apart from out-of-order execution and time measurements, there is no difference.; From the time measurements you can also see that the fixed version is not slower. [tutorials_roofit.diff.txt](https://github.com/root-mirror/root/files/56528/tutorials_roofit.diff.txt); [tutorials_roostats.diff.txt](https://github.com/root-mirror/root/files/56529/tutorials_roostats.diff.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/115:609,test,tested,609,https://root.cern,https://github.com/root-project/root/pull/115,3,"['log', 'test']","['logs', 'test', 'tested']"
Testability,"This is a fix for ROOT-7121. If a cache is updated in RooVectorDataStore and the cache has more than 1000 elements to be updated, an array on the stack will overrun and smash the stack. roofit will therefore crash. Solution: RooVectorDataStore uses a std::vector instead of an array[1000] to hold the pointers to the cache elements. Comments on the speed of the fix:; Using a std::vector placed on the stack (mimicking the original implementation), the fits would get slower. Therefore I added the vector as a member of RooVectorDataStore. This saves the time of constantly having to reallocate the vector. I tested with my (private) workspace: The crash is fixed. Unfortunately, I cannot provide this workspace.; To give a more meaningful test for you guys, I ran all the roofit/roostats tutorials and diffed the logs to check if roofit gives the same results. The diffs are attached. Apart from out-of-order execution and time measurements, there is no difference.; From the time measurements you can also see that the fixed version is not slower. [tutorials_roofit.diff.txt](https://github.com/root-mirror/root/files/56546/tutorials_roofit.diff.txt); [tutorials_roostats.diff.txt](https://github.com/root-mirror/root/files/56547/tutorials_roostats.diff.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/116:609,test,tested,609,https://root.cern,https://github.com/root-project/root/pull/116,3,"['log', 'test']","['logs', 'test', 'tested']"
Testability,"This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8940:232,test,test,232,https://root.cern,https://github.com/root-project/root/pull/8940,2,['test'],['test']
Testability,"This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15471:612,log,logic,612,https://root.cern,https://github.com/root-project/root/pull/15471,1,['log'],['logic']
Testability,"This is a followup to commit 47c250898f3. The new algorithm to figure out the servers of a RooRealIntegral could get very expensive for large computation graphs, as seen with the ATLAS Higgs combinaiton. The problem was that there was a loop over an arguments clients for each argument in the computation graph. In this commit, loop is replaced by another loop over the computation graph in which one iterates only over the servers of the arguments that depend on the integration variables. I think this logic is even more intuitive to understand as well. I learned also that iterating over clients is never a good idea, because while the number of servers is well defined, there can be arbitrary many clients, making the performance very unpredictable. It was verified with flamegraphs that the performance of the likelihood creation for the ATLAS Higgs combinaiton model is now again identical to the state before commit 47c250898f3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11619:504,log,logic,504,https://root.cern,https://github.com/root-project/root/pull/11619,1,['log'],['logic']
Testability,"This is a general refactoring of the class test/stressMathMore.cxx.; It involves using Google test for assertions, test fixtures, and general; refactoring of the code. Ping @lmoneta",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/586:43,test,test,43,https://root.cern,https://github.com/root-project/root/pull/586,4,"['assert', 'test']","['assertions', 'test']"
Testability,This is a hack to make C++17 builds on macOS pass all tests. Fixes #12003,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12864:54,test,tests,54,https://root.cern,https://github.com/root-project/root/pull/12864,1,['test'],['tests']
Testability,"This is a new test that got introduced with eb7d8190ba3. Unfortunately, it didn't pass in the nightlies on Windows 10 x86 Debug, so it needs to be disabled on Windows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15532:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/15532,1,['test'],['test']
Testability,"This is a partial, but long-overdue modernisation of RooDataHist. Instead of accessing members in array or vectors, it was using the convoluted logic of:; - I need the event weight of event `i`.; - So I have to load the coordinates(!) of `i` by calling `get(i)`.; - This has the side effect of writing the weight that belongs to `i` into the mutable member `_curWgt` or similar.; - To retrieve the weight, I can now call `weight()`. This obviously creates problems and might be slow, so the overwriting of such internal buffers was removed to a large extent. Many things can now be retrieved by index (`weight(i)` for example), and many functions don't have side effects, any more. Further:; - Remove lots of unnecessary mutable members from RooDataHist/RooVectorDataStore.; - Remove side effects from many of RooDataHist's functions.; - Implement getters that don't rely on setting the active bin.; ""h.get(binNumber); h.weight() --> h.weight(binNumber)"" etc.; - Remove useless members such as _curWeight. Those are replaced by; a lookup in the weight vectors.; - Implement retrieval of bin coordinates and weights in batches.; - Sort functions that rely on the presence of side effects into a; deprecated section for doxygen.; - Fix docstrings of many functions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6718:144,log,logic,144,https://root.cern,https://github.com/root-project/root/pull/6718,1,['log'],['logic']
Testability,"This is a problem for the cxxmodules build, as can be seen [here](http://cdash.cern.ch/testDetails.php?test=49835249&build=552849).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2499:87,test,testDetails,87,https://root.cern,https://github.com/root-project/root/pull/2499,2,['test'],"['test', 'testDetails']"
Testability,"This is a problem with the cppyy API, as this reproducer is sufficient:; ```python; import cppyy. cppyy.include('CPyCppyy/API.h'); cppyy.gbl.CPyCppyy.Scope_Check(cppyy.nullptr). class Test(object):; def __init__(self):; print('Init'); def __del__(self):; print('Del'). obj = Test(); ```; From ROOT 6.32, we used the CPyCppyy API in the ROOT module. That's why there is this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16402#issuecomment-2341381523:184,Test,Test,184,https://root.cern,https://github.com/root-project/root/issues/16402#issuecomment-2341381523,2,['Test'],['Test']
Testability,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5757:1023,Test,Tests,1023,https://root.cern,https://github.com/root-project/root/pull/5757,8,"['Test', 'test']","['Tests', 'test', 'testPyTorchClassification', 'testPyTorchMulticlass', 'testPyTorchRegression', 'testing']"
Testability,"This is a rebase and combination of the PRs #303 #314 #315. - Refactor PyRandomForest, PyGTB, PyAdaBoost; - Add variable ranking to these classifiers; - Add unit-tests for the sklearn classifiers; - Add unit-test for PyKeras multiclass classification; - Move `GetMvaValues` implementation from base class to method to stay independent from sklearn. You can test the changes with `ctest -V -R PyMVA`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/343:162,test,tests,162,https://root.cern,https://github.com/root-project/root/pull/343,3,['test'],"['test', 'tests']"
Testability,"This is a request for backport of https://github.com/root-project/root/pull/7035; to 6-22 patches because of this ClassDef change:; ` ClassDef(TF1, 11) // The Parametric 1-D function` (previous was 10); which we are checking in this test:; https://github.com/cms-sw/cmssw/blob/master/DQMServices/Components/test/testSchemaEvolution.cpp#L44; and should have one or the other version, and we better use this fix in 6-22 anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7193:233,test,test,233,https://root.cern,https://github.com/root-project/root/pull/7193,3,['test'],"['test', 'testSchemaEvolution']"
Testability,"This is a simplification of Snapshot's logic itself and a small performance optimization as we don't invoke the interpreter separately for each Snapshot call but we now take advantage of the same machinery that's already used by all other actions (and that merges all code to be jitted together). This PR fixes the Snapshot side of [ROOT-9790](https://sft.its.cern.ch/jira/browse/ROOT-9790), ""Lazy jitting of Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6585:39,log,logic,39,https://root.cern,https://github.com/root-project/root/pull/6585,1,['log'],['logic']
Testability,"This is a subset, but crashes OS X & linux too (see test/CodeGeneration/TLSVars.C) so might be worth dealing with on its own as it can easily be taken out of 177. 177 is huge and contains everything necessary for Windows to pass.; (As far as i know https://ci.appveyor.com/project/bellenot/cling/build/1.0.312)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/745#issuecomment-315090285:52,test,test,52,https://root.cern,https://github.com/root-project/root/pull/745#issuecomment-315090285,1,['test'],['test']
Testability,"This is a temporarily created sandbox, created by `pbuilder`, and populated accordingly (with Build-Depends: packages) before running the actual build code - and destroyed immediately afterwards. Thanks for clarifying the meaning of `Rint`, I was confused by the capital R. In the meantime, I was able to re-run `pbuilder` and got the `::sema::` error from the beginning. If it turns out that an interactive session cannot reproduce batch session results (and errors) I really don't know what to do next :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777#issuecomment-1161642175:30,sandbox,sandbox,30,https://root.cern,https://github.com/root-project/root/issues/10777#issuecomment-1161642175,1,['sandbox'],['sandbox']
Testability,This is a temporary measure in the context of the large-scale testing of RNTuple with the CERN IT department.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15385:62,test,testing,62,https://root.cern,https://github.com/root-project/root/pull/15385,1,['test'],['testing']
Testability,This is a test to trigger the CI,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14653:10,test,test,10,https://root.cern,https://github.com/root-project/root/pull/14653,1,['test'],['test']
Testability,This is a testing PR to unveil all other possible remaining time bombs; in TMVA that blow off once some requirements are installed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15306:10,test,testing,10,https://root.cern,https://github.com/root-project/root/pull/15306,1,['test'],['testing']
Testability,"This is a updated pull request from #59 The same experiments have been run and performance results are shown here:. | Algorithm | compression(write) | decompression(read) | Compressed File Size |; | --- | --- | --- | --- |; | zlib | 11.74 MB/s | 131.06 MB/s | 181 MB |; | lzma | 0.86 MB/s | 17.36 MB/s | 157 MB |; | lz4 | 5.22 MB/s | 143.81 MB/s | 221 MB |. The following performance is from the root file @pcanal's ticket (https://root.cern.ch/files/CMS_7250E9A5-682D-DF11-8701-002618943934.root). The file is 1.9 GB large, and I tried to decompressed it and it seems its original size is 6.4 GB. The following compression/decompression speeds are calculated by dividing 6.4 GB by the time each test run. @bbockelm , we could discuss implementation details of my tests tomorrow. . | Algorithm | compression(write) | decompression(read) | Compressed File Size |; | --- | --- | --- | --- |; | zlib | 15.83 MB/s | 63.23 MB/s | 1.6 GB |; | lzma | 1.28 MB/s | 22.62 MB/s | 1.2 GB |; | lz4 | 8.32 MB/s | 66.53 MB/s | 1.8 GB |",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/81:696,test,test,696,https://root.cern,https://github.com/root-project/root/pull/81,2,['test'],"['test', 'tests']"
Testability,"This is a very nice contribution, but it brings a very small advantage to a test that is already very modular, because composed by very small functions, which can be run all independently and from the ROOT prompt. ; I am sorry but I will have to close this PR. ; Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/843#issuecomment-331870407:76,test,test,76,https://root.cern,https://github.com/root-project/root/pull/843#issuecomment-331870407,1,['test'],['test']
Testability,"This is a very quick fix in order to test the distributed RDF with RNTuples. It was locally tested with some tutorials and AGC, but no tests are added yet (to be done soon).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14846:37,test,test,37,https://root.cern,https://github.com/root-project/root/pull/14846,3,['test'],"['test', 'tested', 'tests']"
Testability,"This is a workaround for https://bugs.python.org/issue21591 which; affect Python 2 versions before 2.7.9. This includes Python 2.7.5; which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:; ```; + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1; Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7; Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ...; SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198); error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install); ```. ### test1.py. This is a minimal reproducer of the existing code:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()); print(locals()['b']); return inner(); test(); ```; This produces the expected output with Python 3:; ```; $ python3 test1.py ; 123; 456; ```; But when using Python 2 it reproduces the error from the root build:; ```; $ python2 test1.py ; File ""test1.py"", line 5; exec('print(a); b = 456', glob, locals()); SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function; ```. ### test2.py . If the Python 2 syntax is used for the exec command:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; Then Python 3 fails as expected since this syntax is not valid Pathon 3:; ```; $ python3 test2.py ; Traceback (most recent call last):; File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; `",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5960:862,test,test,862,https://root.cern,https://github.com/root-project/root/pull/5960,2,['test'],['test']
Testability,This is a workaround for the linker assert when building with gcc on osx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/68:36,assert,assert,36,https://root.cern,https://github.com/root-project/root/pull/68,1,['assert'],['assert']
Testability,"This is an adaptation of commit 6627da727b88ef70b74b7d87f274e0a21a9cea45 Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK. # This Pull request:; Unfortunately the directory structure of our llvm changed, and it was not possible to cherry-pick. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13698",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13722:353,test,tested,353,https://root.cern,https://github.com/root-project/root/pull/13722,1,['test'],['tested']
Testability,"This is an attempt to add xRooFit to ROOT in a way that means the files from xRooFit do not need to be modified but the built code will not interfere with users who build different xRooFit on top of ROOT. I tested this locally and it compiled on my mac with the upstream master, and I was able to compile xRooFit locally on top of it and a few quick tests suggested both were usable. Creating the PR to see what the CI makes of it ....",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11851:207,test,tested,207,https://root.cern,https://github.com/root-project/root/pull/11851,2,['test'],"['tested', 'tests']"
Testability,"This is an extension allowing the VMC package to run a simulation; with multiple different engines at a time. Tracks can be transferred; among engines during a simulation run based on conditions specified by; the user. Important notes on the extensions:; 1) This extension preserves backward-compatibility in the sense that; user code relying on the former version of VMC is still running; with the extended version. Was tested with GEANT3_VMC@v2-6 and; GEANT4_VMC@v3-6-p1.; 2) A shared simulation is only possible when TGeo is used for geometry; construction and navigation.; 3) A TMCManager singleton object is responsible for handling multiple; engines and can be obtained on request calling; TVirtualMCApplication::RequestManager() during construction of the; user application class.; 4) The introduced TMCParticleStatus objects hold additional; information to keep track of properties when a track is transferred; between engines.; 5) When a track is interrupted in one engine to be transferred to; another, the geometry state is cached in the form of a; TGeoBranchArray object. It will be used to initialize the navigator; when this track is picked up for further transport in the next; engine. This is especially useful/required when a track is; transferred at a volume boundary in order to be picked up in the; entered volume and not in the one just left. This is a main reason; why geometry management is forced to be done via TGeo. A more comprehensive introduction concerning the usage and; implementation in the user code can be found in the; montecarlo/vmc/README.md. Further note:; This commit also applies the clang format to the modified and new; files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3513:421,test,tested,421,https://root.cern,https://github.com/root-project/root/pull/3513,1,['test'],['tested']
Testability,"This is an interesting situation. The build on mac12arm/cxx20 did not fail, it's ""unstable"". All tests pass but there are warnings triggered by TBB. The version is simply too old (2019). On Mac13, cxx17 or cxx20, TBB does not even build. A PR is coming to propose a fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13720#issuecomment-1735428320:97,test,tests,97,https://root.cern,https://github.com/root-project/root/pull/13720#issuecomment-1735428320,1,['test'],['tests']
Testability,"This is an update to PR #40 that includes:; - a rebase with all CMA-ES commits at the tip of master (as of 04/17/2017); - a set of small fixes as requested by @vgvassilev . As a reminder, this PR fetches, builds and wraps https://github.com/beniz/libcmaes/ with ROOT. This PR builds ROOT with CMA-ES support and I've been able to run some of the tests, indicating that it is working fine. **Issues**; However, some caveats remain, on which help is required, at the moment. - [ ] `build/include/libcmaes/cmaes.h` and `build/include/Eigen` are not properly passed to the compiler at build time. I cannot find how to do it properly. At the moment I am using symlinks as a temporary hack (see how to build below). - [ ] To access the inner option of the CMA-ES Minimizer, I was using code similar to; ```C++; ROOT::Math::IOptions &opts = ROOT::Math::MinimizerOptions::Default(fitter);; opts.SetIntValue(""lambda"",lambda);; ```; Code above now appears to fail with errors such as:; ```; root [0] .L tutorials/fit/cmaesFitBench.C++g; Info in <TUnixSystem::ACLiC>: creating shared library /home/beniz/research/siminole/dev/tmp/root/build/./tutorials/fit/cmaesFitBench_C.so; In file included from input_line_11:9:; ././tutorials/fit/cmaesFitBench.C:58:16: error: no type named 'IOptions' in namespace 'ROOT::Math'; ROOT::Math::IOptions *opts = ROOT::Math::MinimizerOptions::Default(fitter);; ~~~~~~~~~~~~^; ././tutorials/fit/cmaesFitBench.C:58:45: error: no member named 'MinimizerOptions' in namespace 'ROOT::Math'; ROOT::Math::IOptions *opts = ROOT::Math::MinimizerOptions::Default(fitter);; ~~~~~~~~~~~~^; Error in <ACLiC>: Dictionary generation failed!; ```; Help is needed to fix the above. **How to build**; ```; cd build; cmake ../ -Dminuit2=on -Dtesting=on -Dlibcmaes=on; make; ```; The build will fail because of the header issue mentioned above, so do:; ```; cd include; ln -s eigen3/Eigen .; ln -s eigen3/unsupported .; cd ..; make; ```; You can then use the newly built ROOT and test that CMA-ES is",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/507:346,test,tests,346,https://root.cern,https://github.com/root-project/root/pull/507,1,['test'],['tests']
Testability,This is analogous to this other PR with similar tests:. https://github.com/root-project/root/pull/5361. Both of them depend on https://sft.its.cern.ch/jira/browse/ROOT-10688 being fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7687#issuecomment-825475487:48,test,tests,48,https://root.cern,https://github.com/root-project/root/pull/7687#issuecomment-825475487,1,['test'],['tests']
Testability,"This is another commit to clean RooFit of unneeded code and associated documentation. The RooRefCountList is only kept for IO backwards compatibility. From an IO point of view, it is equivalent to its parent class, the `RooLinkedList`. So we don't need to keep all the member function implementations. IN the one place where the `refCount()` member function is used in IO schema evolution rules, it now uses the `RooLinkedList` interface directly. This PR was tested by reading some old workspaces.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13501:460,test,tested,460,https://root.cern,https://github.com/root-project/root/pull/13501,1,['test'],['tested']
Testability,"This is base class for all text-based streamers like TBufferJSON, TBufferXML and TBufferSQL2. For all these classes dedicated list of I/O actions used for object streaming.; All data formats are preserved till now - all correspondent tests from roottest are working. Main motivation - decouple basic functionality from TBufferFile. . For the moment no changes done in TBufferFile, but as next step one can introduce intermediate TBufferImpl class, which will be base class for TBufferFile and TBufferText. There are many methods, which are similar and can be shared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1488:234,test,tests,234,https://root.cern,https://github.com/root-project/root/pull/1488,1,['test'],['tests']
Testability,"This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this?. Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```; RealTime=76.340815 seconds, CpuTime=131.770000 seconds; ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```; #11 0x00007f00743e80fe in R__zipMultipleAlgorithm ; #12 0x00007f00729aec25 in TBasket::WriteBuffer ; #13 0x00007f00729b53f3 in TBranch::WriteBasket ; #14 0x00007f00729b5c95 in TBranch::Fill ; #15 0x00007f00729cb630 in TBranchElement::Fill; #16 0x00007f00729cb418 in TBranchElement::Fill ; #17 0x00007f00729cb418 in TBranchElement::Fill ; #18 0x00007f0072a063f3 in TTree::Fill; ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/277:604,test,test,604,https://root.cern,https://github.com/root-project/root/pull/277,1,['test'],['test']
Testability,This is causing `hadd` to ignore the compression options when merging RNTuples. We didn't catch this bug because the unit tests were bypassing TFileMerger and calling directly into RNTupleMerger. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16700:122,test,tests,122,https://root.cern,https://github.com/root-project/root/pull/16700,2,['test'],"['tested', 'tests']"
Testability,"This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10546:96,log,logger,96,https://root.cern,https://github.com/root-project/root/pull/10546,1,['log'],['logger']
Testability,"This is due to cdash upload issue, otherwise test seems to be fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2721#issuecomment-425886786:45,test,test,45,https://root.cern,https://github.com/root-project/root/pull/2721#issuecomment-425886786,1,['test'],['test']
Testability,This is due to the introduction (in commit f3f0f138797) of a fast path in `TClass::GetListOfDataMember` which did not take in consideration the case:; ```; c = GetClass(someclassname); c->GetState() == TClass::kForwardDeclared; c->GetListOfDataMember() -> list is now created but empty.; load and parse header file for `someclass`; c->GetState() == TClass::kInterpreted; c->GetListOfDataMember() -> list is still empty but should have been filled (loaded at this point).; ```; The logic assumed incorrectly that if `someclassname` was indeed pointing to a class or struct and the list was created then it was loaded.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6666#issuecomment-712450152:481,log,logic,481,https://root.cern,https://github.com/root-project/root/issues/6666#issuecomment-712450152,1,['log'],['logic']
Testability,"This is for sure a start. But as we said before, the most important thing is to identify a use case for which the parallelisation would be of help and produce solid benchmarks. In addition, complete testing shall complement any parallelisation: the correctness of the results needs to be ensured as well as the absence of any threading issue in the code.; But I let @lmoneta comment more in detail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2202#issuecomment-397656299:165,benchmark,benchmarks,165,https://root.cern,https://github.com/root-project/root/pull/2202#issuecomment-397656299,2,"['benchmark', 'test']","['benchmarks', 'testing']"
Testability,"This is indeed going waaay out of the scope of this PR :-) Maybe we discuss this outside this PR? To summarize here, there are many assumptions, expectations and assertions in your reply that I do not share, so that cannot yet be the final answer. Again, let's continue outside this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3843#issuecomment-495159626:162,assert,assertions,162,https://root.cern,https://github.com/root-project/root/pull/3843#issuecomment-495159626,1,['assert'],['assertions']
Testability,This is just for testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9367:17,test,testing,17,https://root.cern,https://github.com/root-project/root/pull/9367,1,['test'],['testing']
Testability,This is messing with RDataFrame's logic to figure out what type a branch is. @pcanal I will debug what goes wrong exactly and let you know,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6258#issuecomment-681693425:34,log,logic,34,https://root.cern,https://github.com/root-project/root/pull/6258#issuecomment-681693425,1,['log'],['logic']
Testability,"This is more practical, because most RooFit tests are already here and and different from when these tests were in `roottest`, it's also to exclude them if ROOT is not built with RooFit enabled. Technically independent of https://github.com/root-project/roottest/pull/909, but they go together. Closes https://github.com/root-project/root/issues/11605.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11610:44,test,tests,44,https://root.cern,https://github.com/root-project/root/pull/11610,2,['test'],['tests']
Testability,This is mostly useful to assert that things worked as expected whenever RunGraphs is invoked.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13167:25,assert,assert,25,https://root.cern,https://github.com/root-project/root/pull/13167,1,['assert'],['assert']
Testability,"This is necessary because some of the pdf observables can be categories,; e.g. in the case of the RooSimultaneous. Since this problem was uncovered by a user when working with; RooSimultaneous, the reproducer of the original problem was turned into; a unit test in `testRooSimultaneous`. Link to original forum post:; https://root-forum.cern.ch/t/roofit-failed-to-create-nll-for-simultaneous-pdfs-with-multiple-range-names/49363. Should be backported to the 6.26 branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10256:257,test,test,257,https://root.cern,https://github.com/root-project/root/pull/10256,2,['test'],"['test', 'testRooSimultaneous']"
Testability,"This is not enough to disable all history, some tests in `root/test/` (the `*-interpreted` ones) still create entries in `$HOME/.root_hist`. I will make more changes to get rid of those too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3943#issuecomment-500981194:48,test,tests,48,https://root.cern,https://github.com/root-project/root/pull/3943#issuecomment-500981194,2,['test'],"['test', 'tests']"
Testability,"This is not intended to enter master (as of now at least). I am sharing a patch to produce taskstream for RunTreeProcessorMT. The RLoopManager produces a raw data, that can very easily be given to this small program that does the magic:; ```py; import pandas as pd; samples = pd.read_csv('test.csv'). startTime = min(samples['StartTime']) # the earliest ; allEntries = sum(samples['EntriesProcessed']); samples['StartTime'] -= startTime; samples['EndTime'] -= startTime; samples['Duration'] = samples['EndTime'] - samples['StartTime']; samples['EntriesPercentProc'] = samples['EntriesProcessed']/allEntries*100. import altair as alt; import altair_saver. chart = alt.Chart(samples[['Slot','ThreadID','CoreID',; 'StartTime','EndTime','EntriesProcessed', 'EntriesPercentProc', 'Duration']]).mark_bar(; cornerRadiusTopLeft=2,; cornerRadiusTopRight=2,; cornerRadiusBottomLeft=2,; cornerRadiusBottomRight=2; ).encode(; x='StartTime',; x2='EndTime',; y='ThreadID',; tooltip=['Slot', 'CoreID', 'EntriesProcessed', 'EntriesPercentProc', 'Duration']; ).properties(width=1200).interactive(). chart.save('taskstream.html'); ```; Requirements are pandas, altair and altair_saver. Example resulting taskstream is in this draft PR: https://github.com/root-project/root/blob/2dffbaab2ef3c280cc1b5a98fe8123250353d35e/tutorials/dataframe/dashboard/taskstream.html. Any suggestions for improvements are welcome :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11620:289,test,test,289,https://root.cern,https://github.com/root-project/root/pull/11620,1,['test'],['test']
Testability,"This is now fixed in ROOT master. Thanks a lot!. ```; ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info; ==100870== Command: root.exe -n -l -b -q; ==100870== Parent PID: 25804; ==100870== ; ==100870== ; ==100870== HEAP SUMMARY:; ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks; ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated; ==100870== ; ==100870== LEAK SUMMARY:; ==100870== definitely lost: 0 bytes in 0 blocks; ==100870== indirectly lost: 0 bytes in 0 blocks; ==100870== possibly lost: 0 bytes in 0 blocks; ==100870== still reachable: 49,437,618 bytes in 11,658 blocks; ==100870== of which reachable via heuristic:; ==100870== multipleinheritance: 3,552 bytes in 6 blocks; ==100870== suppressed: 29,642 bytes in 450 blocks; ==100870== Reachable blocks (those to which a pointer was found) are not shown.; ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all; ==100870== ; ==100870== For lists of detected and suppressed errors, rerun with: -s; ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72); ```. Should we add a test in roottest for it now that it's clean?. Such as:; https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7207#issuecomment-1827477107:1226,test,test,1226,https://root.cern,https://github.com/root-project/root/issues/7207#issuecomment-1827477107,2,['test'],"['test', 'tests']"
Testability,This is passing the test on Jenkins and thus ready for review (how does one trigger reruns of the actions?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13900#issuecomment-1793667388:20,test,test,20,https://root.cern,https://github.com/root-project/root/pull/13900#issuecomment-1793667388,1,['test'],['test']
Testability,"This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,; starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace; manipulation workflows, as it takes place at each workspace::import; call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all.; ~RooAbsArg takes care of properly breaking all the client-server links,; both uplinks and downlinks, for every object. I couldn't find a logical; case where a crash would occur if the safeDeleteList logic were to be; removed. All RooFit tests pass after this patch. No problem for my heavy; workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9685:384,log,logic,384,https://root.cern,https://github.com/root-project/root/pull/9685,4,"['log', 'test']","['logic', 'logical', 'tests']"
Testability,"This is pure JavaScript, can merge without waiting for end of testing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4976#issuecomment-585307203:62,test,testing,62,https://root.cern,https://github.com/root-project/root/pull/4976#issuecomment-585307203,1,['test'],['testing']
Testability,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16526#issuecomment-2375944990:63,test,testing,63,https://root.cern,https://github.com/root-project/root/pull/16526#issuecomment-2375944990,2,['test'],"['test', 'testing']"
Testability,This is revised version of #1227.; Main change is the addition of an auto adjust mode that removes the need of a final adjust.; Still limited to the 1D case. The test failure in MemberComments is due to a missing update of MemberComments.ref .; A patch for roottest is available already. . Clang-format not applied this time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1305:162,test,test,162,https://root.cern,https://github.com/root-project/root/pull/1305,1,['test'],['test']
Testability,This is section symbol; 		SectionID: 3 Offset: 52; 		RelType: 10 Addend: 0 TargetName: _ZN7TStringC1EPKc; 		SectionID: 3 Offset: 132; Create a new stub function; 		RelType: 10 Addend: 0 TargetName: _ZN4ROOT7GetROOTEv; 		SectionID: 3 Offset: 140; Create a new stub function; 		RelType: 10 Addend: 0 TargetName: _ZN5TROOT14GetTutorialDirEv; 		SectionID: 3 Offset: 148; Create a new stub function; 		RelType: 10 Addend: 0 TargetName: _ZN7TStringC1ERKS_; 		SectionID: 3 Offset: 164; Create a new stub function; 		RelType: 50 Addend: 8 TargetName: .toc; 		This is section symbol; 		SectionID: 3 Offset: 172; 		RelType: 50 Addend: 16 TargetName: .toc; 		This is section symbol; 		SectionID: 3 Offset: 176; 		RelType: 64 Addend: 8 TargetName: .toc; 		This is section symbol; 		SectionID: 3 Offset: 180; 		RelType: 64 Addend: 16 TargetName: .toc; 		This is section symbol; 		SectionID: 3 Offset: 184; 		RelType: 10 Addend: 0 TargetName: _ZN7TString10ReplaceAllEPKcS1_; 		SectionID: 3 Offset: 192; Create a new stub function; 		RelType: 10 Addend: 0 TargetName: _ZplRK7TStringPKc; 		SectionID: 3 Offset: 216; Create a new stub function; 		RelType: 50 Addend: 24 TargetName: .toc; 		This is section symbol; 		SectionID: 3 Offset: 224; 		RelType: 64 Addend: 24 TargetName: .toc; 		This is section symbol; 		SectionID: 3 Offset: 228; 		RelType: 10 Addend: 0 TargetName: cling_runtime_internal_throwIfInvalidPointer; 		SectionID: 3 Offset: 260; Create a new stub function; 		RelType: 10 Addend: 0 TargetName: _ZNK7TStringcvPKcEv; 		SectionID: 3 Offset: 276; Create a new stub function; 		RelType: 10 Addend: 0 TargetName: _ZNK7TStringcvPKcEv; 		SectionID: 3 Offset: 328; Stub function found; 		RelType: 50 Addend: 32 TargetName: .toc; 		This is section symbol; 		SectionID: 3 Offset: 332; 		RelType: 64 Addend: 32 TargetName: .toc; 		This is section symbol; 		SectionID: 3 Offset: 344; 		RelType: 10 Addend: 0 TargetName: _ZN5TFile4OpenEPKcS1_S1_ii; 		SectionID: 3 Offset: 352; Create a new stub function; 		RelTy,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-981977924:9264,stub,stub,9264,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-981977924,2,['stub'],['stub']
Testability,This is solely for the purpose of testing https://github.com/root-project/roottest/pull/1030,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15704:34,test,testing,34,https://root.cern,https://github.com/root-project/root/pull/15704,1,['test'],['testing']
Testability,"This is still a problem in 6.26.04:. ```; root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(); ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'?; ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(); ^; ->; root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(); root.exe: /home/conda/feedstock_root/build_artifacts/root_base_1654795774398/work/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:1187: std::string cling::Dyld::searchLibrariesForSymbol(llvm::StringRef, bool): Assertion `!llvm::sys::DynamicLibrary::SearchForAddressOfSymbol(mangledName) && ""Library already loaded, please use dlsym!""' failed.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1158723732:634,Assert,Assertion,634,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1158723732,1,['Assert'],['Assertion']
Testability,"This is strange indeed, maybe that particular kind of warning is not suppressed in the headers. In any case, the warnings are not due to Xavi's code, but due to Vc. If the tests passed, I'd say the warnings are not a blocker and this can be merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1004#issuecomment-330134395:172,test,tests,172,https://root.cern,https://github.com/root-project/root/pull/1004#issuecomment-330134395,1,['test'],['tests']
Testability,"This is the [recommended way](https://cmake.org/cmake/help/latest/command/cmake_policy.html#setting-policies-by-cmake-version) to set CMake policy settings. This means that policies created in versions prior to 3.9 will use the NEW setting by default, and newer policies will generate warnings. Set to 3.9 since that's the highest version currently tested in Jenkins. The Mac builds are generating a [warning](http://cdash.cern.ch/buildSummary.php?buildid=393980) (shown below) about policy CMP0068, so I'd like to test this; and move to the new policy mechanism once any problems that show up are fixed. ```; CMake Warning (dev):; Policy CMP0068 is not set: RPATH settings on macOS do not affect; install_name. Run ""cmake --help-policy CMP0068"" for policy details. Use; the cmake_policy command to set the policy and suppress this warning. For compatibility with older versions of CMake, the install_name fields for; the following targets are still affected by RPATH settings:. LTO; libclang. This warning is for project developers. Use -Wno-dev to suppres-- Generating done; s it.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/958:349,test,tested,349,https://root.cern,https://github.com/root-project/root/pull/958,2,['test'],"['test', 'tested']"
Testability,This is the command line I used:; ```ConsoleSession; + cd /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug; + cmake -GNinja -DCMAKE_BUILD_TYPE=Debug '-DCMAKE_IGNORE_PATH=/usr/local/lib;/usr/local/include;/usr/local/bin' -DCMAKE_INSTALL_PREFIX=/scratch/greenc/test-products/root/v6_27_99f1/Linux64bit+3.10-2.17-c14-p3913-debug -Dall:BOOL=OFF -Dasan:BOOL=OFF -Dasserts:BOOL=ON -Dccache:BOOL=OFF -Dclingtest:BOOL=OFF -Dcoverage:BOOL=OFF -Dcxxmodules:BOOL=OFF -Ddev:BOOL=OFF -Ddistcc:BOOL=OFF -Dexceptions:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dmemory_termination:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Drootbench:BOOL=OFF -Droottest:BOOL=OFF -Drpath:BOOL=OFF -Druntime_cxxmodules:BOOL=ON -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtest_distrd_pyspark:BOOL=OFF -Dtest_distrd_dask:BOOL=OFF -Dtesting:BOOL=OFF -DLLVM_BUILD_TYPE=Debug -DLLVM_ENABLE_ASSERTIONS:BOOL=ON -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_clang:BOOL=ON -Dbuiltin_cling:BOOL=ON -Dbuiltin_cppzmq:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=ON -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_openui5:BOOL=ON -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zeromq:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dbuiltin_zstd:BOOL=OFF -DXROOTD_ROOT_DIR=/scratch/greenc/test-products/xrootd/v5_4_3b/Linux64bit+3.10-2.17-c14-p3913-debug -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dcefweb:BOOL=OFF -Dclad:BOOL=ON -Dcuda:BOOL=OFF -Dcudnn:BOOL=OFF -Ddaos:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfcgi:BOOL=OFF -Df,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1378895796:74,test,test-products,74,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1378895796,2,['test'],['test-products']
Testability,"This is the current state of my experiment towards enabling finer-grained axis binning comparisons that ""axis configuration is exactly the same"" or ""axis configuration is different"". Once finished, this should enable switching between several histogram merging logics, including... - The current implementation, which is maximally fast but a bit too limited (it doesn't even allow the target histogram to grow to span the source histogram range if it is able to).; * Note that said implementation did already gain some superpowers in the current state of this PR, such as ability to merge when axis bin borders are _slightly_ different.; - More permissive implementations, which trade speed for generality. Here's what should IMO be added before this PR can be considered ready to merge:. - [x] Tests, lots of them. There's some very tricky code in there, even if it got clearer over time...; - [ ] Performance optimizations to reduce the impact of comparing axis binning, including...; * [ ] Not comparing every axis bin border when the axes are equidistant; * [ ] Reducing reliance on virtual function calls, especially in loops; * [ ] Possibly early algorithm exit as soon as complete conclusions are reached (but this will only benefit worst-case scenarios where axis binnings are very different, so...); - [ ] Demonstration of a more permissive histogram merging algorithm, to cross-check that the current binning comparison info adequately enables writing one as intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5725:261,log,logics,261,https://root.cern,https://github.com/root-project/root/pull/5725,2,"['Test', 'log']","['Tests', 'logics']"
Testability,"This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string; interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp; - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago.; - Removing of RVec version of printValue which wasn't used at all; - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2698:437,test,test,437,https://root.cern,https://github.com/root-project/root/pull/2698,1,['test'],['test']
Testability,This is the log of the failed test:; ```; Test 38: TGraph2D 1 (TRI2 and P0).................................. OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result...................................... 38 FAILED; Result = 1456040; Reference = 1463263; Error = 7223 (was 7000); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/312:12,log,log,12,https://root.cern,https://github.com/root-project/root/pull/312,3,"['Test', 'log', 'test']","['Test', 'log', 'test']"
Testability,"This is the manifestation of a known problem with the `std::string_view` converters, that can be reproduced without RDataFrame:; ```Python; import ROOT; import cppyy. cppyy.cppdef(""""""; void foo(std::string_view input) { std::cout << input << std::endl; }; """"""). my_string = cppyy.gbl.std.string(""test""). cppyy.gbl.foo(my_string); ```; You'll see that the output in ROOT 6.32 is empty, meaning the `string_view` is not correctly initialized. This causes the RDF code to crash. This problem was already fixed in upstream cppyy, and we have a PR open to apply these fixes:; https://github.com/root-project/root/pull/16212. However, the fix is breaking some other tests, so we can't apply them yet. Thanks for the report though, because this makes it clearer how #16212 needs to be prioritized. In the meantime, the workaround is to convert your `std::strings` into Python strings, because the conversion to `std::string_view` works for them:; ```python; for col in cols:; print(col); print( tmprdf.GetColumnType(str(col) )); ```; This workaround is also backwards compatible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16298#issuecomment-2306614607:296,test,test,296,https://root.cern,https://github.com/root-project/root/issues/16298#issuecomment-2306614607,2,['test'],"['test', 'tests']"
Testability,"This is to avoid output that doesn't indicate any problem and only makes; the test output harder to interpret. That's how the output of test 27 was before this commit:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); Test 27 : Integration over non-rectangular regions...............OK; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8611:78,test,test,78,https://root.cern,https://github.com/root-project/root/pull/8611,3,"['Test', 'test']","['Test', 'test']"
Testability,"This is to avoid the following warning at configuration time when building ROOT with `cuda` enabled:. ```; CMake Warning (dev) at cmake/modules/SearchInstalledSoftware.cmake:18 (_find_package):; Policy CMP0146 is not set: The FindCUDA module is removed. Run ""cmake; --help-policy CMP0146"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. Call Stack (most recent call first):; cmake/modules/SearchInstalledSoftware.cmake:1705 (find_package); CMakeLists.txt:347 (include); This warning is for project developers. Use -Wno-dev to suppress it.; ```. Indeed, FindCUDA is deprecated since CMake 3.10:; https://cmake.org/cmake/help/latest/module/FindCUDA.html. The minimum required CMake version by ROOT is 3.16, so it should be no problem to use the suggested new alternative: call the enable_language() command with CUDA. Similar to `enable_language(Fortran)`, this is now done in `CheckCompiler.cmake`. Also, some logic of managing the configuration flags was moved from `SearchInstalledSoftware.cmake` to `RootBuildOptions.cmake` where it belongs. What remains in `SearchInstalledSoftware.cmake` is only the code to find the CuDNN library. Also, since CUDA is now registered as a language in CMake, we can use the official `CMAKE_CUDA_COMPILER` variable in `RootConfiguration.cmake` when invoking nvcc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13437:956,log,logic,956,https://root.cern,https://github.com/root-project/root/pull/13437,1,['log'],['logic']
Testability,"This is to reduce the amount of code generated for every separate; RInterface instantiation. The PR should not otherwise modify any logic or functionality. I hoped this would reduce compile times of RDF-heavy code, but on an artificial benchmark the changes have little to no effect. This might be a good refactoring to have nonetheless. What do people think?. In order to minimize conflicts with other PRs, this must be merged after:. - https://github.com/root-project/root/pull/11314; - https://github.com/root-project/root/pull/11307; - https://github.com/root-project/root/pull/11306; - https://github.com/root-project/root/pull/11149",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11121:132,log,logic,132,https://root.cern,https://github.com/root-project/root/pull/11121,2,"['benchmark', 'log']","['benchmark', 'logic']"
Testability,This is to see which tests are failing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10419:21,test,tests,21,https://root.cern,https://github.com/root-project/root/pull/10419,1,['test'],['tests']
Testability,"This is to test a potential fix to a recent regression in llvm wrt exposing symbols to the JIT from dlopened with RTLD_LOCAL libraries. This regression forced ROOT to revert this patch, adding one more patch to the list of llvm patches. We want to check if D33529 fixes our issue and make sure it goes in the next llvm release (coming soon). @marsupial, I failed to apply D33657 on top and D33658. They are marked as dependencies but it looks like they do not apply cleanly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744:11,test,test,11,https://root.cern,https://github.com/root-project/root/pull/744,1,['test'],['test']
Testability,"This is truly bizarre.; I do not understand at all why this should not happen in previous versions of root.; For some reasons in the mixture the element is added twice.; If you invert the creation of the mixture this does not happen.; This is bad:; ```; TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);; mix2->AddElement(mix, 0.85);; mix2->AddElement(c, 0.15);; ```; This however works as expected:; ```; TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);; mix2->AddElement(c, 0.15);; mix2->AddElement(mix, 0.85);; ```; and gives:; ```; Mixture Pipe:Sintimid15G Aeff=12.9939 Zeff=6.49292 rho=1.42 radlen=28.2183 intlen=57.7889 index=1; Element: C Z=6 N=12.000000 A=12.010700 [g/mole]; Element: N Z=7 N=14.000000 A=14.006740 [g/mole]; Element: O Z=8 N=16.000000 A=15.999400 [g/mole]; Number of elements:3; Element 0: C; Element 1: N; Element 2: O; ```; Somehow in TGeoMaterial.cxx:816 the logic looks suspicious, but I am not really sure of:; ```; for (i=0; i<fNelements; i++) {; if (!fElements && TMath::Abs(z-fZmixture[i])<1.e-6 && TMath::Abs(a-fAmixture[i])<1.e-6) {; fWeights[i] += weight;; AverageProperties();; return;; }; }; ```; Andrei, what is you interpretation ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11272#issuecomment-1231544715:920,log,logic,920,https://root.cern,https://github.com/root-project/root/issues/11272#issuecomment-1231544715,1,['log'],['logic']
Testability,This is try to use Jupyter static location for JSROOT files.; Should be tested,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4497:72,test,tested,72,https://root.cern,https://github.com/root-project/root/pull/4497,1,['test'],['tested']
Testability,"This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: ; `parent = parent.substr(0, posLastDot);`; to; `parent = parent.substr(0, posLastDotParent);`; will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.); For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:; `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10611:703,log,logic,703,https://root.cern,https://github.com/root-project/root/issues/10611,2,['log'],['logic']
Testability,"This is very first prototype for testing and further development. Idea to scan geometry and create render data on C++ side, ; only final WebGL display implemented in web browser. Also will be test-case for OpenUI TableTree integration. One need specialized OData-like requests to show only visible part of geometry hierarchy. tutorials/eve7/viewer.C shows basic usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3194:33,test,testing,33,https://root.cern,https://github.com/root-project/root/pull/3194,2,['test'],"['test-case', 'testing']"
Testability,"This is work done by Alex Saperstein, and ANL SULI who worked with me. While working on TTreeCache learning, our Summer Intern (Alex Saperstein) observed that for simple TTrees, the basket size optimization isn’t optimal for two reasons: 1) rounding down to 512 byte blocks 2) neglecting to accommodate for ROOT offsets stored in the baskets. As a result, e.g. with simple (constant size) float array branches the basket size is to small resulting in two baskets per auto-flush. The change would be pretty straight-forward: tree/tree/src/TTree.cxx. Line; -6583 newBsize = newBsize - newBsize%512;. Should become:; +6583 if (pass) { // only on the second pass so that it doesn't interfere with scaling; +6583 Int_t nevbuf = branch->GetBasket(0)->GetNevBuf();; +6583 newBsize = newBsize + (nevbuf \* sizeof(Int_t) \* 2); // make room for meta data; +6583 newBsize = newBsize - newBsize%512 + 512; // rounds up; +6583 }. Tests on simple data show that with this the baskets end up more appropriately sized so that all the auto-flush data fits.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/238:918,Test,Tests,918,https://root.cern,https://github.com/root-project/root/pull/238,1,['Test'],['Tests']
Testability,"This issue is just a reminder that we need to resolve this TODO:. https://github.com/root-project/root/blob/89776f40f6f9a0f1ea769ed86f8280696b85e01f/tree/dataframe/src/RNTupleDS.cxx#L288-L296. so that e.g. the following wrong usage errors out:. ```cpp; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleDS.hxx>; #include <ROOT/RDataFrame.hxx>. int main() {; {; auto m = ROOT::Experimental::RNTupleModel::Create();; auto x = m->MakeField<int>(""x"", 42);; auto r = ROOT::Experimental::RNTupleWriter::Recreate(std::move(m), ""n"",; ""f.root"");; r->Fill();; }. auto df = ROOT::Experimental::MakeNTupleDataFrame(""n"", ""f.root"");; df.Filter([] (std::string &x) { return !x.empty(); }, {""x""}).Count().GetValue();; }; ```. (on my machine the test above executes without crashes, but that's just luck)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10749:730,test,test,730,https://root.cern,https://github.com/root-project/root/issues/10749,1,['test'],['test']
Testability,This issue was reported here: https://sft.its.cern.ch/jira/browse/ROOT-9046; PaintLine as now the same logic as PaintPolyMarker to decide if a point; is in the range or not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1158:103,log,logic,103,https://root.cern,https://github.com/root-project/root/pull/1158,1,['log'],['logic']
Testability,"This last failure is related to Bulk I/O, not my changes:; ```; -- TEST COMMAND -- ; cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts; /usr/bin/make utils; -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build; make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --; CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):; got exit code 2 but expected 0; ```; I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3763#issuecomment-489659558:67,TEST,TEST,67,https://root.cern,https://github.com/root-project/root/pull/3763#issuecomment-489659558,5,['TEST'],['TEST']
Testability,"This line was introduced by commit 0f1f12931f in 2016, in what looks like an unrelated change. All ROOT tests pass after removing it. @Axel-Naumann unless you happen to remember why this was introduced, I will synchronize this to the monorepo and we get rid of another patch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13123:104,test,tests,104,https://root.cern,https://github.com/root-project/root/pull/13123,1,['test'],['tests']
Testability,"This little bug was already introduced a few years ago in 1ecd30e, and became apparent now that the vectorized evaluation is the default. The logic should be to clip all values to be >= 0. Closes #15694.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15702:142,log,logic,142,https://root.cern,https://github.com/root-project/root/pull/15702,1,['log'],['logic']
Testability,This looks good and can be merged if it passes all tests (and after re-adding one comment).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1058#issuecomment-332879639:51,test,tests,51,https://root.cern,https://github.com/root-project/root/pull/1058#issuecomment-332879639,1,['test'],['tests']
Testability,This looks good for cmssw. No build error found and all unit tests/relvals/addon tests passed ( https://github.com/cms-sw/root/pull/197 ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14444#issuecomment-1912184221:61,test,tests,61,https://root.cern,https://github.com/root-project/root/pull/14444#issuecomment-1912184221,2,['test'],['tests']
Testability,"This looks like a regression from https://github.com/root-project/root/commit/7a1cc8ffe576490b2f977ba2c262e10ec53a797a#diff-93558e500b17901f800fbb40a2c2fdfd6ee229077db63413bd4a91ee7ec66ea7. It seems like interpreter/llvm-project/llvm/tools/clang would not be a thing, while a following compilation error is observed with builtin_llvm=OFF:. In file included from interpreter/cling/lib/Utils/AST.cpp:12:; In file included from interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:18:; interpreter/llvm-project/clang/include/clang/AST/ASTFwd.h:21:10: fatal error: 'clang/AST/DeclNodes.inc' file not found; #include ""clang/AST/DeclNodes.inc""; ^~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14238:759,test,tested,759,https://root.cern,https://github.com/root-project/root/pull/14238,1,['test'],['tested']
Testability,"This looks real:; ```; [ RUN ] TRootTDS.FromARDFMT; C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\datasource_root.cxx(176): error: Expected equality of these values:; 0.; Which is: 0; *min; Which is: 7; [ FAILED ] TRootTDS.FromARDFMT (11 ms); ```; where the test is:; ```cpp; std::unique_ptr<RDataSource> tds(new ROOT::Internal::RDF::RRootDS(treeName, fileGlob));; RDataFrame tdf(std::move(tds));; auto max = tdf.Max<int>(""i"");; auto min = tdf.Min<int>(""i"");; auto c = tdf.Count();. EXPECT_EQ(30U, *c);; EXPECT_DOUBLE_EQ(29., *max);; EXPECT_DOUBLE_EQ(0., *min);; ```; I just checked with `valgrind` locally (on my fedora) and it had no complaints. I will rerun the test on windows ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11504#issuecomment-1271188053:115,test,test,115,https://root.cern,https://github.com/root-project/root/pull/11504#issuecomment-1271188053,3,['test'],['test']
Testability,"This makes it possible to create a pre-downloaded cache before running the tests, so that it is possible to run the tests in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/404:75,test,tests,75,https://root.cern,https://github.com/root-project/root/pull/404,2,['test'],['tests']
Testability,"This makes the test `roottest-root-treeproxy-make` pass on macOS 13, where a proxy pulling in `pair<int,int>` was trying to include the (private) header `__bit_reference`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12890:15,test,test,15,https://root.cern,https://github.com/root-project/root/pull/12890,1,['test'],['test']
Testability,This makes the tests run a bit faster. A test case specifically; on jitting has been added. This should also solve a problem with exceptions thrown from; jitted code on M1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9842:15,test,tests,15,https://root.cern,https://github.com/root-project/root/pull/9842,2,['test'],"['test', 'tests']"
Testability,"This may be useful for applications when to flush a cluster (group). Also a minor type fix of `RNTupleWriter::fUnzippedClusterSizeEst` (according to my current understanding), and moving the model creation into write scope in the `ntuple_storage` test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14120:247,test,test,247,https://root.cern,https://github.com/root-project/root/pull/14120,1,['test'],['test']
Testability,"This memory leak is demonstrated with the following ROOT macro:. ```; {; {; RooExpensiveObjectCache::instance(); // force the standard instance construction (otherwise created in factory method call); cout << ""make ws"" << endl;; RooWorkspace w(""combined"", ""combined"");; cout << ""factory method:"" << endl;; w.factory(""RooGaussian::gaus(x[-5,5],mean[0,-5,5],sigma[1,0.1,3])"");; w.writeToFile(""/tmp/test.root"");; cout << ""reading back"" << endl;; {; TFile f(""/tmp/test.root"");; RooWorkspace *w2 = f.Get<RooWorkspace>(""combined"");; std::cout << ""deleting w2"" << endl;; delete w2;; }; std::cout << ""deleting w"" << endl;; }; }; ```; along with a modification to `RooExpensiveObjectCache` to printout when an instance is being constructed or destructed. Before this fix the above then prints out (I annotated the output a bit):. ```; Processing test.C...; Created 0x12cb8cc68 <--- this is the static instance; make ws; Created 0x7ffee2baaab0 <--- the workspace's cache; factory method:; reading back; Created 0x7fcbc7b39008 <--- the read-back workspace's cache; Created 0x7fcbd45a0b70 <--- memory leaking cache; deleting w2; Destroyed 0x7fcbc7b39008; deleting w; Destroyed 0x7ffee2baaab0; root [1] .q; Destroyed 0x12cb8cc68; ```. After the fix caches are created and destroyed as expected:. ```; Processing test.C...; Created 0x1290a5c68; make ws; Created 0x7ffee623eab0; factory method:; reading back; Created 0x7f9bd8437408; deleting w2; Destroyed 0x7f9bd8437408; deleting w; Destroyed 0x7ffee623eab0; root [1] .q; Destroyed 0x1290a5c68; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12024:396,test,test,396,https://root.cern,https://github.com/root-project/root/pull/12024,4,['test'],['test']
Testability,"This might fix e.g. `-mmacosx-version-min=12.6` not being passed to ACLiC, causing linker warnings about incompatible deployment targets. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12139:203,test,tested,203,https://root.cern,https://github.com/root-project/root/pull/12139,1,['test'],['tested']
Testability,"This might or might not fix the failures at https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/10051/testReport/junit/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_samplecallback/ , but it's anyway an improvement",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9047:166,test,testReport,166,https://root.cern,https://github.com/root-project/root/pull/9047,2,['test'],"['test', 'testReport']"
Testability,This missing include breaks Minuit2 standalone on MSVC. Can be tested as part of #1680.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1681:63,test,tested,63,https://root.cern,https://github.com/root-project/root/pull/1681,1,['test'],['tested']
Testability,"This needs to be tested locally, as I do not think we have MPI installed in the externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1689#issuecomment-380147293:17,test,tested,17,https://root.cern,https://github.com/root-project/root/pull/1689#issuecomment-380147293,1,['test'],['tested']
Testability,This new release includes some improvements:; * Add support for pushforward- and pullback-style functions; * More supported constructs in forward and reverse mode; * Forward mode support for CUDA programs; * AD-based Floating Point Error Estimation Framework; * Integration with Enzyme. See more at: https://github.com/vgvassilev/clad/blob/v1.0/docs/internalDocs/ReleaseNotes.md. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11544:445,test,tested,445,https://root.cern,https://github.com/root-project/root/pull/11544,1,['test'],['tested']
Testability,"This patch adds `df.DefinePerSample`, a method that lets user define; new columns that are only updated per ""data-block"" rather than per; entry, where a ""data-block"" is made of several entries that have the; same data-block ID (e.g. that belong to the same TTree in a TChain). The data-block ID is passed as an argument to the callback, so that; quantities can be defined based on the sample being processed. Currently a jitted version is not available and RDataSources have; no way to hook into the mechanism (they get one data-block per task; with empty data-block ID). Support for these cases will be added by; later commits. This resolves #6745. This PR should make @stwunsch happy. To do:. - [x] test `RDataBlockID` with entry ranges; - [x] naming: `RDataBlockID -> RDataBlockInfo`? `DefinePerSample -> DefinePerDataBlock`?; - [x] add support for jitted `df.DefinePerSample(""myconstant"", ""rdfdatablock_.Contains(\""MC\"") ? 42. : 8."")`; - [ ] add release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8841:701,test,test,701,https://root.cern,https://github.com/root-project/root/pull/8841,1,['test'],['test']
Testability,"This patch adds a few IO benchmarks. Some of them were hosted by @amadio in an external repository. The nature of some of the benchmarks is to create multiple times files on disk. Running repeatedly, this can wear out machines disk drives. For that reason we extend the `TFileMerger` to work with `TFile*` directly. Passing an externally created `TFile*` allows us to pass a `TMemFile`. Being able to benchmark based on in-memory files gives us another advantage: we can emulate very fast drives or certain delay patterns.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1062:25,benchmark,benchmarks,25,https://root.cern,https://github.com/root-project/root/pull/1062,3,['benchmark'],"['benchmark', 'benchmarks']"
Testability,This patch affords trimming of redundant Jupyter notebook information contained within TCanvas .JSON objects. Specifically this includes the removing the list of TColors which reduces the size of a benchmark notebook (a compiled test notebook of Root Primer graphics) by up to 80% upon preliminary tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/760:198,benchmark,benchmark,198,https://root.cern,https://github.com/root-project/root/pull/760,3,"['benchmark', 'test']","['benchmark', 'test', 'tests']"
Testability,This patch allows TFileMerger to work with externally created TFile-s. Being; able to control the creation of the TFile objects give us a chance to use; in-memory files. This is very helpful in benchmarking when we want to simulate; fast disks or we just want to avoid disk wearout.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1073:194,benchmark,benchmarking,194,https://root.cern,https://github.com/root-project/root/pull/1073,1,['benchmark'],['benchmarking']
Testability,"This patch came from Sean Benson and Wouter Verkerke, and is needed; to allow LHCb's P2VV-style analyses to have different time acceptances; for different categories of events. All tests continue to pass.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3776:181,test,tests,181,https://root.cern,https://github.com/root-project/root/pull/3776,1,['test'],['tests']
Testability,This patch fixes an assertion in the incremental builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3802:20,assert,assertion,20,https://root.cern,https://github.com/root-project/root/pull/3802,1,['assert'],['assertion']
Testability,"This patch fixes the histhistv7testUnit test, which was failing with the following errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:40,test,test,40,https://root.cern,https://github.com/root-project/root/pull/5054,8,"['Test', 'test']","['Test', 'test']"
Testability,"This patch is a complementary chenge to root-project/root@d2c0929e0d It will turn off the isOutOfDate checks for transient files with different size on disk. This is quite dangerous but we are supposed to control the build environment which prepares the distributable binaries. This should fix the cmssw issue:. StdDictionaries/src/DataFormatsStdDictionaries/a/DataFormatsStdDictionaries_all_def.xml; input_line_8:1:22: error: file '/usr/include/linux/falloc.h' from the precompiled header has been overridden; ^; rootcling: /build/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/slc7_amd64_gcc820/lcg/root/6.17.01/root-6.17.01/interpreter/llvm/src/tools/clang/include/clang/Serialization/Module.h:72: clang::serialization::InputFile::InputFile(const clang::FileEntry*, bool, bool): Assertion `!(isOverridden && isOutOfDate) && ""an overridden cannot be out-of-date""' failed. The error tells us that `falloc.h` has different file size on the build machine and; on the distribution machine. We should probably rely on an environment variable; to turn off this diagnostic selectively and more the reponsibility if something goes; wrong to the distribution team. They should have better knowledge what is safe to; be ignored anyway. cc: @davidlange6, @oshadura, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4495:781,Assert,Assertion,781,https://root.cern,https://github.com/root-project/root/pull/4495,1,['Assert'],['Assertion']
Testability,"This patch is to find out why this is still needed as we could not understand (see phab review). If this was mostly for unloading, then the test failures are telling us we might need this for something else. We want to build a clang-repl test out of that something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10696#issuecomment-1146203166:140,test,test,140,https://root.cern,https://github.com/root-project/root/pull/10696#issuecomment-1146203166,2,['test'],['test']
Testability,"This patch is to verify if we really need to store identifiers that; are namespace in GlobalModuleIndex, which greatly increase the maximum; memory pressure. Send this to trigger ROOT's CI so we can have a full; test, and will be closed if the direction is wrong. **No need for code review or merge**. Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10969:212,test,test,212,https://root.cern,https://github.com/root-project/root/pull/10969,1,['test'],['test']
Testability,"This patch reimplemented signal handling in CMSSW. It avoids async-unsafe functions in signal handler. For reference, see the link https://github.com/bbockelm/cmssw/blob/stacktrace_handler_revisit/FWCore/Services/src/InitRootHandlers.cc. I tried this patch with some simple multi-thread test cases and it worked fine. Is there any complicated test cases I can run? I think this patch is not very ready to merge, but it achieved basic functions. Any criticisms are welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/96:287,test,test,287,https://root.cern,https://github.com/root-project/root/pull/96,2,['test'],['test']
Testability,"This patch reimplements the broken patch in clang: ""Fix fwddecls of templates; with tmplt arg defauls coming from dictionaries (CMS / std::less). (#849)"". And partially reimplements:""Disable diags of dupe default args (func, templt); temporarily."". It also fixes the failing cling test Autoloading/AutoForwarding.C which; is visible when building root with -Dclingtest=On.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1268:281,test,test,281,https://root.cern,https://github.com/root-project/root/pull/1268,1,['test'],['test']
Testability,"This patch removes an unnecessary assert, which is probably a left-over from early debugging. Asserts are a way to document certain runtime assumptions that the code makes. They should be only used if the code cannot run correctly if the condition is not fulfilled. This assert here does not serve that purpose. Starting the minimization iteration with an invalid initial state is fine as far as the algorithm is concerned, because it does not make use of that property. Edit: This is not a cosmetic change, because this assert triggers an abort in one of the iminuit tests if the code is compiled in debug mode, while the test runs fine in release mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6762:34,assert,assert,34,https://root.cern,https://github.com/root-project/root/pull/6762,6,"['Assert', 'assert', 'test']","['Asserts', 'assert', 'test', 'tests']"
Testability,This patch should fix an assert in the incrementals.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3873:25,assert,assert,25,https://root.cern,https://github.com/root-project/root/pull/3873,2,['assert'],['assert']
Testability,"This pattern was/is intentional (see text from ab4359707d324a19a21a1fea7e59a8e07eaf9673).; The idea is to avoid **all** user to pay the price of the lock taking when only the IMT/TTree code is supposed to leverage it. For all other use cases, we support 'only' the case one thread per TFile. To properly support (in a fair way to those not using it) the general case, we would actually need to be much more generic (i.e. a TLockedFile or a switch/parameter to TFile ... in this later view, switching the global test for a more local one may be helpful).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288#issuecomment-608542244:511,test,test,511,https://root.cern,https://github.com/root-project/root/pull/5288#issuecomment-608542244,1,['test'],['test']
Testability,"This prevents an assert (isClingShadowNamespace(D->getDeclContext()) && ""D not in a __cling_N5xxx namespace?""), function hideDecl, file /build/jenkins/night/LABEL/mac1014/SPEC/soversion/V/master/root/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp, line 61",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5371:17,assert,assert,17,https://root.cern,https://github.com/root-project/root/pull/5371,1,['assert'],['assert']
Testability,"This problem is blocking ATLAS in adopting ROOT 6.28.x in production. . We use an ATLAS specific pyROOT script 'diff-root' that compares AODs branch-by-branch in our CI and integration tests that is not working in ROOT 6.28.x with the symptoms described above. The original error message of this script is:. ```; [..]; Py:diff-root INFO comparing [2932] leaves over entries...; IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPKN4xAOD28CaloClusterBadChannelData_v1ES5_EEbT_S6_T0_' unresolved while linking symbol '__cf_295'!; You are probably missing the definition of bool std::__equal<false>::equal<xAOD::CaloClusterBadChannelData_v1 const*, xAOD::CaloClusterBadChannelData_v1 const*>(xAOD::CaloClusterBadChannelData_v1; const*, xAOD::CaloClusterBadChannelData_v1 const*, xAOD::CaloClusterBadChannelData_v1 const*); Maybe you need to load the corresponding shared library?; cling JIT session error: Failed to materialize symbols: { (main, { _ZSteqISt6vectorIN4xAOD28CaloClusterBadChannelData_v1ESaIS2_EESaIS4_EEbRKS0_IT_T0_ESA_ }) }; IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK20TrigRoiDescriptor_p3S4_EEbT_S5_T0_' unresolved while linking symbol '__cf_452'!; You are probably missing the definition of bool std::__equal<false>::equal<TrigRoiDescriptor_p3 const*, TrigRoiDescriptor_p3 const*>(TrigRoiDescriptor_p3 const*, TrigRoiDescriptor_p3 const*, Trig; RoiDescriptor_p3 const*); Maybe you need to load the corresponding shared library?; cling JIT session error: Failed to materialize symbols: { (main, { _ZN16__cppyy_internal8is_equalI30TrigRoiDescriptorCollection_p3S1_EEbRKT_RKT0_ }) }; cling JIT session error: Failed to materialize symbols: { (main, { _ZN16__cppyy_internal8is_equalI30TrigRoiDescriptorCollection_p3S1_EEbRKT_RKT0_ }) }; [..] ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12406#issuecomment-1543771925:185,test,tests,185,https://root.cern,https://github.com/root-project/root/issues/12406#issuecomment-1543771925,1,['test'],['tests']
Testability,"This problem was solved by putting the Debian 10 machine to a colder place. The timeouts where caused by CPU throttling because the machine ran to hot. While investigating this issue, I figured out that we could also speed the tests up by using the `-O3` optimization flag (as in `Release` mode). The `RelWithDebInfo` build type that is used in the nightlies implies `-O2`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14306#issuecomment-1886686200:227,test,tests,227,https://root.cern,https://github.com/root-project/root/issues/14306#issuecomment-1886686200,1,['test'],['tests']
Testability,"This properly initialize the thread pool manager, and fixes the crash in `gtest-tree-treeplayer-test-treeprocessormt` on Windows, but the Jira issue ROOT-10561 has still to be fixed",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4947:96,test,test-treeprocessormt,96,https://root.cern,https://github.com/root-project/root/pull/4947,1,['test'],['test-treeprocessormt']
Testability,"This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:; * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. ; * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix; * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13109:1466,test,tested,1466,https://root.cern,https://github.com/root-project/root/pull/13109,2,['test'],['tested']
Testability,This pull request **fixes 3 alerts** when merging 2e042de557f8d0f42bc90ffab0fe783d162e012a into 6af46b5a663740769b6067ea52463b58745ae481 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-483ffd0718310a19dbb77f5bbc8b6e3ec00fb2e8). **fixed alerts:**. * 2 for Useless comparison test; * 1 for Useless assignment to local variable,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9786#issuecomment-1027781254:300,test,test,300,https://root.cern,https://github.com/root-project/root/pull/9786#issuecomment-1027781254,1,['test'],['test']
Testability,This pull request **fixes 5 alerts** when merging 6bdcaeff572cd952aca47a462080cb6afa6cdde0 into 09c584fed88a8dc3b60be18180bdbcedb6ee9da8 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-4ebd203d225326c79ab481f05594a7dca354b71b). **fixed alerts:**. * 2 for Testing equality to None; * 2 for Except block handles &#39;BaseException&#39;; * 1 for Suspicious unused loop iteration variable,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9144#issuecomment-947465664:281,Test,Testing,281,https://root.cern,https://github.com/root-project/root/pull/9144#issuecomment-947465664,1,['Test'],['Testing']
Testability,This pull request **fixes 73 alerts** when merging cd5f77f319cd60f10498f61867a0c7f6f15d2521 into f9b2882249b1980a01556888df2cf85c4c72d8e8 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-38e7540f6bcc08e9de82e71224ca6596cca00a14). **fixed alerts:**. * 40 for Useless assignment to local variable; * 10 for Useless conditional; * 8 for Incorrect suffix check; * 3 for Superfluous trailing arguments; * 2 for Useless type test; * 2 for Useless comparison test; * 2 for Replacement of a substring with itself; * 2 for Incomplete string escaping or encoding; * 2 for Template syntax in string literal; * 1 for Duplicate &#39;if&#39; condition; * 1 for Useless regular\-expression character escape,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7647#issuecomment-804840134:444,test,test,444,https://root.cern,https://github.com/root-project/root/pull/7647#issuecomment-804840134,2,['test'],['test']
Testability,This pull request **introduces 1 alert** and **fixes 5** when merging 56e426ea4987461e93c6bfe68c8d79e67c0fb466 into 09c584fed88a8dc3b60be18180bdbcedb6ee9da8 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-bfdf9cb75c1a104b9d6130e363faf2f1f87f4afa). **new alerts:**. * 1 for Unused import. **fixed alerts:**. * 2 for Testing equality to None; * 2 for Except block handles &#39;BaseException&#39;; * 1 for Suspicious unused loop iteration variable,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9144#issuecomment-946871761:341,Test,Testing,341,https://root.cern,https://github.com/root-project/root/pull/9144#issuecomment-946871761,1,['Test'],['Testing']
Testability,"This pull request **introduces 1 alert** and **fixes 70** when merging 2d52f7eff29958308ecefabf4ac851ff04685cbc into 62bbd5b6b3b499d066b47898bcf70a2c18668e94 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-087a948bd10e9f44e5cc2ffa3a21e3e49e607478). **new alerts:**. * 1 for Unused variable, import, function or class. **fixed alerts:**. * 40 for Useless assignment to local variable; * 10 for Useless conditional; * 7 for Incorrect suffix check; * 3 for Superfluous trailing arguments; * 2 for Useless type test; * 2 for Useless comparison test; * 2 for Incomplete string escaping or encoding; * 2 for Template syntax in string literal; * 1 for Duplicate &#39;if&#39; condition; * 1 for Useless regular\-expression character escape",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7551#issuecomment-800428889:533,test,test,533,https://root.cern,https://github.com/root-project/root/pull/7551#issuecomment-800428889,2,['test'],['test']
Testability,This pull request **introduces 20 alerts** when merging 8cd3b57914ef0f771632cb3e7b808d1a63ffdffb into 7e709f8810023ad184747e4c6f250f3617bb25dc - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-5736eb21573d1058a7c0913481a70f98e84b7f06). **new alerts:**. * 6 for Unused import; * 5 for Unreachable code; * 4 for Testing equality to None; * 3 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Variable defined multiple times,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10442#issuecomment-1106892599:334,Test,Testing,334,https://root.cern,https://github.com/root-project/root/pull/10442#issuecomment-1106892599,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 03d813216d18476ac00690bfa45be6ebd6d2b573 into bf347a53dbcfe469a4e6d39c5537f24300fb9f04 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-92a0815d02256d3c41de76bd78ed59927ecd130f). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1319074850:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1319074850,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 09f6fdde14fee71f3c446e3a14d566642fcb2d73 into 99032172f6216154e7e0824a3d32925fcb650e7a - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-9ad5e3f5cd2964950fd551d8ce94224629042540). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1319879474:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1319879474,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 223e6f3db47f44a29ff090bcbb30ed4e8a9a295c into 5764b6aa3d04ec2fceaa15ddbfd20541418ebee7 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-f996be376a861fda1eaf0677132494825b6c234f). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1317515271:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1317515271,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 22dd7f86a60ff4f26b8894876c571f45567ceb3a into 323c21416cea9a64080698c23a7e2f6f6d1808bf - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-73ac36cca67998ddc3d7a0c5abf7a5f2eafbc059). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1321128585:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1321128585,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 279de79f8fd0e28b7533159580fa55a684636b77 into 323c21416cea9a64080698c23a7e2f6f6d1808bf - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-f9b6bd1caa67ccf4e235d3545b39b2bc1a4b7806). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1321115038:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1321115038,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 2aab582da8bbc4239c5b01fcbee3b9b6bfe78129 into 8cc176c9ee7dde3b72501a2b657534bc6bd10418 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-164d20e4477aecfba59e6df34e740d67a18bf884). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1298731089:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1298731089,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 2baacf55f58ed7760e58f67416386b87be5c567a into b53640813aa29e458ddab421141e39a4e2fd1842 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-7bde1faa8fd87621fa26b58d22df74db38cbb583). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1318390950:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1318390950,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 2cced58c48a01ada3ef4551fd9525fc4830181a6 into cde3a487f63e7dcf88f691c14d255f13e18278f9 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-d9b8b0ec762c71e293c3893c4d53a78ea9f1dfb0). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1326673110:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1326673110,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 3b962fc8f64df0affeccf447df3e44afc378cb06 into 8ce27408659062a17c48b7b572352a1ba05e8a81 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-9b25ed4e94cd087caf948fc41cdf3bcbf8423014). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1269769470:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1269769470,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 3f8879a815ba5feee8e8c491a9d801c5849d2866 into c273a91abdad22b46d8e62073535fcd6945218e0 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-65b3d984207e8361dba35bb8cac074be20d9d0ab). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1319669763:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1319669763,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 50d2b0f54e14bf4b3093f87d5feed57cc60611ef into bd200315c50ac1520f75f959a852c6d3333f8aa9 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-a10fba1d231d7d7d3a751bf31b1b5e5467ab99e6). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1316480401:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1316480401,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 5a65bccb74ff97f2b75b9256edd90a2d013df4e2 into c273a91abdad22b46d8e62073535fcd6945218e0 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-aee71e086e22a434d2ce32d60528b934404d9d38). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1319305629:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1319305629,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 5db66d712f9befd939e52112b322e039ae105b93 into 64386a8122b1f7d9f4870c2e7f85484a9007167e - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-caafc9282c3c85ce07dfe9beb02190fcd1012a4e). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1326180372:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1326180372,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 6e9cad524f71b65f0fd6b37c108bda566c999e9d into cde3a487f63e7dcf88f691c14d255f13e18278f9 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-1b79fb391da41767bf765089dabab41748d7a570). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1327156328:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1327156328,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 819d5b611ef1776359a461722351c91d40e731ba into a05d4beded1481a86a65e450826352eb528b03e7 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-e1509770a8aca1335d81c9a3513917c741f1d8a3). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1312403732:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1312403732,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 8343c77a1628d0e21b30fc4336d8af827319b083 into a05d4beded1481a86a65e450826352eb528b03e7 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-e6f899b8ff13cb1721741226596581f9aea782d5). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1312502311:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1312502311,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 8525d27e44b45c61df2fd800b52fdeff1900d14a into 43016f031b870f7ea1f30a245b8072017af485bb - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-620d019b72d7396600683749c777dd32c11a2fb3). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1306336762:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1306336762,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging a8636e39ac994000a37222b2ad8cd0c940356d59 into a3809f82b0430a6e942a85e2cf1488463542d4a6 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-68fcee0c9c9b76fd0f76abf073c208f0af6afa22). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1339788387:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1339788387,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging a902835e2ac1feaeb680737da93405a6e29922ce into cde3a487f63e7dcf88f691c14d255f13e18278f9 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-07223dd3ebacfd9db350aa8404a665d40c7c05a1). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1326899987:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1326899987,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging b63f25db5304aa3c90896512558a4041ba46c950 into a05d4beded1481a86a65e450826352eb528b03e7 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-bd7bbba29ccc9c550b9369e9fa672ed67a52058b). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1312663226:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1312663226,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging c3a88ba7ffb460af1dba7c068b42e3a0ebbd4ad5 into a17ad74c4b825dcdcdea5d1eb5f9df805caa63fa - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-916dea89ec2912f7bfeb85f75d7d8c907291e540). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1324927415:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1324927415,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging ca2f9bd19ed10dc95b0badc6964c0f2e034611df into 7a90392f2a59bb4ebeb3841b44893e39224419fc - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-47ead4ddbbad2478e73a72a1b2c2978cd1aab44b). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1314341155:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1314341155,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging cd86f17ccba2fc44977303b920a9a89dacb8af95 into 194180c84f5b59658be46e69660094a0aa4dd3c0 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-559804ead09a31a00889f39793818f6b40b554ad). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1312008553:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1312008553,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging e4dad5d121f7f66784f802a06334953f8fb17a45 into 99a241911450b020762237b7fd772846dd718bb7 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-d661dc38afd686d57395777cd26df572c621c5ab). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1325314054:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1325314054,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging e581df924f2dd2aa3c6c7a485f3d84d8eb144522 into b13756d544d91803e31c7b6aa0c32ae05481e7f8 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-d32d2d614dea682b1ca981ca695dd2d6e81b01b6). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1271470899:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1271470899,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging f711a806ac0d3f10bf0e520d7d06b00d860678a2 into 229004bbd8fe222fafe7850d5df7f1eada2493a3 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-8bd21265cc371f5af81e77bd0009096f29972242). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1342758071:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1342758071,1,['Test'],['Testing']
Testability,"This pull request **introduces 71 alerts** and **fixes 30** when merging f7f290378e1c787724b4558e1355560469006c22 into a05d4beded1481a86a65e450826352eb528b03e7 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-582dc477cc11db50d85c3537d7d7938c234981b4). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1312716655:950,Test,Testing,950,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1312716655,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 0124e04a5908d7698b4dd2568f6acb9b0746c658 into 70f96ca797b5b4f16368b8081a34b72edbc70461 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-0b41c05b3a57484dd727310f32041fa8109ffd25). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1185519236:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1185519236,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 012e0ba63d28aaf6396c293ce1db7b828c8b8c6a into f7dd633e20241d34784cf3e2a1d3d1d30b2835bf - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-6ca38551d818df3f78c6b60f90b41a93928f186c). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1183349537:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1183349537,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 0ab07763c4b9d13725e2e946886364e830ae6d6d into 4e1e5432242c0b1d3b315bf91fb4d7dd3b4cc925 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-1c57ee6a6a7b5ed3ebe82cb34d0f40c60722ac36). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1255864233:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1255864233,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 0cc7300d48c70207bae2cf885e3afd00549aeb8c into dea9a9dcc556003d6c0e90519fc1973df776cc26 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-34c811028aca24558777d78ce4448951cf208c8c). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1142350501:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1142350501,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 0f25036e31620e79ff765652ee299474a77e0cfd into a1155ed9696a98d4680992bf543b419b1d2925b0 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-7e4ee52059a674c7183a9dc5bfc77df8b3653ac2). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1185359130:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1185359130,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 1dde2ff9b9d60d5c988866e47ed918ec71cb6645 into 0fb78b951d33a0d4ccf69739e0fa97f57ee79b1e - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-c87abdfe59f00a74a10ee47b8256685219421d53). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1176025561:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1176025561,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 1e6cba884340c827430a50489f15abb13ff4ebab into 84171a53922501c4fc433abc2806d1822fa15e9c - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-cbec4d424cb96411b3efea7c0c743521fba74e60). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1252020558:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1252020558,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 1ee458515e89f364a21914e0b80fa4d801f5d051 into e1d4a59786dea09cddc23735a4526f9838a1bd8e - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-5249555f5d0e23964f0a912b9c1971c47e74bad4). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1196647392:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1196647392,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 21b8a9d0cf3e71d04f565cac2e231d71deb42f43 into f27c7bcbd3de0820f21729d6581574568095add1 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-cc920449224dda7a021fd64bea82310306ef2432). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1256056379:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1256056379,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 2201bf07c5afb714e8a37bd33f2b4d369e8b15d0 into cf2dea0780f99ebabaad56c6549de16f861f34d1 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-319d95f5ea51f303675cf9388494adb779aa0834). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1164062018:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1164062018,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 236a838ee9c71bb835877e9cf66f56dfd1709620 into 0fb78b951d33a0d4ccf69739e0fa97f57ee79b1e - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-9ee53b134d082bcfb176fd95ec8d4e4a0d18908c). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175996773:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175996773,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 2757afd228821af33f08ffb7b08960689b4d75dd into 7e58e5a3f59dca0b4a7e180643cd6f7215fa7ace - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-439efe2ad5b9cf4e4198be981cb99b60ba827b68). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1114209622:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1114209622,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 2907b190230381f9fb4a1d2c4be0ba14e6546b02 into 8e6f7236bc02d28cd5d767fc3d1462b1da211c64 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-18140221d2c10c266d0e7322f8dabe9c15dfb24e). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1134790050:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1134790050,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 3c4278877aab1add69cc4e4443c9a055e0d97630 into b890efd8e8b87d7cc1f5cc803d67aa9717fb4920 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-433e91d1d934a7850d71097c30966d9d6a1a5f38). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1178671610:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1178671610,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 3d9e47b0bedf418074a886bc495626368f2996b4 into 1679bc9525ded9876fabc42c9f5e5165a97b23c7 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-730add8f3f6934ba6450c22baffd6a9c3f51065e). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1137111530:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1137111530,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 416f1ab273ea97a28be68d58f1ea3a43309a59fb into 2130fb2ef097120b27bce92e1c8837153dc039ba - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-c9060e848a5cf57791f70796ba9728bafca32b71). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1243329272:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1243329272,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 4417a2cd34effdc6ea59797c2d86b6ef8ca8717a into 9114cacb2aaeb19bbad9009b624d27f2e6e0e62d - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-44ee86a553d4b54d27d767f30583bdd503408a21). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1135914477:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1135914477,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 45c0f48f3c3c631d291e0a7a32fd1ba292e79160 into 0496657ffe037b0c2aebf2449634bc7af19f8412 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-c681281095aef9ddf22067c1671870cd3d74a021). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1135179553:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1135179553,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 5164bdef5ca01cb2cec3f422d19de08415dbe0a8 into 7ed0fd11ad6d2c45bd916bb74c635ad031905890 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-c90f3a937f0926c6bb356042d3b585b7efc6d5e2). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1200309830:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1200309830,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 51f0808cd1bf90bcf426e87b3017463df672c5f9 into d00bd5cb306de12b064d88153f84892ad3108e24 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-e25f8e38f980d68b35406007ca118f832d4d56ff). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1163320367:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1163320367,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 56119361df619965632fc256108dc197c5eac4fc into 0fb78b951d33a0d4ccf69739e0fa97f57ee79b1e - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-a8dbe171023386f152bcd2c245c0e1f7fb475e71). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1176105979:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1176105979,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 56b7989c254113c23702493f58093e9737c3535c into 1922b4eb44e94cc8737863d8e420ebfdbcf5d481 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-eddca500b4a15274cbe9ec1384c0bc310a58abb7). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1180225642:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1180225642,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 5751b893022331c6232db48a9f34b9e68816f0c0 into 2a004822dcae19df3595c41246249ad58e21a928 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-69b9eaea4a03341648c8d5387bf07948b8f7bc24). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1086724874:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1086724874,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 69fd09240c1fe6edd876922aba5a480d8ff06f65 into 91a8064b2c93a51ec30c30d8099748082c8c591e - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-8325a34d0c7d5205c24beefb9f901f33bfd7a64f). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144975777:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144975777,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 6ebdc7a98666a254929b0c17c9e93e7888c42284 into 027ad1f921f4739f23b50ec34a015f253b59265a - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-ea589c9115bd3056f1fc6426aafbaf535950c4e4). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1180042325:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1180042325,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 82dbd2b2efddbdf8532240f78b90ff61798ee3f1 into a80015d5230036ef5e1fa29f90723914e8f9c080 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-9d1b90f0611e234234ec0d684e067aef0f9e1cc4). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1252446081:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1252446081,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 86d72d7ece122425aceb7434d724692086d6b7b7 into 01855594063a5832ff1e9a87bebb2fcdfed9122b - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-9a342f4b1c7e15ae1628a6d3273484da89b692a6). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143539635:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143539635,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 8e20719c827b49f991254816891d2c5e65d74bbe into a12f3b736a9c69e0d69e7f483e50e7cdf59d9fd2 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-2d796dc8a3236b7fbc341cc5ac15f6d1d4df2299). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1153736023:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153736023,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 95226c98a9b59bb4131336f5c18f5d9f8086d8a6 into 91a8064b2c93a51ec30c30d8099748082c8c591e - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-dcdcc36be88a3e2f3a3f7128617e56d9b7eaffc7). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145202640:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145202640,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging a09bd28f6a31560341393600f9f1b24027815531 into fa36d6d9dfdc636a9ad565d5c18adae04879d35d - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-defb493ae30eb56ab82329917d13fb77331a5dcc). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1251942957:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1251942957,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging a1d53138e3d5d3abb93e5c2b0dd998566d42300f into 660ef262c064fbb7eaedc560f0466b7d6eb24fd1 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-87753c2a66aff81ff501e8ae1161c705b59184bb). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1176327071:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1176327071,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging a252561168653e910bb5628191a26e74c502b817 into d40155c5c495e309eb89041d07d2ae08b298c34c - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-1a153127e9b9a2032a9aa0bb37a54132941ec0bf). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143318888:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143318888,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging a4fd2c10067a5d5dd4ae1d75349838f843d64943 into b223c3fb586d4c6a9a72cfecc96fbef73b6eec30 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-1724b0adf30e2db3f19352fbf4539b4ac73b7053). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1243920735:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1243920735,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging b82b11717ca1534b5ef7b4b249983de343cd08d3 into 5c2ee26a9dd0b63636747fa76da6cacfe8b0b320 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-d2fa9321e0620eda4b4c3072b790c6ee6550261d). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1141686054:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1141686054,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging b8540cefe726db1b2e424c60dc58c1c7925b3844 into 304a9abefac7484b9c359d5c5afdb76e8e25f98d - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-1daba1a97156e48061da6c08e7939877eeac1211). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1248368558:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1248368558,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging d3ee2334d04999118154320a0a0744c60e881ccf into 2f33ff0fa80e3d91790823a9e30bf8ebe28c634e - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-3141d327f7251913eb8bfbde9e0e85aa2cc1cd7f). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1177550958:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1177550958,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging e7a789fdac328d99d7cdb595b07e0d86a1595e5d into 3ee659694fc8e264591cba40a89d3e3bbbf12a00 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-1e4afcfe36a446768b570cb9b670d439c64360bd). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1245673060:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245673060,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging f4eed55018e380c5886af02c3fe22c200786d23d into 1b2afa8452567f1dc95334dca35e79cd52e51aec - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-b05a901645f906eccf540b3e987682650161df70). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1138864358:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1138864358,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging f6d4f910702bfee44d3fb7b06b76f5a06570c3ea into 1679bc9525ded9876fabc42c9f5e5165a97b23c7 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-ac84f99d182cacab44d07d89fa686cf685638b50). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1137051771:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1137051771,1,['Test'],['Testing']
Testability,"This pull request **introduces 73 alerts** and **fixes 33** when merging f7ffa920c073a3ca5def62dbb93e763920cf5cfe into 40620e494ecf609b029c07f0aa43dbc2635fd5bb - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-0ff418d8618e468d4813953b5e0606f852b27e24). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175092033:1038,Test,Testing,1038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175092033,1,['Test'],['Testing']
Testability,This pull request **introduces 9 alerts** and **fixes 1** when merging c0ad9b77d39b1795088e25fc261cd6f21ab5e268 into 0c0f3f73e7b28d91ca4ad6d84aba76ff5f70a33d - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-75cee0fbd0d72ba7abb706387cff5d3c443a34a1). **new alerts:**. * 5 for Useless assignment to local variable; * 4 for Useless comparison test. **fixed alerts:**. * 1 for Unreachable statement,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9638#issuecomment-1017588746:365,test,test,365,https://root.cern,https://github.com/root-project/root/pull/9638#issuecomment-1017588746,1,['test'],['test']
Testability,"This pull request addresses Pere's comments and adds some more changes like a simple test for VecCore functionality and better support for latest VecCore changes (from version 0.3.2 to 0.4.0). It should be ready for merging, but I'd like to see all tests pass first. I tested on my own machine with several combinations of `vc=ON/OFF`, `builtin_vc=ON/OFF` and `veccore=ON/OFF`, `builtin_veccore=ON/OFF`. It should all work properly. However, since external VecCore cannot find a builtin Vc, requesting `builtin_vc=ON` and `veccore=ON` will trigger `builtin_veccore=ON` automatically. Please feel free to to make more suggestions for extra changes if necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/497:85,test,test,85,https://root.cern,https://github.com/root-project/root/pull/497,3,['test'],"['test', 'tested', 'tests']"
Testability,"This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:; - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`.; Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`.; - Update `doc/specifications.md`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10635:548,test,tested,548,https://root.cern,https://github.com/root-project/root/pull/10635,1,['test'],['tested']
Testability,"This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/393:655,test,test,655,https://root.cern,https://github.com/root-project/root/pull/393,1,['test'],['test']
Testability,"This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:; - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type.; - Add `std::tuple` RField support.; ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`.; Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). ; **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list.; Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail.; This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below).; - Update `specifications.md` accordingly. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10652:575,test,test,575,https://root.cern,https://github.com/root-project/root/pull/10652,4,"['assert', 'test']","['assertion', 'test', 'tested']"
Testability,"This pull request adds a keybinding for Ctrl+Del to kill the next word. This keybinding is quite popular, thus desirable to have it in ROOT.; The change is equivalent to the GNU Readline keybinding:; ```bash; ""\e[3;5~"": kill-word; ```. This PR is part of a series to improve line editing at the prompt. See also: PRs #9753 and #10078. ## Changes or fixes:; - The `[3;5~` CSI was added in StreamReaderUnix.cpp. No additional changes required to StreamReaderWin.cpp due to the separation of `dwControlKeyState` and `wVirtualKeyCode`.; - Add Ctrl+Del key binding to `Editor::kCmdCutNextWord`. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10091:611,test,tested,611,https://root.cern,https://github.com/root-project/root/pull/10091,1,['test'],['tested']
Testability,"This pull request adds an intermediate buffering mode between ""normal ROOT IO"" and the prefetching system. When enabled, it will cache a remote file to the local disk (uses the same logic as prefetching to determine what is ""remote"") for as long as it is opened and automatically cleans up afterward. This is useful in cases where you want to hide the effects of network latency (for various use cases which work poorly with `TTreeCache`, such as when an unpredictable set of branches are used or non-sequential scans) but do not want to set aside a directory to use as a persistent cache or have a cache-unfriendly workflow. The approach has been ported from CMSSW (there, it is called `lazy-download`) where it has been in use for several years.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/146:182,log,logic,182,https://root.cern,https://github.com/root-project/root/pull/146,1,['log'],['logic']
Testability,"This pull request adds support for the LZ4 compression algorithm (https://code.google.com/p/lz4/). The code is BSD-licensed. The pull-request includes a source tarball (allowing a ""builtin_lz4"" option in CMake analogous to ""builtin_lzma""). I am unable to test this on Windows currently. The LZ4 algorithm focuses on decompression speed while sacrificing compression ratio. Compression level < 4 uses the ""LZ4 compression"" algorithm while compression level >= 4 uses ""LZ4HC"" (HC = high compression) variant. LZ4HC is comparable to zlib in speeds, but has approximately 20% larger file size. To evaluate, I use the Event executable in the test/ directory. I extend this to allow the compression algorithm be specified via CLI. Example invocation:. time ./Event 4000 6 99 1 1000 4; time ./Event 4000 4 99 0 1000 4. Here, the CLI arguments are:; - 1: Number of events (4000); - 2: Compression ratio (6); - 3: Split level (99); - 4: 1 for write, 0 for read.; - 5: Number of tracks per event (1000).; - 6: Compression algorithm (1 = zlib, 2 = lzma, 4 = lz4. 3 is the deprecated zlib-like algorithm). I extended MainEvent.cxx to include TTreePerfStats information, which gives us access to the compression-time-only rates. Performance results (testing on a 2.6GHz Intel Westmere E56xx-based VM) summary:. LZ4HC compression:; - File size: 231MB; - 14.7MB/s CPU time for writing. ZLIB level-6 compression:; - File size: 189MB; - 10.5MB/s CPU time for writing.; Summary: LZ4HC compression resulted in a file 20% larger. Compression time was 44% faster. LZMA level-6 compression:; - File size: 163MB; - .62MB/s CPU time for writing.; Summary: LZMA compression resulted in a file 13% smaller. Compression time was 16x slower than ZLIB level-6. LZ4 decompression:; - 233MB/s CPU time for decompression only.; - 189MB/s CPU time for reading. ZLIB decompression:; - 118MB/s CPU time for decompression only; - 104MB/s CPU time for reading.; Summary: LZ4 decompression was 97% faster, resulting in 81% faster reading f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/59:255,test,test,255,https://root.cern,https://github.com/root-project/root/pull/59,2,['test'],['test']
Testability,This pull request adds the Concat Operator in TMVA SOFIE. - [x] Add the ROperator_Concat ; - [x] Add functionality to parse Concat operator from ONNX files; - [ ] Add functionality to parse Concat opreator from Keras' `.h5` files; - [ ] Add functionality to parse Concat operator from PyTorch's `.pt` files; - [ ] Add tests for Concat operator; - [x] ONNX tests; - [ ] PyTorch Tests; - [ ] keras tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9311:318,test,tests,318,https://root.cern,https://github.com/root-project/root/pull/9311,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to; ```; unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase; At:; _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]; "" thrown in the test body.; ```. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12979:109,test,test,109,https://root.cern,https://github.com/root-project/root/pull/12979,3,['test'],"['test', 'tested']"
Testability,"This pull request adds the attribute `uint64_t iod_flags`, introduced in DAOS v2.0, to the definition of `daos_iod_t` in our mock implementation of libdaos for development. See: https://docs.daos.io/v2.0/doxygen/html/structdaos__iod__t.html. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11683:125,mock,mock,125,https://root.cern,https://github.com/root-project/root/pull/11683,2,"['mock', 'test']","['mock', 'tested']"
Testability,"This pull request applies a number of fixes after the merge or PR #5913 (see below). ## Changes or fixes:; - Fix issues with documentation generation on macOS. In particular: ; 1. Fix `mktemp` command lines to only use template `X`s at the end.; 2. Use `sysctl -n hw.ncpu` instead to get the number of available CPUs on Darwin.; 3. Move OS-dependent variable assignments to the `Makefile`; - Ensure `libs.C` is ACLiC'ed before `modifyClassWebpage.sh` runs. Specifically, `modifyClassWebpages.sh` might spawn many `modifyClassWebpage.sh` processes via `xargs -P`. In turn, `modifyClassWebpage.sh` depends on `libs.C` which is ACLiC'ed if to generate `libs_C.so` where required.; However, if `libs_C.so` does not exist, multiple processes might race to create it. Thus, ensure that the macro is ACLiC'ed before `modifyClassWebpage.sh` runs. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10930:860,test,tested,860,https://root.cern,https://github.com/root-project/root/pull/10930,1,['test'],['tested']
Testability,"This pull request applies some changes (see below) in the implementation of RRecordField in order to support `std::pair` and `std::tuple` fields (as follow-up PRs). ## Changes or fixes:; - Compute once the offset for each member in the `RRecordField` constructor and reuse this information in other member functions.; - Provide a constructor that takes the list of member offsets and corresponding C++ type. This is required for the implementation of `std::pair` and `std::tuple` fields. Make the private members protected.; - Given that `RRecordField` takes the ownership of the child fields passed in the `std::vector<std::unique_ptr<Detail::RFieldBase>> &itemFields`, provide also a constructor that takes a rvalue reference. ## Checklist:; - [X] tested changes locally. Follow-up PRs: support for `std::pair`; support for `std::tuple` fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10631:750,test,tested,750,https://root.cern,https://github.com/root-project/root/pull/10631,1,['test'],['tested']
Testability,"This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:; - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64.; - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian.; - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`.; For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers.; - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`.; - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:; - [X] tested changes locally; - [X] add unit tests; - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation.; - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10402:1299,test,tested,1299,https://root.cern,https://github.com/root-project/root/pull/10402,2,['test'],"['tested', 'tests']"
Testability,"This pull request extends `RPageSink` to allow for vector commit of sealed pages. The prototype of the new functions is as follows:; ```c++; virtual std::vector<RNTupleLocator> CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges);; void CommitSealedPageV(std::span<RPageStorage::RSealedPageGroup> ranges);; ```. These changes enable (parallel) vector writes in concrete backends, e.g. in DAOS. Derived classes that do not override the base implementation will see a sequence of calls to `CommitSealedPage()`. The first measurements of vector writes on DAOS based on this PR, indicate an improvement of _an order of magnitude_ in the write throughput. The refactor in this PR passes all the RPageSinkBuf tests. ## Changes or fixes:; - Add `CommitSealedPageV()` to the public interface of `RPageSink`. This function carries out a vector write of a number of sealed page ranges. Each range applies to a given columnId.; The default implementation of `CommitSealedPageVImpl()` sequentially calls `CommitSealedPageImpl()` for each page on each range, but derived classes can override it to provide an optimized implementation.; - Use `CommitSealedPageV()` in RPageSinkBuf. If a buffered column contains only sealed pages, commit the whole range; via `CommitSealedPageV()`.; - If all buffered columns consist solely of sealed pages, coalesce all pages to be committed in a single `CommitSealedPageV()` call that includes a sealed page range per column. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10719.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10775:722,test,tests,722,https://root.cern,https://github.com/root-project/root/pull/10775,2,['test'],"['tested', 'tests']"
Testability,"This pull request fixes a defect in the implementation of `RColumn::AppendV()`, which resulted in `FlushShadowWritePage()` not being called in certain circumstances. This in turn resulted in a [failed assertion](https://github.com/root-project/root/blob/master/tree/ntuple/v7/inc/ROOT/RColumn.hxx#L87) in the next call to `SwapWritePagesIfFull()`:; ```; Fatal: fWritePage[otherIdx].IsEmpty() violated at line 87 of `/home/jalopezg/CERN/repos/root/tree/ntuple/v7/inc/ROOT/RColumn.hxx'; ```. Given that `RPage::GrowUnchecked()` affects the number of elements returned by `RPage::GetNElements()`, the main write page should only be grown after the check for flushing the shadow page. ## Checklist:; - [X] tested changes locally; - [X] `ntuple_storage` test has been updated accordingly against this bug. This PR fixes #12742.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12743:201,assert,assertion,201,https://root.cern,https://github.com/root-project/root/pull/12743,3,"['assert', 'test']","['assertion', 'test', 'tested']"
Testability,"This pull request fixes a misuse of the `TVirtualCollectionProxy` iterator interface. Specifically the `Next()` and `DeleteTwoIterators()` functions take a pointer to the iterator itself (not a pointer-to-pointer). The misuse was most likely due to the lack of proper documentation on the `TVirtualCollectionProxy` class. The documentation for this class should be thus updated in a follow-up PR. The issue was originally introduced in https://github.com/root-project/root/pull/12380 and first noticed by @Nowakus on March 13, when trying to write a `xAOD::DataVector<T>` into RNTuple. This PR should fix the observed misbehavior. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12542:652,test,tested,652,https://root.cern,https://github.com/root-project/root/pull/12542,1,['test'],['tested']
Testability,"This pull request fixes a number of failures in cling tests. See below for the specific tests that are fixed by this PR. After this PR and https://github.com/root-project/root/pull/12853, the remaining tests that still fail are; ```; 1: Failed Tests (2):; 1: Cling :: CodeUnloading/AtExit.C; 1: Cling :: MultipleInterpreters/MultipleInterpreters.C; ```; , which seem to have a common underlying cause: child interpreters are unable to resolve symbols defined in the parent. @hahnjo, @vgvassilev, do you have time to take a look?; ; ## Changes or fixes:; - SourceCall/ErrorMacro.C: the failure here is due to `diag::warn_falloff_nonvoid_function` not being promoted from warning to error. This should always be done, regardless of the ignoring state in `FilteringDiagConsumer`.; The failure became visible after merging https://github.com/root-project/root/pull/12654, given that `IgnorePromptDiags`; now defaults to 0 in `makeDefaultCompilationOptions()`.; - CodeUnloading/Macros.C: clang diagnostic verification was unhappy with the previous state of affairs. Move affected `expected-(warning|note)` markers to `Macros.h`.; - DynamicLibraryManager/callable_lib_L_AB_order1.C: `--enable-new-dtags` is needed in some toolchains to emit the new ELF dynamic tags, i.e. RUNPATH.; Per ld(1) manual page: `By default, the new dynamic tags are not created.`; - DynamicLibraryManager/cached_realpath.C: fetching the value of `errno` only makes sense after a failed call to; `realpath()`, i.e. if the return value of the function is NULL. Fix that. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12855:54,test,tests,54,https://root.cern,https://github.com/root-project/root/pull/12855,5,"['Test', 'test']","['Tests', 'tested', 'tests']"
Testability,"This pull request fixes a number of failures in cling tests. See below for the specific tests that are fixed by this PR. This is a backport of PR #12855.; ; ## Changes or fixes:; - SourceCall/ErrorMacro.C: the failure here is due to `diag::warn_falloff_nonvoid_function` not being promoted from warning to error. This should always be done, regardless of the ignoring state in `FilteringDiagConsumer`.; The failure became visible after merging https://github.com/root-project/root/pull/12654, given that `IgnorePromptDiags`; now defaults to 0 in `makeDefaultCompilationOptions()`.; - CodeUnloading/Macros.C: clang diagnostic verification was unhappy with the previous state of affairs. Move affected `expected-(warning|note)` markers to `Macros.h`.; - DynamicLibraryManager/callable_lib_L_AB_order1.C: `--enable-new-dtags` is needed in some toolchains to emit the new ELF dynamic tags, i.e. RUNPATH.; Per ld(1) manual page: `By default, the new dynamic tags are not created.`; - DynamicLibraryManager/cached_realpath.C: fetching the value of `errno` only makes sense after a failed call to; `realpath()`, i.e. if the return value of the function is NULL. Fix that. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12856:54,test,tests,54,https://root.cern,https://github.com/root-project/root/pull/12856,3,['test'],"['tested', 'tests']"
Testability,This pull request fixes a remaining issue after merging #5913 and #10930 (see below). ## Changes or fixes:; - Remove the `.so` suffix and any trailing whitespace in the output generated by `libs.C`. This should fix the following errors found in the log:; ```; Error: file /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/html/libRMVA.so __coll__graph.svg not found.; ```; - Remove dead code in `libs.C`. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10943:249,log,log,249,https://root.cern,https://github.com/root-project/root/pull/10943,2,"['log', 'test']","['log', 'tested']"
Testability,"This pull request fixes an issue introduced accidentally in PR #12751. In particular, the `.exe` suffix is not expected in non-Windows builds. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes some failures seen in the nightly builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12785:164,test,tested,164,https://root.cern,https://github.com/root-project/root/pull/12785,1,['test'],['tested']
Testability,This pull request fixes failing tests for ROOT builds configured with `-Dimt=OFF`. Those tests incorrectly assumed that multi-threading support is just there after a call to `ROOT::EnableImplictMT()`. ## Checklist:; - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12637:32,test,tests,32,https://root.cern,https://github.com/root-project/root/pull/12637,3,['test'],"['tested', 'tests']"
Testability,"This pull request fixes the remaining failing cling tests. See below for the concrete changes. @vgvassilev After the changes proposed in this PR, _all_ the cling tests are passing. ## Changes or fixes:; - Restore symbol lookup in child interpreters: prior to the upgrade to LLVM13, child interpreters used to also lookup symbols; in their parent. This PR introduces a `DefinitionGenerator` that allows for symbol lookup across different `IncrementalJIT` instances, which restores the old behavior.; This change fixes the following tests: CodeUnloading/AtExit.C, MultipleInterpreters/MultipleInterpreters.C.; - `cling::DeclExtractor::EnforceInitOrder`: do not use `ActOnReturnStmt()`, given that the scope returned by `m_Sema->getCurScope()` might be == m_Sema->TUScope which obviously is not a function scope; use `BuildReturnStmt()` instead.; This fixes the following crash:; ```; 1: https://github.com/root-project/root/pull/3 0x0000556b6a50389e clang::Sema::ActOnReturnStmt(clang::SourceLocation, clang::Expr*, clang::Scope*) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0x225389e); 1: https://github.com/root-project/root/pull/4 0x0000556b69215c56 cling::DeclExtractor::EnforceInitOrder(llvm::SmallVector<clang::Stmt*>&) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0xf65c56); 1: https://github.com/root-project/root/pull/5 0x0000556b69216788 cling::DeclExtractor::ExtractDecl(clang::FunctionDecl*) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0xf66788); 1: https://github.com/root-project/root/pull/6 0x0000556b69216a75 cling::DeclExtractor::Transform(clang::Decl*) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0xf66a75); ```. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #12455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12900:52,test,tests,52,https://root.cern,https://github.com/root-project/root/pull/12900,4,['test'],"['tested', 'tests']"
Testability,"This pull request fixes the remaining failing cling tests. See below for the concrete changes. This PR is a backport of #12900. ## Changes or fixes:; - Restore symbol lookup in child interpreters: prior to the upgrade to LLVM13, child interpreters used to also lookup symbols; in their parent. This PR introduces a `DefinitionGenerator` that allows for symbol lookup across different `IncrementalJIT` instances, which restores the old behavior.; This change fixes the following tests: CodeUnloading/AtExit.C, MultipleInterpreters/MultipleInterpreters.C.; - `cling::DeclExtractor::EnforceInitOrder`: do not use `ActOnReturnStmt()`, given that the scope returned by `m_Sema->getCurScope()` might be == m_Sema->TUScope which obviously is not a function scope; use `BuildReturnStmt()` instead.; This fixes the following crash:; ```; 1: https://github.com/root-project/root/pull/3 0x0000556b6a50389e clang::Sema::ActOnReturnStmt(clang::SourceLocation, clang::Expr*, clang::Scope*) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0x225389e); 1: https://github.com/root-project/root/pull/4 0x0000556b69215c56 cling::DeclExtractor::EnforceInitOrder(llvm::SmallVector<clang::Stmt*>&) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0xf65c56); 1: https://github.com/root-project/root/pull/5 0x0000556b69216788 cling::DeclExtractor::ExtractDecl(clang::FunctionDecl*) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0xf66788); 1: https://github.com/root-project/root/pull/6 0x0000556b69216a75 cling::DeclExtractor::Transform(clang::Decl*) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0xf66a75); ```. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #12455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12902:52,test,tests,52,https://root.cern,https://github.com/root-project/root/pull/12902,3,['test'],"['tested', 'tests']"
Testability,"This pull request fixes the unloading of member functions of templated classes. Specifically, the body of member functions of a templated class only gets instantiated when the function is first used, e.g. in this example below, the body for the member function `T f(T x)` (where `T` is a typename template argument for the templated struct `Foo`) will not get instantiated until `f()` is first used.; ```; `-ClassTemplateDecl; |-TemplateTypeParmDecl referenced typename depth 0 index 0 T; |-CXXRecordDecl struct Foo definition; | |-DefinitionData; | `-CXXMethodDecl f 'T (T)'; | |-ParmVarDecl 0x55e5787cac70 referenced x 'T'; | `-CompoundStmt; | `-ReturnStmt; | `-DeclRefExpr 'T' lvalue ParmVar 0x55e5787cac70 'x' 'T'; `-ClassTemplateSpecializationDecl struct Foo definition; |-DefinitionData; |-TemplateArgument type 'int'; | `-BuiltinType 'int'; |-CXXMethodDecl f 'int (int)' <<<< Instantiation pending; | `-ParmVarDecl x 'int':'int'; |-CXXConstructorDecl implicit used constexpr Foo 'void () noexcept' inline default trivial; ```; Such functions should not be deleted from the AST, but returned to the 'pending instantiation' state. Also, any function template instantiation, even if coming from an external AST source, needs some handling in order for it to be re-emitted the next time. ## Changes or fixes:; - Replace `StaticVarCollector` by simpler code. Static local variables always appear in the enclosing `DeclContext`; - Apply the patch described above. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] Passes cling test suite. This PR fixes #10049, #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848) and [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084) and (hopefully also [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13565:1486,test,tested,1486,https://root.cern,https://github.com/root-project/root/pull/13565,2,['test'],"['test', 'tested']"
Testability,"This pull request fixes value printing of an expression of type `AutoType`, which ended up in calling the general fallback `printValue(const void *)`.; To call the appropriate overload, the deduced type should be used instead. ## Changes or fixes:; - Value printing of expressions of type `AutoType` use the deduced type instead.; - Update CREDITS.txt file. ## Checklist:; - [X] tested changes locally. This PR fixes [ROOT-9687](https://sft.its.cern.ch/jira/browse/ROOT-9687).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9949:379,test,tested,379,https://root.cern,https://github.com/root-project/root/pull/9949,1,['test'],['tested']
Testability,"This pull request generalizes the `RDaos` backend to support multiple attribute keys per read-write operation, grouping requested blobs by their corresponding <object id, distribution key> pairs - defined as a struct `RDaosContainer::ROidDkeyPair(daos_obj_id_t, DistributionKey_t)`. . ## Changes or fixes:. - `RDaosObject::FetchUpdateArgs`, which prepares the arguments for requests to `daos_obj_fetch` or `daos_obj_update`. Now supports multiple attribute keys, I/O operation descriptors and I/O vectors, to send in one RW call to distributed storage.; - `RDaosContainer::RWOperation`, which interfaces between `RPageStorageDaos` and `RDaosObject`, supports multiple attribute keys and I/O vectors. ; - `RPageSourceDaos::LoadClusters` collects requested pages in an `unordered_map<ROidDkeyPair, RWOperation, ROidDkeyPair::Hash>` by their corresponding object IDs and distribution keys (currently, OID: unique page number and Dkey: const, so this PR should have no real effect on performance or results); - `RDaosContainer::VectorReadWrite` and its wrappers `WriteV`, `ReadV` now take an `unordered_map<ROidDkeyPair. RWOperation, ROidDkeyPair::Hash>` instead of `vector<RWOperation>`. This should allow for multiple requests spread throughout the container to be sent out in once call, each of which fetching or updating several blobs at once.; - `RDaosContainer::VectorReadWrite` implementation has been moved to `RDaos.cxx` file, de-templating the function argument (which is always expected to be either a `RDaosObject::Fetch` or a `::Update` non-static method). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10860:1587,test,tested,1587,https://root.cern,https://github.com/root-project/root/pull/10860,1,['test'],['tested']
Testability,"This pull request implements the Ctrl+L keybinding (clear terminal screen) in ROOT's textinput. ## Changes or fixes:; - Adds the `Display::Clear()` member function, which clears the visible part of the screen on a TTY and moves the cursor to the home position. For Windows, this requires to temporarily enable processing of VT control sequences.; - Provide implementation for the `kCmdClearScreen` editor command. ## Checklist:; - [X] tested changes locally. This PR fixes #10057.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10078:435,test,tested,435,https://root.cern,https://github.com/root-project/root/pull/10078,1,['test'],['tested']
Testability,"This pull request improves the definition of the `Rbswap_{16,32,64}()` macros in `Byteswap.h` (see changes below). ## Changes or fixes:; - Define `R__bswap_64(x)` even if the compiler has no intrinsic for it. In that case, provide a fallback (unoptimized) implementation.; - In MSVC, implement `R__bswap_{16,32,64}(x)` in terms of the compiler intrinsic `_byteswap_xxx()`. ## Checklist:; - [X] tested changes locally. Follow-up PR: RNTuple read/write support in big-endian machines.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10396:394,test,tested,394,https://root.cern,https://github.com/root-project/root/pull/10396,1,['test'],['tested']
Testability,"This pull request improves the support for storage of collections that use `TVirtualCollectionProxy`, which was initially landed in #11525. However, `TVirtualCollectionProxy` allows for traversing a collection using iterators, which should be faster than using `TVirtualCollectionProxy::At()`. Also, this interface avoids (where possible) an additional copy during element insertion. ## Changes or fixes:; - Switches from using `TVirtualCollectionProxy::{Size,At}()` to the use of iterators. After merging this PR, an implementation for the following functions is required instead: `TVirtualCollectionProxy::GetFunctionCreateIterators()`, `GetFunctionNext()`, and `GetFunctionDeleteTwoIterators`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11671.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12380:718,test,tested,718,https://root.cern,https://github.com/root-project/root/pull/12380,1,['test'],['tested']
Testability,"This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details).; The implementation provided here also fixes issue #11732.; ; ## Changes or fixes:; - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays.; - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. ; - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`; - Add array unit tests. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11756:1183,test,tests,1183,https://root.cern,https://github.com/root-project/root/pull/11756,2,['test'],"['tested', 'tests']"
Testability,"This pull request introduces ntuple management at the DAOS container level, extending support for more than one ntuple to populate a container. ## Changes or fixes:; - Support for up to 2\^32 - 1 ntuples in a DAOS container, by assigning an index to a previously-unused portion of the DAOS Object ID address space. The index thus induces a subspace dedicated for all objects belonging to a given ntuple. The zeroth space (index `0`) is reserved for any container-wide metadata objects that may need to be stored in the future.; - `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` is a structure that concentrates the functionality for locating and retrieving stored metadata from an ntuple by its name.; - The structure hashes the name into a well-distributed 32-bit index. Collisions are expressly forbidden to simplify implementation; a different ntuple name must be provided to the sink upon creation if an ntuple stored in the container with another name happens to have the same hash (index).; - The sink (in `RPageSinkDaos` ctor) uses the locator to assign an index for a new ntuple, which may fail if the name's resulting hash collides with some other ntuple present unless the name matches. Overwriting (""recreating"") an existing ntuple is allowed in this context.; - The source (in `RPageSourceDaos::AttachImpl()`) locates the ntuple by the name to validate that it is indeed present in storage (otherwise, an exception is thrown). The objects that are read for this validation are reused as part of the ntuple metadata deserialization procedure when attaching. ; - Unit test coverage is provided for the following cases: write and read from different ntuples in a container; and attempt to open an ntuple that was not stored there. ## Checklist:. - [x] tested changes locally + cluster on single client with libdaos 2.2.0; - [x] updated the docs (if necessary). This PR fixes #10958",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11480:1588,test,test,1588,https://root.cern,https://github.com/root-project/root/pull/11480,2,['test'],"['test', 'tested']"
Testability,"This pull request is a backport of PR #13534 (a NFC; makes the code more readable) and PR #13565 (actual fix for unloading member functions of templated classes).; The aforementioned PRs have been reviewed separately. ## Changes or fixes:; For the actual list of changes, see; - https://github.com/root-project/root/pull/13534; - https://github.com/root-project/root/pull/13565. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] Passes cling test suite . This PR fixes #10049, #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848) and [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084) and (hopefully also [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13618:400,test,tested,400,https://root.cern,https://github.com/root-project/root/pull/13618,2,['test'],"['test', 'tested']"
Testability,"This pull request is a follow-up from PR #12824. This cannot be in the base class destructor (`~RPageStorage`), given non-static members have been destroyed by the time the base class destructor is invoked. Second try at fixing the ntuple_extended:`RNTuple.SmallClusters` test. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12903:272,test,test,272,https://root.cern,https://github.com/root-project/root/pull/12903,2,['test'],"['test', 'tested']"
Testability,"This pull request is a follow-up of #13197, improving the implementation of the internal class `RCollectionClassField::RCollectionIterableOnce`. ## Changes or fixes:; - Allow for faster iteration of elements in a collection whose elements are guaranteed to be contiguous in memory (e.g. a vector), i.e. the address of each element is known given the base pointer. For such cases, a non-zero value for the `stride` argument can be provided, thus avoiding an indirect call on each `operator++` call.; - Fix and clarify the use of read/write iterators on a proxied collection. The meaning of the `read` argument in many; TVirtualCollectionProxy functions is ""read from disk"", i.e. write in memory. This should improve the situation for the PR introducing support for `std::set<T>` fields (#12948). ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13235:816,test,tested,816,https://root.cern,https://github.com/root-project/root/pull/13235,1,['test'],['tested']
Testability,"This pull request is now quite old. It contains various fixes all related to the runnng to the test suite. Some of the changes originally proposed here were cherry picked and merged, while others remain unresolved. New test related problems were added over time, and since the pull request is so old it has been necessary to merge the master branch in order to resolve merge conflicts several times. All this makes it hard to review the proposed changes. For this reason I have split the proposed changes in this pull request into several new ones, each of which addresses one singe issue. This will hopefully make it easier to review. The new pull requests replacing this one are: #400, #401, #402, #403, #404 and #405. I now close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/155#issuecomment-284987372:95,test,test,95,https://root.cern,https://github.com/root-project/root/pull/155#issuecomment-284987372,2,['test'],['test']
Testability,"This pull request is the result of work done by David Clark as a summer intern at Argonne:; To prepare for multi-threaded workflows, a preloading and retaining clusters feature is introduced. This change will prevent additional reads from occurring when reading events out of sequence.; ; By setting the `MaxVirtualSize` of the tree to a negative value, entire clusters will be loaded into memory and previous clusters will be retained - the absolute value of `MaxVirtualSize` indicates how many additional clusters will be kept in memory.; ; If `TTree MaxVirtualSize` is set to a negative value, `GetEntry()` will load the entire cluster into memory, not just the first basket. `GetBasket()` is modified to call a new function `GetFreshCluster()` if `MaxVirtualSize` is negative. This function is responsible for returning a new basket and clearing out clusters from memory. Because clusters can have varying numbers of baskets, `GetFreshCluster()` reuses the first basket and clear the rest of the baskets. Reusing all baskets may be more efficient, but adds significant complexity and would not affect the typical case where each cluster only contains a single basket (all the baskets will be reused here).; ; To test the performance of the change, I read 1000 entries (about 1 GB) from a tree of randomly generated data consisting of 2000 branches. Every read had a 2.5% chance of reading 10 entries back or a 2.5% chance of reading 10 entries forward from the current entry. - Without the change enables there were 1.5 GB read in 31102 read calls. ; - With MaxVirtualSize set to -1, there were 1.1 GB read in 90 read calls.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/796:1216,test,test,1216,https://root.cern,https://github.com/root-project/root/pull/796,1,['test'],['test']
Testability,"This pull request makes `UnsealPage()` a no-op for the page zero. To this end, the prototype of `RPageSource::UnsealPage()` had to be changed to return an `RPage`, per previous conversation. The buffer for the returned page is usually allocated using the `RPageAllocatorHeap`, and thus `RPageAllocatorHeap::DeletePage()` should be called to delete the returned object. Note that storage backends may still provide their own page unsealing code, e.g. for custom memory allocation. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #12958.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13208:501,test,tested,501,https://root.cern,https://github.com/root-project/root/pull/13208,1,['test'],['tested']
Testability,"This pull request moves helper functions to an anonymous namespace at the beginning of the TU. **There are no functional changes in this PR**; instead it makes the code more readable. The follow-up PR, which is the important thing, fixes a number of issues in the handling of instantiation of member functions of templated classes, which should fix https://github.com/root-project/root/issues/10049 and all the issues mentioned there :rocket:. ## Changes or fixes:; - Move helper functions to anonymous namespace at the beginning of the TU; - Fix unmatched `#pragma clang diagnostic push`; - Fix wrong indentation in some parts of the file. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13534:662,test,tested,662,https://root.cern,https://github.com/root-project/root/pull/13534,1,['test'],['tested']
Testability,"This pull request provides a page allocator that caches previous allocations up to a certain limit. The cache is thread-local and defaults to 16 pages per thread (~1MiB per thread for default-sized pages). This PR is largely based on the concepts in #8634. Reuse of memory allocations in `RPageAllocatorCache` not only reduces calls to the global allocator but also heap fragmentation. The global allocator is thread-safe albeit locked; thus, to also reduce contention, the cache in `RPageAllocatorCache` is thread-local.; Given the small size of the (per-thread) cache, the internal structure is a simple `std::deque`. Anything more complex is not justified at the moment of this writing. . **NOTE:** Performance evaluation (specially for the multi-threaded case) should be inserted here tomorrow. ## Changes or fixes:; - Add `RPageAllocatorCache`: this templated allocator returns pages that have at least the required capacity. `DeletePage()` does not immediately deallocate memory; instead, pages are returned to a thread-local cache, dropping the smallest allocated buffer if the cache is full. If a previous page cannot be recycled, the underlying allocator `AllocT` (`RPageAllocatorHeap` by default) is used to allocate memory.; - Change the signature of `RPageSource::UnsealPage()`: `SealPage()`, the counterpart of `UnsealPage()` takes an RPage and returns an RSealedPage. Make the interface of `UnsealPage()` symmetric and return an RPage.; - Make `UnsealPage()` use `RPageAllocatorCache` by default.; - Remove stray `RPageAllocator{File,Daos}` classes. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR supersedes #8634.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12279:1585,test,tested,1585,https://root.cern,https://github.com/root-project/root/pull/12279,1,['test'],['tested']
Testability,"This pull request removes deprecated RDataFrame functions marked for removal in ROOT v6.30. These changes fix the warnings reported by the CI on pull requests targeting `master`, e.g. ; ```; .../build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes]; .../build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attribute]; ```. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). Sibling PR in roottest: https://github.com/root-project/roottest/pull/931",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11994:455,test,tested,455,https://root.cern,https://github.com/root-project/root/pull/11994,1,['test'],['tested']
Testability,This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```; In file included from /path/to/src/RPageStorageDaos.cxx:29:; /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:; /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]; 120 | auto seed = static_cast<uint32_t>(h >> 32);; ```. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12473:877,test,tested,877,https://root.cern,https://github.com/root-project/root/pull/12473,1,['test'],['tested']
Testability,This pull request replaces old uses of `std::runtime_error` by `RException`. ## Checklist:; - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10606:98,test,tested,98,https://root.cern,https://github.com/root-project/root/pull/10606,1,['test'],['tested']
Testability,"This pull request replaces the implementation of `InputValidator::validate()` by simpler, more maintainable code that also fixes JIRA issue [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202). The previous implementation was unable to properly handle line continuation after ',' or '\\'. Specifically, it skipped over non-punctuation tokens, entering continuation mode even if ',' or '\' were not the last tokens in the input, e.g.; ```; int a, b; ```; or; ```; int a \ b; ```; caused cling to request more input, where it shouldn't. ## Changes or fixes:; - MetaLexer:; - Return `/*` and `*/` as independent tokens.; - Added `ReadToEndOfLine()` function (consume input until '\r', '\n', or EOF).; - Added `MetaLexer::RAII` that saves the current lexing position and restores it on destruction.; - Remove unused `LexPunctuatorAndAdvance()`.; - Rewrite of `InputValidator::validate()`. ## Checklist:; - [X] tested changes locally. Fixes [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8771:912,test,tested,912,https://root.cern,https://github.com/root-project/root/pull/8771,1,['test'],['tested']
Testability,This pull request simplifies the implementation of `RPageSourceDaos::LoadClusters()` as a prior step to handling the population of the page zero. A follow-up PR factors out common code for handling `kTypePageZero` locators in storage backends + enables their population in the DAOS backend. ## Checklist:; - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13381:312,test,tested,312,https://root.cern,https://github.com/root-project/root/pull/13381,1,['test'],['tested']
Testability,"This pull request slighly improves RClusterPool to reduce contention (due to `fLockXxxQueue` being held) in I/O and unzip; threads. To this end, each thread keeps its local buffer of elements to be processed. On wakeup, the local copy is swapped with `fXxxQueue`, which not only reduces contention but also reduces the overall number of allocations, as the internal storage of both copies is reused. The local copy should be cleared before the `std::swap()` in the next iteration. Also, the unzip thread is just notified once after all the elements are pushed into the queue. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12044:597,test,tested,597,https://root.cern,https://github.com/root-project/root/pull/12044,1,['test'],['tested']
Testability,"This pull request updates the release notes (sections ""Interpreter"", ""RNTuple"", and ""Build, Configuration, and Testing Infrastructure"") for the upcoming v6.28 release. ## Checklist:; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11871:111,Test,Testing,111,https://root.cern,https://github.com/root-project/root/pull/11871,1,['Test'],['Testing']
Testability,"This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets.; 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them); 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12459:224,test,test,224,https://root.cern,https://github.com/root-project/root/pull/12459,2,['test'],"['test', 'test-']"
Testability,This pull-request changes RField's `GetNormalizedType()` in order to discard cv-qualifiers. ## Changes or fixes:; - RField does not care about cv-qualifiers. Use `TClassEdit::CleanType()` to discard them in `GetNormalizedType()`. Removed the now redundant `Trim()` function.; - Improve `ntuple_types` test to cover the case described in issue #9140. ## Checklist:; - [X] tested changes locally. This PR fixes #9140.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9158:301,test,test,301,https://root.cern,https://github.com/root-project/root/pull/9158,2,['test'],"['test', 'tested']"
Testability,"This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:; - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag.; - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`.; - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:; - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9695:895,test,tested,895,https://root.cern,https://github.com/root-project/root/pull/9695,1,['test'],['tested']
Testability,"This pull-request enables fast word movement in the ROOT prompt à la Xterm (by using Ctrl+Left and Ctrl+Right). Most users coming from a GUI (GTK+, Win32, etc.) will find this convenient, but also Archlinux users, given that the default `inputrc` file for GNU Readline provides these bindings (see https://wiki.archlinux.org/title/Readline#Fast_word_movement). EDIT: it seems that `/etc/inputrc` in Fedora also provides this binding by default. :-). ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9753:471,test,tested,471,https://root.cern,https://github.com/root-project/root/pull/9753,1,['test'],['tested']
Testability,"This pull-request fixes `RNTupleWriter::Recreate()` in DAOS 1.2, where the old ntuple was not overwritten (see issue #9032). ## Changes or fixes:; - `DAOS_COND_DKEY_INSERT` was inappropriately used in `daos_obj_update()` calls, which causes `RNTupleWriter::Recreate()` to not overwrite old data. This has been fixed. - Additionally, `DAOS_COND_{D,A}KEY_FETCH` has been added to flags in `daos_obj_fetch()` call (fail if dkey/akey does not exist). ## Checklist:; - [X] tested changes locally. This PR fixes #9032.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9033:468,test,tested,468,https://root.cern,https://github.com/root-project/root/pull/9033,1,['test'],['tested']
Testability,"This pull-request fixes a couple of issues related to `roottest` branch sync'ing. See issue #8783 for more information. ## Changes or fixes:; - Checkout the correct `roottest` head/tag if root is at `latest-stable`. If the current checked out branch is `latest-stable`, resolve it to the latest merged head/tag (i.e. second parent of latest-stable), and use that to clone `roottest`. These two commands illustrate the proposed behavior:; ```bash; $ git for-each-ref --points-at=latest-stable^2 --format=%(refname:short); v6-24-06; $ git clone -b v6-24-06 https://github.com/root-project/roottest.git; ```. - If the checked out ref in `root` is a tag (e.g. as a result of `$ git checkout v6-24-06`), `roottest` is not cloned at the expected revision. The previous implementation relied on `git rev-parse --abbrev-ref HEAD` to get the name of the checked out branch. While this works for branch heads, it fails for tags, i.e.; ```bash; $ git checkout v6-24-06; HEAD is now at 3b796f86a3 ""Update ROOT version files to v6.24/06.""; $ git rev-parse --abbrev-ref HEAD; HEAD; ```; The proposed solution in this case is to use `git for-each-ref` (or alternatively `git describe`), i.e.; ```bash; $ git for-each-ref --points-at=HEAD --format='%(refname:short)'; v6-24-06; ```. ## Checklist:; - [X] tested changes locally. This PR fixes #8783.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9025:1288,test,tested,1288,https://root.cern,https://github.com/root-project/root/pull/9025,1,['test'],['tested']
Testability,"This pull-request fixes a typo in `CustomStructLinkDef.h` that generated a warning during build, i.e.; ```; Warning: Unused class rule: PackedContainer; ```. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9054:179,test,tested,179,https://root.cern,https://github.com/root-project/root/pull/9054,1,['test'],['tested']
Testability,This pull-request is a backport of PR #9781; see details there. A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Checklist:; - [X] tested changes locally. This PR fixes ROOT-6095.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9789:212,test,tested,212,https://root.cern,https://github.com/root-project/root/pull/9789,1,['test'],['tested']
Testability,This pull-request makes sure that the enumerators in a (anonymous) scopeless `enum` are made visible in the enclosing scope.; A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Changes or fixes:; - Do not skip the `InnerDC->makeDeclVisibleInContext()` call for enumerators of anonymous scopeless `enum`s. . ## Checklist:; - [X] tested changes locally. This PR fixes [ROOT-6095](https://sft.its.cern.ch/jira/browse/ROOT-6095).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9781:407,test,tested,407,https://root.cern,https://github.com/root-project/root/pull/9781,1,['test'],['tested']
Testability,This pull-request modifies the implementation of RField `GetNormalizedType()` to resolve typedefs via `TClassEdit::ResolveTypedef()`. ## Changes or fixes:; - GetNormalizedType: use `TClassEdit::ResolveTypedef()` to resolve type aliases.; - GetNormalizedType: move to a type translation map. ## Checklist:; - [x] tested changes locally. This PR fixes #9202.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9351:312,test,tested,312,https://root.cern,https://github.com/root-project/root/pull/9351,1,['test'],['tested']
Testability,"This pull-request suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc (see below). A TClingCallFunc wrapper function might look as the excerpt below, where the function denoted by `func` may have been annotated as `[[nodiscard]]`. Note that if `ret == nullptr` the result of the call is unused.; ```c++; extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret) {; if (ret) {; new (ret) (return_type) ((class_name*)obj)->func(args...);; }; else {; ((class_name*)obj)->func(args...);; }; }; ```. In turn, this triggers warnings when used by cppyy/PyROOT, e.g.; ```python; >>> import ROOT; >>> v = ROOT.std.vector(int)(); >>> v.empty(); input_line_34:10:7: warning; ignoring return value of function declared with 'nodiscard' attribute; [-Wunused-result]; ((const vector<int>*)obj)->empty();; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; True; >>>; ```. ## Changes or fixes:; - Given the above situation, this commit supresses `-Wunused-result` diagnostics only for TClingCallFunc wrapper functions. ## Checklist:; - [X] tested changes locally. This PR fixes #8622. Sibling PR in roottest: https://github.com/root-project/roottest/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9244:1058,test,tested,1058,https://root.cern,https://github.com/root-project/root/pull/9244,1,['test'],['tested']
Testability,"This recent roottest failure looks related to this issue https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/13090/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/ . (it's a test that was never run before, I am resurrecting it, and that's why the failure was triggered only now)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7541#issuecomment-1724978817:140,test,testReport,140,https://root.cern,https://github.com/root-project/root/issues/7541#issuecomment-1724978817,2,['test'],"['test', 'testReport']"
Testability,"This reduces the time to run Hesse in the ATLAS Higgs benchmark from; 123 s to 92 seconds. Given that some models take hours for this, this is a significant; improvement for the user experience. Further improvement is possible by analyzing the computation graph a bit; more to find more independent parameters (e.g., the different gammas for; stat uncertainties from different bins).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16394:54,benchmark,benchmark,54,https://root.cern,https://github.com/root-project/root/pull/16394,1,['benchmark'],['benchmark']
Testability,This repairs crash seem in [testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139900/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/) on the v6.24 branches and a few additional issues seen during testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10230:28,test,testProxiesAndCategories,28,https://root.cern,https://github.com/root-project/root/pull/10230,4,['test'],"['test', 'testProxiesAndCategories', 'testReport', 'testing']"
Testability,"This replaces the `find_package()` macro to be a no-op for packages in the `builtins` list. A new `builtins` directory has been created to hold sources for external packages. Currently only zlib has been moved to this new scheme for testing, but over time all builtins should be moved. Further discussions are needed before merging, in order to make this more automated. The idea is that the build system will only have `find_package(Foo)` or `find_package(Foo REQUIRED)`, etc, and enabling the builtin or not should then happen automatically from within the replaced `find_package()` macro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1571:233,test,testing,233,https://root.cern,https://github.com/root-project/root/pull/1571,1,['test'],['testing']
Testability,"This requires some changes to the read path of `RColumn`, first to deduplicate the code and then avoid recursive `RColumn::ReadV` which makes the difference on my system between being able to limit test a single `std::vector` element of size 200k.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14390:198,test,test,198,https://root.cern,https://github.com/root-project/root/pull/14390,1,['test'],['test']
Testability,"This resolved https://epsft-jenkins.cern.ch/job/root-incremental-master/BUILDTYPE=Debug,COMPILER=native,LABEL=mac1012/5509/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_dataframe_snapshot/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1401:123,test,testReport,123,https://root.cern,https://github.com/root-project/root/pull/1401,2,['test'],"['test', 'testReport']"
Testability,This resolves ROOT-9374.; To be merged if said tests pass.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2066:47,test,tests,47,https://root.cern,https://github.com/root-project/root/pull/2066,1,['test'],['tests']
Testability,This restores the old computation before commit f65064583d and instead solves the problem by allowing a small numerical difference from 0. Fixes the test `testPolynomialRoots` on `mac14arm` where floating point operations are fused differently from other platforms.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14291:149,test,test,149,https://root.cern,https://github.com/root-project/root/pull/14291,2,['test'],"['test', 'testPolynomialRoots']"
Testability,This returns the opposite condition (false) from the same code snippet; in ASTContext (true) https://github.com/root-project/root/blob/master/interpreter/llvm/src/tools/clang/lib/AST/ASTContext.cpp#L9091. The idea is to make this as a guard before calling; ASTContext::DeclMustBeEmitted. Or we can also delete ASTContext code.; Testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852:328,Test,Testing,328,https://root.cern,https://github.com/root-project/root/pull/2852,1,['Test'],['Testing']
Testability,This revert https://github.com/vgvassilev/clang/commit/d5f1068de9. I have tested it in the cling and it breaks no new tests so I assume it; should be a NFC patch and we should remove it as it makes upstream; test suite failed.; Signed-off-by: Jun Zhang <jun@junz.org>. Let's test it in the ROOT repo.; CC @vgvassilev @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10830:74,test,tested,74,https://root.cern,https://github.com/root-project/root/pull/10830,4,['test'],"['test', 'tested', 'tests']"
Testability,"This revert is in place because python scripts now hang whenever the ROOT module is imported on macos 12, 13 and 14. This reverts commit 06b86c3a3408fec00eaa615790a9298bb9b7eb41. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13754:244,test,tested,244,https://root.cern,https://github.com/root-project/root/pull/13754,1,['test'],['tested']
Testability,"This reverts ae9f8ae62553f9150fdee1f8739be6996d539694. While the patch makes sense to me, it breaks a lot of iminuit's tests. I cannot say why, but the results are very far off in some cases. I can provide a log of the failing tests as proof if needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7085:119,test,tests,119,https://root.cern,https://github.com/root-project/root/pull/7085,3,"['log', 'test']","['log', 'tests']"
Testability,This reverts commit 0363aed.; Use llvm-upstream commit instead!# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12831:128,test,tested,128,https://root.cern,https://github.com/root-project/root/pull/12831,1,['test'],['tested']
Testability,This reverts commit 180cd90afe663f2e04017d03bc63111d124010c6.; It breaks lookup of functions with 'using ParentClass::Func'; in combination with modules which reuse the hidden flag for; module purposes. See https://reviews.llvm.org/D37180 for a clang test case that; tests for regressions like this in the future.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1034:251,test,test,251,https://root.cern,https://github.com/root-project/root/pull/1034,2,['test'],"['test', 'tests']"
Testability,"This reverts commit 5298b418eec4129351888f41cb7c3bfc90161e22. This commit was mistakenly committed. PR was opened in #1730, but it was; closed and moved to #1761. I didn't notice this and created another PR; in #1980. This change was causing 100+ failures in runtime cxxmodules nightlies.; (Eg. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29183/testReport/junit/projectroot/runtutorials/tutorial_fit_FittingDemo/); We want to have **proper** PrebuildModulesPaths which information were; extracted from LD_LIBRARY_PATH and DYLD_LIBRARY_PATH, not a random ""."". Because of this commit, we were trying to autoload libraries generated; by roottest on-demand (for example ""./h1analysisTreeReader_C.so"") This; is not an intentional behavior, these autogenerated libraries are; already loaded by roottest and what we want to do is to load **proper**; libraries like libHist.so instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2160:359,test,testReport,359,https://root.cern,https://github.com/root-project/root/pull/2160,1,['test'],['testReport']
Testability,This reverts commit 6657223efbc8d356fe3103c7010922dded6791a2.; It caused [failures](http://cdash.cern.ch/testDetails.php?test=40653603&build=483771); in gtest-tree-treeplayer-test-dataframe-snapshot (see discussion at #1800 ).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1813:105,test,testDetails,105,https://root.cern,https://github.com/root-project/root/pull/1813,3,['test'],"['test', 'test-dataframe-snapshot', 'testDetails']"
Testability,This reverts commit 8deb57c04a5ceea96533d095092fcd4f71d1df94 and fixes the Cling test `CodeUnloading/Macros.C` that was previously failing with complaints that the unloaded and then re-included `Macros.h` header had no lines 18 and 19.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12454:81,test,test,81,https://root.cern,https://github.com/root-project/root/pull/12454,1,['test'],['test']
Testability,This reverts commit 8e355c2c565af555f75209ea0f1c2ce255f85cc6 from #10301. /cc @ellert @bellenot . # This Pull request:. ## Changes or fixes:. Sets `builtin_gtest` to `OFF` by default. It is already the case that `builtin_gtest` will be enabled automatically if `GTest` is not found. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12149:304,test,tested,304,https://root.cern,https://github.com/root-project/root/pull/12149,1,['test'],['tested']
Testability,"This reverts commit baf092324e6e2a9301daff36a780cd064b232c2d. We can either merge this as-is if the tests pass, or if they don't I'll close this PR without merging and open a GitHub issue about fixing these tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15596:100,test,tests,100,https://root.cern,https://github.com/root-project/root/pull/15596,2,['test'],['tests']
Testability,This reverts commit d6b623fff5a6d47ae66ec6db09dad26e987deb4e to no longer restrict numba versions to <0.6 which also unlocks support for numpy 2.0. The corresponding PR in rootest (https://github.com/root-project/roottest/pull/1162) updates the error style in the numba test to be backwards compatible. The numpy version is temporarily locked to below 2.0 to prevent both upgrades at the same time. - [X] tested changes locally. Fixes https://github.com/root-project/root/issues/16201,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16209:270,test,test,270,https://root.cern,https://github.com/root-project/root/pull/16209,2,['test'],"['test', 'tested']"
Testability,"This reverts commit e5299b1f790f1450c1545659f4cc869de7ebef70.; We still have to copy headers to the binary directory, so this is; not necessary. Testing before merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1455:145,Test,Testing,145,https://root.cern,https://github.com/root-project/root/pull/1455,1,['Test'],['Testing']
Testability,"This reverts commit eb52895d22aaad0a88d47b8e7bb18c7f47ff35be. As discussed, we should try to make clang parse input containing solely a function-style cast (e.g. `bool(i)`) as an expression instead of a declaration. In the interim, this patch is reverted to silence unwanted warnings in third-party code.; The PR https://github.com/root-project/root/pull/9695 will also be closed. ## Checklist:; - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064) and reopens issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9706:402,test,tested,402,https://root.cern,https://github.com/root-project/root/pull/9706,1,['test'],['tested']
Testability,"This reverts commit f84668d78f3911ad8a67b4ba03145cd5845f14fb.; It leads to test failures on centos7, while all other systems are ok.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3263:75,test,test,75,https://root.cern,https://github.com/root-project/root/pull/3263,1,['test'],['test']
Testability,"This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but; when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c; * Modules/explicit-build-missing-files.cpp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10633:184,test,tests,184,https://root.cern,https://github.com/root-project/root/pull/10633,1,['test'],['tests']
Testability,This seems reasonable to me. Is there any chance on adding a test in `interpreter/cling/test`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14968#issuecomment-1998332906:61,test,test,61,https://root.cern,https://github.com/root-project/root/pull/14968#issuecomment-1998332906,2,['test'],['test']
Testability,"This seems to be due to an inconsistent build (at least with the instruction given). The commit mentioned increases the size of `TGenericClassInfo`. The crash happens because at the destruction of a `TGenericClassInfo` object has its internal are garbled:; ```; #0 0x00007ffff639406b in ROOT::TGenericClassInfo::~TGenericClassInfo (; this=0x7fffd2e50d20 <ROOT::GenerateInitInstanceLocal(std::vector<HFShowerLibraryEventInfo, std::allocator<HFShowerLibraryEventInfo> > const*)::instance>, __in_chrg=<optimized out>); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-13ee096080b2ed8565e449c6c0dc4529/root-6.29.01/core/meta/src/TGenericClassInfo.cxx:223; #1 0x00007ffff6ad526c in __run_exit_handlers () from /lib64/libc.so.6; ```; ```; (gdb) p *this; .....; fAlternate = {<std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >> = {; _M_impl = {<std::allocator<ROOT::TClassAlt*>> = {<__gnu_cxx::new_allocator<ROOT::TClassAlt*>> = {<No data fields>}, <No data fields>}, <std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_Vector_impl_data> = {_M_start = 0x1, _M_finish = 0x0, _M_end_of_storage = 0x0}, <No data fields>}}, <No data fields>}}; ```. This garbling (the `_M_start = 0x1`) happens here:; ```; Hardware watchpoint 5: *(long*)0x7fffd2e50e20. Old value = 0; New value = 1; __cxxabiv1::__cxa_guard_release (; g=0x7fffd2e50e20 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<HFShowerLibraryEventInfo, std::allocator<HFShowerLibraryEventInfo> > const*)::instance>); at ../../../../libstdc++-v3/libsupc++/guard.cc:432; 432 ../../../../libstdc++-v3/libsupc++/guard.cc: No such file or directory.; (gdb) bt; #0 __cxxabiv1::__cxa_guard_release (; g=0x7fffd2e50e20 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<HFShowerLibraryEventInfo, std::allocator<HFShowerLibraryEventInfo> > const*)::instance>); at ../../../../libstdc++-v3/libsupc++/guard.cc:432; #1 0x00007fffd2e3dba8 in RO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957#issuecomment-1585135652:560,test,tests,560,https://root.cern,https://github.com/root-project/root/issues/12957#issuecomment-1585135652,2,['test'],"['testBuildDir', 'tests']"
Testability,"This seems to confirm that 07a0da4 is, as expected given @yamaguchi1024 testing, solving the execUnload problem. This leave as the only error the ""VecOps"" not found. @vgvassilev is that expected?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2183#issuecomment-396428995:72,test,testing,72,https://root.cern,https://github.com/root-project/root/pull/2183#issuecomment-396428995,1,['test'],['testing']
Testability,"This seems to work :astonished: please note that I'm not at all an expert, this was just a guessed spot where PyROOT deviates from cppyy upstream. Empirically, only forwarding these two bits seems to make all tests pass, and looking at the patch I can find some logic in it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12857#issuecomment-1554907837:209,test,tests,209,https://root.cern,https://github.com/root-project/root/pull/12857#issuecomment-1554907837,2,"['log', 'test']","['logic', 'tests']"
Testability,"This should be ""upstreamable""; printing `int i [[deprecated(""reason\n"")]];` seems a valid test case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10830#issuecomment-1168355956:90,test,test,90,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1168355956,1,['test'],['test']
Testability,This should be added so we can test RBDT in the CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15183:31,test,test,31,https://root.cern,https://github.com/root-project/root/pull/15183,1,['test'],['test']
Testability,"This should be fixed by #10044; For using via Export:; ```cpp; gGeoManager->SetTopNode(gGeoManager->GetVolume(""REPLICA""));; gGeoManager->Export(""test.gdml"", ""test"", ""vgf"");; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9310#issuecomment-1058517952:145,test,test,145,https://root.cern,https://github.com/root-project/root/issues/9310#issuecomment-1058517952,2,['test'],['test']
Testability,"This should be tested - I compile llvm13 branch, replace forward declaration in eve7 and add TJSONFile with nlohmann/json in header. It works, but makes lot of warnings. . Why one cannot include same header file from different modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1216803959:15,test,tested,15,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1216803959,1,['test'],['tested']
Testability,This should bring RDF back to a fully working state (for all cases we test) after the change in valid column names discussed in ROOT-10942 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6113:70,test,test,70,https://root.cern,https://github.com/root-project/root/pull/6113,1,['test'],['test']
Testability,This should bring RDF back to a fully working state (for all cases; we test) after the change in valid column names discussed in ROOT-10942.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6116:71,test,test,71,https://root.cern,https://github.com/root-project/root/pull/6116,2,['test'],['test']
Testability,This should fix a good number of tests on osx. cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4758:33,test,tests,33,https://root.cern,https://github.com/root-project/root/pull/4758,1,['test'],['tests']
Testability,"This should fix the recent test failures seen in `gtest-tree-treeplayer-test-treetreeplayertestUnit`. Full lldb stack traces at https://codimd.web.cern.ch/s/QKEMHg5H1. # PR description. The test was dynamically allocating the array data members of the `Data` struct, but never deallocating them. This commit polishes the `Data` struct definition and ensures proper management of the data members. The previous way of writing data to the TTree was leading to a bad memory access in the ReadBasicPointer inlined function in TStreamerInfoReadBuffer.cxx while reading the `double*` array. In particular, the issue arises when accessing and then deallocating the array at the current index provided by the `TCompInfo` object. ```; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf140 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; 920 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong: ReadBasicPointer(Long_t); continue;; 921 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong64: ReadBasicPointer(Long64_t); continue;; 922 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kFloat: ReadBasicPointer(Float_t); continue;; -> 923 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kDouble: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x000000010",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16501:27,test,test,27,https://root.cern,https://github.com/root-project/root/pull/16501,3,['test'],"['test', 'test-treetreeplayertestUnit']"
Testability,"This should fixe some sporadic failures observed in the CI builds. Before the CrossValidation class was created using the same name as in the `TestCrossValidationMultiProc.cxx`, and with the same `DataLoader` name. For this, the XML file created in the training phase was having the same name and being located in the same directory as the file created by the other tests. This was causing a conflict when the tests are run in parallel. ; This PR changes to use now different names, solving this conflict.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10018:143,Test,TestCrossValidationMultiProc,143,https://root.cern,https://github.com/root-project/root/pull/10018,3,"['Test', 'test']","['TestCrossValidationMultiProc', 'tests']"
Testability,This should hopefully fix sporadic failures happening when deleting the files create in these tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9415:94,test,tests,94,https://root.cern,https://github.com/root-project/root/pull/9415,1,['test'],['tests']
Testability,This should partially solve the issue with the rebuild (linking) of ROOT when building the tests; See also: https://cmake.org/cmake/help/latest/variable/CMAKE_SKIP_TEST_ALL_DEPENDENCY.html; Requires CMake v3.29,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16744:91,test,tests,91,https://root.cern,https://github.com/root-project/root/pull/16744,3,['test'],['tests']
Testability,"This simple code, gives a strange behaviour when running it within the ROOT prompt in 6.28 and master.; In ROOT master and 6,28 it seems the vector is initialised with the values used the first time and not with the new ones. ; It works fine in 6.26, where the second time the vector passed to the DummyBroadCast function is initialised correctly. . ```; .L testBroadCast.hxx; Test1::Session s1;; Test2::Session s2;; ```. Here is the code : `testBroadCast.hxx`. ```; #include <iostream>; #include <vector>. template<class T>; void DummyBroadCast(const T* data, std::vector<size_t> shape, std::vector<size_t> targetShape) {. std::cout << ""target shape "";; for (size_t i = 0; i < targetShape.size(); i++) std::cout << targetShape[i] << "" "";; std::cout << std::endl;. }. namespace Test1 {. struct Session {; ; std::vector<float> fTensor_conv0bias = std::vector<float>(4);; float * tensor_conv0bias = fTensor_conv0bias.data();; std::vector<float> fTensor_conv0biasbcast = std::vector<float>(64);; float * tensor_conv0biasbcast = fTensor_conv0biasbcast.data();. Session() {. std::vector<size_t> shape = { 4 , 1 , 1 };; std::vector<size_t> targetShape = { 2 , 4 , 4, 4 };; DummyBroadCast(tensor_conv0bias, shape, targetShape);. }. };; }. namespace Test2 {. struct Session {. std::vector<float> fTensor_conv0bias = std::vector<float>(4);; float * tensor_conv0bias = fTensor_conv0bias.data();; std::vector<float> fTensor_conv0biasbcast = std::vector<float>(100);; float * tensor_conv0biasbcast = fTensor_conv0biasbcast.data();. Session() {. std::vector<size_t> shape = { 4 , 1 , 1 };; std::vector<size_t> targetShape = { 2 , 4 , 5, 5 };; DummyBroadCast(tensor_conv0bias, shape, targetShape);; // DummyBroadCast(tensor_conv0bias, { 4 , 1 , 1 }, { 2 , 4 , 5, 5 });. }. };; }; ```; ; This affects some failures seen in SOFIE test like ; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12164:358,test,testBroadCast,358,https://root.cern,https://github.com/root-project/root/issues/12164,2,['test'],['testBroadCast']
Testability,This solves (and tests) ROOT-9935.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5089:17,test,tests,17,https://root.cern,https://github.com/root-project/root/pull/5089,1,['test'],['tests']
Testability,This sometimes still fails e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194564/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestSofieModels/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14535:112,test,testReport,112,https://root.cern,https://github.com/root-project/root/pull/14535,2,['test'],"['test', 'testReport']"
Testability,"This somewhat huge commit mainly demotes many class-versions to 0. . If wanted, I can for sure squash some things (right now, the commit messages contain the underlying reasoning). . In ROOT, a lot of classes were equipped with class-versions > 0 even though they are not meant for IO / streaming. ; This produces unnecessary overhead (creation of Streamer() functions) and might be misleading for users (especially if they believe streaming of these classes would be ok and then lose parts of their data). That's even more helpful when testing framework's dataobject-code. . These classes were identified by https://github.com/olifre/rootStaticAnalyzer (a new project still in early stages) and I have created this PR to fix almost all these issues. . The last commit in the series also explicitly marks two members (of TSeqCollection and THashList) as transient, even though these classes are already class-version 0. This is purely to make it more explicit that these are not streamed - and allow for programmatic testing (since then the `kTransient` bit of the `TRealData` will be set correctly). . Several issues alerted by `rootStaticAnalyzer` still remain which are probably real bugs in ROOT 6. . Examples: . ```; TMVA/PDF.h:0: error: Data object class 'TMVA::PDF' will not stream the following indirect members: members 'fConfigName, fConfigDescription, fReferenceFile' from class 'TMVA::Configurable' (class-version 0)!; ```. It seems like `TMVA::PDF` is meant for streaming, but inherits from a base which is not. . Similar to that:. ```; include/TTreeResult.h:0: error: Data object class 'TTreeResult' will not stream the following indirect members: members 'fRowCount' from class 'TSQLResult' (class-version 0)!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/169:537,test,testing,537,https://root.cern,https://github.com/root-project/root/pull/169,2,['test'],['testing']
Testability,"This splits up the file test/stressHistogram.cxx into smaller, more independent files using Google Test that is more maintainable than the existing code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/843:24,test,test,24,https://root.cern,https://github.com/root-project/root/pull/843,2,"['Test', 'test']","['Test', 'test']"
Testability,"This test doesnt seem related to the PR, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8699#issuecomment-884435109:5,test,test,5,https://root.cern,https://github.com/root-project/root/pull/8699#issuecomment-884435109,1,['test'],['test']
Testability,"This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5281:5,test,test,5,https://root.cern,https://github.com/root-project/root/pull/5281,1,['test'],['test']
Testability,"This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above.; Won't fix it in older versions, so it's also disabled if runtime C++ modules are on; in v6.16, just to be sure/consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5306:5,test,test,5,https://root.cern,https://github.com/root-project/root/pull/5306,1,['test'],['test']
Testability,"This test is also failing in master incremental, so it's unrelated ; https://epsft-jenkins.cern.ch/job/root-incremental-master/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=centos7/6849/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2396#issuecomment-435396289:5,test,test,5,https://root.cern,https://github.com/root-project/root/pull/2396#issuecomment-435396289,1,['test'],['test']
Testability,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15272:5,test,test,5,https://root.cern,https://github.com/root-project/root/pull/15272,4,['test'],['test']
Testability,"This testSpecFuncSiCi failure is fixed after applying #2396, which enables the autoloading of libraries for ACLiC. The problem is that we were blindly putting libMathCore to ""need loading"" list for ACLiC, but now we have to get a proper callback from CompileMacro. We can try to land #2396, or we can do something like; ```; if (isACLiC); fInterpreter->Load(""libMathCore.so""); ```; in TCling or somewhere for workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2854#issuecomment-434295309:5,test,testSpecFuncSiCi,5,https://root.cern,https://github.com/root-project/root/pull/2854#issuecomment-434295309,1,['test'],['testSpecFuncSiCi']
Testability,This time testing without the magic word in the PR title and also with multiple commits only using it once in the first commit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14610:10,test,testing,10,https://root.cern,https://github.com/root-project/root/pull/14610,1,['test'],['testing']
Testability,"This updates the following cppyy packages to the indicated versions:; - cppyy: cppyy-1.5.3; - cppyy_backend: clingwrapper-1.10.3; - CPyCppyy: CPyCppyy-1.9.3. This incorporates a fix for the issue reported here:; https://bitbucket.org/wlav/cppyy/issues/160/memoryregulator-and-the-deletion-of-python. and also this PR:; https://bitbucket.org/wlav/cppyy-backend/pull-requests/21/fix-logic-and-silence-wparentheses-warning. There are still two remaining Cppyy issues not solved yet by this update, which affect a few tests:; https://bitbucket.org/wlav/cppyy/issues/136/item-assignment-not-working-in-templated; https://bitbucket.org/wlav/cppyy/issues/145/enum-values-not-defined-as-constants",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4386:381,log,logic-and-silence-wparentheses-warning,381,https://root.cern,https://github.com/root-project/root/pull/4386,2,"['log', 'test']","['logic-and-silence-wparentheses-warning', 'tests']"
Testability,"This version of the PR is the result of some thinking and two test implementations, one with locks and one relying on TThreadedObject. Both solutions seem heavy and have impacts on runtime. The proposed changes, on the other hand, preserve the existing behaviour and allow thread safe access to the db, documenting well the properties of the TDatabasePDG component.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13541#issuecomment-1698804361:62,test,test,62,https://root.cern,https://github.com/root-project/root/pull/13541#issuecomment-1698804361,1,['test'],['test']
Testability,"This version still unfortunately fails with the stack trace below.; This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test.; It did take ~1500 runs to fail, however.; ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):; #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc; entry=0x7fbd8b863080, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29; #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118; #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412; #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632; #5 <signal handler called>; #6 TList::Remove (this=this; entry=0x1134310, obj=obj; entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705; #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289; #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110; #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63; #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6; #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333; #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301754774:165,test,test,165,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301754774,1,['test'],['test']
Testability,"This warning was first seen in rootbench:. ```c++; root-benchmark/BUILDTYPE/Release/COMPILER/gcc62/LABEL/performance-cc7/build/include/ROOT/TDFActionHelpers.hxx:745:34:; warning: parameter ‘slot’ set but not used [-Wunused-but-set-parameter]; void SetBranches(unsigned int slot, BranchTypes&... values, StaticSeq<S...> /*dummy*/); ^~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1811:56,benchmark,benchmark,56,https://root.cern,https://github.com/root-project/root/pull/1811,1,['benchmark'],['benchmark']
Testability,"This was appending ""roottest"" to the filter string, instead of *also* filtering ""roottest"".; roottest dictionaries will always have full path names, so veto ""/roottest/"".; Fixes 19 incremental failures that ceb925ae1e claimed to fix:. projectroot.roottest.root.meta.roottest_root_meta_drawing; projectroot.roottest.root.tree.split.roottest_root_tree_split_make; projectroot.roottest.root.treeformula.parse.roottest_root_treeformula_parse_make; projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make; projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make; projectroot.roottest.root.io.fakeClass.roottest_root_io_fakeClass_make; projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make; projectroot.roottest.root.treeformula.retobj.roottest_root_treeformula_retobj_make; projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make; projectroot.roottest.root.treeformula.schemaEvolution.roottest_root_treeformula_schemaEvolution_make; projectroot.roottest.root.tree.evolution.roottest_root_tree_evolution_make; projectroot.roottest.root.treeformula.array.roottest_root_treeformula_array_make; projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execState; projectroot.roottest.root.meta.roottest_root_meta_runautoload_auto; projectroot.roottest.root.collection.roottest_root_collection_execMissing; projectroot.test.test_stresstmva_interpreted; projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make; projectroot.roottest.root.io.datamodelevolution.roottest_root_io_datamodelevolution_make; projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3624:1386,test,test,1386,https://root.cern,https://github.com/root-project/root/pull/3624,1,['test'],['test']
Testability,"This was applied from a `.patch` from the PR GooFit/Minuit2#1 from @gudlaugu. All credit/blame should be directed to @gudlaugu, I'm just the middleman. This patch is useful because apparently MPI 3 no longer even includes support for the C++ bindings. Once #1680 is merged, this will be much easier to test. For future reference, the ugly use of environment variables instead of CMake option for MPI options in the main ROOT::Minuit2 CMakeLists.txt needs to be fixed, and also could be moved to FindMPI instead of the current hardcoded method.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1689:302,test,test,302,https://root.cern,https://github.com/root-project/root/pull/1689,1,['test'],['test']
Testability,This was causing some test failures in cxx modules and in cling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1841:22,test,test,22,https://root.cern,https://github.com/root-project/root/pull/1841,1,['test'],['test']
Testability,This was detected by redundant loading on libRooStats when we are trying; to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol; but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending; on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2764:233,test,test,233,https://root.cern,https://github.com/root-project/root/pull/2764,1,['test'],['test']
Testability,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14371#issuecomment-1898034942:507,test,tests,507,https://root.cern,https://github.com/root-project/root/pull/14371#issuecomment-1898034942,2,['test'],"['test', 'tests']"
Testability,"This was introduced in 2013 by commit a283dc5847 mentioning `Double32_t`, but all tests pass when removing it. It seems all relevant cases are taken care of by commit c6cfe7cbcd.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13072:82,test,tests,82,https://root.cern,https://github.com/root-project/root/pull/13072,1,['test'],['tests']
Testability,"This was missing in the default constructor. . Found automatically by https://github.com/olifre/rootStaticAnalyzer : . ```; include/TProtoClass.h:78: error: Streamed member 'unsigned int fCheckSum' of dataobject 'TProtoClass' not initialized by constructor!; ```. using the new test https://github.com/olifre/rootStaticAnalyzer/blob/master/src/tests/testStreamingUninitialized.cpp which identifies to-be-streamed members which are not initialized by the default constructors. ; There are likely more, but the other cases seem a bit more complex - I'm still working on improving the test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/171:278,test,test,278,https://root.cern,https://github.com/root-project/root/pull/171,4,['test'],"['test', 'testStreamingUninitialized', 'tests']"
Testability,"This was not in any issue, but I thought this would be very helpful. This way, you don't need to convert theta and phi into Cartesian vectors manually, and vice-versa. I tested it on Ubuntu 20.04 and it works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7735:170,test,tested,170,https://root.cern,https://github.com/root-project/root/pull/7735,1,['test'],['tested']
Testability,"This was removed in commit 5ef5d8e8ab (""Do not use gif"") and makes the test fail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9605:71,test,test,71,https://root.cern,https://github.com/root-project/root/pull/9605,1,['test'],['test']
Testability,This was the only test file for Spark backend in the `root` repository. It is better suited in `roottest`. In the sibling PR I also added the corresponding Dask unittests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9361:18,test,test,18,https://root.cern,https://github.com/root-project/root/pull/9361,1,['test'],['test']
Testability,"This way, if another process requests the file from the cache while; the file is still being written/downloaded, it does not ""find"" it; and does not read an incomplete file. This should fix failures such as [these](https://github.com/root-project/root/pull/9495#issuecomment-1005637703) where multiple process (in this case multiple ROOT tests) require to cache the same file concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9479:338,test,tests,338,https://root.cern,https://github.com/root-project/root/pull/9479,1,['test'],['tests']
Testability,"This will avoid the crashing due to an uninitialized pool, but might cause problems as we are not enabling thread safety (as we shouldn't inside TTreeProcessorMT). In any case, maybe we should add an explanation comment? A big warning about thread safety?. On the other hand, I don't know if that's what we want until we decide to make TTreeProcessorMT open for explicit multithreading. Another way to avoid the crashing on the test would be to enable implicit MT before running it, as it is done in the other tests. This would follow the current way of working with TTProcessorMT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4953#issuecomment-583375645:428,test,test,428,https://root.cern,https://github.com/root-project/root/pull/4953#issuecomment-583375645,2,['test'],"['test', 'tests']"
Testability,This works better for me (i.e. I have multiple clang versions installed and it works as well). Please check that it works for you and let me know so I can merge. The Jenkins builds are not able to actually test this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3807:206,test,test,206,https://root.cern,https://github.com/root-project/root/pull/3807,1,['test'],['test']
Testability,"Those 2 classes may or may not be the only 2 that have this kind of pattern in the wild, so it might be interesting to solve the underlying issue which is likely to be that `BindCppObject` is trying to bind to a type which has no interpreter info. So a fix could be to have either `CPyCppyy::BindCppObject` or `Cppyy::GetActualClass` to check for the presence of interpreter info before attempting to automatically bind to the ""actual class/type"". (In theory this should be done by testing `TClass::HasInterpreterInfo` but in this case it is returning an incorrect information and thus we have to use `TClass::GetClassInfo`). The change in behavior is that after this modification, `PyROOT/Cppyy` would no longer warn if the actual return type is inadvertently missing its interpreter info. However semantically this seems to be the right behavior, for example in our cases we would:; * have no warning; * PyROOT will report the type of the pointer as `TList`; * Usage of the meta routines (`IsA` and co.) would still give accurate information (access to the `TClass` for `TViewPubFunctions`); * Interfaces to the objects are the same as the one available from the equivalent C++ code (I.e. `TList`) (unless the user does an explicit dynamic_cast to the underlying type). * In other cases (for user provided functions and classes) where the interpreter information from the underlying class is missing by mistake (bad/broken configuration of the user code/libraries), the error/warning reporting about the missing interpreter info will be delayed until the user actually want to access the underlying class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16177#issuecomment-2271797820:482,test,testing,482,https://root.cern,https://github.com/root-project/root/pull/16177#issuecomment-2271797820,1,['test'],['testing']
Testability,"Those are indeed fantastic numbers. All that is left to do is to clean-up a tiny bit the history (squash the 3 ""fix and add"" commit into the commit they fix or add) and more importantly to copy/paste the number above in the commit log(s). Great Work!! Thanks!!!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-756445427:231,log,log,231,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-756445427,1,['log'],['log']
Testability,Those logs/failures are ancient. The bot is currently not triggering new runs of jenkins (and/or not showing it in the PRs),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15021#issuecomment-2041130955:6,log,logs,6,https://root.cern,https://github.com/root-project/root/pull/15021#issuecomment-2041130955,1,['log'],['logs']
Testability,"Those two tests in Jenkins are failing on other PRs as well, it looks like.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1809#issuecomment-379200446:10,test,tests,10,https://root.cern,https://github.com/root-project/root/pull/1809#issuecomment-379200446,1,['test'],['tests']
Testability,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```; 9.7M events in 19 input files; ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads; Percent of CPU this job got: 397%; Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08; 128 threads; Percent of CPU this job got: 816%; Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83; 64 threads; Percent of CPU this job got: 770%; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09; 32 threads; Percent of CPU this job got: 1209%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40; 16 threads; Percent of CPU this job got: 1142%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39; 8 threads; Percent of CPU this job got: 743%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61; 4 threads; Percent of CPU this job got: 386%; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77; 2 threads; Percent of CPU this job got: 198%; Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98; 1 thread (no implicit MT); Percent of CPU this job got: 99%; Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads; Percent of CPU this job got: 3971%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81; 192 threads; Percent of CPU this job got: 4578%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87; 128 threads; Percent of CPU this job got: 4908%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90; 64 threads; Percent of CPU this job got: 3897%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40; 32 threads; Percent of CPU this job got: 2403%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90; 16 threads; Percent of CPU this job got: 1384%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35; 8 threads; Percent of CPU this job got: 739%; Elapsed (wall clock) time (h:mm:ss or",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-750008985:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-750008985,1,['test'],['test']
Testability,Thought it was worth for our reference to keep track also of the behaviour of the `dill` module in the tests (stemming from https://github.com/root-project/root/issues/6370),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7886#issuecomment-821094503:103,test,tests,103,https://root.cern,https://github.com/root-project/root/pull/7886#issuecomment-821094503,1,['test'],['tests']
Testability,"Three questions from my side (may be naive because I didn't spend a lot of time to fully digest the CI setup):; 1. Having the secrets stored as a file on the runners means we commit to self-hosted machines? GitHub hosted runners won't have the necessary setup.; 2. The workflow run ""would still have to be approved by a maintainer."" - how does this work? https://securitylab.github.com/research/github-actions-preventing-pwn-requests/ discusses a label; as far as I understand approval on GitHub itself is limited to first-time contributions. So everybody ""external"" who got one benign PR accepted, can afterwards run potentially malicious code without approval, no?; 3. ""A safer alternative is not allowing pull request jobs to upload artifacts at all but then we can't run tests in a separate job. It would also cause builds to take more time on average because the object storage will be less populated."" What is the currently intended use case for this? I would have assumed that we don't want to use PR builds to feed back into incremental builds anyhow, we always want to start from a ""known good"" state, ie `master`, no?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12201#issuecomment-1413319178:775,test,tests,775,https://root.cern,https://github.com/root-project/root/pull/12201#issuecomment-1413319178,1,['test'],['tests']
Testability,"Thsi fixes the following error:; ```; MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7265:283,test,test,283,https://root.cern,https://github.com/root-project/root/pull/7265,1,['test'],['test']
Testability,"Thx, i have seen it, will test it later today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4689#issuecomment-565340261:26,test,test,26,https://root.cern,https://github.com/root-project/root/pull/4689#issuecomment-565340261,1,['test'],['test']
Testability,Timings reported [here](https://sft.its.cern.ch/jira/browse/ROOT-9468) show a factor 2 speedup for compilation and jitting of large snapshot calls (test was performed with 200 `int` columns).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2713#issuecomment-425431899:148,test,test,148,https://root.cern,https://github.com/root-project/root/pull/2713#issuecomment-425431899,1,['test'],['test']
Testability,"To add my memory here: I think this was originally fixed by Javier, but I ended up re-introducing it when I made the remaining tests pass to merge https://github.com/root-project/root/pull/13565 :disappointed:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1923312096:127,test,tests,127,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1923312096,1,['test'],['tests']
Testability,"To add some more information after some investigation with @vepadulano: when doing `ROOT.Detail.MyStruct`, the `Detail` namespace that PyROOT returns is the one in the global namespace, i.e. `Detail`, not `ROOT::Detail`. This happens because, when doing a lookup from Python in the `ROOT` module, the global namespace is inspected first, and only if that lookup fails the `ROOT` namespace is tried. But since `Detail` already exists in the global namespace, `ROOT::Detail` is never returned - and `Detail` does not contain any `MyStruct`. Bottom line: the PyROOT lookup works as expected. That being said, we found a weird behavior with the `Detail` namespace, which can be reproduced from Python and also from C++ in the ROOT prompt:. ```; root [0] auto c = TClass::GetClass(""Detail""); (TClass *) @0x7fffd0908fc0; root [1] namespace Detail { int i; }; root.exe: /home/etejedor/root/fork/root/interpreter/llvm/src/include/llvm/Support/Casting.h:105: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::TagType; From = clang::Type]: Assertion `Val && ""isa<> used on a null pointer""' failed.; ```. If we look up the `Detail` namespace first and then define something else in it, there is a crash. I will open another ticket to follow this up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8745#issuecomment-895859203:1064,Assert,Assertion,1064,https://root.cern,https://github.com/root-project/root/issues/8745#issuecomment-895859203,1,['Assert'],['Assertion']
Testability,To answer my own question:. The test needed to be updated and was updated by https://github.com/root-project/roottest/pull/180. Several PR and incremental failed due to the (unavoidable) lag between this PR being merged in and the roottest PR being merged in.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1814#issuecomment-390737103:32,test,test,32,https://root.cern,https://github.com/root-project/root/pull/1814#issuecomment-390737103,1,['test'],['test']
Testability,"To avoid fallback to numeric differentiation because the function is not; inlined. The pullbacks were automatically generated with Clad master, and then; manually simplified. It was carefully checked that the updated unit; tests cover all code branches of the pullback.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15501:223,test,tests,223,https://root.cern,https://github.com/root-project/root/pull/15501,1,['test'],['tests']
Testability,To be investigated before merging:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84694/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/. On MacOS the test succeeds but we get those `Symbol not found` messages.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5643#issuecomment-638019521:115,test,testReport,115,https://root.cern,https://github.com/root-project/root/pull/5643#issuecomment-638019521,2,['test'],"['test', 'testReport']"
Testability,"To debug I will use:; ```; {; gStyle->SetOptStat(0);; gStyle->SetOptTitle(0);. // make two histograms with different xmax; auto h15 = new TH1F(""h15"",""test histogram"", 152, 0, 15);; auto h25 = new TH1F(""h25"",""test histogram"", 252, 0, 25);. TF1 *gaus = (TF1*)gROOT->GetFunction(""gaus"");; gaus->SetParameters(1, 0, 15); // Constant, Mean, Sigma; h15->FillRandom(""gaus"", 10000);. gaus->SetParameters(1, 0, 25); // Constant, Mean, Sigma; h25->FillRandom(""gaus"", 10000);; h25->SetLineColor(2);. h15->Scale(.0005);; h25->Scale(.02);. h25->SetMaximum(10);; h25->SetMinimum(.01);. h25->Draw(""hist"");; h15->Draw(""hist same"");. gPad->SetLogy(1);; }; ```; it gives me:; <img width=""632"" alt=""Screenshot 2023-03-01 at 17 37 38"" src=""https://user-images.githubusercontent.com/4697738/222203726-4dfd1c6c-5cb1-4eca-964e-7a56ea07e6f5.png"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12394#issuecomment-1450455243:150,test,test,150,https://root.cern,https://github.com/root-project/root/issues/12394#issuecomment-1450455243,2,['test'],['test']
Testability,To enable setting default draw option before drawing a graph like TH1::SetOption. Fixes https://github.com/root-project/root/issues/14539. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14686:204,test,tested,204,https://root.cern,https://github.com/root-project/root/pull/14686,1,['test'],['tested']
Testability,"To fix the timeouts seen in our CI runs of the distributed RDataFrame with Dask suite. In particular, the Dask version used was 2021.10.0. Version 2021.11.2 fixes a couple of deadlock bugs which were most probably responsible for the timeouts (see https://distributed.dask.org/en/stable/changelog.html#v2021-11-2). We bump the minimum Dask version to 2022.02.0 (; https://distributed.dask.org/en/stable/changelog.html#v2022-02-0) because it is the last version with support for Python 3.7 (the current minimum Python version for distributed RDataFrame). The test suite was run with Dask 2021.10.0 on both Ubuntu and Fedora, showing the timeout. Version 2021.11.2 doesn't timeout.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11371:558,test,test,558,https://root.cern,https://github.com/root-project/root/pull/11371,1,['test'],['test']
Testability,"To have better diagnostics, `TRint::ProcessLineNr()` prepends a `#line 1 ""ROOT_prompt_xxx""` PP directive to each input line. However, this causes problems if the previous line is continued with '\\', e.g.; ```; root [0] #define m(x) printf(""%s"", \; root (cont'ed, cancel with .@) [1]x);; ROOT_prompt_0:2:2: error; '#' is not followed by a macro parameter; ^; ROOT_prompt_0:3:1: error; use of undeclared identifier 'x'; x);; ^; ```. This PR fixes issue #8762. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8772:480,test,tested,480,https://root.cern,https://github.com/root-project/root/pull/8772,1,['test'],['tested']
Testability,"To help cling autoloading. Should fix [these failures in Jenkins](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2889/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/testReport/junit/projectroot/runtutorials/tutorial_dataframe_df024_Display/).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8393:208,test,testReport,208,https://root.cern,https://github.com/root-project/root/pull/8393,1,['test'],['testReport']
Testability,"To me it looks OK. The failure in slc6/gcc62 is not real failure (retry of git clone). What we should be testing is also for Python3, which is not obvious to me how to start it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1512#issuecomment-357709239:105,test,testing,105,https://root.cern,https://github.com/root-project/root/pull/1512#issuecomment-357709239,1,['test'],['testing']
Testability,"To reproduce, download http://ccdb-test.cern.ch:8080/download/d64bd450-1619-11ec-a9d5-200114580202 and open it in TBrowser. Works on ubuntu, but on mac I get:. ```; root [2] Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0xdc6299b4 for the class ""array<Long64_t,1>"" in /Users/ktf/Downloads/array<Long64_t,1>_1631706076679.root.; Error in <TBufferFile::CheckByteCount>: object of class array<Long64_t,1> read too few bytes: 6 instead of 14; ```. when clicking on `ccdb_object;1`. Both ROOT 6.24.02 and 6.24.06 seem to be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9001:35,test,test,35,https://root.cern,https://github.com/root-project/root/issues/9001,1,['test'],['test']
Testability,"To reproduce, start ROOT and type `#`.; ```; % root -l ; root [0] #; root.exe: /home/linev/git/webgui/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:108: void cling::MetaLexer::LexAnyString(cling::Token&): Assertion `Tok.getBufStart() != curPos && ""It must consume at least on char""' failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11190:209,Assert,Assertion,209,https://root.cern,https://github.com/root-project/root/issues/11190,1,['Assert'],['Assertion']
Testability,"To reproduce, you just need to build ROOT using a compiler wrapper (i.e. a symlink like `/usr/lib/ccache/bin/g++` as ; your `CMAKE_CXX_COMPILER`, which points to ccache). For example, on my machine, I have:; ```sh; $ ls -l $(which g++); lrwxrwxrwx 1 root root 15 abr 24 06:52 /usr/lib/ccache/bin/g++ -> /usr/bin/ccache; $ g++ --version; g++ (Gentoo 11.3.0 p4) 11.3.0; ```; I suppose just using `PATH` rather then `REALPATH` in the place linked above should fix this, but I don't know if that has other consequences. If you need a place with this setup to test, you can use `titanx`, I can setup an account there for you if you don't have one yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10556#issuecomment-1128835062:555,test,test,555,https://root.cern,https://github.com/root-project/root/issues/10556#issuecomment-1128835062,1,['test'],['test']
Testability,"To reproduce:. ```; xrdcp root://eospublic.cern.ch//eos/root-eos/benchmark/Run2012B_SingleMu.root .; hadd -ff Run2012B_SingleMu10x.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root; ```. On my laptop, with current master, this crashes after a few minutes with:. ```; ~/S/w/coffea-benchmarks (master *=) hadd -ff Run2012B_SingleMu10x.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root Run2012B_SingleMu.root; hadd Target file: Run2012B_SingleMu10x.root; hadd compression setting for all output: 1; hadd Source file 1: Run2012B_SingleMu.root; hadd Source file 2: Run2012B_SingleMu.root; hadd Source file 3: Run2012B_SingleMu.root; hadd Source file 4: Run2012B_SingleMu.root; hadd Source file 5: Run2012B_SingleMu.root; hadd Source file 6: Run2012B_SingleMu.root; hadd Source file 7: Run2012B_SingleMu.root; hadd Source file 8: Run2012B_SingleMu.root; hadd Source file 9: Run2012B_SingleMu.root; hadd Source file 10: Run2012B_SingleMu.root; hadd Target path: Run2012B_SingleMu10x.root:/; Fill: Switching to new file: Run2012B_SingleMu10x_1.root; Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting Run2012B_SingleMu10x.root) has been deleted (likely due to a TTree larger than 100Gb); aborting; #0 0x00007fea7e19b48a in wait4 () from /usr/lib/libc.so.6; #1 0x00007fea7e10d09b in do_system () from /usr/lib/libc.so.6; #2 0x00007fea7ea7fdac in TUnixSystem::Exec (this=0x5593666eb200, shellcmd=0x559368e19160 ""/home/blue/ROOT/master/cmake-build-foo/etc/gdb-backtrace.sh 538334 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2108; #3 0x00007fea7ea8069e in TUnixSystem::StackTrace (this=0x5593666eb200) at ../core/unix/src/TUnixSystem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10102:65,benchmark,benchmark,65,https://root.cern,https://github.com/root-project/root/issues/10102,2,['benchmark'],"['benchmark', 'benchmarks']"
Testability,"To summarize what was decided today in the ROOT team meeting: it is very unfortunate that this bug was discovered a week after branching, please avoid this in the future. Nevertheless, since this is fixing a feature that we advertise and the feature is very specific, this should be merged and backported to 6.32 if the CI can be made green (even disabling the failing test would be acceptable, since n - 1 tested platforms are better than zero).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15173#issuecomment-2057399920:369,test,test,369,https://root.cern,https://github.com/root-project/root/pull/15173#issuecomment-2057399920,2,['test'],"['test', 'tested']"
Testability,"Today, I discovered that `ROOT::TestSupport` does not always work as intended: Consider a ROOT7 build without IMT, and the unit tests `tree/ntuple/v7/test/ntuple_extended` and `tree/ntuple/v7/test/ntuple_storage`. Both call `ROOT::EnableImplicitMT()` which results in a warning (this should be fixed separately). `TestSupport.cxx` has a `ForbidDiagnostics noDiagCheckerInstance` that should call `SetErrorHandler` and fail the test if there is an unexpected diagnostic. It turns out this works fine for `ntuple_extended` (which is currently failing in configurations without IMT), but not for `ntuple_storage`. The reason seems to be that `ntuple_storage` doesn't use any other code from `ROOT::TestSupport`, and because it's a static library (since https://github.com/root-project/root/pull/9528) the linker can just skip it. (This was different for the object library before, there you link in the individual object files.). I'm not sure what the best solution is: Is it possible and reasonable to install object libraries? If not, an ugly approach is to emit an undefined symbol from `TestSupport.hxx` that will force the linker to add the static library...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12828:32,Test,TestSupport,32,https://root.cern,https://github.com/root-project/root/issues/12828,8,"['Test', 'test']","['TestSupport', 'test', 'tests']"
Testability,"Too bad, I was using it for testing on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14823#issuecomment-2039928148:28,test,testing,28,https://root.cern,https://github.com/root-project/root/pull/14823#issuecomment-2039928148,1,['test'],['testing']
Testability,"Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551; Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done.; Resolving deltas: 100% (23380/23380), done.; jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF; -- The C compiler identification is GNU 11.3.1; -- The CXX compiler identification is GNU 11.3.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config; -- Performing Test HAVE_FFI_CALL; -- Performing Test HAVE_FFI_CALL - Success; -- Found FFI: /usr/lib64/libffi.so; -- Performing Test Terminfo_LINKABLE; -- Performing Test Terminfo_LINKABLE - Success; -- Found Terminfo: /usr/lib64/libtinfo.so; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""); -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""); -- Linker detection: GNU ld; -- Performing Test C_SUPPORTS_FPIC; -- Performing Test C_SUPPORTS_FPIC - Success; -- Performing Test CXX_SUPPORTS_FPIC; -- Performing Test CXX_SUPPORTS_FPIC - Success; -- Building with -fPIC; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for pol",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:1231,Test,Test,1231,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,2,['Test'],['Test']
Testability,"Totally, if that's a test? :-) Thank you!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9968#issuecomment-1051051424:21,test,test,21,https://root.cern,https://github.com/root-project/root/pull/9968#issuecomment-1051051424,1,['test'],['test']
Testability,Transient](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16962/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execAtomTransient/); - [projectroot.roottest.root.io.tclass.roottest_root_io_tclass_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16962/testReport/projectroot.roottest.root.io/tclass/roottest_root_io_tclass_make/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclic01](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16962/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclic01/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execDoxygenTransient](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16962/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execDoxygenTransient/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclic00](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16962/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclic00/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execNew](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16962/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execNew/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclic03](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16962/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclic03/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16962/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.io.tuple.roottest_root_io_tuple_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16962/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/). And 2 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1621#issuecomment-365250825:1433,test,testReport,1433,https://root.cern,https://github.com/root-project/root/pull/1621#issuecomment-365250825,1,['test'],['testReport']
Testability,"Travis CI breakage is not my fault, merging as Jenkins test passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3232#issuecomment-454352383:55,test,test,55,https://root.cern,https://github.com/root-project/root/pull/3232#issuecomment-454352383,1,['test'],['test']
Testability,Travis complains about some not-processed logical branches. This is ok.; One warning should be fixed by #4067 ; Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4063#issuecomment-510009950:42,log,logical,42,https://root.cern,https://github.com/root-project/root/pull/4063#issuecomment-510009950,1,['log'],['logical']
Testability,TreePlayer-test: avoid use after delete of TEntryList by TTree,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10031:11,test,test,11,https://root.cern,https://github.com/root-project/root/pull/10031,1,['test'],['test']
Testability,Tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78637/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make_CloneTree/); - [projectroot.io.io.test.gtest_io_io_test_TBufferMerger](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78637/testReport/projectroot.io.io/test/gtest_io_io_test_TBufferMerger/); - [projectroot.io.io.test.gtest_io_io_test_TFileMerger](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78637/testReport/projectroot.io.io/test/gtest_io_io_test_TFileMerger/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78637/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78637/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78637/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78637/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_execFileMerger](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78637/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_execFileMerger/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simple_zlib_compr_level1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78637/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_zlib_c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5012#issuecomment-586715737:1504,test,test,1504,https://root.cern,https://github.com/root-project/root/pull/5012#issuecomment-586715737,1,['test'],['test']
Testability,"Trees are also failing in nightlies, https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/; so these I think is unrelated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2375#issuecomment-409246788:165,test,testReport,165,https://root.cern,https://github.com/root-project/root/pull/2375#issuecomment-409246788,1,['test'],['testReport']
Testability,Tried by @maxgalli in nightly build machine and test passes. Let's merge and observe the nightlies again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4117#issuecomment-514649961:48,test,test,48,https://root.cern,https://github.com/root-project/root/pull/4117#issuecomment-514649961,1,['test'],['test']
Testability,"Trivial changes, code is not directly tested by Jenkins",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4341#issuecomment-527851441:38,test,tested,38,https://root.cern,https://github.com/root-project/root/pull/4341#issuecomment-527851441,1,['test'],['tested']
Testability,"Trivial file tst.py; ```; import ROOT ; e = ROOT.RooCategory; ```. execute as . ```; python -Werror tst.py; ```. one gets:. ```; build$ python -Werror tst.py; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/tst.py"", line 1, in <module>; import ROOT; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>; module = importlib.import_module(pyz.__name__ + '.' + module_name); File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>; from ._roocategory import RooCategory; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18; """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries.; ^; SyntaxError: invalid escape sequence \c; ```. (I run my tests with `-Werror flag`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8902#issuecomment-906174560:1184,test,tests,1184,https://root.cern,https://github.com/root-project/root/issues/8902#issuecomment-906174560,1,['test'],['tests']
Testability,"Try this script. Result shown in file:; [test_saveas.pdf](https://github.com/root-project/root/files/12340003/test_saveas.pdf); ```; #if __has_include(""spl_save.cc""); #include ""spl_save.cc""; #define SPL_TEST 1; #else; double spl_save(double x) { return 0; }; #endif. //--------------------------------------------------------------------; void errin_spline3() {; //--------------------------------------------------------------------. double Xmin = 0.075, Xmax = 0.375;; vector<double> y {; 1.00415, 0.975639, 0.983931, 0.995963, 0.99217, 0.991772, 1.00196; };. TSpline3* spline3 = new TSpline3("""",Xmin,Xmax,y.data(),y.size(),; ""b2e2"",0.,0.);. #ifndef SPL_TEST; spline3->SaveAs(""spl_save.cc"");; printf(""Spline is saved.""; "" Restart this function in root a second time.\n"");; return;; #endif. TCanvas* c1 = new TCanvas(""c1"",""splines"",0,0,900,700);; c1->cd();; gPad->SetGrid();. auto Lft = [](double* x,double* p) {; return spl_save(x[0]);; };; TF1* ft = new TF1(""Test TSpline.SaveAs() function"",Lft,0.05,0.40,0);; ft->SetLineColor(kRed);; ft->SetLineWidth(2);; ft->GetYaxis()->SetRangeUser(0.8,1.2);; ft->Draw(""L"");. spline3->SetLineColor(kBlue);; spline3->SetLineWidth(2);; spline3->SetMarkerColor(kBlue+2);; spline3->SetMarkerStyle(20);; spline3->SetMarkerSize(0.75);; spline3->Draw(""LCP SAME"");. TLegend* leg = new TLegend(0.60,0.75,0.88,0.88);; leg->AddEntry(spline3, ""original TSpline3"", ""LP"");; leg->AddEntry(ft, ""saved in file"", ""L"");; leg->Draw();. gPad->Update();; }; ```; Method TSpline.SaveAs() writes code with an error.; On line `if (klow < fNp-1) klow = fNp-1;` the ''<"" sign must be replaced with the "">"" sign.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13441#issuecomment-1678187182:962,Test,Test,962,https://root.cern,https://github.com/root-project/root/issues/13441#issuecomment-1678187182,1,['Test'],['Test']
Testability,"Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple; read-write cycle. If the test fails on CI, we have diagnosed a latent; issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7879:28,test,test,28,https://root.cern,https://github.com/root-project/root/pull/7879,3,['test'],['test']
Testability,Try to fix PyMVA unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2417:22,test,tests,22,https://root.cern,https://github.com/root-project/root/pull/2417,1,['test'],['tests']
Testability,"Try to print some hints about why there is this: `Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!""`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7297:50,Assert,Assertion,50,https://root.cern,https://github.com/root-project/root/pull/7297,1,['Assert'],['Assertion']
Testability,"Trying to solve frequent failure in **assertHumanReadable** tests. Typical output:. ```; [NON-XML-CHAR-0x1B][1m/mnt/build/wsincrmaster/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/include/ROOT/StringConv.hxx:103:18: [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][0;1;35mwarning: [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][1mimplicit conversion from 'long long' to 'double' changes value from 9223372036854775807 to 9223372036854775808 [-Wimplicit-int-float-conversion][NON-XML-CHAR-0x1B][0m; if (v < std::numeric_limits<T>::max()) {; [NON-XML-CHAR-0x1B][0;1;32m ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][1m/mnt/build/wsincrmaster/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/roottest/root/core/assertHumanReadable.cxx:9:29: [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][0;1;30mnote: [NON-XML-CHAR-0x1B][0min instantiation of function template specialization 'ROOT::FromHumanReadableSize<long long>' requested here[NON-XML-CHAR-0x1B][0m; auto parseResult = ROOT::FromHumanReadableSize(input,res);; [NON-XML-CHAR-0x1B][0;1;32m ^; [NON-XML-CHAR-0x1B][0m1 warning generated.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4321#issuecomment-526621721:38,assert,assertHumanReadable,38,https://root.cern,https://github.com/root-project/root/pull/4321#issuecomment-526621721,3,"['assert', 'test']","['assertHumanReadable', 'tests']"
Testability,"Trying to wrap up here: I do not think we have instructions to build ROOT on top of an external clang, even if the patch version of clang is built with changes we need. At the moment, we do not have at disposal enough effort to work on such a recipe. Therefore, the reply to this inquiry, unfortunately, is that there is no well tested, blessed recipe to build external llvm for ROOT. And that would be enough to close the item, in my opinion. . Of course, @cgleggett , we would warmly invite you to contribute such a recipe, helping you in the process as best as we can.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14250#issuecomment-2038229517:329,test,tested,329,https://root.cern,https://github.com/root-project/root/issues/14250#issuecomment-2038229517,1,['test'],['tested']
Testability,"Tuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RNTuple format is too new (version 256) (unchecked RResult access!)\nAt:\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t, uint32_t&) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:629]\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:11778,test,tests,11778,https://root.cern,https://github.com/root-project/root/issues/12426,1,['test'],['tests']
Testability,"TupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:15039,TEST,TESTS,15039,https://root.cern,https://github.com/root-project/root/issues/12426,1,['TEST'],['TESTS']
Testability,Turn the benchmark used to obtain results for CHEP 2023 into a roofit test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12839:9,benchmark,benchmark,9,https://root.cern,https://github.com/root-project/root/pull/12839,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,Turns out that we forgot to link in ZLIB in libCore. @oshadura could you test? We should make sure the tests are running if we are in `-Dbuiltin_zlib=On/Off`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1189:73,test,test,73,https://root.cern,https://github.com/root-project/root/pull/1189,2,['test'],"['test', 'tests']"
Testability,"Turns out the `arrow` dependency is not installed anywhere, so this code can't be tested for now. To discuss with the RDataFrame developers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15312#issuecomment-2071932846:82,test,tested,82,https://root.cern,https://github.com/root-project/root/pull/15312#issuecomment-2071932846,1,['test'],['tested']
Testability,"Two fixes in CMake, which were in the way for RooFit work:; - Improve documentation/interfaces for passing LinkDefs in `ROOT_STANDARD_LIBRARY_PACKAGE`. Some functions suggest that multiple LinkDefs can be passed, but it doesn't work. I found out when trying to get this done for RooFit. The solution is to refactor all RF linkdefs into one, but with this PR, I want to make it clear that multiple LinkDefs will not work.; - ROOT_ADD_GTEST didn't allow for test labels such as LONGTEST etc. With this change, they are passed on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4968:456,test,test,456,https://root.cern,https://github.com/root-project/root/pull/4968,1,['test'],['test']
Testability,"Two implementations are provided, i.e. for Python versions older than 3.8, for which PEP 587 is not in force, and newer. # This Pull request:. ## Changes or fixes:; Implements TPython::ExecFile for Python 3. ## Checklist:. - [v] tested changes locally; - [] updated the docs (if necessary). This PR fixes #9058",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13532:229,test,tested,229,https://root.cern,https://github.com/root-project/root/pull/13532,1,['test'],['tested']
Testability,"Two important notes:; * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS).; * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:; ```diff; diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp; index 0fb4b59ba6..d8fbf13ce5 100644; --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp; +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp; @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {; // Set the small code except for macOS on AArch64 - it results in relocation; // targets that are out-of-range.; // TODO: Investigate / report upstream and re-evaluate after a future LLVM; // upgrade.; - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)); + if (!TT.isOSBinFormatMachO()); JTMB.setCodeModel(CodeModel::Small);; }; ; return cantFail(JTMB.createTargetMachine());; ```; Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14598#issuecomment-1931533735:416,test,test-stressgraphics-interpreted,416,https://root.cern,https://github.com/root-project/root/issues/14598#issuecomment-1931533735,1,['test'],['test-stressgraphics-interpreted']
Testability,"Two more gradient interfaces have been parallelized and vectorized: `PoissonLikelihood` and `LogLikelihood`. Both of them are tested. The review of these new implementations should be straightforward, as they are very similar to the `Chi2` implementations. Also, the previous errors in the builds should be fixed now, let's see what Jenkins has to say. By the way, I have pushed a commit fixing the clang-format style because I got a huge diff (probably due to the recent changes in .clang-format) when doing `git clang-format`. I thought this would be cleaner and easier to review, but if you want me to squash the changes I can do it (actually I tried to do it, but the `rebase` threw *a lot* of conflicts, so I just did this new commit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793#issuecomment-320457479:93,Log,LogLikelihood,93,https://root.cern,https://github.com/root-project/root/pull/793#issuecomment-320457479,2,"['Log', 'test']","['LogLikelihood', 'tested']"
Testability,Two more unit tests and a slight refactoring of the existing ones.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1145:14,test,tests,14,https://root.cern,https://github.com/root-project/root/pull/1145,1,['test'],['tests']
Testability,Two possible solutions that came after a discussion with @eguiraud:. * Calling `TTree::SetMaxTreeSize()` in `TFileMerger::PartialMerge` with a very large number and then setting it back to the old value right after. This seems unfeasible since `TTree.h` is not available in the IO library objects.; * Adding a new bit in TFile e.g. `kCanBeChanged` and test it in TTree::ChangeFile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6640#issuecomment-708477402:352,test,test,352,https://root.cern,https://github.com/root-project/root/issues/6640#issuecomment-708477402,1,['test'],['test']
Testability,Type: 1 Name: .str.3 SID: 1 Offset: 0x13 flags: 66; 	Type: 1 Name: .str.4 SID: 1 Offset: 0x14 flags: 66; 	Type: 1 Name: .str.5 SID: 1 Offset: 0x16 flags: 66; 	Type: 1 Name: .str.6 SID: 1 Offset: 0x50 flags: 66; 	Type: 1 Name: .str.7 SID: 1 Offset: 0x59 flags: 66; 	Type: 1 Name: .str.8 SID: 1 Offset: 0x78 flags: 66; 	Type: 1 Name: .str.9 SID: 1 Offset: 0x7c flags: 66; emitSection SectionID: 2 Name: .data.DW.ref.__gxx_personality_v0 obj addr: 0x10022a6ebe0 new addr: 0x3fff8d1d0048 DataSize: 8 StubBufSize: 44 Allocate: 52; 	Type: 1 Name: DW.ref.__gxx_personality_v0 SID: 2 Offset: (nil) flags: 518; emitSection SectionID: 3 Name: .text obj addr: 0x10022a6dd40 new addr: 0x3fff8a990170 DataSize: 3044 StubBufSize: 5764 Allocate: 8808; 	Type: 4 Name: _Z7hsimplei SID: 3 Offset: 0x8 flags: 66; Parse relocations:; 	SectionID: 3; 		RelType: 44 Addend: -8 TargetName: .TOC.; 		SectionID: 3 Offset: 0; emitSection SectionID: 4 Name: .toc obj addr: 0x10022a6e9d0 new addr: 0x3fff8d1d0080 DataSize: 200 StubBufSize: 1100 Allocate: 1300; 		RelType: 50 Addend: 0 TargetName: .toc; 		This is section symbol; 		SectionID: 3 Offset: 36; 		RelType: 64 Addend: 0 TargetName: .toc; 		This is section symbol; 		SectionID: 3 Offset: 52; 		RelType: 10 Addend: 0 TargetName: _ZN7TStringC1EPKc; 		SectionID: 3 Offset: 132; Create a new stub function; 		RelType: 10 Addend: 0 TargetName: _ZN4ROOT7GetROOTEv; 		SectionID: 3 Offset: 140; Create a new stub function; 		RelType: 10 Addend: 0 TargetName: _ZN5TROOT14GetTutorialDirEv; 		SectionID: 3 Offset: 148; Create a new stub function; 		RelType: 10 Addend: 0 TargetName: _ZN7TStringC1ERKS_; 		SectionID: 3 Offset: 164; Create a new stub function; 		RelType: 50 Addend: 8 TargetName: .toc; 		This is section symbol; 		SectionID: 3 Offset: 172; 		RelType: 50 Addend: 16 TargetName: .toc; 		This is section symbol; 		SectionID: 3 Offset: 176; 		RelType: 64 Addend: 8 TargetName: .toc; 		This is section symbol; 		SectionID: 3 Offset: 180; 		RelType: 64 Addend: 16 TargetNa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-981977924:8089,Stub,StubBufSize,8089,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-981977924,1,['Stub'],['StubBufSize']
Testability,"Types.h:23:26: warning: pragma diagnostic pop could not pop, no matching push [-Wunknown-pragmas] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Math/Types.h:23:26: warning: pragma diagnostic pop could not pop, no matching push [-Wunknown-pragmas] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Math/Types.h:23:26: warning: pragma diagnostic pop could not pop, no matching push [-Wunknown-pragmas] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Math/Types.h:23:26: warning: pragma diagnostic pop could not pop, no matching push [-Wunknown-pragmas] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Math/Types.h:23:26: warning: pragma diagnostic pop could not pop, no matching push [-Wunknown-pragmas] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Math/Types.h:23:26: warning: pragma diagnostic pop could not pop, no matching push [-Wunknown-pragmas] . And 28 more. ### Failing tests:; - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_ioreadrulesfailonwarning](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4817/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_ioreadrulesfailonwarning/); - [projectroot.roottest.root.meta.genreflex.noStreamer_noInputOperator.roottest_root_meta_genreflex_noStreamer_noInputOperator_invalidNoInpuOperatorGenreflex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4817/testReport/projectroot.roottest.root.meta.genreflex/noStreamer_noInputOperator/roottest_root_meta_genreflex_noStreamer_noInputOperator_invalidNoInpuOperatorGenreflex/); - [projectroot.roottest.root.meta.genreflex.noStreamer_noInputOperator.roottest_root_meta_genreflex_noStreamer_noInputOperator_invalidNoStreamerGenreflex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4817/testReport/projectroot.roottest.root.meta.genreflex/noStreamer_noInputOperator/roottest_root_meta_genreflex_noStreame",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/831#issuecomment-325959088:1907,test,tests,1907,https://root.cern,https://github.com/root-project/root/pull/831#issuecomment-325959088,1,['test'],['tests']
Testability,"Types.h:23:26: warning: pragma diagnostic pop could not pop, no matching push [-Wunknown-pragmas] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Math/Types.h:23:26: warning: pragma diagnostic pop could not pop, no matching push [-Wunknown-pragmas] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Math/Types.h:23:26: warning: pragma diagnostic pop could not pop, no matching push [-Wunknown-pragmas] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Math/Types.h:23:26: warning: pragma diagnostic pop could not pop, no matching push [-Wunknown-pragmas] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Math/Types.h:23:26: warning: pragma diagnostic pop could not pop, no matching push [-Wunknown-pragmas] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Math/Types.h:23:26: warning: pragma diagnostic pop could not pop, no matching push [-Wunknown-pragmas] . And 28 more. ### Failing tests:; - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_ioreadrulesfailonwarning](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4819/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_ioreadrulesfailonwarning/); - [projectroot.roottest.root.meta.genreflex.noStreamer_noInputOperator.roottest_root_meta_genreflex_noStreamer_noInputOperator_invalidNoStreamerGenreflex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4819/testReport/projectroot.roottest.root.meta.genreflex/noStreamer_noInputOperator/roottest_root_meta_genreflex_noStreamer_noInputOperator_invalidNoStreamerGenreflex/); - [projectroot.roottest.root.meta.genreflex.noStreamer_noInputOperator.roottest_root_meta_genreflex_noStreamer_noInputOperator_invalidNoInpuOperatorGenreflex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4819/testReport/projectroot.roottest.root.meta.genreflex/noStreamer_noInputOperator/roottest_root_meta_genreflex_noStreamer_no",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/831#issuecomment-325951842:1904,test,tests,1904,https://root.cern,https://github.com/root-project/root/pull/831#issuecomment-325951842,1,['test'],['tests']
Testability,"Types.h:23:26: warning: pragma diagnostic pop could not pop, no matching push [-Wunknown-pragmas] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Math/Types.h:23:26: warning: pragma diagnostic pop could not pop, no matching push [-Wunknown-pragmas] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Math/Types.h:23:26: warning: pragma diagnostic pop could not pop, no matching push [-Wunknown-pragmas] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Math/Types.h:23:26: warning: pragma diagnostic pop could not pop, no matching push [-Wunknown-pragmas] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Math/Types.h:23:26: warning: pragma diagnostic pop could not pop, no matching push [-Wunknown-pragmas] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Math/Types.h:23:26: warning: pragma diagnostic pop could not pop, no matching push [-Wunknown-pragmas] . And 28 more. ### Failing tests:; - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_ioreadrulesfailonwarning](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4820/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_ioreadrulesfailonwarning/); - [projectroot.roottest.root.meta.genreflex.noStreamer_noInputOperator.roottest_root_meta_genreflex_noStreamer_noInputOperator_invalidNoStreamerGenreflex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4820/testReport/projectroot.roottest.root.meta.genreflex/noStreamer_noInputOperator/roottest_root_meta_genreflex_noStreamer_noInputOperator_invalidNoStreamerGenreflex/); - [projectroot.roottest.root.meta.genreflex.noStreamer_noInputOperator.roottest_root_meta_genreflex_noStreamer_noInputOperator_invalidNoInpuOperatorGenreflex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4820/testReport/projectroot.roottest.root.meta.genreflex/noStreamer_noInputOperator/roottest_root_meta_genreflex_noStreamer_no",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/831#issuecomment-325953285:1904,test,tests,1904,https://root.cern,https://github.com/root-project/root/pull/831#issuecomment-325953285,1,['test'],['tests']
Testability,"Typical example is:. ```; auto h1 = new TH1I(Form(""name%d"",i),Form(""title%d"",i), 100, 0, 100);; ```. Similar interface was used when creating branches. Extreme case when:. ```; Form(""%s_somthing"", Form(""incpsulated%d"", cnt));; ```. In all these places use `TString::Format` instead which returns `TString` instance. Do same in `tmva/tests` and `tmva/tmvagui`. Fixes: https://github.com/root-project/root/issues/13136",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13433:333,test,tests,333,https://root.cern,https://github.com/root-project/root/pull/13433,1,['test'],['tests']
Testability,Typical unrelated test failure that is caused by `llvm::identify_magic`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10825#issuecomment-1168059023:18,test,test,18,https://root.cern,https://github.com/root-project/root/pull/10825#issuecomment-1168059023,2,['test'],['test']
Testability,"U1&&, _U2&&) [with _U1 = int; _U2 = int; &lt;template-parameter-2-3&gt; = void; _T1 = double; _T2 = double]’ . ### Warnings:; - [2021-07-22T15:12:08.350Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:25:91: warning: declaration of ‘calculation_is_clean’ shadows a member of ‘RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-07-22T15:12:08.350Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:25:91: warning: declaration of ‘likelihood’ shadows a member of ‘RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-07-22T15:12:10.265Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-07-22T15:12:10.265Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-07-22T15:12:10.266Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:79:109: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-07-22T15:12:10.266Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:79:109: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-07-22T15:12:10.266Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:88:35: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-07-22T15:12:10.266Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-884992866:8205,Test,TestStatistics,8205,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-884992866,1,['Test'],['TestStatistics']
Testability,"U1&&, _U2&&) [with _U1 = int; _U2 = int; &lt;template-parameter-2-3&gt; = void; _T1 = double; _T2 = double]’ . ### Warnings:; - [2021-09-02T11:39:10.396Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:25:91: warning: declaration of ‘calculation_is_clean’ shadows a member of ‘RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-09-02T11:39:10.397Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:25:91: warning: declaration of ‘likelihood’ shadows a member of ‘RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-09-02T11:39:11.738Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-02T11:39:11.738Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-02T11:39:11.738Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:79:109: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-02T11:39:11.738Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:79:109: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-02T11:39:11.738Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:88:35: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-02T11:39:11.738Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-911573431:4880,Test,TestStatistics,4880,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-911573431,1,['Test'],['TestStatistics']
Testability,"U1&&, _U2&&) [with _U1 = int; _U2 = int; &lt;template-parameter-2-3&gt; = void; _T1 = double; _T2 = double]’ . ### Warnings:; - [2021-09-03T11:32:20.771Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:41:91: warning: declaration of ‘calculation_is_clean’ shadows a member of ‘RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-09-03T11:32:20.771Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:41:91: warning: declaration of ‘likelihood’ shadows a member of ‘RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-09-03T11:32:22.784Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-03T11:32:22.784Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-03T11:32:22.784Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:84:109: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-03T11:32:22.784Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:84:109: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-03T11:32:22.785Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:101:35: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-03T11:32:22.785Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-912469739:4882,Test,TestStatistics,4882,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-912469739,1,['Test'],['TestStatistics']
Testability,"U1&&, _U2&&) [with _U1 = int; _U2 = int; &lt;template-parameter-2-3&gt; = void; _T1 = double; _T2 = double]’ . ### Warnings:; - [2021-09-07T09:16:38.334Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:41:91: warning: declaration of ‘calculation_is_clean’ shadows a member of ‘RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-09-07T09:16:38.334Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:41:91: warning: declaration of ‘likelihood’ shadows a member of ‘RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-09-07T09:16:39.551Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-07T09:16:39.551Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-07T09:16:39.551Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:84:109: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-07T09:16:39.551Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:84:109: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-07T09:16:39.551Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:101:35: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-07T09:16:39.551Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-914137534:4882,Test,TestStatistics,4882,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-914137534,1,['Test'],['TestStatistics']
Testability,"UE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case. ```; art: /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837: void clang::ClassTemplateSpecializationDecl::setInstantiationOf(clang::ClassTemplatePartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4911d in getPatternForClassTemplateSpecialization (S=..., PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2500. #6 0x00007fffe3d492c6 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2538. #7 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff53a0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462:1888,test,test-products,1888,https://root.cern,https://github.com/root-project/root/pull/5462,1,['test'],['test-products']
Testability,UI .................................................................***Failed Error regular expression found in output. Regex=[: error:] 8.76 sec ; - 632/1540 Test #544: tutorial-tmva-keras-LaunchMultiGUI ................................................................***Failed Error regular expression found in output. Regex=[: error:] 2.16 sec ; - 633/1540 Test #545: tutorial-tmva-keras-LaunchRegGUI ..................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.12 sec . And 1 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressgraphics](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18115/testReport/projectroot/test/test_stressgraphics/); - [projectroot.test.test_stresslinear](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18115/testReport/projectroot/test/test_stresslinear/); - [projectroot.runtutorials.tutorial_hist_FirstContour](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18115/testReport/projectroot/runtutorials/tutorial_hist_FirstContour/); - [projectroot.runtutorials.tutorial_xml_xmlnewfile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18115/testReport/projectroot/runtutorials/tutorial_xml_xmlnewfile/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18115/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.test.test_vvector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18115/testReport/projectroot/test/test_vvector/); - [projectroot.test.test_vmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18115/testReport/projectroot/test/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1365#issuecomment-368172803:2595,test,test,2595,https://root.cern,https://github.com/root-project/root/pull/1365#issuecomment-368172803,1,['test'],['test']
Testability,"UILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1580; #14 0x00001508934f3f03 in cling::utils::CreateNestedNameSpecifierForScopeOf (Ctx=..., TypePtr=0x7e9b0a0, FullyQualified=true, Spec=0x9549268) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621; #15 0x00001508934f4573 in cling::utils::TypeName::GetFullyQualifiedType (QT=..., Ctx=..., Spec=0x9549268) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760; #16 0x00001508934f478e in cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) (QT=..., Ctx=..., Spec=0x9549268) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805; #17 0x0000150892e25603 in ROOT::TMetaUtils::GetFullyQualifiedTypeName (typenamestr=..., qtype=..., astContext=..., Spec=0x9549268) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3497; #18 0x0000150892e256e6 in ROOT::TMetaUtils::GetFullyQualifiedTypeName (typenamestr=..., qtype=..., interpreter=..., Spec=0x9549268) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3515; #19 0x00001508931b6966 in TClingDataMemberInfo::TypeName (this=0xb2bf6c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16232#issuecomment-2331366418:9024,test,tests,9024,https://root.cern,https://github.com/root-project/root/pull/16232#issuecomment-2331366418,2,['test'],"['testBuildDir', 'tests']"
Testability,"UILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79; #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51; #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42; #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163; #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103; #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16232#issuecomment-2332005936:3612,test,tests,3612,https://root.cern,https://github.com/root-project/root/pull/16232#issuecomment-2332005936,2,['test'],"['testBuildDir', 'tests']"
Testability,"UNIX terminals, e.g. vt100, send escape sequences for many special key combinations. Entering the history search mode assigned a specific meaning to the `ESC` character and disabled the processing of escape sequences, thus accidentally printing some characters that are part of a CSI. As a workaround, avoid changing the meaning of `ESC`; users can still use the well-known `ESC ESC` sequence (or any other editor command, e.g. move left/right) to exit the history search mode. This change only affects UNIX terminals. Closes issue #10209. ## Checklist:; - [X] tested changes locally. This PR fixes #10209.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10281:561,test,tested,561,https://root.cern,https://github.com/root-project/root/pull/10281,1,['test'],['tested']
Testability,"UPDATE:; The RDataFrame created in each task can now be modified with the correct entry range of the task via an internal function. The internal representation in case of an RDataFrame with no data source has been modified to store a pair of integers indicating the range, instead of only one integer. This is only for internal purposes, the public API is unchanged. See https://github.com/root-project/roottest/pull/923 for test changes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11843:425,test,test,425,https://root.cern,https://github.com/root-project/root/pull/11843,1,['test'],['test']
Testability,"Ugh, this one might become tricky, even LLVM upstream is unable to handle exceptions during JIT: I tested the most basic; ```c++; int main() {; try {; throw 1;; } catch (...) { }; }; ```; compiled with `./bin/clang++ -S -emit-llvm throw.cc` and interpreted using `./bin/lli throw.ll`, resulting in; ```; libc++abi.dylib: terminating with uncaught exception of type int; PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace.; Stack dump:; 0. Program arguments: ./bin/lli throw.ll; Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):; 0 lli 0x000000010104824c llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56; 1 lli 0x00000001010471b4 llvm::sys::RunSignalHandlers() + 128; 2 lli 0x00000001010488c4 SignalHandler(int) + 304; 3 libsystem_platform.dylib 0x00000001826b1c44 _sigtramp + 56; 4 libsystem_pthread.dylib 0x0000000182669c24 pthread_kill + 292; 5 libsystem_c.dylib 0x00000001825b1864 abort + 104; 6 libc++abi.dylib 0x0000000182629cf8 __cxxabiv1::__aligned_malloc_with_fallback(unsigned long) + 0; 7 libc++abi.dylib 0x000000018261ae4c demangling_unexpected_handler() + 0; 8 libobjc.A.dylib 0x00000001825136d8 _objc_terminate() + 160; 9 libc++abi.dylib 0x00000001826290e0 std::__terminate(void (*)()) + 20; 10 libc++abi.dylib 0x000000018262beb0 __cxa_get_exception_ptr + 0; 11 libc++abi.dylib 0x000000018262be5c __cxxabiv1::exception_cleanup_func(_Unwind_Reason_Code, _Unwind_Exception*) + 0; 12 libc++abi.dylib 0x000000010224003c __cxxabiv1::exception_cleanup_func(_Unwind_Reason_Code, _Unwind_Exception*) + 18446744071557956064; 13 lli 0x0000000100c8f680 llvm::MCJIT::runFunction(llvm::Function*, llvm::ArrayRef<llvm::GenericValue>) + 768; 14 lli 0x0000000100bd574c llvm::ExecutionEngine::runFunctionAsMain(llvm::Function*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7541#issuecomment-801803930:99,test,tested,99,https://root.cern,https://github.com/root-project/root/issues/7541#issuecomment-801803930,1,['test'],['tested']
Testability,"Uh, thank you alot for your contribution! This corner-case should be added to the tests as well. This would go into `bindings/pyroot_experimental/PyROOT/test/array_interface.py`. Could you add a test there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3528#issuecomment-472335560:82,test,tests,82,https://root.cern,https://github.com/root-project/root/pull/3528#issuecomment-472335560,3,['test'],"['test', 'tests']"
Testability,"Uh, this compiles with gcc 12 and C++17, does not compile with clang 13 or gcc 12 and C++14:. ```cpp; #include <vector>. template <template <typename> class Coll_t> int foo() {; Coll_t<int> t;; return t.size();; }. int main() { return foo<std::vector>(); }; ```. I have to find another way to parameterize the test case over the collection type.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10665#issuecomment-1142662516:310,test,test,310,https://root.cern,https://github.com/root-project/root/pull/10665#issuecomment-1142662516,1,['test'],['test']
Testability,Uhm are there tests for this logic anywhere? Could not find them in source or in roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6080#issuecomment-664172976:14,test,tests,14,https://root.cern,https://github.com/root-project/root/pull/6080#issuecomment-664172976,2,"['log', 'test']","['logic', 'tests']"
Testability,"Uhm no, `gtest-roofit-RDataFrameHelpers-test-testActionHelpers` is unrelated to the changes in cb41756 (which I will review properly as soon as possible)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7469#issuecomment-796752322:40,test,test-testActionHelpers,40,https://root.cern,https://github.com/root-project/root/pull/7469#issuecomment-796752322,1,['test'],['test-testActionHelpers']
Testability,"Uhm what also doesn't work is the following:. ```python; >>> import ROOT; >>> x = ROOT.RVec['float'](); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 222, in _getattr; return getattr(self, name); File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 192, in _fallback_getattr; raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); AttributeError: Failed to get attribute RVec from ROOT; ```. But we don't have any test coverage because all tests were written before we made `RVec` accessible from the `ROOT` namespace. I'm going to fix that!. Edit: It's a long standing issue, see #7687 or #5361 or https://sft.its.cern.ch/jira/browse/ROOT-10688.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-806621688:542,test,test,542,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-806621688,2,['test'],"['test', 'tests']"
Testability,"Uhm....so this gtest:; ```c++; auto m = tdf.Min<double>(""x"");; double runningMin = std::numeric_limits<double>::max();; m.OnPartialResult(2, [&runningMin](double x) {; runningMin = x;; });; EXPECT_DOUBLE_EQ(runningMin, *m); ; ```; results in this error:; ```; [ RUN ] TDFCallbacks.Min; /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/treeplayer/test/dataframe/dataframe_callbacks.cxx:126: Failure; Expected: runningMin; Which is: 1.7976931348623157e+308; To be equal to: *m; Which is: -3.0919523479251314; [ FAILED ] TDFCallbacks.Min (0 ms); ```; only on mac1012 and only for `Min` and `Max` which have the same kind of callback logic.; Do lambda captures work differently on mac? I'm stumped.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-333661341:376,test,test,376,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-333661341,2,"['log', 'test']","['logic', 'test']"
Testability,Uncomment some different code that is used to compute the discriminat of the; resolvent cubic equation used to find the roots of a quartic equation. ; This different code seems to be better numerically. . This fixes #6900. Add tests for quartic equations to validate code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6908:227,test,tests,227,https://root.cern,https://github.com/root-project/root/pull/6908,1,['test'],['tests']
Testability,Unconditionally disable multiproc tests on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12693:34,test,tests,34,https://root.cern,https://github.com/root-project/root/pull/12693,1,['test'],['tests']
Testability,Undesired behaviour with SetRangeUser & Draw->(“same”) & Log Scale,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12415:57,Log,Log,57,https://root.cern,https://github.com/root-project/root/pull/12415,1,['Log'],['Log']
Testability,"Unfortunately I don't think such a design works. Not with an `std::unique_ptr`. For such a forward declaration you **must** use `new` and `delete` in the source file... (Of `ROOT::RTaskArena`.). I just tried it myself with the following, just to be sure that GCC would not allow this. (I know that Clang doesn't...). ```; [bash][Legolas]:build > ls -l ../ROpaqueTaskArena/; total 20; -rw-rw-r-- 1 krasznaa krasznaa 466 Jan 19 14:38 CMakeLists.txt; -rw-rw-r-- 1 krasznaa krasznaa 206 Jan 19 14:31 ROpaqueTaskArena.hxx; -rw-rw-r-- 1 krasznaa krasznaa 148 Jan 19 14:35 RTaskArena.cxx; -rw-rw-r-- 1 krasznaa krasznaa 339 Jan 19 14:34 RTaskArena.hxx; -rw-rw-r-- 1 krasznaa krasznaa 99 Jan 19 14:35 test.cxx; [bash][Legolas]:build > more ../ROpaqueTaskArena/CMakeLists.txt . # Set up the project.; cmake_minimum_required( VERSION 3.1 ); project( ROpaqueTaskArenaTest VERSION 1.0.0 LANGUAGES CXX ). # Find TBB.; find_package( TBB REQUIRED ). # Build the shared library.; add_library( TaskArenaLib SHARED RTaskArena.hxx RTaskArena.cxx; ROpaqueTaskArena.hxx ); target_link_libraries( TaskArenaLib PUBLIC TBB::tbb ). # Build the test executable.; add_executable( TaskArenaTest test.cxx ); target_link_libraries( TaskArenaTest PRIVATE TaskArenaLib ); [bash][Legolas]:build > more ../ROpaqueTaskArena/ROpaqueTaskArena.hxx ; #ifndef TEST_ROPAQUETASKARENA_HXX; #define TEST_ROPAQUETASKARENA_HXX. // TBB include(s).; #include <tbb/task_arena.h>. class ROpaqueTaskArena : public tbb::task_arena {};. #endif // TEST_ROPAQUETASKARENA_HXX; [bash][Legolas]:build > more ../ROpaqueTaskArena/RTaskArena.hxx ; #ifndef TEST_RTASKARENA_HXX; #define TEST_RTASKARENA_HXX. // System include(s).; #include <memory>. // Forward declaration(s).; class ROpaqueTaskArena;. class RTaskArena {; public:; /// Default constructor; RTaskArena();. private:; /// Task arena object; std::unique_ptr<ROpaqueTaskArena> fTaskArena;; };. #endif // TEST_RTASKARENA_HXX; [bash][Legolas]:build > more ../ROpaqueTaskArena/RTaskArena.cxx. // Local inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7062#issuecomment-762847080:693,test,test,693,https://root.cern,https://github.com/root-project/root/pull/7062#issuecomment-762847080,1,['test'],['test']
Testability,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15797#issuecomment-2158390462:285,test,tests,285,https://root.cern,https://github.com/root-project/root/pull/15797#issuecomment-2158390462,2,['test'],['tests']
Testability,Unfortunately that's not the case. Developments in cling are quite coupled to the tests -- for example PR #5884 is blocked due to such failures. My experience is that those stress tests are actually quite useful when making changes to core of ROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6019#issuecomment-656639639:82,test,tests,82,https://root.cern,https://github.com/root-project/root/pull/6019#issuecomment-656639639,2,['test'],['tests']
Testability,"Unfortunately the projectroot.roottest.root.io.double32.roottest_root_io_double32_make failure is a real issue. It, surpringly, fails to merge some consecutive `Double32_t` data member that it was able to before (so the issue appear in `TStreamerInfo::Compile`):; ```; - i= 3, ff2 type= 29, offset= [deleted from log], len=4, method= [deleted from log] [optimized]; - i= 4, ff4 type= 49, offset= [deleted from log], len=1, method= [deleted from log]; + i= 3, ff2 type= 29, offset= [deleted from log], len=3, method= [deleted from log]; + i= 4, ff3 type= 9, offset= [deleted from log], len=1, method= [deleted from log]; + i= 5, ff4 type= 49, offset= [deleted from log], len=1, method= [deleted from log]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9008#issuecomment-921724322:313,log,log,313,https://root.cern,https://github.com/root-project/root/pull/9008#issuecomment-921724322,10,['log'],['log']
Testability,Unfortunately the second reproducer still fails for me in `master` - probably because of my last commit to make the tests pass on macOS :neutral_face:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10049#issuecomment-1853604257:116,test,tests,116,https://root.cern,https://github.com/root-project/root/issues/10049#issuecomment-1853604257,1,['test'],['tests']
Testability,"Unfortunately this only solves half of the problem, now we have; ```; <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch; <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'; ```; If we had assertions enabled (we probably should for `mac-beta`...), we would instead see; ```; Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14903#issuecomment-1983103890:370,test,test,370,https://root.cern,https://github.com/root-project/root/pull/14903#issuecomment-1983103890,3,"['Assert', 'assert', 'test']","['Assertion', 'assertions', 'test']"
Testability,"Unfortunately, this had to be reverted, as it failed the included test in many of the nightly builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1327#issuecomment-349213020:66,test,test,66,https://root.cern,https://github.com/root-project/root/pull/1327#issuecomment-349213020,1,['test'],['test']
Testability,Unit test failures look like infrastructure issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1039#issuecomment-331459237:5,test,test,5,https://root.cern,https://github.com/root-project/root/pull/1039#issuecomment-331459237,1,['test'],['test']
Testability,Unit tests for Pythonizations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2449:5,test,tests,5,https://root.cern,https://github.com/root-project/root/pull/2449,1,['test'],['tests']
Testability,Unit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36146/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_CladDerivatorTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36146/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_CladDerivatorTests/); - [projectroot.math.mathmore.test.mathmore_testDerivation](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36146/testReport/projectroot.math.mathmore/test/mathmore_testDerivation/); - [projectroot.core.thread.test.gtest_core_thread_test_corethreadtestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36146/testReport/projectroot.core.thread/test/gtest_core_thread_test_corethreadtestUnit/); - [projectroot.math.vecops.test.gtest_math_vecops_test_vecops_rvec](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36146/testReport/projectroot.math.vecops/test/gtest_math_vecops_test_vecops_rvec/); - [projectroot.test.test_stressmathcore_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36146/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.test.test_stressIOPlugins_http](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36146/testReport/projectroot/test/test_stressIOPlugins_http/); - [projectroot.test.test_stressIOPlugins_xroot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36146/testReport/projectroot/test/test_stressIOPlugins_xroot/); - [projectroot.tmva.tmva.test.DNN.RNN.TMVA_DNN_RNN_Forward_Cpu](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36146/testReport/projectroot.tmva.tmva.test.DNN/RNN/TMVA_DNN_RNN_Forward_Cpu/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36146/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/). A,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411122149:1199,test,test,1199,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411122149,1,['test'],['test']
Testability,"Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:; Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:; An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally; - [ not needed ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11183:1300,test,tested,1300,https://root.cern,https://github.com/root-project/root/pull/11183,1,['test'],['tested']
Testability,"Unlike in the old RooFit, the PDF was not cloned in the BatchMode when a; likelihood object was created with `RooAbsPdf::createNLL`. This caused; trouble in a few places, because changing the state of the NLL changed; the state of the original model. Actually, the model was already cloned when a RooSimultaneous was used,; and because the cloning is only expensive for large simultaneous models,; this change is not expected to have a negative performance impact for; realistic workflows. The `testRooSimultaneous` closure test with a one-channel; RooSimultaneous is now extended to use also the BatchMode, because this; was one of the cases where it failed before the suggested change in this; commit. This PR includes a second technical commit with some code modernization in `stressRooFit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11406:495,test,testRooSimultaneous,495,https://root.cern,https://github.com/root-project/root/pull/11406,2,['test'],"['test', 'testRooSimultaneous']"
Testability,"Unloading/PCH/VTables.C' FAILED ********************; 1: Script:; 1: --; 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true; 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch""; 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: --; 1: Exit Code: 1; 1: ; 1: Command Output (stderr):; 1: --; 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input; 1: // CHECK: I was executed; 1:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10693:1528,test,test,1528,https://root.cern,https://github.com/root-project/root/issues/10693,1,['test'],['test']
Testability,"Unnamed macro is a root feature. standalone cling does not support it. In a cling test case `root/interpreter/cling/test/Prompt/MetaProcessor/Macros.C`, it is stated that ""This test should test the unnamed macro support once it is moved in cling."" So cling does not support it yet. Personally I would suggest cling to never support it unless future c++ standard supports similar construct. https://root-forum.cern.ch/t/what-is-the-difference-between-unnamed-macro-and-named-macro/30455 discouraged usage of unnamed macro in root too though I do not know if it is cling's current position. @Axel-Naumann what is cling's future plan on unnamed macro?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11299#issuecomment-1234135176:82,test,test,82,https://root.cern,https://github.com/root-project/root/issues/11299#issuecomment-1234135176,4,['test'],['test']
Testability,"Unrelated note. > auto view = ntuple->GetView<float>(""double"");; > modelA->MakeField<std::int32_t>(""int"", 42);. We strive/want to have the name of the column to be usable identifiers (so that they can be used in reading code as-if they actually were identifier (See TTree::Draw syntax and RDataFrame). Could you (likely in a separate/new PR) update the test/example to not use just the datatype as column names?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8227#issuecomment-846080791:353,test,test,353,https://root.cern,https://github.com/root-project/root/pull/8227#issuecomment-846080791,1,['test'],['test']
Testability,Unrelated test error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11141#issuecomment-1209279850:10,test,test,10,https://root.cern,https://github.com/root-project/root/pull/11141#issuecomment-1209279850,1,['test'],['test']
Testability,Unrelated test failures,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11115#issuecomment-1207739735:10,test,test,10,https://root.cern,https://github.com/root-project/root/pull/11115#issuecomment-1207739735,1,['test'],['test']
Testability,Until failures on Linux Fedora 39 are understood. This PR is marked as emergency since all fedora39 builds are failing because of this test failure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16684:135,test,test,135,https://root.cern,https://github.com/root-project/root/pull/16684,1,['test'],['test']
Testability,"Up to now comments were ignored:; ```; ClassDefOverride(name,version) // class comments; ```. Also fix error of accessing transient memory. Solves some test errors in #9932 . And should fix #9900.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9934:152,test,test,152,https://root.cern,https://github.com/root-project/root/pull/9934,1,['test'],['test']
Testability,"Up to now there was no way to draw open marker symbols or marker symbols consisting of lines with higher linewidths than the default 1.; I looked into several ways to implement this feature and at the end just added additional marker smbols above the current maximum of 50 with wider lines as proposed by @couet in #4721 . This example plot demonstrates the feature:; ![c2](https://user-images.githubusercontent.com/5320187/72336265-b7977a80-36c0-11ea-8d25-3e3aa0697211.png). Please note that I tested the feature as far as I could. However, I don't have a ROOT installation on Windows or a Mac, so I could not test the corresponding implementations which is why I consider further tests (and especially a build test) mandatory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4772:495,test,tested,495,https://root.cern,https://github.com/root-project/root/pull/4772,4,['test'],"['test', 'tested', 'tests']"
Testability,Update Enable If pattern in GenVector Vc test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/431:41,test,test,41,https://root.cern,https://github.com/root-project/root/pull/431,1,['test'],['test']
Testability,Update root welcome logo to current year,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1935:20,log,logo,20,https://root.cern,https://github.com/root-project/root/pull/1935,1,['log'],['logo']
Testability,Update zlib to 1.2.8 released in Apr 2013. This is a battle tested; version which is used as a base for QAT and Cloudflare zlib forks. roottest passed with no additional issues. Signed-off-by: David Abdurachmanov <David.Abdurachmanov@cern.ch>,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/663:60,test,tested,60,https://root.cern,https://github.com/root-project/root/pull/663,1,['test'],['tested']
Testability,"Update. The issue appears to be some sort of race-like condition in the build configuration, as disabling parallel builds. ```; cmake --build . 2>&1 | tee ../build.log; ```. works just fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6366#issuecomment-693495920:164,log,log,164,https://root.cern,https://github.com/root-project/root/issues/6366#issuecomment-693495920,1,['log'],['log']
Testability,"Update: After further testing, it works in 6.20.04 and breaks in in 6.20.06 and thereafter. I’ll look into the particular release notes for more information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8250#issuecomment-854810353:22,test,testing,22,https://root.cern,https://github.com/root-project/root/issues/8250#issuecomment-854810353,1,['test'],['testing']
Testability,Update: I can reproduce this with the (for our tests nicer) case; ```bash; mkdir cling; chmod a-xr cling; root; ```; which gives the same diagnostics as above.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12409#issuecomment-1453154771:47,test,tests,47,https://root.cern,https://github.com/root-project/root/issues/12409#issuecomment-1453154771,1,['test'],['tests']
Testability,"Update: I have moved `NumericalDerivatorMinuit2` from roofitcore into Minuit2 and, of course, renamed it into `Minuit2::NumericalDerivator`. Originally, @lmoneta's NumericalDerivator was in mathcore. However, I think it fits well in Minuit2 as well, since the algorithms exactly try to mimic Minuit2's. Also, I have added some depedencies to Minuit2 parameter transformations that I think make it an even more logical fit in Minuit2 than to have to make mathcore depend on Minuit2. I guess in the end it's an arbitrary choice.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8567#issuecomment-875917554:410,log,logical,410,https://root.cern,https://github.com/root-project/root/pull/8567#issuecomment-875917554,1,['log'],['logical']
Testability,"Update: another problem which seems connected with this change is that **PyRDF** and **gaudi_tests** fail for the **optimized** builds, the only one we can test (see, for example, [here](http://cdash.cern.ch/testDetails.php?test=11740534&build=140717) and [here](http://cdash.cern.ch/testDetails.php?test=11738354&build=140717)). So all the LCG nightlies seem to be affected now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015620171:156,test,test,156,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015620171,5,['test'],"['test', 'testDetails']"
Testability,"Update: the latest version of the patch (`constexpr` data member + declaration in source) is in line with the first attempt (out of class definition of the data member); ```; master-2023-12-18-knpos-constexpr-plus-out-of-class-run.log; 307; master-2023-12-18-knpos-out-of-class-run.log; 307; ```; Also, the symbol is present only once throughout the compiled libraries; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14261#issuecomment-1860040412:231,log,log,231,https://root.cern,https://github.com/root-project/root/pull/14261#issuecomment-1860040412,2,['log'],['log']
Testability,Update: this is what I could come up with to resolve the ambiguity: https://github.com/root-project/root/commit/08ca2bbd6dd195daa1d6f635f6a5e8fed5ef4fd4 -- will propose a PR after adding a test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-854878120:189,test,test,189,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-854878120,1,['test'],['test']
Testability,"Update:; Unfortunately, I couldn't manage to make docker container with both pyROOT and X11 graphics running...; So I don't have a nice reproducible for Oliver yet... However, I have tried to reproduce the same problem with plain C++.; And I have noticed something weird, when I try to match python code logic with:. ```cpp; //test.cpp; void test(){; ROOT::EnableImplicitMT();. ROOT::RDataFrame df = ROOT::RDataFrame(10);; auto df2 = df.Define(""x"", ""rdfentry_"").Define(""x2"", ""rdfentry_*rdfentry_"");; ; std::vector<TH1D*> histos;; auto h1 = df2.Histo1D({""h1"", ""h1; x; x"", 100, 0, 100}, ""x"");; auto h2 = df2.Histo1D({""h2"", ""h2; x; x2"", 100, 0, 100}, ""x2"");; histos.push_back(h1.GetPtr());; histos.push_back(h2.GetPtr());. for (auto* h : histos){; TCanvas* canvas = new TCanvas( Form(""%s"", h->GetName()) );; h->DrawClone();; std::cout<<""Successfully plotted the histogram. Please type something to get the next one: ""<<std::endl;; std::string dummy;; std::cin>> dummy;; }; }; ```; After running `root test.cpp` I get the output in the following order:. 1. ""Successfully plotted the histogram. Please type something to get the next one:"" from std::cout; 2. I send ""42"" for std::cin request; 3. ""Successfully plotted the histogram. Please type something to get the next one:"" from std::cout; **and single blank canvas appears**; 4. I send ""42"" for std::cin request; 5. **Two canvases filled with two histograms appear**. The order seems off from expected ""histogram per iteration"" logic and plotting happens at the very end of the for loop.; @couet could you reproduce this?. I assume this is reasonable with `ROOT::EnableImplicitMT();`, if the same happens with python then not all canvases might be alive in the end.. So far I couldn't get a seg. fault crash with C++. @eguiraud did you manage to reproduce it with lxplus or on your local setup?; If you have it reproducible on lxplus, maybe you can share it with Oliver.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1487016637:304,log,logic,304,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1487016637,5,"['log', 'test']","['logic', 'test']"
Testability,Updated EvaluateAllMethods to output confusion matrix and 1vsRest data for both test data and training data for easier overtraining check. The TMVAMultiClassGui now supports generating 1v1 roc curves. Fixes bug where generated multiclass roc curves were not save to disk when created. Adds correctness tests for the ROCCurve class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/707:80,test,test,80,https://root.cern,https://github.com/root-project/root/pull/707,2,['test'],"['test', 'tests']"
Testability,"Updated code the test unit, all tests for TMVA are OK!. Cheers,; Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/129:17,test,test,17,https://root.cern,https://github.com/root-project/root/pull/129,2,['test'],"['test', 'tests']"
Testability,"Updated docs, run clang-tidy on the modified file and squashed to one commit. If tests pass I will merge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8934#issuecomment-910392099:81,test,tests,81,https://root.cern,https://github.com/root-project/root/pull/8934#issuecomment-910392099,1,['test'],['tests']
Testability,Updated the reference file for ATLAS in stressGeometry test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3175:55,test,test,55,https://root.cern,https://github.com/root-project/root/pull/3175,1,['test'],['test']
Testability,"Updated to address the C++20ism and a few of the comments in #13000. In particular:. * Almost drop in replacement by exposing just an expand() method.; * Now also used in the SourceManager, for and additional gain of ~ 10 MB on the initial ROOT overhead (from 82 to 53MB in my synthetic test).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13641#issuecomment-1717224870:287,test,test,287,https://root.cern,https://github.com/root-project/root/pull/13641#issuecomment-1717224870,1,['test'],['test']
Testability,Updated to remove the unnecessary bits from the CMakeLists for the tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7260#issuecomment-802252062:67,test,tests,67,https://root.cern,https://github.com/root-project/root/pull/7260#issuecomment-802252062,1,['test'],['tests']
Testability,"Updated, fixed a typo in one of the windows-only CMake files, fixed a few more differences between what headers are installed and formatted everything. Can someone give it a test install to double-check the headers?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/767#issuecomment-318635100:174,test,test,174,https://root.cern,https://github.com/root-project/root/pull/767#issuecomment-318635100,1,['test'],['test']
Testability,"Updates on the failing tests:; * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there.; * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6570#issuecomment-720955137:23,test,tests,23,https://root.cern,https://github.com/root-project/root/pull/6570#issuecomment-720955137,2,['test'],"['test', 'tests']"
Testability,"Updates:; * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper; * Added the logic for merging results of `Histo1D` action. ; * Define `GetMergeableValue` in the `FillHelper` action helper; * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation; * Add a test for merging two 1D histograms. TODO:; - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper.; - [x] Add other mergeable values.; - [x] Add docs.; - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5552#issuecomment-625840667:24,log,logic,24,https://root.cern,https://github.com/root-project/root/pull/5552#issuecomment-625840667,4,"['log', 'test']","['logic', 'test']"
Testability,Updating CMake typo in tree test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2909:28,test,test,28,https://root.cern,https://github.com/root-project/root/pull/2909,1,['test'],['test']
Testability,Updating size of the file for stress test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2938:37,test,test,37,https://root.cern,https://github.com/root-project/root/pull/2938,1,['test'],['test']
Testability,"Uploading the logic for discussion. This needs a test that actually pinpoints the problem. Brief description of original issue: ; When launching a distributed RDF application with Dask from SWAN (and only specifically from SWAN) to a cluster of VMs, a `ModuleNotFoundError` is triggered for a missing `pyspark` module, even though the application doesn't use Spark in any way. At the moment this issue cannot be reproduced launching the same application from one of the VMs to the others or on my local machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9972:14,log,logic,14,https://root.cern,https://github.com/root-project/root/pull/9972,2,"['log', 'test']","['logic', 'test']"
Testability,"Upon creating an RNTupleInspector, we check whether the compression settings are consistent across all columns. Some column ranges may have been constructed upon read (e.g. in the context of late model extension) and therefore have no compression settings to begin with. These column ranges should not cause the RNTupleInspector to throw. This PR partially addresses #15661. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15759:381,test,tested,381,https://root.cern,https://github.com/root-project/root/pull/15759,1,['test'],['tested']
Testability,"Upon further testing, `TList::FindObject()` has the same nullptr dereference issue (line 547).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/719#issuecomment-312225504:13,test,testing,13,https://root.cern,https://github.com/root-project/root/pull/719#issuecomment-312225504,1,['test'],['testing']
Testability,"Ups, logged in with wrong user, the last post was by @dennisklein",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/916#issuecomment-326542136:5,log,logged,5,https://root.cern,https://github.com/root-project/root/pull/916#issuecomment-326542136,1,['log'],['logged']
Testability,"Upstream moved away from manually declaring `*def` and `*inc` files. These are now auto-generated with tablegen. This patch does the same for cling, making it easier to rebase and maintain. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14628:255,test,tested,255,https://root.cern,https://github.com/root-project/root/pull/14628,1,['test'],['tested']
Testability,"Usages of `testing::internal::CaptureStd(err|out)` in RDataFrame tests:. ```; ~/W/R/root (credit_rquaglia) git grep -n 'CaptureStd\(err\|out\)' -- tree/dataframe/test/; tree/dataframe/test/dataframe_cache.cxx:148: testing::internal::CaptureStderr();; tree/dataframe/test/dataframe_nodes.cxx:55: testing::internal::CaptureStderr();; tree/dataframe/test/dataframe_nodes.cxx:79: testing::internal::CaptureStdout();; tree/dataframe/test/dataframe_report.cxx:22: testing::internal::CaptureStdout();; tree/dataframe/test/dataframe_report.cxx:72: testing::internal::CaptureStdout();; tree/dataframe/test/dataframe_report.cxx:81: testing::internal::CaptureStdout();; tree/dataframe/test/dataframe_snapshot.cxx:141: testing::internal::CaptureStderr();; tree/dataframe/test/dataframe_snapshot.cxx:686: testing::internal::CaptureStderr();; tree/dataframe/test/dataframe_snapshot.cxx:700: testing::internal::CaptureStderr();; ````; For example, https://github.com/root-project/root/blob/master/tree/dataframe/test/dataframe_snapshot.cxx#L141-L143 for checking that no error is printed, or https://github.com/root-project/root/blob/master/tree/dataframe/test/dataframe_snapshot.cxx#L686-L694 to check that an error is printed and the message is what we expect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5297#issuecomment-620060541:11,test,testing,11,https://root.cern,https://github.com/root-project/root/pull/5297#issuecomment-620060541,23,['test'],"['test', 'testing', 'tests']"
Testability,Use CMAKE_BINARY_DIRECTORY/ginclude instead of /include for tmva/sofie/test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8809:71,test,test,71,https://root.cern,https://github.com/root-project/root/pull/8809,1,['test'],['test']
Testability,Use CMake logical operator AND,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5509:10,log,logical,10,https://root.cern,https://github.com/root-project/root/pull/5509,1,['log'],['logical']
Testability,Use RSofieReader in the PyTorch parser to Model. This avoids having some PyTorch error or warnings when generating the models that were triggering a build failure in the CI. Now in the PyTorch parser tests the ; model parsing and evaluation using SOFIE can be done all at once by using the RSofieReader class. Use .keras instead of .h5 for saving keras models in the TestRModelParserKeras to avoid a warning when building. From tensorflow 2.13 it is reccomended to use .keras for the saved keras files instead of .h5.; .h5 file are still used instead for the PyKeras tests to avoid failures seen when using .keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13533:200,test,tests,200,https://root.cern,https://github.com/root-project/root/pull/13533,3,"['Test', 'test']","['TestRModelParserKeras', 'tests']"
Testability,"Use RWebWindow for main widget with buttons, help widget with infos and web-based geometry viewer for geometry display. This requires number of changes in base RWebWindow class:. 1. Let configure position and size of RWebWindow, including support in chrome, CEF and Qt5; 2. Make more methods in RWebWindow `const`, declaring used mutexes `mutable`; 3. Let submit data to web window, which is started but not yet connected to server. Redesign visiible nodes selection algorithm in geometry viewer. Now logic is similar to normal TGeoPainter of ROOT. Plus extra control over maximal allowed number of faces/vertices. Update JSROOT with latest changes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4166:501,log,logic,501,https://root.cern,https://github.com/root-project/root/pull/4166,1,['log'],['logic']
Testability,Use __CLING__ flag to test if interpreter is used,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5785:22,test,test,22,https://root.cern,https://github.com/root-project/root/pull/5785,1,['test'],['test']
Testability,Use __CLING__ flag to test if interpreter is used and update the help.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5785:22,test,test,22,https://root.cern,https://github.com/root-project/root/pull/5785,1,['test'],['test']
Testability,Use __cplusplus to test the existence of std::span,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11311:19,test,test,19,https://root.cern,https://github.com/root-project/root/pull/11311,1,['test'],['test']
Testability,Use `/Ob2` (Inline Function Expansion 2) with `RelWithDebInfo`.; This is the default value under `/O1` and `/O2`. Allows the compiler to expand any function not explicitly marked for no inlining.; This fixes the failing `test-check-nullptr` and `roottest-cling-exception-nullderef-e` tests with ROOT built in `RelWithDebInfo`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16477:221,test,test-check-nullptr,221,https://root.cern,https://github.com/root-project/root/pull/16477,2,['test'],"['test-check-nullptr', 'tests']"
Testability,"Use chain->Add(""filename?#treename"") instead of; ""filename?query#treename"" in TTreeProcessorMT. With the latter form, '?query' is appended to the filenames in RDF; logs. Thank you for the tip Vincenzo!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8883:164,log,logs,164,https://root.cern,https://github.com/root-project/root/pull/8883,1,['log'],['logs']
Testability,Use consistent wording of the comments in the different TMVA classification tests to avoid confusion,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12375:76,test,tests,76,https://root.cern,https://github.com/root-project/root/pull/12375,1,['test'],['tests']
Testability,Use correct suffix (`.dll` on Windows and `.so` elsewhere) and test also loading/unloading` in threads,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13473:63,test,test,63,https://root.cern,https://github.com/root-project/root/pull/13473,1,['test'],['test']
Testability,"Use different file names (instead of `TMVA.root` everywhere), to prevent potential conflicts when running the test concurrently. Trying to solve the following kind of error on Windows:; ```; SysError in <TFile::TFile>: could not delete C:\ROOT-CI\build\runtutorials\TMVA.root (errno: 13) Permission denied; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13576:110,test,test,110,https://root.cern,https://github.com/root-project/root/pull/13576,2,['test'],['test']
Testability,Use file cache when accessing remote files during testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/404:50,test,testing,50,https://root.cern,https://github.com/root-project/root/pull/404,1,['test'],['testing']
Testability,Use for bin edge comparisons an epsilon abs value that is computed a a fraction of bin width. This would give a more robust comparison test.; This PR should fix what has been suggested in ROOT-7752,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3341:135,test,test,135,https://root.cern,https://github.com/root-project/root/pull/3341,1,['test'],['test']
Testability,"Use headless Chrome browser, running from file system.; No any HTTP server required.; Following formats are supported: png, pdf, svg, jpeg, webp; Requires that chrome is installed on all test machines; Tested on Linux, Mac and Windows; Exactly same code used with TWebCanvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4855:187,test,test,187,https://root.cern,https://github.com/root-project/root/pull/4855,2,"['Test', 'test']","['Tested', 'test']"
Testability,Use logical operators for boolean operands,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10787:4,log,logical,4,https://root.cern,https://github.com/root-project/root/pull/10787,1,['log'],['logical']
Testability,Use more meaningful name in CSV datasource test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9230:43,test,test,43,https://root.cern,https://github.com/root-project/root/pull/9230,1,['test'],['test']
Testability,"Use random numbers in the file names created during unit tests, so that concurrent unit tests don't remove each others files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4208:57,test,tests,57,https://root.cern,https://github.com/root-project/root/pull/4208,2,['test'],['tests']
Testability,Use tolerance to compare floating point numbers in testGenVector.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/498:51,test,testGenVector,51,https://root.cern,https://github.com/root-project/root/pull/498,1,['test'],['testGenVector']
Testability,Users are usually not interested in this level of detail and; they will typically use log level kInfo.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11341:86,log,log,86,https://root.cern,https://github.com/root-project/root/pull/11341,1,['log'],['log']
Testability,"Users can now pass a map to the `RCsvDS` constructor as an additional; argument to specify column types of their choice.; Supported types remain: double, Long64_t, bool, std::string.; Type aliases follow `TTreeReader`, i.e.:; * 'O' for boolean; * 'D' for double; * 'L' for Long64_t; * 'T' for std::string. `RCsvDS` now supports ready empty cells and now introduces special variables ""NaN"" and ""nan"" to be read as `nan`. Note that only double has actual `nan`, so for booleans and Long64_t-s, 0 is set in this case. Corresponding tests are added. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #9561",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10488:529,test,tests,529,https://root.cern,https://github.com/root-project/root/pull/10488,2,['test'],"['tested', 'tests']"
Testability,Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-mac1015-cxx17&date=2020-05-14).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82119/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82119/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82119/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82119/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82119/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82119/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82119/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://lcgapp-services.cern.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-628646060:1051,test,test,1051,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-628646060,1,['test'],['test']
Testability,Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-mac1015-cxx17&date=2020-05-18).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82565/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82565/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82565/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82565/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82565/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82565/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82565/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-629992409:1051,test,test,1051,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-629992409,1,['test'],['test']
Testability,Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-mac1015-cxx17&date=2020-05-25).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83489/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83489/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83489/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83489/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83489/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83489/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83489/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-633684855:1051,test,test,1051,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-633684855,1,['test'],['test']
Testability,Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5884-mac1015-cxx17&date=2020-07-01).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88655/console).; ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88655/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88655/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_asmatrix](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88655/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_asmatrix/); - [projectroot.roottest.python.pickle.roottest_python_pickle_read](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88655/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_read/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_execResolveAt_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88655/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_execResolveAt_auto/); - [projectroot.roottest.root.tree.selectorreader.roottest_root_tree_selectorreader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88655/testReport/projectroot.roottest.root.tree/selectorreader/roottest_root_tree_selectorreader_make/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5884#issuecomment-652310734:1084,test,testReport,1084,https://root.cern,https://github.com/root-project/root/pull/5884#issuecomment-652310734,1,['test'],['testReport']
Testability,"Users/sftnight/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RAdoptAllocator.hxx:99:21: warning: 'construct' is deprecated [-Wdeprecated-declarations] ; - [2021-04-28T16:27:23.328Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RAdoptAllocator.hxx:99:21: warning: 'construct&lt;double, double&gt;' is deprecated [-Wdeprecated-declarations] ; - [2021-04-28T16:27:23.328Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RAdoptAllocator.hxx:128:24: warning: 'destroy' is deprecated [-Wdeprecated-declarations] ; - [2021-04-28T16:27:23.328Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RAdoptAllocator.hxx:140:54: warning: 'max_size' is deprecated [-Wdeprecated-declarations] . And 1453 more. ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115997/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115997/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.roottest.python.distrdf.roottest_python_distrdf_spark_test_inv_mass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115997/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_inv_mass/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115997/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8013#issuecomment-828635722:2526,test,testReport,2526,https://root.cern,https://github.com/root-project/root/pull/8013#issuecomment-828635722,1,['test'],['testReport']
Testability,Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/RModel.hxx:50:19: warning: moving a temporary object prevents copy elision [-Wpessimizing-move] ; - [2023-04-26T17:20:33.549Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/RFunction.hxx:82:56: warning: unused parameter 'axis' [-Wunused-parameter] . And 19 more. ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173345/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173345/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173345/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.runtutorials.tutorial_dataframe_df010_trivialDataSource_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173345/testReport/projectroot/runtutorials/tutorial_dataframe_df010_trivialDataSource_py/); - [projectroot.runtutorials.tutorial_dataframe_distrdf001_spark_connection_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173345/testReport/projectroot/runtutorials/tutorial_dataframe_distrdf001_spark_connection_py/); - [projectroot.runtutorials.tutorial_dataframe_distrdf002_dask_connection_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173345/testReport/projectroot/runtutorials/tutorial_dataframe_distrdf002_dask_connection_py/); - [projectroot.runtutoria,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208#issuecomment-1523878688:2814,test,test,2814,https://root.cern,https://github.com/root-project/root/pull/11208#issuecomment-1523878688,1,['test'],['test']
Testability,Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148655/console).; ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_definepersample](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148655/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_definepersample/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148655/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148655/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_datasetspec/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_samplecallback](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148655/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_samplecallback/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148655/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_zeroentries](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148655/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_zeroentries/); - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148655/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/); - [proj,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10854#issuecomment-1170605338:1068,test,test,1068,https://root.cern,https://github.com/root-project/root/pull/10854#issuecomment-1170605338,1,['test'],['test']
Testability,Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 7,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:2211,Test,Test,2211,https://root.cern,https://github.com/root-project/root/pull/5054,8,"['Test', 'test']","['Test', 'test']"
Testability,Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels));,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:6519,Test,Test,6519,https://root.cern,https://github.com/root-project/root/pull/5054,2,"['Test', 'test']","['Test', 'test']"
Testability,Users\sftnight\AppData\Local\Temp\_CL_06de3fb0ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_regression.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\gui\guibuilder\src\TRootGuiBuilder.cxx(2598): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_39cb42d8in': No space left on device [C:\build\workspace\root-pullrequests-build\build\gui\guibuilder\GuiBld.vcxproj] ; - C:\build\workspace\root-pullrequests-build\build\include\TAttText.h(49): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_e9d9d5c8sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\gui\guihtml\GuiHtml.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\memory(1816): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_c7706809ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_utils.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\xmemory0(1101): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_9b60555fex': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\datasource_sqlite.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\streambuf(568): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_7eeb19c2sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\gui\sessionviewer\SessionViewer.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_report.cxx(100): fatal error C1088: Cannot flush compiler intermediate file: 'C:\User,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4317#issuecomment-527074091:1401,test,test,1401,https://root.cern,https://github.com/root-project/root/pull/4317#issuecomment-527074091,1,['test'],['test']
Testability,Uses the same logic as https://github.com/root-project/root/blob/9d0ae186d7b0556e7673987d3c50594697e73bb3/bindings/pyroot/pythonizations/CMakeLists.txt#L139,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13251:14,log,logic,14,https://root.cern,https://github.com/root-project/root/pull/13251,1,['log'],['logic']
Testability,Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10471:112,test,test,112,https://root.cern,https://github.com/root-project/root/pull/10471,1,['test'],['test']
Testability,"Using `.L` or `__attribute__((constructor))` or static initialization are good alternatives. However that does not improve usability of `.x` .; As mentioned in the first post, entry function still need renaming when file get renamed.; Also we get function redefinition error when `.x` or `.L` two scripts with same name. For example `dir0/test.C` and `dir1/dir2/test.C` (with completely different content) cannot both define their `test(...)` entry functions. They cannot be put into different namespaces either otherwise cling does not recognize them as entry functions. However, `__main__(...)` approach suffers from multiple definitions too. Unless cling unloads/drops symbol `__main__` after executing it (btw. In this case will static variables of `__main__` get destructed too?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11299#issuecomment-1235581331:339,test,test,339,https://root.cern,https://github.com/root-project/root/issues/11299#issuecomment-1235581331,3,['test'],['test']
Testability,"Using the file `""http://root.cern.ch/files/h1/dstarmb.root""` and (when `xrootd` in enabled) `""root://eospublic.cern.ch//eos/root-eos/h1/dstarmb.root""` maybe something like:; ```; bool tester(const char *filename) {; auto f = TFile::Open(filename, ""READ_WITHOUT_GLOBALREGISTRATION"");; if (f && ! f->IsZombie() && nullptr == gROOT->GetListOfFiles()->FindObject(filename)) {; delete f;; return true;; } else {; // failure;; return false;; }; }; ```; (possibly separating all 3 failures types).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11321#issuecomment-1238577831:184,test,tester,184,https://root.cern,https://github.com/root-project/root/pull/11321#issuecomment-1238577831,1,['test'],['tester']
Testability,"Using the same file in multiple tests is never good, they might run concurrently",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8740#issuecomment-896008555:32,test,tests,32,https://root.cern,https://github.com/root-project/root/pull/8740#issuecomment-896008555,1,['test'],['tests']
Testability,"Using the same filename can cause races when running the tests in; parallel. I noticed because of this test failure: https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/128243/testReport/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_cluster/. And then:. ```; $ rg test_ntuple_clusters.root; tree/ntuple/v7/test/ntuple_basics.cxx; 140: FileRaii fileGuard(""test_ntuple_clusters.root"");. tree/ntuple/v7/test/ntuple_cluster.cxx; 279: FileRaii fileGuard(""test_ntuple_clusters.root"");; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9192:57,test,tests,57,https://root.cern,https://github.com/root-project/root/pull/9192,6,['test'],"['test', 'testReport', 'tests']"
Testability,Utils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5643#issuecomment-632565061:2050,test,testReport,2050,https://root.cern,https://github.com/root-project/root/pull/5643#issuecomment-632565061,1,['test'],['testReport']
Testability,Utils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97274/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97274/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97274/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97274/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97274/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97274/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97274/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6445#issuecomment-700719818:1912,test,testReport,1912,https://root.cern,https://github.com/root-project/root/pull/6445#issuecomment-700719818,1,['test'],['testReport']
Testability,Utils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput/). And ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5643#issuecomment-632565061:2339,test,testReport,2339,https://root.cern,https://github.com/root-project/root/pull/5643#issuecomment-632565061,1,['test'],['testReport']
Testability,Utils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107915/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107915/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107915/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107915/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107915/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107915/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107915/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7290#issuecomment-786089450:1578,test,testReport,1578,https://root.cern,https://github.com/root-project/root/pull/7290#issuecomment-786089450,1,['test'],['testReport']
Testability,Utils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97274/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97274/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97274/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97274/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97274/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97274/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97274/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6445#issuecomment-700719818:2201,test,testReport,2201,https://root.cern,https://github.com/root-project/root/pull/6445#issuecomment-700719818,1,['test'],['testReport']
Testability,Utils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107911/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107911/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107911/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107911/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107911/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107911/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107911/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/); - [p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7290#issuecomment-786105218:1865,test,testReport,1865,https://root.cern,https://github.com/root-project/root/pull/7290#issuecomment-786105218,1,['test'],['testReport']
Testability,Utils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107914/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107914/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107914/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107914/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107914/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107914/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107914/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/); - [p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7290#issuecomment-786080413:1874,test,testReport,1874,https://root.cern,https://github.com/root-project/root/pull/7290#issuecomment-786080413,1,['test'],['testReport']
Testability,Utils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153379/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153379/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153379/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153379/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153379/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153379/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153379/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/); - [p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1233610510:2605,test,testReport,2605,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1233610510,1,['test'],['testReport']
Testability,Utils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153380/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153380/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153380/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153380/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153380/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153380/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153380/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/); - [p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1233050022:4920,test,testReport,4920,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1233050022,1,['test'],['testReport']
Testability,Utils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186218/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186218/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186218/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186218/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186218/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186218/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186218/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/); - [p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13760#issuecomment-1740954148:1790,test,testReport,1790,https://root.cern,https://github.com/root-project/root/pull/13760#issuecomment-1740954148,1,['test'],['testReport']
Testability,Utils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput/); - [project,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5643#issuecomment-632565061:1761,test,testReport,1761,https://root.cern,https://github.com/root-project/root/pull/5643#issuecomment-632565061,1,['test'],['testReport']
Testability,Utils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/74354/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/74354/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/74354/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/74354/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/74354/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/74354/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/74354/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/). And 94 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5237#issuecomment-606691305:2206,test,testReport,2206,https://root.cern,https://github.com/root-project/root/pull/5237#issuecomment-606691305,4,['test'],['testReport']
Testability,Utils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/25830/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/25830/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/25830/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/25830/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/25830/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/25830/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/25830/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput/). And 112 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1995#issuecomment-389114490:1967,test,testReport,1967,https://root.cern,https://github.com/root-project/root/pull/1995#issuecomment-389114490,4,['test'],['testReport']
Testability,Utils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47206/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47206/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47206/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47206/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47206/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47206/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47206/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4PrepareInput/). And 100 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2854#issuecomment-436218849:2723,test,testReport,2723,https://root.cern,https://github.com/root-project/root/pull/2854#issuecomment-436218849,4,['test'],['testReport']
Testability,Utils/roottest_python_cmdLineUtils_SimpleRootmv4PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1](https://phsft-jenkins.cern.ch/job/root-pullreques,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301721597:5772,test,testReport,5772,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301721597,1,['test'],['testReport']
Testability,Utils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49162/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49162/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49162/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49162/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49162/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49162/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49162/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput/). And 272 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2542#issuecomment-441375554:1977,test,testReport,1977,https://root.cern,https://github.com/root-project/root/pull/2542#issuecomment-441375554,4,['test'],['testReport']
Testability,Utils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80294/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80294/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80294/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80294/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80294/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80294/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80294/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5PrepareInput/). And 244 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5083#issuecomment-595136945:1997,test,testReport,1997,https://root.cern,https://github.com/root-project/root/pull/5083#issuecomment-595136945,4,['test'],['testReport']
Testability,Utils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28653/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28653/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28653/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28653/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28653/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28653/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28653/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput/). And 274 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-394162506:1971,test,testReport,1971,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-394162506,4,['test'],['testReport']
Testability,"UtilsTests.cxx.o -o core/clingutils/test/coreclingutilstestUnit -Wl,-rpath,/mnt/build/workspace/root-pullrequests-build/build/lib lib/libRIO.so.6.19.01 core/clingutils/CMakeFiles/ClingUtils.dir/src/RStl.cxx.o core/clingutils/CMakeFiles/ClingUtils.dir/src/TClingUtils.cxx.o interpreter/llvm/src/lib/libLLVMSupport.a googletest-prefix/src/googletest-build/googlemock//gtest/libgtest.a googletest-prefix/src/googletest-build/googlemock//gtest/libgtest_main.a googletest-prefix/src/googletest-build/googlemock//libgmock.a googletest-prefix/src/googletest-build/googlemock//libgmock_main.a lib/libThread.so.6.19.01 lib/libCore.so.6.19.01 -lrt -ldl -ltinfo -lpthread lib/libZLIB.a -lm interpreter/llvm/src/lib/libLLVMDemangle.a && : ; - collect2: error: ld returned 1 exit status . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:38:47: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:39:61: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:42:64: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:43:78: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:45:64: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/wo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4317#issuecomment-526614895:1443,test,test,1443,https://root.cern,https://github.com/root-project/root/pull/4317#issuecomment-526614895,1,['test'],['test']
Testability,Utils_SimpleRootcp3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16440/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16440/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16440/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16440/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16440/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16440/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16440/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.math.mathcore.test.mathcore_testSampleQuantiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16440/testReport/projectroot.math.mathcore/test/mathcore_testSampleQuantiles/); - [projectroot.math.mathcore.test.mathcore_testSpecFuncGamma](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16440/testReport/projectroot.math.mathcore/test/mathcore_testSpecFuncGamma/). And 15 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1595#issuecomment-363689760:1544,test,testReport,1544,https://root.cern,https://github.com/root-project/root/pull/1595#issuecomment-363689760,10,['test'],"['test', 'testReport']"
Testability,V ��2V�v�2V��2V ��2V 	��2V not found.; Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module !p�w��:�2 not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the **fifteenth** run it finally becomes stable with this output:. ```; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/mini,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8518:4946,test,test,4946,https://root.cern,https://github.com/root-project/root/issues/8518,1,['test'],['test']
Testability,V7 TPadExtent tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1000:14,test,tests,14,https://root.cern,https://github.com/root-project/root/pull/1000,1,['test'],['tests']
Testability,V7 hist test fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4931:8,test,test,8,https://root.cern,https://github.com/root-project/root/pull/4931,1,['test'],['test']
Testability,"V=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 882: Environment variables:; 882: ROOT_HIST=0; 882: Test timeout computed to be: 1500; 882: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 882: error code: -529697949; 882:; 882:; 5/16 Test #882: tutorial-dataframe-df006_ranges-py .......................***Failed 4.42 sec; test 883; Start 883: tutorial-dataframe-df007_snapshot-py. 883: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df007_snapshot.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 883: Environment variables:; 883: ROOT_HIST=0; 883: Test timeout computed to be: 1500; 883: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 883: error code: -529697949; 883:; 883:; 6/16 Test #883: tutorial-dataframe-df007_snapshot-py .....................***Failed 4.47 sec; test 884; Start 884: tutorial-dataframe-df008_createDataSetFromScratch-py. 884: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df008_createDataSetFromScratch.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 884: Environment variables:; 884: ROOT_HIST=0; 884: Test timeout computed to be: 1500; 884: input_line_40:2:211: warning: missing terminating '""' character [-Winvalid-pp-token]; 884: *reinterpret_cast<ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:4664,Test,Test,4664,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['Test'],['Test']
Testability,VA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tm,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1761,log,logger,1761,https://root.cern,https://github.com/root-project/root/issues/9792,1,['log'],['logger']
Testability,VA_DNN_MethodDL_SGD_Optimization_Cpu](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84365/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_MethodDL_SGD_Optimization_Cpu/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84365/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_handlers_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84365/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_handlers_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_utils_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84365/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_utils_doctest/); - [projectroot.roottest.root.multicore.roottest_root_multicore_fork](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84365/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_fork/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84365/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84365/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84365/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). And 3 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5752#issuecomment-636303619:2104,test,testReport,2104,https://root.cern,https://github.com/root-project/root/pull/5752#issuecomment-636303619,4,['test'],['testReport']
Testability,VERED_SWITCH_DEFAULT_FLAG - Failed; -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG; -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success; -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG; -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success; -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG; -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success; -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG; -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success; -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR; -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed; -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG; -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success; -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL; -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success; -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP; -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed; -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG; -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed; -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG; -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed; -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG; -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success; -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG; -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success; -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS; -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success; -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS; -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS; -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success; -- Performing Test C_SUPPORTS_FDATA_SECTIONS; -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS; -- Performing Test CXX_SUPPOR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:4725,Test,Test,4725,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,1,['Test'],['Test']
Testability,"Valgrind complains of:; ```; ==24718== Invalid write of size 4; ==24718== at 0x5778F9D: frombuf(char*&, unsigned int*) (Bytes.h:310); ==24718== by 0x5779004: frombuf(char*&, int*) (Bytes.h:442); ==24718== by 0x5EF5256: TBufferFile::ReadInt(int&) (TBufferFile.h:401); ==24718== by 0x575640B: TLeafI::ReadBasket(TBuffer&) (TLeafI.cxx:165); ==24718== by 0x56F5344: TBranch::ReadLeavesImpl(TBuffer&) (TBranch.cxx:2465); ==24718== by 0x56F2C0A: TBranch::GetEntry(long long, int) (TBranch.cxx:1753); ==24718== by 0x5791D30: TTree::GetEntry(long long, int)::{lambda()#1}::operator()() const (TTree.cxx:5661); ==24718== by 0x5792522: TTree::GetEntry(long long, int) (TTree.cxx:5736); ==24718== by 0x10D951: TestContex::runApplicationPhase(TString) (TestCrossValidationSerialise.cxx:188); ==24718== by 0x10DEDE: TestCvSerialise(TMVA::Types::EMVA, TString, TString) (TestCrossValidationSerialise.cxx:231); ==24718== by 0x10E0A1: TestCrossValidationSerialise() (TestCrossValidationSerialise.cxx:240); ==24718== by 0x10E137: main (TestCrossValidationSerialise.cxx:255); ==24718== Address 0x1ffeffd2b0 is on thread 1's stack; ==24718== 5088 bytes below stack pointer; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10010#issuecomment-2080099857:699,Test,TestContex,699,https://root.cern,https://github.com/root-project/root/issues/10010#issuecomment-2080099857,7,['Test'],"['TestContex', 'TestCrossValidationSerialise', 'TestCvSerialise']"
Testability,Various clean-ups to the even loop logic of TDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/691:35,log,logic,35,https://root.cern,https://github.com/root-project/root/pull/691,1,['log'],['logic']
Testability,"Various developments to prepare the `stressRooFit` executable for the; newly developed batch mode. With the `-q` option, stressRooFit will not log all the errors in a; given test, but will only report the test as FAILED when there were any; errors. Tis is useful during development, allowing the developer to see which; tests pass and fail at one glance without having to endlessly scroll; through the ouput that gets chopped up by the detailed reports on which; comparisons failed in a given test. Furthermore, this PR also introduced a `-b` option to run all fits in batch; mode. Finally, there is a little change such that all datasets in `stressRooFit` use; the vector datastore, including a bugfix in `RooAbsData` to make; `convertToVectorStore` work correctly even if the `storageType` was; wrongly defined in the dataset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9178:143,log,log,143,https://root.cern,https://github.com/root-project/root/pull/9178,5,"['log', 'test']","['log', 'test', 'tests']"
Testability,"Vec<bool> , ROOT::Detail::RDF::RNodeBase, TH1D>' requested here; ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, ROOT::VecOps::RVec<Bool_t>>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x563bdc7d7910), {""Muon_tightId""}, 1, reinterpret_cast<weak_ptr<TH1D>*>(0x563bdc7d77a0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x563bdc7d7a80), reinterpret_cast<ROOT::Internal::RDF::RBookedCustomColumns*>(0x563bdc7d9150));; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RVec.hxx:387:19: note: selected 'begin' function with iterator type 'ROOT::VecOps::RVec<bool>::const_iterator' (aka 'std::_Bit_const_iterator'); const_iterator begin() const noexcept { return fData.begin(); }; ^; In module 'ROOTDataFrame':; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/ActionHelpers.hxx:190:18: error: non-const lvalue reference to type 'bool' cannot bind to a temporary of type 'std::_Bit_const_iterator::const_reference' (aka 'bool'); for (auto &v : vs) {; ^ ~; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:237:33: note: in instantiation of function template specialization 'ROOT::Internal::RDF::FillHelper::Exec<ROOT::VecOps::RVec<bool>, 0>' requested here; ActionCRTP_t::GetHelper().Exec(slot, std::get<S>(fValues[slot]).Get(entry)...);; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:149:41: note: in instantiation of function template specialization 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::Exec<0>' requested here; static_cast<Action_t *>(this)->Exec(slot, entry, TypeInd_t());; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:223:4: note: in instantiation of member function 'ROOT::Internal::RDF::RActionCRTP<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6675:4513,test,test-jupyroot,4513,https://root.cern,https://github.com/root-project/root/issues/6675,1,['test'],['test-jupyroot']
Testability,VecCore/../../../include/Vc/scalar/../common/../sse/intrinsics.h:616:16: warning: variable 'f' may be uninitialized when used here [-Wconditional-uninitialized] ; - /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-centos7-clang39-opt/lib/cmake/VecCore/../../../include/Vc/scalar/../common/memorybase.h:463:83: warning: unused parameter 'flags' [-Wunused-parameter] ; - /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-centos7-clang39-opt/lib/cmake/VecCore/../../../include/Vc/scalar/../common/memorybase.h:478:89: warning: unused parameter 'flags' [-Wunused-parameter] ; - /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-centos7-clang39-opt/lib/cmake/VecCore/../../../include/Vc/common/simdize.h:913:1: warning: 'tuple_size' defined as a class template here but previously declared as a struct template [-Wmismatched-tags] ; - /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-centos7-clang39-opt/lib/cmake/VecCore/../../../include/Vc/common/simdize.h:920:1: warning: 'tuple_element' defined as a class template here but previously declared as a struct template [-Wmismatched-tags] . ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_report](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/44766/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_report/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/44766/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.test.test_stressIOPlugins_xroot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/44766/testReport/projectroot/test/test_stressIOPlugins_xroot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_reports](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/44766/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_reports/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2817#issuecomment-430926138:1357,test,tests,1357,https://root.cern,https://github.com/root-project/root/pull/2817#issuecomment-430926138,9,['test'],"['test', 'testReport', 'tests']"
Testability,Vector/LorentzVector.h:533:60: error: invalid use of incomplete type ‘class ROOT::Math::PtEtaPhiE4D&lt;double&gt;’ ; - [2021-08-27T11:16:53.217Z] /data/sftnight/workspace/root-pullrequests-build/root/math/genvector/inc/Math/GenVector/LorentzVector.h:669:21: error: ‘ROOT::Math::LorentzVector&lt;CoordSystem&gt;::fCoordinates’ has incomplete type ; - [2021-08-27T11:16:53.217Z] /data/sftnight/workspace/root-pullrequests-build/root/math/vecops/test/vecops_rvec.cxx:758:61: error: conversion from ‘LorentzVector&lt;ROOT::Math::PtEtaPhiM4D&lt;double&gt;&gt;’ to non-scalar type ‘LorentzVector&lt;ROOT::Math::PtEtaPhiE4D&lt;double&gt;&gt;’ requested ; - [2021-08-27T11:16:53.217Z] /data/sftnight/workspace/root-pullrequests-build/root/math/vecops/test/vecops_rvec.cxx:759:63: error: no match for ‘operator/’ (operand types are ‘const PtEtaPhiEVector’ {aka ‘const ROOT::Math::LorentzVector&lt;ROOT::Math::PtEtaPhiE4D&lt;double&gt; &gt;’} and ‘int’) ; - [2021-08-27T11:16:53.477Z] /data/sftnight/workspace/root-pullrequests-build/root/math/vecops/test/vecops_rvec.cxx:41:25: error: ‘const class ROOT::Math::LorentzVector&lt;ROOT::Math::PtEtaPhiM4D&lt;double&gt; &gt;’ has no member named ‘size’ ; - [2021-08-27T11:16:53.477Z] /data/sftnight/workspace/root-pullrequests-build/root/math/vecops/test/vecops_rvec.cxx:42:25: error: ‘const class ROOT::Math::LorentzVector&lt;ROOT::Math::PtEtaPhiE4D&lt;double&gt; &gt;’ has no member named ‘size’ ; - [2021-08-27T11:16:53.477Z] /data/sftnight/workspace/root-pullrequests-build/root/math/vecops/test/vecops_rvec.cxx:45:18: error: no match for ‘operator[]’ (operand types are ‘const ROOT::Math::LorentzVector&lt;ROOT::Math::PtEtaPhiM4D&lt;double&gt; &gt;’ and ‘unsigned int’) ; - [2021-08-27T11:16:53.477Z] /data/sftnight/workspace/root-pullrequests-build/root/math/vecops/test/vecops_rvec.cxx:45:24: error: no match for ‘operator[]’ (operand types are ‘const ROOT::Math::LorentzVector&lt;ROOT::Math::PtEtaPhiE4D&lt;double&gt; &gt;’ and ‘unsigned int’) . And 4 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8903#issuecomment-907127781:1868,test,test,1868,https://root.cern,https://github.com/root-project/root/pull/8903#issuecomment-907127781,4,['test'],['test']
Testability,Versions/A/ApplicationServices are out of sync. Falling back to library file for linking. ; - ld: warning: text-based stub file /System/Library/Frameworks//Foundation.framework/Versions/C/Foundation.tbd and library file /System/Library/Frameworks//Foundation.framework/Versions/C/Foundation are out of sync. Falling back to library file for linking. ; - ld: warning: text-based stub file /System/Library/Frameworks//CoreGraphics.framework/Versions/A/CoreGraphics.tbd and library file /System/Library/Frameworks//CoreGraphics.framework/Versions/A/CoreGraphics are out of sync. Falling back to library file for linking. . And 77 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46216/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46216/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46216/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_splitcoll_arrayview](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46216/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_splitcoll_arrayview/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46216/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46216/testReport/projectroot.roottest.root/dataframe/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2396#issuecomment-434641289:3075,test,testReport,3075,https://root.cern,https://github.com/root-project/root/pull/2396#issuecomment-434641289,1,['test'],['testReport']
Testability,Versions/A/UIFoundation.tbd and library file /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation are out of sync. Falling back to library file for linking. ; - ld: warning: text-based stub file /System/Library/Frameworks//ApplicationServices.framework/Versions/A/ApplicationServices.tbd and library file /System/Library/Frameworks//ApplicationServices.framework/Versions/A/ApplicationServices are out of sync. Falling back to library file for linking. ; - ld: warning: text-based stub file /System/Library/Frameworks//Foundation.framework/Versions/C/Foundation.tbd and library file /System/Library/Frameworks//Foundation.framework/Versions/C/Foundation are out of sync. Falling back to library file for linking. ; - ld: warning: text-based stub file /System/Library/Frameworks//CoreFoundation.framework/Versions/A/CoreFoundation.tbd and library file /System/Library/Frameworks//CoreFoundation.framework/Versions/A/CoreFoundation are out of sync. Falling back to library file for linking. . And 77 more. ### Failing tests:; - [projectroot.roottest.root.io.compression.roottest_root_io_compression_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/45640/testReport/projectroot.roottest.root.io/compression/roottest_root_io_compression_make/); - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_testForeignDraw](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/45640/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/45640/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/45640/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2806#issuecomment-433152730:2721,test,tests,2721,https://root.cern,https://github.com/root-project/root/pull/2806#issuecomment-433152730,5,['test'],"['testReport', 'tests']"
Testability,"Very basic CSS parser to have something which produces RStyle from CSS.; Provide correspondent tests; Also improve i/o tests for RHistDrawable, where shared_ptr is involved",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5035:95,test,tests,95,https://root.cern,https://github.com/root-project/root/pull/5035,2,['test'],['tests']
Testability,Very fast coding and nice functionality indeed!; I added some punctual comments in the code.; Perhaps we can put in this PR a tutorial too which illustrates how to compare different compression algorithms and/or levels. Also we would need tests. It would be fine to have these elements in a separate PR and the tests in roottest too as far as I am concerned.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/965#issuecomment-328133471:239,test,tests,239,https://root.cern,https://github.com/root-project/root/pull/965#issuecomment-328133471,2,['test'],['tests']
Testability,"Very interesting. Only one test failing, which is; ```; 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec; -- TEST COMMAND -- ; cd roottest/root/treeformula/retobj; /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory 'roottest/root/treeformula/retobj'; --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000; +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000; @@ -28,12 +28,10 @@; Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available; Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available; Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available; -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available; -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available; Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available; Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available; Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available; -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available; -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available; Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available; -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent; +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()""; +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.ev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14930#issuecomment-2289396844:27,test,test,27,https://root.cern,https://github.com/root-project/root/pull/14930#issuecomment-2289396844,6,"['TEST', 'Test', 'log', 'test']","['TEST', 'Test', 'log', 'test']"
Testability,"Very nice PR. Thank you very much for your contribution!; Could you also please provide a simple test, to be sure the transformation is doing the right thing ? ; Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4141#issuecomment-527153019:97,test,test,97,https://root.cern,https://github.com/root-project/root/pull/4141#issuecomment-527153019,1,['test'],['test']
Testability,Very nice contribution !; Should we add maybe also a tutorial similar to the degenerate coefficient test ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6401#issuecomment-697470992:100,test,test,100,https://root.cern,https://github.com/root-project/root/pull/6401#issuecomment-697470992,1,['test'],['test']
Testability,Very nice! That's how it looks for the dimuon example:. ```; Events with exactly two muons: pass=33370298 all=66128870 -- eff=50.46 % cumulative eff=50.46 %; Muons with opposite charge: pass=25794885 all=33370298 -- eff=77.30 % cumulative eff=39.01 %; ```. Only missing piece: Adapting the test expectation to the new output strings.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2817#issuecomment-430924960:290,test,test,290,https://root.cern,https://github.com/root-project/root/pull/2817#issuecomment-430924960,1,['test'],['test']
Testability,"Very preliminary prototype for graphical editor elements. Now only TAttLine and TAttFill are handled (again, very primitive) . Idea to test main functionality, see relationship between components. Also testing of OpenUI5 components. Layout and concrete implementation should be improved a lot. I set @Axel-Naumann as reviewers while @bellenot is in vacations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/862:135,test,test,135,https://root.cern,https://github.com/root-project/root/pull/862,2,['test'],"['test', 'testing']"
Testability,"Veto also tutorial tests of RooStats and HistFactory if ROOT was built without RooFit. Also removes the `fit/RooFitdemo.C` tutorial from the veto list, as this tutorial doesn't exist anymore. Partially closes #11605.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11609:19,test,tests,19,https://root.cern,https://github.com/root-project/root/pull/11609,1,['test'],['tests']
Testability,Veto roostats tutorial TestNonCentral.C when mathmore is not present.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5859:23,Test,TestNonCentral,23,https://root.cern,https://github.com/root-project/root/pull/5859,1,['Test'],['TestNonCentral']
Testability,Veto tests using clad when clad is disabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12403:5,test,tests,5,https://root.cern,https://github.com/root-project/root/pull/12403,1,['test'],['tests']
Testability,View.hxx:58:42: warning: extra tokens at end of #ifndef directive [-Wextra-tokens] . And 4802 more. ### Failing tests:; - [projectroot.roottest.root.io.newClassDef.roottest_root_io_newClassDef_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116960/testReport/projectroot.roottest.root.io/newClassDef/roottest_root_io_newClassDef_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116960/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116960/testReport/projectroot.roottest.root.tree/addresses/roottest_root_tree_addresses_make/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runatlasaod](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116960/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runatlasaod/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runcms310](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116960/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runcms310/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_checkOSXLibraryExtension](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116960/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_checkOSXLibraryExtension/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116960/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_me,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8108#issuecomment-833577971:3247,test,testReport,3247,https://root.cern,https://github.com/root-project/root/pull/8108#issuecomment-833577971,1,['test'],['testReport']
Testability,Vincenzo told me `builtin_afterimage` is always on now ... and Danilo told me to add the `clean build` tag. Now things seem to be building as expected on linuxen. Something still goes wrong on macs but there is not much info in the [CI log](https://github.com/root-project/root/actions/runs/10101821047/job/27936164875?pr=15812#step:5:6050) ... it says there is some more in the actual log file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2251463048:236,log,log,236,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2251463048,2,['log'],['log']
Testability,Visible in test failure gtest_tree_treeplayer_test_treeprocessormt on ARM with 256 cores,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5049:11,test,test,11,https://root.cern,https://github.com/root-project/root/pull/5049,1,['test'],['test']
Testability,"WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3 (no more will be printed); ../roofit/roofitcore/test/testNaNPacker.cxx:228: Failure; Warning in <ROOT::Math::Fitter::CalculateHessErrors>: Error when calculating Hessian; Value of: a1Final.getVal() < 0. || a1Final.getVal() > 1. || a2Final.getVal() < 0. || a2Final.getVal() > 1.; Actual: false; Expected: true; Recovery strength=0; ```. RooFit stress tests give the following output:. ```; /Users/pbos/projects/apcocsm/roofit-dev/root/cmake-build-debug/test/stressRooFit. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. ******************************************************************; * RooFit - S T R E S S suite *; ******************************************************************; ******************************************************************; * Starting S T R E S S basic suite *; ******************************************************************; Test 1 : Fitting,plotting & event generation of basic p.d.f.....OK; Test 2 : Data import methods....................................OK; Test 3 : Interpreted expression p.d.f...........................OK; Test 4 : C++ function binding operator p.d.f....................OK; Test 5 : Non-standard binning in counting and asymmetry plots...OK; Test 6 : Calculation of chi^2 and residuals in plots..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-881412597:1841,test,test,1841,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-881412597,1,['test'],['test']
Testability,WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimplePattern2_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53558/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimplePattern2_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimplePattern3_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53558/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimplePattern3_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1Clean_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53558/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1Clean_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1Clean_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53558/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1Clean_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3Clean_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53558/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3Clean_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3Clean_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53558/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3Clean_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53558/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUti,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3410#issuecomment-462314564:4381,test,testReport,4381,https://root.cern,https://github.com/root-project/root/pull/3410#issuecomment-462314564,1,['test'],['testReport']
Testability,WIP: Checking and fixing tests!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1860972458:25,test,tests,25,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1860972458,1,['test'],['tests']
Testability,"W_14_1_ROOT6_X_2024-08-19-2300\"" -DPROJECT_NAME=\""CMSSW\"" -DPROJECT_VERSION=\""CMSSW_14_1_ROOT6_X_2024-08-19-2300\"" -Isrc -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/alpaka/1.1.0-84e4d58fde852e6641ccc23881ba7b1f/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/pcre/8.43-e34796d17981e9b6d174328c69446455/include -isystem/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-7ac88d918a6883d593abc133ee0eb2e9/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/bz2lib/1.0.6-d065ccd79984efc6d4660f410e4c81de/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/libuuid/2.34-27ce4c3579b5b1de2808ea9c4cd8ed29/include -isystem/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-a252d5032aa4f9a2fc7dcaab3fac8b9f/include -isystem/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/tbb/v2021.9.0-2391c941213c757dc9a1835b31681235/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/xz/5.2.5-6f3f49b07db84e10c9be594a1176c114/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/zlib/1.2.11-1a082fc322b0051b504cc023f21df178/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/eigen/3bb6a48d8c171cf20b5f8e48bfb4e424fbd4f79e-39786ff94f8aa2f543922cad720e1b32/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/eigen/3bb6a48d8c171cf20b5f8e48bfb4e424fbd4f79e-39786ff94f8aa2f543922cad720e1b32/include/eigen3 -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/fmt/10.2.1-deba157dd76fed17ac8b42adc60ff53f/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/md5/1.0.0-5b594b264e04",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16232#issuecomment-2299822796:2244,test,tests,2244,https://root.cern,https://github.com/root-project/root/pull/16232#issuecomment-2299822796,2,['test'],"['testBuildDir', 'tests']"
Testability,Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module vectorDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module mapDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multimapDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module map2Dict: . And 7 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_tmva_TMVAMulticlass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12213/testReport/projectroot/runtutorials/tutorial_tmva_TMVAMulticlass/); - [projectroot.runtutorials.tutorial_tmva_TMVARegression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12213/testReport/projectroot/runtutorials/tutorial_tmva_TMVARegression/); - [projectroot.test.test_stressentrylist_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12213/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.runtutorials.tutorial_dataframe_tdf013_InspectAnalysis](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12213/testReport/projectroot/runtutorials/tutorial_dataframe_tdf013_InspectAnalysis/); - [projectroot.runtutorials.tutorial_math_quasirandom](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12213/testReport/projectroot/runtutorials/tutorial_math_quasirandom/); - [projectroot.runtutorials.tutoria,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1349#issuecomment-345673713:3195,test,tests,3195,https://root.cern,https://github.com/root-project/root/pull/1349#issuecomment-345673713,1,['test'],['tests']
Testability,Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module vectorDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module map2Dict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_setDict: . And 7 more. ### Failing tests:; - [projectroot.roottest.root.meta.tclass.regression.roottest_root_meta_tclass_regression_6020](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/7618/testReport/projectroot.roottest.root.meta.tclass/regression/roottest_root_meta_tclass_regression_6020/); - [projectroot.roottest.root.meta.tclass.regression.roottest_root_meta_tclass_regression_execNormalizationInf](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/7618/testReport/projectroot.roottest.root.meta.tclass/regression/roottest_root_meta_tclass_regression_execNormalizationInf/); - [projectroot.roottest.cling.dict.ROOT-8739.roottest_cling_dict_ROOT_8739_nextDict_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/7618/testReport/projectroot.roottest.cling.dict/ROOT-8739/roottest_cling_dict_ROOT_8739_nextDict_build/); - [projectroot.roottest.cling.dict.fwd-decl-stdless.roottest_cling_dict_fwd_decl_stdless_lessyDict_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/7618/testReport/proj,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1091#issuecomment-333756275:1375,test,tests,1375,https://root.cern,https://github.com/root-project/root/pull/1091#issuecomment-333756275,1,['test'],['tests']
Testability,Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module vectorDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module map2Dict: . And 7 more. ### Failing tests:; - [projectroot.test.test_stressentrylist_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11551/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.roottest.cling.array.roottest_cling_array_runarray1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11551/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.cling.typedef.roottest_cling_typedef_assertTypedefIter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11551/testReport/projectroot.roottest.cling/typedef/roottest_cling_typedef_assertTypedefIter/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11551/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1318#issuecomment-344197846:1373,test,tests,1373,https://root.cern,https://github.com/root-project/root/pull/1318#issuecomment-344197846,1,['test'],['tests']
Testability,Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module vectorDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multimap2Dict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module mapDict: . And 7 more. ### Failing tests:; - [projectroot.test.test_stressentrylist_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11688/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.roottest.cling.array.roottest_cling_array_runarray1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11688/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11688/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11688/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1317#issuecomment-344253085:1373,test,tests,1373,https://root.cern,https://github.com/root-project/root/pull/1317#issuecomment-344253085,1,['test'],['tests']
Testability,Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module map2Dict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module mapDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multimap2Dict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: . And 7 more. ### Failing tests:; - [projectroot.test.test_stressmathmore_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12525/testReport/projectroot/test/test_stressmathmore_interpreted/); - [projectroot.test.test_stressroofit_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12525/testReport/projectroot/test/test_stressroofit_interpreted/); - [projectroot.test.test_stressmathcore_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12525/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.test.test_stresshistofit_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12525/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.runtutorials.tutorial_dataframe_tdf013_InspectAnalysis](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12525/testReport/projectroot/runtutorials/tutorial_dataframe_tdf013_InspectAnalysis/); - [projectroot.runtutorials.tutorial_fit_fitNormSum](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12525/testReport/projectroot/runtutorials/tutorial_fit_fitNormSum/); - [projectroot.runtutorials.tutorial_geom_csgdemo](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12525/testReport/projectroot/runtutorials/tutorial_geom_csgdemo/); - [projectroot.runtutorials.tutorial_geom_shapes](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12525/testReport/projectroot/runtutorials/tutorial_geom_shapes/); - [projectroot.runtutorials.tuto,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347042370:3881,test,testReport,3881,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347042370,2,['test'],"['test', 'testReport']"
Testability,Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module map2Dict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module valarrayDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module vectorDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module mapDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multimap2Dict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: . And 7 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_tmva_TMVAMulticlass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12382/testReport/projectroot/runtutorials/tutorial_tmva_TMVAMulticlass/); - [projectroot.runtutorials.tutorial_tmva_TMVARegression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12382/testReport/projectroot/runtutorials/tutorial_tmva_TMVARegression/); - [projectroot.test.test_stressentrylist_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12382/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.runtutorials.tutorial_dataframe_tdf013_InspectAnalysis](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12382/testReport/projectroot/runtutorials/tutorial_dataframe_tdf013_InspectAnalysis/); - [projectroot.runtutorials.tutorial_math_quasirandom](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12382/testReport/projectroot/runtutorials/tutorial_math_quasirandom/); - [projectroot.runtutorials.tutoria,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1359#issuecomment-346817684:3190,test,tests,3190,https://root.cern,https://github.com/root-project/root/pull/1359#issuecomment-346817684,1,['test'],['tests']
Testability,Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multimapDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module map2Dict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_mapDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module valarrayDict: . And 7 more. ### Failing tests:; - [projectroot.test.test_stressfit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10211/testReport/projectroot/test/test_stressfit/); - [projectroot.test.test_stressmathmore](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10211/testReport/projectroot/test/test_stressmathmore/); - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10211/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.test.test_stressentrylist](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10211/testReport/projectroot/test/test_stressentrylist/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10211/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.test.test_stressshapes](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10211/testReport/projectroot/test/test_stressshapes/); - [projectroot.test.test_stressvector_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10211/testReport/projectroot/test/test_stressvector_interpreted/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10211/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.test.test_stressentrylist_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10211/te,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1255#issuecomment-340811548:1881,test,test,1881,https://root.cern,https://github.com/root-project/root/pull/1255#issuecomment-340811548,1,['test'],['test']
Testability,Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multimapDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multimapDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_mapDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module valarrayDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: . And 7 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_tmva_TMVAMulticlass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12124/testReport/projectroot/runtutorials/tutorial_tmva_TMVAMulticlass/); - [projectroot.runtutorials.tutorial_tmva_TMVARegression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12124/testReport/projectroot/runtutorials/tutorial_tmva_TMVARegression/); - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_datasource_root](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12124/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_datasource_root/); - [projectroot.runtutorials.tutorial_dataframe_tdf013_InspectAnalysis](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12124/testReport/projectroot/runtutorials/tutorial_dataframe_tdf013_InspectAnalysis/); - [projectroot.runtutorials.tutorial_math_quasirandom](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12124/testReport/projectroot/runtutorials/tutorial_math_quasirandom/); - [projectroot.runtutorials.tutorial_multicore_mt303_AsyncSimple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12124/testReport/projectroot/runtutorials/tutorial_multicore_mt303_AsyncSimple/); - [projectroot.runtutorials.tutorial_multicore_mt304_AsyncNested](https://epsft-jenkins.cern.ch/job/root-pullreques,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1340#issuecomment-345230638:3537,test,testReport,3537,https://root.cern,https://github.com/root-project/root/pull/1340#issuecomment-345230638,1,['test'],['testReport']
Testability,Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module map2Dict: . And 7 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_fit_fitslicesy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12464/testReport/projectroot/runtutorials/tutorial_fit_fitslicesy/); - [projectroot.runtutorials.tutorial_hist_fillrandom](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12464/testReport/projectroot/runtutorials/tutorial_hist_fillrandom/); - [projectroot.test.test_stressgraphics](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12464/testReport/projectroot/test/test_stressgraphics/); - [projectroot.test.test_stresslinear](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12464/testReport/projectroot/test/test_stresslinear/); - [projectroot.runtutorials.tutorial_fit_fit1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12464/testReport/projectroot/runtutorials/tutorial_fit_fit1/); - [projectroot.runtutorials.tutorial_fit_myfit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12464/testReport/projectroot/runtutorials/tutorial_fit_myfit/); - [projectroot.runtutorials.tutorial_hist_FirstContour](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12464/testReport/projectroot/runtutorials/tutorial_hist_FirstContour/); - [projectroot.runtutorials.tutorial_io_loopdir](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12464/testReport/projectroot/runtutorials/tutorial_io_loopdir/); - [projectroot.runtutorials.tutorial_roostats_CreateExampleFile](https://epsft-jenkins.cern.ch/job/root-pullrequests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1365#issuecomment-346933630:3879,test,testReport,3879,https://root.cern,https://github.com/root-project/root/pull/1365#issuecomment-346933630,2,['test'],"['test', 'testReport']"
Testability,Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multimapDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multimap2Dict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module vectorDict: . And 7 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/13007/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/13007/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.test.test_stressmathcore](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/13007/testReport/projectroot/test/test_stressmathcore/); - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/13007/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://epsft-jenkins.cern.ch/job/root-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1394#issuecomment-347839613:3195,test,tests,3195,https://root.cern,https://github.com/root-project/root/pull/1394#issuecomment-347839613,1,['test'],['tests']
Testability,Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module map2Dict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module vectorDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multimap2Dict: . And 7 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_fit_fitslicesy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12515/testReport/projectroot/runtutorials/tutorial_fit_fitslicesy/); - [projectroot.runtutorials.tutorial_fit_myfit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12515/testReport/projectroot/runtutorials/tutorial_fit_myfit/); - [projectroot.runtutorials.tutorial_hist_FirstContour](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12515/testReport/projectroot/runtutorials/tutorial_hist_FirstContour/); - [projectroot.test.test_stressmathmore_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12515/testReport/projectroot/test/test_stressmathmore_interpreted/); - [projectroot.test.test_stressmathcore_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12515/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.test.test_stressroofit_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12515/testReport/projectroot/test/test_stressroofit_interpreted/); - [projectroot.test.test_stresshistofit_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12515/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.runtutorials.tutorial_dataframe_tdf013_InspectAnalysis](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12515/testReport/projectroot/runtutorials/tutorial_dataframe_tdf013_InspectAnalysis/); - [projectroot.runtutori,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347024800:3881,test,testReport,3881,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347024800,1,['test'],['testReport']
Testability,Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_mapDict: . And 7 more. ### Failing tests:; - [projectroot.test.test_stressfit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10209/testReport/projectroot/test/test_stressfit/); - [projectroot.test.test_stressmathmore](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10209/testReport/projectroot/test/test_stressmathmore/); - [projectroot.test.test_stressentrylist](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10209/testReport/projectroot/test/test_stressentrylist/); - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10209/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10209/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.test.test_stressvector_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10209/testReport/projectroot/test/test_stressvector_interpreted/); - [projectroot.test.test_stressshapes](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10209/testReport/projectroot/test/test_stressshapes/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10209/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.test.test_stressentrylist_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10209/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.test.test_stressIOPlugins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1255#issuecomment-340820999:1966,test,testReport,1966,https://root.cern,https://github.com/root-project/root/pull/1255#issuecomment-340820999,2,['test'],"['test', 'testReport']"
Testability,Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module valarrayDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module mapDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module map2Dict: . And 7 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_fit_fitslicesy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12464/testReport/projectroot/runtutorials/tutorial_fit_fitslicesy/); - [projectroot.runtutorials.tutorial_hist_fillrandom](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12464/testReport/projectroot/runtutorials/tutorial_hist_fillrandom/); - [projectroot.test.test_stressgraphics](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12464/testReport/projectroot/test/test_stressgraphics/); - [projectroot.test.test_stresslinear](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12464/testReport/projectroot/test/test_stresslinear/); - [projectroot.runtutorials.tutorial_fit_fit1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12464/testReport/projectroot/runtutorials/tutorial_fit_fit1/); - [projectroot.runtutorials.tutorial_fit_myfit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12464/testReport/projectroot/runtutorials/tutorial_fi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1365#issuecomment-346933630:3404,test,tests,3404,https://root.cern,https://github.com/root-project/root/pull/1365#issuecomment-346933630,1,['test'],['tests']
Testability,Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module valarrayDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module mapDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module vectorDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multimap2Dict: . And 8 more. ### Failing tests:; - [projectroot.test.test_stressentrylist_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11410/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.roottest.cling.array.roottest_cling_array_runarray1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11410/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.cling.typedef.roottest_cling_typedef_assertTypedefIter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11410/testReport/projectroot.roottest.cling/typedef/roottest_cling_typedef_assertTypedefIter/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11410/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pull,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1314#issuecomment-343704517:1378,test,tests,1378,https://root.cern,https://github.com/root-project/root/pull/1314#issuecomment-343704517,1,['test'],['tests']
Testability,Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module vectorDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module map2Dict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module mapDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module multimap2Dict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: . And 7 more. ### Failing tests:; - [projectroot.test.test_stressmathmore_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12525/testReport/projectroot/test/test_stressmathmore_interpreted/); - [projectroot.test.test_stressroofit_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12525/testReport/projectroot/test/test_stressroofit_interpreted/); - [projectroot.test.test_stressmathcore_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12525/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.test.test_stresshistofit_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12525/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.runtutorials.tutorial_dataframe_tdf013_InspectAnalysis](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12525/testReport/projectroot/runtutorials/tutorial_dataframe_tdf013_InspectAnalysis/); - [projectroot.runtutorials.tutorial_fit_fitNormSum](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12525/testReport/projectroot/runtutorials/tutorial_fit_fitNormSum/); - [projectroot.runtutorials.tutorial_geom_csgdemo](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12525/testReport/projectroot/runtutorials/tutorial_geom_csgdemo/); - [projectroot.runtutorials.tutorial_geom_shapes](https://epsft-jenkins.cern.ch/job/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347042370:3779,test,test,3779,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347042370,1,['test'],['test']
Testability,"Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RealWorld1 (9118 ms); [ RU",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:3553,Test,Test,3553,https://root.cern,https://github.com/root-project/root/issues/12427,1,['Test'],['Test']
Testability,Warnings and failing test are not related to my change (they are there in the current incremental builds).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3303#issuecomment-457170876:21,test,test,21,https://root.cern,https://github.com/root-project/root/pull/3303#issuecomment-457170876,1,['test'],['test']
Testability,"Warnings and test failure are not related to this PR, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11393#issuecomment-1254661331:13,test,test,13,https://root.cern,https://github.com/root-project/root/pull/11393#issuecomment-1254661331,1,['test'],['test']
Testability,Warnings:; - JENKINS-19022: warning: possible memory leak due to Git plugin usage; see: https://wiki.jenkins-ci.org/display/JENKINS/Remove+Git+Plugin+BuildsByBranch+BuildData . ### Failing tests:; - [projectroot.roottest.python.stl.roottest_python_stl_stl](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/1467/testReport/projectroot.roottest.python/stl/roottest_python_stl_stl/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/1467/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/1467/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/1467/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/1467/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/1467/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/1467/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_emptysource_build](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/1467/testReport/projectroot.roottest.root/dataframe/roottest_root_datafra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/636#issuecomment-308081643:1139,test,testReport,1139,https://root.cern,https://github.com/root-project/root/pull/636#issuecomment-308081643,1,['test'],['testReport']
Testability,Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.runtutorials.tutorial_hist_FirstContour](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18421/testReport/projectroot/runtutorials/tutorial_hist_FirstContour/); - [projectroot.test.test_stressIOPlugins_http](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18421/testReport/projectroot/test/test_stressIOPlugins_http/); - [projectroot.test.test_stressIOPlugins_xroot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18421/testReport/projectroot/test/test_stressIOPlugins_xroot/); - [projectroot.test.test_TFormulaTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18421/testReport/projectroot/test/test_TFormulaTests/); - [projectroot.runtutorials.tutorial_benchmarks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18421/testReport/projectroot/runtutorials/tutorial_benchmarks/); - [projectroot.runtutorials.tutorial_demos](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18421/testReport/projectroot/runtutorials/tutorial_demos/); - [projectroot.runtutorials.tutorial_geom_csgdemo](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18421/testReport/projectroot/runtutorials/tutorial_geom_csgdemo/); - [projectroot.runtutorials.tutorial_gl_gldemos](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18421/testReport/projectroot/runtutorials/tutorial_gl_gldemos/); - [projectroot.runtutorials.tutorial_graphics_basic3d](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18421/testReport/projectroot/runtutorials/tutorial_graphics_basic3d/); - [projectroot.runtutorials.tutorial_graphics_tornado](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18421/testReport/projectroot/runtutorials/tutorial_graphics_tornado/). And 32 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1365#issuecomment-369257080:3215,test,testReport,3215,https://root.cern,https://github.com/root-project/root/pull/1365#issuecomment-369257080,6,['test'],['testReport']
Testability,Warnings:; - [2020-06-03T16:15:25.847Z] /build/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1151:36: warning: unused variable ‘FE’ [-Wunused-variable] . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84932/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_display](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84932/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_display/); - [projectroot.runtutorials.tutorial_dataframe_df024_Display](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84932/testReport/projectroot/runtutorials/tutorial_dataframe_df024_Display/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84932/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.runtutorials.tutorial_math_quasirandom](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84932/testReport/projectroot/runtutorials/tutorial_math_quasirandom/); - [projectroot.runtutorials.tutorial_roofit_rf105_funcbinding](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84932/testReport/projectroot/runtutorials/tutorial_roofit_rf105_funcbinding/); - [projectroot.runtutorials.tutorial_tmva_envelope_classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84932/testReport/projectroot/runtutorials/tutorial_tmva_envelope_classification/); - [projectroot.runtutorials.tutorial_math_tStudent_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84932/testReport/projectroot/runtutorials/tutorial_math_tStudent_py/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://lcgapp-services.cern,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-638312769:2074,test,testReport,2074,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-638312769,2,['test'],"['test', 'testReport']"
Testability,Warnings:; - [2022-06-02T14:54:58.077Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T14:55:02.744Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146661/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146661/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146661/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146661/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146661/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146661/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146661/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144994613:1268,test,testReport,1268,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144994613,1,['test'],['testReport']
Testability,Warnings:; - [2022-06-13T10:20:19.266Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-13T10:20:49.547Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147285/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147285/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147285/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147285/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147285/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147285/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147285/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1153767756:1268,test,testReport,1268,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153767756,1,['test'],['testReport']
Testability,Wattributes] ; - [2023-01-08T12:11:34.152Z] /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-08T12:11:34.415Z] /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RNTupleDS.hxx:97:86: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-08T12:11:34.415Z] /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RNTupleDS.hxx:99:47: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 130 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf205_compplot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163502/testReport/projectroot/runtutorials/tutorial_roofit_rf205_compplot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163502/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163502/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163502/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163502/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163502/test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11985#issuecomment-1374824987:2884,test,testReport,2884,https://root.cern,https://github.com/root-project/root/pull/11985#issuecomment-1374824987,1,['test'],['testReport']
Testability,Wattributes] ; - [2023-01-09T11:27:40.902Z] /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T11:27:40.902Z] /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RNTupleDS.hxx:97:86: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T11:27:40.902Z] /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RNTupleDS.hxx:99:47: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 130 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf205_compplot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163530/testReport/projectroot/runtutorials/tutorial_roofit_rf205_compplot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163530/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163530/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163530/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163530/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163530/test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11985#issuecomment-1375507415:2884,test,testReport,2884,https://root.cern,https://github.com/root-project/root/pull/11985#issuecomment-1375507415,1,['test'],['testReport']
Testability,Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://epsft-jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:3087,test,test,3087,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['test']
Testability,Wdeprecated-copy] . ### Failing tests:; - [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157630/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/); - [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157630/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157630/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157630/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157630/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157630/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157630/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157630/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/); - [projectroot.roottest.root.meta.evolution.roottest_root_me,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11591#issuecomment-1282147787:2984,test,test,2984,https://root.cern,https://github.com/root-project/root/pull/11591#issuecomment-1282147787,1,['test'],['test']
Testability,Wdeprecated-copy] . ### Failing tests:; - [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/158000/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/); - [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/158000/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/158000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/158000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/158000/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/158000/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/158000/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/158000/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/); - [projectroot.roottest.root.meta.evolution.roottest_root_me,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11591#issuecomment-1285736481:2984,test,test,2984,https://root.cern,https://github.com/root-project/root/pull/11591#issuecomment-1285736481,1,['test'],['test']
Testability,"We *know* C++20 is failing the test suite, make the builds green by adding C++20 support to a PR rather than master. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12837:31,test,test,31,https://root.cern,https://github.com/root-project/root/pull/12837,2,['test'],"['test', 'tested']"
Testability,"We accidentially check and annotate the return type of the function twice for; being a pointer/reference type when we do the ""else"" part of the; wrapper. This patch removes this wrong second check and extends; the tests to check that the cast in both branches of the if/else; is correct.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/667:214,test,tests,214,https://root.cern,https://github.com/root-project/root/pull/667,1,['test'],['tests']
Testability,"We always wanted to use ""old"", and my prior attept to convince CMake to use ""DOWNLOAD_EXTRACT_TIMESTAMP false"" did not work. So instead of passing this to each ExternalProject_Add, just switch the global policy to OLD. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11846:284,test,tested,284,https://root.cern,https://github.com/root-project/root/pull/11846,1,['test'],['tested']
Testability,"We always wanted to use ""old"", and my prior attept to convince CMake to use ""DOWNLOAD_EXTRACT_TIMESTAMP false"" did not work. So instead of passing this to each ExternalProject_Add, just switch the global policy to OLD. (cherry picked from commit 51302692c483755d4d70a87dc39706bab72b1bf7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11845:354,test,tested,354,https://root.cern,https://github.com/root-project/root/pull/11845,1,['test'],['tested']
Testability,"We are getting the same error in a dummy PR: https://github.com/root-project/root/pull/7879#issuecomment-823543930 without any library changes, just the test. Is it possible the windows10/cxx14 machine is in a bad state? Maybe the test uncovered a latent issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7749#issuecomment-823554549:153,test,test,153,https://root.cern,https://github.com/root-project/root/pull/7749#issuecomment-823554549,2,['test'],['test']
Testability,"We are no longer updating the old I/O (the one you get without the `+`) as its test suite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`.; 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class.; 4. Go back to the new code.; 5. Increase the class version number; 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16375#issuecomment-2334574266:79,test,test,79,https://root.cern,https://github.com/root-project/root/issues/16375#issuecomment-2334574266,1,['test'],['test']
Testability,"We are still discussing the names. The current proposal is:; ```; using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with; /// that name does not exist, an invalid RFilePtr will be returned.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid; /// `RFilePtr`) if a file with this name already exists.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name; /// already exists, delete it and create a new one. Else simply create a new file.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());; ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14017#issuecomment-1821818413:1299,test,testing,1299,https://root.cern,https://github.com/root-project/root/pull/14017#issuecomment-1821818413,2,['test'],"['test', 'testing']"
Testability,"We assumed that we will always have module file and unconditionally disable; header parsing on demand. However, the major use-case is gradual migration; to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),; we have a dictionary which has no module file and still relies on the old; behavior. This can realistically happen when users gradually migrate to; modules. For example, we have modules-aware ROOT and untouched third party; code. This patch enables header parsing on demand when we have no module file; available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2721:183,test,tested,183,https://root.cern,https://github.com/root-project/root/pull/2721,1,['test'],['tested']
Testability,"We can actually test before :-) I've updated build-root.cmake to require pyroot2, pyroot3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5500#issuecomment-621657814:16,test,test,16,https://root.cern,https://github.com/root-project/root/pull/5500#issuecomment-621657814,1,['test'],['test']
Testability,We can also provide benchmarks if needed :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3216#issuecomment-453141918:20,benchmark,benchmarks,20,https://root.cern,https://github.com/root-project/root/pull/3216#issuecomment-453141918,1,['benchmark'],['benchmarks']
Testability,"We can always split the test in two, one part that runs multiple threads, the other that runs multiple processes.; The issue remains with MacOS spawning threads on its own...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7075#issuecomment-766886484:24,test,test,24,https://root.cern,https://github.com/root-project/root/pull/7075#issuecomment-766886484,1,['test'],['test']
Testability,"We can escape all special characters, but which ones should we support? Because we might have problems with `${ROOTSYS}` containing those characters. I tried with `master.[c++17](test)` (escaping these characters: `[ ] + . ( )`, but then I got many warnings like:; ```; CMake Warning (dev) at C:/root-dev/build/x64/master.c++17(test)/ROOTConfig.cmake:67:; Syntax Warning in cmake code at column 63. Argument not separated from preceding token by whitespace.; Call Stack (most recent call first):; cmake/modules/SearchInstalledSoftware.cmake:18 (_find_package); test/CMakeLists.txt:18 (find_package); ```; And also:; ```; CMake Warning:; Value of ROOTSYS contained a newline; truncating; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13731#issuecomment-1736977539:179,test,test,179,https://root.cern,https://github.com/root-project/root/issues/13731#issuecomment-1736977539,3,['test'],['test']
Testability,"We can use eospublic for testing xrootd. We have existing tutorials / tests that use it, see e.g. [test/stressIOPlugins.cxx](https://github.com/root-project/root/blob/de7bcdff077be4ec08892c1d8349d9f8e62dd420/test/stressIOPlugins.cxx#L160)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9012#issuecomment-922727475:25,test,testing,25,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922727475,4,['test'],"['test', 'testing', 'tests']"
Testability,"We can't retroactively make something internal :-) so indeed, TRint is part of ROOT's public API and thus we'll have to support the usage you describe. To get there, we'll need:; - [ ] PR https://github.com/root-project/root/pull/10094 - thank you!; - [ ] a test for this use case; - [ ] a mode where `TRint` used by ROOT exists on unknown arguments, but not for you, or decide that the old `TRint` behavior was a bug and `TRint::TRint` must be fed with only valid arguments for `TRint`. Do you have a proposal for the latter? We can add a new boolean constructor argument, `failOnUnknownArgs = false` which we set to `true` in ROOT. Could you create a PR for a test that simulates what you are doing? It would be wonderful to have that as unit test in `core/rint/test` - which currently doesn't exist, but it's trivial to set this up, just follow for instance what's in `core/foundation/test`. This would be very much appreciated - if you cannot do that please let me know and we'll propose something that you can review back and forth until we have something that represents your use case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090#issuecomment-1064273957:258,test,test,258,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064273957,5,['test'],['test']
Testability,"We can't use the interpreter when generating a PCM as this would; generate AST nodes which then would end up in the module, which; is causing a long chain of modules (such as redefinitons as we; suddenly have the same cling warpper function multiple times). In this code path we seem to always have a number that we want; to convert to a string. So let's just use atol instead here if; the argument is just a number, which should avoid the issue with; the generated code. As we also now check if the input is a number, I added an assert; that verifies we only call atol when the string is actually a; number.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/807:530,assert,assert,530,https://root.cern,https://github.com/root-project/root/pull/807,1,['assert'],['assert']
Testability,"We cannot test without the branch in your repo, @vgvassilev :-) But we know how it behaves in master, I'm positive that it will work in v6-26, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11550#issuecomment-1280475205:10,test,test,10,https://root.cern,https://github.com/root-project/root/pull/11550#issuecomment-1280475205,1,['test'],['test']
Testability,"We currently don't support numba 0.60.0 yet:; https://github.com/root-project/root/blob/master/requirements.txt#L17. One can see the problem when going into `roottest/python/numba` and running the test there:; ```bash; python PyROOT_numbatests.py; ```. Output with ROOT master and numba 0.59, where it's only a warning:; ```txt; PyROOT_numbatests.py::TestClasNumba::test03_inheritance; /home/rembserj/spaces/master/root/src/root/roottest/python/numba/PyROOT_numbatests.py:107: NumbaPendingDeprecationWarning: Code using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors; Exception origin:; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/numba_ext.py"", line 349, in generic_resolve; f = typ._scope.__dict__[attr]; ~~~~~~~~~~~~~~~~~~~^^^^^^. return obj.get_one(). -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html; ```. Supporting numba 0.60.0 would be nice, because 0.59.0 doesn't support NumPy 2 yet. Thus, our current environment falls back to NumPy 1 and we are lacking NumPy 2 test support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16201:197,test,test,197,https://root.cern,https://github.com/root-project/root/issues/16201,3,"['Test', 'test']","['TestClasNumba', 'test']"
Testability,"We currently have an issue on Windows, the master doesn't build due to our changes in `not_fn`. Could you clone roottest to verify that this fixes it? The error is:; ```; ""C:\build\night\LABEL\windows10\SPEC\default\build\ALL_BUILD.vcxproj"" (default target) (1) ->; ""C:\build\night\LABEL\windows10\SPEC\default\build\core\foundation\test\testNotFn.vcxproj"" (default target) (527) ->; (ClCompile target) -> ; C:\build\night\LABEL\windows10\SPEC\default\root\core\foundation\test\testNotFn.cxx(16): error C2039: 'not_fn': is not a member of 'std' ; ```; I don't know why this started to fail. Insights welcome!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3432#issuecomment-463941515:333,test,test,333,https://root.cern,https://github.com/root-project/root/pull/3432#issuecomment-463941515,4,['test'],"['test', 'testNotFn']"
Testability,We did confirm that the rooChangeTracker induced minimal overhead in callgrind logs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10832#issuecomment-1167791001:79,log,logs,79,https://root.cern,https://github.com/root-project/root/pull/10832#issuecomment-1167791001,1,['log'],['logs']
Testability,We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:; ```; ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':; creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14121:17,test,test,17,https://root.cern,https://github.com/root-project/root/issues/14121,4,"['Test', 'test']","['TestSupport', 'test']"
Testability,We discussing usage of web graphics by default in ROOT.; Means all kind of graphics tutorials and tests should be possible to use in web mode.; And I want to change structure of the code.; After such change it will be easy to support testing with web graphics.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16579#issuecomment-2388577446:98,test,tests,98,https://root.cern,https://github.com/root-project/root/pull/16579#issuecomment-2388577446,2,['test'],"['testing', 'tests']"
Testability,"We do not want that change there. That's not a common practice in C++ especially in the source files. I do not think we should change the tests, either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14989#issuecomment-2011309618:138,test,tests,138,https://root.cern,https://github.com/root-project/root/pull/14989#issuecomment-2011309618,1,['test'],['tests']
Testability,"We do not want to remember the build directory, see issue #7108. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9520:130,test,tested,130,https://root.cern,https://github.com/root-project/root/pull/9520,1,['test'],['tested']
Testability,"We do not want to remember the build directory, see issue #7108. (cherry picked from commit c2f028feb6da152ff07020b3b4b2a961c1af315e). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9533:200,test,tested,200,https://root.cern,https://github.com/root-project/root/pull/9533,1,['test'],['tested']
Testability,"We don't have XQuartz installed on our Macs, so testing cannot really succeed :-/ We are discussing whether we should just force cocoa for macOS and ""deprecate"" x11 on macOS (given that it might not build anymore since years...) We'll leave this open until we decide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12528#issuecomment-1483209784:48,test,testing,48,https://root.cern,https://github.com/root-project/root/pull/12528#issuecomment-1483209784,1,['test'],['testing']
Testability,"We don't have a place to test, can you please test it on lxplus6?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5248#issuecomment-605947805:25,test,test,25,https://root.cern,https://github.com/root-project/root/pull/5248#issuecomment-605947805,2,['test'],['test']
Testability,We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries.; ; Should give 5MB improvements for modules.; ; Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3043:105,test,tests,105,https://root.cern,https://github.com/root-project/root/pull/3043,1,['test'],['tests']
Testability,"We don't need any input_line declration from rootmap for startup time.; However it may cause a failure on tests when they have custom; dictionaries. Gives 5MB impr for modules, but still Testing!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2892:106,test,tests,106,https://root.cern,https://github.com/root-project/root/pull/2892,2,"['Test', 'test']","['Testing', 'tests']"
Testability,"We don't use it in our configuration of civetweb, and it will be removed in upcoming versions of Fedora and RHEL:. https://github.com/dotnet/runtime/issues/104775#issuecomment-2229857943. This change is tested by all CI platforms, because globally we set `http=ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16749:203,test,tested,203,https://root.cern,https://github.com/root-project/root/pull/16749,1,['test'],['tested']
Testability,"We don’t appear to use TBufferMerger or TBufferMergerFile (unless GitHub searching fails me). > On Jun 16, 2021, at 6:14 PM, Malik Shahzad Muzaffar ***@***.***> wrote:; > ; > ; > @Axel-Naumann , I have started a PR test here cms-sw#157 . It will take few hours before we have the results.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or unsubscribe.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8449#issuecomment-862585059:215,test,test,215,https://root.cern,https://github.com/root-project/root/pull/8449#issuecomment-862585059,1,['test'],['test']
Testability,"We had test failures in runtime nightlies such as this one:; https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/95/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/junit/projectroot.roottest.root.math/smatrix/roottest_root_math_smatrix_testKalman/. Failures were due to what @pcanal commented in #2135, that some so files in; roottest doesn't have external linkage. (It means that if you call; dlopen(libfoo.so), linux kernel can't find dependency libraries and it; emits ""undefined symbol"" error when they try to initialize global; variables in libfoo.so but couldn't find symbol definition); With pch, rootmap files were providing information about the depending library. However we stopped generating rootmap files in #2127 and that's why we; got these failures. To fix this issue, I implemented a callback to; TCling which gets called when DynamicLibraryManager fails with; ""undefined error"". I'm open to suggestion especially in DynamicLibraryManager.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2154:7,test,test,7,https://root.cern,https://github.com/root-project/root/pull/2154,2,['test'],"['test', 'testReport']"
Testability,"We had test failures in runtime nightlies such as this one:; https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/95/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/junit/projectroot.roottest.root.math/smatrix/roottest_root_math_smatrix_testKalman/; https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/lastCompletedBuild/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/. Failures were due to what @pcanal commented in #2135, that some so files in; roottest doesn't have external linkage. (It means that if you call; dlopen(libfoo.so), linux kernel can't find dependency libraries and it; emits ""undefined symbol"" error when they try to initialize global; variables in libfoo.so but couldn't find symbol definition); With pch, rootmap files were providing information about the depending library. However we stopped generating rootmap files in #2127 and that's why we; got these failures. To fix this issue, I implemented a callback to; TCling which gets called when DynamicLibraryManager fails with; ""undefined error"". I'm open to suggestion especially in DynamicLibraryManager.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2148:7,test,test,7,https://root.cern,https://github.com/root-project/root/pull/2148,3,['test'],"['test', 'testReport']"
Testability,"We have another class with the name Compare in TMatrixTBase.h, so we add a; anonymous namespace here that we don't fail on this test when building with; enabled modules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/398:128,test,test,128,https://root.cern,https://github.com/root-project/root/pull/398,1,['test'],['test']
Testability,"We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```; Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C...; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]!; You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(); Maybe you need to load the corresponding shared library?; CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6563:231,test,testReport,231,https://root.cern,https://github.com/root-project/root/issues/6563,1,['test'],['testReport']
Testability,"We have never created a branch off a release branch for a certain commit; our CI etc is not capable of handling this. If you want this please just apply the commits you need. Please note that this is not a version of ROOT that is tested, there might be interference with other commits that you would miss. The release branch contains several fixes that are likely relevant also to ATLAS. I can offer you a tag right after the commit Johannes mentioned, or a speedy patch release. Let me know, please.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10515#issuecomment-1116967570:230,test,tested,230,https://root.cern,https://github.com/root-project/root/issues/10515#issuecomment-1116967570,1,['test'],['tested']
Testability,"We have recently discovered a critical bug in RooFit which (under some arcane circumstances) causes the last bin to go missing from a `RooHistFunc`. Notably, the occurence of this effect is a rounding issue that only happens for some values of upper bounds of observables. . I have attached a python test case that showcases the problem. The assertion in the last line will fail in the current master of ROOT, but will succeed using the bugfix in this MR. import ROOT; from math import pi; ; xmin = -25.2; xmax = 6.3; nbins = 35; hfname = ""hists.root""; ; histfile = ROOT.TFile.Open(hfname,""RECREATE""); ; signalSR = ROOT.TH1F(""signalSR"",""signal"",nbins,xmin,xmax); signalSR.FillRandom(""gaus""); ; backgroundSR = ROOT.TH1F(""backgroundSR"",""background"",nbins,xmin,xmax); backgroundSR.FillRandom(""pol0""); ; signalCR = ROOT.TH1F(""signalCR"",""signal"",nbins,xmin,xmax); signalCR.FillRandom(""pol0""); ; backgroundCR = ROOT.TH1F(""backgroundCR"",""background"",nbins,xmin,xmax); backgroundCR.FillRandom(""pol0""); ; histfile.Write(); histfile.Close(); ; sigSR = ROOT.RooStats.HistFactory.Sample(""signal"","""",hfname,""signalSR""); sigSR.AddNormFactor(""mu"",1.,0.,10.,False); bkgSR = ROOT.RooStats.HistFactory.Sample(""background"","""",hfname,""backgroundSR""); bkgSR.AddNormFactor(""norm"",1.,0.,10.,False); ; sr = ROOT.RooStats.HistFactory.Channel(""SR""); sr.AddSample(sigSR); sr.AddSample(bkgSR); ; sigCR = ROOT.RooStats.HistFactory.Sample(""signal"","""",hfname,""signalCR""); sigCR.AddNormFactor(""mu"",1.,0.,10.,False); bkgCR = ROOT.RooStats.HistFactory.Sample(""background"","""",hfname,""backgroundCR""); bkgCR.AddNormFactor(""norm"",1.,0.,10.,False); ; cr = ROOT.RooStats.HistFactory.Channel(""CR""); cr.AddSample(sigCR); cr.AddSample(bkgCR); ; ; meas = ROOT.RooStats.HistFactory.Measurement(""meas""); meas.AddChannel(sr); meas.AddChannel(cr); . meas.CollectHistograms(); ws = ROOT.RooStats.HistFactory.HistoToWorkspaceFactoryFast.MakeCombinedModel(meas); pdf = ws.pdf(""model_SR""); obs = ws.var(""obs_x_SR""); hist = pdf.createHistogram(""hist"",obs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1916:300,test,test,300,https://root.cern,https://github.com/root-project/root/pull/1916,2,"['assert', 'test']","['assertion', 'test']"
Testability,We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3747:70,test,test,70,https://root.cern,https://github.com/root-project/root/pull/3747,1,['test'],['test']
Testability,"We implemented an iterator for field metadata in #5848, which I used to simplify `RNTupleDS` construction. I thought I'd also take the opportunity to start a `RNTupleDS` test suite (as seen at the DataFrame level, there's existing functionality tests over here: https://github.com/root-project/root/blob/master/tree/ntuple/v7/test/ntuple_rdf.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5910:170,test,test,170,https://root.cern,https://github.com/root-project/root/pull/5910,3,['test'],"['test', 'tests']"
Testability,We incorporate a commit made originally in Cppyy in order to fix a difference of behavior between Linux and MacOs machines. For the full details please refer to:. https://bitbucket.org/wlav/cppyy/issues/132/missing-assignment-of-tp_iternext-in. This commit should make the following test:. tutorial-vecops-vo004_SortAndSelect-py. succeed also on MacOs machines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4117:283,test,test,283,https://root.cern,https://github.com/root-project/root/pull/4117,1,['test'],['test']
Testability,"We lack a tutorial and/or a documentation of the pythonization for `ROOT.RDF.MakeNumpyDataFrame`. So far, the best documentation is in the tests [here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6953:139,test,tests,139,https://root.cern,https://github.com/root-project/root/issues/6953,2,['test'],"['test', 'tests']"
Testability,"We merged https://github.com/root-project/root/pull/13273 this morning. In order to move forward, we need to; * [ ] rebase on current `master`; * [ ] get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/; * [ ] get a CMSSW test on PowerPC64 (the above test is for `x86`!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1849638185:279,test,test,279,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1849638185,2,['test'],['test']
Testability,"We might be in a situation where we linked the library into an executable and; our trigger function is inside it. There is no point in trying to load rdict; and pcm files as it will fail. In that case we exit early avoiding the; invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3896:257,assert,assert,257,https://root.cern,https://github.com/root-project/root/pull/3896,6,"['assert', 'test']","['assert', 'test', 'tested']"
Testability,"We might want to task CMS to test this one, just to check if it fixes https://github.com/root-project/root/issues/13429...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13463#issuecomment-1680514416:29,test,test,29,https://root.cern,https://github.com/root-project/root/pull/13463#issuecomment-1680514416,1,['test'],['test']
Testability,"We need changes because of a new format for compression settings.; We can see failure on Windows. Test 2 : Check size & compression factor of a Root file........ FAILED; last =10034, comp=2.193206",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2938:98,Test,Test,98,https://root.cern,https://github.com/root-project/root/pull/2938,1,['Test'],['Test']
Testability,We need this to avoid build errors in `yoda` and test root master in CMSSW CXXModules integration builds,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4467#issuecomment-538276379:49,test,test,49,https://root.cern,https://github.com/root-project/root/pull/4467#issuecomment-538276379,1,['test'],['test']
Testability,"We need to be able to build release binaries. This is likely somehow connected also to the new CI :-) @smuzaffar I'd be interested to hear your thoughts on this... Maybe we can address this (and still enable https://github.com/root-project/root/issues/12270) by the following sequence for the regular CI:. 1. build ROOT; 2. build the (tar.gz|rpm|deb|...) package; 4. delete build and source dir; 5. unpack the tar.gz package; 6. run roottest; 7. if release: make package available on root.cern. Installing a `.pkg` file on macOS, or an install package on Windows will be very intrusive, so maybe there we can only do steps 5 and 6 using a tar.gz / zip, but that's already better than what we have today. The goal should be to ""test what we release"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12272:727,test,test,727,https://root.cern,https://github.com/root-project/root/issues/12272,1,['test'],['test']
Testability,"We need to test thoroughly, and I wanted to give it a go at the nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/752#issuecomment-314885346:11,test,test,11,https://root.cern,https://github.com/root-project/root/pull/752#issuecomment-314885346,1,['test'],['test']
Testability,"We now reset `fMustRunEventLoop` when a new named filter is added.; This fixes ROOT-9117: TDF now correctly re-runs the event-loop if; users ask for a cutflow report for a named filter that has been; added after a first event-loop has already been performed. In the future we might want to improve the inner logic so that; only the new named filters (and possibly new actions) are executed,; but the old filters are not re-run if not needed. [PR 109](https://github.com/root-project/roottest/pull/109) in roottest adds a test for this scenario.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1377:308,log,logic,308,https://root.cern,https://github.com/root-project/root/pull/1377,2,"['log', 'test']","['logic', 'test']"
Testability,"We passed the whole testsuite, great! I think it's ready for the review :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1178399660:20,test,testsuite,20,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1178399660,1,['test'],['testsuite']
Testability,"We prefer keeping as much data and logic as possible in the non-template; base classes (RFilterBase, RDefineBase, etc.) rather than in the; concrete templated implementations (RFilter, RDefine) so that compiler; and interpreter have to generate a bit less code. (these changes are a by-product of the work on systematics, but since they are standalone it's possible to review them separately).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9186:35,log,logic,35,https://root.cern,https://github.com/root-project/root/pull/9186,1,['log'],['logic']
Testability,We probably need to add testing of friend trees before greenlighting this :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1135#issuecomment-334404801:24,test,testing,24,https://root.cern,https://github.com/root-project/root/pull/1135#issuecomment-334404801,1,['test'],['testing']
Testability,We probably want the same in `.github/workflows/test-result-comment.yml` to get rid of the comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14613#issuecomment-1931774309:48,test,test-result-comment,48,https://root.cern,https://github.com/root-project/root/pull/14613#issuecomment-1931774309,1,['test'],['test-result-comment']
Testability,"We really only want Google tests in root.git (I realize I did not word that clearly enough), so I will apply your test (thanks!) to our dedicated roottest.git repo. Could you split the test into a separate commit? That way I don't mess with your changes as much :-) Or if you don't mind me messing with your commits I can also split this myself - let me know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-804060890:27,test,tests,27,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-804060890,3,['test'],"['test', 'tests']"
Testability,"We removed the pytest shipped with roottest because the source code was from 2014 and incompatible with py3.9 (see #6597). However, this poses now the issue on MacOs with python2 that we have to install pytest. Without a virtual environment, MacOS does not allow to pip packages. Since roottest fails on configuration level without pytest, roottest is currently broken in this configuration. @axel @oshadura What should we do? Our CI always runs roottest against python3, so we currently don't see the issue in our infrastructure. I see three options:; 1. Ditch testing of python2 on MacOS and rely on the test coverage of other platforms (python2 is anyway dead); 2. Use a venv overlay in Jenkins for the MacOS nodes (haven't tested but it should work and is binary compatible with the system python); 3. We change the hard failure of roottest to a soft failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6686:562,test,testing,562,https://root.cern,https://github.com/root-project/root/issues/6686,3,['test'],"['test', 'tested', 'testing']"
Testability,We replace it with a combination of a global property and an additional custom target.; The global property is used to collect the dependencies created before the modules.idx target is created.; The custom target is used as a direct dependency of the custom_command (add_dependencies can not be used on the target of a custom_command). Then we can use; this custom target to collect the dependencies created after the modules.idx target. This fixes #10510. To test:. ```; ls -rtl lib/modules.idx lib/libEve.so; rm lib/*Eve*; ninja # or make or cmake --build ; this should update modules.idx; ls -rtl lib/modules.idx lib/libEve.so; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11506:460,test,test,460,https://root.cern,https://github.com/root-project/root/pull/11506,1,['test'],['test']
Testability,"We see more or less the same thing in dev4 now: ; Ironically the ""opt"" build gives more of an error message than the debug build; opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763; dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964#issuecomment-2003453893:173,test,testDetails,173,https://root.cern,https://github.com/root-project/root/issues/14964#issuecomment-2003453893,4,['test'],"['test', 'testDetails']"
Testability,We see several timeouts when running in coverage mode; this might help. We also really do not care about coverage of interpreter/: there are dedicated test suites that are not run as part of testing ROOT. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13490:151,test,test,151,https://root.cern,https://github.com/root-project/root/pull/13490,3,['test'],"['test', 'tested', 'testing']"
Testability,"We see the assert ""Specialization is already registered as lazy"" triggered; due to a hash collision of two sets of template arguments: the arguments; are different but the hash happens to be identical. Be more specific when; claiming that the specialization was already registered as lazy, by not; only comparing the hash, but also the template arguments we found under; that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:; $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C; where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition; |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init; | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr; | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | |-MoveConstructor exists simple trivial needs_implicit; | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param; | |-MoveAssignment exists simple trivial needs_implicit; | `-Destructor simple irrelevant trivial needs_implicit; `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9248:11,assert,assert,11,https://root.cern,https://github.com/root-project/root/pull/9248,3,"['assert', 'test']","['assert', 'assertions', 'tested']"
Testability,"We seem to fail to generate the dtor of `ParamFunctorHandler` via instantiating the ctor `~ParamFunctorHandler` -> `~ParamFunctionBase`-> `~ParamFunctorHandler`. For some reason the template instantiator thinks that it does not need to instantiate the dtor. Minimal reproducer:; ```; cat stressMC_reduced.cxx ; #include <TTree.h>; #include <TF1.h>; using namespace ROOT::Math;. class StatFunction : public ROOT::Math::IParamFunction {; public:. unsigned int NPar() const override { return 0; }; const double * Parameters() const override { return nullptr; }; ROOT::Math::IGenFunction * Clone() const override { return nullptr; }; void SetParameters(const double * p) override { }. // test cumulative function; void Test() {; TF1 * f = new TF1(""ftemp"",ParamFunctor(*this),0,0,0);; }. private:. double DoEvalPar(double x, const double * ) const override {; return 0;; }. };. typedef StatFunction Dist_beta;; int testStatFunctions() {; Dist_beta dist;; dist.Test();; return 0;; }. class VectorTest {; public:; template<class V>; double testWrite(V & dataV, std::string typeName="""") {; TTree tree(""VectorTree"","""");. // need to add namespace to full type name; if (typeName == """") {; }. tree.Fill();. return 0;; }; };. int stressMC_reduced(double nscale = 1) {; return 0;; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-607082228:684,test,test,684,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-607082228,5,"['Test', 'test']","['Test', 'test', 'testStatFunctions', 'testWrite']"
Testability,"We should add the infamous Open Data benchmarks to rootbench. Originally meant to showcase the DF programming model (see https://github.com/stwunsch/opendata-benchmarks), it went now a little bit out of hand and it's used for measuring ROOT performance (see the fork here https://github.com/masonproffitt/opendata-benchmarks and the forum entry here https://root-forum.cern.ch/t/scalability-of-rdataframes-on-16-cores/44222). At the end, they have nice properties, which we should profile, like a significant amount of jitted code and quite a lot of allocations due to the missing SBO in RVec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7745:37,benchmark,benchmarks,37,https://root.cern,https://github.com/root-project/root/issues/7745,3,['benchmark'],['benchmarks']
Testability,"We should also adjust the tests that expect / allow ""Pre-release format version"" in the diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16769#issuecomment-2442067542:26,test,tests,26,https://root.cern,https://github.com/root-project/root/pull/16769#issuecomment-2442067542,1,['test'],['tests']
Testability,"We should also apply this patch to DistRDF. I'll let you choose if you want to put it in this PR or I will open another one later. ```diff; diff --git a/bindings/experimental/distrdf/python/DistRDF/__init__.py b/bindings/experimental/distrdf/python/DistRDF/__init__.py; index cf0d095e7a..765aea1c56 100644; --- a/bindings/experimental/distrdf/python/DistRDF/__init__.py; +++ b/bindings/experimental/distrdf/python/DistRDF/__init__.py; @@ -17,7 +17,7 @@ import types; ; import concurrent.futures; ; -from typing import TYPE_CHECKING; +from typing import Iterable, TYPE_CHECKING; ; from DistRDF.Backends import build_backends_submodules; ; @@ -71,7 +71,7 @@ def create_logger(level=""WARNING"", log_path=""./DistRDF.log""):; return logger; ; ; -def RunGraphs(proxies):; +def RunGraphs(proxies: Iterable) -> int:; """"""; Trigger the execution of multiple RDataFrame computation graphs on a certain; distributed backend. If the backend doesn't support multiple job; @@ -83,6 +83,9 @@ def RunGraphs(proxies):; actions belonging to different RDataFrame graphs will be; triggered to avoid useless calls.; ; + Return:; + (int): The number of unique computation graphs executed by this call.; +; Example:; ; @code{.py}; @@ -99,7 +102,7 @@ def RunGraphs(proxies):; ]; ; # Execute the 3 computation graphs; - RunGraphs(histoproxies); + n_graphs_run = RunGraphs(histoproxies); # Retrieve all the histograms in one go; histos = [histoproxy.GetValue() for histoproxy in histoproxies]; @endcode; @@ -121,6 +124,8 @@ def RunGraphs(proxies):; futures = [executor.submit(execute_graph, proxy.proxied_node) for proxy in uniqueproxies]; concurrent.futures.wait(futures); ; + return len(uniqueproxies); +; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13167#issuecomment-1619699859:711,log,log,711,https://root.cern,https://github.com/root-project/root/pull/13167#issuecomment-1619699859,2,['log'],"['log', 'logger']"
Testability,We should probably add a [rootbench](https://github.com/root-project/rootbench) benchmark testing the improvement.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2386#issuecomment-409124823:80,benchmark,benchmark,80,https://root.cern,https://github.com/root-project/root/pull/2386#issuecomment-409124823,2,"['benchmark', 'test']","['benchmark', 'testing']"
Testability,"We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. In principle, we could also raise an exception every time a user tries `from ROOT import *` (beware that we have this in our own test suite, so we *will* see errors)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14588#issuecomment-1926899762:234,test,test,234,https://root.cern,https://github.com/root-project/root/pull/14588#issuecomment-1926899762,1,['test'],['test']
Testability,We should probably have a test for this change.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14451#issuecomment-1913104602:26,test,test,26,https://root.cern,https://github.com/root-project/root/pull/14451#issuecomment-1913104602,1,['test'],['test']
Testability,We should probably move 'Revert cling patch that broke using ParentClass::Method;' in a separate PR to test if it breaks anything in regular builds.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/788#issuecomment-317681393:103,test,test,103,https://root.cern,https://github.com/root-project/root/pull/788#issuecomment-317681393,1,['test'],['test']
Testability,"We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python; 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15168:88,log,logs,88,https://root.cern,https://github.com/root-project/root/pull/15168,1,['log'],['logs']
Testability,We should really have a test for this...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14887#issuecomment-1980273959:24,test,test,24,https://root.cern,https://github.com/root-project/root/pull/14887#issuecomment-1980273959,1,['test'],['test']
Testability,We should turn it `Off` by default (to make people notice the deprecation); the testing machinery will automatically turn it `On`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3730#issuecomment-487950793:80,test,testing,80,https://root.cern,https://github.com/root-project/root/pull/3730#issuecomment-487950793,1,['test'],['testing']
Testability,"We test RVec I/O and it works. Unless Philippe knows off the top of his head, we'll fix other bugs when we encounter them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7920#issuecomment-822480477:3,test,test,3,https://root.cern,https://github.com/root-project/root/pull/7920#issuecomment-822480477,1,['test'],['test']
Testability,We think the failing tests are not because of the changes in this PR but because of the configuration with `veccore` + `vc` in Jenkins. I removed a conflicting commit with master (the one changing `FitUtil::setAutomaticChunking`) and the commit with the clang-format huge diff (which was manageable after the last changes on `.clang-format`). The PR should be ready to merge when the Jenkins configuration is ready!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793#issuecomment-320708226:21,test,tests,21,https://root.cern,https://github.com/root-project/root/pull/793#issuecomment-320708226,1,['test'],['tests']
Testability,"We uncovered this bug from the changes in fail-on-missing behavior. The test uses only Vc, and uses it directly:. ```; root/test/testGenVectorVc.cxx:67:30: error: ‘Vc’ was not declared in this scope; typedef std::vector<Data, Vc::Allocator<Data>> Vector;; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1988:72,test,test,72,https://root.cern,https://github.com/root-project/root/pull/1988,3,['test'],"['test', 'testGenVectorVc']"
Testability,"We want to avoid rebasing branches from forks altogether, and just use patches only. So once my PR to CPyCppyy is merged, these lines can be removed from the sync script. It's my fault that it didn't get merged yet. I still have to implement a unit test :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15151#issuecomment-2278395982:249,test,test,249,https://root.cern,https://github.com/root-project/root/pull/15151#issuecomment-2278395982,1,['test'],['test']
Testability,"We want to upload any successful build, even if it fails testing (which makes the step and job fail since commit c8c0ea7c59).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12830:57,test,testing,57,https://root.cern,https://github.com/root-project/root/pull/12830,1,['test'],['testing']
Testability,"We were missing data in Snapshot's output due to the missing explicit writes.; I do not understand why, but it can be tested by snapshotting columns from a file with many clusters.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1085#issuecomment-333386656:118,test,tested,118,https://root.cern,https://github.com/root-project/root/pull/1085#issuecomment-333386656,1,['test'],['tested']
Testability,"We were not as general as we wanted to be:; ```c++; auto f = {""f1.root"", ""f2.root""};; TDataFrame(""tree"", f);; ```; could not compile. Move the responsibility to convert collections of; filenames to vector<string> to users. @dpiparo do you agree with this change? (note that it breaks no tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1157:287,test,tests,287,https://root.cern,https://github.com/root-project/root/pull/1157,1,['test'],['tests']
Testability,We will also need a follow up PR for testing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16518#issuecomment-2407236925:37,test,testing,37,https://root.cern,https://github.com/root-project/root/pull/16518#issuecomment-2407236925,1,['test'],['testing']
Testability,We will be testing this case with https://github.com/root-project/roottest/pull/866,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9136#issuecomment-1092892872:11,test,testing,11,https://root.cern,https://github.com/root-project/root/issues/9136#issuecomment-1092892872,1,['test'],['testing']
Testability,We will consider that. May be meanwhile you can provide ( and test) a more optimised version of RemoveAllPoints ? What about just doing fPoints = 0 and leaving the space allocated ? if you what to really remove the point it is faster to remove the TGraph ..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/39#issuecomment-64215503:62,test,test,62,https://root.cern,https://github.com/root-project/root/pull/39#issuecomment-64215503,1,['test'],['test']
Testability,"We would like to have an option to reparametrise shape-factors, i.e. the per-bin normalisation factors in HistFactory. This would be useful for template fits where different histograms represent different values of some parameter, e.g. mass. Currently, it seems that only NormFactors can be reparametrised and the code crashes with a seg fault when trying to reparametrise the shape factors. See the example attached. [shapeFactorCrash.zip](https://github.com/root-project/root/files/10581134/shapeFactorCrash.zip). ### Describe the solution you'd like; We would like to be able to use HistFactory::Measurement::AddPreprocessFunction for shapefactors. ### Describe alternatives you've considered; There is a workaround by doing this reparametrisation manually, but it cumbersome and errorprone. ### Additional context; Note that even if this is not supported, the code should probably not crash with a seg fault (tested with ROOT Version: 6.27/01)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12225:913,test,tested,913,https://root.cern,https://github.com/root-project/root/issues/12225,1,['test'],['tested']
Testability,We're already adding `-fno-semantic-interposition` since commit https://github.com/root-project/root/commit/e564c8a04feb2b6fa18a2f429d8fb5a103825a34 / PR #8204 which I *think* should already set the visibility such that LLVM symbols are hidden from other libraries. Did you recently test a `master` build or 6.24/02?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8717#issuecomment-885006174:283,test,test,283,https://root.cern,https://github.com/root-project/root/pull/8717#issuecomment-885006174,1,['test'],['test']
Testability,"We're preloading all modules now, so runtime cxxmodules have all the identifier information which completely replacesrootmap files. > Why is this seen only in the cxxmodule case?. https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/; For me it looks like another transaction thing (In TCling::RegisterModule) Transaction, again..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394475486:308,test,testReport,308,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394475486,1,['test'],['testReport']
Testability,"We've been trying to figure out why Vincenzo doesn't see this. It turns it's ~~regexes~~ string matching: his build path starts with his source path, and that makes `rootcling_impl` drop `buildpath/include` from the list of header paths that are written to the dictionary. Offending logic is here:. https://github.com/root-project/root/blob/730d24b73296a7d0b78d33588a5c9fdbb80e6731/core/dictgen/src/rootcling_impl.cxx#L4097-L4115. We think the fix should be put in `ROOT_GENERATE_DICTIONARY`, that already sets some `excludePaths` e.g. at https://github.com/root-project/root/blob/68ffb0bda479cd1fd10908f1264e8d42c29339f6/cmake/modules/RootMacros.cmake#L329. and https://github.com/root-project/root/blob/68ffb0bda479cd1fd10908f1264e8d42c29339f6/cmake/modules/RootMacros.cmake#L463",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-770999169:283,log,logic,283,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-770999169,1,['log'],['logic']
Testability,WebGUI doesn't work with snap sandboxing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16488:30,sandbox,sandboxing,30,https://root.cern,https://github.com/root-project/root/issues/16488,1,['sandbox'],['sandboxing']
Testability,"Weird coincidence that the only test failure is in a test that uses TBufferMerger, but it should be completely unrelated to my changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7550#issuecomment-800980312:32,test,test,32,https://root.cern,https://github.com/root-project/root/pull/7550#issuecomment-800980312,2,['test'],['test']
Testability,"Weird, but on the Fedora 39 nightlies thre are other tests failing, like `tutorial-tmva-TMVA_CNN_Classification`. Are we sure that this is the same environment?. I don't see how the test failure in this PR can be related, because in the `import_load_libs` it doesn't do `import ROOT.Foo` or `from ROOT.Foo import ...`, which is the only case in which this PR changes the behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14098#issuecomment-1836136993:53,test,tests,53,https://root.cern,https://github.com/root-project/root/pull/14098#issuecomment-1836136993,2,['test'],"['test', 'tests']"
Testability,"Weird, works for me:. ```; ~ root; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 15 2022, 12:41:54 |; | From heads/df-rename-factories@v6-25-02-2003-g2c2661d55f |; | With c++ (GCC) 12.1.1 20220730 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #; root [1] #; root [2] #; root [3]; ```; ```; ~ root-config --features; cxx17 asimage asserts builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_xrootd ccache clad dataframe exceptions fftw3 fitsio gdml http imt mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 webgui root7 rpath runtime_cxxmodules shared sqlite ssl spectrum vdt x11 xml xrootd; ```; ```; ~ root-config --cflags; -pthread -std=c++17 -m64 -I/home/blue/ROOT/master/cmake-build-foo/include; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11190#issuecomment-1216274892:605,assert,asserts,605,https://root.cern,https://github.com/root-project/root/issues/11190#issuecomment-1216274892,1,['assert'],['asserts']
Testability,"Weird. Does it work with regular ROOT on this node / with this build? (You could log on, set up externals, set up ROOT and try.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-393065227:81,log,log,81,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-393065227,1,['log'],['log']
Testability,Well .. odd indeed ... I would expect the comment to affect the TTree size ... Nonetheless did you try this test locally?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1534#issuecomment-429049935:108,test,test,108,https://root.cern,https://github.com/root-project/root/pull/1534#issuecomment-429049935,1,['test'],['test']
Testability,"Well it passes a few headers by default (the one needed for compilation the dictionary code infrastructure .. which include <vector>). > leads to an infinite loop. Interestingly, it is not GenerateDictionary that is going into an infinite loop but rootcling that is failing on processing the 'incomplete' header. i.e. ```gInterpreter->GenerateDictionary(""std::vector<std::array<int, 5>>"", ""TNamed.h"")``` avoid the proposed test **and still** get rootcling into a infinite loop. You see this yourself, suspending the root.exe process and attaching (or re-running) the rootcling process running the time. (The linkdef parser seems to have problem with the 'unknown' type vector<array....>). Cheers,; Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1724#issuecomment-371922098:423,test,test,423,https://root.cern,https://github.com/root-project/root/pull/1724#issuecomment-371922098,1,['test'],['test']
Testability,"Well looking at the debug logs, all failed jobs die after ""kXR_protocol"" and before "" and before ""Sending out kXR_login request"". I haven't been able to download logs from too many successful jobs. But I have three - two reading from RAL and one reading in LAPP. I give a link to the log files and the last DEBUG line of the failed jobs and the same line plus the next for the successful jobs. So perhaps a question of what is happening in the code between these two points?. see you, RD. Successful RAL:. https://bigpanda.cern.ch//media/filebrowser/667e8363-d9bb-4ebd-800f-79d3495d1b3a/panda/tarball_PandaJob_4925629005_RAL/payload.stdout. [2020-12-18 14:20:13.919081 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400); [2020-12-18 14:20:13.919352 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request, username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=tatls002-2010227.0-lcg2237.gridpp.rl.ac.uk&xrd.rn=v4.10.0, dual-stack: false, private IPv4: true, private IPv6: false. Successful UK WATERLOO:. https://bigpanda.cern.ch//media/filebrowser/772fff72-3e22-499f-8a3f-aa8956ea5636/panda/tarball_PandaJob_4926186410_RAL/payload.stdout. [2020-12-19 00:45:02.375203 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400); [2020-12-19 00:45:02.375430 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request, username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=tatls002-2013477.0-lcg2259.gridpp.rl.ac.uk&xrd.rn=v4.10.0, dual-stack: false, private IPv4: true, private IPv6: false. Successful IN2P3 LAPP_LAKE. https://bigpanda.cern.ch//media/filebrowser/f9695015-c110-4e2e-9c62-d56eade824f8/panda/tarball_PandaJob_4926136184_IN2P3-LAPP_LAKE/payload.stdout. [2020-12-19 02:08:57.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758062082:26,log,logs,26,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758062082,3,['log'],"['log', 'logs']"
Testability,Well there is also a few tests in the `test` folders...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14382#issuecomment-1898796910:25,test,tests,25,https://root.cern,https://github.com/root-project/root/pull/14382#issuecomment-1898796910,2,['test'],"['test', 'tests']"
Testability,"Well yes - if I build `1/` and enable roottest for that build I'd expect that roottest would test that build, no? I think that's a fairly common thing to ""have a build of X with tests enabled"" - and if I do that I don't expect that to test something else than the build for which I'm enabling the tests?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7081#issuecomment-765467826:93,test,test,93,https://root.cern,https://github.com/root-project/root/issues/7081#issuecomment-765467826,4,['test'],"['test', 'tests']"
Testability,"Well yes, the final commit history of this PR will show the implementation, tests, tutorials separately in different commits. All commits then can have Stephan and Julia as co-authors (or at the very least the commits that involve the implementation of the feature). Sounds good?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13210#issuecomment-1630451863:76,test,tests,76,https://root.cern,https://github.com/root-project/root/pull/13210#issuecomment-1630451863,1,['test'],['tests']
Testability,"Well, I can shed some light on how the Xrootd client works (as I'm taking care of that part of xrootd):. - `succesful parsing of kXR_protol` comes from https://github.com/xrootd/xrootd/blob/93871f8241e478a308c8e722fd99aeaa08ff6459/src/XrdCl/XrdClXRootDTransport.cc#L1546-L1552, it means we successfully parsed the server response to `kXR_protocol` and this is the end of `ProcessProtocolResp` routine; - the next step is to generate the initial `kXR_login` request; https://github.com/xrootd/xrootd/blob/stable-4.12.x/src/XrdCl/XrdClXRootDTransport.cc#L441-L454; - if there is a problem in the xrootd client it will be in the `GenerateLogIn` method as by the end of that one the `Sending out kXR_login request ...` log line is printed: https://github.com/xrootd/xrootd/blob/stable-4.12.x/src/XrdCl/XrdClXRootDTransport.cc#L1711-L1716. That said, there's really not much happening in `GenerateLogIn` but I will inspect the code carefully once again ... Do we have the machine name that was hosting the job at CERN?. P. S. Just in case I will ping Andy so he can have a look at, maybe he will come up with some good explanation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758205094:715,log,log,715,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758205094,1,['log'],['log']
Testability,"Well, I cannot test it on MacOS...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11535#issuecomment-1274906502:15,test,test,15,https://root.cern,https://github.com/root-project/root/pull/11535#issuecomment-1274906502,1,['test'],['test']
Testability,"Well, I doubt there are some out-of-band data being sent/received. @rodwalker, @rdschaffer would it be possible to reproduce the problem with xrootd client logs switched on (`XRD_LOGLEVEL=Dump`)?. Regarding ABI compatibility, we ensure ABI forward compatibility, meaning that it is safe to link an application built with an older version of xrootd, with a newer version of the library (e.g. one can build his application with say `4.11.0` and then link with `4.12.0`). The opposite is not possible. Of course this applies to all releases from `4.x.x` series, the ABI has been broken when we moved to XRootD5.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-745569137:156,log,logs,156,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-745569137,1,['log'],['logs']
Testability,"Well, actually it was less work than I thought.; I implemented now all the additions, changes and suggestions from @lmoneta. I used now std::vector everywhere it's features are useful. For the rest I stayed with using arrays to stay similar to all other TGraph objects. I moved the functions GetPointX, GetPointY, SetPointX, SetPointY and GetObjectInfo to the TGraph class because they apply to any TGraph object and only were in my custom class cause I could not implement them in TGraph without using a custom Root installation. I replaced the funtion SetNErrorDimensions by the functions AddYError and DeleteYError as proposed by @lmoneta. Since I think the meaning of ""dimension"" might not be 100% clear, I exchanged it to a term claryfing that it corresponds to different y errors. Besides that I implemented some further features and fixed a memory leak in the function PaintGraphMultiErrors in the TGraphPainter class. I also added a test macro testing the most critical features like streaming the class, adding / deleting points and y errors and the summation of y errors for fitting with different methods.; Furthermore, I added a small tutorial macro that shows how to use the basic functionalities of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-559211358:941,test,test,941,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-559211358,2,['test'],"['test', 'testing']"
Testability,"Well, it mostly just exposes a bug more visible (the lack of codegen when loading code with `LoadModule`) which causes more tests to fail. And fixing codegen problems isn't very straightforward :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1394#issuecomment-361362564:124,test,tests,124,https://root.cern,https://github.com/root-project/root/pull/1394#issuecomment-361362564,1,['test'],['tests']
Testability,"Well, now I uninstalled it as Axel requested it. You will not see these errors on the PR anymore, but roottest is still broken if ROOT is installed. It needs to use the ROOT being tested, not the installed one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3940#issuecomment-502815892:180,test,tested,180,https://root.cern,https://github.com/root-project/root/pull/3940#issuecomment-502815892,1,['test'],['tested']
Testability,"Well, one thing that is clear is that this problem seems to be associated with specific sites. For my 'test' job:. [test job](https://bigpanda.cern.ch/task/23578674/). The sites that are successful either have local reading, or they use xrootd without problems. The latter are: ; SWT2_CPB; IN2P3-LPSC_LAKE; RAL. For the failures, these are all just xrootd problems, at sites:; IN2P3-CPPM; CERN-T0; TOKYO; BNL. So I would suspect some difference in the xrootd installation between these two sites. (I personally have no idea how to check this.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-747328346:103,test,test,103,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-747328346,2,['test'],['test']
Testability,"Well, the failing test shows that there is indeed a problem with my changes. I will push a new version shortly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/666#issuecomment-309806142:18,test,test,18,https://root.cern,https://github.com/root-project/root/pull/666#issuecomment-309806142,1,['test'],['test']
Testability,"Well, the other change could have already been merged and we could test the rootcling PR by now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/944#issuecomment-327418167:67,test,test,67,https://root.cern,https://github.com/root-project/root/pull/944#issuecomment-327418167,1,['test'],['test']
Testability,"Well, this simple example works just fine for me on Windows and CentOS7:; ```; void testSignalSlot(); {; TGMainFrame *mainframe = new TGMainFrame(gClient->GetRoot(), 300, 170);; TGCheckButton *myTGCheckBox = new TGCheckButton(mainframe, new TGHotString(""Change Text""), -1);; mainframe->AddFrame(myTGCheckBox, new TGLayoutHints(kLHintsCenterX | kLHintsCenterY));; TGTextButton *myButton = new TGTextButton(mainframe, ""&Any Text"");; mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));; myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");; mainframe->MapSubwindows();; mainframe->Layout();; mainframe->MapWindow();; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7195#issuecomment-779084167:84,test,testSignalSlot,84,https://root.cern,https://github.com/root-project/root/issues/7195#issuecomment-779084167,1,['test'],['testSignalSlot']
Testability,"Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):; ```; for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry); {; tree->GetEntry(entry);; }; ```; [Slightly related question, did you run any of the test after successfully compiling?]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8425#issuecomment-861655915:256,test,test,256,https://root.cern,https://github.com/root-project/root/pull/8425#issuecomment-861655915,1,['test'],['test']
Testability,"Well-known branch names, e.g. `master` or `v6-28-00-patches` always use the equivalent upstream roottest branch. However, we should be careful not to match a substring. Concretely, before this patch, `master-14449` was incorrectly taken as a well-known branch causing the error below.; ```; Cloning into 'roottest'...; fatal: Remote branch master-13449 not found in upstream origin; CMake Error at CMakeLists.txt:780 (message): Expected roottest at 'C:/ROOT-CI/src/roottest' (not a directory?); ```. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13504:521,test,tested,521,https://root.cern,https://github.com/root-project/root/pull/13504,1,['test'],['tested']
Testability,Wextra] . ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf502_wspacewrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52751/testReport/projectroot/runtutorials/tutorial_roofit_rf502_wspacewrite/); - [projectroot.test.test_stressroofit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52751/testReport/projectroot/test/test_stressroofit/); - [projectroot.test.test_stressroostats](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52751/testReport/projectroot/test/test_stressroostats/); - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52751/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.runtutorials.tutorial_roostats_CreateExampleFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52751/testReport/projectroot/runtutorials/tutorial_roostats_CreateExampleFile/); - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52751/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52751/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_simple/); - [projectroot.roofit.histfactory.test.gtest_roofit_histfactory_test_testHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52751/testReport/projectroot.roofit.histfactory/test/gtest_roofit_histfactory_test_testHistFactory/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooGaussian](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52751/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooGaussian/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52751/testReport/projectroot/test/test_stressHistFactory_interpreted/). And 183 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3345#issuecomment-459268509:1420,test,testReport,1420,https://root.cern,https://github.com/root-project/root/pull/3345#issuecomment-459268509,13,['test'],"['test', 'testReport']"
Testability,"Wformat=] ; - [2022-11-29T18:10:56.828Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/test/test_Queue.cxx:94:11: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 9 has type ‘__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned int&gt;, unsigned int&gt;::value_type’ {aka ‘unsigned int’} [-Wformat=] ; - [2022-11-29T18:10:56.828Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/test/test_Queue.cxx:94:11: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 10 has type ‘__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned int&gt;, unsigned int&gt;::value_type’ {aka ‘unsigned int’} [-Wformat=] ; - [2022-11-29T18:10:56.828Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/test/test_Queue.cxx:94:11: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 11 has type ‘__gnu_cxx::__alloc_traits&lt;std::allocator&lt;unsigned int&gt;, unsigned int&gt;::value_type’ {aka ‘unsigned int’} [-Wformat=] . And 10 more. ### Failing tests:; - [projectroot.io.io.test.gtest_io_io_test_TFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160297/testReport/projectroot.io.io/test/gtest_io_io_test_TFile/); - [projectroot.net.netxng.test.gtest_net_netxng_test_RRawFileNetXNG](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160297/testReport/projectroot.net.netxng/test/gtest_net_netxng_test_RRawFileNetXNG/); - [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160297/testReport/projectroot/test/test_stressIOPlugins_xroot/); - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160297/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11776#issuecomment-1331128616:3883,test,tests,3883,https://root.cern,https://github.com/root-project/root/pull/11776#issuecomment-1331128616,13,['test'],"['test', 'testReport', 'tests']"
Testability,What @bellenot says :) Was this tested with `-Droofit_multiprocess=ON`? I don't remember if that was included in the CI test suite in the end.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14003#issuecomment-1885027729:32,test,tested,32,https://root.cern,https://github.com/root-project/root/pull/14003#issuecomment-1885027729,2,['test'],"['test', 'tested']"
Testability,"What I did with definitions is a bit too simple. If you use `target_add_defintions` (only possible for imported interface targets in CMake 3.11+), CMake strips the `-D` if there is one. If you directly set the property, however, it's up to the user to strip it. I'm still interested in the result of this test build, but I'll need to fix the definitions addition before continuing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-385710986:305,test,test,305,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-385710986,1,['test'],['test']
Testability,"What I see is that TTree is still about twice as slow as TTree for Jakob's benchmark, the patch does not affect the timings drastically. The number of calls to TBranch::GetEntry were counted with callgrind, the unit is retired cpu instructions. The flamegraphs seem to suggest that the bulk of the slowdown comes from the overhead of going through TTreeReaderValue::Get, GetAddress and ProxyReadTemplate instead of directly calling GetEntry. I'm away next week but you should be able to run the benchmark easily, it's at https://github.com/bluehood/iotools/tree/rootonly (branch rootonly) and the README contains instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3216#issuecomment-455835746:75,benchmark,benchmark,75,https://root.cern,https://github.com/root-project/root/pull/3216#issuecomment-455835746,2,['benchmark'],['benchmark']
Testability,"What I'm saying is that probably the wrong metadata is passed to the RDataFrame in the `_generate_rdf_creator` function. Maybe here (it's just a hunch, I didn't make a thorough check):; ```python; ds = ROOT.RDF.Experimental.RSpecBuilder(); # add a group with no name to represent the whole dataset; ds.AddGroup(("""", clustered_range.treenames, clustered_range.filenames)); ds.WithRange((clustered_range.globalstart, clustered_range.globalend)); ```; The way the dataset is created in the test (i.e. by the user) does not interfere at all",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11526#issuecomment-1340910506:487,test,test,487,https://root.cern,https://github.com/root-project/root/pull/11526#issuecomment-1340910506,1,['test'],['test']
Testability,"What about const char* for arguments?. The usage will be like this:; eveMng = REX::REveManager::Create();; eveMng->AddLocation(""mydir/"", ""/home/alja/root-dev/EveWebApp/ui5"");; eveMng->SetDefaultHtmlPage(""file:mydir/test.html"");",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4103#issuecomment-513935442:215,test,test,215,https://root.cern,https://github.com/root-project/root/pull/4103#issuecomment-513935442,1,['test'],['test']
Testability,What about the file `hsimpleF.root` ? (`roottest_root_io_filemerger_simplef_default_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/199042/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplef_default_compr_level9/)`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15021#issuecomment-2010328422:178,test,testReport,178,https://root.cern,https://github.com/root-project/root/pull/15021#issuecomment-2010328422,1,['test'],['testReport']
Testability,"What do you mean? The log says:; `GitHub pull request #5080 of commit 8e61ce5abe749d76c2ec091933487c5f7a3616f4, no merge conflicts.`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5080#issuecomment-593415405:22,log,log,22,https://root.cern,https://github.com/root-project/root/pull/5080#issuecomment-593415405,1,['log'],['log']
Testability,"What sort of a machine do the tests. https://phsft-jenkins.cern.ch/job/root-pullrequests/127/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=slc6/testReport/junit/projectroot/test/test_GenVector_Vc/. run on ?. My bet is this is not a real CPU that properly supports SIMD instructions (SSE4 in this case) or a VM machine where the timings cannot be trusted. Sorry, but if you want a timing test for the Vc types you have to run this on a machine where the SIMD types are properly supported, and looking at the results above I would say this is currently not the case. Chris",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286571910:30,test,tests,30,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286571910,4,['test'],"['test', 'testReport', 'tests']"
Testability,"What version of OpenSSL is being used, is it the builtin one? Have you installed the CERN SSL certificates? (note `ErrParseBuffer: unknown CA: cannot verify server certificate` in the error message). Do you have a user grid certificate setup? Is Kerberos actually installed? Do you have an active Kerberos ticket while running the test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12231#issuecomment-1420328372:331,test,test,331,https://root.cern,https://github.com/root-project/root/issues/12231#issuecomment-1420328372,1,['test'],['test']
Testability,"What's the problem with `std::vector<T>` or a reference to fixed-size array?; ```; template<unsigned int N>; void func(const char(&str)[N]); {; // Whatever...; }. int main(); {; func(""test""); // Works, N is 5; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1173#issuecomment-336082685:184,test,test,184,https://root.cern,https://github.com/root-project/root/pull/1173#issuecomment-336082685,1,['test'],['test']
Testability,"When PR #4279 was initially sent on Aug 25th, the search for Python was; moved to RootBuildMacros in order to avoid a build failure due ot the; search for another package and the declaration of one of the new CMake; variables.; This seem not to be a problem anymore (something changed in the; meantime?), so the search for Python can be put back to the original; place.; This could also fix the tests failing with cxx17 due to a mismatch; between Python executable and libraries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4686:395,test,tests,395,https://root.cern,https://github.com/root-project/root/pull/4686,1,['test'],['tests']
Testability,"When ROOT macros running, they typically create canvas ""c1"".; If run macro again and again - new canvas will be created but old will be deleted.; This was not handled before in RBrowser.; Now widget is closed if correspondent RWebWindow is destroyed. Also change logic how TCanvas widget handle canvas pointer.; While ROOT manage canvas itself one cannot use `std::unique_ptr<TCanvas>` to hold pointer.; Instead canvas always searched by name and if gone - widget automatically closed. Update slightly client part",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16444:263,log,logic,263,https://root.cern,https://github.com/root-project/root/pull/16444,1,['log'],['logic']
Testability,When building latest ROOT (6.28.02) with latest Protobuf 22.4 tmva/sofie_parsers build fails during linking step with errors of the type:; ```; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::log_internal::LogMessage::OstreamView::~OstreamView()...; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::Mutex::~Mutex()'; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `utf8_range::IsStructurallyValid(...; ```; The problem seems to be caused by adding new dependency of Protobuf on Abseil in Protobuf 22.x (https://protobuf.dev/news/2022-08-03/). To make the code build I needed to:; Add in file `cmake/modules/SearchInstalledSoftware.cmake` after line ; ```; find_package(Protobuf); ```; lines (probably this should be dependent on version of Protobuf); ```; find_package(absl REQUIRED); find_package(utf8_range REQUIRED); ```; In file `tmva/sofie_parsers/CMakeLists.txt` add inside linking after line; ```; ${Protobuf_LIBRARIES}; ```; lines; ```; absl::str_format_internal; absl::log_internal_message; absl::hash; absl::flat_hash_set; absl::log_internal_check_op; utf8_range::utf8_validity; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12770:239,Log,LogMessage,239,https://root.cern,https://github.com/root-project/root/issues/12770,1,['Log'],['LogMessage']
Testability,"When building with #6385 I get the following error when building with `builtin_cling=OFF`. I haven't investigated in detail so it could be something wrong on my part:. ```log; [ 96%] Generating G__Core.cxx, ../lib/Core.pcm; cd /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/core && /home/conda/feedstock_root/build_artifacts/debug_1613296575343/_build_env/bin/cmake -E env LD_LIBRARY_PATH=/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/lib: /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/lib/libCore.so -excludePath /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source -excludePath /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/ginclude -excludePath /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/externals -excludePath /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/include -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/ginclude -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/foundation/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/cont/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/gui/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7206:171,log,log,171,https://root.cern,https://github.com/root-project/root/issues/7206,1,['log'],['log']
Testability,When building with gcc49 on osx a linker assertion happens when linking interpreter module. Trial and error reveal that setting -O0 removes the linker assertion. Dan Riley found that adding the flag -fno-omit-frame-pointer also removed the linker assertion without removing other optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/64:41,assert,assertion,41,https://root.cern,https://github.com/root-project/root/pull/64,6,['assert'],['assertion']
Testability,"When called repeatedly via TTree::GetBranch, the string allocations in; GetFullName have a notable runtime cost.; Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead.; ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal; - Do you know if there's a test that covers this case?; - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11255:534,test,test,534,https://root.cern,https://github.com/root-project/root/pull/11255,1,['test'],['test']
Testability,"When cling is embedded and the plugins are linked statically we can rely; on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely; on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2992:314,test,test,314,https://root.cern,https://github.com/root-project/root/pull/2992,1,['test'],['test']
Testability,"When compiled in with '-Ddev=ON', warning becomes errors. ```; In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:; tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]; 211 | assert(length == ConvertShapeToLength(fShapeC));; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9341:265,assert,assert,265,https://root.cern,https://github.com/root-project/root/pull/9341,3,['assert'],['assert']
Testability,"When compiled with latest gcc / clib, one get warnings like:; ```; /usr/include/string.h:241:27: error: ‘char* __builtin_strchr(const char*, int)’ argument 1 declared attribute ‘nonstring’; ```. It is because of declaration:; ```; char ut_host[UT_HOSTSIZE]; __attribute_nonstring__; /* Hostname for remote login. */; ```. Seems to be, `ut_host` cannot be used as null-terminated string.; Therefore copy value in TString before using it. Plus replace 0 -> nullptr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10688:306,log,login,306,https://root.cern,https://github.com/root-project/root/pull/10688,1,['log'],['login']
Testability,"When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`.; By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang.; When configuring:; ```; cmake ../root -Dall=On -Dbuiltin_glew=On; ```; There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```; Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:; Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build; Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx; clang: error: the clang compiler does not support '-march=native'; make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1; make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9687:419,log,log,419,https://root.cern,https://github.com/root-project/root/issues/9687,2,"['Test', 'log']","['Test', 'log']"
Testability,"When creating a TGClient instance in a standalone application. ROOT crashes. ; This reproduces the problem:; ```; #include ""TGClient.h""; #include ""TROOT.h""; #include <iostream>. void test() {; std::cout << "" ROOT is in batch "" << gROOT->IsBatch() << std::endl;; auto g = new TGClient(); ; }. int main() {; test(); ; } . This makes the fix applied for https://sft.its.cern.ch/jira/browse/ROOT-9483 not working anymore in the current master",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6483:183,test,test,183,https://root.cern,https://github.com/root-project/root/issues/6483,2,['test'],['test']
Testability,"When creating the test data sets for the CNN and RNN tutorials, it is better to create the TTree attached to the output file so we can avoid a potential issue when deleting the file and the TTree's",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14368:18,test,test,18,https://root.cern,https://github.com/root-project/root/pull/14368,1,['test'],['test']
Testability,"When filling histograms without limits in parallel a problem to be addressed is how to make sure that the ranges are compatible for the final merging.; This PR proposes a technique based on a static reference list of TAxis, kept as a static in TH1, filled/used by the different threads. The first thread calculates the TAxis ranges and saves it into the list, the others use it. The list is protected by a RW lock .; The logic is implemented in TH1::BufferEmpty and holds for TH{1,2,3}, the specificity of each TH{1,2,3} being moved to a set of new member functions called by TH1::BufferEmpty. The change in TH1Merger is required to calculate the axis and dump the internal buffers when the internal buffersize has not yet been reached. This treatment can perhaps be improved to get the same result of the single thread case. The patch also implements the hook for a call back function to implement the same functionality in the case of multi-processing. A patch with adaptation to multiproc will follow. The tutorial mt301_fillHistAutoBin.C illustrates the usage with TThreadedObject . NB: many of the changes in TH1.h come from clang-format-{3.8, 3.9, 4.0}",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/902:421,log,logic,421,https://root.cern,https://github.com/root-project/root/pull/902,1,['log'],['logic']
Testability,"When generating the GQt module in rootcling, we hit the assertions; in forceAppend assertions about ""Duplicates?!"" with this declaration:. ```; CXXRecordDecl 0x55555643fae8 </usr/include/qt4/QtCore/qglobal.h:1658:1, line:1794:1> line:1658:21 in GQt.TGQt.h hidden class QSysInfo definition; |-also in GQt.TQtClientWidget.h; |-CXXRecordDecl 0x55555643fc30 <col:1, col:21> col:21 in GQt.TGQt.h hidden implicit class QSysInfo; |-AccessSpecDecl 0x55555643fce8 <line:1659:1, col:7> col:1 in GQt.TGQt.h public; |-EnumDecl 0x55555643fd18 <line:1660:5, line:1662:5> line:1660:10 in GQt.TGQt.h hidden Sizes; | `-EnumConstantDecl 0x55555643fe98 <line:1661:9, col:38> col:9 in GQt.TGQt.h hidden WordSize 'enum QSysInfo::Sizes'; | `-ImplicitCastExpr 0x55555643fee0 <col:20, col:38> 'unsigned int' <IntegralCast>; | `-ParenExpr 0x55555643fe70 <col:20, col:38> 'unsigned long'; | `-BinaryOperator 0x55555643fe48 <col:21, col:37> 'unsigned long' '<<'; | |-UnaryExprOrTypeTraitExpr 0x55555643fe08 <col:21, col:34> 'unsigned long' sizeof 'void *'; | `-IntegerLiteral 0x55555643fe28 <col:37> 'int' 3; `-EnumDecl 0x55555643ff00 <line:1672:5, line:1685:5> line:1672:10 in GQt.TGQt.h hidden Endian; |-EnumConstantDecl 0x55555643ffd8 <line:1673:9> col:9 in GQt.TGQt.h hidden referenced BigEndian 'enum QSysInfo::Endian'; |-EnumConstantDecl 0x555556440028 <line:1674:9> col:9 in GQt.TGQt.h hidden referenced LittleEndian 'enum QSysInfo::Endian'; `-EnumConstantDecl 0x5555564400a0 <line:1681:11, col:23> col:11 in GQt.TGQt.h hidden ByteOrder 'enum QSysInfo::Endian'; `-ImplicitCastExpr 0x5555564400e8 <col:23> 'unsigned int' <IntegralCast>; `-DeclRefExpr 0x555556440070 <col:23> 'int' EnumConstant 0x555556440028 'LittleEndian' 'enum QSysInfo::Endian'; ```. The reason for this is that we have QSysInfo both in the TQtClientWidget; and TGQt submodules and our current translation (which is supposed to; parse all header in the module) sees them both in one transaction. As we also don't recognize that this decl is from a modu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1236:56,assert,assertions,56,https://root.cern,https://github.com/root-project/root/pull/1236,2,['assert'],['assertions']
Testability,"When generating unbinned datasets in a `RooMCStudy`, there is a logging; done for each toy dataset at the `PROGRESS` level, which is too verbose.; The logging for each toy has been moved to the `DEBUG` level. In both the case of binned and unbinned toy datasets, there was a; `PROGRESS` log every few toys. Also this is too verbose for large-scale; toy studies. With this commit, a dynamic progress printout is; introduced. While running, it looks like this:. ```; [#0] PROGRESS:Generation -- RooMCStudy::run: 5382 samples:; 78 %; ```. When done, the log looks as follows:. ```; [#0] PROGRESS:Generation -- RooMCStudy::run: 5382 samples:; 100 % Done!; ```. Closes #9489.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10509:64,log,logging,64,https://root.cern,https://github.com/root-project/root/pull/10509,4,['log'],"['log', 'logging']"
Testability,"When getValV() was directly implemented in RooAddPdf, it was missed to; copy-paste the part from RooAbsPdf::getValV() where the normalization; sets for the proxies was synced. A unit test with the reproducer for an issue caused by missing the; syncing is also introduced with this commit, involving the SPlot from; RooStats. Closes #10869.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10885:183,test,test,183,https://root.cern,https://github.com/root-project/root/pull/10885,1,['test'],['test']
Testability,"When importing a `TH1` into a RooDataHist, the RooFit variable ranges are automatically adjusted to the nearest `TH1` bin boundaries. Then, the number of the corresponding `TH1` bin is stored in a ""offset"" variable to be used later when filling the RooDataHist. For this range adjustment, there are two code branches. One for the uniform case, and one for non-uniform binning. The uniform binning code branch was a bit weird, because it also created a non-uniform `RooBinning` object, only used to determine the original `TH1` bin of the lower adjusted boundary via; `RooBinning::rawBinNumber()`. But this can just be done with `TAxis::FindBin()`. Hence, we don't even need this confusing `rawBinNumber()` function as an implementation detail of RooFit and can get rid of it. With this change, we don't need a non-uniform `RooBinning` object in the uniform binning code branch anymore, and also circumvent an crash in the nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-debian10-i386,SPEC=noimt/12007/testReport/projectroot/test/test_stressroofit/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13853:1049,test,testReport,1049,https://root.cern,https://github.com/root-project/root/pull/13853,2,['test'],"['test', 'testReport']"
Testability,"When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories.; Here is a sandbox violation report from Portage:; ```; * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------; * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log""; * ; VERSION 1.0; FORMAT: F - Function called; FORMAT: S - Access Status; FORMAT: P - Path as passed to function; FORMAT: A - Absolute Path (not canonical); FORMAT: R - Canonical Path; FORMAT: C - Command Line. F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so ; * --------------------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7964:274,test,test-install,274,https://root.cern,https://github.com/root-project/root/issues/7964,5,"['LOG', 'log', 'sandbox', 'test']","['LOG', 'log', 'sandbox', 'test-install']"
Testability,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16099:342,log,logic,342,https://root.cern,https://github.com/root-project/root/pull/16099,2,"['log', 'test']","['logic', 'test']"
Testability,"When it tries to draw the last diagram, it freezes on some builds. Instead, ignore drawing if we are in batch mode. This PR fixes this failing test:; http://cdash.cern.ch/testDetails.php?test=22567643&build=326532",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/377:143,test,test,143,https://root.cern,https://github.com/root-project/root/pull/377,3,['test'],"['test', 'testDetails']"
Testability,"When iterating over the `clients()` to clear the clients caches, the list of clients itself might also be changed during the iteration. We therefore can't do a range-based loop. This fixes the last remaining RooFit ASAN build failure in `testRooAddPdf`. This is a followup to efd468b4947.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11698:238,test,testRooAddPdf,238,https://root.cern,https://github.com/root-project/root/pull/11698,1,['test'],['testRooAddPdf']
Testability,"When linking against gtest/gmock, the include directories are not added; to the newly created targets. This adds INTERFACE includes to these; targets, so includes for all subsequent targets will fall into place. @reikdas This hopefully fixes the problem that you were seeing in `roottest`. Can you try to rebase on this branch, and test?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5366:332,test,test,332,https://root.cern,https://github.com/root-project/root/pull/5366,1,['test'],['test']
Testability,"When multiple threads are touching the list of cleanups, another thread can delete the object retrieved via TObjLink::GetObject(), and then when it is dereferenced in ob->TestBit(...) it causes a crash in ROOT. Stack trace (simplified):; ```; in TObject::TestBit (this=0x0, f=33554432) at TObject.h:159; ^^^; in TList::RecursiveRemove (this=0xb3c3e0, obj=0x7ff3547da6b0); at root/core/cont/src/TList.cxx:717; ^^^; in THashList::RecursiveRemove (this=0xb504b0, obj=0x7ff3547da6b0); at root/core/cont/src/THashList.cxx:286; in TObject::~TObject (this=0x7ff3547da6b0, __in_chrg=<optimized out>); at root/core/base/src/TObject.cxx:88; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/719:171,Test,TestBit,171,https://root.cern,https://github.com/root-project/root/pull/719,2,['Test'],['TestBit']
Testability,"When performing multi-thread reads of ROOT files, we need to pick the number; of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per; worker thread"": we don't know the number of clusters in each tree before; we open the files, so we don't know the total number of clusters upfront.; Instead we set a ""desired value"" of T tasks per tree and per thread, and; then when each thread opens a file it tries to make T tasks out of it (if; the file turns out to be too small, it might end up producing _less_ tasks than; desired. If we are processing `M > N` small files, we might end up producing; _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of; tasks per worker. If N is too low, parallelism will be too coarse-grained; and we might get imbalance/tails with bad parallelization.; The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set; it to 24). We often see runtime improvements in benchmarks by setting it; to a lower value, e.g. 10.; Again from experience, N == 10 should be a high-enough value to avoid; load imbalance between threads while it significantly reduces the amount; of tasks spawned (and the overhead that comes with it).; Therefore this patch sets N to 10. More discussion:; - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre; - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8565:1090,benchmark,benchmarks,1090,https://root.cern,https://github.com/root-project/root/pull/8565,1,['benchmark'],['benchmarks']
Testability,"When previous node of a RRange or RFilter node was a RJittedFilter,; we were wrongly downcasting _varied_ filters to the RJittedFilter type,; but varied filters are _not_ jitted filters, they are copies of the; actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,; we treat it everywhere as the generic base class RFilterBase, which; fixes the problem and it is consistent with what we already do in; RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10544:502,test,test,502,https://root.cern,https://github.com/root-project/root/pull/10544,1,['test'],['test']
Testability,When querying decls for information we can start a deserialization. This fixes 4 tests for runtime cxxmodules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1298:81,test,tests,81,https://root.cern,https://github.com/root-project/root/pull/1298,1,['test'],['tests']
Testability,"When reading in-memory trees that have just been filled in the same scope, TTreeReaderValue re-uses, as storage for the values being read, the variable that was used to fill the tree. When the same variable is used to fill more than one branch, this means that the addresses of the values of these branches will be the same when reading them back. This breaks the fundamental assumption in RDataFrame that TTreeReaderValues for different columns will store their values at different addresses. The test happens to work at the moment, but it will break once we switch to bulk I/O because of a different call order inside RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11522:498,test,test,498,https://root.cern,https://github.com/root-project/root/pull/11522,1,['test'],['test']
Testability,"When registering a new specialization, we cannot assert that the; specialization is new, as in: has not been registered as a loadable; specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e.; different specialization template arguments might map to the same; ODRHash value. loadLazySpecializationsImpl() will thus load something,; and claim that the ""Specialization is already registered as lazy"",; but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will; be loaded is causing problems down the road; so far we have not observed; such problems in the wild. If so, the ODRHash must not be the lookup key,; but a mere lookup hint into a multimap or similar, where the search compares; the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g.; ```; roottest/cling/threading/clinglock.C...; Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253.; ```; on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9621:49,assert,assert,49,https://root.cern,https://github.com/root-project/root/pull/9621,3,"['Assert', 'assert']","['Assertion', 'assert', 'asserting']"
Testability,"When running RDF/TTreeProcessorMT with large numbers of threads and files with files on xrootd significant lock contention is still present through ```TPluginHandler::LoadPlugin()``` and ```TPluginHandler::ExecPlugin()``` which are called from ```TFile::Open()```. This PR minimizes the use of locks, which are now only needed the first time a given TPluginHandler is called for various initialization steps. This change now completely eliminates the use of the global write lock during RDF event loops also for files read from xrootd and finishes addressing https://github.com/root-project/root/issues/7710. For a simple test case:. Create the files:; ```cpp; #include ""TFile.h""; #include ""TTree.h""; #include ""TString.h""; #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;; const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {; TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");; TTree *tree = new TTree(""tree"", """");; tree->Branch(""outval"", &outval);; for (unsigned int ientry = 0; ientry < nentries; ++ientry) {; tree->Fill();; }; tree->Write();; fout->Close();; }. }; ```. run the event loop:; ```python; import ROOT; ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""); chain.Add(""root://eoscms.cern.ch//store/cmst3/group/wmass/bendavid/iotestinput/test_*.root""). d = ROOT.ROOT.RDataFrame(chain); res = d.Sum(""outval""). resval = res.GetValue(); print(resval); ```. Testing with 256 threads:. before:; ```; Percent of CPU this job got: 1077%; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.82; ```. after:; ```; Percent of CPU this job got: 5626%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:54.89; ```; (in fact there is still some possible lock contention/parameter tuning within the xrootd client itself which could improve things further)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11631:622,test,test,622,https://root.cern,https://github.com/root-project/root/pull/11631,3,"['Test', 'test']","['Testing', 'test', 'testwrite']"
Testability,"When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3204:21,test,tests,21,https://root.cern,https://github.com/root-project/root/pull/3204,6,['test'],"['testReport', 'testfile', 'tests']"
Testability,"When running on machines with few cores, enabling multithreading can; give you fewer cores than requested. For most of the tests this does; not matter. However, some tests verify the number of threads used.; This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8068:123,test,tests,123,https://root.cern,https://github.com/root-project/root/pull/8068,3,['test'],['tests']
Testability,"When setting the branch proxy, report info about a missing branch to the user. This is done in the form of a printed error. The logic is only triggered if there are no other branch names in the list of available branches that begin with the current branch name being searched. This situation could arise for example with a skeleton analysis produced by TTree::MakeProxy and a TTree with a split object. In that case the generated code will try to create a TBranchProxy for the top-level branch, even though that branch is not available from the TTree, only the sub-branches are. See for more details the discussion at https://github.com/root-project/root/pull/3746",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16377:128,log,logic,128,https://root.cern,https://github.com/root-project/root/pull/16377,1,['log'],['logic']
Testability,"When starting root.exe on Windows with a version of Visual Studio different than the one used to build ROOT, it mighty crash with the following error:; Assertion failed: !isNull() && ""Cannot retrieve a NULL type pointer"", file C:\build\ws\BUILDTYPE\Debug\LABEL\windows10\V\6-20\root\interpreter\llvm\src\tools\clang\include\clang/AST/Type.h, line 630; This patch fixes the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5620:152,Assert,Assertion,152,https://root.cern,https://github.com/root-project/root/pull/5620,2,['Assert'],['Assertion']
Testability,When testing #6385 I've had issues with the linking order of the LLVM libs due to CMake not knowing about their dependencies. I don't have a log or reproducer to hand but this patch was enough to fix it:. https://github.com/chrisburr/root-feedstock/blob/4dff10152d66bd0e873b60150e72cf0f9bfa8c19/recipe/patches/0001-Use-find_package-for-llvm-clang.patch. The `get_directory_property` call was also an issue. That patch contains the values copied from a build with `builtin_llvm=ON`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7176:5,test,testing,5,https://root.cern,https://github.com/root-project/root/issues/7176,2,"['log', 'test']","['log', 'testing']"
Testability,"When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/246:5,test,testing,5,https://root.cern,https://github.com/root-project/root/pull/246,1,['test'],['testing']
Testability,"When the column name contains a dot, we replace it with an underscore; and use the modified name as corresponding variable name for jitted; Defines/Filters.; To avoid potential name clashes with pre-existing columns, the; modified name is now prefixed with ""__tdf_arg_"", as it was already; the case before the latest refactoring of jitting. I'd like to introduce a test for this case, but I can't because of a different issue:; given a branch defined as `t.Branch(""v"", &v, ""a/I:b/I"")`, `Define(""a"", ""v.a"")` does not work: `""v""` comes before than `""v.a""` in the list of branches that we create, so it matches first, and later TDF complains that `""v""` is not a branch. @etejedor this is in the new `GetBranchNames`, do you think it might be an easy fix?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1857:365,test,test,365,https://root.cern,https://github.com/root-project/root/pull/1857,1,['test'],['test']
Testability,"When the normalization range for coefficient determination of a; RooAddPdf is changed, the AddPdf's projection cache needs to be reset,; just like it is already done in `RooAddPdf::fixCoefNormalization`.; Otherwise, there will be problems in the pdf evaluation and integration; because the projection cache is invalid. A unit test based on the GitHub issue that reported this problem is also; implemented. Closes https://github.com/root-project/root/issues/10988. Furthermore, another potential RooAddPdf problem is fixed, where several instances of RooRecursiveFraction were created with the same name (which could become problematic for example when using the new BatchMode).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10995:326,test,test,326,https://root.cern,https://github.com/root-project/root/pull/10995,1,['test'],['test']
Testability,"When trying to build the tests using CMake 3.10, `R__DAOS_TEST_POOL` was not; getting defined correctly which caused build errors like:. ```; expected ‘)’ before ‘R__DAOS_TEST_POOL’; 5 | std::string daosUri(""daos://"" R__DAOS_TEST_POOL "":1/a947484e-e3bc-48cb-8f71-3292c19b59a4"");; | ~ ^~~~~~~~~~~~~~~~~~; | ); ```. Moving from `COMPILE_OPTIONS` to `COMPILE_DEFINITIONS` seemed to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8172:25,test,tests,25,https://root.cern,https://github.com/root-project/root/pull/8172,1,['test'],['tests']
Testability,"When trying to build with `-Dbuiltin_llvm=OFF` on Nixpkgs on NixOS (x86_64-linux),. ```; -- Configuring done; CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:735 (add_dependencies):; The dependency target ""install-clang"" of target ""install-clang++"" does not; exist.; ```. <details>; <summary>Full build log</summary>; <pre wrap=true>; building '/nix/store/8xsj5zq00fkbndl1zzjngmxj3hhi51hd-root-6.28.00.drv'...; unpacking sources; unpacking source archive /nix/store/y5m4pr7c6vgjr34zqdz7wv819ln1mkj0-source; source root is source; patching sources; applying patch /nix/store/qljayx9yxgyx2xnf81b3rzzi99azd5d6-sw_vers.patch; patching file cmake/modules/SetUpMacOS.cmake; Hunk #1 succeeded at 8 with fuzz 1 (offset -20 lines).; Hunk #2 succeeded at 30 (offset -20 lines).; Hunk #3 succeeded at 74 (offset -34 lines).; patching file config/root-config.in; Hunk #1 succeeded at 313 (offset 1 line).; Hunk #2 succeeded at 373 (offset 1 line).; configuring; patching script interpreter paths in build/unix/; build/unix/makedistsrc.sh: interpreter directive changed from ""#! /bin/sh"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/sh""; build/unix/coreteam.sh: interpreter directive changed from ""#!/bin/sh"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/sh""; build/unix/compiledata.sh: interpreter directive changed from ""#!/usr/bin/env bash"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/bash""; build/unix/makepchinput.py: interpreter directive changed from ""#! /usr/bin/env python"" to ""/nix/store/sp5x6s8n36gjlwck74xhj1i61p66vcpa-python3-3.10.9/bin/python""; build/unix/rootmapcat.py: interpreter directive changed from ""#! /usr/bin/env python"" to ""/nix/store/sp5x6s8n36gjlwck74xhj1i61p66vcpa-python3-3.10.9/bin/python""; build/unix/makereleasenotes.sh: interpreter directive changed from ""#! /bin/sh"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/sh""; build/unix/pandoc-jira.sh: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:359,log,log,359,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['log'],['log']
Testability,"When trying to run the test I get. Processing create_makeproject_examples.C...; Error in TStreamerInfo::Build: The class ""SillyStlEvent"" is interpreted and for its the data member ""foo"", we do not have a dictionary for the collection ""bitset<16>"", we will not be able to read or write this data member.; (int) 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/61#issuecomment-98204486:23,test,test,23,https://root.cern,https://github.com/root-project/root/pull/61#issuecomment-98204486,1,['test'],['test']
Testability,"When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:; ```; {; gStyle->SetOptStat(0);; gStyle->SetOptTitle(0);. auto C = new TCanvas();; C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);; auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);; h15->Fill(12,1.);; h15->Fill(14,.5);; h15->SetLineWidth(3);. h25->Fill(1,1);; h25->Fill(6,2);; h25->Fill(11,3);; h25->Fill(16,2);; h25->Fill(23,1);; h25->SetLineColor(2);; h25->SetLineWidth(3);; h25->SetMinimum(.05);. C->cd(1);; h25->Draw(""hist"");; h15->Draw(""hist same"");; gPad->SetLogy(1);; gPad->SetGridx(1);; gPad->SetGridy(1);. C->cd(2);; h25->Draw(""hist"");; h15->Draw(""hist same"");; gPad->SetGridx(1);; gPad->SetGridy(1);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12448:104,Log,Log,104,https://root.cern,https://github.com/root-project/root/pull/12448,1,['Log'],['Log']
Testability,"When using `RooGenericPdf` to implement custom PDF's, fitting becomes quite slow due to the use of numerical integration. This becomes a big problem when one needs to be perform several fits on the PDF (such as when studying systematical errors or statistical significances). It would be great if we could set an expression for the analytical integral the same way we already do for the PDF itself. As concrete example, if one needed to implement a PDF such as `f(x) = a/x + b*x + c`, it feels like we should be able to do; ```c; // Define custom pdf; RooGenericPdf my_pdf(""my_pdf"", ""x[1]/x[0] + x[2]*x[0] + x[3]"", RooArgList(x, a, b, c));; // Set formula for analytical integral; my_pdf.SetAnalyticalIntegralFormula(""x[1]*TMath::Log(x[0]) + x[2]*x[0]*x[0]/2 + x[0]*x[3]"");; ```. This would be implemented in such way that just creating an `RooGenericPdf` object would set it to numerical integration by default, and then calling `SetAnalyticalIntegralFormula()` would make it use analytical integration based on the supplied formula. Follow up from https://root-forum.cern.ch/t/analytical-integral-for-roogenericpdf/50409",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10763:730,Log,Log,730,https://root.cern,https://github.com/root-project/root/issues/10763,1,['Log'],['Log']
Testability,"When using source bilds, all necessary source includes; will be provided via dependencies. When using installed root,; anyway ${CMAKE_BINARY_DIR}/include has to be used. Reduce usage of `find_package(ROOT)` method. ; If was misused to produce variables like `ROOT_asimage_FOUND` or `ROOT_vc_FOUND`; Now only kept at the place where it can be really used outside ROOT.; Plus two historical files in `test/` and `tutorials/` are mostly unchanged while too many such variables are used",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5577:399,test,test,399,https://root.cern,https://github.com/root-project/root/pull/5577,1,['test'],['test']
Testability,"When we want to autoload contents from namespaces we end up in; Sema::LookupQualifiedName; then we issue a callback to; FindExternallyVisibleName which forwards to LookupObject. Lookup object; takes a DeclContext as an argument. This argument is always the primary; lookup context (which for a NamespaceDecl is the original namespace. Regular autoloading does not consider this (or has chosen not to) because; this reduces the amount of autoloads. Such autoloads can happen when; resolving template specializations when computing a decl's linkage by; clang's CodeGen. This in turn loads unexpected libraries such as RooFit; when trying to resolve all template specializations of __to_raw_pointer; (located in &lt;memory&gt;), including the one taking a HistFactory::Data*.; The amount of deserializations might be reduced by applying [D29951](https://reviews.llvm.org/D29951). That way we end up needlessly loading RooFit and showing it's weird; banner, potentially breaking a lot of tests. This behavior can be considered as broken because we hide information; about possible redeclarations which can affect the linkage computation or; other checks in codegen. If we fix the bug we will probably explode; ROOT's memory footprint and make the gap between standard ROOT and ROOT; with modules even bigger. Since it is not clear how much work and issue resolving is required for; standard ROOT, we can probably only live with the workaround of the missing; concept: moving entities in namespaces whose autoloading requires declarations; to be in the PCH. For instance, ROOT::Experimental::TDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1337:984,test,tests,984,https://root.cern,https://github.com/root-project/root/pull/1337,1,['test'],['tests']
Testability,"When writing trained methods to the output file, there was a typo in the target directory. This lead to the results of a method of type ""BDT"" and name ""MyBDT"" being placed (incorrectly) in a folder named; ""Method_MyBDT/MyBDT"". This patch places the data correctly in ""Method_BDT/BDT"". This is important since e.g. the GUI relies on all BDT's being placed in the ""MethodBDT"" folder. This will affect all methods, not only BDT's. This can be seen e.g. in the output of the `TMVAClassification.C` macro with several BDT's enabled: The GUI cannot generate plots for all BDT's. That the previous implementation was a typo is corroborated by this line:; ```; Log() << kDEBUG << Form(""Dataset[%s] : "", datasetName) << "" Base Directory for ""; << GetMethodTypeName() << "" not set yet --> check if already there.."" << Endl;; ```; , where it is implied that a directory of name `GetMethodTypeName()` should be created. However, in the old implementation a directory with name `GetMethodName()` was created instead. The issue was reported [here](https://root-forum.cern.ch/t/tmvagui-not-working-for-multiple-methods-of-bdt-in-file/32267) initially.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3253:653,Log,Log,653,https://root.cern,https://github.com/root-project/root/pull/3253,1,['Log'],['Log']
Testability,"When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14105:592,test,test,592,https://root.cern,https://github.com/root-project/root/pull/14105,1,['test'],['test']
Testability,"Which of the builtin packages can we use from the distro - are we waiting for the next release of cppzmq or zeromq, and can we use a current release for the other one? For testing we try to use distro packages wherever possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9430#issuecomment-993425466:172,test,testing,172,https://root.cern,https://github.com/root-project/root/issues/9430#issuecomment-993425466,1,['test'],['testing']
Testability,Which unticked boxes from the description remain to be done? Please make sure to tick the ones that are already addressed. Once it's all good we can rerun the tests and merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/655#issuecomment-325326629:159,test,tests,159,https://root.cern,https://github.com/root-project/root/pull/655#issuecomment-325326629,1,['test'],['tests']
Testability,"While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. ; Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. ; Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2862:326,log,logic,326,https://root.cern,https://github.com/root-project/root/pull/2862,1,['log'],['logic']
Testability,"While benchmarking the change I discovered something fascinating.; This simple benchmark only tests retrieval of a custom column:; ```c++; TDataFrame d(1000000000ull);; d.Define(""ans"", [] { return 42; }); .Foreach([](int) {}, {""ans""});; ```. The relevant code path that changes between master and this PR is the following:; ```patch; T &TColumnValue<T>::Get(Long64_t entry); {; - if (!fReaderValues.empty()) {; - return *(fReaderValues.back()->Get());; - } else {; - fCustomColumns.back()->Update(fSlot, entry);; - return fIsDataSourceColumn ? **fDSValuePtrs.back() : *fCustomValuePtrs.back();; + switch (fColumnKind) {; + case EColumnKind::kTreeArray: /*dealt with in the other `Get` overload*/; + case EColumnKind::kTreeValue: return *(fReaderValues.back()->Get());; + case EColumnKind::kCustomColumn: fCustomColumns.back()->Update(fSlot, entry); return *fCustomValuePtrs.back();; + case EColumnKind::kDataSource: fCustomColumns.back()->Update(fSlot, entry); return **fDSValuePtrs.back();; }; +; ```; Looks _faster_ right?. On my workstation `perf stat` yields the following instruction counts and runtimes (single-thread executable compiled with `-g -O2`):; ```; # MASTER; 99,494,923,915 instructions:u; 9.844 seconds. # PR; 103,495,337,205 instructions:u; 11.049 seconds; ```. The `switch-case` is sensibly slower and results in more cpu instructions than the `if-else` over `std::vector::empty` on this artificial yet very representative benchmark. I thought this might have been a cache-friendliness issue and was almost ready to give up on this PR, but luckily plotting stacktraces showed that the culprit is inlining:. **MASTER**; ![image](https://user-images.githubusercontent.com/10999034/30910728-3b607ff4-a386-11e7-928e-6a404a485cf6.png). **PR**; ![image](https://user-images.githubusercontent.com/10999034/30910790-7f808562-a386-11e7-90f9-f1417c712f86.png). The `Get` method is not inlined when it contains the `switch-case`!; I will come up with a change that maintains inlining intact s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1060#issuecomment-332489724:6,benchmark,benchmarking,6,https://root.cern,https://github.com/root-project/root/pull/1060#issuecomment-332489724,3,"['benchmark', 'test']","['benchmark', 'benchmarking', 'tests']"
Testability,"While debugging the failure triggered by a recent PR updating the behavior of `gDirectory`: https://github.com/root-project/root/pull/11908#issuecomment-1361086304 (The reported error is that a name/symbol that should have been detected and loaded by Cling was not found ... the direct cause was that `gDirectory` was unexpectedly `nullptr`), I discovered that notebooks (or a least the way they are run in the test `JupyROOT-ROOT_kernel_notebook`), runs several threads to actually execute the cells. It is also clear from my investigation that it does not enable thread safety. Whether we need to change depends on whether `Jupyter` (or the way it is use here) guaranteed that only one of the thread would ever be run concurrently (if not then we must enable thread safety). However, one more thing to consider is that when thread safety is enabled, each thread get its own thread local gDirectory pointers. If each cell is run in a separate thread, then change to `gDirectory` in one cell will not be reflected in the next cell. (this would be true also for any user level thread local variable).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11955:411,test,test,411,https://root.cern,https://github.com/root-project/root/issues/11955,1,['test'],['test']
Testability,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message.; 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests.; 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well.; 5. Commit 5 is again a minor refactoring to reduce some duplicated code.; 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion.; 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format.; 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15797#issuecomment-2183530657:266,test,tests,266,https://root.cern,https://github.com/root-project/root/pull/15797#issuecomment-2183530657,2,['test'],['tests']
Testability,"While investigating performance issues with performing many fits in a RooFit analysis workflow, I discovered this memory leak in my valgrind logs. Getting this fix in as many release streams as possible would be good.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7137:141,log,logs,141,https://root.cern,https://github.com/root-project/root/pull/7137,1,['log'],['logs']
Testability,"While looking into other stuff yesterday, I think I came across the code that throws this error. If I understood correctly, this happens if you have a static ASan library linked into the executable (as we do for ROOT binaries) and then load a shared runtime library, for example via `LD_PRELOAD`. So what we likely have to do in here is figuring out if `LD_PRELOAD` is maybe set too aggressively and actually not needed / hurting for the tests listed above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10017#issuecomment-1064968595:438,test,tests,438,https://root.cern,https://github.com/root-project/root/issues/10017#issuecomment-1064968595,1,['test'],['tests']
Testability,"While looking into this again, I locally saw one test execution that had; ```; !!!ERROR: Transaction for file: /home/jhahnfel/ROOT/build-asserts-clang/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so has already been unloaded; !!!ERROR: Transaction for file: /home/jhahnfel/ROOT/build-asserts-clang/core/metacling/test/concurrent_load_unload_one_lib_per_thread_2_cpp.so has already been unloaded; ```; at the very end after teardown, when all tests were already marked as `PASSED`. Not sure if relevant, thought I'd post it here...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14121#issuecomment-1864125646:49,test,test,49,https://root.cern,https://github.com/root-project/root/issues/14121#issuecomment-1864125646,6,"['assert', 'test']","['asserts-clang', 'test', 'tests']"
Testability,While playing with godbolt I noticed I wrote the test in a way that improperly deallocates the array https://godbolt.org/z/rnfbaWaKf,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8975:49,test,test,49,https://root.cern,https://github.com/root-project/root/pull/8975,1,['test'],['test']
Testability,"While testing `v6-22-00-patches` on `macphsft25`, I noticed that it fails to build in the default configuration with `imt` and `builtin_tbb` - is that expected? Disabling those makes it pass and I verified that the fix works there as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7793#issuecomment-814667556:6,test,testing,6,https://root.cern,https://github.com/root-project/root/pull/7793#issuecomment-814667556,1,['test'],['testing']
Testability,"While testing my packages which use PyROOT, I stumbled across a little problem with ROOT and pytest which I propose to fix. Assume you have this very minimal (basically empty) python package:; ```; .; ├── setup.py; └── tests; └── test_test.py. 1 directory, 2 files; ```; Content of `setup.py`:; ```python; from setuptools import setup, find_packages. setup(; name=""root_cleanup_test"",; packages=find_packages(),; setup_requires=[""pytest-runner""],; test_suite=""tests"",; ); ```; Content of `test_test.py`; ```; import unittest; import ROOT. class TestTest(unittest.TestCase):; def test_test(self):; pass; ```. Now if you run the tests with `python setup.py pytest` which gives you the warning and error I attach to the bottom of this post. I think this is maybe related to some multithreading in the pytest runner. When you run the test alone with `pytest tests/test_test.py`, you won't get the error. My setup: ROOT 6.16/00 and Python 3.7. Let me know if I can do anything else to test this! It would be great if pytest works smoothly with ROOT. ````; ========== warnings summary ==========; /usr/lib/python3.7/site-packages/ROOT.py:98: DeprecationWarning: invalid escape sequence \S; message='class \S* already in TClassTable$' ). -- Docs: https://docs.pytest.org/en/latest/warnings.html; ========== 1 passed, 1 warnings in 0.41 seconds ==========; Error in atexit._run_exitfuncs:; Traceback (most recent call last):; File ""/usr/lib/python3.7/site-packages/ROOT.py"", line 782, in cleanup; facade = sys.modules[ __name__ ]; KeyError: ""ROOT""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3595:6,test,testing,6,https://root.cern,https://github.com/root-project/root/pull/3595,9,"['Test', 'test']","['TestCase', 'TestTest', 'test', 'testing', 'tests']"
Testability,"While the final review indeed needs @lmoneta here are preliminary comments:; ; - There is almost no documentation, this must be fixed before merging. Note that ROOT has changes its syntax since a couple of years, we now use doxygen.; - We need a couple of tests; - We need a tutorial; - We need a diff for the release notes. Assuming that @lmoneta accepts this PR design-wise, these issues must be addressed before we can merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/792#issuecomment-326555267:256,test,tests,256,https://root.cern,https://github.com/root-project/root/pull/792#issuecomment-326555267,1,['test'],['tests']
Testability,"While working on a feature, these commits piled up. They could be split off from the feature branch.; I hope they are (mostly) NFCs, but small things are changing. For example, floating point computations are reordered, and `assert(0)` are replaced by `throw` and `#include`s are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6243:225,assert,assert,225,https://root.cern,https://github.com/root-project/root/pull/6243,1,['assert'],['assert']
Testability,"While working on this issue, I noticed that also `RooHistPdf` is also not bug free. Here is what you can do to get strange results with it:; ```C++; // g++ $(root-config --cflags) -o testHistPdf testHistPdf.cc $(root-config --libs) -lRooFitCore -lRooFit -g. #include ""RooRealVar.h""; #include ""RooHistPdf.h""; #include ""RooDataHist.h""; #include ""TH2D.h""; #include ""TF2.h"". using namespace RooFit;. int main(int argc, char const *argv[]) {. RooRealVar x(""x"",""x"",0, 10);; RooRealVar y(""y"",""y"",0.05);; TH2D h2(""h2"",""h2"",20,0,10, 30, 0, 10);; TF2 f2(""f2"",""y < 0.1"");; h2.FillRandom(""f2"",1000);. RooArgSet argSet{x, y};. RooDataHist dh(""dh"",""dh"",argSet,&h2);; RooHistPdf phf(""phf"","""",argSet,dh);; x.setRange(""R1"",0,5);; y.setRange(""R1"",0,10);; auto int1 = phf.createIntegral(argSet,argSet);; std::cout << int1->getVal() << std::endl;; auto int2 = phf.createIntegral(argSet,argSet, ""R1"");; std::cout << int2->getVal() << std::endl;. auto int3 = phf.createIntegral(x,x);; std::cout << int3->getVal() << std::endl;; auto int4 = phf.createIntegral(x,x,""R1"");; std::cout << int4->getVal() << std::endl;. return 0;; }; ```; Obviously the integral of a constant function if you only take half of the x range should be half of the value you get for the full range, even if there is an additional variable in the slice set. However, this is what the program above outputs in ROOT master:; ```; 1; 0.493; 1; 0.164333; ```. The first 3 integrals are correct, but the final one (custom range for x and slice of y) gives the wrong result (0.493 expected). I thought about how the integration should be done correctly for all of the `RooHistPdf`, `RooHistFunc` and `RooParamHistFunc` family. Some updates to the code to fix all the issues can be found in PR https://github.com/root-project/root/pull/7271.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7182#issuecomment-783663166:183,test,testHistPdf,183,https://root.cern,https://github.com/root-project/root/issues/7182#issuecomment-783663166,2,['test'],['testHistPdf']
Testability,"While working on this, I found another bug in the mapper code:; https://github.com/root-project/root/blob/eb5bcf0f0d79b0011ad4f2b8a38df0b6be4ee9a0/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py#L156-L158. Here `treename` through https://github.com/root-project/root/blob/eb5bcf0f0d79b0011ad4f2b8a38df0b6be4ee9a0/bindings/experimental/distrdf/python/DistRDF/Node.py#L703 , that only returns a single string that it's supposed to be the treename. But the reproducer in the linked gist uses the default constructor for TChain and then adds the filename/treename string in the following `Add`; ```; chain = ROOT.TChain(); chainFriend = ROOT.TChain(). chain.Add(""friendtrees_spark.root/randomNumbers""); chainFriend.Add(""friendtrees_spark.root/randomNumbersBis""); ```; So with the current code in distrdf `treename` is `None`. The more correct way to retrieve the treename would look probably like https://github.com/root-project/root/blob/eb5bcf0f0d79b0011ad4f2b8a38df0b6be4ee9a0/tree/treeplayer/src/TTreeProcessorMT.cxx#L249 ; So that's another point in favor of having a common set of functions for retrieving information from the trees useful for range creation for multiple threads/nodes . Furthermore, I'm thinking that a more proper logic for distrdf would be parse the arguments to `DistRDF.RDataFrame` to recognize which `ROOT.RDataFrame` constructor the user is trying to replicate. This way, in the mapper function it would be easier and more precise to make the single rdf objects for each task",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7584#issuecomment-804010485:1249,log,logic,1249,https://root.cern,https://github.com/root-project/root/issues/7584#issuecomment-804010485,1,['log'],['logic']
Testability,"While writing a regression test for this, I realized that friend branches, which are called e.g. `tree2.x`, will be saved as `tree2_x` (`Snapshot` always converts dots to underscores when writing out variables -- and in this case writing it as `tree2.x` would be fairly confusing (the `.` has semantic meaning in other cases). So I think that's the best we can do.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7181#issuecomment-791576541:27,test,test,27,https://root.cern,https://github.com/root-project/root/issues/7181#issuecomment-791576541,1,['test'],['test']
Testability,"Whoops, the clang-format test is rejecting my clang-formatting https://travis-ci.org/github/root-project/root/jobs/747788436, I will fix that (passing that is the whole point of this patch...). The other complaints by clang-tidy and clang-tidy-modernize should be addressed in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6917#issuecomment-739239862:25,test,test,25,https://root.cern,https://github.com/root-project/root/pull/6917#issuecomment-739239862,1,['test'],['test']
Testability,Why change stressGraphics ? It is meant to test the old graphics and does it for years the proper way. It is a standalone program ... I don't understand the point.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16579#issuecomment-2388572430:43,test,test,43,https://root.cern,https://github.com/root-project/root/pull/16579#issuecomment-2388572430,1,['test'],['test']
Testability,Why is `cling::printValue` not available in centos7/gcc7? -> https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28148/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/. ```; test_STLVector (pretty_printing.PrettyPrinting) ... vector<float>: ; input_line_39:2:36: error: no matching function for call to 'printValue'; *((std::string*)0x7ffe137c9f60) = cling::printValue((vector<float>*)0x136cb680);; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-393044743:125,test,testReport,125,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-393044743,2,['test'],"['test', 'testReport']"
Testability,Will add a test for this once root compiles and we can actually run rootcling.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1036#issuecomment-332429288:11,test,test,11,https://root.cern,https://github.com/root-project/root/pull/1036#issuecomment-332429288,1,['test'],['test']
Testability,Will be a hard task for me than to build and test the documentation. . As a side note did you ever think about using doxygen tag files? A project that extensively uses doxygen tag files for their project is the CGAL project (See https://www.cgal.org/ and https://doc.cgal.org/latest/Manual/packages.html). It is not easy to build and initially it takes also a complete doxygen run (to create a.o. the tag files) but later on it is possible to build individual manuals / subprojects. I don't know how feasible this would be for ROOT though.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8742#issuecomment-887652894:45,test,test,45,https://root.cern,https://github.com/root-project/root/issues/8742#issuecomment-887652894,1,['test'],['test']
Testability,Will close this PR and open a new one. I think that the dirty build directories are interfering with testing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/830#issuecomment-321250091:101,test,testing,101,https://root.cern,https://github.com/root-project/root/pull/830#issuecomment-321250091,1,['test'],['testing']
Testability,"Will remove RISC-V commits,; ```; * 35db349a73 Revert ""FIXME: Comment asserts, they happen upstream but we believe they are harmless.""; * 4c27a9cb06 D142443: [ORC] Drop Comdat when discarding IR symbol; * 502a58f946 D142352: [CodeGen] Filter out available_externally aliases; ```; and `TChain: don't interpret anchor with parameters as treename`, on Monday.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12507#issuecomment-1474171044:70,assert,asserts,70,https://root.cern,https://github.com/root-project/root/pull/12507#issuecomment-1474171044,1,['assert'],['asserts']
Testability,Will take care of the three RDF tests asap,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591#issuecomment-641410668:32,test,tests,32,https://root.cern,https://github.com/root-project/root/pull/5591#issuecomment-641410668,1,['test'],['tests']
Testability,Will update the test with the new correct number of tasks generated before merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8565#issuecomment-870434772:16,test,test,16,https://root.cern,https://github.com/root-project/root/pull/8565#issuecomment-870434772,1,['test'],['test']
Testability,"Will_Fail is the (now) expected result and lead to a 'succesfull' run of the test. What is ""new"" is that there is one platform where this failure is now a segmentation fault of sort.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15481#issuecomment-2108706082:77,test,test,77,https://root.cern,https://github.com/root-project/root/issues/15481#issuecomment-2108706082,1,['test'],['test']
Testability,Windows 10 x64 failures are unrelated:; ```; TEST FAILURES:; 1330:roottest-cling-template-runtemplatefriend; 1736:roottest-root-io-transient-base-WriteFile; 1737:roottest-root-io-transient-base-hadd_autoload; 1785:roottest-root-meta-loadernotapp-build; 1786:roottest-root-meta-loadernotapp; 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15222#issuecomment-2052602443:45,TEST,TEST,45,https://root.cern,https://github.com/root-project/root/pull/15222#issuecomment-2052602443,1,['TEST'],['TEST']
Testability,Windows failed uploading the successful log :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4882#issuecomment-579536309:40,log,log,40,https://root.cern,https://github.com/root-project/root/pull/4882#issuecomment-579536309,1,['log'],['log']
Testability,Windows failures unrelated:; ```txt; TEST FAILURES:; 1330:roottest-cling-template-runtemplatefriend; 1736:roottest-root-io-transient-base-WriteFile; 1737:roottest-root-io-transient-base-hadd_autoload; 1785:roottest-root-meta-loadernotapp-build; 1786:roottest-root-meta-loadernotapp; 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15180#issuecomment-2045811317:37,TEST,TEST,37,https://root.cern,https://github.com/root-project/root/pull/15180#issuecomment-2045811317,1,['TEST'],['TEST']
Testability,Windows is not happy with the new test. I'm not sure how windows handles errors/warnings. Here's how the warning message looks now:; ![image](https://github.com/root-project/root/assets/29475282/2ddaff21-56d4-410e-95ef-852d02ba4d76),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14645#issuecomment-1956072860:34,test,test,34,https://root.cern,https://github.com/root-project/root/pull/14645#issuecomment-1956072860,1,['test'],['test']
Testability,Windows seems to have failing tests (?!) but these are `The process cannot access the file because it is being used by another process.` i.e. seemingly unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12183#issuecomment-1411113120:30,test,tests,30,https://root.cern,https://github.com/root-project/root/pull/12183#issuecomment-1411113120,1,['test'],['tests']
Testability,Windows: copy the libElementStruct.dll in the test directory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3314:46,test,test,46,https://root.cern,https://github.com/root-project/root/pull/3314,1,['test'],['test']
Testability,Windows: disable (incompatible) stressHistFactory test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3309:50,test,test,50,https://root.cern,https://github.com/root-project/root/pull/3309,1,['test'],['test']
Testability,Windows: fix testoptical.C (use only forward slashes in the path),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3315:13,test,testoptical,13,https://root.cern,https://github.com/root-project/root/pull/3315,1,['test'],['testoptical']
Testability,Windows: make sure the files are not present before running the tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3316:64,test,tests,64,https://root.cern,https://github.com/root-project/root/pull/3316,1,['test'],['tests']
Testability,WiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16438/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.event.roottest_root_io_event](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16438/testReport/projectroot.roottest.root.io/event/roottest_root_io_event/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16438/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16438/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16438/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16438/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16438/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.core.thread.test.gtest_core_thread_test_corethreadtestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16438/testReport/projectroot.core.thread/test/gtest_core_thread_test_corethreadtestUnit/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTHn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16438/testReport/projectroot.hist.hist/t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1595#issuecomment-363690369:1462,test,testReport,1462,https://root.cern,https://github.com/root-project/root/pull/1595#issuecomment-363690369,1,['test'],['testReport']
Testability,WiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58692/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58692/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58692/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58692/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.arrayobject.roottest_root_io_arrayobject_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58692/testReport/projectroot.roottest.root.io/arrayobject/roottest_root_io_arrayobject_make/); - [projectroot.roottest.root.io.alloc.roottest_root_io_alloc_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58692/testReport/projectroot.roottest.root.io/alloc/roottest_root_io_alloc_make/); - [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58692/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/); - [projectroot.roottest.root.io.customCollection.roottest_root_io_customCollection_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58692/testReport/projectroot.roottest.root.io/customCollection/roottest_root_io_customCollection_make/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseRead_41](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58692/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseRea,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3769#issuecomment-489463224:1457,test,testReport,1457,https://root.cern,https://github.com/root-project/root/pull/3769#issuecomment-489463224,1,['test'],['testReport']
Testability,"With @etejedor 's help we could reduce the problem that causes the test failures to:. ```cpp; #include ""TClassRef.h"". int main() {; TClassRef cr(""ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>"");; cr->GetListOfMethods(true);; return 0;; }; ```. which breaks with the following stacktrace:. ```; #0 0x00007ffff53f9ef5 in raise () from /usr/lib/libc.so.6; #1 0x00007ffff53e3862 in abort () from /usr/lib/libc.so.6; #2 0x00007ffff53e3747 in __assert_fail_base.cold () from /usr/lib/libc.so.6; #3 0x00007ffff53f2646 in __assert_fail () from /usr/lib/libc.so.6; #4 0x00007fffec0bcec0 in TClingCXXRecMethIter::InstantiateTemplateWithDefaults (this=0x555556ead490, TD=0x555556be3a30) at ../../../../bendavidbook/core/metacling/src/TClingMethodInfo.cxx:182; #5 0x00007fffec0ba7d8 in TClingMemberIter::Advance (this=0x555556ead490) at ../../../../bendavidbook/core/metacling/src/TClingMemberIter.cxx:140; #6 0x00007fffec0b8b0f in TClingMemberIter::Next (this=0x555556ead490) at ../../../../bendavidbook/core/metacling/src/TClingMemberIter.h:159; #7 0x00007fffec0be2cd in TClingMethodInfo::Next (this=0x555556ead450) at ../../../../bendavidbook/core/metacling/src/TClingMethodInfo.cxx:438; #8 0x00007fffebf51dba in TCling::MethodInfo_Next (this=0x5555556433a0, minfo=0x555556ead450) at ../../../../bendavidbook/core/metacling/src/TCling.cxx:9017; #9 0x00007ffff7d8192f in TListOfFunctions::Load (this=0x555556dbb2b0) at ../../../bendavidbook/core/meta/src/TListOfFunctions.cxx:391; #10 0x00007ffff7d51b82 in TClass::GetListOfMethods (this=0x5555561abdb0, load=true) at ../../../bendavidbook/core/meta/src/TClass.cxx:3803; #11 0x00005555555551dd in main () at repro.cpp:5; ```. Work in progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-819501708:67,test,test,67,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-819501708,1,['test'],['test']
Testability,"With `Int_t n = kMax;` on Fedora, root master version:; ```; root [0] ; Processing scan.C...; In file included from input_line_8:1:; /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]; Float_t a[kMax];; ^~~~; /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression; /home/musinsky/scan.C:8:9: note: declared here; Int_t kMax = 10;; ^; root [1] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; ERROR leaf:a, len=22 and max=8; * 0 * -0.434764 *; ERROR leaf:a, len=22 and max=8; * 1 * 1.3911939 *; ERROR leaf:a, len=22 and max=8; * 2 * 1.1125664 *; ERROR leaf:a, len=22 and max=8; * 3 * 2.0609021 *; ERROR leaf:a, len=22 and max=8; * 4 * -0.182436 *; ************************; (long long) 5; root [2] ; ```; Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16730#issuecomment-2431829823:860,test,tested,860,https://root.cern,https://github.com/root-project/root/issues/16730#issuecomment-2431829823,1,['test'],['tested']
Testability,"With `ROOTSYS` unset and no `DISPLAY` variable, this setup causes a spurious warning about an unset `DISPLAY`. `TROOT()` calls `SetBatch(true)`, then cppyy ""agrees"", and `ROOT/__init__.py` tries to revert that. Just let everyone keep their hands off `SetBatch()` (as is done in newer cppyy anyway). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11858:364,test,tested,364,https://root.cern,https://github.com/root-project/root/pull/11858,1,['test'],['tested']
Testability,"With help from Jonas, I tested this PR in the context of AGC (for now locally on my PC with 8 cores) and it works - the ml histograms are produced.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15173#issuecomment-2045503467:24,test,tested,24,https://root.cern,https://github.com/root-project/root/pull/15173#issuecomment-2045503467,1,['test'],['tested']
Testability,"With llvm9, the module ptr gets reset upon emission.; Instead, just look for the symbol in the JIT - where it should be found,; as Init() is injecting it there, and we want to find *that* symbol,; not the one from the binary. Fixes `CodeUnloading/AtExit.C` cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7506:263,test,test,263,https://root.cern,https://github.com/root-project/root/pull/7506,1,['test'],['test']
Testability,"With master (commit 7f3f3428e4d20) (but has been present for a long time), PyROOT overload resolution of function that takes an enum class is unstable (it appears to depend on the value rather than the type). With the test file below compiled by ACLiC (for example) running the script:; ```python; import ROOT. ROOT.gSystem.Load(""enums_cxx""). h = ROOT.Holder(); for i in range(10, 0, -1):; h.SetTwo(i); ROOT.to_string(h.two); ```; gives; ```txt; Calling to_string for enum EOne with 0; Calling to_string for enum EOne with 1; ...; ```. I.e. even-though the argument is an 'enum ETwo', the overload take an `enum EOne` actually called. In the original example (requires the code for Celeritas and VecGeom to build). For a similar script:; ```python; for i in range(0, 14, 1):; p.process_class = i; ROOT.celeritas.to_cstring(p.process_class); ```; I get:. ```txt; to_cstring ImportPhysicsVectorType called with 0 unknown; to_cstring ImportPhysicsVectorType called with 1 linear; to_cstring ImportPhysicsVectorType called with 2 log; to_cstring ImportPhysicsVectorType called with 3 free; to_cstring ImportTableType called with 4 ionisation_subsec; to_cstring ImportTableType called with 5 csda_range; to_cstring ImportTableType called with 6 range; to_cstring ImportTableType called with 7 secondary_range; to_cstring ImportTableType called with 8 inverse_range; to_cstring ImportTableType called with 9 lambda; to_cstring ImportTableType called with 10 sublambda; to_cstring ImportTableType called with 11 lambda_prim; to_cstring ImportProcessType called with 12 ucn; to_cstring ImportProcessClass called with 13 annihilation; ```. i.e. the *same* code line given the *same* data members (and thus always the *same* type), call 3 different overloads over the loop iterations. (Funnily running the loop in reverse order leads to the expected/correct executions). I could not reproduce this instability with my simple example. . ```c++; #include <stdio.h>; #include <string>. enum class EOne; {; a,; b,; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7077:218,test,test,218,https://root.cern,https://github.com/root-project/root/issues/7077,1,['test'],['test']
Testability,"With multiple concurrent `RNTupleFillContext`s, the order of clusters is generally indeterminate and entries are only partially ordered. With staged cluster committing, this restriction can be partially lifted by splitting a cluster commit into two phases:; 1. Once full, or when manually triggered, all fields are committed which triggers flushing of all columns. All pages are compressed and staged via the page sink. The result is a `RStagedCluster` that records all information for the second phase. This step can be repeated multiple times as entries are filled into the context.; 2. When appropriate for the application, all staged clusters can be committed, which logically appends them to the RNTuple. This is implemented in a single critical section, which guarantees that the clusters and their entries are consecutive. Moreover, by synchronizing the second phase between multiple contexts, the application can enforce a total ordering of all contained entries at reasonable resource consumption: During the first phase, all write buffers are flushed and will be reused for the following cluster. The metadata stored in `RStagedCluster` should require only minimal memory, which will accumulate while staging more clusters. Staged cluster committing is expected to be slightly slower than the default mode, but should still scale well as the second phase only updates the metadata which is a lightweight operation compared to preparing and filling entries, compressing pages, and writing them to disk. A noteworthy disadvantage is that staged cluster committing will lead to non-linear files, where sequentially iterating over clusters may require seeking to distant file offsets. The impact resulting from this will depend on the storage technology and the read pattern. Closes #16326",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16343:671,log,logically,671,https://root.cern,https://github.com/root-project/root/pull/16343,1,['log'],['logically']
Testability,"With optimizations in Cling on Apple M1, it happens that `RuntimeDyld` sees subtraction relocations for minuends in functions that are not in the `GlobalSymbolTable`. Skip over them and do nothing instead of dereferencing an `end()` iterator and crashing. Disclaimer: This is a hack that likely addresses a symptom instead of the cause - there really shouldn't be such relocations. However, this approach is definitely better than crashing and works for the test cases that run into this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10050:458,test,test,458,https://root.cern,https://github.com/root-project/root/pull/10050,1,['test'],['test']
Testability,"With optimizations in Cling on Apple M1, it happens that `RuntimeDyld` sees subtraction relocations for minuends in functions that are not in the `GlobalSymbolTable`. Skip over them and do nothing instead of dereferencing an `end()` iterator and crashing. Disclaimer: This is a hack that likely addresses a symptom instead of the cause - there really shouldn't be such relocations. However, this approach is definitely better than crashing and works for the test cases that run into this. (cherry picked from commit d6104649df2fea76793a4b3d59d9d8dc63130167). Backport of PR #10050.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10084:458,test,test,458,https://root.cern,https://github.com/root-project/root/pull/10084,1,['test'],['test']
Testability,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test; ... but; So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```; CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):; add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified.; Call Stack (most recent call first):; /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY); /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY); ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before.; This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake; IF(TARGET ${dictionary}); LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>); LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>); ENDIF(); ```; ```cmake; IF(TARGET ${dictionary}); target_sources(${dictionary} PRIVATE ${gensrcdict}); ENDIF(); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5019#issuecomment-587575128:113,test,test,113,https://root.cern,https://github.com/root-project/root/pull/5019#issuecomment-587575128,1,['test'],['test']
Testability,"With some more minimal cmake configurations `assert` is not declared in `RField.hxx` and needs an `#include <cassert>`. `R__ASSERT` is declared however. Additionally, this makes it more consistent with other assertions in `RField`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14737:45,assert,assert,45,https://root.cern,https://github.com/root-project/root/pull/14737,2,['assert'],"['assert', 'assertions']"
Testability,"With the current benchmarking we have, turning it off does not seem to alter performance much, so I would say it's not critical to have it fixed by ""yesterday"". However it would be nice if a fix could make the 6.24.08 timeline. That said I reserve the right to bump the priority if further benchmarks show that `SetClusterPrefech(true)` gives a significant gain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8962#issuecomment-914207426:17,benchmark,benchmarking,17,https://root.cern,https://github.com/root-project/root/issues/8962#issuecomment-914207426,2,['benchmark'],"['benchmarking', 'benchmarks']"
Testability,"With the current logic, if for some reason fAutoFlush is set to 0; for the TTree, the TTreeCache is disabled.; That is undesirable: we still can and want to do pre-fetching even; if auto-flushing was turned off when writing the TTree. Other more direct methods to turn off the TTreeCache still work,; e.g. tree->SetCacheSize(0). ## Checklist:. - [x] tested changes locally (complicated because of https://github.com/root-project/root/issues/7366 , but seems mostly ok) ; - [ ] updated the docs (@pcanal let me know if there are docs to update); - [x] could we set the cachesize to a better value than the autoflush default of ~30MB?. This PR fixes #8713 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8714:17,log,logic,17,https://root.cern,https://github.com/root-project/root/pull/8714,2,"['log', 'test']","['logic', 'tested']"
Testability,"With the function `RooDataHist::interpolateLinear` it is now possible to use; `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one; dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line; between two neighboring bin centers by solving a system of two linear; equations. With the coefficients of the straight line, the interpolated weight; for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the; corresponding weight is found by interpolating between the current bin and the; neighboring bin to the left. If the event is to the right of the bin center,; the weight is found by inteperpolating between the current bin center and the; one to the right. For the first and last bin, the interpolation is performed; either by mirroring the histogram outside its boundaries, or by applying cdf; boundaries. `RooDataHist::weights()` has been updated so that it calls; `RooDataHist::interpolateLinear()` when the interpolation order is one.; Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`; have been updated so that they call `RooDatahist::weights()` in the cases; where the histogram is one dimensional and the interpolation order is zero or; one. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11211:1394,test,tested,1394,https://root.cern,https://github.com/root-project/root/pull/11211,1,['test'],['tested']
Testability,"With the function `RooDataHist::interpolateQuadratic()` it is now possible to; use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for; one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of; `RooDataHist::interpolateLinear()`, which was implemented in #11211; It finds the coefficients of a second order polynomial between three; neighboring bin centers by solving a system of three quadratic equations. With; the coefficients of the quadratic function, the interpolated weight for an event; between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the; corresponding weight is found by interpolating between the current bin and the; two neighboring bins to the left. If the event is to the right of the bin center,; the weight is found by interpolating between the current bin center, one bin to; the the left and one bin to the right. For the first two bins and the last bin,; the interpolation is performed either by mirroring the histogram outside its; boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls; `RooDataHist::interpolateQuadratic()` when the interpolation order is two.; Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`; have been updated so that they always call RooDatahist::weights() in the case; where the histogram is one dimensional. Since the old interpolation; implementation `RooDataHist::interpolateDim()` only supported up to second; order interpolation, it has been completely replaced by; `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`; in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11224:1879,test,tested,1879,https://root.cern,https://github.com/root-project/root/pull/11224,1,['test'],['tested']
Testability,"With the linked patch, the valgrind log is the following . [valgrind_patch.log](https://github.com/root-project/root/files/15186136/valgrind_patch.log). Note that there is no more an indirect leak due to RDataFrame operations",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15399#issuecomment-2089985990:36,log,log,36,https://root.cern,https://github.com/root-project/root/issues/15399#issuecomment-2089985990,3,['log'],['log']
Testability,"With the new code there is no need to have that logic in two places. The one place where it still is now covers both cases consistently:. ```; size_t l = gLineString.length();; size_t b = 0;; do {; size_t e = gLineString.find('\n', b);; if (e != string::npos) e++;; if (spos) printf(""%-*s%s"", (int) spos, ""///"",; gLineString.substr(b, e - b).c_str());; else printf(""%s"", gLineString.substr(b, e - b).c_str());; b = e;; } while (b < l);; ```. I.e. if the gLineString is modified to contain a linebreak, then when it is printed out it is spiit at the linebreak and the ""///"" comment marker is added when needed. There is no need to add the comment marker to the gLineString itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/161#issuecomment-228049282:48,log,logic,48,https://root.cern,https://github.com/root-project/root/pull/161#issuecomment-228049282,1,['log'],['logic']
Testability,"With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3370:29,test,tests,29,https://root.cern,https://github.com/root-project/root/pull/3370,2,['test'],['tests']
Testability,"With the patch at the end of this report, the test `roottest-root-io-issue-9899-read_cmssw_class_v3` fails with (partial output):; ```; Error in <readfile>: For entries 0 we have result=19200; ```; This is due to the fact that there is no branch for `w.fPersValue.fPersLowData.fProblems.fContent.fHolder` because the typeof `fHolder` : `RefVectorMemberPointersHolder` only has one transient member. Consequently, the line in `TBranchElement`'s `GatherArtificialElements` function:; ```; if (!foundRelatedSplit) {; continue;; }; ```; which is designed to avoid drilling through data members that are ""new"" in the current (in-memory) class layout. `fContent` also has no explicit branch (it is intentionally elided) but `fContent.fID` has a branch. Since the object (`fContent` is updated during the read, we should be running the I/O rules on its sub-objects ... but we don't. The issue can be senen by applying this patch to `roottest` and running `ctest -R issue-9899`. ```; diff --git a/root/io/issue-9899/read_cmssw_class_v3.cxx b/root/io/issue-9899/read_cmssw_class_v3.cxx; index 58b50a93..e0aef7e1 100644; --- a/root/io/issue-9899/read_cmssw_class_v3.cxx; +++ b/root/io/issue-9899/read_cmssw_class_v3.cxx; @@ -129,10 +129,8 @@ struct PersHighData {; }; int check(int slide = 1) {; int res = 0;; -#ifdef FIXED_ISSUE_99xx; for(auto &d : fPersLowData); res += d.check(slide, 0);; -#endif; for(auto &d : fLowData); res += d.check(slide * BIT(6), 10);; return res;; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9924:46,test,test,46,https://root.cern,https://github.com/root-project/root/issues/9924,1,['test'],['test']
Testability,"With the revert-revert, I am a bit confused. It is another attempt to apply the Cloufare patches? If so, instead of revert-revert can we do a cherry-pick of the commit to be reapplied (and/or reword the commit logs)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2806#issuecomment-430320241:210,log,logs,210,https://root.cern,https://github.com/root-project/root/pull/2806#issuecomment-430320241,1,['log'],['logs']
Testability,"With the upgrade to llvm-13, the JIT lost the ability to re-use existing weak symbols that the JIT had already emitted, instead only looking at dlsym. This causes a significant increase in JITted symbols, and thus a significant slow-down of cling / its JIT. This restores the old behavior, with an identical set of symbols that jet jitted. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018:405,test,tested,405,https://root.cern,https://github.com/root-project/root/pull/12018,1,['test'],['tested']
Testability,"With the upgrade, BackendPasses was modifying a TargetMachine that was not used by SimpleCompiler. Change that by; - using a SimpleCompiler that uses IncrementalJIT::TM;; - moving the TM creation to IncrementalJIT, and giving access to it. This reduces the runtime of https://github.com/root-project/root/issues/11927 to; - before llvm upgrade: 2.69s; - llvm13, without this commit: ???; - llvm13, with this commit: 2.89s i.e, a slow-down of 7% (that is likely caused by the different emission mechanism of Orc-v2; to be confirmed...). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11945:601,test,tested,601,https://root.cern,https://github.com/root-project/root/pull/11945,1,['test'],['tested']
Testability,"With the upgrade, BackendPasses was modifying a TargetMachine that was not used by SimpleCompiler. Change that by; - using a SimpleCompiler that uses IncrementalJIT::TM;; - moving the TM creation to IncrementalJIT, and giving access to it. This reduces the runtime of https://github.com/root-project/root/issues/11927 to; - before llvm upgrade: 2.69s; - llvm13, without this commit: ???; - llvm13, with this commit: 2.89s i.e, a slow-down of 7% (that is likely caused by the different emission mechanism of Orc-v2; to be confirmed...). (cherry picked from commit d3793f2bb8c5948f4c64947c7f76fb0b0e1a3567). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12096:671,test,tested,671,https://root.cern,https://github.com/root-project/root/pull/12096,1,['test'],['tested']
Testability,"With this (large) patch, RAction, RFilter, RDefine, RRange and RVariation learn how to operate on ranges of N masked entries instead of one entry at a time. Currently ranges are always of size 1, but most of RDF's internal logic has been parameterized over that size. Notably, RAction, RFilter, RDefine and RDefineReader should be now almost completely ""bulkified"" while RVariation and other column readers (e.g. RVariationReader and RTreeColumnReader) still have some logic that assumes a bulk size of 1 (e.g. they only store a single result/value at a time). **Note**: This is still a draft PR because the performance impact of these changes, when using a bulk size of 1, seems to be significant.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11517:223,log,logic,223,https://root.cern,https://github.com/root-project/root/pull/11517,2,['log'],['logic']
Testability,"With this PR, `RNTupleInspector::RColumnInfo` and `RNTupleInspector::RFieldTreeInfo` are renamed to `RNTupleInspector::RColumnInspector` and `RNTupleInspector::RFieldTreeInspector`, along with their getters. The rationale behind this change is to make the class names more symmetric with the general `RNTupleInspector` name and remove any potential ambiguity. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14131:366,test,tested,366,https://root.cern,https://github.com/root-project/root/pull/14131,1,['test'],['tested']
Testability,"With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement).; To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14129:137,assert,assert,137,https://root.cern,https://github.com/root-project/root/pull/14129,2,"['assert', 'test']","['assert', 'tested']"
Testability,"With this PR, the normalization integrals are placed as separate objects in the serialized computation graph for the RooFitDriver. This is done by modifying the RooFit computation graph, injecting a `RooNormalizedPdf` on top of every normalized pdf where the normalization is done instead of doing it hardcoded in the `computeBatch` function for each pdf. These changes make all the stressRooFit unit tests pass with the `CPU` and `CUDA` batch mode, so stressRooFit runs with these instances are added as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9956:401,test,tests,401,https://root.cern,https://github.com/root-project/root/pull/9956,2,['test'],['tests']
Testability,"With this change, I hope to be able to reproduce the failures of `test_stressroofit_batchmode_cpu` on Windows 10 in the CI, such that I can test possible solutions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10754#issuecomment-1155267116:140,test,test,140,https://root.cern,https://github.com/root-project/root/pull/10754#issuecomment-1155267116,1,['test'],['test']
Testability,"With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:; 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator.; 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15939:1166,test,tested,1166,https://root.cern,https://github.com/root-project/root/pull/15939,1,['test'],['tested']
Testability,"With this change, the method invocation request is received directly from civetweb server thread. The changes are executed through REveManager thread execution thread that processes. The REveManger::DoRedraw() method bacame depreciated. It is now possible to apply changes without a client interface after the connection is created. This example is implemented in autoplay of events in tutorials/eve7/event_demo.C. Other changes:; * Fix memory leaks in the client; * Reduce calls of TSystem::ProcessLine; * Add structure to transfer server messages to client log (REveLog).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8114:559,log,log,559,https://root.cern,https://github.com/root-project/root/pull/8114,1,['log'],['log']
Testability,"With this change, the use of TFile when creating an `RNTupleInspector` object from an RNTuple name and source path is removed by directly creating the page source instead. This is in accordance with other places that require the opening of an RNTuple (i.e. `RNTupleReader` and `ROOT::RDF::Experimental::FromRNTuple`). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14315:339,test,tested,339,https://root.cern,https://github.com/root-project/root/pull/14315,1,['test'],['tested']
Testability,With this change:. 1036/1038 Test #853: tutorial-tmva-TMVA_Higgs_Classification ............................. Passed 1248.66 sec; 1037/1038 Test #854: tutorial-tmva-TMVA_RNN_Classification ............................... Passed 1252.92 sec; 1038/1038 Test #852: tutorial-tmva-TMVA_CNN_Classification ............................... Passed 1273.47 sec. Instead of timing out at 1200 s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6246:29,Test,Test,29,https://root.cern,https://github.com/root-project/root/pull/6246,3,['Test'],['Test']
Testability,"With your changes, does the `$ROOTSYS/test/stressgraphics.cxx` runs ? (just type `make` in `$ROOTSYS/test`to build it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9518#issuecomment-1058217215:38,test,test,38,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1058217215,2,['test'],['test']
Testability,"With:; ```; using name_of_typedef = name_of_class;; ```; and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries); when doing:; ```; auto cl = TClass::GetClass(""name_of_typedef"");; ```; we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz); you can reproduce the problem:; ```; tar xfz typedef02.tgz; cd typedef02; cd run_withmodule; sh ../build.rootcling.module; root.exe -b -l -q ../testtypedef.C; ```; and you will get:. ```. Processing ../testtypedef.C...; The TClass for the typedef has IsLoaded: 0; ```; where the last line should not be printed. you can see the rootmap in action with:; ```; cd run_nomodule. sh ../build; root.exe -b -l -q ../testtypedef.C; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12495:687,test,testtypedef,687,https://root.cern,https://github.com/root-project/root/issues/12495,3,['test'],['testtypedef']
Testability,"Without modules, many STL and libc headers are automatically; provided by ROOT via the attached ROOT PCH. This means that; we don't need to have autloading or explicit includes for STL; or libc headers when running with the PCH attached. This leads; to making user code like this working in ROOT:. ```C++; // no includes here that provides assert; int foo() {; assert(false);; }; ```. However, as the modules don't come with this big PCH, we; are now suddenly in the situation where we can't resolve; things such as `assert`. We also can't rely on the; normal autoloading of ROOT as those declarations were; actually never autoloaded, but just provided by the PCH. To simulate this behavior with modules, we automatically load; those headers that we expect to have in the ROOT PCH; (which are probably the STL and libc headers).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1317:340,assert,assert,340,https://root.cern,https://github.com/root-project/root/pull/1317,3,['assert'],['assert']
Testability,"Without this patch, using python 3.6 in anaconda3:. ```; >>> import ROOT; >>> h = ROOT.TH1D('test', 'test', 100, 0, 1); AttributeError: type object 'TArray' has no attribute '__getitem__'. The above exception was the direct cause of the following exception:. SystemError: <built-in method mro of ROOT.PyRootType object at 0x17d57b8> returned a result with an error set; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/maxnoe/.local/root5/lib/ROOT.py"", line 459, in __getattr1; return getattr( self, name ); File ""/home/maxnoe/.local/root5/lib/ROOT.py"", line 486, in __getattr2; attr = _root.LookupRootEntity( name ); AttributeError: TH1D; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1005#issuecomment-330495278:93,test,test,93,https://root.cern,https://github.com/root-project/root/pull/1005#issuecomment-330495278,2,['test'],['test']
Testability,"Without this the fix for #7754 breaks some CMSSW use cases (see https://github.com/root-project/roottest/pull/804). This PR *also* includes the content of https://github.com/root-project/root/pull/8429 as they touch the same area and have not been tested separately (it does not make sense to do so). The only *new* code is the last commit ""TBranchElement: do not set fOnfileObject for collection parent (type …""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9585:248,test,tested,248,https://root.cern,https://github.com/root-project/root/pull/9585,1,['test'],['tested']
Testability,"Without ~realistic benchmarks that we can use to judge the impact of these interventions, I'm reluctant to propose changes in such important sections of the code. On the other hand, differently from what the discussion from 2016 that you reported above assumes:. 1. we do not test (nor design for) the usecase of `TTreeProcessorMT::Process` being called concurrently, or other threads accessing the same `TFile` objects that `TTreeProcessorMT::Process` is using. in other words, that's not a real usecase.; 2. `TTreeProcessorMT::Process` respects (and if not, it's a bug and not intentional) the ""one file, one thread"" rule. Given these two facts, can't we just completely remove `TParTreeProcessingRAII` and ~~be done with it~~ _never_ protect `TFile::ReadProcessID`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288#issuecomment-609039774:19,benchmark,benchmarks,19,https://root.cern,https://github.com/root-project/root/pull/5288#issuecomment-609039774,2,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,"Work in progress branch for simplifying offset column indexing. All the basic vector tests are passing, but I think there is a problem with cluster indexes. There are three failing tests that trigger an assertion at the page storage level: ; https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/src/RPageStorageFile.cxx#L263. 1. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L359; 2. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L534; 3. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple_raw.cxx#L75. which I think means I'm creating bad `clusterIndex` values at some point, probably from `GetCollectionInfo`. . @jblomer would you mind taking a look? I am a little confused about columnIndexes inside `GetCollectionInfo`. I think the problem might be from when we pass a cluster boundary, `idxStart` should be set to some sensible value based on the cluster (0 wasn't working for me).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5714:85,test,tests,85,https://root.cern,https://github.com/root-project/root/pull/5714,6,"['assert', 'test']","['assertion', 'test', 'tests']"
Testability,"Work in progress to fully generalize gradient interfaces, in order to allow vectorization and parallelization of the fitting methods that make use of them. The implementation of Chi2 gradient has been parallelized and vectorized: these new implementations are unit tested and benchmarked against the simple scalar serial case. To do: test the general use case, where the user simply calls the fitting method specifying that the gradient should be used. Early reviews are more than welcome!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793:265,test,tested,265,https://root.cern,https://github.com/root-project/root/pull/793,3,"['benchmark', 'test']","['benchmarked', 'test', 'tested']"
Testability,Working on the fix for the test... I will create a PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1305#issuecomment-344592077:27,test,test,27,https://root.cern,https://github.com/root-project/root/pull/1305#issuecomment-344592077,1,['test'],['test']
Testability,Works! I've added an additional test in this PR: https://github.com/root-project/roottest/pull/605,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5430#issuecomment-704238081:32,test,test,32,https://root.cern,https://github.com/root-project/root/pull/5430#issuecomment-704238081,1,['test'],['test']
Testability,Would it be helpful to repeat the test with debug symbols enabled for cling (and ROOT)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16232#issuecomment-2329313684:34,test,test,34,https://root.cern,https://github.com/root-project/root/pull/16232#issuecomment-2329313684,1,['test'],['test']
Testability,Would it be possible to test this with Python3 as well?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/760#issuecomment-315019079:24,test,test,24,https://root.cern,https://github.com/root-project/root/pull/760#issuecomment-315019079,1,['test'],['test']
Testability,Would it be possible to write a test? Something that otherwise times out perhaps?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14298#issuecomment-1876935335:32,test,test,32,https://root.cern,https://github.com/root-project/root/pull/14298#issuecomment-1876935335,1,['test'],['test']
Testability,"Would something like this be sufficient ?; It checks three materials against the PDG values from https://pdg.lbl.gov/2020/AtomicNuclearProperties; ```; $> root.exe test_material_units.C\(\""G4\""\); $> root.exe test_material_units.C\(\""ROOT\""\); ```; [test_material_units.C.txt](https://github.com/root-project/root/files/9207970/test_material_units.C.txt). Whenever it would say ""TEST FAILED"" an error condition occurred.; On Success:; ```; Processing ../test_material_units.C(""G4"")...; Info in <TGeoManager>: Changing system of units to Geant4 units (mm, ns, MeV).; Using Geant4 system of units. ; Element: SI Z=14 N=28.000000 A=28.085500 [g/mole]; Material Si A=28.0855 Z=14 rho=2.329 radlen=93.5361 intlen=457.729 index=0; TEST SUCCEEDED Si TGeoMaterial Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.17 % IntLen: 1.6 % ; TEST SUCCEEDED Mix_1_Si TGeoMixture Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.17 % IntLen: 1.6 % ; TEST SUCCEEDED Mix_1_Si TGeoMixture Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.0015 % IntLen: 1.6 % ; TEST SUCCEEDED Mix_2_Si TGeoMixture Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.17 % IntLen: 1.6 % ; TEST SUCCEEDED Mix_3_Si TGeoMixture Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.17 % IntLen: 1.6 % ; Element: FE Z=26 N=56.000000 A=55.845000 [g/mole]; Material Fe A=55.845 Z=26 rho=7.874 radlen=17.5666 intlen=169.589 index=4; TEST SUCCEEDED Fe TGeoMaterial Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST SUCCEEDED Mix_1_Fe TGeoMixture Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST SUCCEEDED Mix_1_Fe TGeoMixture Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.028 % IntLen: 1.1 % ; TEST SUCCEEDED Mix_2_Fe TGeoMixture Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST SUCCEEDED Mix_3_Fe TGeoMixture Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; Element: U Z=92 N=238.000000 A=238.028900 [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11060#issuecomment-1197929515:379,TEST,TEST,379,https://root.cern,https://github.com/root-project/root/pull/11060#issuecomment-1197929515,4,['TEST'],['TEST']
Testability,Wouldn't an unnamed macro do the job? See attached file. The filename can be changed without having to 'rename' the main function. [test.C.zip](https://github.com/root-project/root/files/9468881/test.C.zip),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11299#issuecomment-1234048905:132,test,test,132,https://root.cern,https://github.com/root-project/root/issues/11299#issuecomment-1234048905,2,['test'],['test']
Testability,"Wouldn't mind a more explicit commit message, but looks ok if it fixes the cxxmodules failing tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1682#issuecomment-369269924:94,test,tests,94,https://root.cern,https://github.com/root-project/root/pull/1682#issuecomment-369269924,1,['test'],['tests']
Testability,Wouter Verkerke has added some fixes to RooFit for usage in the Higgs Combination working group in ATLAS. These fixes include additions of new classes as well as genuine bugfixes. This is a minimal collection of these fixes that successfully compiles and passes all the tests on an SLC6 machine. @egpbos,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/776:270,test,tests,270,https://root.cern,https://github.com/root-project/root/pull/776,1,['test'],['tests']
Testability,Wouter Verkerke has added some fixes to RooFit for usage in the Higgs Combination working group in ATLAS. These fixes include additions of new classes as well as genuine bugfixes. This is a minimal collection of these fixes that successfully compiles and passes all the tests on an SLC6 machine. @egpbos. [rebased version of this pull request: [https://github.com/root-project/root/pull/776](url)],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/792:270,test,tests,270,https://root.cern,https://github.com/root-project/root/pull/792,1,['test'],['tests']
Testability,"Wow! Kernel 5.8.1, works fine now! And: ~ factor 5 read speed improvement (in a favorable benchmark, but still) on my laptop SSD. Queue depth jumps from < 1 to 6-7. Fantastic! Let's all have beers!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6162#issuecomment-678322879:90,benchmark,benchmark,90,https://root.cern,https://github.com/root-project/root/pull/6162#issuecomment-678322879,1,['benchmark'],['benchmark']
Testability,"Wow, that's weird. I don't see how is that test related to the changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/889#issuecomment-330828903:43,test,test,43,https://root.cern,https://github.com/root-project/root/pull/889#issuecomment-330828903,1,['test'],['test']
Testability,Write/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writeUniqPtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77725/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writeUniqPtrColls/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writePtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77725/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writePtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77725/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77725/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.scripts.roottest_scripts_utils](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77725/testReport/projectroot.roottest/scripts/roottest_scripts_utils/); - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77725/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory/); - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77725/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77725/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.cl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420#issuecomment-617357668:1680,test,testReport,1680,https://root.cern,https://github.com/root-project/root/pull/5420#issuecomment-617357668,1,['test'],['testReport']
Testability,WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37747/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.tmva.tmva.test.DNN.RNN.TMVA_DNN_RNN_Backpropagation](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37747/testReport/projectroot.tmva.tmva.test.DNN/RNN/TMVA_DNN_RNN_Backpropagation/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_nodes](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37747/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_nodes/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37747/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.roottest.cling.dict.ROOT-7879.roottest_cling_dict_ROOT_7879_skipLinkDef](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37747/testReport/projectroot.roottest.cling.dict/ROOT-7879/roottest_cling_dict_ROOT_7879_skipLinkDef/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_load](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37747/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_load/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlProxies](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37747/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlProxies/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2Clean](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37747/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2Clean/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1Clean](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37747/testReport,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414703971:1428,test,testReport,1428,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414703971,1,['test'],['testReport']
Testability,Wrong logic ended up returning fFieldZero instead of nullptr.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8724:6,log,logic,6,https://root.cern,https://github.com/root-project/root/pull/8724,1,['log'],['logic']
Testability,Wshadow] ; - [2020-09-29T23:41:56.235Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:235:38: warning: unused parameter ‘C’ [-Wunused-parameter] ; - [2020-09-29T23:42:06.808Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/AST.cpp:398:28: warning: declaration of ‘NS’ shadows a previous local [-Wshadow] ; - [2020-09-29T23:42:09.100Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/Output.cpp:59:13: warning: declaration of ‘OS’ shadows a member of ‘cling::utils::{anonymous}::ColoredOutput’ [-Wshadow] ; - [2020-09-29T23:42:09.101Z] /build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/Output.cpp:61:9: warning: declaration of ‘OS’ shadows a member of ‘cling::utils::{anonymous}::ColoredOutput’ [-Wshadow] . And 556 more. ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97393/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.dict.ROOT-9112.roottest_cling_dict_ROOT_9112_ROOT9112](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97393/testReport/projectroot.roottest.cling.dict/ROOT-9112/roottest_cling_dict_ROOT_9112_ROOT9112/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97393/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97393/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97393/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.htm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-701055900:2403,test,testReport,2403,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-701055900,2,['test'],"['test', 'testReport']"
Testability,"Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 1184 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_aclicDataMemberSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52311/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_aclicDataMemberSelection/); - [projectroot.roottest.root.meta.evolution.version5.roottest_root_meta_evolution_version5_execNestedColl](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52311/testReport/projectroot.roottest.root.meta.evolution/version5/roottest_root_meta_evolution_version5_execNestedColl/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52311/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_runpairs](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52311/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_runpairs/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52311/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TooSmall](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52311/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_TooSmall/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52311/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeform",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2983#issuecomment-457425291:3480,test,testReport,3480,https://root.cern,https://github.com/root-project/root/pull/2983#issuecomment-457425291,1,['test'],['testReport']
Testability,Wunknown-attributes] ; - [2022-12-21T14:16:52.005Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T14:16:52.005Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:96:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T14:16:52.005Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:98:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T14:16:59.807Z] /data/sftnight/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 367 more. ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_dependency_versions](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162943/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162943/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.runtutorials.tutorial_pyroot_pyroot004_NumbaDeclare_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162943/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot004_NumbaDeclare_py/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162943/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162943/t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11946#issuecomment-1361413863:2417,test,testReport,2417,https://root.cern,https://github.com/root-project/root/pull/11946#issuecomment-1361413863,1,['test'],['testReport']
Testability,Wunknown-attributes] ; - [2022-12-21T15:02:41.280Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T15:02:41.280Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:96:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T15:02:41.280Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:98:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T15:02:47.623Z] /data/sftnight/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 366 more. ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_dependency_versions](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162950/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162950/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.runtutorials.tutorial_pyroot_pyroot004_NumbaDeclare_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162950/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot004_NumbaDeclare_py/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162950/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162950/t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11940#issuecomment-1361494340:2417,test,testReport,2417,https://root.cern,https://github.com/root-project/root/pull/11940#issuecomment-1361494340,1,['test'],['testReport']
Testability,Wunknown-attributes] ; - [2022-12-21T16:19:58.490Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T16:19:58.490Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:96:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T16:19:58.490Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:98:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T16:20:03.827Z] /data/sftnight/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 367 more. ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_dependency_versions](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162978/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162978/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.runtutorials.tutorial_pyroot_pyroot004_NumbaDeclare_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162978/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot004_NumbaDeclare_py/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162978/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162978/t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11944#issuecomment-1361648192:2417,test,testReport,2417,https://root.cern,https://github.com/root-project/root/pull/11944#issuecomment-1361648192,1,['test'],['testReport']
Testability,Wunused-parameter] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:304:28: warning: unused parameter ‘ptr’ [-Wunused-parameter] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:304:50: warning: unused parameter ‘al’ [-Wunused-parameter] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:344:11: warning: ‘operator new’ must not return NULL unless it is declared ‘throw()’ (or -fcheck-new is in effect) . And 8 more. ### Failing tests:; - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30144/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30144/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_alias](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30144/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_alias/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30144/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_cache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30144/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_cache/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30144/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2193#issuecomment-397236796:2238,test,test,2238,https://root.cern,https://github.com/root-project/root/pull/2193#issuecomment-397236796,1,['test'],['test']
Testability,Wunused-parameter] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:304:28: warning: unused parameter ‘ptr’ [-Wunused-parameter] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:304:50: warning: unused parameter ‘al’ [-Wunused-parameter] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:344:11: warning: ‘operator new’ must not return NULL unless it is declared ‘throw()’ (or -fcheck-new is in effect) . And 8 more. ### Failing tests:; - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30198/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30198/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_alias](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30198/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_alias/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30198/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_cache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30198/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_cache/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30198/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2193#issuecomment-397318209:2238,test,test,2238,https://root.cern,https://github.com/root-project/root/pull/2193#issuecomment-397318209,1,['test'],['test']
Testability,Wunused-parameter] ; - [2021-03-22T08:52:48.878Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter ‘nSlots’ [-Wunused-parameter] ; - [2021-03-22T08:52:49.137Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter ‘nSlots’ [-Wunused-parameter] . ### Failing tests:; - [projectroot.io.io.test.gtest_io_io_test_RRawFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111617/testReport/projectroot.io.io/test/gtest_io_io_test_RRawFile/); - [projectroot.net.davix.test.gtest_net_davix_test_RRawFileDavix](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111617/testReport/projectroot.net.davix/test/gtest_net_davix_test_RRawFileDavix/); - [projectroot.test.test_stressIOPlugins_http](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111617/testReport/projectroot/test/test_stressIOPlugins_http/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rstandardscaler](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111617/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rstandardscaler/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rreader](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111617/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rreader/); - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_MethodDL_Adam_Optimization_Cpu](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111617/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_MethodDL_Adam_Optimization_Cpu/); - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_MethodDL_SGD_Optimization_Cpu](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111617/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_MethodDL_SGD_Optimization_Cpu/); - [projectroot.tmva.tmva.test.DNN.TMVA_D,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803891076:1428,test,testReport,1428,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803891076,2,['test'],"['test', 'testReport']"
Testability,Wunused-parameter] ; - [2022-01-24T16:20:38.301Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/graf3d/ftgl/inc/FTFont.h:125:35: warning: unused parameter 'depth' [-Wunused-parameter] ; - [2022-01-24T16:20:46.001Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/graf3d/ftgl/inc/FTFont.h:125:35: warning: unused parameter 'depth' [-Wunused-parameter] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_callable_generator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/134999/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_callable_generator/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/134999/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_proxy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/134999/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_proxy/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/134999/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/134999/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/134999/testReport/projectroot.bindings.pyroot.python,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9671#issuecomment-1020336978:2488,test,test,2488,https://root.cern,https://github.com/root-project/root/pull/9671#issuecomment-1020336978,1,['test'],['test']
Testability,Wunused-parameter] ; - include/TCollectionProxyInfo.h:747:77: warning: unused parameter 'ref' [-Wunused-parameter] ; - include/TCollectionProxyInfo.h:747:77: warning: unused parameter 'ref' [-Wunused-parameter] ; - include/TCollectionProxyInfo.h:747:77: warning: unused parameter 'ref' [-Wunused-parameter] . And 117 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43570/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43570/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43570/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execOld/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43570/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43570/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43570/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2772#issuecomment-428265558:2523,test,testReport,2523,https://root.cern,https://github.com/root-project/root/pull/2772#issuecomment-428265558,1,['test'],['testReport']
Testability,"X compile features - done; -- Found Git: /nix/store/bslw1kzx445wxp08ykq2vdsgnr516vcq-git-2.39.1/bin/git (found version ""2.39.1"") ; -- Checking internet connectivity; -- Checking internet connectivity - failed: will not automatically download external dependencies; -- Looking for Python; -- Found Python3: /nix/store/sp5x6s8n36gjlwck74xhj1i61p66vcpa-python3-3.10.9/bin/python3.10 (found version ""3.10.9"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_INCLUDE_DIRS Python2_LIBRARIES Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed) ; Reason given by package: ; Interpreter: Wrong major version for the interpreter ""/nix/store/sp5x6s8n36gjlwck74xhj1i61p66vcpa-python3-3.10.9/bin/python"". -- Found GCC. Major version 11, minor version 3; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.10.9; -- Looking for ZLib; -- Found ZLIB: /nix/store/nglx459d8q4p1f1fcn1dv314hldh5h78-zlib-1.2.13/lib/libz.so (found version ""1.2.13"") ; -- Looking for nlohmann/json.hpp; -- Found nlohmann_json: /nix/store/0ww566wjk917s42gxv3sfbiwln1wn2c9-nlohmann_json-3.11.2/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.9"") ; -- Looking for Freetype; -- Found Freetype: /nix/store/mvj1y0k0n53mfdlxs8rr38vnk17ihg5n-freetype-2.12.1/lib/libfre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:5943,Test,Test,5943,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,4,['Test'],['Test']
Testability,"X.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. $ clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/stognini -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -internal-isystem /Library",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2374779123:6393,stub,stubs,6393,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2374779123,1,['stub'],['stubs']
Testability,"X.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. + clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/pcanal/root_working/builds/master.debug/src/tutorials/v7/ntuple -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Library/Developer/Comm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2375170248:6731,stub,stubs,6731,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2375170248,1,['stub'],['stubs']
Testability,"X.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. + clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/pcanal/root_working/builds/master.module -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2377172429:6705,stub,stubs,6705,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2377172429,1,['stub'],['stubs']
Testability,XMLIO_rdict.pcm /mnt/build/workspace/root-pullrequests-build/build/lib/libXMLIO.rootmap ; - [2023-02-07T14:14:11.368Z] FAILED: roofit/jsoninterface/G__RooFitJSONInterface.cxx lib/libRooFitJSONInterface_rdict.pcm lib/libRooFitJSONInterface.rootmap /mnt/build/workspace/root-pullrequests-build/build/roofit/jsoninterface/G__RooFitJSONInterface.cxx /mnt/build/workspace/root-pullrequests-build/build/lib/libRooFitJSONInterface_rdict.pcm /mnt/build/workspace/root-pullrequests-build/build/lib/libRooFitJSONInterface.rootmap ; - [2023-02-07T14:14:12.184Z] FAILED: bindings/tpython/G__ROOTTPython.cxx lib/libROOTTPython_rdict.pcm lib/libROOTTPython.rootmap /mnt/build/workspace/root-pullrequests-build/build/bindings/tpython/G__ROOTTPython.cxx /mnt/build/workspace/root-pullrequests-build/build/lib/libROOTTPython_rdict.pcm /mnt/build/workspace/root-pullrequests-build/build/lib/libROOTTPython.rootmap ; - [2023-02-07T14:14:13.304Z] FAILED: tree/dataframe/test/TwoFloatsDict.cxx tree/dataframe/test/libdataframe_splitcoll_arrayview_rdict.pcm tree/dataframe/test/libdataframe_splitcoll_arrayview.rootmap /mnt/build/workspace/root-pullrequests-build/build/tree/dataframe/test/TwoFloatsDict.cxx /mnt/build/workspace/root-pullrequests-build/build/tree/dataframe/test/libdataframe_splitcoll_arrayview_rdict.pcm /mnt/build/workspace/root-pullrequests-build/build/tree/dataframe/test/libdataframe_splitcoll_arrayview.rootmap ; - [2023-02-07T14:14:15.592Z] FAILED: math/vecops/G__ROOTVecOps.cxx lib/libROOTVecOps_rdict.pcm lib/libROOTVecOps.rootmap /mnt/build/workspace/root-pullrequests-build/build/math/vecops/G__ROOTVecOps.cxx /mnt/build/workspace/root-pullrequests-build/build/lib/libROOTVecOps_rdict.pcm /mnt/build/workspace/root-pullrequests-build/build/lib/libROOTVecOps.rootmap ; - [2023-02-07T14:14:16.154Z] FAILED: roofit/hs3/G__RooFitHS3.cxx lib/libRooFitHS3_rdict.pcm lib/libRooFitHS3.rootmap /mnt/build/workspace/root-pullrequests-build/build/roofit/hs3/G__RooFitHS3.cxx /mnt/build/workspace/root-pullr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12217#issuecomment-1420844336:2134,test,test,2134,https://root.cern,https://github.com/root-project/root/pull/12217#issuecomment-1420844336,1,['test'],['test']
Testability,XX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG; -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success; -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG; -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success; -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG; -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success; -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG; -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed; -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG; -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed; -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG; -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success; -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG; -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success; -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG; -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success; -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG; -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success; -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR; -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed; -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG; -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success; -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL; -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success; -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP; -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed; -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG; -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed; -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG; -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed; -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG; -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success; -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FL,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:4131,Test,Test,4131,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,1,['Test'],['Test']
Testability,"X_DICT src/CUDADataFormats/PortableTestObjects/src/classes.h src/CUDADataFormats/PortableTestObjects/src/classes_def.xml. *** Break *** segmentation violation. ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0x0000150890fafe0b in waitpid () from /lib64/libc.so.6; #1 0x0000150890f03747 in do_system () from /lib64/libc.so.6; #2 0x0000150891f19ebc in TUnixSystem::Exec (this=0x18586b0, shellcmd=0xb2bed80 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/etc/gdb-backtrace.sh 1157327 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/unix/src/TUnixSystem.cxx:2157; #3 0x0000150891f1a75f in TUnixSystem::StackTrace (this=0x18586b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/unix/src/TUnixSystem.cxx:2448; #4 0x0000150891f1e19a in TUnixSystem::DispatchSignals (this=0x18586b0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/unix/src/TUnixSystem.cxx:3668; #5 0x0000150891f15fca in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/unix/src/TUnixSystem.cxx:410; #6 0x0000150891f1e09d in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/unix/src/TUnixSystem.cxx:3639; #7 <signal handler called>; #8 0x0000150892f6d3c9 in llvm::V",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16232#issuecomment-2331366418:4844,test,tests,4844,https://root.cern,https://github.com/root-project/root/pull/16232#issuecomment-2331366418,2,['test'],"['testBuildDir', 'tests']"
Testability,"Xrootd v5 is too young to be set as default, I believe. But the patch can be tested with xrootd v5 as external.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6031#issuecomment-658704521:77,test,tested,77,https://root.cern,https://github.com/root-project/root/pull/6031#issuecomment-658704521,1,['test'],['tested']
Testability,"Yay, all RDF tests passed in the PR build :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10050#issuecomment-1059412479:13,test,tests,13,https://root.cern,https://github.com/root-project/root/pull/10050#issuecomment-1059412479,1,['test'],['tests']
Testability,"Yay, thanks for your help Sergey!. I put `TGLSdfFontMaker` in RGL as it requires off-screen GL context to render the SDF font texture. RGL already depends on libASImage ... TGLViewer::SaveAs() calls it directly to store screenshots into png/jpg files. Alja and I have checked it on mac and it works ok. There was an interesting side-story where libRGL got linked against /usr/X11R6/lib/libGL.so (presumably from an old install of XQuartz and libX11 stuff from homebrew -- it worked after we wiped both of those) instead of Apple's OpenGL framework. . I still want to test this on Windows, then I'll rebase and force-push so there's a single commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2252641668:567,test,test,567,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2252641668,1,['test'],['test']
Testability,"Yeah, I wrote those docs :sweat_smile: but I am not sure they should say ""stored as 64 bit"". @pcanal I guess we can fix this test such that writing and reading back a `Long_t` leaf works correctly both on 32bit and 64bit architectures, but what happens when you write that data on a 64bit machine and read it on a 32bit machine or vice-versa?. @ellert in this test we really want to test `long int` support (see be6a62ee84317), so I think the appropriate fix would be to simply use a smaller value than the current `2^33` on 32bit machines, rather than switching to `long long`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10302#issuecomment-1091685848:125,test,test,125,https://root.cern,https://github.com/root-project/root/pull/10302#issuecomment-1091685848,3,['test'],['test']
Testability,"Yeah, a gtest is best. No need to mark as WIP, I'm not merging without the test :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1123#issuecomment-333896948:75,test,test,75,https://root.cern,https://github.com/root-project/root/pull/1123#issuecomment-333896948,1,['test'],['test']
Testability,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```; import cppyy; ; cppyy.cppdef(""""""\; class TOIClass {; public:; template<typename T>; bool operator<(T t) { return true; }; };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1); ```. which runs fine to completion, v.s.:. ```; import ROOT; ; ROOT.gInterpreter.Declare(""""""\; class TOIClass {; public:; template<typename T>; bool operator<(T t) { return true; }; };""""""). from ROOT import TOIClass. assert (TOIClass() < 1); ```. which gives me:; ```; input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'; new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));; ~~~~~~~~~~~~~~~~ ^; input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'; ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);; ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-697743066:235,assert,assert,235,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-697743066,2,['assert'],['assert']
Testability,"Yeah, the failure about the formatting is because the code is not conform with the clang-format style of ROOT:; https://github.com/root-project/root/blob/master/.clang-format. But since RooFit never followed the style to begin with (at least for all files older than a year), we will just ignore the errors. It was decided to not do the reformatting of the whole RooFit code for now, because this would obfuscate the development history with formatting changes in every line (`git blame` would not be so useful anymore). So this PR is ready to go as it is! I'll merge it once the Jenkins tests are passing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11507#issuecomment-1271324440:588,test,tests,588,https://root.cern,https://github.com/root-project/root/pull/11507#issuecomment-1271324440,1,['test'],['tests']
Testability,"Yep true. In these extreme cases the output will explode. But then you probably want to put the string anyway in a file, or add it to your logs. Eventually, we could add a flag like `Describe(bool reducedOutput=true)` and `GetDataSetInfo(bool reducedOutput=true)`. Like for printing `pandas.DataFrame` or similar. But that can be added also in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7829#issuecomment-821079995:139,log,logs,139,https://root.cern,https://github.com/root-project/root/issues/7829#issuecomment-821079995,1,['log'],['logs']
Testability,"Yep, a clean build passed all tests. And to prove the point, I then switched back to `master` (without additional measures) and now the tests are failing there (because Clad wasn't rebuilt for changed-back headers). So everything checks out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7488#issuecomment-825431241:30,test,tests,30,https://root.cern,https://github.com/root-project/root/pull/7488#issuecomment-825431241,2,['test'],['tests']
Testability,"Yep, it's an ABI issue: On AArch64, integers with less than 32 bits (including `short`s) are promoted to 32 bits - so far, so good, everybody agrees on that. Where things start to differ is *how* to do that, Darwin expects extension whereas the generic method is ""direct"". I suppose the latter means filling with zeros in practice, so `(short)-1 = 0xffff -> 0x0000ffff = 65535`. Setting up the target triple in a different way in #7787 allows Clang's Driver logic to compute the ABI correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7090#issuecomment-814088514:458,log,logic,458,https://root.cern,https://github.com/root-project/root/issues/7090#issuecomment-814088514,1,['log'],['logic']
Testability,"Yep, let's close! The logs of old runs like this are lost anyway and are not very informative in any case. The chances of it being something weird having to do with GitHub Actions runner particulars is also non-negligible. I will put it on my own todo list to look a bit more into this at some point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15494#issuecomment-2147595700:22,log,logs,22,https://root.cern,https://github.com/root-project/root/issues/15494#issuecomment-2147595700,1,['log'],['logs']
Testability,Yep. The test is in https://github.com/root-project/roottest/pull/617,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6668#issuecomment-712843660:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/6668#issuecomment-712843660,1,['test'],['test']
Testability,"Yes @vgvassilev, it is. The three tests that failed are also failing in our integration builds. See https://github.com/cms-sw/cmssw/pull/41964 (`DataFormatsScouting` are actually obsolete tests) and https://github.com/cms-sw/cmssw/issues/42206",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13181#issuecomment-1624870413:34,test,tests,34,https://root.cern,https://github.com/root-project/root/pull/13181#issuecomment-1624870413,2,['test'],['tests']
Testability,"Yes I approved, with a small question about the test. Could you confirm it's checking for identity with the expected title string and not matching of some sort?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14288#issuecomment-1883635583:48,test,test,48,https://root.cern,https://github.com/root-project/root/pull/14288#issuecomment-1883635583,1,['test'],['test']
Testability,Yes I guess 0 should be allowed. Have you run a small test to check if it works ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3949#issuecomment-501186430:54,test,test,54,https://root.cern,https://github.com/root-project/root/pull/3949#issuecomment-501186430,1,['test'],['test']
Testability,"Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message.; > ; > ```; > Processing temp.h... ; > In file included from input_line_8:1: ; > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: ; > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: ; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' ; > static const CLID CLID_ProtoParticle = 803; ; > ^ ; > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here ; > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" ; > ^ ; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple ; > times, additional include site here ; > #include ""Event/ProtoParticle.h"" ; > ^ ; > ...; > ...SKIPPED LINES; > ...; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' ; > class ProtoParticle final : public KeyedObject<int> { ; > ^ ; > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2161206521:262,test,test,262,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2161206521,1,['test'],['test']
Testability,"Yes but IIRC the effect was in the past that if I change the CI that wasn't used for testing, it was still using the target branch's CI definition. Oh well, we seem to have a solution so I'll merge!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14146#issuecomment-1833486109:85,test,testing,85,https://root.cern,https://github.com/root-project/root/pull/14146#issuecomment-1833486109,1,['test'],['testing']
Testability,"Yes but TTreeProcessorMT is implemented in terms of TThreadExecutor for everything related to tasks. If that ever changes, and a call to EnableThreadSafety is not otherwise added, several TTreeProcessorMT tests will crash. Do you want the (redundant) EnableThreadSafety call in TTreeProcessorMT's ctor as well?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5304#issuecomment-609784958:205,test,tests,205,https://root.cern,https://github.com/root-project/root/pull/5304#issuecomment-609784958,1,['test'],['tests']
Testability,"Yes but in reality at `gDebug > 0` you get already _so much_ stuff printed out in an application that read/writes data, that I would gladly take the new per-group logging functionality over the old per-gDebug-threshold logging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6875#issuecomment-735946090:163,log,logging,163,https://root.cern,https://github.com/root-project/root/pull/6875#issuecomment-735946090,2,['log'],['logging']
Testability,Yes it seems logical as TLatex also inherits from TAttLine.; Thanks for the fix.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9211#issuecomment-956114269:13,log,logical,13,https://root.cern,https://github.com/root-project/root/pull/9211#issuecomment-956114269,1,['log'],['logical']
Testability,"Yes looks good, @mpatrascoiu ! I see you have tests - I don't think we can add much here :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9072#issuecomment-966399161:46,test,tests,46,https://root.cern,https://github.com/root-project/root/issues/9072#issuecomment-966399161,1,['test'],['tests']
Testability,Yes there is significant overlap between those test and the one I building up.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5721#issuecomment-637641120:47,test,test,47,https://root.cern,https://github.com/root-project/root/pull/5721#issuecomment-637641120,1,['test'],['test']
Testability,"Yes we should. I don't see a commit with this commit log in the branch, but `git cherry-pick` says it's already there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2123#issuecomment-396589512:53,log,log,53,https://root.cern,https://github.com/root-project/root/pull/2123#issuecomment-396589512,1,['log'],['log']
Testability,"Yes you can catch the odd ""wrong ROOT"" case, but at what price? :sweat_smile: You get that same (typically super long) path to ROOTSYS printed at every log line, and it makes the actual log much less readable. Maybe filename/line number could be moved out of the way, to the end of the log line?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7008#issuecomment-756805676:152,log,log,152,https://root.cern,https://github.com/root-project/root/issues/7008#issuecomment-756805676,3,['log'],['log']
Testability,Yes you just have to compile ROOT with `-Dtesting=ON` and you find that test under `<builddirectory>/math/vecops/test`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8903#issuecomment-907167305:72,test,test,72,https://root.cern,https://github.com/root-project/root/pull/8903#issuecomment-907167305,2,['test'],['test']
Testability,Yes! Could you also now try running clingtest as part of the regular ROOT testing procedure? I believe (with minor adjustments) it will work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-843969875:74,test,testing,74,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-843969875,1,['test'],['testing']
Testability,"Yes, I agree that we should now focus on the remaining test failures, both in Cling and ROOT. For the ""file name too long"" when building with GCC, I've posted https://github.com/root-project/root/pull/10387 (we'll have to rebase this PR afterwards and change a number of the new `.str()` calls). I also started looking into the slow JIT for RDF, and I noticed that it's completely hanging when ROOT is built with C++17. The stack trace of a stuck `./tree/dataframe/test/dataframe_interface --gtest_filter=RDataFrameInterface.GetFilterNamesFromNode` is; ```; #0 0x00007ffff697681d in __lll_lock_wait () from /lib64/libpthread.so.0; #1 0x00007ffff696fac9 in pthread_mutex_lock () from /lib64/libpthread.so.0; #2 0x00007fffefd8e953 in __gthread_mutex_lock (__mutex=0x8eb600) at /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux/bits/gthr-default.h:748; #3 std::mutex::lock (this=0x8eb600) at /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_mutex.h:103; #4 std::unique_lock<std::mutex>::lock (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_mutex.h:267; #5 std::unique_lock<std::mutex>::unique_lock (__m=..., this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_mutex.h:197; #6 llvm::orc::ExecutionSession::OL_applyQueryPhase1 (this=this@entry=0xbcb8b0, IPLS=std::unique_ptr<llvm::orc::InProgressLookupState> = {...}, Err=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2295; #7 0x00007fffefd8c8ec in llvm::orc::ExecutionSession::lookup(llvm::orc::LookupKind, std::vector<std::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags>, std::allocator<std::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags> > > const&, llvm::orc::SymbolLookupSet, llvm::orc::SymbolState, llvm::unique_function<void (llvm::Expected<llvm::DenseMap<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1097659822:55,test,test,55,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1097659822,2,['test'],['test']
Testability,"Yes, I agree this is non-trivial to fix after reading through https://github.com/root-project/root/issues/8622. But I decided to open an issue just to keep track of the problem because it affects a test with GCC 12; not sure if we can do anything for that one in particular in the test code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11562#issuecomment-1278761139:198,test,test,198,https://root.cern,https://github.com/root-project/root/issues/11562#issuecomment-1278761139,2,['test'],['test']
Testability,"Yes, I had to test myself, as we do not have MPI to test with the CI. After testing, I made a couple of minor changes before merging (to fix the configuration with CMake <= 3.9), that's why this shows as closed and not merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1699#issuecomment-370475407:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/1699#issuecomment-370475407,3,['test'],"['test', 'testing']"
Testability,"Yes, I know, but since this is quite a high level change, I don't think I will introduce it in the `TGCommandPlugin` class. You should do that in your own application. For example, you can simply copy and paste what is done in `TRint.cxx`:; ```; // Goto into raw terminal input mode; char defhist[kMAXPATHLEN];; snprintf(defhist, sizeof(defhist), ""%s/.root_hist"", gSystem->HomeDirectory());; logon = gEnv->GetValue(""Rint.History"", defhist);; // In the code we had HistorySize and HistorySave, in the rootrc and doc; // we have HistSize and HistSave. Keep the doc as it is and check; // now also for HistSize and HistSave in case the user did not use; // the History versions; int hist_size = gEnv->GetValue(""Rint.HistorySize"", 500);; if (hist_size == 500); hist_size = gEnv->GetValue(""Rint.HistSize"", 500);; int hist_save = gEnv->GetValue(""Rint.HistorySave"", 400);; if (hist_save == 400); hist_save = gEnv->GetValue(""Rint.HistSave"", 400);; const char *envHist = gSystem->Getenv(""ROOT_HIST"");; if (envHist) {; hist_size = atoi(envHist);; envHist = strchr(envHist, ':');; if (envHist); hist_save = atoi(envHist+1);; }; Gl_histsize(hist_size, hist_save);; Gl_histinit((char *)logon);; ```; You can even specify your own history file, if you don't want to use the default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7180#issuecomment-780840424:392,log,logon,392,https://root.cern,https://github.com/root-project/root/issues/7180#issuecomment-780840424,2,['log'],['logon']
Testability,"Yes, I only wanted to wait for CI to confirm the code is building fine on all platforms, including Windows. Some tests are still running, but I think those are indeed fine to skip for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12687#issuecomment-1515961937:113,test,tests,113,https://root.cern,https://github.com/root-project/root/pull/12687#issuecomment-1515961937,1,['test'],['tests']
Testability,"Yes, I suspect that will work for us, but have no way to test right now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14207#issuecomment-1852930836:57,test,test,57,https://root.cern,https://github.com/root-project/root/issues/14207#issuecomment-1852930836,1,['test'],['test']
Testability,"Yes, I was going to do that once I saw the tests were passing :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/803#issuecomment-317775549:43,test,tests,43,https://root.cern,https://github.com/root-project/root/pull/803#issuecomment-317775549,1,['test'],['tests']
Testability,"Yes, I was relying on the CI and everything passed for my pull request. I wonder how it passed, but @hageboeck tested the change locally in any case and confirmed that it fixes the problem. Now that the build has been triggered, it doesn't hurt to wait then merge in any case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12134#issuecomment-1406614354:111,test,tested,111,https://root.cern,https://github.com/root-project/root/pull/12134#issuecomment-1406614354,1,['test'],['tested']
Testability,"Yes, I will back-port to v6.20 and v6.22, is RDataFrame['s test] ready for it?; I will not back-port to v6.18 as we have not back-ported any of the GetFullName changes to it (yet?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6258#issuecomment-691121365:59,test,test,59,https://root.cern,https://github.com/root-project/root/pull/6258#issuecomment-691121365,1,['test'],['test']
Testability,"Yes, I'm waiting for the AArch64 node in our CI so we can test there, and then (after) I'd still like to ask CMS to run their tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16401#issuecomment-2379417920:58,test,test,58,https://root.cern,https://github.com/root-project/root/pull/16401#issuecomment-2379417920,2,['test'],"['test', 'tests']"
Testability,"Yes, That would help us. Note that all our test are done with root build from sources.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16523#issuecomment-2376106846:43,test,test,43,https://root.cern,https://github.com/root-project/root/issues/16523#issuecomment-2376106846,1,['test'],['test']
Testability,"Yes, and a user reported problems with array branches in friend trees, which we are currently not testing for.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1143#issuecomment-334581719:98,test,testing,98,https://root.cern,https://github.com/root-project/root/pull/1143#issuecomment-334581719,1,['test'],['testing']
Testability,"Yes, better than the ""That should fix a recent nightly failure with gcc11"" that Philippe commented on, thanks for improving it!. Compared to just including the actual diagnostic (something Philippe and I generally try to do these days, something that has proven super helpful several times), your current log:; ```; That should fix a recent nightly failure with gcc11 avoiding to require; module ""bits/ranges_base.h"" in C++20 context.; ```. does not call out; - that it's during dictionary generation; - that the modulemap requires the module feature 'cplusplus20' (your log seems to suggest that the error surfaces when compiled in C++20 mode, while this error shows up when compiling in C++14 or 17); - that the issue is also with GCC12 headers (your message seems to suggest that it's only with GCC11 headers); - the ""stack trace"", i.e. `/usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here` and then `/home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'` and then `#include ""TIsAProxy.h""`. In general we tell our users (+/- always) ""can we please see the actual diagnostic"", and for the same reasons it's super helpful to include them here. The time we discussed this is waaay larger than the time it would have taken you to update the log to what Philippe proposes, rather than updating it to something that tries to address the issues (but seemingly fails?). But it's Philippe's review, I let him comment / deal with this if you still prefer to keep your current commit log. I simply wanted to add an explanation why Philippe suggests the inclusion of the actual diagnostic (and why I found it convincing and do it ever since he propose it to me).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1429251757:305,log,log,305,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1429251757,4,['log'],['log']
Testability,"Yes, it does look like this is the cause of that issue. I will need to test further to be sure, but after this change I removed the lock from the `PartialMerge()` calls in the `TBufferMerger` and have seen no crashes so far.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/719#issuecomment-312205197:71,test,test,71,https://root.cern,https://github.com/root-project/root/pull/719#issuecomment-312205197,1,['test'],['test']
Testability,"Yes, it excludes both the header file as well as the folder. On 17 November 2016 at 13:50, Vassil Vassilev notifications@github.com; wrote:. > ## _@vgvassilev_ commented on this pull request.; > ; > In tmva/tmva/CMakeLists.txt; > https://github.com/root-mirror/root/pull/299#pullrequestreview-9017696:; > ; > > @@ -62,6 +62,7 @@ if(CUDA_FOUND); > > add_dependencies(dnn_cuda move_headers); > > else(); > > set(DNN_CUDA_LIBRARIES); > > - set(installoptions ${installoptions} OPTIONS REGEX ""Cuda"" EXCLUDE); > ; > Did you test whether that excludes both Architectures/Cuda.h and; > Architectures/Cuda?; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > https://github.com/root-mirror/root/pull/299#pullrequestreview-9017696,; > or mute the thread; > https://github.com/notifications/unsubscribe-auth/AGnOhcka0YlooHEKuDUBwnvOcgx0ctoyks5q_E18gaJpZM4K1P12; > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/299#issuecomment-261966333:519,test,test,519,https://root.cern,https://github.com/root-project/root/pull/299#issuecomment-261966333,1,['test'],['test']
Testability,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Instead we should either; * fail to configure if BLAS is missing; or ; * disable the components that require BLAS when configuring whe BLAS is missing; or; * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16720#issuecomment-2425048725:600,test,test,600,https://root.cern,https://github.com/root-project/root/issues/16720#issuecomment-2425048725,2,['test'],"['test', 'tests']"
Testability,"Yes, it seems to work (I tested it with the python code given in the PR description)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/371#issuecomment-282691555:25,test,tested,25,https://root.cern,https://github.com/root-project/root/pull/371#issuecomment-282691555,1,['test'],['tested']
Testability,"Yes, just because of the missing tests to cover the code changes of RooRealIntegral. If it's tested well enough I could even backport it to the patch release maybe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11578#issuecomment-1282326814:33,test,tests,33,https://root.cern,https://github.com/root-project/root/issues/11578#issuecomment-1282326814,2,['test'],"['tested', 'tests']"
Testability,"Yes, perhaps just for testing? It would allow to test the creation of ranges and the task processing in separate worker processes with no external scheduler (now we can do the same local runs with Spark and Dask but we need the corresponding libraries). Performance-wise still MT RDF should be the best.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8985#issuecomment-917960927:22,test,testing,22,https://root.cern,https://github.com/root-project/root/issues/8985#issuecomment-917960927,2,['test'],"['test', 'testing']"
Testability,"Yes, please do cross-check.; Someone with an active development area should try it first. It can be tested with the script attached to the JIRA ticket.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/880#issuecomment-324591864:100,test,tested,100,https://root.cern,https://github.com/root-project/root/pull/880#issuecomment-324591864,1,['test'],['tested']
Testability,"Yes, see for example the list of commits shown by `git log -S UseRWLock` and in particular 2ca647d3e7342c24603b6711edc0ed44d57baa2e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6493#issuecomment-700754961:55,log,log,55,https://root.cern,https://github.com/root-project/root/pull/6493#issuecomment-700754961,1,['log'],['log']
Testability,"Yes, sure, but the easiest way to do this is that we agree on how to proceed with:. https://github.com/AliceO2Group/AliceO2/pull/1701. I am not sure it's possible to expose the issue right now without doing a `#define private public` in the test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3428#issuecomment-463583162:241,test,test,241,https://root.cern,https://github.com/root-project/root/pull/3428#issuecomment-463583162,1,['test'],['test']
Testability,"Yes, thanks, I have opened a fixup commit. Sorry for this, I managed my commit history badly and thought I only changed something trivial after the last successful test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12257#issuecomment-1434859148:164,test,test,164,https://root.cern,https://github.com/root-project/root/pull/12257#issuecomment-1434859148,1,['test'],['test']
Testability,"Yes, that would be a lock-free stack: I have the code, are you interested to have a look? :) Some tests are still failing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3189#issuecomment-448533606:98,test,tests,98,https://root.cern,https://github.com/root-project/root/pull/3189#issuecomment-448533606,1,['test'],['tests']
Testability,"Yes, the only place that turns on (and then off) IMT in this executable is https://github.com/root-project/root/blob/941025d4e9ecb486419afe7e2be250bd02bd5169/tree/dataframe/test/dataframe_interface.cxx#L356-L364",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8318#issuecomment-852888232:173,test,test,173,https://root.cern,https://github.com/root-project/root/pull/8318#issuecomment-852888232,1,['test'],['test']
Testability,"Yes, the results of this PR are not valid. We'll have to see again tomorrow when the correct sonnet versions makes it into the CI images. In fact, one can see in the CI logs that the GNN tests didn't run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15596#issuecomment-2124828530:169,log,logs,169,https://root.cern,https://github.com/root-project/root/pull/15596#issuecomment-2124828530,2,"['log', 'test']","['logs', 'tests']"
Testability,"Yes, the test failures are unrelated. Note that we track solved issues with ""projects"", not PRs :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9790#issuecomment-1028725521:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/9790#issuecomment-1028725521,1,['test'],['test']
Testability,"Yes, there are no tests that test TTreeSQL right now with the different databases so it's hard to know. I could probably write some for sqlite and mysql (and maybe ODBC?), but I don't know if it's easy to get some hands on an Oracle database for testing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3707#issuecomment-484285093:18,test,tests,18,https://root.cern,https://github.com/root-project/root/pull/3707#issuecomment-484285093,3,['test'],"['test', 'testing', 'tests']"
Testability,"Yes, this is fixed in 6.30 - just tested on SWAN.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7952#issuecomment-1925241925:34,test,tested,34,https://root.cern,https://github.com/root-project/root/issues/7952#issuecomment-1925241925,1,['test'],['tested']
Testability,"Yes, we could enable icc, but it wouldn't test the problem you fixed. To reproduce one needs:; ```; export CC=icc; export CXX=icc; CC=gcc CXX=gcc cmake; ninja # still picks up icc for LZ4; ```. OTOH, I agree we should have an icc build as part of the PR builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/766#issuecomment-315114261:42,test,test,42,https://root.cern,https://github.com/root-project/root/pull/766#issuecomment-315114261,1,['test'],['test']
Testability,"Yes, your are right that it's good to test the schema evolution, but even though the files are small I'd prefer to not have them in the main repo. It's probably better to have this in roottest, I'll do it there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10909#issuecomment-1181866833:38,test,test,38,https://root.cern,https://github.com/root-project/root/pull/10909#issuecomment-1181866833,1,['test'],['test']
Testability,"Yes. The test (which should probably be added to rootbench):. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The result below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:; ```; threads: 1 items: 10 events: 40000000 time: 192.72 s; threads: 2 items: 10 events: 40000000 time: 211.41 s; threads: 3 items: 10 events: 40000000 time: 219.9 s; threads: 4 items: 10 events: 40000000 time: 212.033 s; threads: 5 items: 10 events: 40000000 time: 214.991 s; threads: 6 items: 10 events: 40000000 time: 220.459 s; threads: 7 items: 10 events: 40000000 time: 219.831 s; threads: 8 items: 10 events: 40000000 time: 236.328 s; threads: 9 items: 10 events: 40000000 time: 222.565 s; threads: 10 items: 10 events: 40000000 time: 224.154 s; threads: 11 items: 10 events: 40000000 time: 229.009 s; threads: 12 items: 10 events: 40000000 time: 232.501 s; threads: 13 items: 10 events: 40000000 time: 227.134 s; threads: 14 items: 10 events: 40000000 time: 225.087 s; threads: 15 items: 10 events: 40000000 time: 223.564 s; threads: 16 items: 10 events: 40000000 time: 270.977 s; threads: 16 items: 10 events: 40000000 time: 291.434 s; threads: 17 items: 10 events: 40000000 time: 298.618 s; threads: 18 items: 10 events: 40000000 time: 237.387 s; threads: 19 items: 10 events: 40000000 time: 434.656 s; threads: 20 items: 10 events: 40000000 time: 358.451 s; threads: 21 items: 10 events: 40000000 time: 364.873 s; threads: 22 items: 10 events: 40000000 time: 491.755 s; threads: 23 items: 10 events: 40000000 time: 404.095 s; threads: 24 items: 10 events: 40000000 time: 444.607 s; threads: 25 items: 10 events: 40000000 time: 577.3 s; threads: 26 items: 10 events: 40000000 time: 603.918 s; threads: 27 items: 10 events: 40000000 time: 349.925 s; threads: 28 items: 10 events: 40000000 time: 359",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6062#issuecomment-665234674:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/6062#issuecomment-665234674,1,['test'],['test']
Testability,"You are confusing 31 bit s390 with 64 bit s390x. Fedora builds packages for s390x, and I did get a bug report in bugzilla that the package build failed on this architecture, which I tracked down to the problem reported here. Up to Fedora 23 they also used to build for s390, though this does not happen any more. I also filed a bug report to you upstream about some failing tests in s390x. https://sft.its.cern.ch/jira/browse/ROOT-8703. The number of failing tests on s390x is on the same order as the number of failing tests on 32 bit arm (though the failing tests are not the same), and far fewer than the number of failing tests on ppc64 and ppc64le. So while s390 is mostly obsolete, s390x is not. Also Debian builds their packages for s390x. I would not mind if you removed support for s390 - it would make sense since llvm does not support it - but removing s390x would be unfortunate, and s390x is supported by llvm. But also s390 worked if you only used compilation and did not use the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/406#issuecomment-287817725:374,test,tests,374,https://root.cern,https://github.com/root-project/root/pull/406#issuecomment-287817725,5,['test'],['tests']
Testability,"You are right ! Sorry for this, I have never used `git log --oneline`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9307#issuecomment-978131771:55,log,log,55,https://root.cern,https://github.com/root-project/root/pull/9307#issuecomment-978131771,1,['log'],['log']
Testability,"You are right ! The difference in the test is that roofit uses TMath::Poisson(h,mu) con n in same case a real number. The fix I have put rounds the n to an integer and that is the difference. ; Now, TMath::Poisson(x,mu) with x real is not anymore a Poisson distribution, it is something else. and I hope it is when needed correctly normalized in RooFit. But it is used in the case of Asimov data set or weighted events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5477#issuecomment-620712408:38,test,test,38,https://root.cern,https://github.com/root-project/root/pull/5477#issuecomment-620712408,1,['test'],['test']
Testability,"You are right, the test should go to `roottest`. I've opened a PR!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5507#issuecomment-623358799:19,test,test,19,https://root.cern,https://github.com/root-project/root/pull/5507#issuecomment-623358799,1,['test'],['test']
Testability,"You can find the full stacktrace below. It does not start with `_PyImport_LoadDynamicModuleWithSpec`, but it's the entrypoint to `libpython.so`. [stacktrace.log](https://github.com/root-project/root/files/5501224/stacktrace.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6765#issuecomment-723055908:157,log,log,157,https://root.cern,https://github.com/root-project/root/issues/6765#issuecomment-723055908,2,['log'],['log']
Testability,"You can look for `std::function` in the git log, see whether there's anything easy to patch from there. ROOT likes to strip `std::`, which is problematic for non-HEP codes, so yes, I've pretty much completely removed that behavior from my fork of ROOT/meta. However, if memory serves, there was something worse with `std::function` and templates. I think it's this one: https://github.com/wlav/cppyy-backend/commit/98c21db9fad90902efe71d92adc7735cba471c1f. There's also this bug report, which may be related: https://github.com/root-project/root/issues/10680 . (That issue does not exist with cppyy master.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15062#issuecomment-2023127179:44,log,log,44,https://root.cern,https://github.com/root-project/root/issues/15062#issuecomment-2023127179,1,['log'],['log']
Testability,You can see what I mean at https://github.com/root-project/root/actions/workflows/test-result-comment.yml,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14613#issuecomment-1932090055:82,test,test-result-comment,82,https://root.cern,https://github.com/root-project/root/pull/14613#issuecomment-1932090055,1,['test'],['test-result-comment']
Testability,"You can use ROOT's facilities (e.g. `ROOT.Warning`). The lack of a proper logging system is a ROOT issue, which should be solved in ROOT7 at some point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488#issuecomment-480272339:74,log,logging,74,https://root.cern,https://github.com/root-project/root/pull/3488#issuecomment-480272339,1,['log'],['logging']
Testability,"You can! See the full log, and look for `docker run --rm -it registry.cern.ch/root-ci/<image>:buildready` - in this case it's `fedora37`. Following the subsequent steps should get you there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13466#issuecomment-1680818964:22,log,log,22,https://root.cern,https://github.com/root-project/root/pull/13466#issuecomment-1680818964,1,['log'],['log']
Testability,"You convinced me that the subevent-section tests should be `EXPECT_DOUBLE_EQ`. > From what I can see, this is only working by chance right now. You are right! This can easily be confirmed (even just on my x86 laptop) by changing the seed on line 66. Setting it to some other values, the `SimBinnedConstrainedTest.EventSections` fails sometimes (e.g. seed = 24) and `SimBinnedConstrainedTest.SubEventSections` as well (e.g. seed = 255). Some seeds even make multiple tests fail, e.g. 25534 fails `BinnedDatasetTest.EventSections` and `SimBinnedConstrainedTest.EventSections` and 2 makes both `SimBinnedConstrainedTest` event-splitting tests fail. I was not able to find a seed that fails the other tests, so it seems to be contained to the `*EventSections` tests. To be complete, I think we should add the explanation of why this comparison doesn't work, which is that **the calculations are**, in fact, **different**. We're comparing a single-section (""all events"") calculation to multi-section (""events section 1"" + ""section 2"" + ...). Obviously, this can give differences due to rounding from FMA or just Kahan summation which also has a small error sometimes. In other tests in the `RooAbsL` and other `RooFit::TestStatistics` suite, this doesn't typically apply. In most of the tests, we're trying to do the exact same calculation (""same"" in terms of CPU operations as well), except either in parallel or through the `TestStatistics` classes instead of the old `RooNLLVar` tree. Sometimes different ordering can change results, like the extended term you mentioned, but also the subsidiary term. Anyway, for this PR: I will suggest an explanation comment and after that it can be merged (@guitargeek agrees, we discussed it in the RooFit dev meeting just now). I will also open an issue reminding us to also apply this change to the two `EventSections` tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1550987204:43,test,tests,43,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1550987204,10,"['Test', 'test']","['TestStatistics', 'tests']"
Testability,You didn't apply the commit log suggestion... Let me just squash these two such that I get a chance to rewrite log :-),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13736#issuecomment-1740814797:28,log,log,28,https://root.cern,https://github.com/root-project/root/pull/13736#issuecomment-1740814797,2,['log'],['log']
Testability,You may need to update the roottest branch to fix the filemerger test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5639#issuecomment-630991161:65,test,test,65,https://root.cern,https://github.com/root-project/root/pull/5639#issuecomment-630991161,1,['test'],['test']
Testability,You may want to add to the commit log a synopsys of the 'triggers' in the LHCb setup (in particular the use of inline namespace which are not part of the normalized name),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5806#issuecomment-639725085:34,log,log,34,https://root.cern,https://github.com/root-project/root/pull/5806#issuecomment-639725085,1,['log'],['log']
Testability,You mean for the test running? That will probably be another PR where we have to actually use an source-code switch (e.g. a define) that enables/disables that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/944#issuecomment-327112999:17,test,test,17,https://root.cern,https://github.com/root-project/root/pull/944#issuecomment-327112999,1,['test'],['test']
Testability,You need to compile this code with the 3rd commit in the history reverted and run the tests (just like the CI does):; https://github.com/guitargeek/roofit/commits/main/. But you need a ROOT build without RooFit for that (`roofit=OFF`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15733#issuecomment-2147980268:86,test,tests,86,https://root.cern,https://github.com/root-project/root/pull/15733#issuecomment-2147980268,1,['test'],['tests']
Testability,"You probably want to test with the ""clean build"" label to make sure it actually works; incremental builds don't seem to run `cmake` configuration again (because no options changed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13512#issuecomment-1689900123:21,test,test,21,https://root.cern,https://github.com/root-project/root/pull/13512#issuecomment-1689900123,1,['test'],['test']
Testability,"You should also test with `-Druntime_cxxmodules=Off`, please.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13054#issuecomment-1600370174:16,test,test,16,https://root.cern,https://github.com/root-project/root/pull/13054#issuecomment-1600370174,1,['test'],['test']
Testability,You should be able to use http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root for the input...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11853#issuecomment-1341775953:66,test,testdata,66,https://root.cern,https://github.com/root-project/root/issues/11853#issuecomment-1341775953,1,['test'],['testdata']
Testability,"You sjhould be able to enabled/disabled MT in a single test case, by using TMVA;;gConfig::EnableMT/DisableMT; for example: . ```; TMVA::gConfig().EnableMT(0); // use default pool size; TMVA::gConfig().GetNCpu(); // e.g return 16 (default size) ; TMVA::gConfig().DisableMT(); ; TMVA::gConfig().GetNCpu(); // returns 1 . TMVA::gConfig().EnableMT(4); // create a pool with 4 threads; TMVA::gConfig().GetNCpu(); // returns 4; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3625#issuecomment-479923040:55,test,test,55,https://root.cern,https://github.com/root-project/root/pull/3625#issuecomment-479923040,1,['test'],['test']
Testability,"You're right! I misunderstood, I thought `std::rotate` rotated the whole iterable (e.g. like https://numpy.org/doc/stable/reference/generated/numpy.roll.html), but I see now it only puts the selected part in front and shoves the rest aside to make room. But then apparently there are still situations that we are not catching. I think probably sometimes there will be yet another task executed before all tasks are in the queue. This is of course always possible, because the OS can delay processes and IPC in any way it sees fit. I can up the sleep time to compensate for this so it happens less often, but it is by the nature of the algorithm unavoidable that some statistical failures will still happen (given slow enough OS'es). What we can do to make sure that the test never fails is to iteratively go through all received tasks and modify the expected order until it matches, but of course in the extreme case that every step is reordered this would then defeat the purpose of the test. A more robust approach would be to wait with taking work off the queue until all tasks have been submitted, but this is not actually desirable functionality, because that would mean workers would be doing nothing when they could already be working. Introducing such functionality just for testing purposes seems silly. So not sure how to ""fix"" this. I will at least put `std::rotate` back in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11627#issuecomment-1330419059:770,test,test,770,https://root.cern,https://github.com/root-project/root/pull/11627#issuecomment-1330419059,3,['test'],"['test', 'testing']"
Testability,Z4_compress_default() instead [-Wdeprecated-declarations] ; - [2020-08-22T08:35:29.950Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/zip/src/Bitshuffle_iochain.c:24:29: warning: unused parameter 'C' [-Wunused-parameter] ; - [2020-08-22T08:35:31.298Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/lz4/src/ZipLZ4.cxx:173:77: warning: format specifies type 'long' but the argument has type 'int64_t' (aka 'long long') [-Wformat] ; - [2020-08-22T08:43:02.132Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/tree/src/TBranch.cxx:2639:15: warning: unused variable 'leaves' [-Wunused-variable] . ### Failing tests:; - [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93611/testReport/projectroot/runtutorials/test_import_pandas/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93611/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.tree.tree.test.gtest_tree_tree_test_testTIOFeatures](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93611/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_testTIOFeatures/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_execFileMerger](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93611/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_execFileMerger/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_runtreeCloneTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93611/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_runtreeCloneTest2/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6221#issuecomment-678620876:1580,test,testReport,1580,https://root.cern,https://github.com/root-project/root/pull/6221#issuecomment-678620876,1,['test'],['testReport']
Testability,Z] /ec/build/workspace/root-pullrequests-build/root/core/lz4/src/ZipLZ4.cxx:173:77: warning: format specifies type 'long' but the argument has type 'int64_t' (aka 'long long') [-Wformat] ; - [2020-08-22T08:38:35.230Z] /ec/build/workspace/root-pullrequests-build/root/tree/tree/src/TBranch.cxx:2639:15: warning: unused variable 'leaves' [-Wunused-variable] . ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93610/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.tree.tree.test.gtest_tree_tree_test_testTIOFeatures](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93610/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_testTIOFeatures/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_execFileMerger](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93610/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_execFileMerger/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TestCache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93610/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_TestCache/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_runtreeCloneTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93610/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_runtreeCloneTest2/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93610/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_mergeWithDir](https://lcgapp-services.cern.ch/root-jenkins/job/root-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6221#issuecomment-678618866:1818,test,testReport,1818,https://root.cern,https://github.com/root-project/root/pull/6221#issuecomment-678618866,1,['test'],['testReport']
Testability,Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T16:40:05.553Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T16:40:05.553Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 286 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162989/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162989/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162989/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162989/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162989/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11950#issuecomment-1361687227:2737,test,testReport,2737,https://root.cern,https://github.com/root-project/root/pull/11950#issuecomment-1361687227,1,['test'],['testReport']
Testability,"Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\test\TClingMethodInfoTests.cxx(621,53): error C2039: 'unordered_map': is not a member of 'std' [C:\build\workspace\root-pullrequests-build\build\core\metacling\test\TClingTest.vcxproj] ; - [2021-05-07T18:26:09.619Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\test\TClingMethodInfoTests.cxx(621,66): error C2061: syntax error: identifier 'unordered_map' [C:\build\workspace\root-pullrequests-build\build\core\metacling\test\TClingTest.vcxproj] ; - [2021-05-07T18:26:09.619Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\test\TClingMethodInfoTests.cxx(630,27): error C2065: 'funcPar0': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\core\metacling\test\TClingTest.vcxproj] ; - [2021-05-07T18:26:09.619Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\test\TClingMethodInfoTests.cxx(631,1): error C3536: 'iExpected': cannot be used before it is initialized [C:\build\workspace\root-pullrequests-build\build\core\metacling\test\TClingTest.vcxproj] ; - [2021-05-07T18:26:09.619Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\test\TClingMethodInfoTests.cxx(631,27): error C2065: 'funcPar0': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\core\metacling\test\TClingTest.vcxproj] ; - [2021-05-07T18:26:09.619Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\test\TClingMethodInfoTests.cxx(633,1): error C2660: 'testing::internal::EqHelper::Compare': function does not take 3 arguments [C:\build\workspace\root-pullrequests-build\build\core\metacling\test\TClingTest.vcxproj] ; - [2021-05-07T18:26:09.619Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\test\TClingMethodInfoTests.cxx(633,10): error C2512: 'testing::AssertionResult': no appropriate default constructor available [C:\build\workspace\root-pullrequests-build\build\core\metacling\test\TClingTest.vcxproj] ; - [2021-05-07T18:2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8124#issuecomment-834674899:1309,test,test,1309,https://root.cern,https://github.com/root-project/root/pull/8124#issuecomment-834674899,1,['test'],['test']
Testability,Z] include/ROOT/TBufferMerger.hxx:222:32: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-01-05T13:50:48.080Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:180:4: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-01-05T13:50:48.080Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:883:4: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] . And 307 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/132928/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/132928/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/132928/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/132928/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/132928/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/132928/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9479#issuecomment-1005738406:2769,test,testReport,2769,https://root.cern,https://github.com/root-project/root/pull/9479#issuecomment-1005738406,4,['test'],['testReport']
Testability,Z] math/mathcore/G__MathCore.cxx:458:193: warning: integer constant is so large that it is unsigned ; - [2020-10-01T08:50:00.879Z] math/mathcore/G__MathCore.cxx:461:80: warning: integer constant is so large that it is unsigned . And 81 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_math_Bessel](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97600/testReport/projectroot/runtutorials/tutorial_math_Bessel/); - [projectroot.runtutorials.tutorial_math_Legendre](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97600/testReport/projectroot/runtutorials/tutorial_math_Legendre/); - [projectroot.runtutorials.tutorial_math_LegendreAssoc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97600/testReport/projectroot/runtutorials/tutorial_math_LegendreAssoc/); - [projectroot.runtutorials.tutorial_matrix_invertMatrix](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97600/testReport/projectroot/runtutorials/tutorial_matrix_invertMatrix/); - [projectroot.runtutorials.tutorial_v7_ntuple_ntpl001_staff](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97600/testReport/projectroot/runtutorials/tutorial_v7_ntuple_ntpl001_staff/); - [projectroot.runtutorials.tutorial_v7_ntuple_ntpl002_vector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97600/testReport/projectroot/runtutorials/tutorial_v7_ntuple_ntpl002_vector/); - [projectroot.runtutorials.tutorial_v7_ntuple_ntpl003_lhcbOpenData](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97600/testReport/projectroot/runtutorials/tutorial_v7_ntuple_ntpl003_lhcbOpenData/); - [projectroot.runtutorials.tutorial_v7_ntuple_ntpl004_dimuon](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97600/testReport/projectroot/runtutorials/tutorial_v7_ntuple_ntpl004_dimuon/); - [projectroot.runtutorials.tutorial_v7_ntuple_ntpl005_introspection](https://l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-702011402:2520,test,testReport,2520,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-702011402,1,['test'],['testReport']
Testability,"[-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411701514:2785,test,testReport,2785,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411701514,1,['test'],['testReport']
Testability,[-Wdeprecated-non-prototype] ; - [2023-05-05T13:20:18.452Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype] . ### Failing tests:; - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174044/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTF1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174044/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_testTF1/); - [projectroot.io.io.test.gtest_io_io_test_RRawFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174044/testReport/projectroot.io.io/test/gtest_io_io_test_RRawFile/); - [projectroot.io.io.test.gtest_io_io_test_TFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174044/testReport/projectroot.io.io/test/gtest_io_io_test_TFile/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174044/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174044/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.math.mathmore.test.gtest_math_mathmore_test_stressMathMoreUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174044/testReport/projectroot.math.mathmore/test/gtest_math_mathmore_test_stressMathMoreUnit/); - [projectroot.test.test_stressvector_interpreted](https://lcgapp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12238#issuecomment-1536314226:1839,test,test,1839,https://root.cern,https://github.com/root-project/root/pull/12238#issuecomment-1536314226,1,['test'],['test']
Testability,[-Wignored-qualifiers] ; - [2020-11-03T11:48:28.941Z] math/mathcore/G__MathCore.cxx:455:116: warning: integer constant is so large that it is unsigned ; - [2020-11-03T11:48:28.941Z] math/mathcore/G__MathCore.cxx:455:186: warning: integer constant is so large that it is unsigned ; - [2020-11-03T11:48:28.941Z] math/mathcore/G__MathCore.cxx:457:61: warning: integer constant is so large that it is unsigned ; - [2020-11-03T11:48:28.941Z] math/mathcore/G__MathCore.cxx:457:131: warning: integer constant is so large that it is unsigned ; - [2020-11-03T11:48:28.941Z] math/mathcore/G__MathCore.cxx:458:123: warning: integer constant is so large that it is unsigned ; - [2020-11-03T11:48:28.941Z] math/mathcore/G__MathCore.cxx:458:193: warning: integer constant is so large that it is unsigned ; - [2020-11-03T11:48:28.941Z] math/mathcore/G__MathCore.cxx:461:80: warning: integer constant is so large that it is unsigned . And 81 more. ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100847/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_root_module](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100847/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_root_module/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100847/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_array_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100847/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ar,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-721087051:1845,test,test,1845,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-721087051,1,['test'],['test']
Testability,[-Wimplicitly-unsigned-literal] . And 84 more. ### Failing tests:; - [projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execCheckNaming](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100769/testReport/projectroot.roottest.root.meta/naming/roottest_root_meta_naming_execCheckNaming/); - [projectroot.roottest.root.meta.roottest_root_meta_assertVarOffset_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100769/testReport/projectroot.roottest.root/meta/roottest_root_meta_assertVarOffset_auto/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100769/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.cling.dict.ROOT-9112.roottest_cling_dict_ROOT_9112_ROOT9112](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100769/testReport/projectroot.roottest.cling.dict/ROOT-9112/roottest_cling_dict_ROOT_9112_ROOT9112/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100769/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.treeformula.evolution.roottest_root_treeformula_evolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100769/testReport/projectroot.roottest.root.treeformula/evolution/roottest_root_treeformula_evolution_make/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100769/testReport/projectroot.roottest.root/meta/roottest_root_meta_runtemplateAutoload_auto/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoloadInclude_auto](https://lcgapp-services.cern.ch/root-jenkins/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-720442053:3396,test,testReport,3396,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-720442053,1,['test'],['testReport']
Testability,"[-Wsized-deallocation] ; - ../root/core/newdelete/src/NewDelete.cxx:367:6: warning: the program should also define ‘void operator delete [](void*, std::size_t)’ [-Wsized-deallocation] . ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37813/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37813/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.tmva.tmva.test.DNN.CNN.TMVA_DNN_CNN_RotWeights](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37813/testReport/projectroot.tmva.tmva.test.DNN/CNN/TMVA_DNN_CNN_RotWeights/); - [projectroot.tmva.tmva.test.DNN.CNN.TMVA_DNN_CNN_Im2Col_CPU](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37813/testReport/projectroot.tmva.tmva.test.DNN/CNN/TMVA_DNN_CNN_Im2Col_CPU/); - [projectroot.tmva.tmva.test.DNN.CNN.TMVA_DNN_CNN_PoolingLayer_CPU](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37813/testReport/projectroot.tmva.tmva.test.DNN/CNN/TMVA_DNN_CNN_PoolingLayer_CPU/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_baseClass_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37813/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_baseClass_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37813/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v2/); - [projectroot.roottest.root.multicore.roottest_root_multicore_ttree_read_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37813/testReport/projectroot.roottest.root/multicor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2495#issuecomment-414955482:1602,test,testReport,1602,https://root.cern,https://github.com/root-project/root/pull/2495#issuecomment-414955482,1,['test'],['testReport']
Testability,[-Wunused-function] . ### Failing tests:; - [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/113520/testReport/projectroot/test/test_stressIOPlugins_xroot/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simple_default_compr_level9_datageneration](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/113520/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_default_compr_level9_datageneration/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simple_default_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/113520/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_default_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simple_lz4_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/113520/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplex2_default_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/113520/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplex2_default_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simple_lzma_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/113520/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lzma_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplek_default_compr_deflevel](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/113520/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplek_default_compr_deflevel/); - [pro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7766#issuecomment-816299513:1442,test,testReport,1442,https://root.cern,https://github.com/root-project/root/pull/7766#issuecomment-816299513,1,['test'],['testReport']
Testability,[-Wunused-function] ; - [2022-09-13T14:16:55.905Z] /usr/include/python3.10/numpy/__multiarray_api.h:1464:1: warning: ‘int _import_array()’ defined but not used [-Wunused-function] ; - [2022-09-13T14:17:01.367Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Shape_FromONNX.hxx:20:35: warning: unused parameter ‘tensor_X’ [-Wunused-parameter] . ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154226/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.tmva.sofie.test.gtest_tmva_sofie_test_TestCustomModelsFromONNX](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154226/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestCustomModelsFromONNX/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154226/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_aclicDataMemberSelection](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154226/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_aclicDataMemberSelection/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154226/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runaliceesd](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154226/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runaliceesd/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11065#issuecomment-1245504276:1970,test,testReport,1970,https://root.cern,https://github.com/root-project/root/pull/11065#issuecomment-1245504276,4,['test'],['testReport']
Testability,[-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:304:28: warning: unused parameter ‘ptr’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:304:50: warning: unused parameter ‘al’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:344:11: warning: ‘operator new’ must not return NULL unless it is declared ‘throw()’ (or -fcheck-new is in effect) . And 11 more. ### Failing tests:; - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34163/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34163/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34163/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.cling.dict.ROOT-9185.roottest_cling_dict_ROOT_9185_ROOT9185](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34163/testReport/projectroot.roottest.cling.dict/ROOT-9185/roottest_cling_dict_ROOT_9185_ROOT9185/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34163/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34163/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34163/testReport/projectroot.roottest.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851#issuecomment-408960510:1921,test,testReport,1921,https://root.cern,https://github.com/root-project/root/pull/1851#issuecomment-408960510,1,['test'],['testReport']
Testability,[-Wunused-parameter] ; - [2022-11-24T15:59:35.532Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsReal.h:491:49: warning: unused parameter ‘globalScope’ [-Wunused-parameter] ; - [2022-11-24T15:59:35.532Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsReal.h:488:51: warning: unused parameter ‘globalScope’ [-Wunused-parameter] ; - [2022-11-24T15:59:35.532Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsReal.h:491:49: warning: unused parameter ‘globalScope’ [-Wunused-parameter] ; - [2022-11-24T15:59:35.532Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsReal.h:488:51: warning: unused parameter ‘globalScope’ [-Wunused-parameter] ; - [2022-11-24T15:59:35.532Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsReal.h:491:49: warning: unused parameter ‘globalScope’ [-Wunused-parameter] . And 1336 more. ### Failing tests:; - [projectroot.test.test_stressroofit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159829/testReport/projectroot/test/test_stressroofit/); - [projectroot.test.test_stressroofit_batchmode_cpu](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159829/testReport/projectroot/test/test_stressroofit_batchmode_cpu/); - [projectroot.test.test_stressroofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159829/testReport/projectroot/test/test_stressroofit_interpreted/); - [projectroot.roofit.histfactory.test.gtest_roofit_histfactory_test_testHistFactory](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159829/testReport/projectroot.roofit.histfactory/test/gtest_roofit_histfactory_test_testHistFactory/); - [projectroot.roottest.root.roofitstats.gtesttest_root_roofitstats_loadOldWorkspace](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159829/testReport/pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11773#issuecomment-1326649189:2182,test,tests,2182,https://root.cern,https://github.com/root-project/root/pull/11773#issuecomment-1326649189,1,['test'],['tests']
Testability,[-Wunused-parameter] ; - [2023-02-07T16:12:38.961Z] tmva/sofie/test/Mul_FromONNX.hxx:15:21: warning: unused parameter ‘filename’ [-Wunused-parameter] ; - [2023-02-07T16:12:38.961Z] tmva/sofie/test/Div_FromONNX.hxx:15:21: warning: unused parameter ‘filename’ [-Wunused-parameter] ; - [2023-02-07T16:12:38.961Z] tmva/sofie/test/Cast_FromONNX.hxx:15:21: warning: unused parameter ‘filename’ [-Wunused-parameter] ; - [2023-02-07T16:12:38.961Z] tmva/sofie/test/ReduceMean_FromONNX.hxx:15:21: warning: unused parameter ‘filename’ [-Wunused-parameter] ; - [2023-02-07T16:12:38.961Z] tmva/sofie/test/ReduceProd_FromONNX.hxx:15:21: warning: unused parameter ‘filename’ [-Wunused-parameter] ; - [2023-02-07T16:12:38.961Z] tmva/sofie/test/Shape_FromONNX.hxx:15:21: warning: unused parameter ‘filename’ [-Wunused-parameter] ; - [2023-02-07T16:12:38.961Z] tmva/sofie/test/LinearWithLeakyRelu_FromONNX.hxx:15:21: warning: unused parameter ‘filename’ [-Wunused-parameter] ; - [2023-02-07T16:12:38.961Z] tmva/sofie/test/Tanh_FromONNX.hxx:16:21: warning: unused parameter ‘filename’ [-Wunused-parameter] . And 38 more. ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_callable_generator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167350/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_callable_generator/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_friendinfo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167350/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167350/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208#issuecomment-1421081238:1497,test,test,1497,https://root.cern,https://github.com/root-project/root/pull/11208#issuecomment-1421081238,1,['test'],['test']
Testability,"[1] .x crash.cc . *** Break *** segmentation violation; etc.... --; Michael Schmelling, MPI for Nuclear Physics; Phone:+49-6221-516-511 Fax:+49-6221-516-603. > On 10. Feb 2022, at 11:34, Vincenzo Eduardo Padulano ***@***.***> wrote:; > ; > ; > Four our reference, found the issue in ROOT 6.22.06 on lxplus with a debug build; > ; > ***@***.*** ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-dbg/setup.sh; > ***@***.*** ~]$root --version; > ROOT Version: 6.22/06; > Built for linuxx8664gcc on Nov 27 2020, 15:14:08; > From ***@***.***; > ***@***.*** ~]$cat crash.cc; > #include <stdio.h>; > ; > template <typename T> auto square(T x) {; > auto crash = [](double x) {return x;};; > return x*x;; > }; > ; > void crash(); > {; > printf(""%d\n"",square(2));; > }; > ***@***.*** ~]$root; > ------------------------------------------------------------------; > | Welcome to ROOT 6.22/06 https://root.cern |; > | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; > | Built for linuxx8664gcc on Nov 27 2020, 15:14:08 |; > | From ***@***.*** |; > | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; > ------------------------------------------------------------------; > ; > root [0] .x crash.cc; > 4; > root [1] .x crash.cc; > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1106: clang::CXXMethodDecl* clang::CXXRecordDecl::getLambdaCallOperator() const: Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed.; > ; > We are probably missing some backport, to be decided if it is needed.; > @michael-mpik if possible please upgrade to the latest ROOT version and let us know if the problem persists. Thanks again for your report 😄; > ; > —; > Reply to this email directly, view it on GitHub, or unsubscribe.; > Triage notifications on the go with GitHub Mobile for iOS or Android. ; > You are receiving this because you were mentioned.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9850#issuecomment-1034890520:1721,Assert,Assertion,1721,https://root.cern,https://github.com/root-project/root/issues/9850#issuecomment-1034890520,1,['Assert'],['Assertion']
Testability,[2020-05-19T14:15:48.373Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_GetNSlots_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;int&gt;::fgMaxSlots' ; - [2020-05-19T14:15:48.373Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_CreateAndDestroy_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T14:15:48.373Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_SetAtSlot_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T14:15:48.373Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_Get_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T14:15:48.373Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_GetAtSlot_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T14:15:48.373Z] collect2: error: ld returned 1 exit status ; - [2020-05-19T14:15:48.373Z] FAILED: core/thread/test/corethreadtestUnit ; - [2020-05-19T14:15:48.373Z] core/thread/test/CMakeFiles/corethreadtestUnit.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_GetNSlots_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;int&gt;::fgMaxSlots' ; - [2020-05-19T14:15:48.373Z] core/thread/test/CMakeFiles/corethreadtestUnit.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_CreateAndDestroy_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' . A,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5655#issuecomment-630848356:1443,Test,TestBody,1443,https://root.cern,https://github.com/root-project/root/pull/5655#issuecomment-630848356,1,['Test'],['TestBody']
Testability,[2020-05-19T15:20:14.038Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_GetNSlots_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;int&gt;::fgMaxSlots' ; - [2020-05-19T15:20:14.038Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_CreateAndDestroy_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T15:20:14.038Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_SetAtSlot_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T15:20:14.038Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_Get_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T15:20:14.038Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_GetAtSlot_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T15:20:14.038Z] collect2: error: ld returned 1 exit status ; - [2020-05-19T15:20:14.038Z] FAILED: core/thread/test/corethreadtestUnit ; - [2020-05-19T15:20:14.039Z] core/thread/test/CMakeFiles/corethreadtestUnit.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_GetNSlots_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;int&gt;::fgMaxSlots' ; - [2020-05-19T15:20:14.039Z] core/thread/test/CMakeFiles/corethreadtestUnit.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_CreateAndDestroy_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' . A,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5653#issuecomment-630892693:1443,Test,TestBody,1443,https://root.cern,https://github.com/root-project/root/pull/5653#issuecomment-630892693,1,['Test'],['TestBody']
Testability,[2020-05-19T16:02:03.499Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_GetNSlots_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;int&gt;::fgMaxSlots' ; - [2020-05-19T16:02:03.499Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_CreateAndDestroy_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T16:02:03.499Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_SetAtSlot_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T16:02:03.499Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_Get_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T16:02:03.499Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_GetAtSlot_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T16:02:03.499Z] collect2: error: ld returned 1 exit status ; - [2020-05-19T16:02:03.499Z] FAILED: core/thread/test/corethreadtestUnit ; - [2020-05-19T16:02:03.499Z] core/thread/test/CMakeFiles/corethreadtestUnit.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_GetNSlots_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;int&gt;::fgMaxSlots' ; - [2020-05-19T16:02:03.499Z] core/thread/test/CMakeFiles/corethreadtestUnit.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_CreateAndDestroy_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' . A,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5651#issuecomment-630917627:1443,Test,TestBody,1443,https://root.cern,https://github.com/root-project/root/pull/5651#issuecomment-630917627,1,['Test'],['TestBody']
Testability,[2020-09-01T11:20:42.381Z] include/Vc/scalar/../common/../sse/../common/bitscanintrinsics.h:44:13: warning: '_bit_scan_reverse' macro redefined [-Wmacro-redefined] ; - [2020-09-01T11:20:42.381Z] include/Vc/scalar/../common/../sse/../common/bitscanintrinsics.h:37:13: warning: '_bit_scan_forward' macro redefined [-Wmacro-redefined] ; - [2020-09-01T11:20:42.381Z] include/Vc/scalar/../common/../sse/../common/bitscanintrinsics.h:44:13: warning: '_bit_scan_reverse' macro redefined [-Wmacro-redefined] ; - [2020-09-01T11:20:42.382Z] include/Vc/scalar/../common/../sse/../common/bitscanintrinsics.h:37:13: warning: '_bit_scan_forward' macro redefined [-Wmacro-redefined] ; - [2020-09-01T11:20:42.382Z] include/Vc/scalar/../common/../sse/../common/bitscanintrinsics.h:44:13: warning: '_bit_scan_reverse' macro redefined [-Wmacro-redefined] . And 552 more. ### Failing tests:; - [projectroot.core.meta.test.gtest_core_meta_test_testTClass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94408/testReport/projectroot.core.meta/test/gtest_core_meta_test_testTClass/); - [projectroot.core.metacling.test.gtest_core_metacling_test_coremetaclingtestUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94408/testReport/projectroot.core.metacling/test/gtest_core_metacling_test_coremetaclingtestUnit/); - [projectroot.roottest.scripts.roottest_scripts_utils](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94408/testReport/projectroot.roottest/scripts/roottest_scripts_utils/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94408/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.const.roottest_cling_const_constCharTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94408/testReport/projectroot.roottest.cling/const/roottest_cling_const_constCharTest/); - [proje,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6286#issuecomment-684788158:2270,test,testReport,2270,https://root.cern,https://github.com/root-project/root/pull/6286#issuecomment-684788158,1,['test'],['testReport']
Testability,[2020-10-15T17:37:51.095Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooVectorDataStore.cxx:1441:12: warning: variable ‘result’ set but not used [-Wunused-but-set-variable] ; - [2020-10-15T17:38:01.970Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testNumericIntAndRooRealBinding.cxx:52:42: warning: declaration of ‘b’ shadows a previous local [-Wshadow] ; - [2020-10-15T17:38:01.970Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testNumericIntAndRooRealBinding.cxx:52:42: warning: declaration of ‘a’ shadows a previous local [-Wshadow] ; - [2020-10-15T17:38:01.970Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testNumericIntAndRooRealBinding.cxx:115:62: warning: declaration of ‘d’ shadows a previous local [-Wshadow] ; - [2020-10-15T17:38:01.970Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testNumericIntAndRooRealBinding.cxx:115:62: warning: declaration of ‘c’ shadows a previous local [-Wshadow] ; - [2020-10-15T17:38:01.970Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testNumericIntAndRooRealBinding.cxx:115:62: warning: declaration of ‘b’ shadows a previous local [-Wshadow] ; - [2020-10-15T17:38:01.970Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testNumericIntAndRooRealBinding.cxx:115:62: warning: declaration of ‘a’ shadows a previous local [-Wshadow] ; - [2020-10-15T17:38:01.971Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testNumericIntAndRooRealBinding.cxx:180:56: warning: declaration of ‘x’ shadows a previous local [-Wshadow] ; - [2020-10-15T17:38:01.971Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testNumericIntAndRooRealBinding.cxx:270:24: warning: declaration of ‘a’ shadows a previous local [-Wshadow] . And 10 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632#issuecomment-709488157:1680,test,test,1680,https://root.cern,https://github.com/root-project/root/pull/6632#issuecomment-709488157,8,['test'],"['test', 'testNumericIntAndRooRealBinding']"
Testability,[2020-10-15T17:53:24.083Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooVectorDataStore.cxx:1441:12: warning: variable ‘result’ set but not used [-Wunused-but-set-variable] ; - [2020-10-15T17:53:57.340Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testNumericIntAndRooRealBinding.cxx:52:42: warning: declaration of ‘b’ shadows a previous local [-Wshadow] ; - [2020-10-15T17:53:57.340Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testNumericIntAndRooRealBinding.cxx:52:42: warning: declaration of ‘a’ shadows a previous local [-Wshadow] ; - [2020-10-15T17:53:57.340Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testNumericIntAndRooRealBinding.cxx:115:62: warning: declaration of ‘d’ shadows a previous local [-Wshadow] ; - [2020-10-15T17:53:57.340Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testNumericIntAndRooRealBinding.cxx:115:62: warning: declaration of ‘c’ shadows a previous local [-Wshadow] ; - [2020-10-15T17:53:57.340Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testNumericIntAndRooRealBinding.cxx:115:62: warning: declaration of ‘b’ shadows a previous local [-Wshadow] ; - [2020-10-15T17:53:57.340Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testNumericIntAndRooRealBinding.cxx:115:62: warning: declaration of ‘a’ shadows a previous local [-Wshadow] ; - [2020-10-15T17:53:57.340Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testNumericIntAndRooRealBinding.cxx:180:56: warning: declaration of ‘x’ shadows a previous local [-Wshadow] ; - [2020-10-15T17:53:57.340Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testNumericIntAndRooRealBinding.cxx:270:24: warning: declaration of ‘a’ shadows a previous local [-Wshadow] . And 10 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632#issuecomment-709503998:1671,test,test,1671,https://root.cern,https://github.com/root-project/root/pull/6632#issuecomment-709503998,8,['test'],"['test', 'testNumericIntAndRooRealBinding']"
Testability,[2020-11-03T11:48:28.941Z] math/mathcore/G__MathCore.cxx:461:80: warning: integer constant is so large that it is unsigned . And 81 more. ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100847/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_root_module](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100847/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_root_module/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100847/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_array_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100847/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_array_interface/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_contains](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100847/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_contains/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_comparisonops](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100847/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_comparisonops/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tclass_dynamiccast](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100847/testReport/projectroot.bindings.pyroot.python,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-721087051:2639,test,test,2639,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-721087051,1,['test'],['test']
Testability,[2020-11-03T19:10:52.428Z] math/mathcore/G__MathCore.cxx:457:127: warning: integer constant is so large that it is unsigned ; - [2020-11-03T19:10:52.428Z] math/mathcore/G__MathCore.cxx:458:119: warning: integer constant is so large that it is unsigned ; - [2020-11-03T19:10:52.428Z] math/mathcore/G__MathCore.cxx:458:189: warning: integer constant is so large that it is unsigned ; - [2020-11-03T19:10:52.428Z] math/mathcore/G__MathCore.cxx:461:76: warning: integer constant is so large that it is unsigned . And 81 more. ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100901/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.dict.ROOT-9112.roottest_cling_dict_ROOT_9112_ROOT9112](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100901/testReport/projectroot.roottest.cling.dict/ROOT-9112/roottest_cling_dict_ROOT_9112_ROOT9112/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100901/testReport/projectroot.roottest.root/meta/roottest_root_meta_runtemplateAutoload_auto/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoloadInclude_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100901/testReport/projectroot.roottest.root/meta/roottest_root_meta_runtemplateAutoloadInclude_auto/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100901/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.treeformula.evolution.roottest_root_treeformula_evolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100901/testReport/projectroot.roottest.root.treeformula/evolution/roottest_root_treeformula_evolution_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-721351926:2458,test,testReport,2458,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-721351926,4,['test'],['testReport']
Testability,[2021-03-04T09:29:16.323Z] XROOTD-prefix/include/xrootd/XrdCl/XrdClOptional.hh:58:29: warning: unused parameter 'n' [-Wunused-parameter] . ### Failing tests:; - [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108799/testReport/projectroot/test/test_stressIOPlugins_xroot/); - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108799/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/); - [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108799/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/); - [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108799/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/); - [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108799/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/); - [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108799/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/); - [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108799/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis_py/); - [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108799/testReport/projectroot/runtutorials/tutorial_dataframe_df1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7335#issuecomment-790500035:1237,test,testReport,1237,https://root.cern,https://github.com/root-project/root/pull/7335#issuecomment-790500035,1,['test'],['testReport']
Testability,"[2021-03-19T21:05:34.896Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] ; - [2021-03-19T21:05:36.548Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsTestStatistic.h:63:14: warning: class 'Configuration' was previously declared as a struct; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags] . And 36 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_roostats_rs302_JeffreysPriorDemo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111500/testReport/projectroot/runtutorials/tutorial_roostats_rs302_JeffreysPriorDemo/); - [projectroot.test.test_stressroofit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111500/testReport/projectroot/test/test_stressroofit/); - [projectroot.test.test_stressroostats](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111500/testReport/projectroot/test/test_stressroostats/); - [projectroot.test.test_stressroofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111500/testReport/projectroot/test/test_stressroofit_interpreted/); - [projectroot.test.test_stressroostats_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111500/testReport/projectroot/test/test_stressroostats_interpreted/); - [projectroot.test.test_stressroostats_minuit2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111500/testReport/projectroot/test/test_stressroostats_minuit2/); - [projectroot.roottest.root.roofitstats.vectorisedPDFs.gtesttest_root_roofitstats_vectorisedPDFs_testAddPdf](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111500/testReport/projectro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616#issuecomment-803155706:3515,test,testReport,3515,https://root.cern,https://github.com/root-project/root/pull/7616#issuecomment-803155706,2,['test'],"['test', 'testReport']"
Testability,[2021-09-07T15:04:00.694Z] builtins/xrootd/XROOTD-prefix/include/xrootd/XrdCl/XrdClOptional.hh:58:29: warning: unused parameter 'n' [-Wunused-parameter] . ### Failing tests:; - [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/125553/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/); - [projectroot.runtutorials.tutorial_multicore_mp001_fillHistos](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/125553/testReport/projectroot/runtutorials/tutorial_multicore_mp001_fillHistos/); - [projectroot.runtutorials.tutorial_multicore_mtbb001_fillHistos](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/125553/testReport/projectroot/runtutorials/tutorial_multicore_mtbb001_fillHistos/); - [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/125553/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/); - [projectroot.runtutorials.tutorial_dataframe_df033_Describe_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/125553/testReport/projectroot/runtutorials/tutorial_dataframe_df033_Describe_py/); - [projectroot.runtutorials.tutorial_rcanvas_df104_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/125553/testReport/projectroot/runtutorials/tutorial_rcanvas_df104_py/); - [projectroot.runtutorials.tutorial_rcanvas_df105_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/125553/testReport/projectroot/runtutorials/tutorial_rcanvas_df105_py/); - [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/125553/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/); - [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https:/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7335#issuecomment-914423168:1237,test,testReport,1237,https://root.cern,https://github.com/root-project/root/pull/7335#issuecomment-914423168,1,['test'],['testReport']
Testability,[2021-09-08T10:25:03.176Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:100:35: error: ‘setprecision’ is not a member of ‘std’ . ### Warnings:; - [2021-09-08T10:24:58.081Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:41:100: warning: declaration of ‘calculation_is_clean’ shadows a member of ‘RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-09-08T10:24:58.081Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:41:100: warning: declaration of ‘likelihood’ shadows a member of ‘RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-09-08T10:24:58.338Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T10:24:58.338Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T10:24:58.338Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:84:109: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T10:24:58.338Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:84:109: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T10:24:58.339Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:101:35: warning: declaration of ‘N_components’ shadows a member of ‘,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-915114422:1457,Test,TestStatistics,1457,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-915114422,1,['Test'],['TestStatistics']
Testability,[2021-09-08T14:39:53.173Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:100:35: error: ‘setprecision’ is not a member of ‘std’ . ### Warnings:; - [2021-09-08T14:39:41.124Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:41:100: warning: declaration of ‘calculation_is_clean’ shadows a member of ‘RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-09-08T14:39:41.124Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:41:100: warning: declaration of ‘likelihood’ shadows a member of ‘RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-09-08T14:39:50.434Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T14:39:50.434Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T14:39:50.434Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:84:109: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T14:39:50.434Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:84:109: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-08T14:39:50.435Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:101:35: warning: declaration of ‘N_components’ shadows a member of ‘,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-915298697:1457,Test,TestStatistics,1457,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-915298697,1,['Test'],['TestStatistics']
Testability,[2021-09-16T15:20:04.726Z] builtins/xrootd/XROOTD-prefix/include/xrootd/XrdCl/XrdClOptional.hh:58:29: warning: unused parameter 'n' [-Wunused-parameter] . ### Failing tests:; - [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126154/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/); - [projectroot.runtutorials.tutorial_multicore_mp001_fillHistos](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126154/testReport/projectroot/runtutorials/tutorial_multicore_mp001_fillHistos/); - [projectroot.runtutorials.tutorial_multicore_mtbb001_fillHistos](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126154/testReport/projectroot/runtutorials/tutorial_multicore_mtbb001_fillHistos/); - [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126154/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/); - [projectroot.runtutorials.tutorial_dataframe_df033_Describe_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126154/testReport/projectroot/runtutorials/tutorial_dataframe_df033_Describe_py/); - [projectroot.runtutorials.tutorial_rcanvas_df104_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126154/testReport/projectroot/runtutorials/tutorial_rcanvas_df104_py/); - [projectroot.runtutorials.tutorial_rcanvas_df105_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126154/testReport/projectroot/runtutorials/tutorial_rcanvas_df105_py/); - [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126154/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/); - [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https:/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7335#issuecomment-921035392:1237,test,testReport,1237,https://root.cern,https://github.com/root-project/root/pull/7335#issuecomment-921035392,1,['test'],['testReport']
Testability,[2021-09-17T11:47:51.560Z] builtins/xrootd/XROOTD-prefix/include/xrootd/XrdCl/XrdClOptional.hh:58:29: warning: unused parameter 'n' [-Wunused-parameter] . ### Failing tests:; - [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126244/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/); - [projectroot.runtutorials.tutorial_multicore_mp001_fillHistos](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126244/testReport/projectroot/runtutorials/tutorial_multicore_mp001_fillHistos/); - [projectroot.runtutorials.tutorial_multicore_mtbb001_fillHistos](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126244/testReport/projectroot/runtutorials/tutorial_multicore_mtbb001_fillHistos/); - [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126244/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/); - [projectroot.runtutorials.tutorial_dataframe_df033_Describe_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126244/testReport/projectroot/runtutorials/tutorial_dataframe_df033_Describe_py/); - [projectroot.runtutorials.tutorial_rcanvas_df104_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126244/testReport/projectroot/runtutorials/tutorial_rcanvas_df104_py/); - [projectroot.runtutorials.tutorial_rcanvas_df105_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126244/testReport/projectroot/runtutorials/tutorial_rcanvas_df105_py/); - [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126244/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/); - [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https:/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7335#issuecomment-921761922:1237,test,testReport,1237,https://root.cern,https://github.com/root-project/root/pull/7335#issuecomment-921761922,1,['test'],['testReport']
Testability,[2021-09-21T14:48:36.799Z] builtins/xrootd/XROOTD-prefix/include/xrootd/XrdCl/XrdClOptional.hh:58:29: warning: unused parameter 'n' [-Wunused-parameter] . ### Failing tests:; - [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126304/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/); - [projectroot.runtutorials.tutorial_multicore_mp001_fillHistos](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126304/testReport/projectroot/runtutorials/tutorial_multicore_mp001_fillHistos/); - [projectroot.runtutorials.tutorial_multicore_mtbb001_fillHistos](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126304/testReport/projectroot/runtutorials/tutorial_multicore_mtbb001_fillHistos/); - [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126304/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/); - [projectroot.runtutorials.tutorial_dataframe_df033_Describe_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126304/testReport/projectroot/runtutorials/tutorial_dataframe_df033_Describe_py/); - [projectroot.runtutorials.tutorial_rcanvas_df104_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126304/testReport/projectroot/runtutorials/tutorial_rcanvas_df104_py/); - [projectroot.runtutorials.tutorial_rcanvas_df105_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126304/testReport/projectroot/runtutorials/tutorial_rcanvas_df105_py/); - [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126304/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/); - [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https:/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7335#issuecomment-924114753:1237,test,testReport,1237,https://root.cern,https://github.com/root-project/root/pull/7335#issuecomment-924114753,1,['test'],['testReport']
Testability,[2022-01-05T13:51:41.329Z] /data/sftnight/workspace/root-pullrequests-build/root/io/io/inc/ROOT/TBufferMerger.hxx:222:32: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-01-05T13:51:41.329Z] /data/sftnight/workspace/root-pullrequests-build/root/io/io/inc/ROOT/TBufferMerger.hxx:219:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-01-05T13:51:41.329Z] /data/sftnight/workspace/root-pullrequests-build/root/io/io/inc/ROOT/TBufferMerger.hxx:222:32: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-01-05T13:52:53.504Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:180:4: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-01-05T13:52:53.504Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:883:4: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] . And 283 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/132927/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/132927/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/132927/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/132927/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.rootte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9479#issuecomment-1005717051:2252,test,tests,2252,https://root.cern,https://github.com/root-project/root/pull/9479#issuecomment-1005717051,1,['test'],['tests']
Testability,[2022-01-24T16:07:28.078Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/graf3d/ftgl/inc/FTFont.h:125:35: warning: unused parameter 'depth' [-Wunused-parameter] ; - [2022-01-24T16:20:38.301Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/graf3d/ftgl/inc/FTFont.h:125:35: warning: unused parameter 'depth' [-Wunused-parameter] ; - [2022-01-24T16:20:46.001Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/graf3d/ftgl/inc/FTFont.h:125:35: warning: unused parameter 'depth' [-Wunused-parameter] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_callable_generator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/134999/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_callable_generator/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/134999/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_proxy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/134999/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_proxy/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/134999/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/134999/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9671#issuecomment-1020336978:2347,test,testReport,2347,https://root.cern,https://github.com/root-project/root/pull/9671#issuecomment-1020336978,1,['test'],['testReport']
Testability,[2022-05-25T03:29:26.885Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressshapes_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/145981/testReport/projectroot/test/test_stressshapes_interpreted/); - [projectroot.roottest.cling.staticinit.roottest_cling_staticinit_ROOT_7775](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/145981/testReport/projectroot.roottest.cling/staticinit/roottest_cling_staticinit_ROOT_7775/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/145981/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/145981/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/145981/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_sqlite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/145981/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_sqlite/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/145981/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1136726084:1631,test,testReport,1631,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136726084,1,['test'],['testReport']
Testability,[2022-05-25T19:38:51.924Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressshapes_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146052/testReport/projectroot/test/test_stressshapes_interpreted/); - [projectroot.roottest.cling.staticinit.roottest_cling_staticinit_ROOT_7775](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146052/testReport/projectroot.roottest.cling/staticinit/roottest_cling_staticinit_ROOT_7775/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146052/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146052/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146052/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_sqlite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146052/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_sqlite/); - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146052/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146052/testReport/projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1137839640:1631,test,testReport,1631,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1137839640,1,['test'],['testReport']
Testability,[2022-05-31T19:44:45.278Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressshapes_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146356/testReport/projectroot/test/test_stressshapes_interpreted/); - [projectroot.roottest.cling.staticinit.roottest_cling_staticinit_ROOT_7775](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146356/testReport/projectroot.roottest.cling/staticinit/roottest_cling_staticinit_ROOT_7775/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146356/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146356/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146356/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_sqlite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146356/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_sqlite/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146356/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1142635410:1631,test,testReport,1631,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1142635410,1,['test'],['testReport']
Testability,[2022-06-01T10:31:47.683Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressshapes_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146426/testReport/projectroot/test/test_stressshapes_interpreted/); - [projectroot.roottest.cling.staticinit.roottest_cling_staticinit_ROOT_7775](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146426/testReport/projectroot.roottest.cling/staticinit/roottest_cling_staticinit_ROOT_7775/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146426/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146426/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146426/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_sqlite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146426/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_sqlite/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146426/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143502446:1631,test,testReport,1631,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143502446,1,['test'],['testReport']
Testability,[2022-08-23T16:36:27.601Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallFunc.cxx:1539:20: warning: ‘this’ pointer is null [-Wnonnull] ; - [2022-08-23T16:46:50.489Z] /usr/include/python3.10/numpy/__multiarray_api.h:1464:1: warning: ‘int _import_array()’ defined but not used [-Wunused-function] ; - [2022-08-23T16:46:53.248Z] /usr/include/python3.10/numpy/__multiarray_api.h:1464:1: warning: ‘int _import_array()’ defined but not used [-Wunused-function] ; - [2022-08-23T16:47:08.750Z] /usr/include/python3.10/numpy/__multiarray_api.h:1464:1: warning: ‘int _import_array()’ defined but not used [-Wunused-function] ; - [2022-08-23T16:47:15.256Z] /usr/include/python3.10/numpy/__multiarray_api.h:1464:1: warning: ‘int _import_array()’ defined but not used [-Wunused-function] . ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152690/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152690/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_aclicDataMemberSelection](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152690/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_aclicDataMemberSelection/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runaliceesd](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152690/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runaliceesd/); - [projectroot.roottest.root.meta.ROOT-7462.root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11198#issuecomment-1224350581:1279,test,testReport,1279,https://root.cern,https://github.com/root-project/root/pull/11198#issuecomment-1224350581,1,['test'],['testReport']
Testability,[2022-10-05T06:52:47.372Z] 1262/2410 Test #980: tutorial-spectrum-Src2 ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.37 sec . And 4 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_cont_cnt001_basictseq](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156429/testReport/projectroot/runtutorials/tutorial_cont_cnt001_basictseq/); - [projectroot.runtutorials.tutorial_spectrum_Src](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156429/testReport/projectroot/runtutorials/tutorial_spectrum_Src/); - [projectroot.runtutorials.tutorial_spectrum_Src2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156429/testReport/projectroot/runtutorials/tutorial_spectrum_Src2/); - [projectroot.runtutorials.tutorial_spectrum_Src3](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156429/testReport/projectroot/runtutorials/tutorial_spectrum_Src3/); - [projectroot.runtutorials.tutorial_spectrum_Src4](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156429/testReport/projectroot/runtutorials/tutorial_spectrum_Src4/); - [projectroot.runtutorials.tutorial_spectrum_Src5](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156429/testReport/projectroot/runtutorials/tutorial_spectrum_Src5/); - [projectroot.runtutorials.tutorial_multicore_mp101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156429/testReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/); - [projectroot.runtutorials.tutorial_multicore_mt101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156429/testReport/projectroot/runtutorials/tutorial_multicore_mt101_fillNtuples/); - [projectroot.runtutorials.tutorial_multicore_mt103_fillNtupleFromMultipleThreads](https://lcgapp-services.cern.ch/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268032988:3307,test,testReport,3307,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268032988,1,['test'],['testReport']
Testability,[2022-12-21T16:09:00.282Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:635:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2022-12-21T16:09:00.282Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:645:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] . And 417 more. ### Failing tests:; - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163000/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163000/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163000/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163000/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163000/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163000/test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11946#issuecomment-1361628059:3726,test,testReport,3726,https://root.cern,https://github.com/root-project/root/pull/11946#issuecomment-1361628059,1,['test'],['testReport']
Testability,[2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:23:18: error: template argument 2 is invalid ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:18:7: error: ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:19:7: error: ‘tensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:27:21: error: ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:29:7: error: ‘tensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:32:7: error: ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:34:16: error: ‘other’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:34:21: error: template argument 1 is invalid . And 16 more. ### Warnings:; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:420:9: warning: unused variable ‘op_0_transA’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:421:9: warning: unused variable ‘op_0_transB’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/te,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14413#issuecomment-1948984768:1655,test,test,1655,https://root.cern,https://github.com/root-project/root/pull/14413#issuecomment-1948984768,1,['test'],['test']
Testability,[6.28] Fix distributed RDataFrame tests due to error serialization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13933:34,test,tests,34,https://root.cern,https://github.com/root-project/root/pull/13933,1,['test'],['tests']
Testability,[6.28] [tmva] Relax float comparison in test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14659:40,test,test,40,https://root.cern,https://github.com/root-project/root/pull/14659,1,['test'],['test']
Testability,[6.28][tmva] Completely relax float comparison in TestSofieModels,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14745:50,Test,TestSofieModels,50,https://root.cern,https://github.com/root-project/root/pull/14745,1,['Test'],['TestSofieModels']
Testability,[6.30] Fix distributed RDataFrame tests due to error serialization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13932:34,test,tests,34,https://root.cern,https://github.com/root-project/root/pull/13932,1,['test'],['tests']
Testability,[6.30] [tmva] Completely relax float comparison in TestSofieModels,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14746:51,Test,TestSofieModels,51,https://root.cern,https://github.com/root-project/root/pull/14746,1,['Test'],['TestSofieModels']
Testability,[6.30] [tmva] Relax float comparison in test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14658:40,test,test,40,https://root.cern,https://github.com/root-project/root/pull/14658,1,['test'],['test']
Testability,[6.32] [pyroot] Isolate potentially leaking function in test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16032:56,test,test,56,https://root.cern,https://github.com/root-project/root/pull/16032,1,['test'],['test']
Testability,[: error:] 0.26 sec ; - 571/1873 Test #458: tutorial-graphs-timeonaxis2 .......................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.27 sec ; - 613/1873 Test #501: tutorial-hist-ratioplotOld ........................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.21 sec ; - 621/1873 Test #508: tutorial-hist-th2polyEurope .......................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.30 sec ; - 632/1873 Test #516: tutorial-histfactory-hf001_example ................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.86 sec . And 15 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclicModelWrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62608/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclicModelWrite/); - [projectroot.runtutorials.tutorial_hist_fillrandom](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62608/testReport/projectroot/runtutorials/tutorial_hist_fillrandom/); - [projectroot.runtutorials.tutorial_roostats_CreateExampleFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62608/testReport/projectroot/runtutorials/tutorial_roostats_CreateExampleFile/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62608/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62608/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.root.io.s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016#issuecomment-508578757:2340,test,testReport,2340,https://root.cern,https://github.com/root-project/root/pull/4016#issuecomment-508578757,1,['test'],['testReport']
Testability,[: error:] 0.55 sec ; - [2022-10-23T06:30:41.247Z] 854/2413 Test #557: tutorial-fitsio-FITS_tutorial6 ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.54 sec ; - [2022-10-23T06:30:41.247Z] 857/2413 Test #558: tutorial-fitsio-FITS_tutorial7 ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.51 sec ; - [2022-10-23T06:30:51.199Z] 1112/2413 Test #818: tutorial-multicore-mp201_parallelHistoFill ........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.47 sec ; - [2022-10-23T06:30:51.199Z] 1113/2413 Test #821: tutorial-multicore-mt102_readNtuplesFillHistosAndFit ..............................................***Failed Error regular expression found in output. Regex=[: error:] 0.48 sec ; - [2022-10-23T06:30:51.472Z] 1115/2413 Test #822: tutorial-multicore-mt103_fillNtupleFromMultipleThreads ............................................***Failed Error regular expression found in output. Regex=[: error:] 0.53 sec . And 3 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/158165/testReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/); - [projectroot.runtutorials.tutorial_multicore_mt101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/158165/testReport/projectroot/runtutorials/tutorial_multicore_mt101_fillNtuples/); - [projectroot.runtutorials.tutorial_cont_cnt001_basictseq](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/158165/testReport/projectroot/runtutorials/tutorial_cont_cnt001_basictseq/); - [projectroot.runtutorials.tutorial_fitsio_FITS_tutorial3](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/158165/testReport,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1288026201:2353,Test,Test,2353,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1288026201,1,['Test'],['Test']
Testability,[: error:] 1.03 sec ; - 750/1742 Test #657: tutorial-roostats-Zbi_Zgamma ......................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.92 sec ; - 762/1742 Test #669: tutorial-roostats-rs_numbercountingutils ..........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.92 sec . ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47275/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47275/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47275/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.test.test_stressinterpreter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47275/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.runtutorials.tutorial_dataframe_df013_InspectAnalysis](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47275/testReport/projectroot/runtutorials/tutorial_dataframe_df013_InspectAnalysis/); - [projectroot.runtutorials.tutorial_fit_fithist](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47275/testReport/projectroot/runtutorials/tutorial_fit_fithist/); - [projectroot.runtutorials.tutorial_graphics_markerwarning](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47275/testReport/projectroot/runtutorials/tutorial_graphics_markerwarning/); - [projectroot.runtutorials.tutorial_math_quasirandom](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47275/testReport/projectroot/runtutorials/tutorial_ma,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2929#issuecomment-436390427:2128,test,testReport,2128,https://root.cern,https://github.com/root-project/root/pull/2929#issuecomment-436390427,1,['test'],['testReport']
Testability,[: error:] 2.03 sec ; - [2022-09-27T19:29:37.807Z] 786/2404 Test #495: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.59 sec ; - [2022-09-27T19:29:37.807Z] 787/2404 Test #498: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.76 sec ; - [2022-09-27T19:29:58.223Z] 1106/2404 Test #814: tutorial-multicore-mp201_parallelHistoFill ........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.65 sec ; - [2022-09-27T19:29:58.223Z] 1107/2404 Test #821: tutorial-multicore-mt304_fillHistos ...............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.55 sec ; - [2022-09-27T19:29:58.223Z] 1108/2404 Test #818: tutorial-multicore-mt103_fillNtupleFromMultipleThreads ............................................***Failed Error regular expression found in output. Regex=[: error:] 0.62 sec ; - [2022-09-27T19:29:58.515Z] 1112/2404 Test #823: tutorial-multicore-mtbb101_fillNtuples ............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.60 sec ; - [2022-09-27T19:29:58.515Z] 1113/2404 Test #824: tutorial-multicore-mtbb201_parallelHistoFill ......................................................***Failed Error regular expression found in output. Regex=[: error:] 0.60 sec . And 8 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/155340/testReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/); - [projectroot.runtutorials.tutorial_multicore_mt101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1259968338:1897,Test,Test,1897,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1259968338,1,['Test'],['Test']
Testability,[: error:] 4.31 sec ; - 346/1530 Test #239: tutorial-geom-csgdemo .............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.01 sec ; - 358/1530 Test #253: tutorial-gl-gldemos ...............................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.57 sec ; - 379/1530 Test #275: tutorial-graphics-basic3d .........................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.52 sec ; - 417/1530 Test #311: tutorial-graphics-tornado .........................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.84 sec . And 5 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_hist_FirstContour](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18523/testReport/projectroot/runtutorials/tutorial_hist_FirstContour/); - [projectroot.test.test_stressIOPlugins_http](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18523/testReport/projectroot/test/test_stressIOPlugins_http/); - [projectroot.test.test_stressIOPlugins_xroot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18523/testReport/projectroot/test/test_stressIOPlugins_xroot/); - [projectroot.test.test_TFormulaTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18523/testReport/projectroot/test/test_TFormulaTests/); - [projectroot.runtutorials.tutorial_benchmarks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18523/testReport/projectroot/runtutorials/tutorial_benchmarks/); - [projectroot.runtutorials.tutorial_demos](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18523/testReport/projectroot/runtutorials/tutorial_demos/); - [projectroot.runtutorials.tutorial_fit_fitcont](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/18523/testReport/proje,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1365#issuecomment-369531602:1683,test,testReport,1683,https://root.cern,https://github.com/root-project/root/pull/1365#issuecomment-369531602,1,['test'],['testReport']
Testability,[Backport][TMVA] Use R__ASSERT instead of assert,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13832:42,assert,assert,42,https://root.cern,https://github.com/root-project/root/pull/13832,2,['assert'],['assert']
Testability,[C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_utils.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\xmemory0(1101): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_9b60555fex': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\datasource_sqlite.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\streambuf(568): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_7eeb19c2sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\gui\sessionviewer\SessionViewer.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_report.cxx(100): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_ec90e11cgl': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_report.vcxproj] ; - C:\build\workspace\root-pullrequests-build\build\include\TH3.h(259): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_fb631728ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_colnames.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\vector(1361): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_870ac8afdb': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_simple.vcxproj] ; - C:\build\workspace\root-pullrequests-build\build\include\TPad.h(357): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_48e18f1aex': No space left on device [,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4317#issuecomment-527074091:2432,test,test,2432,https://root.cern,https://github.com/root-project/root/pull/4317#issuecomment-527074091,1,['test'],['test']
Testability,[CI] Add a resource lock to GPU tests to reduce contention,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16803:32,test,tests,32,https://root.cern,https://github.com/root-project/root/pull/16803,1,['test'],['tests']
Testability,[CI] Build is green even if tests are failing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12307:28,test,tests,28,https://root.cern,https://github.com/root-project/root/issues/12307,1,['test'],['tests']
Testability,[CI] Bump `EnricoMi/publish-test-result-action` to latest version,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12688:28,test,test-result-action,28,https://root.cern,https://github.com/root-project/root/pull/12688,1,['test'],['test-result-action']
Testability,[CI] Set `arrow=ON` to test the RDataFrame Arrow data source,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15312:23,test,test,23,https://root.cern,https://github.com/root-project/root/pull/15312,1,['test'],['test']
Testability,[CI] Test cdash,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16676:5,Test,Test,5,https://root.cern,https://github.com/root-project/root/pull/16676,1,['Test'],['Test']
Testability,[CI] Test produced binaries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15861:5,Test,Test,5,https://root.cern,https://github.com/root-project/root/issues/15861,1,['Test'],['Test']
Testability,[CI][Windows] Increase the test retries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15429:27,test,test,27,https://root.cern,https://github.com/root-project/root/pull/15429,1,['test'],['test']
Testability,[CI][windows] Disable failing tests on Jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15119:30,test,tests,30,https://root.cern,https://github.com/root-project/root/pull/15119,1,['test'],['tests']
Testability,[CMake] Add `testsupport` option that is `OFF` by default,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16625:13,test,testsupport,13,https://root.cern,https://github.com/root-project/root/pull/16625,1,['test'],['testsupport']
Testability,[CMake] Add scripts to configure/build/test ROOT with CTest,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14999:39,test,test,39,https://root.cern,https://github.com/root-project/root/pull/14999,1,['test'],['test']
Testability,[CMake] Don't treat DistRDF tests as features,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15464:28,test,tests,28,https://root.cern,https://github.com/root-project/root/pull/15464,1,['test'],['tests']
Testability,[CMake] Small CMake updates needed for RooFit's LinkDefs and Tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4968:61,Test,Tests,61,https://root.cern,https://github.com/root-project/root/pull/4968,1,['Test'],['Tests']
Testability,[CMake] Tutorials as tests: fail if function not found,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16300:21,test,tests,21,https://root.cern,https://github.com/root-project/root/pull/16300,1,['test'],['tests']
Testability,"[CONTRIBUTING] Move ""we require tests"" / (c) assign from web: [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8671:32,test,tests,32,https://root.cern,https://github.com/root-project/root/pull/8671,1,['test'],['tests']
Testability,[Cling] Assertion fails with wrong but innocent code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13965:8,Assert,Assertion,8,https://root.cern,https://github.com/root-project/root/issues/13965,1,['Assert'],['Assertion']
Testability,[Core] Also build test support in case of `testing=OFF`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16568:18,test,test,18,https://root.cern,https://github.com/root-project/root/pull/16568,2,['test'],"['test', 'testing']"
Testability,[Core] Revive TSeq tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6536:19,test,tests,19,https://root.cern,https://github.com/root-project/root/pull/6536,1,['test'],['tests']
Testability,[DF] Add Open Data benchmarks,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7745:19,benchmark,benchmarks,19,https://root.cern,https://github.com/root-project/root/issues/7745,1,['benchmark'],['benchmarks']
Testability,[DF] Add a couple of tests for regex match/subs in jitted expressions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7585:21,test,tests,21,https://root.cern,https://github.com/root-project/root/pull/7585,1,['test'],['tests']
Testability,[DF] Add logging to RunGraphs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11342:9,log,logging,9,https://root.cern,https://github.com/root-project/root/pull/11342,1,['log'],['logging']
Testability,[DF] Add more tests for Vary,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10607:14,test,tests,14,https://root.cern,https://github.com/root-project/root/pull/10607,1,['test'],['tests']
Testability,[DF] Add more tests to dataframe_snapshot.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8753:14,test,tests,14,https://root.cern,https://github.com/root-project/root/pull/8753,1,['test'],['tests']
Testability,[DF] Add regression test for ROOT-9731 (RDF+TBranchObject),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6087:20,test,test,20,https://root.cern,https://github.com/root-project/root/pull/6087,1,['test'],['test']
Testability,[DF] Add support and tests for concurrent usage of different RDF objects from different threads,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15080:21,test,tests,21,https://root.cern,https://github.com/root-project/root/issues/15080,1,['test'],['tests']
Testability,[DF] Add test for Fill with object with arbitrary signature,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9495:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/9495,1,['test'],['test']
Testability,[DF] Add test for ROOT-10273,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6524:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/6524,1,['test'],['test']
Testability,[DF] Add test for Snapshot of nested RVecs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7640:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/7640,1,['test'],['test']
Testability,[DF] Add test for Vary call on aliased column name,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11119:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/11119,1,['test'],['test']
Testability,[DF] Add tests for RNTupleDS + RVecs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10621:9,test,tests,9,https://root.cern,https://github.com/root-project/root/pull/10621,1,['test'],['tests']
Testability,[DF] Backport fix for test logic (v6.26),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9887:22,test,test,22,https://root.cern,https://github.com/root-project/root/pull/9887,2,"['log', 'test']","['logic', 'test']"
Testability,[DF] Better name for test file,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11150:21,test,test,21,https://root.cern,https://github.com/root-project/root/pull/11150,1,['test'],['test']
Testability,[DF] Change test to avoid double free on Fedora39,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14803:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/14803,1,['test'],['test']
Testability,[DF] Clean after test case,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2196:17,test,test,17,https://root.cern,https://github.com/root-project/root/pull/2196,1,['test'],['test']
Testability,[DF] Disable cling nullptr checks in RDF internal logic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7004:50,log,logic,50,https://root.cern,https://github.com/root-project/root/pull/7004,1,['log'],['logic']
Testability,[DF] Disable splitcoll_arrayview test if runtime modules are on,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5281:33,test,test,33,https://root.cern,https://github.com/root-project/root/pull/5281,1,['test'],['test']
Testability,[DF] Do not assume a certain entry order in MT tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5687:47,test,tests,47,https://root.cern,https://github.com/root-project/root/pull/5687,1,['test'],['tests']
Testability,[DF] Do not jit in GraphAsymmErrors tests unless we mean to,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9842:36,test,tests,36,https://root.cern,https://github.com/root-project/root/pull/9842,1,['test'],['tests']
Testability,[DF] Expect test death rather than asserting it,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2230:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/2230,2,"['assert', 'test']","['asserting', 'test']"
Testability,"[DF] Fix RVec<bool> display, fix the corresponding test",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12598:51,test,test,51,https://root.cern,https://github.com/root-project/root/pull/12598,1,['test'],['test']
Testability,[DF] Fix arrow datasource and tests for recent arrow versions (v6.16),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5427:30,test,tests,30,https://root.cern,https://github.com/root-project/root/pull/5427,1,['test'],['tests']
Testability,[DF] Fix arrow datasource and tests for recent arrow versions (v6.18),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5426:30,test,tests,30,https://root.cern,https://github.com/root-project/root/pull/5426,1,['test'],['tests']
Testability,[DF] Fix dataframe_concurrency test on 32bit machines,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6842:31,test,test,31,https://root.cern,https://github.com/root-project/root/pull/6842,1,['test'],['test']
Testability,[DF] Fix datasource_more test failures on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8279:25,test,test,25,https://root.cern,https://github.com/root-project/root/pull/8279,1,['test'],['test']
Testability,[DF] Fix long int + Snapshot test on 32 bit platforms,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10364:29,test,test,29,https://root.cern,https://github.com/root-project/root/pull/10364,1,['test'],['test']
Testability,[DF] Fix the broken RDatasetSpec test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10951:33,test,test,33,https://root.cern,https://github.com/root-project/root/pull/10951,1,['test'],['test']
Testability,[DF] Improve Snapshot branch-address-resetting logic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8375:47,log,logic,47,https://root.cern,https://github.com/root-project/root/pull/8375,1,['log'],['logic']
Testability,[DF] Improved Display tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2541:22,test,tests,22,https://root.cern,https://github.com/root-project/root/pull/2541,1,['test'],['tests']
Testability,[DF] Increase test coverage,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3566:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/3566,1,['test'],['test']
Testability,[DF] Let RunGraphs log what code is being jitted,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11832:19,log,log,19,https://root.cern,https://github.com/root-project/root/pull/11832,1,['log'],['log']
Testability,[DF] Lift some data members and logic to non-template base classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9186:32,log,logic,32,https://root.cern,https://github.com/root-project/root/pull/9186,1,['log'],['logic']
Testability,[DF] Log begin/end of event loop and processing of each entry range,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6828:5,Log,Log,5,https://root.cern,https://github.com/root-project/root/pull/6828,1,['Log'],['Log']
Testability,[DF] Minor improvement to a log message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11340:28,log,log,28,https://root.cern,https://github.com/root-project/root/pull/11340,1,['log'],['log']
Testability,[DF] Misc fixes to a test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9882:21,test,test,21,https://root.cern,https://github.com/root-project/root/pull/9882,1,['test'],['test']
Testability,[DF] Move all single-thread vary tests together,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13192:33,test,tests,33,https://root.cern,https://github.com/root-project/root/pull/13192,1,['test'],['tests']
Testability,[DF] Move logging of each task to debug log level,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11341:10,log,logging,10,https://root.cern,https://github.com/root-project/root/pull/11341,2,['log'],"['log', 'logging']"
Testability,[DF] Move mapper logic to create RDF in headnode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9298:17,log,logic,17,https://root.cern,https://github.com/root-project/root/pull/9298,1,['log'],['logic']
Testability,[DF] Re-enable RRootDS test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8763:23,test,test,23,https://root.cern,https://github.com/root-project/root/pull/8763,1,['test'],['test']
Testability,[DF] Re-use jitted lambdas for new RDF expressions with same logic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5329:61,log,logic,61,https://root.cern,https://github.com/root-project/root/pull/5329,1,['log'],['logic']
Testability,[DF] Reduce amount of jitting in dataframe_simple test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11502:50,test,test,50,https://root.cern,https://github.com/root-project/root/pull/11502,1,['test'],['test']
Testability,[DF] Reduce runtimes of kahan tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11711:30,test,tests,30,https://root.cern,https://github.com/root-project/root/pull/11711,1,['test'],['tests']
Testability,[DF] Remove the extra R__USE_IMT fixture in the RDatasetSpec tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10962:61,test,tests,61,https://root.cern,https://github.com/root-project/root/pull/10962,1,['test'],['tests']
Testability,"[DF] Remove unused ""unique ID"" logic in RDefineBase",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9308:31,log,logic,31,https://root.cern,https://github.com/root-project/root/pull/9308,1,['log'],['logic']
Testability,[DF] Remove wrong RepresentGraph logic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8755:33,log,logic,33,https://root.cern,https://github.com/root-project/root/pull/8755,1,['log'],['logic']
Testability,[DF] Removing failing test with shorter friends,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12025:22,test,test,22,https://root.cern,https://github.com/root-project/root/pull/12025,1,['test'],['test']
Testability,[DF] Removing failing test with shorter friends (v6.28),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12212:22,test,test,22,https://root.cern,https://github.com/root-project/root/pull/12212,1,['test'],['test']
Testability,[DF] Revert to http in datasource_csv test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9232:38,test,test,38,https://root.cern,https://github.com/root-project/root/pull/9232,1,['test'],['test']
Testability,[DF] Run test in IMT mode too,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10715:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/10715,1,['test'],['test']
Testability,[DF] Shorten RDF unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13621:22,test,tests,22,https://root.cern,https://github.com/root-project/root/pull/13621,1,['test'],['tests']
Testability,[DF] Simplify logic now that lifetimes are simpler,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2594:14,log,logic,14,https://root.cern,https://github.com/root-project/root/pull/2594,1,['log'],['logic']
Testability,[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8938:58,test,tests,58,https://root.cern,https://github.com/root-project/root/pull/8938,1,['test'],['tests']
Testability,[DF] Test PR for RDF metadata handling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11885:5,Test,Test,5,https://root.cern,https://github.com/root-project/root/pull/11885,1,['Test'],['Test']
Testability,[DF] Test and workaround for the TLeaf-side part of ROOT-10942,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6113:5,Test,Test,5,https://root.cern,https://github.com/root-project/root/pull/6113,1,['Test'],['Test']
Testability,[DF] Test cast to RNode of RDF with datasource,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2642:5,Test,Test,5,https://root.cern,https://github.com/root-project/root/pull/2642,1,['Test'],['Test']
Testability,[DF] Test new test_snapshot roottests with new CI,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14393:5,Test,Test,5,https://root.cern,https://github.com/root-project/root/pull/14393,1,['Test'],['Test']
Testability,[DF] Test new test_snapshot roottests with new CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14394:5,Test,Test,5,https://root.cern,https://github.com/root-project/root/pull/14394,1,['Test'],['Test']
Testability,[DF] Tests and doc for the Display action,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2514:5,Test,Tests,5,https://root.cern,https://github.com/root-project/root/pull/2514,1,['Test'],['Tests']
Testability,[DF] Throw instead of logging an error if a file or tree is unreadable,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5207:22,log,logging,22,https://root.cern,https://github.com/root-project/root/pull/5207,1,['log'],['logging']
Testability,[DF] Try to fix dataframe_nodes test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2238:32,test,test,32,https://root.cern,https://github.com/root-project/root/pull/2238,1,['test'],['test']
Testability,[DF] Unit tests: use EXPECT_ANY_THROW where it makes sense,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3799:10,test,tests,10,https://root.cern,https://github.com/root-project/root/pull/3799,1,['test'],['tests']
Testability,[DF] Use ROOT_GENERATE_DICTIONARY properly in dataframe/test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8401:56,test,test,56,https://root.cern,https://github.com/root-project/root/pull/8401,1,['test'],['test']
Testability,"[DF] Use `assert`, not `R__ASSERT` when we are checking for bugs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9268:10,assert,assert,10,https://root.cern,https://github.com/root-project/root/pull/9268,1,['assert'],['assert']
Testability,"[DF] Use assert, not R__ASSERT when checks are unnecessary in releases",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9258:9,assert,assert,9,https://root.cern,https://github.com/root-project/root/pull/9258,1,['assert'],['assert']
Testability,[DF] Use different file names in different tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9259:43,test,tests,43,https://root.cern,https://github.com/root-project/root/pull/9259,1,['test'],['tests']
Testability,[DF] Use different files for different test cases,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9047:39,test,test,39,https://root.cern,https://github.com/root-project/root/pull/9047,1,['test'],['test']
Testability,[DF] Use unique file names in tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6121:30,test,tests,30,https://root.cern,https://github.com/root-project/root/pull/6121,1,['test'],['tests']
Testability,[DF] Use unique file names in tests (6.20),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6122:30,test,tests,30,https://root.cern,https://github.com/root-project/root/pull/6122,1,['test'],['tests']
Testability,[DF] Use unique file names in tests (6.22),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6123:30,test,tests,30,https://root.cern,https://github.com/root-project/root/pull/6123,1,['test'],['tests']
Testability,[DF] gtest-tree-dataframe-test-dataframe-snapshot fails with AddressSanitizer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11222:26,test,test-dataframe-snapshot,26,https://root.cern,https://github.com/root-project/root/issues/11222,1,['test'],['test-dataframe-snapshot']
Testability,[DF][NFC] Move logging statement to DEBUG,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10905:15,log,logging,15,https://root.cern,https://github.com/root-project/root/pull/10905,1,['log'],['logging']
Testability,[DF][NFC] Remove unused variable in test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2426:36,test,test,36,https://root.cern,https://github.com/root-project/root/pull/2426,1,['test'],['test']
Testability,[DF][ROOT-9174] Re-activate RRootDS test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3264:36,test,test,36,https://root.cern,https://github.com/root-project/root/pull/3264,1,['test'],['test']
Testability,[DF][ROOT-9457] Move result-readiness logic to RAction,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2461:38,log,logic,38,https://root.cern,https://github.com/root-project/root/pull/2461,1,['log'],['logic']
Testability,[DO NOT MERGE] Test roottest PR 1197,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16545:15,Test,Test,15,https://root.cern,https://github.com/root-project/root/pull/16545,1,['Test'],['Test']
Testability,[DO NOT MERGE] Test the test for #11707,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16766:15,Test,Test,15,https://root.cern,https://github.com/root-project/root/pull/16766,2,"['Test', 'test']","['Test', 'test']"
Testability,[DO NOT MERGE] Test windows failure in datasource root test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11326:15,Test,Test,15,https://root.cern,https://github.com/root-project/root/pull/11326,2,"['Test', 'test']","['Test', 'test']"
Testability,[DO NOT MERGE] Testing CI runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15184:15,Test,Testing,15,https://root.cern,https://github.com/root-project/root/pull/15184,1,['Test'],['Testing']
Testability,[DO NOT MERGE] Triggers builds including test in roottest PR #1165,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16213:41,test,test,41,https://root.cern,https://github.com/root-project/root/pull/16213,1,['test'],['test']
Testability,[DO NOT MERGE] [graphics] Better testing for graphics output,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16127:33,test,testing,33,https://root.cern,https://github.com/root-project/root/pull/16127,1,['test'],['testing']
Testability,"[DO NOT MERGE][graphics] Test better diagnostic, json tests and Linux platform",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16114:25,Test,Test,25,https://root.cern,https://github.com/root-project/root/pull/16114,2,"['Test', 'test']","['Test', 'tests']"
Testability,[DO NOT REVIEW] test to trigger the CI,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14653:16,test,test,16,https://root.cern,https://github.com/root-project/root/pull/14653,1,['test'],['test']
Testability,[DRAFT][TMVA] Unconditionally run all TMVA tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15306:43,test,tests,43,https://root.cern,https://github.com/root-project/root/pull/15306,1,['test'],['tests']
Testability,[DistRDF] Make logging uniform,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8982:15,log,logging,15,https://root.cern,https://github.com/root-project/root/issues/8982,1,['log'],['logging']
Testability,[Do not merge] PR to test new root-jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4577:21,test,test,21,https://root.cern,https://github.com/root-project/root/pull/4577,1,['test'],['test']
Testability,[Do not merge] Test clad master before release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11166:15,Test,Test,15,https://root.cern,https://github.com/root-project/root/pull/11166,1,['Test'],['Test']
Testability,[Do not merge] Test modules without preloading,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3300:15,Test,Test,15,https://root.cern,https://github.com/root-project/root/pull/3300,1,['Test'],['Test']
Testability,[Draft] Debug test error in TError patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5803:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/5803,1,['test'],['test']
Testability,"[EDIT]: 2017-07-20 dropped commit (6953483). See the commit messages for detailed descriptions of the changes. In essence, when comparing some data with the KolmogorovTest an infinite loop was triggered. (bba95dd) We want to get an approximate solution to the test despite there being some bins with neg. content; (06024c8) To prevent the infinite loop in other cases, calling FillRandom with a histogram with negative content is now an error.; (6953483) The caching inside GetRandom can violate an invariant of the function. (Always return NaN when there is a bin with neg. content in the source histogram). [EDIT] Removed after discussion with Lorenzo. The recomputation of the integral here was deemed too expensive as the function is intended to be called in tight loops. Since these changes might have far reaching effects I am up for discussion whether any commits should be dropped. A reproducer in can be found [here](https://gist.github.com/ashlaban/05552ab5f5a7aa05e9c9b73229b2dba4).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/705:260,test,test,260,https://root.cern,https://github.com/root-project/root/pull/705,1,['test'],['test']
Testability,[Exp PyROOT] Add TCollection and TIter pythonisations and tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3298:58,test,tests,58,https://root.cern,https://github.com/root-project/root/pull/3298,1,['test'],['tests']
Testability,"[Exp PyROOT] Add pythonisation for RooWorkspace. RooWorkspace.import() cannot be called from Python. This adds a; pythonisation called RooWorkspace.Import() instead. @etejedor I updated the tutorials accordingly (they also serve as a test). A potential problem is that I didn't write a pythonisation for old PyROOT, so the tutorials won't work if somebody switches back.; Do we want to support also old PyROOT, or do we move on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5308:234,test,test,234,https://root.cern,https://github.com/root-project/root/pull/5308,1,['test'],['test']
Testability,[Exp PyROOT] Another round of test disabling for experimental PyROOT builds,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3275:30,test,test,30,https://root.cern,https://github.com/root-project/root/pull/3275,1,['test'],['test']
Testability,[Exp PyROOT] Changed syntax in C++ header jitted in a test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4672:54,test,test,54,https://root.cern,https://github.com/root-project/root/pull/4672,1,['test'],['test']
Testability,[Exp PyROOT] Changes to fix python-cpp tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3832:39,test,tests,39,https://root.cern,https://github.com/root-project/root/pull/3832,1,['test'],['tests']
Testability,[Exp PyROOT] Fixed 'tutorial-math-Legendre-py' test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4072:47,test,test,47,https://root.cern,https://github.com/root-project/root/pull/4072,1,['test'],['test']
Testability,[Exp PyROOT] Fixed two other failing tests (AsNumpyArrays-py and tStudent-py) with commit 832989c,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3980:37,test,tests,37,https://root.cern,https://github.com/root-project/root/pull/3980,1,['test'],['tests']
Testability,[Exp PyROOT] Fixes for AsNumpy test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5048:31,test,test,31,https://root.cern,https://github.com/root-project/root/pull/5048,1,['test'],['test']
Testability,[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3260:32,test,tests,32,https://root.cern,https://github.com/root-project/root/pull/3260,1,['test'],['tests']
Testability,[Exp PyROOT] Make tests runnable as Python scripts,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3372:18,test,tests,18,https://root.cern,https://github.com/root-project/root/pull/3372,1,['test'],['tests']
Testability,[Exp PyROOT] Only run test if Roofit is there,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3220:22,test,test,22,https://root.cern,https://github.com/root-project/root/pull/3220,1,['test'],['test']
Testability,[Exp PyROOT] Other test fixed by commit 267179,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4139:19,test,test,19,https://root.cern,https://github.com/root-project/root/pull/4139,1,['test'],['test']
Testability,[Exp PyROOT] Prevent double copy of input test file,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4442:42,test,test,42,https://root.cern,https://github.com/root-project/root/pull/4442,1,['test'],['test']
Testability,[Exp PyROOT] Re-enable RDF tests and tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3519:27,test,tests,27,https://root.cern,https://github.com/root-project/root/pull/3519,1,['test'],['tests']
Testability,"[Exp PyROOT] Re-enable tutorials, fix test",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3330:38,test,test,38,https://root.cern,https://github.com/root-project/root/pull/3330,1,['test'],['test']
Testability,[Exp PyROOT] Temporarily disable PyROOT tests and tutorials in experimental mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3255:40,test,tests,40,https://root.cern,https://github.com/root-project/root/pull/3255,1,['test'],['tests']
Testability,[Exp PyROOT] Test char array branches are properly read as Python str,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2925:13,Test,Test,13,https://root.cern,https://github.com/root-project/root/pull/2925,1,['Test'],['Test']
Testability,[Exp PyROOT] Test pyunittests-dataframe-cache enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4123:13,Test,Test,13,https://root.cern,https://github.com/root-project/root/pull/4123,1,['Test'],['Test']
Testability,[Exp PyROOT] Trivial changes fixing installation troubles and tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4636:62,test,tests,62,https://root.cern,https://github.com/root-project/root/pull/4636,1,['test'],['tests']
Testability,[Exp PyROOT] Update of Cppyy + test fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4264:31,test,test,31,https://root.cern,https://github.com/root-project/root/pull/4264,1,['test'],['test']
Testability,[Exp PyROOT] Warning and logic fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4602:25,log,logic,25,https://root.cern,https://github.com/root-project/root/pull/4602,1,['log'],['logic']
Testability,[For testing - DO NOT MERGE] Do not draw error bars when they are smaller than the marker.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16383:5,test,testing,5,https://root.cern,https://github.com/root-project/root/pull/16383,1,['test'],['testing']
Testability,[FreeBSD] Fix TThread related tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13069:30,test,tests,30,https://root.cern,https://github.com/root-project/root/pull/13069,1,['test'],['tests']
Testability,[FreeBSD] TThread related tests fail,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13068:26,test,tests,26,https://root.cern,https://github.com/root-project/root/issues/13068,1,['test'],['tests']
Testability,[FreeBSD] library load/unload order vs atexit registered dtors - makes tests fail,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13172:71,test,tests,71,https://root.cern,https://github.com/root-project/root/issues/13172,1,['test'],['tests']
Testability,[FreeBSD] macro compilation fail (evolution test),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13080:44,test,test,44,https://root.cern,https://github.com/root-project/root/issues/13080,1,['test'],['test']
Testability,[FreeBSD] merger tests fail with floating point exception,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13128:17,test,tests,17,https://root.cern,https://github.com/root-project/root/issues/13128,1,['test'],['tests']
Testability,[FreeBSD] roofit tests segfault,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13200:17,test,tests,17,https://root.cern,https://github.com/root-project/root/issues/13200,1,['test'],['tests']
Testability,[GSOC22] TMVA Pythonization Tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11617:28,Test,Tests,28,https://root.cern,https://github.com/root-project/root/pull/11617,1,['Test'],['Tests']
Testability,[GSOC][TMVA][SOFIE] Cast ONNX Operator implemented with the corresponding unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11033:79,test,tests,79,https://root.cern,https://github.com/root-project/root/pull/11033,1,['test'],['tests']
Testability,"[GSOC][TMVA][SOFIE] Comparision ONNX Operators (Less, Greater, LessOrEqual, GreaterOrEqual, Equal) implemented with the corresponding unit tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13171:139,test,tests,139,https://root.cern,https://github.com/root-project/root/pull/13171,1,['test'],['tests']
Testability,[GSOC][TMVA][SOFIE] Error function implemented successfully with the corresponding unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13104:88,test,tests,88,https://root.cern,https://github.com/root-project/root/pull/13104,1,['test'],['tests']
Testability,[GSOC][TMVA][SOFIE] Log ONNX Operator implemented with the corresponding unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12945:20,Log,Log,20,https://root.cern,https://github.com/root-project/root/pull/12945,2,"['Log', 'test']","['Log', 'tests']"
Testability,[GSOC][TMVA][SOFIE] Max ONNX Operator implemented with the corresponding unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11198:78,test,tests,78,https://root.cern,https://github.com/root-project/root/pull/11198,1,['test'],['tests']
Testability,[GSOC][TMVA][SOFIE] Pow ONNX Operator added to SOFIE with the corresponding unit tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10971:81,test,tests,81,https://root.cern,https://github.com/root-project/root/pull/10971,1,['test'],['tests']
Testability,[GSOC][TMVA][SOFIE] Reduce ONNX Operators implemented with the corresponding unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11258:82,test,tests,82,https://root.cern,https://github.com/root-project/root/pull/11258,1,['test'],['tests']
Testability,[GSOC][TMVA][SOFIE] Shape ONNX Operator implemented with the corresponding unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11086:80,test,tests,80,https://root.cern,https://github.com/root-project/root/pull/11086,1,['test'],['tests']
Testability,[GSOC][TMVA][SOFIE] Tanh ONNX operator added with the corresponding unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10913:73,test,tests,73,https://root.cern,https://github.com/root-project/root/pull/10913,1,['test'],['tests']
Testability,[GSOC][TMVA][SOFIE] TopK ONNX Operator implemented with the corresponding unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12942:79,test,tests,79,https://root.cern,https://github.com/root-project/root/pull/12942,1,['test'],['tests']
Testability,[GSOC][TMVA][SOFIE] Where ONNX Operator implemented with the ccorresponding unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13093:81,test,tests,81,https://root.cern,https://github.com/root-project/root/pull/13093,1,['test'],['tests']
Testability,"[GSOC][TMVA][SOFIE]Added all 4 Basic Binary Operators:- Add,Sub,Mul and Div with the Unit Tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10822:90,Test,Tests,90,https://root.cern,https://github.com/root-project/root/pull/10822,1,['Test'],['Tests']
Testability,[GSOC][TMVA][SOFIE]Neg ONNX Operator implemented in SOFIE with the corresponding unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10946:86,test,tests,86,https://root.cern,https://github.com/root-project/root/pull/10946,1,['test'],['tests']
Testability,"[HS3] Avoid creating temporary objects to import into workspace; [RF][HS3][HF] General cleanup of HS3 HistFactory implementation; [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF] Exclude RooHistError from IO; [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; [RF] Code-format `testRooDataHist.cxx`; [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`; [RF] Modernize `RooVectorDataStore::RealFullVector` class; [RF] Enable AD code-gen test for RooFit.; [RF] Suggest alternative to RooDataSet c'tor that takes weight name; [RF] Add unit test for splitting RooDataSets with weight errors; [RF] Add weight errors and not weight squared when filling split data; [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`; [RF] Less manual memory management in RooAbsArg and RooProdGenContext; [RF] Code modernization of RooAbsReal; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; [RF] No need for `RooAbsMinimizerFcn::fit()` method; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12620#issuecomment-1497698813:3616,test,test,3616,https://root.cern,https://github.com/root-project/root/pull/12620#issuecomment-1497698813,1,['test'],['test']
Testability,[IMT] Remove duplicate unit test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6192:28,test,test,28,https://root.cern,https://github.com/root-project/root/pull/6192,1,['test'],['test']
Testability,[IMT] Test thread safety of task arena and TThreadExecutor.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6189:6,Test,Test,6,https://root.cern,https://github.com/root-project/root/pull/6189,1,['Test'],['Test']
Testability,[IO] Add test for hashing of streamer info record + misc fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/2188,1,['test'],['test']
Testability,[Math] Fix Kolmogorov-Smirnov 1 sample test (in ROOT::Math::GoFTest),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9819:39,test,test,39,https://root.cern,https://github.com/root-project/root/pull/9819,1,['test'],['test']
Testability,[Math] Make tolerance less strict on matrix inversion tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/521:54,test,tests,54,https://root.cern,https://github.com/root-project/root/pull/521,1,['test'],['tests']
Testability,[Math] Respawn genvector tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13633:25,test,tests,25,https://root.cern,https://github.com/root-project/root/pull/13633,1,['test'],['tests']
Testability,[NFC][skip-ci] Mention why we check cgroup quotas in LogicalCPUBandwidthControl,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8539:53,Log,LogicalCPUBandwidthControl,53,https://root.cern,https://github.com/root-project/root/pull/8539,1,['Log'],['LogicalCPUBandwidthControl']
Testability,[NOT TO MERGE] Enable test TEnum::GetEnum,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16535:22,test,test,22,https://root.cern,https://github.com/root-project/root/pull/16535,1,['test'],['test']
Testability,"[PyMVA] Refactoring of sklearn classifier with multi-class capability, unit-testing and ranking",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/343:76,test,testing,76,https://root.cern,https://github.com/root-project/root/pull/343,1,['test'],['testing']
Testability,[PyROOT exp] Add test for passing Python callables to ROOT.TF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3475:17,test,test,17,https://root.cern,https://github.com/root-project/root/pull/3475,1,['test'],['test']
Testability,[PyROOT] Add test for implicit import from the ROOT namespace,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5361:13,test,test,13,https://root.cern,https://github.com/root-project/root/pull/5361,1,['test'],['test']
Testability,[PyROOT] Add tests for stl containers pythonic behaviour,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14669:13,test,tests,13,https://root.cern,https://github.com/root-project/root/pull/14669,1,['test'],['tests']
Testability,[PyROOT] Fix TTree.AsMatrix unit-test for 32bit systems,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1950:33,test,test,33,https://root.cern,https://github.com/root-project/root/pull/1950,1,['test'],['test']
Testability,[PyROOT] Fix distributed RDataFrame tests due to error serialization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13926:36,test,tests,36,https://root.cern,https://github.com/root-project/root/pull/13926,1,['test'],['tests']
Testability,[PyROOT] Fix test veto if ROOTTEST_IGNORE_NUMBA_PY[23] set.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6041:13,test,test,13,https://root.cern,https://github.com/root-project/root/pull/6041,1,['test'],['test']
Testability,[PyROOT] Harden tests of refcounts by invoking GC manually,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6127:16,test,tests,16,https://root.cern,https://github.com/root-project/root/pull/6127,1,['test'],['tests']
Testability,[PyROOT] Ignore numba tests for specific build nodes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5476:22,test,tests,22,https://root.cern,https://github.com/root-project/root/pull/5476,1,['test'],['tests']
Testability,[PyROOT] Prevent functions from crashing due to Python 3.12 assert,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13912:60,assert,assert,60,https://root.cern,https://github.com/root-project/root/pull/13912,1,['assert'],['assert']
Testability,[PyROOT] Prevent module confusion when running doctest tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3204:55,test,tests,55,https://root.cern,https://github.com/root-project/root/pull/3204,1,['test'],['tests']
Testability,[PyROOT] Prevent module confusion when running doctest tests (backport 6.16),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3210:55,test,tests,55,https://root.cern,https://github.com/root-project/root/pull/3210,1,['test'],['tests']
Testability,[PyROOT] Relax memory test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15814:22,test,test,22,https://root.cern,https://github.com/root-project/root/pull/15814,1,['test'],['test']
Testability,[PyROOT] Relax overly pedantic `getattr` pythonization tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14706:55,test,tests,55,https://root.cern,https://github.com/root-project/root/pull/14706,1,['test'],['tests']
Testability,[PyROOT] Remove broken `pyroot_dependency_versions` test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15272:52,test,test,52,https://root.cern,https://github.com/root-project/root/pull/15272,1,['test'],['test']
Testability,[PyROOT] Remove now unnecessary test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15286:32,test,test,32,https://root.cern,https://github.com/root-project/root/pull/15286,1,['test'],['test']
Testability,[PyROOT] Replace non-existent assertEquals with assertEqual,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11655:30,assert,assertEquals,30,https://root.cern,https://github.com/root-project/root/pull/11655,2,['assert'],"['assertEqual', 'assertEquals']"
Testability,[PyROOT] Simplify lookup logic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5187:25,log,logic,25,https://root.cern,https://github.com/root-project/root/pull/5187,1,['log'],['logic']
Testability,[PyROOT] Test that RVec is accessible from the ROOT namespace,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7687:9,Test,Test,9,https://root.cern,https://github.com/root-project/root/pull/7687,1,['Test'],['Test']
Testability,[PyROOT] [do not merge] Test skimmed init,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14285:24,Test,Test,24,https://root.cern,https://github.com/root-project/root/pull/14285,1,['Test'],['Test']
Testability,[PyROOT][RDF] Fix logic to enable RDF tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10384:18,log,logic,18,https://root.cern,https://github.com/root-project/root/pull/10384,2,"['log', 'test']","['logic', 'tests']"
Testability,[Python] Add requirements.txt and test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408:34,test,test,34,https://root.cern,https://github.com/root-project/root/pull/5408,1,['test'],['test']
Testability,"[RDF,PyROOT] Disable RDF.AsNumpy test on 32bit since RDF is disabled",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3190:33,test,test,33,https://root.cern,https://github.com/root-project/root/pull/3190,1,['test'],['test']
Testability,[RDF] Add tests and single-thread support for RDF+TEntryList,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3245:10,test,tests,10,https://root.cern,https://github.com/root-project/root/pull/3245,1,['test'],['tests']
Testability,[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3160:34,test,tests,34,https://root.cern,https://github.com/root-project/root/pull/3160,1,['test'],['tests']
Testability,[RDF] Fix a dependency issue for an RDF test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5716:40,test,test,40,https://root.cern,https://github.com/root-project/root/pull/5716,1,['test'],['test']
Testability,[RDF] Fix a dependency issue for an RDF test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5695:40,test,test,40,https://root.cern,https://github.com/root-project/root/pull/5695,2,['test'],['test']
Testability,[RDF] Fix name change in test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2085:25,test,test,25,https://root.cern,https://github.com/root-project/root/pull/2085,1,['test'],['test']
Testability,[RDF] Move dictionary generation into RDF test to fix dependency issues.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5748:42,test,test,42,https://root.cern,https://github.com/root-project/root/pull/5748,2,['test'],['test']
Testability,[RDF] Re-enabled all test cases in dataframe_simple,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2084:21,test,test,21,https://root.cern,https://github.com/root-project/root/pull/2084,1,['test'],['test']
Testability,[RDF] Remove linking against dictionary target for RDF test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5720:55,test,test,55,https://root.cern,https://github.com/root-project/root/pull/5720,1,['test'],['test']
Testability,[RDF] Silence -Wunused-const-variable in sqlite test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5369:48,test,test,48,https://root.cern,https://github.com/root-project/root/pull/5369,1,['test'],['test']
Testability,"[RDrawable] change drawable identifier logic, simplify painting",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4469:39,log,logic,39,https://root.cern,https://github.com/root-project/root/pull/4469,1,['log'],['logic']
Testability,[RF] Add back dependency of testHistFactory on RooFitCommon,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11394:28,test,testHistFactory,28,https://root.cern,https://github.com/root-project/root/pull/11394,1,['test'],['testHistFactory']
Testability,[RF] Add logging to dataset feature in RooMinimizer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10609:9,log,logging,9,https://root.cern,https://github.com/root-project/root/pull/10609,1,['log'],['logging']
Testability,[RF] Add missing `override` keywords in `test`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11438:41,test,test,41,https://root.cern,https://github.com/root-project/root/pull/11438,1,['test'],['test']
Testability,[RF] Add testRooParamHistFunc inspired by issue #7182,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7322:9,test,testRooParamHistFunc,9,https://root.cern,https://github.com/root-project/root/pull/7322,1,['test'],['testRooParamHistFunc']
Testability,[RF] Add tests ROOT-4580 and ROOT-9528.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5599:9,test,tests,9,https://root.cern,https://github.com/root-project/root/pull/5599,1,['test'],['tests']
Testability,[RF] Add the CHEP'23 AD results as a test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12839:37,test,test,37,https://root.cern,https://github.com/root-project/root/pull/12839,1,['test'],['test']
Testability,[RF] Add unit test for pythonization of RooArgList iterator,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8042:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/8042,1,['test'],['test']
Testability,[RF] Add unit test for resetting data of NLL variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16353:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/16353,1,['test'],['test']
Testability,[RF] Added disclaimer on offsetting with new teststatistics,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11650:45,test,teststatistics,45,https://root.cern,https://github.com/root-project/root/pull/11650,1,['test'],['teststatistics']
Testability,[RF] Added interface changes for TestStatatistics classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11549:33,Test,TestStatatistics,33,https://root.cern,https://github.com/root-project/root/pull/11549,1,['Test'],['TestStatatistics']
Testability,[RF] Added interface changes for TestStatistics classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11577:33,Test,TestStatistics,33,https://root.cern,https://github.com/root-project/root/pull/11577,2,['Test'],['TestStatistics']
Testability,[RF] AddressSanitizer failures in two RooFit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11221:45,test,tests,45,https://root.cern,https://github.com/root-project/root/issues/11221,1,['test'],['tests']
Testability,[RF] Also veto Python version of TestNonCentral when `mathmore=OFF`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15058:33,Test,TestNonCentral,33,https://root.cern,https://github.com/root-project/root/pull/15058,1,['Test'],['TestNonCentral']
Testability,[RF] Avoid RooFit depenency in some RooFitCore unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8792:52,test,tests,52,https://root.cern,https://github.com/root-project/root/pull/8792,1,['test'],['tests']
Testability,[RF] Avoid including `RooMath.h` in RooFit headers and stress tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9214:62,test,tests,62,https://root.cern,https://github.com/root-project/root/pull/9214,1,['test'],['tests']
Testability,[RF] Avoid instantiating RooNLLVar directly in testRooAbsL.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16468:47,test,testRooAbsL,47,https://root.cern,https://github.com/root-project/root/pull/16468,1,['test'],['testRooAbsL']
Testability,[RF] Avoid using HistFactory class in RooFitCore tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16596:49,test,tests,49,https://root.cern,https://github.com/root-project/root/pull/16596,1,['test'],['tests']
Testability,[RF] Avoid using test statistics constructors directly in user code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10610:17,test,test,17,https://root.cern,https://github.com/root-project/root/pull/10610,1,['test'],['test']
Testability,[RF] Avoid using variable-length arrays in RooFit multiprocessing tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16777:66,test,tests,66,https://root.cern,https://github.com/root-project/root/pull/16777,1,['test'],['tests']
Testability,[RF] Batch mode returns broken logarithms when `-DVDT=OFF`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7240:31,log,logarithms,31,https://root.cern,https://github.com/root-project/root/issues/7240,1,['log'],['logarithms']
Testability,[RF] Bugfixes in RooFit BatchMode to enable also the passing of RooMCStudy tests in stressRooFit and support extended fits in subrange,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10627:75,test,tests,75,https://root.cern,https://github.com/root-project/root/pull/10627,1,['test'],['tests']
Testability,[RF] Change precision for comparisons in `testLikelihoodJob` and `testRooAbsL`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13261:42,test,testLikelihoodJob,42,https://root.cern,https://github.com/root-project/root/pull/13261,2,['test'],"['testLikelihoodJob', 'testRooAbsL']"
Testability,[RF] Change precision of RooAbsL EventSections tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12832:47,test,tests,47,https://root.cern,https://github.com/root-project/root/issues/12832,1,['test'],['tests']
Testability,[RF] Deprecate old test statistics headers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14179:19,test,test,19,https://root.cern,https://github.com/root-project/root/pull/14179,1,['test'],['test']
Testability,[RF] Disable RooFit AD tests on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15018:23,test,tests,23,https://root.cern,https://github.com/root-project/root/pull/15018,1,['test'],['tests']
Testability,[RF] Disable RooFit multiprocess ProcessTimer test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12916:46,test,test,46,https://root.cern,https://github.com/root-project/root/pull/12916,1,['test'],['test']
Testability,[RF] Disable RooJohnson unit test because of TFormula v5 bug.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3950:29,test,test,29,https://root.cern,https://github.com/root-project/root/pull/3950,1,['test'],['test']
Testability,[RF] Disable `rf501_simultaneouspdf.py` tutorial test on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11532:49,test,test,49,https://root.cern,https://github.com/root-project/root/pull/11532,1,['test'],['test']
Testability,[RF] Disable `rf615` tutorial test and `testLikelihoodJob` test that is prone to time out,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16723:30,test,test,30,https://root.cern,https://github.com/root-project/root/pull/16723,3,['test'],"['test', 'testLikelihoodJob']"
Testability,[RF] Disable `stressHistFactroy` tests if ROOT was not built with XML,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16675:33,test,tests,33,https://root.cern,https://github.com/root-project/root/pull/16675,1,['test'],['tests']
Testability,[RF] Disable interpreted RooFit/RooStats tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6019:41,test,tests,41,https://root.cern,https://github.com/root-project/root/pull/6019,1,['test'],['tests']
Testability,[RF] Enable AD code-gen test for RooFit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12451:24,test,test,24,https://root.cern,https://github.com/root-project/root/pull/12451,1,['test'],['test']
Testability,[RF] Enable RooCrystalBall test for AD,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15845:27,test,test,27,https://root.cern,https://github.com/root-project/root/pull/15845,1,['test'],['test']
Testability,[RF] Enable again the RooJSONFactoryWSTool Python tests on Mac,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9810:50,test,tests,50,https://root.cern,https://github.com/root-project/root/pull/9810,1,['test'],['tests']
Testability,[RF] Explicitly use legacy backend for references in `testRooRealL`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14755:54,test,testRooRealL,54,https://root.cern,https://github.com/root-project/root/pull/14755,1,['test'],['testRooRealL']
Testability,[RF] Final changes to make the ATLAS benchmarks run with `BatchMode`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12157:37,benchmark,benchmarks,37,https://root.cern,https://github.com/root-project/root/pull/12157,1,['benchmark'],['benchmarks']
Testability,[RF] Fix ASAN build test failures in RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11192:20,test,test,20,https://root.cern,https://github.com/root-project/root/pull/11192,1,['test'],['test']
Testability,[RF] Fix RooCategory read test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5658:26,test,test,26,https://root.cern,https://github.com/root-project/root/pull/5658,1,['test'],['test']
Testability,[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11807:85,test,test,85,https://root.cern,https://github.com/root-project/root/pull/11807,1,['test'],['test']
Testability,[RF] Fix architecture logging RooFitDriver,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10352:22,log,logging,22,https://root.cern,https://github.com/root-project/root/pull/10352,1,['log'],['logging']
Testability,[RF] Fix copy-paste error in `rf205` tutorial and related stressRooFit test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11985:71,test,test,71,https://root.cern,https://github.com/root-project/root/pull/11985,1,['test'],['test']
Testability,[RF] Fix memory leaks in `testRooParamHistFunc` and silence test output,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9477:26,test,testRooParamHistFunc,26,https://root.cern,https://github.com/root-project/root/pull/9477,2,['test'],"['test', 'testRooParamHistFunc']"
Testability,[RF] Fix memory leaks in testRooCrystalBall,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16067:25,test,testRooCrystalBall,25,https://root.cern,https://github.com/root-project/root/pull/16067,1,['test'],['testRooCrystalBall']
Testability,[RF] Fix recently-introduced `RooAbsReal::getPropagatedError` problems and add several new unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11445:96,test,tests,96,https://root.cern,https://github.com/root-project/root/pull/11445,1,['test'],['tests']
Testability,[RF] Fix skipping of zero weights in tests statistic caching,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13639:37,test,tests,37,https://root.cern,https://github.com/root-project/root/pull/13639,1,['test'],['tests']
Testability,[RF] Fix testHistFactory compilation error on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9640:9,test,testHistFactory,9,https://root.cern,https://github.com/root-project/root/pull/9640,1,['test'],['testHistFactory']
Testability,[RF] Fix testing if fit results are identical.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4114:9,test,testing,9,https://root.cern,https://github.com/root-project/root/pull/4114,1,['test'],['testing']
Testability,[RF] Fix wrong size for gradient output array in testRooFuncWrapper.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12612:49,test,testRooFuncWrapper,49,https://root.cern,https://github.com/root-project/root/pull/12612,1,['test'],['testRooFuncWrapper']
Testability,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8940:42,Test,TestStatistics,42,https://root.cern,https://github.com/root-project/root/pull/8940,2,"['Test', 'test']","['TestStatistics', 'test']"
Testability,[RF] Implement RooPolyFunc assignment operator and enable Windows test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9447:66,test,test,66,https://root.cern,https://github.com/root-project/root/pull/9447,1,['test'],['test']
Testability,[RF] Improve logging of toy generation in RooMCStudy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10509:13,log,logging,13,https://root.cern,https://github.com/root-project/root/pull/10509,1,['log'],['logging']
Testability,[RF] Improve passing `nullptr` to RooFit message logger,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10546:49,log,logger,49,https://root.cern,https://github.com/root-project/root/pull/10546,1,['log'],['logger']
Testability,[RF] Make old test statistic classes transient with `ClassDef(0)`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11909:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/11909,1,['test'],['test']
Testability,[RF] Make sure RooFit legacy backend is still tested,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14919:46,test,tested,46,https://root.cern,https://github.com/root-project/root/pull/14919,1,['test'],['tested']
Testability,[RF] Minor interface changes for TestStatistics classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11906:33,Test,TestStatistics,33,https://root.cern,https://github.com/root-project/root/pull/11906,1,['Test'],['TestStatistics']
Testability,"[RF] Modernize RooSimPdfBuilder, fix a logic error and implement test",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7489:39,log,logic,39,https://root.cern,https://github.com/root-project/root/pull/7489,2,"['log', 'test']","['logic', 'test']"
Testability,[RF] More fixes and unit tests related to the RooAddPdf normalization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11485:25,test,tests,25,https://root.cern,https://github.com/root-project/root/pull/11485,1,['test'],['tests']
Testability,[RF] More improvements to `roofitcore` unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11995:44,test,tests,44,https://root.cern,https://github.com/root-project/root/pull/11995,1,['test'],['tests']
Testability,[RF] Move remaining RooFit tests in `test/` into `roofit/`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15490:27,test,tests,27,https://root.cern,https://github.com/root-project/root/pull/15490,2,['test'],"['test', 'tests']"
Testability,[RF] Move vectorised PDF tests from roottest to roofit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16661:25,test,tests,25,https://root.cern,https://github.com/root-project/root/pull/16661,1,['test'],['tests']
Testability,[RF] New mechanism for logging and throwing errors in RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11428:23,log,logging,23,https://root.cern,https://github.com/root-project/root/pull/11428,1,['log'],['logging']
Testability,[RF] Prevent intermittent failures in testActionHelpers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7583:38,test,testActionHelpers,38,https://root.cern,https://github.com/root-project/root/pull/7583,1,['test'],['testActionHelpers']
Testability,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11791:22,log,logging,22,https://root.cern,https://github.com/root-project/root/pull/11791,2,"['Test', 'log']","['TestStatistics', 'logging']"
Testability,[RF] Refactor `testLikelihoodGradientJob.cxx`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11793:15,test,testLikelihoodGradientJob,15,https://root.cern,https://github.com/root-project/root/pull/11793,1,['test'],['testLikelihoodGradientJob']
Testability,[RF] Remove logging-related pdf members or make them transient,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11093:12,log,logging-related,12,https://root.cern,https://github.com/root-project/root/pull/11093,1,['log'],['logging-related']
Testability,[RF] Remove tutorials from `root/roofitcore/test`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11361:44,test,test,44,https://root.cern,https://github.com/root-project/root/pull/11361,1,['test'],['test']
Testability,[RF] Reorganize RooFit pythonizations to fix existing unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7753:59,test,tests,59,https://root.cern,https://github.com/root-project/root/pull/7753,1,['test'],['tests']
Testability,[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12447:25,Test,TestGetPartIntList,25,https://root.cern,https://github.com/root-project/root/pull/12447,2,"['Test', 'test']","['TestGetPartIntList', 'test']"
Testability,[RF] RooBinSamplingPdf fixes to re-enable `IntegrateBins_SubRange` test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10269:67,test,test,67,https://root.cern,https://github.com/root-project/root/pull/10269,1,['test'],['test']
Testability,[RF] RooFit::TestStatistics performance fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10832:13,Test,TestStatistics,13,https://root.cern,https://github.com/root-project/root/pull/10832,1,['Test'],['TestStatistics']
Testability,[RF] RooProdPdf test failure on s390x,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12430:16,test,test,16,https://root.cern,https://github.com/root-project/root/issues/12430,1,['test'],['test']
Testability,[RF] Several test and tutorials fail when roofit is disabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11605:13,test,test,13,https://root.cern,https://github.com/root-project/root/issues/11605,1,['test'],['test']
Testability,[RF] Silence RooWorkspace unit test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3379:31,test,test,31,https://root.cern,https://github.com/root-project/root/pull/3379,1,['test'],['test']
Testability,[RF] Small tests and bugfixes in RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4692:11,test,tests,11,https://root.cern,https://github.com/root-project/root/pull/4692,1,['test'],['tests']
Testability,[RF] Support RooPolynomial in RooFit JSON IO and improve test suite,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12232:57,test,test,57,https://root.cern,https://github.com/root-project/root/pull/12232,1,['test'],['test']
Testability,[RF] Support pdf normalization with error logging in RooBatchCompute,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12677:42,log,logging,42,https://root.cern,https://github.com/root-project/root/pull/12677,1,['log'],['logging']
Testability,[RF] Test developments in the CI,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9367:5,Test,Test,5,https://root.cern,https://github.com/root-project/root/pull/9367,1,['Test'],['Test']
Testability,[RF] Test failure on i686 only with numpy 1.24.1 (pyunittests-pyroot-roofit-roodataset-numpy),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12162:5,Test,Test,5,https://root.cern,https://github.com/root-project/root/issues/12162,1,['Test'],['Test']
Testability,[RF] Test schema evolution of RooDataHist,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8037:5,Test,Test,5,https://root.cern,https://github.com/root-project/root/issues/8037,1,['Test'],['Test']
Testability,[RF] Test schema evolution of RooDataHist from version 5 and 6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8090:5,Test,Test,5,https://root.cern,https://github.com/root-project/root/pull/8090,1,['Test'],['Test']
Testability,[RF] The testRooAbsL test compares two doubles and fails due to rounding errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389:9,test,testRooAbsL,9,https://root.cern,https://github.com/root-project/root/pull/12389,2,['test'],"['test', 'testRooAbsL']"
Testability,[RF] Update ParamHistFunc.cxx - remove bogus assertion,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12725:45,assert,assertion,45,https://root.cern,https://github.com/root-project/root/pull/12725,1,['assert'],['assertion']
Testability,[RF] Update reference files for testProxiesAndCategories,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8790:32,test,testProxiesAndCategories,32,https://root.cern,https://github.com/root-project/root/pull/8790,1,['test'],['testProxiesAndCategories']
Testability,[RF] Use local message level changes in stressRooFit to silence tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8611:64,test,tests,64,https://root.cern,https://github.com/root-project/root/pull/8611,1,['test'],['tests']
Testability,[RF] Veto `.py` tutorial tests of RooStats and HistFactory if ROOT is built without `roofit`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11609:25,test,tests,25,https://root.cern,https://github.com/root-project/root/pull/11609,1,['test'],['tests']
Testability,"[RF] `rootbench-benchJohnson` fills log with ""use fixCoefNormalization!""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7639:36,log,log,36,https://root.cern,https://github.com/root-project/root/issues/7639,1,['log'],['log']
Testability,[RF] add LikelihoodJob support and some RooFit::TestStatistics fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10966:48,Test,TestStatistics,48,https://root.cern,https://github.com/root-project/root/pull/10966,1,['Test'],['TestStatistics']
Testability,[RF] compiler-dependent RooNaNPacker tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15908:37,test,tests,37,https://root.cern,https://github.com/root-project/root/pull/15908,1,['test'],['tests']
Testability,[RF] investigate and fix MultiProcess::Queue test timeout,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15494:45,test,test,45,https://root.cern,https://github.com/root-project/root/issues/15494,1,['test'],['test']
Testability,[RF] testRooGradMinimizerFcn needs to be re-enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8697:5,test,testRooGradMinimizerFcn,5,https://root.cern,https://github.com/root-project/root/issues/8697,1,['test'],['testRooGradMinimizerFcn']
Testability,[RF] update MultiProcess/TestStatistics docs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16788:25,Test,TestStatistics,25,https://root.cern,https://github.com/root-project/root/pull/16788,1,['Test'],['TestStatistics']
Testability,[RF][HS3] Fix dicts instead of lists option and general HistFactory test improvements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13537:68,test,test,68,https://root.cern,https://github.com/root-project/root/pull/13537,1,['test'],['test']
Testability,[RF][PyROOT] Avoid boolean operators on numpy arrays in unit test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13612:61,test,test,61,https://root.cern,https://github.com/root-project/root/pull/13612,1,['test'],['test']
Testability,[RF][PyROOT] Move RooFit pythonization tests from roottest to main repo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11610:39,test,tests,39,https://root.cern,https://github.com/root-project/root/pull/11610,1,['test'],['tests']
Testability,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13150:59,log,logic,59,https://root.cern,https://github.com/root-project/root/pull/13150,1,['log'],['logic']
Testability,[RF][Windows] Re-enable `testRooFuncWrapper`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15026:25,test,testRooFuncWrapper,25,https://root.cern,https://github.com/root-project/root/pull/15026,1,['test'],['testRooFuncWrapper']
Testability,"[RHist] Move RAxis to an inheritance-based design, improve tests, fix many bugs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4933:59,test,tests,59,https://root.cern,https://github.com/root-project/root/pull/4933,1,['test'],['tests']
Testability,[RNTupleDS] Test reading data,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6336:12,Test,Test,12,https://root.cern,https://github.com/root-project/root/pull/6336,1,['Test'],['Test']
Testability,[RNTuple] Add test for compression algorithm,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5179:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/5179,1,['test'],['test']
Testability,[ROOT-10190] Excluded fastcloningeventtree test in roottest.git should be re-enabled back,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14579:43,test,test,43,https://root.cern,https://github.com/root-project/root/issues/14579,1,['test'],['test']
Testability,"[ROOT-10277] When creating a lot of datasets in RooFit, TFoam eventually; crashed, since it was using a TRefArray, which does some global UID; magic that overflows. Replacing the TRefArray by a simple vector of; indices fixes that.; This is possible, since the TRefArray only points to active elements in; another collection, so simply storing the index in that collection is; sufficient. A ROOT-6.20 TFoam was created on lxplus, and written to a file. Reading; this file, and generating the 10 next random numbers is tested now. @pcanal ; Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this?; ```; TFoamCell **fCells;; fCells = onfile.fCells;; ```; It seems to work, but I'm unsure if that's just by luck (e.g. since the file is still open).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5412:518,test,tested,518,https://root.cern,https://github.com/root-project/root/pull/5412,1,['test'],['tested']
Testability,[ROOT-10472] Fix building clingutils tests with builtin_clang=OFF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4749:37,test,tests,37,https://root.cern,https://github.com/root-project/root/pull/4749,2,['test'],['tests']
Testability,[ROOT-10527][RDF] Split tests and add test for Display action and fix bug for displaying std::string,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4850:24,test,tests,24,https://root.cern,https://github.com/root-project/root/pull/4850,2,['test'],"['test', 'tests']"
Testability,"[ROOT-10586](https://sft.its.cern.ch/jira/browse/ROOT-10586) is caused by a missing `<cmath>` include, which resulted in old GCC 6 not ""seeing"" the floating-point overloads of `std::abs` and getting confused at which integer overload of `std::abs` it should pick when a `double` is passed in. This was not caught during testing because we test on recent compilers with a C++17-compatible STL implementation, where if you see some overloads of `std::abs`, you see all of them. By switching to `std::fabs` in addition to fixing the include, I guarantee that if this happens again during an overeager include cleanup, the compiler error message will be clearer. Old compilers will now complain about a missing declaration of `std::fabs`, rather than a failed overload resolution of integer `std::abs`. Fixes ROOT-10586.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5062:320,test,testing,320,https://root.cern,https://github.com/root-project/root/pull/5062,2,['test'],"['test', 'testing']"
Testability,"[ROOT-10605] When selecting a slice of a RooSimultaneous for plotting,; the last-active slice was plotted, ignoring the selection. This PR is already in master, and will be tested there on Thursday. This will allow merging the backport in time for Friday.; (Automated testing is tricky, since it's about plotting.). Duplicates: [ROOT-2936]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5134:173,test,tested,173,https://root.cern,https://github.com/root-project/root/pull/5134,2,['test'],"['tested', 'testing']"
Testability,"[ROOT-10713][ROOT-7986] Several objects were leaking when being read from a file. This is because ownership was unclear, and because reading apparently wasn't tested.; Here; - Four leaks are fixed; - A reading test is added (which is reading the object that revealed all the leaks. This tests both for leaks in address sanitizer builds, but also ensures that the updated streamers still work.); - A container overflow detected by address sanitizer is fixed.; - And the includes of RooRealVar are stripped down significantly. This is nice for RooFit, since almost everything includes RooRealVar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5466:159,test,tested,159,https://root.cern,https://github.com/root-project/root/pull/5466,3,['test'],"['test', 'tested', 'tests']"
Testability,"[ROOT-10810] When RooTreeDataStore is streamed without a TFile (happens; when pickling), a memory-resident tree in RooTreeDataStore fails to; pickle.; It had to be taken out of ROOT's streamer facilities, since it often; exceeds the 1 Gb size limit for streaming operations. Test in [roottest/#530](https://github.com/root-project/roottest/pull/530)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5769:275,Test,Test,275,https://root.cern,https://github.com/root-project/root/pull/5769,1,['Test'],['Test']
Testability,[RooFit] Fix race condition when running tutorial tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2936:50,test,tests,50,https://root.cern,https://github.com/root-project/root/pull/2936,1,['test'],['tests']
Testability,[See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5591-ROOT-performance-centos7-multicore-default&date=2020-05-20).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82967/console).; ### Failing tests:; - [projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82967/testReport/projectroot.core.meta/test/gtest_core_meta_test_testStatusBitsChecker/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTHn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82967/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_testTHn/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTF1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82967/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_testTF1/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_stressMathCoreUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82967/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_stressMathCoreUnit/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82967/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_sqlite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82967/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_sqlite/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82967/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [project,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591#issuecomment-631345536:1138,test,test,1138,https://root.cern,https://github.com/root-project/root/pull/5591#issuecomment-631345536,1,['test'],['test']
Testability,[See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5928-mac1014-python3&date=2020-06-25).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87987/console).; ### Failing tests:; - [projectroot.roottest.scripts.roottest_scripts_utils](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87987/testReport/projectroot.roottest/scripts/roottest_scripts_utils/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87987/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rooworkspace](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87987/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rooworkspace/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_string_view_backport](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87987/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_string_view_backport/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87987/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_tcomplex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87987/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_tcomplex/); - [projectroot.core.base.test.gtest_core_base_test_CoreBaseTests](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87987/testReport/projectroot.core.base/test/gtest_core_base_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5928#issuecomment-649484589:1092,test,test,1092,https://root.cern,https://github.com/root-project/root/pull/5928#issuecomment-649484589,1,['test'],['test']
Testability,[See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31975/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/CNN/TestReshape.h:45:54: warning: declaration of ‘using Matrix_t = using Matrix_t = class TMatrixT&lt;double&gt;’ shadows a global declaration [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/CNN/TestReshape.h:85:55: warning: declaration of ‘using Matrix_t = using Matrix_t = class TMatrixT&lt;double&gt;’ shadows a global declaration [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/CNN/TestReshape.h:147:55: warning: declaration of ‘using Matrix_t = using Matrix_t = class TMatrixT&lt;double&gt;’ shadows a global declaration [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/CNN/TestReshape.h:45:54: warning: declaration of ‘using Matrix_t = using Matrix_t = class TMVA::DNN::TCpuMatrix&lt;double&gt;’ shadows a global declaration [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/CNN/TestReshape.h:85:55: warning: declaration of ‘using Matrix_t = using Matrix_t = class TMVA::DNN::TCpuMatrix&lt;double&gt;’ shadows a global declaration [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/CNN/TestReshape.h:147:55: warning: declaration of ‘using Matrix_t = using Matrix_t = class TMVA::DNN::TCpuMatrix&lt;double&gt;’ shadows a global declaration [-Wshadow] ; - include/ROOT/RDFInterface.hxx:102:38: warning: ‘ROOT::RDF::RInterface&lt;ROOT::Detail::RDF::RLoopManager&gt;::fCustomColumns’ will be initialized after [-Wreorder] ; - include/ROOT/RDFInterface.hxx:98:37: warning: ‘ROOT::RDF::RDataSource* const ROOT::RDF::RInterface&lt;ROOT::Detail::RDF::RLoopManager&gt;::fDataSource’ [-Wreorder] ; - include/ROOT/RDFInterface.hxx:1820:4: warning: when initialized here [-Wreorder] ; - include/ROOT/RDFInterfaceUtils.hxx:301:44: warning: parameter ‘,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2259#issuecomment-403057455:1129,test,test,1129,https://root.cern,https://github.com/root-project/root/pull/2259#issuecomment-403057455,2,"['Test', 'test']","['TestReshape', 'test']"
Testability,[See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32011/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/CNN/TestReshape.h:45:54: warning: declaration of ‘using Matrix_t = using Matrix_t = class TMatrixT&lt;double&gt;’ shadows a global declaration [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/CNN/TestReshape.h:85:55: warning: declaration of ‘using Matrix_t = using Matrix_t = class TMatrixT&lt;double&gt;’ shadows a global declaration [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/CNN/TestReshape.h:147:55: warning: declaration of ‘using Matrix_t = using Matrix_t = class TMatrixT&lt;double&gt;’ shadows a global declaration [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/CNN/TestReshape.h:45:54: warning: declaration of ‘using Matrix_t = using Matrix_t = class TMVA::DNN::TCpuMatrix&lt;double&gt;’ shadows a global declaration [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/CNN/TestReshape.h:85:55: warning: declaration of ‘using Matrix_t = using Matrix_t = class TMVA::DNN::TCpuMatrix&lt;double&gt;’ shadows a global declaration [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/CNN/TestReshape.h:147:55: warning: declaration of ‘using Matrix_t = using Matrix_t = class TMVA::DNN::TCpuMatrix&lt;double&gt;’ shadows a global declaration [-Wshadow] ; - include/ROOT/RDFInterfaceUtils.hxx:301:44: warning: parameter ‘nSlots’ set but not used [-Wunused-but-set-parameter] ; - include/ROOT/RDFInterfaceUtils.hxx:301:44: warning: parameter ‘nSlots’ set but not used [-Wunused-but-set-parameter] ; - include/ROOT/RDFInterfaceUtils.hxx:301:44: warning: parameter ‘nSlots’ set but not used [-Wunused-but-set-parameter] ; - include/ROOT/RDFInterfaceUtils.hxx:301:44: warning: parameter ‘nSlots’ set but not used [-Wunused-but-set-parameter] . An,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2259#issuecomment-403102415:1129,test,test,1129,https://root.cern,https://github.com/root-project/root/pull/2259#issuecomment-403102415,2,"['Test', 'test']","['TestReshape', 'test']"
Testability,[See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32047/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/CNN/TestReshape.h:45:54: warning: declaration of ‘using Matrix_t = using Matrix_t = class TMatrixT&lt;double&gt;’ shadows a global declaration [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/CNN/TestReshape.h:85:55: warning: declaration of ‘using Matrix_t = using Matrix_t = class TMatrixT&lt;double&gt;’ shadows a global declaration [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/CNN/TestReshape.h:147:55: warning: declaration of ‘using Matrix_t = using Matrix_t = class TMatrixT&lt;double&gt;’ shadows a global declaration [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/CNN/TestReshape.h:45:54: warning: declaration of ‘using Matrix_t = using Matrix_t = class TMVA::DNN::TCpuMatrix&lt;double&gt;’ shadows a global declaration [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/CNN/TestReshape.h:85:55: warning: declaration of ‘using Matrix_t = using Matrix_t = class TMVA::DNN::TCpuMatrix&lt;double&gt;’ shadows a global declaration [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/CNN/TestReshape.h:147:55: warning: declaration of ‘using Matrix_t = using Matrix_t = class TMVA::DNN::TCpuMatrix&lt;double&gt;’ shadows a global declaration [-Wshadow] . ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32047/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32047/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2259#issuecomment-403391139:1129,test,test,1129,https://root.cern,https://github.com/root-project/root/pull/2259#issuecomment-403391139,2,"['Test', 'test']","['TestReshape', 'test']"
Testability,[See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3722/console).; ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3722/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3722/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3722/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3722/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execOld/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3722/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3722/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3722/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3722/tes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793#issuecomment-319053671:1036,test,testReport,1036,https://root.cern,https://github.com/root-project/root/pull/793#issuecomment-319053671,1,['test'],['testReport']
Testability,[See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3770/console).; ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3770/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3770/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3770/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3770/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execOld/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3770/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3770/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3770/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3770/t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/827#issuecomment-319472855:1036,test,testReport,1036,https://root.cern,https://github.com/root-project/root/pull/827#issuecomment-319472855,1,['test'],['testReport']
Testability,[See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3785/console).; ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3785/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3785/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3785/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3785/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execOld/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3785/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3785/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3785/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3785/tes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/827#issuecomment-319616419:1036,test,testReport,1036,https://root.cern,https://github.com/root-project/root/pull/827#issuecomment-319616419,1,['test'],['testReport']
Testability,[See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3786/console).; ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3786/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3786/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3786/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3786/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execOld/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3786/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3786/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3786/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3786/testReport/projectroot.ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/827#issuecomment-319614643:1036,test,testReport,1036,https://root.cern,https://github.com/root-project/root/pull/827#issuecomment-319614643,1,['test'],['testReport']
Testability,[See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4027/console).; ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4027/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4027/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4027/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4027/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execOld/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4027/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4027/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4027/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4027/testReport/projectroot.roottest.ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793#issuecomment-321199218:1036,test,testReport,1036,https://root.cern,https://github.com/root-project/root/pull/793#issuecomment-321199218,1,['test'],['testReport']
Testability,[See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/77447/console).; ### Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/77447/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.cling.staticConstTreatment.roottest_cling_staticConstTreatment_myClass_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/77447/testReport/projectroot.roottest.cling/staticConstTreatment/roottest_cling_staticConstTreatment_myClass_libgen_build/); - [projectroot.roottest.cling.other.roottest_cling_other_testCompile_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/77447/testReport/projectroot.roottest.cling/other/roottest_cling_other_testCompile_build/); - [projectroot.roottest.cling.stl.default.roottest_cling_stl_default_dict_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/77447/testReport/projectroot.roottest.cling.stl/default/roottest_cling_stl_default_dict_build/); - [projectroot.roottest.cling.staticConstTreatment.roottest_cling_staticConstTreatment_Odin_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/77447/testReport/projectroot.roottest.cling/staticConstTreatment/roottest_cling_staticConstTreatment_Odin_libgen_build/); - [projectroot.roottest.cling.stl.map.roottest_cling_stl_map_MyClass_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/77447/testReport/projectroot.roottest.cling.stl/map/roottest_cling_stl_map_MyClass_build/); - [projectroot.roottest.cling.stl.map.roottest_cling_stl_map_stringMapLoad_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/77447/testReport/projectroot.roottest.cling.stl/map/roottest_cling_stl_map_stringMapLoad_build/); - [projectroot.roottest.cling.stl.map.roottest_cling_stl_map_MyOpClass_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/77447/testReport,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4939#issuecomment-582518323:1053,test,testReport,1053,https://root.cern,https://github.com/root-project/root/pull/4939#issuecomment-582518323,1,['test'],['testReport']
Testability,[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102580/console).; ### Failing tests:; - [projectroot.roottest.scripts.roottest_scripts_utils](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102580/testReport/projectroot.roottest/scripts/roottest_scripts_utils/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_pythonizations](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102580/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_pythonizations/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102580/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.python.stl.roottest_python_stl_stl](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102580/testReport/projectroot.roottest.python/stl/roottest_python_stl_stl/); - [projectroot.roottest.root.io.alloc.roottest_root_io_alloc_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102580/testReport/projectroot.roottest.root.io/alloc/roottest_root_io_alloc_make/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102580/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102580/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102580/testReport/projectroot.roottest.root.tree/fastcl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6873#issuecomment-732491936:1135,test,testReport,1135,https://root.cern,https://github.com/root-project/root/pull/6873#issuecomment-732491936,1,['test'],['testReport']
Testability,[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105135/console).; ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105135/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.test.test_stressentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105135/testReport/projectroot/test/test_stressentrylist/); - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_forwardList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105135/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_forwardList/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tsenums](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105135/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tsenums/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105135/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.test.test_stressentrylist_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105135/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.test.test_TFormulaTests](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105135/testReport/projectroot/test/test_TFormulaTests/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105135/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.test.test_stressgraphics_interpreted](https://lcgapp-services.cern.ch/root-jenkins/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7073#issuecomment-764009130:1130,test,testReport,1130,https://root.cern,https://github.com/root-project/root/pull/7073#issuecomment-764009130,1,['test'],['testReport']
Testability,[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117260/console).; ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117260/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_array_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117260/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_array_interface/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_branch_attr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117260/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_branch_attr/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_setbranchaddress](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117260/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_setbranchaddress/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_branch](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117260/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_branch/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117260/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117260/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8124#issuecomment-834742180:1119,test,test,1119,https://root.cern,https://github.com/root-project/root/pull/8124#issuecomment-834742180,1,['test'],['test']
Testability,[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/130496/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf611_weightedfits](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/130496/testReport/projectroot/runtutorials/tutorial_roofit_rf611_weightedfits/); - [projectroot.roofit.histfactory.test.gtest_roofit_histfactory_test_testHistFactory](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/130496/testReport/projectroot.roofit.histfactory/test/gtest_roofit_histfactory_test_testHistFactory/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testSumW2Error](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/130496/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testSumW2Error/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooAbsPdf](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/130496/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooAbsPdf/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testTestStatistics](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/130496/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testTestStatistics/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooGradMinimizerFcn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/130496/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooGradMinimizerFcn/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testLikelihoodSerial](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/130496/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testLikelihoodSerial/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testNaNPacker](https:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9324#issuecomment-976855106:1153,test,testReport,1153,https://root.cern,https://github.com/root-project/root/pull/9324#issuecomment-976855106,1,['test'],['testReport']
Testability,[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148394/console).; ### Failing tests:; - [projectroot.roottest.cling.autoauto.roottest_cling_autoauto_assertROOT8445_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148394/testReport/projectroot.roottest.cling/autoauto/roottest_cling_autoauto_assertROOT8445_auto/); - [projectroot.roottest.cling.threading.roottest_cling_threading_clinglock_staticinit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148394/testReport/projectroot.roottest.cling/threading/roottest_cling_threading_clinglock_staticinit/); - [projectroot.roottest.root.multicore.roottest_root_multicore_execautoloadts](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148394/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_execautoloadts/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148394/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibs/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibsAZ](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148394/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibsAZ/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibsZA](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148394/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibsZA/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execBrowseNonAccessibleType](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148394/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execBrowseNonAccessibleType/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10830#issuecomment-1167832456:1166,test,testReport,1166,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1167832456,4,['test'],['testReport']
Testability,[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150186/console).; ### Failing tests:; - [projectroot.roottest.python.distrdf.dask.roottest_python_distrdf_dask_test_all](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150186/testReport/projectroot.roottest.python.distrdf/dask/roottest_python_distrdf_dask_test_all/); - [projectroot.roottest.python.distrdf.spark.roottest_python_distrdf_spark_test_all](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150186/testReport/projectroot.roottest.python.distrdf/spark/roottest_python_distrdf_spark_test_all/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rstandardscaler](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150186/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rstandardscaler/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rreader](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150186/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rreader/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_csv](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150186/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_csv/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_sqlite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150186/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_sqlite/); - [projectroot.test.test_stressIOPlugins_http](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150186/testReport/projectroot/test/test_stressIOPlugins_http/); - [projectroot.test.test_stresshistogram_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150186/testReport/projectroot/test/test_stresshistogram_interpreted/); - [projectroot.io.io.test.gtest_io_io_te,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10896#issuecomment-1190095287:1150,test,testReport,1150,https://root.cern,https://github.com/root-project/root/pull/10896#issuecomment-1190095287,1,['test'],['testReport']
Testability,[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150193/console).; ### Failing tests:; - [projectroot.roottest.python.distrdf.dask.roottest_python_distrdf_dask_test_all](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150193/testReport/projectroot.roottest.python.distrdf/dask/roottest_python_distrdf_dask_test_all/); - [projectroot.roottest.python.distrdf.spark.roottest_python_distrdf_spark_test_all](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150193/testReport/projectroot.roottest.python.distrdf/spark/roottest_python_distrdf_spark_test_all/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rstandardscaler](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150193/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rstandardscaler/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rreader](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150193/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rreader/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_csv](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150193/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_csv/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_sqlite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150193/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_sqlite/); - [projectroot.test.test_stressIOPlugins_http](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150193/testReport/projectroot/test/test_stressIOPlugins_http/); - [projectroot.test.test_stresshistogram_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150193/testReport/projectroot/test/test_stresshistogram_interpreted/); - [projectroot.io.io.test.gtest_io_io_te,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11003#issuecomment-1190300214:1150,test,testReport,1150,https://root.cern,https://github.com/root-project/root/pull/11003#issuecomment-1190300214,1,['test'],['testReport']
Testability,[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150200/console).; ### Failing tests:; - [projectroot.roottest.python.distrdf.spark.roottest_python_distrdf_spark_test_all](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150200/testReport/projectroot.roottest.python.distrdf/spark/roottest_python_distrdf_spark_test_all/); - [projectroot.roottest.python.distrdf.dask.roottest_python_distrdf_dask_test_all](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150200/testReport/projectroot.roottest.python.distrdf/dask/roottest_python_distrdf_dask_test_all/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rstandardscaler](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150200/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rstandardscaler/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rreader](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150200/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rreader/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_csv](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150200/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_csv/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_sqlite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150200/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_sqlite/); - [projectroot.io.io.test.gtest_io_io_test_RRawFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150200/testReport/projectroot.io.io/test/gtest_io_io_test_RRawFile/); - [projectroot.net.davix.test.gtest_net_davix_test_RRawFileDavix](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150200/testReport/projectroot.net.davix/test/gtest_net_davix_test_RRawFileDavix/); - [p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10896#issuecomment-1190340359:1150,test,testReport,1150,https://root.cern,https://github.com/root-project/root/pull/10896#issuecomment-1190340359,1,['test'],['testReport']
Testability,[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150207/console).; ### Failing tests:; - [projectroot.roottest.python.distrdf.dask.roottest_python_distrdf_dask_test_all](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150207/testReport/projectroot.roottest.python.distrdf/dask/roottest_python_distrdf_dask_test_all/); - [projectroot.roottest.python.distrdf.spark.roottest_python_distrdf_spark_test_all](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150207/testReport/projectroot.roottest.python.distrdf/spark/roottest_python_distrdf_spark_test_all/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rstandardscaler](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150207/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rstandardscaler/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rreader](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150207/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rreader/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_csv](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150207/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_csv/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_sqlite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150207/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_sqlite/); - [projectroot.test.test_stressIOPlugins_http](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150207/testReport/projectroot/test/test_stressIOPlugins_http/); - [projectroot.test.test_stresshistogram_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150207/testReport/projectroot/test/test_stresshistogram_interpreted/); - [projectroot.io.io.test.gtest_io_io_te,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10934#issuecomment-1190348621:1150,test,testReport,1150,https://root.cern,https://github.com/root-project/root/pull/10934#issuecomment-1190348621,1,['test'],['testReport']
Testability,[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150543/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_dataframe_df105_WBosonAnalysis_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150543/testReport/projectroot/runtutorials/tutorial_dataframe_df105_WBosonAnalysis_py/); - [projectroot.runtutorials.tutorial_dataframe_df106_HiggsToFourLeptons_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150543/testReport/projectroot/runtutorials/tutorial_dataframe_df106_HiggsToFourLeptons_py/); - [projectroot.runtutorials.tutorial_dataframe_df107_SingleTopAnalysis_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150543/testReport/projectroot/runtutorials/tutorial_dataframe_df107_SingleTopAnalysis_py/); - [projectroot.roottest.cling.function.roottest_cling_function_runoverloadResolution](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150543/testReport/projectroot.roottest.cling/function/roottest_cling_function_runoverloadResolution/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_cintrun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150543/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_cintrun/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_runreferenceuse](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150543/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_runreferenceuse/); - [projectroot.roottest.cling.offset.roottest_cling_offset_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150543/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_compiled/); - [projectroot.roottest.cling.operator.roottest_cling_operator_ConversionOp](https://lcgapp-services.cern.ch/root-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11046#issuecomment-1194702008:1138,test,testReport,1138,https://root.cern,https://github.com/root-project/root/pull/11046#issuecomment-1194702008,1,['test'],['testReport']
Testability,[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150690/console).; ### Failing tests:; - [projectroot.roottest.python.distrdf.dask.roottest_python_distrdf_dask_test_all](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150690/testReport/projectroot.roottest.python.distrdf/dask/roottest_python_distrdf_dask_test_all/); - [projectroot.roottest.python.distrdf.spark.roottest_python_distrdf_spark_test_all](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150690/testReport/projectroot.roottest.python.distrdf/spark/roottest_python_distrdf_spark_test_all/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rstandardscaler](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150690/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rstandardscaler/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rreader](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150690/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rreader/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_definepersample](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150690/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_definepersample/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_samplecallback](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150690/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_samplecallback/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_root](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150690/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_root/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11063#issuecomment-1197340433:1150,test,testReport,1150,https://root.cern,https://github.com/root-project/root/pull/11063#issuecomment-1197340433,1,['test'],['testReport']
Testability,[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150691/console).; ### Failing tests:; - [projectroot.roottest.python.distrdf.spark.roottest_python_distrdf_spark_test_all](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150691/testReport/projectroot.roottest.python.distrdf/spark/roottest_python_distrdf_spark_test_all/); - [projectroot.roottest.python.distrdf.dask.roottest_python_distrdf_dask_test_all](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150691/testReport/projectroot.roottest.python.distrdf/dask/roottest_python_distrdf_dask_test_all/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rstandardscaler](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150691/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rstandardscaler/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rreader](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150691/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rreader/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_definepersample](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150691/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_definepersample/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_samplecallback](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150691/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_samplecallback/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_root](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150691/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_root/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11063#issuecomment-1197437979:1140,test,testReport,1140,https://root.cern,https://github.com/root-project/root/pull/11063#issuecomment-1197437979,1,['test'],['testReport']
Testability,[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85307/console).; ### Errors:; - [2020-06-05T06:00:42.433Z] 916/2030 Test #663: tutorial-multicore-imt001_parBranchProcessing .....................................................***Failed Error regular expression found in output. Regex=[: error:] 1.19 sec ; - [2020-06-05T06:00:44.411Z] 934/2030 Test #688: tutorial-roofit-rf105_funcbinding .................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.05 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85307/testReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/); - [projectroot.runtutorials.tutorial_multicore_imt001_parBranchProcessing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85307/testReport/projectroot/runtutorials/tutorial_multicore_imt001_parBranchProcessing/); - [projectroot.runtutorials.tutorial_multicore_mp201_parallelHistoFill](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85307/testReport/projectroot/runtutorials/tutorial_multicore_mp201_parallelHistoFill/); - [projectroot.runtutorials.tutorial_roofit_rf105_funcbinding](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85307/testReport/projectroot/runtutorials/tutorial_roofit_rf105_funcbinding/); - [projectroot.runtutorials.tutorial_multicore_mp102_readNtuplesFillHistosAndFit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85307/testReport/projectroot/runtutorials/tutorial_multicore_mp102_readNtuplesFillHistosAndFit/); - [projectroot.runtutorials.tutorial_tmva_envelope_classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85307/testReport/projectroot/runtutorials/tutorial_tmva_envelope_classification/); - [projectroot.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-639280978:1298,test,testReport,1298,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-639280978,1,['test'],['testReport']
Testability,[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96712/console).; ### Warnings:; - [2020-09-24T18:01:20.229Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/io/io/src/TGenCollectionProxy.cxx:391:21: warning: unused variable 'enumTable' [-Wunused-variable] . ### Failing tests:; - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_branchlessForest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96712/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_branchlessForest/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rbdt](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96712/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rbdt/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_sqlite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96712/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_sqlite/); - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treetreeplayertestUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96712/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treetreeplayertestUnit/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96712/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.io.tclass.roottest_root_io_tclass_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96712/testReport/projectroot.roottest.root.io/tclass/roottest_root_io_tclass_make/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_aclicDataMemberSelection](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96712/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6445#issuecomment-698508826:1106,test,test,1106,https://root.cern,https://github.com/root-project/root/pull/6445#issuecomment-698508826,1,['test'],['test']
Testability,[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96716/console).; ### Warnings:; - [2020-09-24T21:56:34.882Z] /build/workspace/root-pullrequests-build/root/io/io/src/TGenCollectionProxy.cxx:391:21: warning: unused variable ‘enumTable’ [-Wunused-variable] . ### Failing tests:; - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_forwardList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96716/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_forwardList/); - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treetreeplayertestUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96716/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treetreeplayertestUnit/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96716/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.io.tclass.roottest_root_io_tclass_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96716/testReport/projectroot.roottest.root.io/tclass/roottest_root_io_tclass_make/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_aclicDataMemberSelection](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96716/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_aclicDataMemberSelection/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execCheckSum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96716/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execCheckSum/); - [projectroot.roottest.root.meta.evolution.version5.roottest_root_meta_evolution_version5_execNestedColl](https://lcga,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6445#issuecomment-698616890:1129,test,testReport,1129,https://root.cern,https://github.com/root-project/root/pull/6445#issuecomment-698616890,1,['test'],['testReport']
Testability,[TChain] Add test for ROOT-10672,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5508:13,test,test,13,https://root.cern,https://github.com/root-project/root/pull/5508,1,['test'],['test']
Testability,[TCling] Separate test for GetCppName,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15432:18,test,test,18,https://root.cern,https://github.com/root-project/root/pull/15432,1,['test'],['test']
Testability,[TDF] Add a google test for Range,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1652:19,test,test,19,https://root.cern,https://github.com/root-project/root/pull/1652,1,['test'],['test']
Testability,[TDF] Add test for Snapshotting of branches with custom titles,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1560:10,test,test,10,https://root.cern,https://github.com/root-project/root/pull/1560,2,['test'],['test']
Testability,[TDF] Add tests for using friend trees in `Define`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1148:10,test,tests,10,https://root.cern,https://github.com/root-project/root/pull/1148,1,['test'],['tests']
Testability,[TDF] Delete all output files at the exit of a test case,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2057:47,test,test,47,https://root.cern,https://github.com/root-project/root/pull/2057,3,['test'],['test']
Testability,[TDF] Do not run IMT Snapshot tests in noimt builds,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1101:30,test,tests,30,https://root.cern,https://github.com/root-project/root/pull/1101,1,['test'],['tests']
Testability,[TDF] Do not run imt test on noimt builds,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1222:21,test,test,21,https://root.cern,https://github.com/root-project/root/pull/1222,1,['test'],['test']
Testability,[TDF] Fix dataframe_friends test after array_view->TArrayBranch change,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1309:28,test,test,28,https://root.cern,https://github.com/root-project/root/pull/1309,1,['test'],['test']
Testability,[TDF] Fixes and test for callbacks,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1194:16,test,test,16,https://root.cern,https://github.com/root-project/root/pull/1194,1,['test'],['test']
Testability,[TDF] More snapshot tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1691:20,test,tests,20,https://root.cern,https://github.com/root-project/root/pull/1691,1,['test'],['tests']
Testability,[TDF] Only compile the type guessing logic when needed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/345:37,log,logic,37,https://root.cern,https://github.com/root-project/root/pull/345,1,['log'],['logic']
Testability,[TDF] ROOT-9227: Implement TLazyDS and its tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1601:43,test,tests,43,https://root.cern,https://github.com/root-project/root/pull/1601,1,['test'],['tests']
Testability,[TDF] Refactor snapshot tests and add more coverage,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1086:24,test,tests,24,https://root.cern,https://github.com/root-project/root/pull/1086,1,['test'],['tests']
Testability,[TDF] Rework the cache test about non copiable items,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1134:23,test,test,23,https://root.cern,https://github.com/root-project/root/pull/1134,1,['test'],['test']
Testability,[TDF] Simplify action creation logic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/348:31,log,logic,31,https://root.cern,https://github.com/root-project/root/pull/348,1,['log'],['logic']
Testability,"[TDF] Simplify logic, reduce instructions in column value reading",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1060:15,log,logic,15,https://root.cern,https://github.com/root-project/root/pull/1060,1,['log'],['logic']
Testability,[TDF] Temporarily disable CArraysFromTree test in dataframe_simple,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2051:42,test,test,42,https://root.cern,https://github.com/root-project/root/pull/2051,1,['test'],['test']
Testability,[TDF] Test friend trees' branches which contain arrays,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1145:6,Test,Test,6,https://root.cern,https://github.com/root-project/root/pull/1145,1,['Test'],['Test']
Testability,[TDF] Test that we actually read the friend branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1773:6,Test,Test,6,https://root.cern,https://github.com/root-project/root/pull/1773,2,['Test'],['Test']
Testability,"[TDF][TO REVERT] Disable dataframe_{interface,simple} tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1906:54,test,tests,54,https://root.cern,https://github.com/root-project/root/pull/1906,1,['test'],['tests']
Testability,[TEST DO NOT MERGE] [ci] Ignore architecture dimension in the Mac job matrix,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16448:1,TEST,TEST,1,https://root.cern,https://github.com/root-project/root/pull/16448,1,['TEST'],['TEST']
Testability,[TEST] Checking PRs for cxxmodules and rt cxxmodules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2816:1,TEST,TEST,1,https://root.cern,https://github.com/root-project/root/pull/2816,1,['TEST'],['TEST']
Testability,[TEST] testing RT cxxmodules in PRS,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2818:1,TEST,TEST,1,https://root.cern,https://github.com/root-project/root/pull/2818,2,"['TEST', 'test']","['TEST', 'testing']"
Testability,[TMVA exp][ROOT-10417] Fix bug in RTensor tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4663:42,test,tests,42,https://root.cern,https://github.com/root-project/root/pull/4663,1,['test'],['tests']
Testability,[TMVA experimental] Veto BDT inference tests on 32bit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4464:39,test,tests,39,https://root.cern,https://github.com/root-project/root/pull/4464,1,['test'],['tests']
Testability,"[TMVA] API-Support for SGD Optimizer:; * Add Base Class VOptimizer.; * Add Derived Class TSGD with Momentum implementation.; * Add Unit Tests for SGD Optimizer.; * Modify the MethodDL Tests to include parsing options for Optimizer. An example Training Strategy string may look like,. ```; ""LearningRate=1e-1,Optimizer=SGD,Momentum=0.9,Repetitions=1,""; ""ConvergenceSteps=20,BatchSize=256,TestRepetitions=10,""; ""WeightDecay=1e-4,Regularization=L2,""; ""DropConfig=0.0+0.5+0.5+0.5, Multithreading=True""; ```. Reference Implementation: Tensorflow; Blog Post: https://www.sravikiran.com/GSOC18//2018/07/09/sgd/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2309:136,Test,Tests,136,https://root.cern,https://github.com/root-project/root/pull/2309,3,['Test'],"['TestRepetitions', 'Tests']"
Testability,[TMVA] Add PyMVA method PyKeras and enable PyMVA specific unit-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/280:63,test,tests,63,https://root.cern,https://github.com/root-project/root/pull/280,1,['test'],['tests']
Testability,[TMVA] Add bold headers for Train/Test/EvaluateAllMethods,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/273:34,Test,Test,34,https://root.cern,https://github.com/root-project/root/pull/273,1,['Test'],['Test']
Testability,[TMVA] Backport of using a unique XML file for the CV tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10023:54,test,tests,54,https://root.cern,https://github.com/root-project/root/pull/10023,1,['test'],['tests']
Testability,[TMVA] Correctly link `blas` in PyMVA tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15278:38,test,tests,38,https://root.cern,https://github.com/root-project/root/pull/15278,1,['test'],['tests']
Testability,[TMVA] DNN - Tune minimization test to avoid false positives,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1958:31,test,test,31,https://root.cern,https://github.com/root-project/root/pull/1958,1,['test'],['test']
Testability,[TMVA] Disable a crashing cuDNN test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16791:32,test,test,32,https://root.cern,https://github.com/root-project/root/pull/16791,1,['test'],['test']
Testability,[TMVA] Enable again all tests on `alma9` and `fedora39`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15439:24,test,tests,24,https://root.cern,https://github.com/root-project/root/pull/15439,1,['test'],['tests']
Testability,[TMVA] Extra logging for cv multiproc test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2526:13,log,logging,13,https://root.cern,https://github.com/root-project/root/pull/2526,2,"['log', 'test']","['logging', 'test']"
Testability,[TMVA] Fix bug caught by testMinimizationCpu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/492:25,test,testMinimizationCpu,25,https://root.cern,https://github.com/root-project/root/pull/492,1,['test'],['testMinimizationCpu']
Testability,[TMVA] Fix for testDerivativesCpu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/534:15,test,testDerivativesCpu,15,https://root.cern,https://github.com/root-project/root/pull/534,1,['test'],['testDerivativesCpu']
Testability,[TMVA] Make ROC calc O(N log N) instead of O(N * T),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/969:25,log,log,25,https://root.cern,https://github.com/root-project/root/pull/969,1,['log'],['log']
Testability,[TMVA] Prevent double->float conversions in TestMatrixArithmetic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/518:44,Test,TestMatrixArithmetic,44,https://root.cern,https://github.com/root-project/root/pull/518,1,['Test'],['TestMatrixArithmetic']
Testability,[TMVA] Pymva test (Keras) failing on 632 and main,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15396:13,test,test,13,https://root.cern,https://github.com/root-project/root/issues/15396,1,['test'],['test']
Testability,[TMVA] Refactor MethodDL Tests for Optimization.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2379:25,Test,Tests,25,https://root.cern,https://github.com/root-project/root/pull/2379,1,['Test'],['Tests']
Testability,[TMVA] Refactor PyRandomForest method and add multi-class unit-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/303:63,test,tests,63,https://root.cern,https://github.com/root-project/root/pull/303,1,['test'],['tests']
Testability,[TMVA] TestCrossValidationSerialise memory handling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1634:7,Test,TestCrossValidationSerialise,7,https://root.cern,https://github.com/root-project/root/pull/1634,1,['Test'],['TestCrossValidationSerialise']
Testability,[TMVA] Use R__ASSERT instead of assert,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13831:32,assert,assert,32,https://root.cern,https://github.com/root-project/root/pull/13831,1,['assert'],['assert']
Testability,[TMVA] Use a unique XML file for the trained model used in the test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10018:63,test,test,63,https://root.cern,https://github.com/root-project/root/pull/10018,1,['test'],['test']
Testability,[TMVA] cuDNN LSTM backpropagation test fails on ubuntu2404 cuda 12.6.1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16790:34,test,test,34,https://root.cern,https://github.com/root-project/root/issues/16790,1,['test'],['test']
Testability,[TMVA][CMake] Remove failing keras test from macos battery,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13765:35,test,test,35,https://root.cern,https://github.com/root-project/root/pull/13765,1,['test'],['test']
Testability,[TMVA][SOFIE] EyeLike ONNX operator implemented with tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14297:53,test,tests,53,https://root.cern,https://github.com/root-project/root/pull/14297,1,['test'],['tests']
Testability,[TMVA][SOFIE] Fix SOFIE tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11635:24,test,tests,24,https://root.cern,https://github.com/root-project/root/pull/11635,1,['test'],['tests']
Testability,[TMVA][SOFIE]Expand ONNX Operator implemented with the corresponding unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11608:74,test,tests,74,https://root.cern,https://github.com/root-project/root/pull/11608,1,['test'],['tests']
Testability,[TMVA][TMVA-Gui] - Generic object to log and present Keras and DNN training history,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4337:37,log,log,37,https://root.cern,https://github.com/root-project/root/pull/4337,1,['log'],['log']
Testability,[TPython] Enable TPython tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16454:25,test,tests,25,https://root.cern,https://github.com/root-project/root/pull/16454,1,['test'],['tests']
Testability,[TREEPROCMT] Do not build test if not an imt build,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2159:26,test,test,26,https://root.cern,https://github.com/root-project/root/pull/2159,1,['test'],['test']
Testability,[TThreadedObject] Fix usage of condition variable in test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5596:53,test,test,53,https://root.cern,https://github.com/root-project/root/pull/5596,1,['test'],['test']
Testability,[TTreeProcessorMT] Re-enable running test with different amount of th…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8570:37,test,test,37,https://root.cern,https://github.com/root-project/root/pull/8570,1,['test'],['test']
Testability,[TTree] Add compression algorithm test for TFile/TTree,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5081:34,test,test,34,https://root.cern,https://github.com/root-project/root/pull/5081,1,['test'],['test']
Testability,[Test Issue],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6397:1,Test,Test,1,https://root.cern,https://github.com/root-project/root/issues/6397,1,['Test'],['Test']
Testability,[Testing] Significantly reduce duration of legacy tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13762:1,Test,Testing,1,https://root.cern,https://github.com/root-project/root/pull/13762,1,['Test'],['Testing']
Testability,[This PR](https://github.com/root-project/roottest/pull/202) to roottest should fix the PyROOT test failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-396154996:95,test,test,95,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-396154996,1,['test'],['test']
Testability,[This piece of code is the faulty one](https://github.com/root-project/root/blame/e6080327f4e6318692d3917152598126b76f4455/hist/histpainter/src/THistPainter.cxx#L7407). It looks weird ... I do not really understand the logic right now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12567#issuecomment-1561160055:219,log,logic,219,https://root.cern,https://github.com/root-project/root/issues/12567#issuecomment-1561160055,1,['log'],['logic']
Testability,"[This rootbench benchmark](https://github.com/root-project/rootbench/blob/master/root/tree/dataframe/RDataFrameBenchmarks.cxx#L186-L205) that creates an artificially large jitted RDataFrame computation graph sees exploding runtimes with cling + O1. Standalone RDF code that reproduces the problem:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RLogger.hxx>. int main() {; ROOT::RDataFrame root(1);; std::vector<ROOT::RDF::RResultPtr<double>> dfs;; for (auto i = 0u; i < 10000; i++) {; const auto column = ""x"" + std::to_string(i);; auto define = root.Define(column, ""42.f"");; auto filter = define.Filter(column + "" > 0.f"");; auto sum = filter.Sum(column);; dfs.emplace_back(sum);; }; dfs[0].GetValue();; }; ```. Actual generated code (the body of `void foo()` is what RDF passes to `TCling::Calc`, I added the `#include`s and the `using namespace std;` to make the thing compile standalone and the things in `namepsace __rdf` are passed to `TCling::Declare` when RDF jits): ; [jitted_code.zip](https://github.com/root-project/root/files/7587367/jitted_code.zip). clang 13 goes from 16s to 2+ minutes when compiling that code without/with O1:; ```; /tmp /usr/bin/time clang++ -c jitted_code.cpp (root-config --cflags | string split "" ""); 15.45user 0.42system 0:16.00elapsed 99%CPU (0avgtext+0avgdata 1104528maxresident)k; 22712inputs+0outputs (161major+338726minor)pagefaults 0swaps. /tmp /usr/bin/time clang++ -O1 -c jitted_code.cpp (root-config --cflags | string split "" ""); 133.75user 0.37system 2:14.38elapsed 99%CPU (0avgtext+0avgdata 1089416maxresident)k; 10280inputs+0outputs (115major+287793minor)pagefaults 0swaps; ```. cling seems to do much worse, going from a few seconds to over 10 minutes if O1 is added.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9312#issuecomment-976392333:16,benchmark,benchmark,16,https://root.cern,https://github.com/root-project/root/issues/9312#issuecomment-976392333,1,['benchmark'],['benchmark']
Testability,[TreeProcMT] Fail test early rather than crashing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4956:18,test,test,18,https://root.cern,https://github.com/root-project/root/pull/4956,1,['test'],['test']
Testability,[TreeProcMT] Minor improvement to cluster boundaries merging logic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6901:61,log,logic,61,https://root.cern,https://github.com/root-project/root/pull/6901,1,['log'],['logic']
Testability,[TreeProcMT] Only run test w/ remote file reads if xrootd is ON,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5531:22,test,test,22,https://root.cern,https://github.com/root-project/root/pull/5531,1,['test'],['test']
Testability,[Tree] Add regression test for the issue described in ROOT-10942,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6071:22,test,test,22,https://root.cern,https://github.com/root-project/root/pull/6071,1,['test'],['test']
Testability,[Tree] Extend testing of TTreeReader,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16329:14,test,testing,14,https://root.cern,https://github.com/root-project/root/pull/16329,1,['test'],['testing']
Testability,[Tree] Fix tests for parsing of urls,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5060:11,test,tests,11,https://root.cern,https://github.com/root-project/root/pull/5060,1,['test'],['tests']
Testability,[VecOps] Remove expensive asserts from RVec::operator[],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9376:26,assert,asserts,26,https://root.cern,https://github.com/root-project/root/pull/9376,1,['assert'],['asserts']
Testability,[VecOps] Several improvements in the RVec swap tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10343:47,test,tests,47,https://root.cern,https://github.com/root-project/root/pull/10343,1,['test'],['tests']
Testability,[VecOps][Wip] Introduce the RStrongBool type for representing the results of logical operators,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2147:77,log,logical,77,https://root.cern,https://github.com/root-project/root/pull/2147,1,['log'],['logical']
Testability,[WIP Do not touch][VecOps] Test Autoloading on Ubu 16.04 gcc 5.4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1944:27,Test,Test,27,https://root.cern,https://github.com/root-project/root/pull/1944,1,['Test'],['Test']
Testability,[WIP] DO NOT MERGE! CI TEST.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5402:23,TEST,TEST,23,https://root.cern,https://github.com/root-project/root/pull/5402,1,['TEST'],['TEST']
Testability,[WIP] Testing of buitin glew,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4786:6,Test,Testing,6,https://root.cern,https://github.com/root-project/root/pull/4786,1,['Test'],['Testing']
Testability,[WIP][PyROOT] Add test checking loaded libraries after import,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5256:18,test,test,18,https://root.cern,https://github.com/root-project/root/pull/5256,1,['test'],['test']
Testability,[Work Product] This pull request contains the code pertaining to the **Google Summer of Code 2020** project [Development of 3D CNN in TMVA](https://summerofcode.withgoogle.com/projects/#5442246578536448). It implements the following features:. - 3D CNN layer for cpu and and tests for the same; - 3D MaxPool layer for cpu and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is Added backward pass tests([1b82793](https://github.com/root-project/root/pull/6263/commits/1b8279319807d1940b5f4a3d5278e15f74a941fa)). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6263:275,test,tests,275,https://root.cern,https://github.com/root-project/root/pull/6263,3,['test'],['tests']
Testability,[Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same; - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3924:288,test,tests,288,https://root.cern,https://github.com/root-project/root/pull/3924,2,['test'],['tests']
Testability,"[`pyunittests_distrdf_unit_test_headnode`](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171590/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/) seems real, I'm debugging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12519#issuecomment-1488622231:123,test,testReport,123,https://root.cern,https://github.com/root-project/root/pull/12519#issuecomment-1488622231,2,['test'],"['test', 'testReport']"
Testability,"[backport][cmake,test] Get rid of `lsb_release`:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14923:17,test,test,17,https://root.cern,https://github.com/root-project/root/pull/14923,1,['test'],['test']
Testability,[build] Format error as string in dependency_versions.py test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13617:57,test,test,57,https://root.cern,https://github.com/root-project/root/pull/13617,1,['test'],['test']
Testability,[builtinzlib_newPDF](https://paste.centos.org/view/0d1d17e7) PDF with new universal time; [builtinzlib_oldPDF](https://paste.centos.org/view/9222397b) original PDF. `stressGraphics` with ROOT `-Dbuiltin_zlib=ON` => all the tests passed with reference file `stressGraphics_builtinzlib.ref`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5191#issuecomment-604546228:223,test,tests,223,https://root.cern,https://github.com/root-project/root/pull/5191#issuecomment-604546228,1,['test'],['tests']
Testability,[c++20] Fix several tests and tutorials with -std:c++20,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12526:20,test,tests,20,https://root.cern,https://github.com/root-project/root/pull/12526,1,['test'],['tests']
Testability,[ci] A failing test is an error: [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12812:15,test,test,15,https://root.cern,https://github.com/root-project/root/pull/12812,1,['test'],['test']
Testability,[ci] Add a workflow that builds cling standalone and runs its tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14972:62,test,tests,62,https://root.cern,https://github.com/root-project/root/issues/14972,1,['test'],['tests']
Testability,[ci] Add test summary to pull requests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12314:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/12314,1,['test'],['test']
Testability,[ci] Also publish test results for scheduled builds,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14961:18,test,test,18,https://root.cern,https://github.com/root-project/root/pull/14961,1,['test'],['test']
Testability,[ci] DO NOT MERGE: test drive roottest PR,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16112:19,test,test,19,https://root.cern,https://github.com/root-project/root/pull/16112,1,['test'],['test']
Testability,[ci] Disable LLVM assertions on mac X86 builds,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14650:18,assert,assertions,18,https://root.cern,https://github.com/root-project/root/pull/14650,1,['assert'],['assertions']
Testability,"[ci] Disable PR uploads, enable testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12275:32,test,testing,32,https://root.cern,https://github.com/root-project/root/pull/12275,1,['test'],['testing']
Testability,[ci] Enable distributed RDataFrame testing on MacOS,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15540:35,test,testing,35,https://root.cern,https://github.com/root-project/root/pull/15540,1,['test'],['testing']
Testability,[ci] Fix untar dir in replication log. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13496:34,log,log,34,https://root.cern,https://github.com/root-project/root/pull/13496,1,['log'],['log']
Testability,[ci] Make sure GH log group/endgroup end up on separate lines. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13515:18,log,log,18,https://root.cern,https://github.com/root-project/root/pull/13515,1,['log'],['log']
Testability,"[ci] Move logging to global, pass docker info in: [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13488:10,log,logging,10,https://root.cern,https://github.com/root-project/root/pull/13488,1,['log'],['logging']
Testability,[ci] Remove Ubuntu 23.04 from testing platforms,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14878:30,test,testing,30,https://root.cern,https://github.com/root-project/root/pull/14878,1,['test'],['testing']
Testability,[ci] Remove macOS 12 from the tested platforms,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15127:30,test,tested,30,https://root.cern,https://github.com/root-project/root/pull/15127,1,['test'],['tested']
Testability,[ci] Report summary of failed tests. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13509:30,test,tests,30,https://root.cern,https://github.com/root-project/root/pull/13509,1,['test'],['tests']
Testability,[ci] Report test failures also for failed tests: [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12823:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/12823,2,['test'],"['test', 'tests']"
Testability,[ci] Test EnricoMi/publish-unit-test-result-action/composite@branch-t…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12663:5,Test,Test,5,https://root.cern,https://github.com/root-project/root/pull/12663,2,"['Test', 'test']","['Test', 'test-result-action']"
Testability,[ci] Try reducing testing parallelism,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12850:18,test,testing,18,https://root.cern,https://github.com/root-project/root/pull/12850,1,['test'],['testing']
Testability,[ci] Upload Test Coverage to codecov [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13414:12,Test,Test,12,https://root.cern,https://github.com/root-project/root/pull/13414,1,['Test'],['Test']
Testability,[ci] Upload TestResults.xml also for Windows. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12946:12,Test,TestResults,12,https://root.cern,https://github.com/root-project/root/pull/12946,1,['Test'],['TestResults']
Testability,[ci] Upload build artifacts before testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12830:35,test,testing,35,https://root.cern,https://github.com/root-project/root/pull/12830,1,['test'],['testing']
Testability,[ci] Upload test results unless cancelled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12822:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/12822,1,['test'],['test']
Testability,[ci] Use unique name in publish test result to deconfuse GH Actions:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13151:32,test,test,32,https://root.cern,https://github.com/root-project/root/pull/13151,1,['test'],['test']
Testability,[ci]Add test coverage using codecov [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13394:8,test,test,8,https://root.cern,https://github.com/root-project/root/pull/13394,1,['test'],['test']
Testability,[ci][win] Testing GH issue #6441 - Do not merge!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15327:10,Test,Testing,10,https://root.cern,https://github.com/root-project/root/pull/15327,1,['Test'],['Testing']
Testability,[clad] Extend test coverage with bigaus function.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9018:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/9018,1,['test'],['test']
Testability,[cling] Assert if the cling::Value is set via the wrong interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12229:8,Assert,Assert,8,https://root.cern,https://github.com/root-project/root/pull/12229,1,['Assert'],['Assert']
Testability,[cling] Avoid assert firing on ODRHash collisions:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9248:14,assert,assert,14,https://root.cern,https://github.com/root-project/root/pull/9248,1,['assert'],['assert']
Testability,[cling] Fix `clingtest` build and disable or remove tests [v6.32],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16297:52,test,tests,52,https://root.cern,https://github.com/root-project/root/pull/16297,1,['test'],['tests']
Testability,[cling] Fix a number of failures in cling tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12855:42,test,tests,42,https://root.cern,https://github.com/root-project/root/pull/12855,1,['test'],['tests']
Testability,[cling] Fix build with assertions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15431:23,assert,assertions,23,https://root.cern,https://github.com/root-project/root/pull/15431,1,['assert'],['assertions']
Testability,[cling] Fix clang::CodeGen EH assert on MacOS:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5534:30,assert,assert,30,https://root.cern,https://github.com/root-project/root/pull/5534,1,['assert'],['assert']
Testability,[cling] Fix failing python enum tests in cppyy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16000:32,test,tests,32,https://root.cern,https://github.com/root-project/root/pull/16000,1,['test'],['tests']
Testability,[cling] Fix next clang::CodeGen EH assert on MacOS:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6139:35,assert,assert,35,https://root.cern,https://github.com/root-project/root/pull/6139,1,['assert'],['assert']
Testability,[cling] Fix remaining test failures,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12900:22,test,test,22,https://root.cern,https://github.com/root-project/root/pull/12900,1,['test'],['test']
Testability,[cling] Fix test MultipleInterpreters.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13282:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/13282,1,['test'],['test']
Testability,[cling] Fix test/DynamicLibraryManager/callable_lib_L_AB_abs.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10542:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/10542,1,['test'],['test']
Testability,"[cling] Fix, disable, or remove tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16258:32,test,tests,32,https://root.cern,https://github.com/root-project/root/pull/16258,1,['test'],['tests']
Testability,[cling] Problems with many DynamicLibraryManager tests on macOS,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16270:49,test,tests,49,https://root.cern,https://github.com/root-project/root/issues/16270,1,['test'],['tests']
Testability,[cling] Remove unneed `assert()` in DynamicLookup.cpp,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9245:23,assert,assert,23,https://root.cern,https://github.com/root-project/root/pull/9245,1,['assert'],['assert']
Testability,[cling] Resolve some of the test failures on osx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13296:28,test,test,28,https://root.cern,https://github.com/root-project/root/pull/13296,1,['test'],['test']
Testability,[cling] Test printValue on unutterable types.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2250:8,Test,Test,8,https://root.cern,https://github.com/root-project/root/pull/2250,1,['Test'],['Test']
Testability,[cling] Windows: Fix declaration for C99 and re-enable Gnu.C test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16694:61,test,test,61,https://root.cern,https://github.com/root-project/root/pull/16694,1,['test'],['test']
Testability,[cling] added missing include in cling/test/CodeUnloading/DeclShadowing.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6958:39,test,test,39,https://root.cern,https://github.com/root-project/root/pull/6958,1,['test'],['test']
Testability,[cling] test/Driver/CommandHistory.C: `env -u` also works on macOS.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14183:8,test,test,8,https://root.cern,https://github.com/root-project/root/pull/14183,1,['test'],['test']
Testability,[cling][v6-28] Fix a number of failures in cling tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12856:49,test,tests,49,https://root.cern,https://github.com/root-project/root/pull/12856,1,['test'],['tests']
Testability,[cling][v6-28] Fix remaining test failures,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12902:29,test,test,29,https://root.cern,https://github.com/root-project/root/pull/12902,1,['test'],['test']
Testability,"[cmake,test] Get rid of `lsb_release`:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11029:7,test,test,7,https://root.cern,https://github.com/root-project/root/pull/11029,1,['test'],['test']
Testability,[cmake] Disable llvm-assertions for ROOT=RelWithDebInfo:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11991:21,assert,assertions,21,https://root.cern,https://github.com/root-project/root/pull/11991,1,['assert'],['assertions']
Testability,[cmake] Disable test-stressgraphics-chrome,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16684:16,test,test-stressgraphics-chrome,16,https://root.cern,https://github.com/root-project/root/pull/16684,1,['test'],['test-stressgraphics-chrome']
Testability,"[cmake] If asserts are on, enable them also for llvm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5572:11,assert,asserts,11,https://root.cern,https://github.com/root-project/root/pull/5572,1,['assert'],['asserts']
Testability,[cmake] Increase the internet connection test timeout.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9405:41,test,test,41,https://root.cern,https://github.com/root-project/root/pull/9405,1,['test'],['test']
Testability,[cmake] Introduce the needs_network flag for tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16328:45,test,tests,45,https://root.cern,https://github.com/root-project/root/pull/16328,1,['test'],['tests']
Testability,[cmake] Make test building serial on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16273:13,test,test,13,https://root.cern,https://github.com/root-project/root/pull/16273,1,['test'],['test']
Testability,[cmake] Re-add python stl_set tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16763:30,test,tests,30,https://root.cern,https://github.com/root-project/root/pull/16763,1,['test'],['tests']
Testability,[cmake] Test that NDEBUG is disabled if asserts are requested,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6596:8,Test,Test,8,https://root.cern,https://github.com/root-project/root/pull/6596,2,"['Test', 'assert']","['Test', 'asserts']"
Testability,[cmake] do not test chrome version on windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14826:15,test,test,15,https://root.cern,https://github.com/root-project/root/pull/14826,1,['test'],['test']
Testability,[cmake] do not test chrome version on windows [6.30],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14827:15,test,test,15,https://root.cern,https://github.com/root-project/root/pull/14827,1,['test'],['test']
Testability,[cmake] remove unnecessary include_directories in most ROOT tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5577:60,test,tests,60,https://root.cern,https://github.com/root-project/root/pull/5577,1,['test'],['tests']
Testability,[cmake][tests] Fix and re-enable tests on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15063:8,test,tests,8,https://root.cern,https://github.com/root-project/root/pull/15063,2,['test'],['tests']
Testability,[core/base/src/TStyle.cxx:1508]: (style) Array index 'i' is used before limits check; [geom/geom/src/TGeoNavigator.cxx:2219]: (style) Array index 'jst' is used before limits check. [geom/geocad/src/TGeoToOCC.cxx:527]: (warning) Logical disjunction always evaluates to true: EXPR > -1e-4 || EXPR < 1e-4; [geom/geocad/src/TGeoToOCC.cxx:528]: (warning) Logical disjunction always evaluates to true: EXPR > -1e-4 || EXPR < 1e-4; [geom/geocad/src/TGeoToOCC.cxx:529]: (warning) Logical disjunction always evaluates to true: EXPR > -1e-4 || EXPR < 1e-4; [geom/geocad/src/TGeoToOCC.cxx:530]: (warning) Logical disjunction always evaluates to true: EXPR > -1e-4 || EXPR < 1e-4; [graf2d/asimage/src/libAfterImage/char2uni.c:814]: (warning) Logical conjunction always evaluates to false: EXPR == 'S' && EXPR == 's'; [graf2d/asimage/src/libAfterImage/char2uni.c:815]: (warning) Logical conjunction always evaluates to false: EXPR == 'O' && EXPR == 'o'. [graf2d/asimage/src/libAfterImage/imencdec.c:376] -> [graf2d/asimage/src/libAfterImage/imencdec.c:376]: (style) Same expression on both sides of '&&'; [geom/geom/src/TGeoParaboloid.cxx:457] -> [geom/geom/src/TGeoParaboloid.cxx:457]: (style) Same expression on both sides of '||',MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1187:228,Log,Logical,228,https://root.cern,https://github.com/root-project/root/pull/1187,6,['Log'],['Logical']
Testability,"[core/winnt/src/TWinNTSystem.cxx:996]: (error) Invalid number of character '(' when these macros are defined: 'ROOTPREFIX'.; [html/src/TDocDirective.cxx:316]: (error) Invalid number of character '{' when these macros are defined: 'R__BEPAEPSTLICHERALSDERPAPST'.; [math/mathcore/src/Delaunay2D.cxx:30]: (error) Invalid number of character '{' when these macros are defined: 'HAS_CGAL'. [graf2d/qt/src/TGQt.cxx:2817]: (error) Array 'shape[15]' accessed at index 15, which is out of bounds.; [graf2d/qt/src/TGQt.cxx:2818]: (error) Array 'shape[15]' accessed at index 16, which is out of bounds.; [graf2d/qt/src/TGQt.cxx:2841]: (error) Array 'shape[15]' accessed at index 15, which is out of bounds.; [net/http/civetweb/handle_form.inl:627]: (style) Array index 'd' is used before limits check. [roofit/roostats/src/MetropolisHastings.cxx:153]: (style) Condition 'i<1000' is always true. [graf2d/qt/src/TQtClientGuard.cxx:289]: (warning) Assert statement modifies 'thisPix'. [roofit/roofitcore/src/BidirMMapPipe.cxx:906]: (style) Throwing a copy of the caught exception instead of rethrowing the original exception.; [roofit/roofitcore/src/BidirMMapPipe.cxx:972]: (style) Throwing a copy of the caught exception instead of rethrowing the original exception.; [roofit/roofitcore/src/BidirMMapPipe.cxx:1394]: (style) Throwing a copy of the caught exception instead of rethrowing the original exception.; [roofit/roofitcore/src/BidirMMapPipe.cxx:1429]: (style) Throwing a copy of the caught exception instead of rethrowing the original exception. [graf3d/eve/src/TEveElement.cxx:1745]: (style) Exception should be caught by reference.; [roofit/histfactory/src/hist2workspace.cxx:76]: (style) Exception should be caught by reference.; [roofit/histfactory/src/hist2workspace.cxx:97]: (style) Exception should be caught by reference.; [roofit/roofitcore/src/RooClassFactory.cxx:786]: (style) Exception should be caught by reference.; [roofit/roofitcore/src/RooFactoryWSTool.cxx:413]: (style) Exception should be",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1435:934,Assert,Assert,934,https://root.cern,https://github.com/root-project/root/pull/1435,1,['Assert'],['Assert']
Testability,[core] Add a stub for proper re-reading of rdicts if the library is reloaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420:13,stub,stub,13,https://root.cern,https://github.com/root-project/root/pull/5420,1,['stub'],['stub']
Testability,[core] Add test for #12108,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16335:11,test,test,11,https://root.cern,https://github.com/root-project/root/pull/16335,1,['test'],['test']
Testability,[core] Improve Include PATH handling & add test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14753:43,test,test,43,https://root.cern,https://github.com/root-project/root/pull/14753,1,['test'],['test']
Testability,[core] Improve readbility of unit-test-support messages.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12469:34,test,test-support,34,https://root.cern,https://github.com/root-project/root/pull/12469,1,['test'],['test-support']
Testability,[core] Improve the complete memory termination logic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4712:47,log,logic,47,https://root.cern,https://github.com/root-project/root/pull/4712,1,['log'],['logic']
Testability,"[core] Update ""logo"" to 2022 (NFC).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10129:15,log,logo,15,https://root.cern,https://github.com/root-project/root/pull/10129,1,['log'],['logo']
Testability,[cxxmodule] Fix df tests by declaring RuntimePrintValue at Interprete…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2591:19,test,tests,19,https://root.cern,https://github.com/root-project/root/pull/2591,1,['test'],['tests']
Testability,[cxxmodules] Add missing module dependencies to test dictionaries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/914:48,test,test,48,https://root.cern,https://github.com/root-project/root/pull/914,1,['test'],['test']
Testability,[cxxmodules] After root-project/root@52d0d8b the test works.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4324:49,test,test,49,https://root.cern,https://github.com/root-project/root/pull/4324,1,['test'],['test']
Testability,[cxxmodules] Also include explicitly assert,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1387:37,assert,assert,37,https://root.cern,https://github.com/root-project/root/pull/1387,1,['assert'],['assert']
Testability,[cxxmodules] Also load TreePlayer to fix TDataFrame tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1328:52,test,tests,52,https://root.cern,https://github.com/root-project/root/pull/1328,1,['test'],['tests']
Testability,"[cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process.; ; The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:; Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed.; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::Add",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7398:563,Assert,Assertion,563,https://root.cern,https://github.com/root-project/root/pull/7398,1,['Assert'],['Assertion']
Testability,[cxxmodules] Enable 17 tests and exclude 2 tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2040:23,test,tests,23,https://root.cern,https://github.com/root-project/root/pull/2040,2,['test'],['tests']
Testability,[cxxmodules] Exclude remaining tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2001:31,test,tests,31,https://root.cern,https://github.com/root-project/root/pull/2001,1,['test'],['tests']
Testability,[cxxmodules] Exclude tree-temperature test from runtime_cxxmodules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2022:38,test,test,38,https://root.cern,https://github.com/root-project/root/pull/2022,1,['test'],['test']
Testability,[cxxmodules] Fix assert failure when printing fwd delcs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1087:17,assert,assert,17,https://root.cern,https://github.com/root-project/root/pull/1087,1,['assert'],['assert']
Testability,[cxxmodules] Fix assert failure with duplicate decls.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1236:17,assert,assert,17,https://root.cern,https://github.com/root-project/root/pull/1236,1,['assert'],['assert']
Testability,[cxxmodules] Fix failing execNestedClasses test for modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2785:43,test,test,43,https://root.cern,https://github.com/root-project/root/pull/2785,1,['test'],['test']
Testability,[cxxmodules] Fix failing nightly test stl-stl,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4413:33,test,test,33,https://root.cern,https://github.com/root-project/root/pull/4413,1,['test'],['test']
