quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Performance,NENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.cpp. ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Model REQUIRED); sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Mapper REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED); sofa_find_package(Sofa.Component.Topology.Mapping REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); t,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:3012,perform,performer,3012,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,ONENT_SOURCE_DIR}/performer/MouseInteractor.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.cpp. ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.Constraint.P,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:2460,perform,performer,2460,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,RCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.cpp. ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagr,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:2526,perform,performer,2526,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,"Software Foundation. 14. If you wish to incorporate parts of the Library into other free; programs whose distribution conditions are incompatible with these,; write to the author to ask for permission. For software which is; copyrighted by the Free Software Foundation, write to the Free; Software Foundation; we sometimes make exceptions for this. Our; decision will be guided by the two goals of preserving the free status; of all derivatives of our free software and of promoting the sharing; and reuse of software generally. NO WARRANTY. 15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO; WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.; EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR; OTHER PARTIES PROVIDE THE LIBRARY ""AS IS"" WITHOUT WARRANTY OF ANY; KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR; PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE; LIBRARY IS WITH YOU. SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME; THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN; WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY; AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU; FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR; CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE; LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING; RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A; FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF; SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH; DAMAGES. END OF TERMS AND CONDITIONS. How to Apply These Terms to Your New Libraries. If you develop a new library, and you want it to be of the greatest; possible use to the public, we recommend making it free software that; everyone can ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:23421,PERFORM,PERFORMANCE,23421,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['PERFORM'],['PERFORMANCE']
Performance,[#515]( https://github.com/sofa-framework/sofa/pull/515 ); - [CImgPlugin]; - Use sofa cmake command to create proper package [#544]( https://github.com/sofa-framework/sofa/pull/544 ); - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - prevent INT32 redefinition by libjpeg on Windows [#566]( https://github.com/sofa-framework/sofa/pull/566 ); - [ColladaSceneLoader]; - FIX Assimp copy on Windows [#504]( https://github.com/sofa-framework/sofa/pull/504 ); - [Flexible]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [image]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Meshconv]; - fix build if no miniflowVR [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [MultiThreading]; - FIX: examples installation [#299]( https://github.com/sofa-framework/sofa/pull/299 ); - Fix build with Boost 1.64.0 [#359]( https://github.com/sofa-framework/sofa/pull/359 ); - FIX Windows dll loading [#507]( https://github.com/sofa-framework/sofa/pull/507 ); - [runSofa]; - FIX plugin config copy on Windows [#451]( https://github.com/sofa-framework/sofa/pull/451 ); - remove non-ASCII chars in string [#327]( https://github.com/sofa-framework/sofa/pull/327 ); - FIX PluginRepository initialization [#502]( https://github.com/sofa-framework/sofa/pull/502 ); - [SofaCUDA]; - Fix compilation problem with cuda. [#320]( https://github.com/sofa-framework/sofa/pull/320 ); - Fix: Headers of the SofaCUDA plugin are now installed in the include folder [#383]( https://github.com/sofa-framework/sofa/pull/383 ); - FIX Configuration/compilation issue with CUDA plugin [#523]( https://github.com/sofa-framework/sofa/pull/523 ); - Fix linearforcefield that disappears [#525]( https://github.com/sofa-framework/sofa/pull/525 ); - [SofaGui]; - FIX draw scenes on classical and retina screens [#311]( https://github.com/sofa-framework/sofa/pull/311 ); - Fixes #183 : Use the qt menu instead of ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:318105,load,loading,318105,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loading']
Performance,"_GUI_QGLVIEWER. Then, in the main window, you select the kind of viewer you; want. Qt will appear in gray, whereas QGLViewer and Ogre will be; available.; Warning, you must reload the scene when this change is made!. Viewers. The Viewers available now are:. QtViewer: uses openGL, derives a; QGLWidget in order to be embedded within Qt. This class will probably; not be maintained. Use QtGLViewer instead. QtGLViewer: uses the library; QGLViewer. Provides lots of functions to navigate through the scene.; More information at QGLViewer; Website. QtOgreViewer: Embed Ogre within a; Qwidget. Allows to get great visuals, through an intensive use of; shaders, materials.; Shadows are provided, but all the controls (show the mechanical; objects, force fields...) are disabled. ; Warning: Ogre is not provided by Sofa, you have to previously install; Ogre on your computer. ; The support works with Windows, Linux. ; - For Windows, the easiest way to proceed is to download and install; the SDK. ; - For Linux, you have to compile from the source. If Ogre's library; aren't installed in the default directory �/usr/local/lib/Ogre�; then, you have to set the; correct path in �YourSofaDirectory/share/config/plugins_unix.cfg�; To get it: Ogre; Website. QtOgreViewer; To; use this viewer, you must have Ogre installed on your computer. ; The configuration files are located in: �YourSofaDirectory/share/config/�. �plugins.cfg� describes the plugins used by Ogre for; Windows, and �plugins_unix.cfg� for... Linux.; By creating a .scene file with the same name as the simulation, you can; provide additional models, lights, visuals to the simulation( see Ogre; documentation for mode details ). This won't interact with Sofa, but; allows you to get a better render.; Additional textures, materials,; shaders... in Ogre, have to be put in �; YourSofaDirectory/share/textures� or �; YourSofaDirectory/share/materials� or; �YourSofaDirectory/share/shaders� ... They are loaded at the; start-up of the viewer. . ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:5116,load,loaded,5116,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,1,['load'],['loaded']
Performance,"_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/WinDepPack>""); endif(). # Compile options; # Set C++17; target_compile_features(${PROJECT_NAME} PUBLIC cxx_std_17). set(SOFACONFIG_COMPILE_OPTIONS_DEBUG """"); set(SOFACONFIG_COMPILE_OPTIONS_RELEASE """"); set(SOFACONFIG_COMPILE_OPTIONS """"); set(SOFACONFIG_LINK_OPTIONS """"); set(SOFACONFIG_LINK_OPTIONS_DEBUG """"); set(SOFACONFIG_LINK_OPTIONS_RELEASE """"). ## Link-time optimization; if(NOT IPO_CHECK_DONE); include(CheckIPOSupported); check_ipo_supported(RESULT IS_IPO_SUPPORTED OUTPUT IPO_ERROR); set(IPO_CHECK_DONE ON CACHE INTERNAL ""IPO check has been done"" FORCE); if (IS_IPO_SUPPORTED); set(IPO_SUPPORTED ON CACHE INTERNAL ""IPO can be activated"" FORCE); else(); message(STATUS ""IPO / LTO not supported: <${IPO_ERROR}>""); endif(); endif(). if (IPO_SUPPORTED); # Focus on max speed with link-time optimization; option(SOFA_ENABLE_LINK_TIME_OPTIMIZATION ""Enable interprocedural optimization"" OFF); if (SOFA_ENABLE_LINK_TIME_OPTIMIZATION); set(CMAKE_INTERPROCEDURAL_OPTIMIZATION_RELEASE TRUE PARENT_SCOPE); endif(); else(); message(STATUS ""IPO / LTO not supported: <${IPO_ERROR}>""); endif(). ## GCC-specific; if(${CMAKE_CXX_COMPILER_ID} MATCHES ""GNU""); ## Find out the version of g++ (and save it in GCXX_VERSION); if(CMAKE_CXX_COMPILER_ARG1) # CXX=""ccache g++""; string(STRIP ${CMAKE_CXX_COMPILER_ARG1} CMAKE_CXX_COMPILER_ARG1_stripped); execute_process(COMMAND ${CMAKE_CXX_COMPILER_ARG1_stripped} -dumpversion OUTPUT_VARIABLE GCXX_VERSION); else(); execute_process(COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE GCXX_VERSION); endif(). ## Disable partial inlining under gcc 4.6 (Why? -> the memory was exploding); if(""${GCXX_VERSION}"" VERSION_EQUAL 4.6); list(APPEND SOFACONFIG_COMPILE_OPTIONS_RELEASE ""-fno-partial-inlining""); endif(). # stack-protector; list(APPEND SOFACONFIG_COMPILE_OPTIONS_RELEASE ""-fstack-protector;--param=ssp-buffer-size=4""); # _FORTIFY_SOURCE; list(APPEND SOFACONFIG_COMPILE_OPT",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:5581,optimiz,optimization,5581,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,2,['optimiz'],['optimization']
Performance,a-framework/sofa/pull/2156 ); - **[SofaSimulation/Tests]** Fix init/cleanup in SofaSimulation modules [#1987]( https://github.com/sofa-framework/sofa/pull/1987 ); - **[SofaSimulationCore]** Set default TaskScheduler worker threads to idle state [#1997]( https://github.com/sofa-framework/sofa/pull/1997 ); - **[SofaSimulationCore]** Broken URL [#2011]( https://github.com/sofa-framework/sofa/pull/2011 ); - **[SofaSimulationCore]** FIX Task scheduler memory leak [#1927]( https://github.com/sofa-framework/sofa/pull/1927 ); - **[SofaSimulationCore]** Reorder according to definition [#2034]( https://github.com/sofa-framework/sofa/pull/2034 ); - **[SofaSimulationCore]** Revert changes in #1927 [#2017]( https://github.com/sofa-framework/sofa/pull/2017 ); - [SofaSimulationGraph] Restore tests [#1988]( https://github.com/sofa-framework/sofa/pull/1988 ); - [SofaSimulationGraph] Reading links fail when owner is invalid [#2166]( https://github.com/sofa-framework/sofa/pull/2166 ); - [SofaSparseSolver] SparseLDLSolver optimizations [#1996]( https://github.com/sofa-framework/sofa/pull/1996 ); - [SofaTopologyMapping] Fix Edge2Quad condition [#2126]( https://github.com/sofa-framework/sofa/pull/2126 ); - [SofaUserInteraction] Fix Bug of removing topological element when a Hexa2TetraTopologicalMapping is in the scene [#1973]( https://github.com/sofa-framework/sofa/pull/1973 ). **Plugins / Projects**; - [CGALPlugin] Fix cgal drawings [#2206]( https://github.com/sofa-framework/sofa/pull/2206 ); - [CGALPlugin] Fix compilation errors related to SOFA.GL and types converted to DataTypes [#2065]( https://github.com/sofa-framework/sofa/pull/2065 ); - [CImgPlugin] Fix unit test [#2147]( https://github.com/sofa-framework/sofa/pull/2147 ); - [Geomagic] Fix Geomagic plugin compilation [#2033]( https://github.com/sofa-framework/sofa/pull/2033 ); - [Geomagic] Fix GeomagicVisualModel compilation [#1776]( https://github.com/sofa-framework/sofa/pull/1776 ); - [Geomagic] Fix compilation of GeomagicVisual,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:191475,optimiz,optimizations,191475,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimizations']
Performance,"a-framework/sofa/pull/2777) ; - [Core] Introduce parallel for each [#3548](https://github.com/sofa-framework/sofa/pull/3548) ; - [MultiThreading] Introduce ParallelTetrahedronFEMForceField [#3552](https://github.com/sofa-framework/sofa/pull/3552) ; - [examples] Apply Sofa/Component structure for all examples [#3588](https://github.com/sofa-framework/sofa/pull/3588) . ### Breaking. **Architecture**; - [all] Lifecycle v23.06 1/n [#3634](https://github.com/sofa-framework/sofa/pull/3634) ; - [all] Lifecycle v23.06 2/n [#3649](https://github.com/sofa-framework/sofa/pull/3649) ; - [all] Lifecycle v23.06 3/n [#3654](https://github.com/sofa-framework/sofa/pull/3654) ; - [all] Lifecycle v23.06 4/n [#3655](https://github.com/sofa-framework/sofa/pull/3655) ; - [Core] Use std::function for Link's Validator (and fix UB) [#3665](https://github.com/sofa-framework/sofa/pull/3665) ; - [Helper] Improve OptionsGroup [#3737](https://github.com/sofa-framework/sofa/pull/3737) ; - [Simulation] Suggest required plugin in the syntax of the scene loader [#3799](https://github.com/sofa-framework/sofa/pull/3799) . **Modules**; - [Mapping] Adds template to RigidMapping [#3680](https://github.com/sofa-framework/sofa/pull/3680) ; - [Analyze] Raw pointers to Links [#3683](https://github.com/sofa-framework/sofa/pull/3683) ; - [MechanicalLoad] Stupid check for consistency between state and topology [#3692](https://github.com/sofa-framework/sofa/pull/3692) ; - [Mapping.NonLinear] Geometric stiffness method in an OptionsGroup [#3740](https://github.com/sofa-framework/sofa/pull/3740) ; - [Core.Visual, Component.Visual] Create VisualState (formerly Vec3State) [#3782](https://github.com/sofa-framework/sofa/pull/3782) . **Plugins / Projects**; - [MultiThreading] Factorize task scheduler user [#3607](https://github.com/sofa-framework/sofa/pull/3607) . ### Improvements. **Architecture**; - [Helper] Use DataTypeInfo in NameDecoder [#3465](https://github.com/sofa-framework/sofa/pull/3465) ; - [DefaultType] Rig",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:51328,load,loader,51328,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loader']
Performance,aCore]** Add PCH support in CMakeLists.txt [#1727]( https://github.com/sofa-framework/sofa/pull/1727 ); - [SofaExporter] Add option for obj export [#1789]( https://github.com/sofa-framework/sofa/pull/1789 ); - [SofaGeneralAnimationLoop] MechanicalMatrixMapper: adds template [#1703]( https://github.com/sofa-framework/sofa/pull/1703 ); - [SofaGeneralLoader] adds translation and rotation to ReadState [#1733]( https://github.com/sofa-framework/sofa/pull/1733 ); - [SofaGeneralMeshCollision] Direct SAP is written as a narrow phase [#2030]( https://github.com/sofa-framework/sofa/pull/2030 ); - [SofaGuiQt] Add new about window UI and url redirect [#1801]( https://github.com/sofa-framework/sofa/pull/1801 ); - [SofaGuiQt] Qt6 support [#1756]( https://github.com/sofa-framework/sofa/pull/1756 ); - [SofaGuiQt] Tooltips [#2139]( https://github.com/sofa-framework/sofa/pull/2139 ); - [SofaGui] Improve background v20.12 [#1758]( https://github.com/sofa-framework/sofa/pull/1758 ); - **[SofaHelper]** Optimize use of map_ptr_stable_compare [#2105]( https://github.com/sofa-framework/sofa/pull/2105 ); - **[SofaHelper][SofaPython]** ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ); - [SofaImplicitOdeSolver] Rewrite of the static Newton-Raphson ODE solver [#2050]( https://github.com/sofa-framework/sofa/pull/2050 ); - **[SofaKernel]** Write template list in error message [#2207]( https://github.com/sofa-framework/sofa/pull/2207 ); - [SofaMiscFem] Proposal of FEM force field for Reissner-Mindlin Flat Shell Element [#1745]( https://github.com/sofa-framework/sofa/pull/1745 ); - [SofaMiscTopology] Add component TopologyChecker [#1594]( https://github.com/sofa-framework/sofa/pull/1594 ); - [SofaOpenglVisual] Add transparency when we draw triangles (this allows to see inside the volume). [#1742]( https://github.com/sofa-framework/sofa/pull/1742 ); - **[SofaSimulationCore]** Add option to call ODE::solve in parallel in SolveVisitor [#21,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:178842,Optimiz,Optimize,178842,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Optimiz'],['Optimize']
Performance,aExporter]; - FIX allow to extend VTKExporter in a plugin [#309]( https://github.com/sofa-framework/sofa/pull/309 ); - [SofaGeneralEngine]; - Fix some XyzTransformMatrixEngine::update() function [#343]( https://github.com/sofa-framework/sofa/pull/343 ); - [SofaGeneralImplicitOdeSolver]; - fix test [#478]( https://github.com/sofa-framework/sofa/pull/478 ); - [SofaGraphComponent]; - Fix the test that was wrong and thus failing in SceneChecker [#405]( https://github.com/sofa-framework/sofa/pull/405 ); - Fix a crashing bug in SceneCheckAPIChange. [#479]( https://github.com/sofa-framework/sofa/pull/479 ); - FIX SceneChecker & RequiredPlugin [#563]( https://github.com/sofa-framework/sofa/pull/563 ); - [SofaGeneralObjectInteraction]; - Remove stiffness multiplicator in SpringForceField [#290]( https://github.com/sofa-framework/sofa/pull/290 ); - [SofaMiscFem]; - Fix FastTetrahedralCorotationalFF topology change [#554]( https://github.com/sofa-framework/sofa/pull/554 ); - [SofaOpenglVisual]; - Fix a bug crashing sofa when the textures cannot be loaded. [#474]( https://github.com/sofa-framework/sofa/pull/474 ). **Extlibs**; - [CImg]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Eigen]; - Warning fix with eigen when compiling with msvc [#447]( https://github.com/sofa-framework/sofa/pull/447 ); - [libQGLViewer]; - FIX missing headers [#461]( https://github.com/sofa-framework/sofa/pull/461 ); - Update libQGLViewer to 2.7.1 [#545]( https://github.com/sofa-framework/sofa/pull/545 ). **Plugins / Projects**; - [CGALPlugin]; - Fix build problem [#351]( https://github.com/sofa-framework/sofa/pull/351 ); - FIX build error with CGAL > 4.9.1 [#515]( https://github.com/sofa-framework/sofa/pull/515 ); - [CImgPlugin]; - Use sofa cmake command to create proper package [#544]( https://github.com/sofa-framework/sofa/pull/544 ); - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - prevent INT32 redefinition by li,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:316451,load,loaded,316451,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loaded']
Performance,"alAnimationLoop] Improvement on MMMapper [#772]( https://github.com/sofa-framework/sofa/pull/772 ); - **[SofaHelper]** EDIT FileSystem and FileRepository for regression tests [#830]( https://github.com/sofa-framework/sofa/pull/830 ); - **[SofaKernel]** Improve Displayflags [#671]( https://github.com/sofa-framework/sofa/pull/671 ); - **[SofaKernel]** Add a ""sofa_add_module"" in SofaMacro.cmake [#732]( https://github.com/sofa-framework/sofa/pull/732 ); - **[SofaKernel]** use string in base object description [#862]( https://github.com/sofa-framework/sofa/pull/862 ); - [SofaMeshCollision] TriangleModel optimization when topology changes occur [#839]( https://github.com/sofa-framework/sofa/pull/839 ); - [SofaSparseSolver] ADD saveMatrixToFile to SparseLDLSolver [#845]( https://github.com/sofa-framework/sofa/pull/845 ); - [SofaTest] ADD a PrintTo method so test failure shows human readable informations. [#730]( https://github.com/sofa-framework/sofa/pull/730 ); - [VisualModel] Improve the messages when loading mesh inside VisualModel [#778]( https://github.com/sofa-framework/sofa/pull/778 ); - [WriteState] minor fix with the time attribute, default values [#776]( https://github.com/sofa-framework/sofa/pull/776 ). **Plugins / Projects**; - [Geomagic] ADD an inputForceFeedback data in Geomagic [#648]( https://github.com/sofa-framework/sofa/pull/648 ); - [Geomagic] Fix dll export and some enhancements [#786]( https://github.com/sofa-framework/sofa/pull/786 ); - [MultiThreading] removed the boost thread dependency [#701]( https://github.com/sofa-framework/sofa/pull/701 ); - [MultiThreading] New components and Task scheduler classes refactoring [#745]( https://github.com/sofa-framework/sofa/pull/745 ); - [MultiThreading] Add Image plugin Data types in DataExchange component [#770]( https://github.com/sofa-framework/sofa/pull/770 ); - [MultiThreading] TaskScheduler Interface [#775]( https://github.com/sofa-framework/sofa/pull/775 ); - [runSofa] Add data field value change on mou",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:281417,load,loading,281417,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loading']
Performance,"ally (in a branch of the scene graph) cancel the force mask; - live-coding for python; - live-coding for GLSL; - new component MakeAlias; - new component MakeDataAlias; - improved error message & console rendering. ### New features for developpers. - Preliminary Markdown support in the msg_* API. You can now write much better formatting & alignement as well as adding URL to documentations related to the error.; - class RichStyleConsoleFormatter which interprete the markdowns in the message and format this to a resizable console with nice alignement.; - class CountingMessageHandler (count the number of message for each message type); - class RoutingMessageHandler (to implement context specific routing of the messages to different handler); - class ExpectMessage and MessageAsATestFailure can be used to check that a component did or didn't send a message and generate a test failure.; - FileMonitor is now implemented on MacOS & Windows (for live-coding features, for example); - RequiredPlugin: modified API to take a list of plugins to load; - Implements the move semantics on sofa::helper::vector. ### Improvements. - **372 new tests**: DAGNode, MeshObj, DiagonalMass, BoxROI, ComplementaryROI, DifferenceEngine, BilateralInteractionConstraint, Quaternion, ImagePNG, etc.; - 184/480 components have an associated example; - [SofaKernel]; - replace raw pointers with a smart ones; - add a ComponentState attribute to BaseObject; - BaseData::typeName is now public: useful to debug; - implement DataTrackerEngine, a kind of DataEngine but that is not a BaseObject; - fix SVector<std::string>. The string serialization changed; - [SofaRigid]; - in case jetJs is called several times per step; - [SofaGeneralLoader]; - MeshVTKLoader can now read FIELD data of legacy file. Lookup tables are ignored.; - [SofaPython]; - binding AssembledSystem as a new class in python; - binding VisualModel::exportOBJ; - binding for DataFileNameVector; - add Compliant.getImplicitAssembledSystem(node); - Sofa",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:338071,load,load,338071,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['load']
Performance,"amework/sofa/pull/2239 ); - [SofaMiscForceField] Fix massDensity vector update when adding new elements in MeshMatrixMass [#2257]( https://github.com/sofa-framework/sofa/pull/2257 ); - [Sofa.Compat] Fix Matrixexpr alias [#2369]( https://github.com/sofa-framework/sofa/pull/2369 ); - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-framework/sofa/pull/2360 ); - [Sofa.Core] Fix diamond inheritance in PairInteractionConstraint [#2488]( https://github.com/sofa-framework/sofa/pull/2488 ); - [Sofa.DefaultType] Fix declaration of global variables [#2317]( https://github.com/sofa-framework/sofa/pull/2317 ); - [Sofa.GL] Set glew as mandatory [#2358]( https://github.com/sofa-framework/sofa/pull/2358 ); - [Sofa.Helper] Fix and micro-optimize AdvancedTimer [#2349]( https://github.com/sofa-framework/sofa/pull/2349 ); - [Sofa.Helper] More tests for NameDecoder + fix them [#2380]( https://github.com/sofa-framework/sofa/pull/2380 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framework/sofa/pull/2352 ); - [Sofa.Helper_test] ""fix"" wstring unittest [#2320]( https://github.com/sofa-framework/sofa/pull/2320 ); - [Sofa.LinearAlgebra] Fix assert in CompressedRowSparseMatrix [#2347]( https://github.com/sofa-framework/sofa/pull/2347 ); - [Sofa.LinearAlgebra] Fix installation (fwd.h) [#2337]( https://github.com/sofa-framework/sofa/pull/2337 ); - [Sofa.Type, Sofa.Topology] Fix testEdgeBuffer with clang (and add constexpr default constructors) [#2357]( https://github.com/sofa-framework/sofa/pull/2357 ); - [Sofa.Type] FIX createFromRotationVEctor, the inequality was wrong [#2332]( https://github.com/sofa-framework/sofa/pull/2332 ); - [Sofa.Type] Optimize constructor with params for sofa::type::vec [#2439]( https://github.com/sofa-framework/sofa/pull/2439 ); - [SofaBaseLinearSolver] CGLinearSolver must call super init() to check required Data [#2419]( https://github.com/sofa-framework/sofa/pull/2419 ); - [Sofa",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:146098,load,loaded,146098,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loaded']
Performance,"arSolver.Direct] Introduce other ordering methods in SparseLDL through Eigen [#4370](https://github.com/sofa-framework/sofa/pull/4370); - [Constraint.Lagrangian.Solver] Fix assert in GenericConstraintSolver [#4389](https://github.com/sofa-framework/sofa/pull/4389); - [Type] Refactor Mat [#4396](https://github.com/sofa-framework/sofa/pull/4396); - [LinearSystem] Detect changes in sparsity pattern when using ConstantSparsityPatternSystem [#4428](https://github.com/sofa-framework/sofa/pull/4428); - [Core][LinearSolver] Introduction of ordering method components [#4477](https://github.com/sofa-framework/sofa/pull/4477); - [Simulation.Graph] Move SimpleApi into its own library [#4495](https://github.com/sofa-framework/sofa/pull/4495); - [all] Lifecycle for v24.06 (2): remove Compat [#4533](https://github.com/sofa-framework/sofa/pull/4533); - [all] Add PenalityContact vector Data display [#4637](https://github.com/sofa-framework/sofa/pull/4637); - [GUI.Component] Add virtualization for attachment performer [#4638](https://github.com/sofa-framework/sofa/pull/4638); - [GUI.Qt] Some cleaning in qt RealGui [#4641](https://github.com/sofa-framework/sofa/pull/4641); - [FEM.HyperElastic] Convert string Data to OptionsGroup [#4651](https://github.com/sofa-framework/sofa/pull/4651); - [AnimationLoop] Remove duplicated Constraint Visitors [#4715](https://github.com/sofa-framework/sofa/pull/4715). ### Improvements. - [Lagrangian.Correction] Add callbacks to check zero compliance [#4205](https://github.com/sofa-framework/sofa/pull/4205); - [SolidMechanics.Spring] Implement buildStiffnessMatrix for TriangularBendingSprings [#4295](https://github.com/sofa-framework/sofa/pull/4295); - [SolidMechanics] Implement buildStiffnessMatrix for PolynomialSpringsFF [#4301](https://github.com/sofa-framework/sofa/pull/4301); - [Config] CMake: support interface-type target for install macro [#4356](https://github.com/sofa-framework/sofa/pull/4356); - [Core] BaseMapping: link mapConstraints to the ""m",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:2723,perform,performer,2723,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['perform'],['performer']
Performance,"asic size verifications (could be performed in debug); - [Flexible]; - add support for shapefunction viewer; - new feature of strain smoothing; - improve readme file; - [Compliant]; - simulation unit: convert gravity, dt; - MaskMapping: every input are now mapped; - add LinearDiagonalCompliance component; - fix use of VLA in python mappings; - improve readme file. ### Bug Fixes. - fix ConstantForceField::updateForceMask(); - fix ObjExporter memory leak; - [SofaOpenGLVisual] OglTexture: fix possible memory leaks; - [Compliant]; - clean python. ### Cleanings. - clean the compilation when SOFA_NO_OPENGL flag is activated; - clean the config.h (SOFAGUI_HAVE_QWT); - remove boost library links (includes still required). boost chrono is not required anymore.; - remove unused POINT_DATA_VECTOR_ACCESS macro; - make miniflowVR build optional (default OFF); - [SofaKernel]; - remove last direct opengl calls in modules; - add deprecation message on MechanicalObject attributes; - [SofaBaseVisual] clean BaseCamera: remove direct opengl calls; - [SofaHaptics] boost-thread is not used any more, clean cmake; - [SofaGeneralLoader] STLLoader: fixing binary loading in debug and cleaning examples; - [SofaPython]; - remove ScriptEnvironment i.e. automatic initialization of Node; - Node::isInitialized(), not used anymore; - [Flexible]; - clean relativeStrainMapping. ### Moved files. - move CImg from extlibs to image plugin extlibs. ### Documentation. - Add the contribution and guidelines : **CONTRIBUTING.md** and **GUIDELINES.md**; - Add the configuration required (ex: C++, compiler versions); - Add a page to use SOFA in Matlab; - Improve Logger documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/s",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:340339,load,loading,340339,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loading']
Performance,"ata filled as below :. <SceneColladaLoader name=""sceneColladaLoader"" filename=""example.dae"" />. The collada file example.dae contains a very basic scene with a mesh skinned with two bones representing an arm which is animated in two step as shown in the following screenshots [took from Blender (software)] :.       . Animation step 1 : Arm is raised. Animation step 2 : Arm is bent. And now the same scene loaded into Sofa :. Animation step 1 : Arm is raised; Animation step 1-2 : Arm animation interpolated by Sofa(animation speed depends of the animation time step); Animation step 2 : Arm is bent. Another example with a scene containing two meshes, one with the same bones as in the previous example and a sphere without skinning.       . The scene in the Sofa Modeler. The same scene in runSofa.       As you can see in Sofa Modeler, the scene to load a collada file is very simple. We have the SceneColladaLoader to load it and, important thing, we also have an EulerSolver ; which will be used by the potential SkeletalMotionProjectiveConstraints to ""play"" the animation updating positions and velocities.; When you launch runSofa with this scene, a new node will be added which contains the whole collada scene. The name of this node is the name you gave to the ; SceneColladaLoader plus the string ""_scene"". On the right picture, the loader generated two child nodes call ""mesh 0"" which contains a mesh without skinning (the sphere), and ; ""mesh 1"" which contains a mesh with skinning and bones animation directly from the collada file.; The SkeletalMotionProjectiveConstraint automatically interpolates between animation frames, play with the animation time step to slown down or speed up the animation. As you can see on the other example below, the woman's hair does not fit her head very well because its coordinates system belongs to a dummy object not supported for the moment. A skinned and bones animated mesh representing a woman. Intellectual property and rights. Author. Olivier C",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:3918,load,load,3918,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,1,['load'],['load']
Performance,"b.com/sofa-framework/sofa/pull/959 ). **Modules**; - [All] Three small fixes in SofaBaseLinearSolver, SofaBoundaryCondition, runSofa [#931]( https://github.com/sofa-framework/sofa/pull/931 ); - [All] FIXES made for RoboSoft2019 [#1003]( https://github.com/sofa-framework/sofa/pull/1003 ); - [All] Fix some warnings [#873]( https://github.com/sofa-framework/sofa/pull/873 ); - [All] Several bug fixes [#985]( https://github.com/sofa-framework/sofa/pull/985 ); - [All] Some fixes to have a ... green dashboard! [#982]( https://github.com/sofa-framework/sofa/pull/982 ); - [All] Fix compilation with SOFA_NO_OPENGL flag [#1032]( https://github.com/sofa-framework/sofa/pull/1032 ); - [SofaConstraint] Convert static sized arrays to dynamic ones in GenericConstraintSolver [#920]( https://github.com/sofa-framework/sofa/pull/920 ); - **[SofaBaseMechanics]** Fix barycentric mapping again [#924]( https://github.com/sofa-framework/sofa/pull/924 ); - **[SofaBaseTopology]** Fix Crash when loading a vtk file generated by Gmsh using TetrahedronSetTopologyContainer as container [#1008]( https://github.com/sofa-framework/sofa/pull/1008 ); - **[SofaBaseTopology]** Fix right setDirty/clean topologyData [#889]( https://github.com/sofa-framework/sofa/pull/889 ); - **[SofaBaseTopology]**[DrawTools] Some fix/update in topology internal draw methods. [#877]( https://github.com/sofa-framework/sofa/pull/877 ); - **[SofaBaseTopology]** Yet another fix in Tetra2triangleTopologicalMapping [#998]( https://github.com/sofa-framework/sofa/pull/998 ); - **[SofaBaseTopology]** Clean, fix, upgrade Triangle2EdgeTopologicalMapping [#875]( https://github.com/sofa-framework/sofa/pull/875 ); - **[SofaBaseTopology]** Fix crashes in Tetra2TriangleTopologicalMapping [#960]( https://github.com/sofa-framework/sofa/pull/960 ); - [SofaBoundaryCondition] Fix draw function in ConstantForcefield [#1017]( https://github.com/sofa-framework/sofa/pull/1017 ); - **[SofaDeformable]** FIX issue 928 [#942]( https://github.com/sofa-f",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:264353,load,loading,264353,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loading']
Performance,behavior/ForceField.cpp; ${SRC_ROOT}/behavior/LinearSolver.cpp; ${SRC_ROOT}/behavior/LinearSolverAccessor.cpp; ${SRC_ROOT}/behavior/Mass.cpp; ${SRC_ROOT}/behavior/MechanicalMatrix.cpp; ${SRC_ROOT}/behavior/MechanicalState.cpp; ${SRC_ROOT}/behavior/MixedInteractionConstraint.cpp; ${SRC_ROOT}/behavior/MixedInteractionForceField.cpp; ${SRC_ROOT}/behavior/MultiMatrixAccessor.cpp; ${SRC_ROOT}/behavior/OdeSolver.cpp; ${SRC_ROOT}/behavior/PairInteractionConstraint.cpp; ${SRC_ROOT}/behavior/PairInteractionForceField.cpp; ${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.cpp; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.cpp; ${SRC_ROOT}/behavior/SingleMatrixAccessor.cpp; ${SRC_ROOT}/behavior/fwd.cpp; ${SRC_ROOT}/collision/BroadPhaseDetection.cpp; ${SRC_ROOT}/collision/Contact.cpp; ${SRC_ROOT}/collision/Intersection.cpp; ${SRC_ROOT}/collision/NarrowPhaseDetection.cpp; ${SRC_ROOT}/collision/Pipeline.cpp; ${SRC_ROOT}/loader/BaseLoader.cpp; ${SRC_ROOT}/loader/MeshLoader.cpp; ${SRC_ROOT}/loader/SceneLoader.cpp; ${SRC_ROOT}/loader/VoxelLoader.cpp; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.cpp; ${SRC_ROOT}/objectmodel/AbstractDataLink.cpp; ${SRC_ROOT}/objectmodel/AspectPool.cpp; ${SRC_ROOT}/objectmodel/Base.cpp; ${SRC_ROOT}/objectmodel/BaseClass.cpp; ${SRC_ROOT}/objectmodel/BaseContext.cpp; ${SRC_ROOT}/objectmodel/BaseData.cpp; ${SRC_ROOT}/objectmodel/BaseLink.cpp; ${SRC_ROOT}/objectmodel/BaseNode.cpp; ${SRC_ROOT}/objectmodel/BaseObject.cpp; ${SRC_ROOT}/objectmodel/BaseObjectDescription.cpp; ${SRC_ROOT}/objectmodel/ClassInfo.cpp; ${SRC_ROOT}/objectmodel/ComponentState.cpp; ${SRC_ROOT}/objectmodel/ConfigurationSetting.cpp; ${SRC_ROOT}/objectmodel/Context.cpp; ${SRC_ROOT}/objectmodel/ContextObject.cpp; ${SRC_ROOT}/objectmodel/DDGNode.cpp; ${SRC_ROOT}/objectmodel/Data.cpp; ${SRC_ROOT}/objectmodel/DataCallback.cpp; ${SRC_ROOT}/objectmodel/DataContentValue.cpp; ${SRC_ROOT}/objectmodel/DataFileName.cpp; ${SRC,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:10074,load,loader,10074,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['load'],['loader']
Performance,cheduler user [#3607](https://github.com/sofa-framework/sofa/pull/3607) . ### Improvements. **Architecture**; - [Helper] Use DataTypeInfo in NameDecoder [#3465](https://github.com/sofa-framework/sofa/pull/3465) ; - [DefaultType] RigidCoord/Deriv become iterable [#3536](https://github.com/sofa-framework/sofa/pull/3536) ; - [Core] Give threads a name on Windows [#3551](https://github.com/sofa-framework/sofa/pull/3551) ; - [Core] Display flags spelling suggestion [#3575](https://github.com/sofa-framework/sofa/pull/3575) ; - [Type] Construct matrices based on initializer-lists [#3584](https://github.com/sofa-framework/sofa/pull/3584) ; - [defaulttype] Template aliases for CRS matrices [#3592](https://github.com/sofa-framework/sofa/pull/3592) ; - [Simulation] SceneCheck can be added in plugins [#3597](https://github.com/sofa-framework/sofa/pull/3597) ; - [Contributing] Update file to mention good first issue [#3625](https://github.com/sofa-framework/sofa/pull/3625) ; - [Simulation] Error when trying to load a non-existing file [#3677](https://github.com/sofa-framework/sofa/pull/3677) ; - [all] Give reason when component cannot be created [#3682](https://github.com/sofa-framework/sofa/pull/3682) ; - [Type] Support structured binding for type::fixed_array [#3753](https://github.com/sofa-framework/sofa/pull/3753) ; - Update CONTRIBUTING.md [#3774](https://github.com/sofa-framework/sofa/pull/3774) . **Modules**; - [Collision.Response.Contact] Implement addKToMatrix for PenalityContactForceField [#3626](https://github.com/sofa-framework/sofa/pull/3626) ; - [Mapping.NonLinear] Implement missing applyJT [#3776](https://github.com/sofa-framework/sofa/pull/3776) ; - [Constraint] Add data to access constraint forces in LCPCS [#3796](https://github.com/sofa-framework/sofa/pull/3796) ; - [Rendering3D] OglModel: Use glMapBufferRange to update buffers [#3822](https://github.com/sofa-framework/sofa/pull/3822) ; - [Logging] Suggestion to better highlight warnings in console [#3914](https,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:53073,load,load,53073,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['load']
Performance,cmake_minimum_required(VERSION 3.22). # framework libraries; if(NOT TARGET Sofa.Config); # add Config only if it was not loaded before; sofa_add_subdirectory(library Config Sofa.Config ON); endif(); sofa_add_subdirectory(library Type Sofa.Type ON); sofa_add_subdirectory(library Geometry Sofa.Geometry ON); sofa_add_subdirectory(library Topology Sofa.Topology ON); sofa_add_subdirectory(library Helper Sofa.Helper ON); sofa_add_subdirectory(library LinearAlgebra Sofa.LinearAlgebra ON); sofa_add_subdirectory(library DefaultType Sofa.DefaultType ON); sofa_add_subdirectory(library Core Sofa.Core ON); sofa_add_subdirectory(library Simulation Sofa.Simulation ON); sofa_add_subdirectory(library SimpleApi Sofa.SimpleApi ON); sofa_add_subdirectory(library Testing Sofa.Testing ON). # Library gathering all framework libraries; sofa_add_subdirectory(library Framework Sofa.Framework ON); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/CMakeLists.txt:121,load,loaded,121,Sofa/framework/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/CMakeLists.txt,1,['load'],['loaded']
Performance,"cmake_minimum_required(VERSION 3.22). ############# extlibs ##############. # Nlohmann JSON (header-only); set(json_ROOT ""${CMAKE_CURRENT_LIST_DIR}/json"" CACHE PATH ""Nlohmann JSON directory""); # STB (header-only); set(STB_ROOT ""${CMAKE_CURRENT_LIST_DIR}/stb"" CACHE PATH ""STB directory""); # DiffLib; set(difflib_ROOT ""${CMAKE_CURRENT_LIST_DIR}/difflib"" CACHE PATH ""DiffLib directory""). ####################################; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/extlibs/CMakeLists.txt:154,CACHE,CACHE,154,extlibs/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/extlibs/CMakeLists.txt,3,['CACHE'],['CACHE']
Performance,cmake_minimum_required(VERSION 3.22). project(Sofa.Core_test). set(SOURCE_FILES; accessor/ReadAccessor.cpp; accessor/WriteAccessor.cpp; collision/NarrowPhaseDetection_test.cpp; loader/MeshLoader_test.cpp; objectmodel/AspectPool_test.cpp; objectmodel/BaseClass_test.cpp; objectmodel/BaseData_test.cpp; objectmodel/BaseLink_test.cpp; objectmodel/BaseObjectDescription_test.cpp; objectmodel/Data_test.cpp; objectmodel/DataLink_test.cpp; objectmodel/DataFileName_test.cpp; objectmodel/DataFileNameVector_test.cpp; objectmodel/DataCallback_test.cpp; objectmodel/DDGNode_test.cpp; objectmodel/MultiLink_test.cpp; objectmodel/RemovedData_test.cpp; objectmodel/SingleLink_test.cpp; objectmodel/VectorData_test.cpp; topology/BaseMeshTopology_test.cpp; DataEngine_test.cpp; Engine_test.cpp; MatrixAccumulator_test.cpp; ObjectFactory_test.cpp; PathResolver_test.cpp; TestEngine.cpp; TrackedData_test.cpp; VecId_test.cpp; visual/DisplayFlags_test.cpp; ). set(HEADER_FILES; objectmodel/BaseLink_test.h; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES} ${HEADER_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Core). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/test/CMakeLists.txt:177,load,loader,177,Sofa/framework/Core/test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/test/CMakeLists.txt,1,['load'],['loader']
Performance,"cmake_minimum_required(VERSION 3.22); project(QGLViewer VERSION 2.8.0). # Same checks as Sofa.GUI.Qt; # i.e find Qt6, then if not, Qt5, then if not error; find_package(Qt6 COMPONENTS Core CoreTools QUIET); if (NOT Qt6Core_FOUND); find_package(Qt5 COMPONENTS Core QUIET); endif(). if (Qt5Core_FOUND); sofa_find_package(Qt5 COMPONENTS Core Gui Xml OpenGL Widgets REQUIRED); set(QGLViewer_QT_TARGETS Qt5::Core Qt5::Gui Qt5::Xml Qt5::OpenGL Qt5::Widgets); elseif (Qt6Core_FOUND); sofa_find_package(Qt6 COMPONENTS Gui GuiTools Widgets WidgetsTools OpenGLWidgets Xml REQUIRED); set(QGLViewer_QT_TARGETS ${QGLViewer_QT_TARGETS} Qt::Core Qt::Gui Qt::Widgets Qt::OpenGLWidgets Qt::Xml); endif(). set(MOC_HEADER_FILES; camera.h; frame.h; keyFrameInterpolator.h; manipulatedCameraFrame.h; manipulatedFrame.h; qglviewer.h; ); # These header files don't need to be processed by the moc.; set(HEADER_FILES; VRender/AxisAlignedBox.h; VRender/Exporter.h; VRender/NVector3.h; VRender/Optimizer.h; VRender/ParserGL.h; VRender/Primitive.h; VRender/PrimitivePositioning.h; VRender/SortMethod.h; VRender/Types.h; VRender/VRender.h; VRender/Vector2.h; VRender/Vector3.h; VRender/gpc.h; config.h; constraint.h; domUtils.h; mouseGrabber.h; quaternion.h; vec.h; camera.h; frame.h; keyFrameInterpolator.h; manipulatedCameraFrame.h; manipulatedFrame.h; qglviewer.h; ); set(SOURCE_FILES; VRender/BSPSortMethod.cpp; VRender/BackFaceCullingOptimizer.cpp; VRender/EPSExporter.cpp; VRender/Exporter.cpp; VRender/FIGExporter.cpp; VRender/NVector3.cpp; VRender/ParserGL.cpp; VRender/Primitive.cpp; VRender/PrimitivePositioning.cpp; VRender/TopologicalSortMethod.cpp; VRender/VRender.cpp; VRender/Vector2.cpp; VRender/Vector3.cpp; VRender/VisibilityOptimizer.cpp; VRender/gpc.cpp; camera.cpp; constraint.cpp; frame.cpp; keyFrameInterpolator.cpp; manipulatedCameraFrame.cpp; manipulatedFrame.cpp; mouseGrabber.cpp; qglviewer.cpp; quaternion.cpp; saveSnapshot.cpp; vec.cpp; ); set(UI_FILES; ImageInterface.ui; VRenderInterface.ui; ). if (",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt:967,Optimiz,Optimizer,967,Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt,1,['Optimiz'],['Optimizer']
Performance,"cmake_minimum_required(VERSION 3.22); project(Sofa.GUI.Common LANGUAGES CXX). find_package(cxxopts 3.1 QUIET); if(NOT cxxopts_FOUND AND SOFA_ALLOW_FETCH_DEPENDENCIES); message(""Sofa.GUI.Common: DEPENDENCY cxxopts NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is ON, fetching cxxopts...""). include(FetchContent); FetchContent_Declare(cxxopts; GIT_REPOSITORY https://github.com/jarro2783/cxxopts; GIT_TAG v3.1.1; ). FetchContent_GetProperties(cxxopts); if(NOT cxxopts_POPULATED); FetchContent_Populate(cxxopts). set(CXXOPTS_BUILD_EXAMPLES OFF CACHE INTERNAL """"); set(CXXOPTS_BUILD_TESTS OFF CACHE INTERNAL """"); set(CXXOPTS_ENABLE_INSTALL ON CACHE INTERNAL """"); message(""Sofa.GUI.Common: adding subdirectory ${cxxopts_SOURCE_DIR}""). add_subdirectory(${cxxopts_SOURCE_DIR} ${cxxopts_BINARY_DIR}); endif(); elseif (NOT cxxopts_FOUND); message(FATAL_ERROR ""Sofa.GUI.Common: DEPENDENCY cxxopts NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install libcxxopts-dev (version>=3.1.0), or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). set(SOFAGUICOMMON_ROOT src/sofa/gui/common). set(HEADER_FILES; ${SOFAGUICOMMON_ROOT}/config.h.in; ${SOFAGUICOMMON_ROOT}/init.h; ${SOFAGUICOMMON_ROOT}/BaseGUI.h; ${SOFAGUICOMMON_ROOT}/BaseViewer.h; ${SOFAGUICOMMON_ROOT}/ColourPickingVisitor.h; ${SOFAGUICOMMON_ROOT}/FilesRecentlyOpenedManager.h; ${SOFAGUICOMMON_ROOT}/GuiDataRepository.h; ${SOFAGUICOMMON_ROOT}/GUIManager.h; ${SOFAGUICOMMON_ROOT}/MouseOperations.h; ${SOFAGUICOMMON_ROOT}/OperationFactory.h; ${SOFAGUICOMMON_ROOT}/PickHandler.h; ${SOFAGUICOMMON_ROOT}/ViewerFactory.h; ${SOFAGUICOMMON_ROOT}/ArgumentParser.h; ). set(SOURCE_FILES; ${SOFAGUICOMMON_ROOT}/init.cpp; ${SOFAGUICOMMON_ROOT}/BaseGUI.cpp; ${SOFAGUICOMMON_ROOT}/BaseViewer.cpp; ${SOFAGUICOMMON_ROOT}/ColourPickingVisitor.cpp; ${SOFAGUICOMMON_ROOT}/FilesRecentlyOpenedManager.cpp; ${SOFAGUICOMMON_ROOT}/GuiDataRepository.cpp; ${SOFAGUICOMMON_ROOT}/GUIManager.cpp; ${SOFAGUICOMMON_ROOT}/MouseOperations.cpp; ${SO",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Common/CMakeLists.txt:536,CACHE,CACHE,536,Sofa/GUI/Common/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Common/CMakeLists.txt,3,['CACHE'],['CACHE']
Performance,cmake_minimum_required(VERSION 3.22); project(Sofa.GUI.Component LANGUAGES CXX). set(SOFAGUICOMPONENT_SOURCE_DIR src/sofa/gui/component). set(HEADER_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/config.h.in; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SO,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:578,perform,performer,578,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,7,['perform'],['performer']
Performance,"cmake_minimum_required(VERSION 3.22); project(Sofa.Testing LANGUAGES CXX). # Enable testing features of cmake, like the add_test() command.; enable_testing(). # add googletest library; # set(googletest_disable_pthreads ON CACHE INTERNAL """"); find_package(GTest QUIET); if(NOT GTest_FOUND AND SOFA_ALLOW_FETCH_DEPENDENCIES); message(""${PROJECT_NAME}: DEPENDENCY googletest NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is ON, fetching googletest...""). include(FetchContent); FetchContent_Declare(googletest; GIT_REPOSITORY https://github.com/google/googletest; GIT_TAG v1.14.0; ). FetchContent_GetProperties(googletest); if(NOT googletest_POPULATED); FetchContent_Populate(googletest). set(BUILD_GMOCK OFF CACHE INTERNAL """"); set(BUILD_SHARED_LIBS ON CACHE BOOL """" FORCE); set(INSTALL_GTEST OFF CACHE BOOL """" FORCE) # rely on SOFA macros; set(gtest_force_shared_crt ON CACHE BOOL """" FORCE); set(gtest_disable_pthreads OFF CACHE BOOL """" FORCE). message(""${PROJECT_NAME}: adding subdirectory ${googletest_SOURCE_DIR}""). add_subdirectory(${googletest_SOURCE_DIR} ${googletest_BINARY_DIR}). target_compile_options(gtest_main PRIVATE ""-DGTEST_LINKED_AS_SHARED_LIBRARY=0""); target_compile_options(gtest PRIVATE ""-DGTEST_CREATE_SHARED_LIBRARY=1""). install(DIRECTORY ${googletest_SOURCE_DIR}/googletest/include/gtest DESTINATION include/extlibs/GTest/ COMPONENT headers); target_include_directories(gtest PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/GTest/>""); ; include(SofaMacros); sofa_create_package_with_targets(; PACKAGE_NAME GTest; PACKAGE_VERSION 1.14.0; TARGETS gtest AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""include""; INCLUDE_INSTALL_DIR ""extlibs/GTest""; ). set_target_properties(gtest PROPERTIES FOLDER Testing); set_target_properties(gtest_main PROPERTIES FOLDER Testing); endif(); elseif (NOT GTest_FOUND); message(FATAL_ERROR ""${PROJECT_NAME}: DEPENDENCY googletest NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install googletest, or enable SOFA_ALLOW_FETCH_DEPEND",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt:222,CACHE,CACHE,222,Sofa/framework/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt,6,['CACHE'],['CACHE']
Performance,"cmake_minimum_required(VERSION 3.22); project(Sofa; HOMEPAGE_URL https://www.sofa-framework.org/; ) # Cannot use VERSION with patch like ""00"". include(CMakeDependentOption). # Manually define VERSION; set(Sofa_VERSION_MAJOR 24); set(Sofa_VERSION_MINOR 06); set(Sofa_VERSION_PATCH 00); set(Sofa_VERSION ${Sofa_VERSION_MAJOR}.${Sofa_VERSION_MINOR}.${Sofa_VERSION_PATCH}). set(SOFA_URL ""${CMAKE_PROJECT_HOMEPAGE_URL}""). set(SOFA_VERSION_STR ""\""${Sofa_VERSION}\""""); set(SOFA_VERSION ""${Sofa_VERSION_MAJOR}${Sofa_VERSION_MINOR}${Sofa_VERSION_PATCH}""). ## Default build type; if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES); message(STATUS ""Setting build type to Release as none was specified.""); set(CMAKE_BUILD_TYPE ""Release"" CACHE STRING ""Build type"" FORCE); endif(). # Output Directories definition; set(ARCHIVE_OUTPUT_DIRECTORY lib); set(RUNTIME_OUTPUT_DIRECTORY bin); if(WIN32); set(LIBRARY_OUTPUT_DIRECTORY ${RUNTIME_OUTPUT_DIRECTORY}); else(); set(LIBRARY_OUTPUT_DIRECTORY ${ARCHIVE_OUTPUT_DIRECTORY}); endif(); ## Set the output directories globally; set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${ARCHIVE_OUTPUT_DIRECTORY}); set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${RUNTIME_OUTPUT_DIRECTORY}); set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${LIBRARY_OUTPUT_DIRECTORY}). # Option for packaging; option(SOFA_BUILD_RELEASE_PACKAGE ""Run package specific configure"" OFF). # Option to allow some dependencies such as cxxopts to be fetched by cmake if; # the package is not found; option(SOFA_ALLOW_FETCH_DEPENDENCIES ""Allow compatible dependencies to be fetched if the package is not found by cmake.; List of dependencies that can be fetched: cxxopts, gtest, metis, CImg"" ON). # Option to accelerate the compilation; # see https://cmake.org/cmake/help/v3.16/command/target_precompile_headers.html; # and https://cmake.org/cmake/help/v3.16/prop_tgt/DISABLE_PRECOMPILE_HEADERS.html. # https://cmake.org/cmake/help/latest/policy/CMP0127.html; if (${CMAKE_VERSI",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:733,CACHE,CACHE,733,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['CACHE'],['CACHE']
Performance,"cmake_minimum_required(VERSION 3.22); project(SofaPardisoSolver). set(SOFAPARDISOSOLVER_MAJOR_VERSION 0); set(SOFAPARDISOSOLVER_MINOR_VERSION 1); set(SOFAPARDISOSOLVER_VERSION ${SOFAPARDISOSOLVER_MAJOR_VERSION}.${SOFAPARDISOSOLVER_MINOR_VERSION}). set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""). find_package(SofaFramework REQUIRED); find_package(SofaBase REQUIRED). link_directories(""${CMAKE_CURRENT_SOURCE_DIR}/extlibs""); set(SOFAPARDISOSOLVER_LINK_DIR ""${CMAKE_CURRENT_SOURCE_DIR}/extlibs""). find_package(GFortran REQUIRED); find_package(BLAS REQUIRED); find_package(LAPACK REQUIRED); find_package(OpenMP REQUIRED). set(LINKER_DEPENDENCIES ${LINKER_DEPENDENCIES} SofaBase SofaGeneral); set(COMPILATION_FLAGS -DSOFA_BUILD_SOFAPARDISOSOLVER ). set ( PARDISO_LIB """" CACHE FILE ""set to Pardiso library downloaded from the web"" ). set(HEADER_FILES; SparsePARDISOSolver.h; config.h; ). set(SOURCE_FILES; SparsePARDISOSolver.cpp; initPardisoSolver.cpp; ). set(LINKER_DEPENDENCIES ${LINKER_DEPENDENCIES} SofaMeshCollision SofaBaseVisual SofaBaseLinearSolver Sofa.Core); set(LINKER_DEPENDENCIES ${LINKER_DEPENDENCIES} ${PARDISO_LIB} gfortran blas lapack gomp). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${SOFAPARDISOSOLVER_VERSION}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""${COMPILATION_FLAGS}""). target_link_libraries(${PROJECT_NAME} ${LINKER_DEPENDENCIES}). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${SOFAPARDISOSOLVER_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaPardisoSolver/CMakeLists.txt:799,CACHE,CACHE,799,applications/plugins/SofaPardisoSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaPardisoSolver/CMakeLists.txt,1,['CACHE'],['CACHE']
Performance,"cmake_minimum_required(VERSION 3.22); project(image VERSION 0.1). set(PLUGIN_IMAGE_COMPILE_SET ""standard"" CACHE STRING ""Set of image type to compile. Values are: none, standard (default), full.""); set_property(CACHE PLUGIN_IMAGE_COMPILE_SET PROPERTY STRINGS none standard full). find_package(Sofa.Core REQUIRED); sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(CImgPlugin REQUIRED). sofa_find_package(Sofa.GL QUIET); sofa_find_package(Sofa.GUI.Qt QUIET); sofa_find_package(SofaPython QUIET); sofa_find_package(MultiThreading QUIET); sofa_find_package(ZLIB); sofa_find_package(Freenect QUIET). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}). set(HEADER_FILES; config.h.in; CImgData.h; CollisionToCarvingEngine.h; Containers.h; ImageAccumulator.h; ImageAlgorithms.h; ImageContainer.h; GenerateImage.h; ImageDataDisplay.h; ImageExporter.h; ImageFilter.h; ImageOperation.h; ImageSampler.h; ImageToRigidMassEngine.h; ImageTransform.h; ImageTransformEngine.h; ImageTypes.h; ImageValuesFromPositions.h; ImageCoordValuesFromPositions.h; MarchingCubesEngine.h; MergeImages.h; MeshToImageEngine.h; TransferFunction.h; VectorVis.h; VoronoiToMeshEngine.h; DepthMapToMeshEngine.h; ImageViewer.h; ). set(SOURCE_FILES; initImage.cpp; ). if(NOT PLUGIN_IMAGE_COMPILE_SET STREQUAL ""none""); list(APPEND SOURCE_FILES; CollisionToCarvingEngine.cpp; ImageAccumulator.cpp; ImageContainer.cpp; GenerateImage.cpp; ImageDataDisplay.cpp; ImageExporter.cpp; ImageFilter.cpp; ImageOperation.cpp; ImageSampler.cpp; ImageToRigidMassEngine.cpp; ImageTransform.cpp; ImageTransformEngine.cpp; ImageTypes.cpp; ImageValuesFromPositions.cpp; ImageCoordValuesFromPositions.cpp; MarchingCubesEngine.cpp; MergeImages.cpp; MeshToImageEngine.cpp; TransferFunction.cpp; VoronoiToMeshEngine.cpp; DepthMapToMeshEngine.cpp; ImageViewer.cpp; ); endif(). set(README_FILES; image.txt; ). if(SofaPython_FOUND); set(PYTHON_FILES; python/SofaImage/API.py; python/SofaImage/__init__.py; ); list(APPEND SOURCE_FILES python",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/CMakeLists.txt:106,CACHE,CACHE,106,applications/plugins/image/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/CMakeLists.txt,2,['CACHE'],['CACHE']
Performance,"concerning differences between static and dynamic topologies, refer to; 		 topological tutorials. ; Key points; ; A meshLoader to read mesh file. (not necessary in regular mesh); A mechanicalObject with geometry point positions.; Dynamic topological components to store the volume mesh. Add a new GNode to the root node. Rename it ""Tetrahedrons Mesh"".; Add a MeshGmshLoader component to the Tetrahedrons Mesh node. Rename it ""loader"". Specify the Filename of the object to be /Sofa/share/mesh/cylinder.msh.; Add a MechanicalObject component to the Tetrahedrons Mesh node. Rename it ""Volume"".; Under the Transformations tab, press the Scale of the DOFs in 3 dimensions button. In the textbox that appears, enter ""@loader.scale3d"". Similarly, press the Translation of the DOFs button and enter ""@loader.translation"", and press the Rotation of the DOFs button and enter ""@loader.rotation"".; Under the Vector 1/4 tab, press the position coordinates of the degrees of freedom button. In the textbox that appears, enter ""@loader.position"". ; Add a TetrahedronSetTopologyContainer component to the Tetrahedrons Mesh node. Rename it ""Container"". Specify /Sofa/share/mesh/cylinder.msh as the Filename of the mesh. TetrahedronSetTopologyContainer is a topology container, it is used to store a topology (positions, edges, triangles, tetrahedrons). Usually this topology is not defined manually, but copied from the topology of a MeshLoader component.; In the Property 2/2 tab, press the List of tetrahedron indices button. Enter ""@loader.tetrahedra"" in the textbox that appears. This syntax means that the Data ""tetrahedra"" contained in the SOFA Component of this node named ""loader"" must be copied into this Data. ; Add a TetrahedronSetGeometryAlgorithms component to the Tetrahedrons Mesh node. In the Visualization 2/2 tab, check the if true, draw the tetahedra in the topology box; Change the RGB code color used to draw tetrahedra property to (1 1 0.3). ; The options in the TetrahedronSetGeometryAlgorithm",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/1_TopoMapping.html:1164,load,loader,1164,examples/Tutorials/StepByStep/TopologicalMapping/1_TopoMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/1_TopoMapping.html,1,['load'],['loader']
Performance,cs] Add simple tests on LCPForceFeedback component [#1576]( https://github.com/sofa-framework/sofa/pull/1576 ); - [SofaImplicitField] Add new ImplicitFields and getHessian to ScalarField [#1510]( https://github.com/sofa-framework/sofa/pull/1510 ); - **[SofaKernel]** ADD: add polynomial springs force fields [#1342]( https://github.com/sofa-framework/sofa/pull/1342 ); - **[SofaKernel]** Add DataLink object & PathResolver. [#1485]( https://github.com/sofa-framework/sofa/pull/1485 ); - **[SofaKernel]** Add setLinkedBase method in BaseLink [#1436]( https://github.com/sofa-framework/sofa/pull/1436 ); - **[SofaKernel]** Add whole program optimization (aka link-time optimization) for msvc [#1468]( https://github.com/sofa-framework/sofa/pull/1468 ); - **[SofaKernel]** Exposing Data in ContactListener. [#1678]( https://github.com/sofa-framework/sofa/pull/1678 ); - **[SofaKernel]** Filerepository gettemppath [#1383]( https://github.com/sofa-framework/sofa/pull/1383 ); - **[SofaKernel]** Set read-only all data defined by the file loaded [#1660]( https://github.com/sofa-framework/sofa/pull/1660 ); - [SofaQtGui] Restore GraphWidget for Momentum and Energy using QtCharts instead of Qwt [#1508]( https://github.com/sofa-framework/sofa/pull/1508 ). **Plugins / Projects**; - [Compliant] Add WinchMultiMapping and ContactMultiMapping [#1557]( https://github.com/sofa-framework/sofa/pull/1557 ). ### Bug Fixes; **Architecture**; - [CMake] FIX non-existent target with sofa_add_plugin [#1584]( https://github.com/sofa-framework/sofa/pull/1584 ); - [CMake] Fix Cmake configure step with SOFA_WITH_DEPRECATED_COMPONENTS [#1452]( https://github.com/sofa-framework/sofa/pull/1452 ). **Extlibs**; - [extlibs/gtest] Fix the broken sofa_create_package_with_targets in gtest [#1457]( https://github.com/sofa-framework/sofa/pull/1457 ). **Modules**; - [All] issofa_bugfix: cleans and fixes [#218]( https://github.com/sofa-framework/sofa/pull/218 ); - [SofaBaseLinearSolver] Fix logging info with SPARSEMATRIX_V,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:219028,load,loaded,219028,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loaded']
Performance,"ctory(plugin applications/plugins/SceneCreator SceneCreator OFF; WHEN_TO_SHOW ""NOT SOFA_BUILD_SCENECREATOR AND NOT SOFA_BUILD_TESTS AND NOT SOFA_BUILD_TUTORIALS AND NOT SOFA_BUILD_RELEASE_PACKAGE""; VALUE_IF_HIDDEN ""ON""). ## Plugins; add_subdirectory(applications/plugins). ## Applications; add_subdirectory(applications/projects). # Tutorial add subdirectory; if(SOFA_BUILD_TUTORIALS); add_subdirectory(applications/tutorials); endif(). ## SOFA scenes; option(SOFA_BUILD_ADD_SCENES ""Add SOFA scenes as a project of the build."" OFF); if (SOFA_BUILD_ADD_SCENES); add_subdirectory(examples); endif(). ## SOFA shaders; option(SOFA_BUILD_ADD_SHADERS ""Add SOFA shaders as a project of the build."" OFF); if (SOFA_BUILD_ADD_SHADERS); add_subdirectory(share/shaders); endif(). ## Build external projects at the same time; set(SOFA_EXTERNAL_DIRECTORIES """" CACHE STRING ""list of paths separated by ';'""); if(NOT ""${SOFA_EXTERNAL_DIRECTORIES}"" STREQUAL """"); foreach(dir ${SOFA_EXTERNAL_DIRECTORIES}); get_filename_component(name ${dir} NAME) # Get the name of the actual directory; message(""Adding external directory: ${name} (${dir})""); add_subdirectory(${dir} ""${CMAKE_CURRENT_BINARY_DIR}/external_directories/${name}""); endforeach(); endif(). ## Custom; if(EXISTS ""${CMAKE_CURRENT_LIST_DIR}/custom.cmake""); message(""Adding custom file""); include( ""custom.cmake"" ); endif(). ## IDE directories; # Sofa.Component; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES ""Sofa.Component.*"" AND NOT target MATCHES "".*_relocatable_install""); set_target_properties(${target} PROPERTIES FOLDER Sofa.Component) # IDE folder; endif(); endforeach(); # Testing; if(TARGET Sofa.Testing) # No need to search for test targets if tests are not enabled; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES "".*_test"" OR target MATCHES "".*_simutest""); set_target_properties(${target} PROPERTIES FOLDER Testing) # IDE folder; endif(); endforeach(); endif(); ##. ## I",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:8806,CACHE,CACHE,8806,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['CACHE'],['CACHE']
Performance,dFrameButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleBu,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:1274,perform,performer,1274,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,dedCameraPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR},MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:1597,perform,performer,1597,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,"defined in `VecTypes.h` and `RigidTypes.h`).; SofaCUDA adds more data types.; They still represent the same type of data, but they are implemented such that they can be manipulated on the GPU using CUDA.; For example, the CPU data type `Vec3Types` equivalent in SofaCUDA is `CudaVec3Types`.; CUDA data types are defined in `CudaTypes.h`. In SOFA, components working with a specific data type are just template classes explicitly instantiated with this data type.; For example, `MechanicalObject<Vec3Types>` is the instantiation of the template class `MechanicalObject` with `Vec3Types` as the template parameter.; In SofaCUDA, components are template specializations of the SOFA equivalents.; For example, `MechanicalObject<CudaVec3Types>` is a specialization of `MechanicalObject` for `CudaVec3Types`. The result is that the user just has to change the template parameter in the scene, in order to use the CUDA version of the same component.; For example, in XML, `<MechanicalObject template=""Vec3f"" />` is the CPU version of `MechanicalObject`, and `<MechanicalObject template=""CudaVec3f"" />` is the GPU version.; Note that in SOFA Vec3Types are by default in double (Vec3d), except if you compile in float only (CMake option: SOFA_FLOATING_POINT_TYPE). However CudaVec3Types are using float on the device. You can activate double precision using CMake option: SOFACUDA_DOUBLE). ## Performances. The folder `scenes/benchmarks` contains simulation files used to compare performances between CPU and GPU implementations.; All scenes exist in double: the CPU version has the suffix `_cpu`, and the GPU version has the suffix `_gpu`. To give you an idea of the speed up you can achieve using SofaCUDA, measurement have been performed on some systems on some simulations in `scenes/benchmarks`.; It is provided as a CSV file in the `doc` folder.; Here is the corresponding graph:; ![performances_csv](https://user-images.githubusercontent.com/21199245/148964875-99c21320-384f-40c9-9dc6-a5e77a8dca82.png)",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/README.md:2101,Perform,Performances,2101,applications/plugins/SofaCUDA/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/README.md,3,"['Perform', 'perform']","['Performances', 'performances', 'performed']"
Performance,dyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.cpp; ${SOFAGUICOMPONENT_SOU,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:1871,perform,performer,1871,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,"eComponentList for most modules [#3386](https://github.com/sofa-framework/sofa/pull/3386) ; - [Constraint.Lagrangian.Solver] Add events in the constraint solver pipeline [#3418](https://github.com/sofa-framework/sofa/pull/3418) ; - [FEM.Elastic] Speedup hexa drawing in force field [#3420](https://github.com/sofa-framework/sofa/pull/3420) ; - [Visual] Introduce TrailRenderer [#3471](https://github.com/sofa-framework/sofa/pull/3471) ; - [Solver.Direct] Unit tests on empty system [#3500](https://github.com/sofa-framework/sofa/pull/3500) ; - [MechanicalLoad] Move getValue call out of the loops [#3503](https://github.com/sofa-framework/sofa/pull/3503) . **Plugins / Projects**; - [SofaCUDA] Add ConstraintCorrection instantiation in CudaVec3f/CudaVec3f1 [#3004](https://github.com/sofa-framework/sofa/pull/3004) ; - [SofaCUDA] Make CudaConstantForceField compatible with CudaRigid types [#3164](https://github.com/sofa-framework/sofa/pull/3164) ; - [GUI.performer] Add remove elements function for LineCollisionModel [#3239](https://github.com/sofa-framework/sofa/pull/3239) ; - [Regression] Test Eigen solvers scenes for regression [#3326](https://github.com/sofa-framework/sofa/pull/3326); - [Regression] Add HexahedronFEMForceFieldAndMass to regression tests [#3367](https://github.com/sofa-framework/sofa/pull/3367) ; - [SofaCarving] Update and add more tests in SofaCarving_test [#3407](https://github.com/sofa-framework/sofa/pull/3407) ; - [SofaCuda] Add method in CudaVector Accessor and CudaBilateralInteractionConstraint [#3460](https://github.com/sofa-framework/sofa/pull/3460) ; - [SofaPhysicsAPI] Add several methods using output parameters [#3520](https://github.com/sofa-framework/sofa/pull/3520) ; - [SofaPhysicsAPI] Add C bindings to access C++ api [#3539](https://github.com/sofa-framework/sofa/pull/3539) ; - [SofaPhysicsAPI] Add methods and C bindings to load SOFA ini file, plugins and messageHandler [#3540](https://github.com/sofa-framework/sofa/pull/3540) . ### Bug Fixes. *",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:75891,perform,performer,75891,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['perform'],['performer']
Performance,"ed by the Free Software; Foundation. 10. If you wish to incorporate parts of the Program into other free; programs whose distribution conditions are different, write to the author; to ask for permission. For software which is copyrighted by the Free; Software Foundation, write to the Free Software Foundation; we sometimes; make exceptions for this. Our decision will be guided by the two goals; of preserving the free status of all derivatives of our free software and; of promoting the sharing and reuse of software generally. NO WARRANTY. 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY; FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN; OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES; PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED; OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF; MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS; TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE; PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,; REPAIR OR CORRECTION. 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING; WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR; REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,; INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING; OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED; TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY; YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER; PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE; POSSIBILITY OF SUCH DAMAGES. END OF TERMS AND CONDITIONS. How to Apply These Terms to Your New Programs. If you develop a new program, and you want it to be of the greatest; possible use to the public, the best way to achieve this is to make it; free software",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:14255,PERFORM,PERFORMANCE,14255,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,5,['PERFORM'],['PERFORMANCE']
Performance,"ed(VERSION 3.22); project(Sofa.Config LANGUAGES CXX). list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules""); list(APPEND CMAKE_PREFIX_PATH ""${CMAKE_BINARY_DIR}/lib/cmake""). include(SofaMacros). # Clear internal target list (set by the macro sofa_add_generic() ); set_property(GLOBAL PROPERTY __GlobalTargetList__ """"); set_property(GLOBAL PROPERTY __GlobalTargetNameList__ """"). # Help RELOCATABLE plugins to resolve their dependencies.; # See SofaMacrosInstall.cmake for usage of this property.; define_property(TARGET; PROPERTY ""RELOCATABLE_INSTALL_DIR""; BRIEF_DOCS ""Install directory of RELOCATABLE target""; FULL_DOCS ""Install directory of RELOCATABLE target""; ). # Enable the organisation in folders for generators that support; # it. (E.g. some versions of Visual Studio have 'solution folders'); set_property(GLOBAL PROPERTY USE_FOLDERS ON). ### Sofa using type double or float; set(SOFA_FLOATING_POINT_TYPE double CACHE STRING; ""Type used for floating point values in SOFA. It actually determines:; - what template instanciations will be compiled (via the definition of the; SOFA_FLOAT and SOFA_DOUBLE macros); - what is the type behind the 'SReal' typedef used throughout SOFA.""); set_property(CACHE SOFA_FLOATING_POINT_TYPE PROPERTY STRINGS float double). if(${SOFA_FLOATING_POINT_TYPE} STREQUAL double); set(SOFA_DOUBLE 1); set(SOFA_FLOAT 0); elseif(${SOFA_FLOATING_POINT_TYPE} STREQUAL float); set(SOFA_DOUBLE 0); set(SOFA_FLOAT 1); endif(). # If you really don't understand the negated logics of SOFA_DOUBLE and; # SOFA_FLOAT please consider using SOFA_WITH_FLOAT and SOFA_WITH_DOUBLE.; # Eg: SOFA_WITH_FLOAT indicate that you need to generate the; # float code and SOFA_WITH_DOUBLE indicates that you; # need to generate the double related code.; if(${SOFA_FLOATING_POINT_TYPE} STREQUAL float); set(SOFA_WITH_FLOAT 1); set(SOFA_WITH_DOUBLE 0); endif(); if(${SOFA_FLOATING_POINT_TYPE} STREQUAL double);",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:1028,CACHE,CACHE,1028,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['CACHE'],['CACHE']
Performance,"efactor the MutationListener [#917]( https://github.com/sofa-framework/sofa/pull/917 ); - **[SofaKernel]** Some Topology cleaning... [#866]( https://github.com/sofa-framework/sofa/pull/866 ); - [SofaOpenglVisual] Fix ogl perf problem [#1069]( https://github.com/sofa-framework/sofa/pull/1069 ). ### Modularizations. - [SofaExporter] Modularize (+minor dependency cleaning) [#915]( https://github.com/sofa-framework/sofa/pull/915 ); - [SofaHaptics] Modularize sofa haptics [#945]( https://github.com/sofa-framework/sofa/pull/945 ); - [SofaOpenglVisual] Pluginize. [#1080]( https://github.com/sofa-framework/sofa/pull/1080 ). ### Improvements. **Architecture**; - [CMake] Rework sofa_generate_package [#951]( https://github.com/sofa-framework/sofa/pull/951 ); - [CMake] SofaMacros.cmake: deprecating sofa_create_package [#909]( https://github.com/sofa-framework/sofa/pull/909 ). **Modules**; - [All] Improve install and packaging [#1018]( https://github.com/sofa-framework/sofa/pull/1018 ); - [All] Plugins finding and loading [#913]( https://github.com/sofa-framework/sofa/pull/913 ); - [All] Replace deprecated c++ standard binder component [#908]( https://github.com/sofa-framework/sofa/pull/908 ); - **[SofaBaseMechanics]** BarycentricMapping: spatial hashing, handle limit cases [#896]( https://github.com/sofa-framework/sofa/pull/896 ); - **[SofaBaseTopology]** Clean Topology logs and add AdvanceTimer logs [#874]( https://github.com/sofa-framework/sofa/pull/874 ); - **[SofaBaseVisual]** Add default texcoord in VisualModel [#933]( https://github.com/sofa-framework/sofa/pull/933 ); - [SofaConstraint] ADD control on constraint force in UniformConstraint [#1027]( https://github.com/sofa-framework/sofa/pull/1027 ); - **[SofaCore]** Add possibilities to draw lines on surfaces in DrawTool [#937]( https://github.com/sofa-framework/sofa/pull/937 ); - **[SofaCore]** Collision visitor primitive tests count [#930]( https://github.com/sofa-framework/sofa/pull/930 ); - **[SofaCore]** ADD Datacallb",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:258921,load,loading,258921,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loading']
Performance,"eld.py; - Improving a few examples by making the embedding nodes as non pickable (tag 'NoPicking'); - Add BaseNode::getRootPath; - Improving performances: - Message::class is now an enum; - Updated draw method of PointSetGeometryAlgorithms, QuadSetGeometryAlgorithms, TetrahedronSetGeometryAlgorithms, TriangleSetGeometryAlgorithms; - Add Blender-like orientation helper in the bottom-left part of the screen while drawing bbox (QtGlViewer); - Add Blender-like orientation helper in the bottom-left part of the screen while drawing bbox (QtViewer); - add of GUIEvent into the STLExporter; - Make the code compatible with ClipPlane (using ClipVertex in shaders, which is deprecated for GLSL > 1.4); - Optimize the callto C-PYTHON side when the functions are not implemented in the python side; - Add color attribute support (and default color if not present in the node); - Reactivate color map in TetraFEM, as it does not depend on SofaOpenGLVisual anymore; - indices data field for UniformMass; - analyze matrix only if number of non-zeroes has changed and no iterative refinement; - update the applyConstraint methods according to the actual API; - Adding ProjectionTo{Plane|Line}MultiMapping where the plane (origin,normal) and the line (origin,direction) are dofs; - add MeshBoundaryROI with an example. - [Tests]; - for (multi)Mapping test, check the size of the mapping output is correct; - adding TestMessageHandler that raises a gtest failure each time an error message is processed; - test for node removal; - test for removal of a node containing an UncoupledConstraintCorrection (for now the test fails because there is a problem with the removal of that component); - add of Multi2Mapping_test; - add DistanceMapping_test. - [SofaPython]; - logger: cleaning emitter; - sml.Mesh: adding load function; - sml: python set for tags is created by objects themselves; - sml: add tag to JointGeneric; - sml: add the printLog flag; - sml: setup units in BaseScene for all sml Scene class; - sml: m",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:346367,Optimiz,Optimize,346367,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Optimiz'],['Optimize']
Performance,ent LANGUAGES CXX). set(SOFAGUICOMPONENT_SOURCE_DIR src/sofa/gui/component). set(HEADER_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/config.h.in; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOUR,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:1059,perform,performer,1059,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,"er_test [#1823]( https://github.com/sofa-framework/sofa/pull/1823 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test (2) [#1825]( https://github.com/sofa-framework/sofa/pull/1825 ); - **[SofaHelper]** Fix AdvandedTimer test with end() [#1781]( https://github.com/sofa-framework/sofa/pull/1781 ); - **[SofaHelper]** Fix compilation in kdtree [#1942]( https://github.com/sofa-framework/sofa/pull/1942 ); - **[SofaHelper]** Fix out of bounds error [#1868]( https://github.com/sofa-framework/sofa/pull/1868 ); - **[SofaHelper]** Fix the use of Read/WriteAccessorVector that is too permisive (in accessor.h) [#1900]( https://github.com/sofa-framework/sofa/pull/1900 ); - **[SofaHelper][SofaBoundaryCondition]** Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - **[SofaKernel]** Fix SimpleApi forward declaration of BaseObject and relocatable of Sofa.GL [#1760]( https://github.com/sofa-framework/sofa/pull/1760 ); - **[SofaKernel]** Removing double load() in Loaders [#2094]( https://github.com/sofa-framework/sofa/pull/2094 ); - [SofaLoader] Fix MeshObjLoader material parsing by using the proper locale. [#2200]( https://github.com/sofa-framework/sofa/pull/2200 ); - [SofaLoader] FIX Circular dependency in the update of MeshObjLoader [#2201]( https://github.com/sofa-framework/sofa/pull/2201 ); - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ); - [SofaMeshCollision] Fix: windows debug linkage of class EmptyFilter [#1839]( https://github.com/sofa-framework/sofa/pull/1839 ); - [SofaMiscCollision] Contact response order [#2134]( https://github.com/sofa-framework/sofa/pull/2134 ); - [SofaMiscCollision] Fix config.in cmake file for export [#2052]( https://github.com/sofa-framework/sofa/pull/2052 ); - [SofaMiscFEM] Minor changes in TrianglePressureFF and TriangularFEMFF [#1779]( https://github.com/sofa-framework/sofa/pull/1779 ); - [SofaMiscForceField] Clean MeshM",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:188533,load,load,188533,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Load', 'load']","['Loaders', 'load']"
Performance,eraButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButt,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:1341,perform,performer,1341,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,erformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.cpp; ${SOFAGUICOMPONENT_SOURC,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:1806,perform,performer,1806,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,"es particles belonging ; 			to the same mechanical object, the ForceField is said to be internal. Otherwise, if it links several mechanical objects, it is said to be an interaction forcefield. 			; 			Examples of SpringForceField components in Sofa are JointSpringForceField (for rigid mechanical objects) StiffSpringForceField, and MeshSpringForceField ; 		 (for deformable mechanical objects). ; 			; 			To describe a SpringForceField, we therefore have to specify the following parameters: ; 			; The two mechanical objects that are in interaction. It can be a unique mechanical object in the case of an internal ForceField.; A set of pairs of indices which specify the end particles for each spring to be created. ; Finally, the internal parameters of each spring, like the rest length, the stiffness, and damping factor. . Key Points:. If you have a limited number of particles that you want to connect with springs, you can use JointSpringForceField (for rigid bodies) ; 			or StiffSpringForceField (for deformable bodies) and specify manually the indices and spring parameters.; If you load particles from a mesh using a MeshTopology component, there is a corresponding MeshSpringForceField component which ; 			does the job of creating springs for you, leaving you only to specify global parameters for the springs. You can do fine tuning later on; 			if you wish to. Results:; 		At each time step, the force computed by the SpringForceField is added to the mechanical objects in interaction. When the spring network ; 		becomes large this can result in some instability, particularly if you wish to interact with your object using the mouse. ; 		You can tweak spring parameters or the simulation parameters to resolve that issue, (like the vdamping factor if you use an implicit integration scheme) ; 		but this can be a fastidious operation. ; 		As a general rule, FEM ForceField methods provide a neater way to handle deformations.; 		; 		. 	 A MeshSpringForceField becoming unstable; 		. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/ForceFields/TutorialForceFieldSprings.html:1261,load,load,1261,examples/Tutorials/ForceFields/TutorialForceFieldSprings.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/ForceFields/TutorialForceFieldSprings.html,1,['load'],['load']
Performance,etting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedC,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:1410,perform,performer,1410,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,"example.dae"" illustrate pretty well how works the plugin.; Its XML description contains a line with the new SceneColladaLoader component with its filename data filled as below :. <SceneColladaLoader name=""sceneColladaLoader"" filename=""example.dae"" />. The collada file example.dae contains a very basic scene with a mesh skinned with two bones representing an arm which is animated in two step as shown in the following screenshots [took from Blender (software)] :.       . Animation step 1 : Arm is raised. Animation step 2 : Arm is bent. And now the same scene loaded into Sofa :. Animation step 1 : Arm is raised; Animation step 1-2 : Arm animation interpolated by Sofa(animation speed depends of the animation time step); Animation step 2 : Arm is bent. Another example with a scene containing two meshes, one with the same bones as in the previous example and a sphere without skinning.       . The scene in the Sofa Modeler. The same scene in runSofa.       As you can see in Sofa Modeler, the scene to load a collada file is very simple. We have the SceneColladaLoader to load it and, important thing, we also have an EulerSolver ; which will be used by the potential SkeletalMotionProjectiveConstraints to ""play"" the animation updating positions and velocities.; When you launch runSofa with this scene, a new node will be added which contains the whole collada scene. The name of this node is the name you gave to the ; SceneColladaLoader plus the string ""_scene"". On the right picture, the loader generated two child nodes call ""mesh 0"" which contains a mesh without skinning (the sphere), and ; ""mesh 1"" which contains a mesh with skinning and bones animation directly from the collada file.; The SkeletalMotionProjectiveConstraint automatically interpolates between animation frames, play with the animation time step to slown down or speed up the animation. As you can see on the other example below, the woman's hair does not fit her head very well because its coordinates system belongs",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:3848,load,load,3848,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,1,['load'],['load']
Performance,"f a Scene (7/9). Description; Like we did in this part of the tutorial, we will map another model to the simulated mechanical object.; 		This time, it won't be only a visual model, but a mechanical object which aims at handling the collisions, and to transmit the forces due to the collision response to the simulated object. ; Once this model is able to transmit the forces, we just need to add some collision models like we did here ; Remember:; ; Visual Mapping: the information is passed Top-Down: the simulated object propagates the positions (method apply) and the velocities (method applyJ) to the mapped model; Mechanical Mapping: the information is passed both ways: the simulated object propagates the positions (method apply) and the velocities (method applyJ) to the mapped model, and on the other site, the mapped model propagates the forces to the simulated object (method applyJT) . Key points; Add a new GNode to the Object node, and rename it ""CollisionNode"".; Now we need to load the model from a mesh file. As a first example we will use a cube as the collision object.; Add a MeshTopology to the CollisionNode, and change the Filename of the mesh to ; /mySofaDirectory/Sofa/share/mesh/cube.obj.; Next we need a MechanicalObject to store the positions, velocities and forces of the collision object; Add a MechanicalObject to the CollisionNode. Change the Scale of the DOFs in 3 dimensions property to ""(6 6 6)"".; The collision object is mapped to the simulated deformable model using a Mapping, this time a MechanicalMapping: BarycentricMapping. You may wonder what the difference is between this mapping and the one used for the visual model, as we are using the same component! What makes a mapping visual or mechanical?; This is determined by the template used to create the mapping:; Find the BarycentricMapping component using the Filter. From the dropdown menu, select Vec3d, Vec3d.; This mean it transforms a state expressed by Vec3d type into Vec3d. Remember, collision mod",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/6_FullObject.html:1005,load,load,1005,examples/Tutorials/StepByStep/FullObject/6_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/6_FullObject.html,1,['load'],['load']
Performance,f input springs [#1093]( https://github.com/sofa-framework/sofa/pull/1093 ); - **[SofaKernel]** Change several AdvancedTimer logs for a better tracking [#1094]( https://github.com/sofa-framework/sofa/pull/1094 ); - **[SofaKernel]** Consistent SofaFramework modules [#1200]( https://github.com/sofa-framework/sofa/pull/1200 ); - **[SofaKernel]** Make componentState a real data field [#1168]( https://github.com/sofa-framework/sofa/pull/1168 ); - [SofaMiscForceField] Use doUpdateInternal API in MeshMatrixMass [#1151]( https://github.com/sofa-framework/sofa/pull/1151 ); - [SofaQtQuick] Pass extra command-line arguments for python scenes in a more high-level function call [#992]( https://github.com/sofa-framework/sofa/pull/992 ); - [SofaSphFluid] Add sprite-based point render [#1194]( https://github.com/sofa-framework/sofa/pull/1194 ); - [SofaSphFluid] Update rendering & other [#1215]( https://github.com/sofa-framework/sofa/pull/1215 ). **Plugins / Projects**; - [runSofa] Fix DataWidget display Speicherleck and long loading [#1181]( https://github.com/sofa-framework/sofa/pull/1181 ). **Examples / Scenes**; - [Examples] Add some mesh and PR1000 demo scene [#1112]( https://github.com/sofa-framework/sofa/pull/1112 ). ### Bug Fixes. **Architecture**; - [CMake]**[SofaFramework]** Remove FFMPEG_exec target from the dependencies of SofaFramework [#1177]( https://github.com/sofa-framework/sofa/pull/1177 ); - [CMake] FIX Eigen finding [#1175]( https://github.com/sofa-framework/sofa/pull/1175 ); - [CMake] FIX unknown compiler option on VS2015 [#1192]( https://github.com/sofa-framework/sofa/pull/1192 ); - [SofaMacros] FIX default module version [#1123]( https://github.com/sofa-framework/sofa/pull/1123 ); - [SofaMacros] FIX sofa_set_install_relocatable escaped chars [#1154]( https://github.com/sofa-framework/sofa/pull/1154 ). **Modules**; - [All] Fix warnings [#1206]( https://github.com/sofa-framework/sofa/pull/1206 ); - [All] Fix warnings [#1167]( https://github.com/sofa-framework/so,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:247891,load,loading,247891,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loading']
Performance,"ffects, physics, animation, kinematics, ; and even multiple version representations of the same asset.COLLADA FX enables leading 3D authoring tools to work effectively together to create shader ; and effects applications and assets to be authored and packaged using OpenGL Shading Language, Cg, CgFX, and DirectX FX. How to use.       To use this plugin, you just have to go in you sofa configuration file (sofa-local.prf or if you have not this file, use sofa-default.prf in the sofa root directory) and uncomment or add this following line :. DEFINES += SOFA_HAVE_PLUGIN_COLLADA. If you are a Visual Studio user you must generate sofa projects again using the corresponding batch file (Project VC*.bat).       Build the ColladaSceneLoader plugin and load the resulting dynamic library with the Sofa plugin manager available in runSofa or in the sofa Modeler (in the main toolbar : Edit / Plugin Manager...).; You are now able to use the new SceneColladaLoader component. In the Modeler, you can find it in the Loader category. To do so, drag and drop the component into your scene graph and fill up the data ""filename"" with ; the path of the collada scene you want to load. If you launch runSofa with your scene you will see your SceneColladaLoader component and a new generated node below which contains the whole collada scene.       For every skinned mesh, the SceneColladaLoader component creates a MechanicalObject containing the bones used to skin the mesh, a SkeletalMotionContraint containing the whole bones animation ; and a SkinningMapping in order to apply the skinning on the mesh.; For every mesh, skinned or not, the loader also creates components needed for visualisation : a MechanicalObject with the mesh vertices, a MeshTopology containing the mesh edges, triangles and ; quads, an OglModel component to draw the mesh on the screen and if the mesh is not skinned an IdentityMapping to link the MechanicalObject containing the mesh vertices to the OglModel (this step is ; automat",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:1668,Load,Loader,1668,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,1,['Load'],['Loader']
Performance,former.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_D,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:1737,perform,performer,1737,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,former/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.cpp. ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Model REQUIRED); sofa_find_package(Sofa.Component.Collision.Geometr,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:2598,perform,performer,2598,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,former/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.cpp. ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Model REQUIRED); sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Mapper REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED);,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:2741,perform,performer,2741,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,former/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.cpp. ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Model REQUIRED); sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Mapper REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:2812,perform,performer,2812,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,former/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.cpp. ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Model REQUIRED); sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Mapper REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED); sofa_find_package(Sofa.Component.Topology.Mapping REQUIRED). ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:2879,perform,performer,2879,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,framework/sofa/pull/2141 ); - [SofaGuiQt] UX: graph is easier to read [#2356]( https://github.com/sofa-framework/sofa/pull/2356 ); - [SofaHelper] Add a method getTrace() to BackTrace class. [#2341]( https://github.com/sofa-framework/sofa/pull/2341 ); - [SofaHelper] Factory key type can be other than std::string [#2259]( https://github.com/sofa-framework/sofa/pull/2259 ); - [SofaMiscFEM_test] Add class to test and compare TriangleFEM and TriangularFEMForceField [#2249]( https://github.com/sofa-framework/sofa/pull/2249 ); - [SofaMiscForceField_test] Add TopologicalChanges unit tests for MeshMatrixMass [#2215]( https://github.com/sofa-framework/sofa/pull/2215 ); - [SofaMiscTopology] Add a component TopologyBoundingTrasher to remove mesh going outside from scene bounding box [#2288]( https://github.com/sofa-framework/sofa/pull/2288 ); - [SofaSimpleFem] Add callback on VonMises in TetrahedronFEMForceField [#2407]( https://github.com/sofa-framework/sofa/pull/2407 ); - [SofaSimpleFem] Hexa FEM optimization when assembling by bloc [#2240]( https://github.com/sofa-framework/sofa/pull/2240 ); - [SofaSimpleFem] Simplify bloc-based optimization [#2281]( https://github.com/sofa-framework/sofa/pull/2281 ); - [SofaSimulationCore] Clearer message when a linear solver is missing [#2221]( https://github.com/sofa-framework/sofa/pull/2221 ); - [SofaSparseSolver] Fix msg readibility in SparseLDL [#2294]( https://github.com/sofa-framework/sofa/pull/2294 ); - [SofaSparseSolver] Introduce FillReducingOrdering [#2501]( https://github.com/sofa-framework/sofa/pull/2501 ). **Plugins / Projects**; - [image] Restore ability to select a subset of instanciations [#2340]( https://github.com/sofa-framework/sofa/pull/2340 ). **Examples / Scenes**; - [examples] Add a new example how to create heterogeneous tet FEM [#2289]( https://github.com/sofa-framework/sofa/pull/2289 ); - [examples] Speedup the caduceus [#2471]( https://github.com/sofa-framework/sofa/pull/2471 ); - [Scenes] Update TriangleSurfaceCu,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:143210,optimiz,optimization,143210,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimization']
Performance,"g not to enter into all the details related to the template selection. This will be done in another tutorial.; Find the icon on the far left of the toolbar in the Modeler. It looks like a piece of paper with the corner folded, and its tool tip is New Tab. Press the button.; This will give us a scene graph with some default components.; Right click on the TreeCollisionGroupManager and select Delete.; We don't need this component for our scene.; Find the OglModel component with the Filter, and drag and drop it onto the root node. Double click the OglModel node to edit its properties.; Rename the model ""Objective"".; Under the Property 2/3 tab, find the fileMesh section. Click on the ... button to bring up the file browser. Select the file /Sofa/share/mesh/dragon.obj, and press OK to return to the Modeler.; We now have a scene with all the components needed to handle collisions in a scene, and a visual model representing our deformable object.; Key points; This is how the collisions are performed in SOFA using these default components.; DefaultPipeline: Launch all the operations to perform the collision detection and response. Collision Detection:. Broad Phase: using ""Axis Aligned Bounding Boxes"" (AABB), we only keep potential colliding pair of objects; Narrow Phase: we use the geometrical primitives (spheres, triangles, lines, points) to test the distance between two objects. ; we use the BruteForceDetection to select which primitives will be used, and the MinProximityIntersection to detect if a collision exists between two geometrical primitives. Collision Response:. With all the colliding primitives, we create an appropriate collision response: the ContactManager gives the information about what response we have to use. ; Components are created dynamically in the graph to create repulsive forces, or constraints. In this tutorial, we will create PenalityContactForceField. . Advanced collision detection and response are implemented in SOFA, so don't hesitate to experim",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/0_FullObject.html:1230,perform,performed,1230,examples/Tutorials/StepByStep/FullObject/0_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/0_FullObject.html,1,['perform'],['performed']
Performance,"h in some situations; - fix BaseContext_getObjects so it can select objects from a base class name (and adding an example); - quaternion: fix singularity in from_line function. - [Flexible]; - fix case sensitive issues; - API: fix a bug with colors when reloading a scene; - fix the bulk factor in NeoHookean material; - fix NeoHookean traction test; - testing detachFromGraph; - BaseDeformationMapping: remove debug message, fix usage of sout (no need for testing f_printLog); - fix test compilation w/o image plugin; - fix loadVisual; - fix bug in topologygausspointsampler (computation of volume integrals for irregular hexa). - [Compliant]; - CompliantImplicitSolver: fix Lagrange multipliers clear when reseting the simulation; - auto-fix init errors in RigidMass; - Frame.py: adding tolist() conversion; - fix Jacobian reserved size; - fix contacts and associated test. - [image]; - python tools: fix bug in mhd parsing; - MeshToImage: fix bresenham, be sure dmax>=1; - fix resampling of projection images, and marching cubes default parameter; - fix bug in mhd file loader; - fix rasterization when using vertex colors. ### Cleanings. - warnings were removed; - dead branches were removed; - the ‘using’ directives were removed in header files; - the repository sofa_root/modules/sofa/components has been cleaned (deprecated components removed); - clean many SOFA examples; - removing ""using helper::vector"" from VecTypes.h; - SofaQtGui: Remove qt3 remnants in ui files. - Minor clean; - clean SofaBaseCollision of OpenGL dependency; - cleaning Material::setColor; - Base: write sout as info (rather than warnings); - clean and fix RestShapeSpringsForceField draw functions; - Remove useless tests, optimize and fix potential bugs; - cleanup, precompute barycenters for tetra and hexa; - SofaBaseVisual: clean up and make consistent BaseCamera's code: clean QtViewer projection (remove OpenGL functions); - SofaBaseVisual: clean and fix BaseCamera Z clipping; - SofaOpenGLVisual: cleanup Lights",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:360078,load,loader,360078,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loader']
Performance,havior/PairInteractionForceField.inl; ${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.h; ${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.inl; ${SRC_ROOT}/behavior/PairStateAccessor.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.inl; ${SRC_ROOT}/behavior/RotationFinder.h; ${SRC_ROOT}/behavior/StateAccessor.h; ${SRC_ROOT}/behavior/SingleMatrixAccessor.h; ${SRC_ROOT}/behavior/SingleStateAccessor.h; ${SRC_ROOT}/behavior/fwd.h; ${SRC_ROOT}/collision/BroadPhaseDetection.h; ${SRC_ROOT}/collision/CollisionAlgorithm.h; ${SRC_ROOT}/collision/CollisionGroupManager.h; ${SRC_ROOT}/collision/Contact.h; ${SRC_ROOT}/collision/ContactManager.h; ${SRC_ROOT}/collision/Detection.h; ${SRC_ROOT}/collision/DetectionOutput.h; ${SRC_ROOT}/collision/Intersection.h; ${SRC_ROOT}/collision/Intersection.inl; ${SRC_ROOT}/collision/IntersectorFactory.h; ${SRC_ROOT}/collision/NarrowPhaseDetection.h; ${SRC_ROOT}/collision/Pipeline.h; ${SRC_ROOT}/loader/BaseLoader.h; ${SRC_ROOT}/loader/ImageLoader.h; ${SRC_ROOT}/loader/MeshLoader.h; ${SRC_ROOT}/loader/SceneLoader.h; ${SRC_ROOT}/loader/VoxelLoader.h; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.h; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.h; ${SRC_ROOT}/objectmodel/AbstractDataLink.h; ${SRC_ROOT}/objectmodel/AspectPool.h; ${SRC_ROOT}/objectmodel/Base.h; ${SRC_ROOT}/objectmodel/BaseClass.h; ${SRC_ROOT}/objectmodel/BaseClassNameHelper.h; ${SRC_ROOT}/objectmodel/BaseContext.h; ${SRC_ROOT}/objectmodel/BaseData.h; ${SRC_ROOT}/objectmodel/BaseLink.h; ${SRC_ROOT}/objectmodel/BaseNode.h; ${SRC_ROOT}/objectmodel/BaseObject.h; ${SRC_ROOT}/objectmodel/BaseObjectDescription.h; ${SRC_ROOT}/objectmodel/ClassInfo.h; ${SRC_ROOT}/objectmodel/ComponentState.h; ${SRC_ROOT}/objectmodel/ConfigurationSetting.h; ${SRC_ROOT}/objectmodel/Context.h; ${SRC_ROOT}/objectmodel/ContextObject.h; ${SRC_ROOT}/objectmodel/DDGNode.h; ${SRC_ROOT}/objectmodel/Data.h; ${SRC_ROOT}/objectmodel/DataCal,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:4491,load,loader,4491,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['load'],['loader']
Performance,hub.com/sofa-framework/sofa/pull/1343 ); - [All] Replace usage of sleep functions for the std one [#1394]( https://github.com/sofa-framework/sofa/pull/1394 ); - [All] Uniform use of M_PI [#1264]( https://github.com/sofa-framework/sofa/pull/1264 ); - [All] Update header for cleaner future management [#1375]( https://github.com/sofa-framework/sofa/pull/1375 ); - [All] replace all serr by msg_error/msg_warning [#1236]( https://github.com/sofa-framework/sofa/pull/1236 ); - [SofaConstraint] Set the use of integration factor true by default [#1369]( https://github.com/sofa-framework/sofa/pull/1369 ); - **[SofaDefaultType]** BoundingBox : Remove annoying warnings [#1425]( https://github.com/sofa-framework/sofa/pull/1425 ); - [SofaGeneralEngine] Fix draw of the sphere in SphereROI [#1318]( https://github.com/sofa-framework/sofa/pull/1318 ); - [SofaGeneralEngine] Remove remaining BoxROI after SofaEngine move [#1333]( https://github.com/sofa-framework/sofa/pull/1333 ); - [SofaGeneralLoader] Allow flip normals in Gmsh and STL loaders [#1418]( https://github.com/sofa-framework/sofa/pull/1418 ); - [SofaGui] Pass QDocBrowser as an option [#1315]( https://github.com/sofa-framework/sofa/pull/1315 ); - **[SofaKernel]** Add Data bool d_checkTopology in Topology container to replace the use of CHECK_TOPOLOGY macro [#1351]( https://github.com/sofa-framework/sofa/pull/1351 ); - **[SofaKernel]** Clean occurrences of CHECK_TOPOLOGY macro in code [#1352]( https://github.com/sofa-framework/sofa/pull/1352 ); - **[SofaKernel]** Clean of Material.h/cpp [#1346]( https://github.com/sofa-framework/sofa/pull/1346 ); - **[SofaKernel]** Remove X11 dependency when SOFA_NO_OPENGL is enabled. [#1370]( https://github.com/sofa-framework/sofa/pull/1370 ); - **[SofaKernel]** Who hates warnings? [#1258]( https://github.com/sofa-framework/sofa/pull/1258 ); - **[SofaKernel]** replace all serr by msg_error/msg_warning [#1237]( https://github.com/sofa-framework/sofa/pull/1237 ); - [SofaSparseSolver] Move CSpars,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:240514,load,loaders,240514,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loaders']
Performance,"ible's components internally without adding extra computation neither extra memory; - API: add strain offseting option; - API: strainMappings as data members; - API: use branching images for mass computation; - API: make AffineMass, ShapeFunction, Behavior work in more cases; - API: make Behavior work in simple cases with no label image; - materials: removed checking for changed parameters at each step.; - add example showing how to better handle partially filled elements using fine volumes; - optimizing FlexibleCorotationalMeshFEMForceField by preassembling constant sub-graph; - refactoring of MassFromDensity; - adding a warning when creating a UniformMass on Affine/Quadratic frames.; - add FEMDof class to python API; - DeformationMapping: print a warning if a child particle has no parent; - adding HEML implementation of St Venant-Kirchhoff materials (for tetrahedra).; - if correct weights are given in mapping as input data, use it (even if a shapefunction is found); - use sout for logging; - compute tangents for VisualModel loaded using loadVisual python function; - transformEngine for Affine frames. - [Compliant]; - sml: export of meshes; - sml: the solids tags to be simulated as rigids are gathered in a set(); - sml: geometricStiffness option; - sml: using logger; - implementing compliance unassembled API; - in the python API, joints can be created in compliance or not; - API: write a addSpring() in GenericRigidJoint, reuse it in children classes where possible; - API: simplify usage of jointCompliance specification by tag; - API: relative offset position is given to the AssembledRigidRigidMapping, and then computed at init into the MO; - API: modifying the API to move an Offset; - API: adding Offset::moveOffset to apply a rigid transformation to an offset (in its local frame); - API: new parameter to add non-mechanical Offsets and MappedPoints; - API: collision mesh and visual model can be added to a Rigid Offset; - adding an automatic execution of a scene base",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:352061,load,loaded,352061,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['load'],"['loadVisual', 'loaded']"
Performance,"ilding the deprecated thing itself [#3236](https://github.com/sofa-framework/sofa/pull/3236) ; - [LinearAlgebra] Remove deprecated code [#3251](https://github.com/sofa-framework/sofa/pull/3251) ; - [tests] Fix remove SofaComponentAll plugin which doesn't exist anymore [#3266](https://github.com/sofa-framework/sofa/pull/3266) ; - [Test] Remove the output of a test from file versioning [#3285](https://github.com/sofa-framework/sofa/pull/3285) ; - [Collision] Cleaning pass on types [#3287](https://github.com/sofa-framework/sofa/pull/3287) ; - [S.C.MechanicalLoad] PlaneForcefield: Fix ""potential divide by zero"" warnings in msvc [#3315](https://github.com/sofa-framework/sofa/pull/3315) ; - [LinearAlgebra] Explicit instantiations and extern template for some matrices [#3334](https://github.com/sofa-framework/sofa/pull/3334) ; - [Mapping] Add checks at init in TopologicalMapping [#3339](https://github.com/sofa-framework/sofa/pull/3339) ; - [Topology.Container.Grid] trivial optimization in GridTopology [#3348](https://github.com/sofa-framework/sofa/pull/3348) ; - [All] Reduce calls to getValue [#3356](https://github.com/sofa-framework/sofa/pull/3356) ; - [all] Remove in-class typedefs pointing to common sofa::type [#3357](https://github.com/sofa-framework/sofa/pull/3357) ; - [Lagrangian.Solver] Move MechanicalGetConstraintResolutionVisitor in its own files [#3390](https://github.com/sofa-framework/sofa/pull/3390) ; - [Lagrangian.Solver] Move MechanicalGetConstraintViolationVisitor in its own files [#3391](https://github.com/sofa-framework/sofa/pull/3391) ; - [Lagrangian.Solver] Move ConstraintStoreLambdaVisitor in visitors folder [#3392](https://github.com/sofa-framework/sofa/pull/3392) ; - [Topology.Mapping] Types cleaning in Edge2QuadTopologicalMapping [#3408](https://github.com/sofa-framework/sofa/pull/3408) ; - [SolidMechanics.FEM] Clean and optimise TriangularFEMForceField draw method [#3413](https://github.com/sofa-framework/sofa/pull/3413); - [Topology.Mapping] Repla",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:87748,optimiz,optimization,87748,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimization']
Performance,"in two step as shown in the following screenshots [took from Blender (software)] :.       . Animation step 1 : Arm is raised. Animation step 2 : Arm is bent. And now the same scene loaded into Sofa :. Animation step 1 : Arm is raised; Animation step 1-2 : Arm animation interpolated by Sofa(animation speed depends of the animation time step); Animation step 2 : Arm is bent. Another example with a scene containing two meshes, one with the same bones as in the previous example and a sphere without skinning.       . The scene in the Sofa Modeler. The same scene in runSofa.       As you can see in Sofa Modeler, the scene to load a collada file is very simple. We have the SceneColladaLoader to load it and, important thing, we also have an EulerSolver ; which will be used by the potential SkeletalMotionProjectiveConstraints to ""play"" the animation updating positions and velocities.; When you launch runSofa with this scene, a new node will be added which contains the whole collada scene. The name of this node is the name you gave to the ; SceneColladaLoader plus the string ""_scene"". On the right picture, the loader generated two child nodes call ""mesh 0"" which contains a mesh without skinning (the sphere), and ; ""mesh 1"" which contains a mesh with skinning and bones animation directly from the collada file.; The SkeletalMotionProjectiveConstraint automatically interpolates between animation frames, play with the animation time step to slown down or speed up the animation. As you can see on the other example below, the woman's hair does not fit her head very well because its coordinates system belongs to a dummy object not supported for the moment. A skinned and bones animated mesh representing a woman. Intellectual property and rights. Author. Olivier CARRE. Contact. olivier.carre@inria.fr or sofa-devel@lists.gforge.inria.fr; . License. Your can distribute this plugin under the same license as the core of SOFA, or any other license of your choice. Sponsors. Assimp Library. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:4339,load,loader,4339,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,1,['load'],['loader']
Performance,ing_point_type [#3435](https://github.com/sofa-framework/sofa/pull/3435) . ### Improvements. **Architecture**; - [Core] Linear time getRoot() method in BaseNode and Node [#3059](https://github.com/sofa-framework/sofa/pull/3059) ; - [Type] Add NoInit constructor for Quat class [#3217](https://github.com/sofa-framework/sofa/pull/3217) ; - [Geometry] Make global variables constexpr [#3233](https://github.com/sofa-framework/sofa/pull/3233) ; - [Core] Reduce calls to getValue in collisions [#3264](https://github.com/sofa-framework/sofa/pull/3264) ; - [Type] Fix/clean and speed up of Mat [#3280](https://github.com/sofa-framework/sofa/pull/3280) ; - [Type] Add fixedarray aliases and BoundingBox3D [#3298](https://github.com/sofa-framework/sofa/pull/3298) ; - [Config] Option to set the number of MSVC processes [#3313](https://github.com/sofa-framework/sofa/pull/3313) ; - [Helper] RAII for DrawTool state life cycle [#3338](https://github.com/sofa-framework/sofa/pull/3338) ; - [Config] Option to enable interprocedural optimization [#3345](https://github.com/sofa-framework/sofa/pull/3345) ; - [Config] Change type of CMake message when adding a module [#3381](https://github.com/sofa-framework/sofa/pull/3381) ; - [CMake] Speed-up Configuration (again) [#3382](https://github.com/sofa-framework/sofa/pull/3382) ; - [Helper] Portable thread local storage duration [#3422](https://github.com/sofa-framework/sofa/pull/3422) ; - [Helper.Accessor] Support more std vector methods in WriteAccessorVector [#3426](https://github.com/sofa-framework/sofa/pull/3426) ; - [Topology] Add mechanism to check checkTopologyInputTypes [#3428](https://github.com/sofa-framework/sofa/pull/3428) ; - [Topology.Container] Check at init for Container in Modifier [#3434](https://github.com/sofa-framework/sofa/pull/3434) ; - [Simulation] Task scheduler can accept callable [#3482](https://github.com/sofa-framework/sofa/pull/3482) ; - [Simulation] Worker threads are no longer static [#3491](https://github.com/sofa-fr,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:72533,optimiz,optimization,72533,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimization']
Performance,"ion to the Sofa python module; - Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name.; - object and type names are now both optional when calling BaseContext_getObjects(); - search direction can now optionally be passed to BaseContext_getObjects(); - at object creation failure, print additional error messages from BaseObjectDescription; - adding special Data types in the PythonFactory, so more specific cases can be added outside of the plugin SofaPython.; - adding Node::addObject_noWarning not to print a warning when adding an object to an already initialized node; - add of a method which compute quaternion from a line define by a director vector; - add of few new features to save and load the current state of simulation. - [Flexible]; - adding FlexibleCorotationalMeshFEMForceField (meta-forcefield). Not optimized but working; - add of RigidScale mapping in addition to their tests and examples; - HexaFEM comparison: each method has its own solver and uses the same decomposition so the only difference came from the deformation tensor used to find the rotation.; - Flexible: WIP adding a meta-forcefield to compute regular corotational FEM. The idea is to use Flexible's components internally without adding extra computation neither extra memory; - API: add strain offseting option; - API: strainMappings as data members; - API: use branching images for mass computation; - API: make AffineMass, ShapeFunction, Behavior work in more cases; - API: make Behavior work in simple cases with no label image; - materials: removed checking for changed parameters at each step.; - add example showing how to better handle partially filled elements using fine volumes; - optimizing FlexibleCorotationalMeshFEMForceField by preassembling constant sub-graph; - refactoring of MassFromDensity; - adding a warning when creating a UniformMass on Affine/Quadratic frames.; - add FEMDof class to python API; - DeformationMapping: print a warnin",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:350657,optimiz,optimized,350657,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimized']
Performance,"ion. - [Flexible]; - adding FlexibleCorotationalMeshFEMForceField (meta-forcefield). Not optimized but working; - add of RigidScale mapping in addition to their tests and examples; - HexaFEM comparison: each method has its own solver and uses the same decomposition so the only difference came from the deformation tensor used to find the rotation.; - Flexible: WIP adding a meta-forcefield to compute regular corotational FEM. The idea is to use Flexible's components internally without adding extra computation neither extra memory; - API: add strain offseting option; - API: strainMappings as data members; - API: use branching images for mass computation; - API: make AffineMass, ShapeFunction, Behavior work in more cases; - API: make Behavior work in simple cases with no label image; - materials: removed checking for changed parameters at each step.; - add example showing how to better handle partially filled elements using fine volumes; - optimizing FlexibleCorotationalMeshFEMForceField by preassembling constant sub-graph; - refactoring of MassFromDensity; - adding a warning when creating a UniformMass on Affine/Quadratic frames.; - add FEMDof class to python API; - DeformationMapping: print a warning if a child particle has no parent; - adding HEML implementation of St Venant-Kirchhoff materials (for tetrahedra).; - if correct weights are given in mapping as input data, use it (even if a shapefunction is found); - use sout for logging; - compute tangents for VisualModel loaded using loadVisual python function; - transformEngine for Affine frames. - [Compliant]; - sml: export of meshes; - sml: the solids tags to be simulated as rigids are gathered in a set(); - sml: geometricStiffness option; - sml: using logger; - implementing compliance unassembled API; - in the python API, joints can be created in compliance or not; - API: write a addSpring() in GenericRigidJoint, reuse it in children classes where possible; - API: simplify usage of jointCompliance specification by t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:351518,optimiz,optimizing,351518,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimizing']
Performance,ion.Geometry] Fix transparency while displaying the Bounding Collision Cubemodel [#3658](https://github.com/sofa-framework/sofa/pull/3658) ; - [MechanicalLoad] Fix ConstantForceField when no force given [#3670](https://github.com/sofa-framework/sofa/pull/3670) ; - [Collision] Make the (CubeModel) BoundingTree deterministic [#3687](https://github.com/sofa-framework/sofa/pull/3687) ; - [IO.Mesh] Fix UB when filename is empty [#3689](https://github.com/sofa-framework/sofa/pull/3689) ; - [FEM.Elastic] Check for nullptr in BeamFEMForceField [#3690](https://github.com/sofa-framework/sofa/pull/3690) ; - [Spring] Check for nullptr in RestShapeSpringsForceField [#3691](https://github.com/sofa-framework/sofa/pull/3691) ; - [Testing] Fix CMake config after removal of compat [#3694](https://github.com/sofa-framework/sofa/pull/3694) ; - [LinearAlgebra] Fix crash when matrix has no nonzero values [#3700](https://github.com/sofa-framework/sofa/pull/3700) ; - [IO.Mesh] Fix mesh creation if load called multiple times [#3702](https://github.com/sofa-framework/sofa/pull/3702) ; - [LinearSolver.Direct] Make sure the matrix is factorized in SparseCholeskySolver [#3706](https://github.com/sofa-framework/sofa/pull/3706) ; - [GUI.Qt] Register meta type to fix asynchronous Qt call [#3749](https://github.com/sofa-framework/sofa/pull/3749) ; - [Tests] S.Components tests compiles with SReal=float [#3755](https://github.com/sofa-framework/sofa/pull/3755) ; - [Mapping.NonLinear] Fix SquareMapping applyDJT [#3761](https://github.com/sofa-framework/sofa/pull/3761); - [LinearAlgebra] Restore insertion operator for BaseVector [#3775](https://github.com/sofa-framework/sofa/pull/3775) ; - [StateContainer] Fix bug in dynamic data registration [#3783](https://github.com/sofa-framework/sofa/pull/3783) ; - [Rendering3D] Missing StateLifeCycle [#3784](https://github.com/sofa-framework/sofa/pull/3784) ; - [Mapping.Nonlinear] Fix matrix assembly in RigidMapping [#3803](https://github.com/sofa-framework/sofa/p,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:57771,load,load,57771,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['load']
Performance,"ion; - fix Jacobian reserved size; - fix contacts and associated test. - [image]; - python tools: fix bug in mhd parsing; - MeshToImage: fix bresenham, be sure dmax>=1; - fix resampling of projection images, and marching cubes default parameter; - fix bug in mhd file loader; - fix rasterization when using vertex colors. ### Cleanings. - warnings were removed; - dead branches were removed; - the ‘using’ directives were removed in header files; - the repository sofa_root/modules/sofa/components has been cleaned (deprecated components removed); - clean many SOFA examples; - removing ""using helper::vector"" from VecTypes.h; - SofaQtGui: Remove qt3 remnants in ui files. - Minor clean; - clean SofaBaseCollision of OpenGL dependency; - cleaning Material::setColor; - Base: write sout as info (rather than warnings); - clean and fix RestShapeSpringsForceField draw functions; - Remove useless tests, optimize and fix potential bugs; - cleanup, precompute barycenters for tetra and hexa; - SofaBaseVisual: clean up and make consistent BaseCamera's code: clean QtViewer projection (remove OpenGL functions); - SofaBaseVisual: clean and fix BaseCamera Z clipping; - SofaOpenGLVisual: cleanup Lights (remove Glu calls and set matrices as data) + Fix typo in Camera; - quaternion to euler: not need for the hack since atan2 is used. - [SofaPython]; - clean examples; - clean the hard-binding example; - clean noPicking visitor. - [Flexible]; - remove unecessary data for Gauss points visualization; - some clean regarding openmp parallelisation; - clean metaFF; - remove unecessary apply in reinit; - clean FlexibleCorotationalMeshFEMForceField. - [Compliant]; - clean RigidJoint{Multi}Mapping. ____________________________________________________________. ## [v15.12]( https://github.com/sofa-framework/sofa/tree/v15.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v15.09...v15.12 ). ____________________________________________________________. ## [v15.09]( https://github.com/sofa-fra",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:360711,optimiz,optimize,360711,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimize']
Performance,ithub.com/sofa-framework/sofa/pull/1175 ); - [CMake] FIX unknown compiler option on VS2015 [#1192]( https://github.com/sofa-framework/sofa/pull/1192 ); - [SofaMacros] FIX default module version [#1123]( https://github.com/sofa-framework/sofa/pull/1123 ); - [SofaMacros] FIX sofa_set_install_relocatable escaped chars [#1154]( https://github.com/sofa-framework/sofa/pull/1154 ). **Modules**; - [All] Fix warnings [#1206]( https://github.com/sofa-framework/sofa/pull/1206 ); - [All] Fix warnings [#1167]( https://github.com/sofa-framework/sofa/pull/1167 ); - [All] Fix some warnings and OglAttribute handleTopologyChange [#1159]( https://github.com/sofa-framework/sofa/pull/1159 ); - [SofaBoundaryCondition] Fix FixedRotationConstraint when using more than one locked axis [#1119]( https://github.com/sofa-framework/sofa/pull/1119 ); - **[SofaBaseMechanics]** Make Uniform and DiagonalMass compatible with topo change [#1212]( https://github.com/sofa-framework/sofa/pull/1212 ); - **[SofaBaseTopology]** Fix SparseGrid obj loading + tests [#1231]( https://github.com/sofa-framework/sofa/pull/1231 ); - [SofaComponentAll] FIX SofaAllCommonComponents backward compatibility [#1204]( https://github.com/sofa-framework/sofa/pull/1204 ); - [SofaConstraint] Fix UncoupledConstraintCorrection topology change handling [#1115]( https://github.com/sofa-framework/sofa/pull/1115 ); - [SofaConstraint] Fix crash with PrecomputedConstraintCorrection [#1230]( https://github.com/sofa-framework/sofa/pull/1230 ); - **[SofaCore]** FIX decode functions in BaseClass [#1222]( https://github.com/sofa-framework/sofa/pull/1222 ); - **[SofaDefaulttype]** FIX too many ExtVec warnings with GCC [#1140]( https://github.com/sofa-framework/sofa/pull/1140 ); - [SofaExporter] Move bindings from SofaPython [#1095]( https://github.com/sofa-framework/sofa/pull/1095 ); - **[SofaFramework]** Add other orders for fromEuler() for Quaternions. [#1221]( https://github.com/sofa-framework/sofa/pull/1221 ); - **[SofaFramework]** Instal,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:249348,load,loading,249348,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loading']
Performance,"ked 'override' [#2260]( https://github.com/sofa-framework/sofa/pull/2260 ); - [SofaBaseVisual] Split VisualModelImpl init method in several methods for more clarity [#2299]( https://github.com/sofa-framework/sofa/pull/2299 ); - [SofaConstraint] Better includes [#2266]( https://github.com/sofa-framework/sofa/pull/2266 ); - [SofaConstraint] Divide a timer in 2 [#2469]( https://github.com/sofa-framework/sofa/pull/2469 ); - [SofaConstraint] Remove dependency on TetrahedronFEMForcefield [#2250]( https://github.com/sofa-framework/sofa/pull/2250 ); - [SofaCore] Clean force fields [#2243]( https://github.com/sofa-framework/sofa/pull/2243 ); - [SofaCore] Fix two determiners in a row [#2271]( https://github.com/sofa-framework/sofa/pull/2271 ); - [SofaCore] Remove unused addSubMBKToMatrix in force fields [#2244]( https://github.com/sofa-framework/sofa/pull/2244 ); - [SofaCore] Remove unwanted logs in TopologyHandler. [#2401]( https://github.com/sofa-framework/sofa/pull/2401 ); - [SofaDeformable] clean and optimize addKToMatrix [#2429]( https://github.com/sofa-framework/sofa/pull/2429 ); - [SofaDenseSolver][SofaBaseLinearSolver] CLEAN macros *_CHECK and *_VERBOSE [#2310]( https://github.com/sofa-framework/sofa/pull/2310 ); - [SofaEigen2Solver] Description + timers + support of any BaseMatrix [#2336]( https://github.com/sofa-framework/sofa/pull/2336 ); - [SofaExporter] Rename OBJExporter into VisualModelOBJExporter [#2505]( https://github.com/sofa-framework/sofa/pull/2505 ); - [SofaGeneralAnimationLoop, Sofa.SimulationCore] Extract MechanicalAccumulateJacobian [#2481]( https://github.com/sofa-framework/sofa/pull/2481 ); - [SofaGeneralAnimationLoop] MechanicalMatrixMapper timers [#2362]( https://github.com/sofa-framework/sofa/pull/2362 ); - [SofaGeneralDeformable] Remove TopologyHandler in FEM to use TopologyData callbacks (part 2) [#2388]( https://github.com/sofa-framework/sofa/pull/2388 ); - [SofaGeneralDeformable] Remove TopologyHandler in FEM to use TopologyData callbacks (pa",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:158904,optimiz,optimize,158904,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimize']
Performance,"l] FIX build without SofaPython soft dependencies [#1829]( https://github.com/sofa-framework/sofa/pull/1829 ); - [All] Fix invalid Memory access in MechanicalObject and Compliant_test [#1849]( https://github.com/sofa-framework/sofa/pull/1849 ); - [All] Almost green dashboard [#1669]( https://github.com/sofa-framework/sofa/pull/1669 ); - **[SofaCore_test]** Update the two failling tests so they match the new convention for TypeInfo [#1709]( https://github.com/sofa-framework/sofa/pull/1709 ); - **[SofaDefaultType]** FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - **[SofaBaseMechanics]** fixes reinit of BarycentricMapping [#1815]( https://github.com/sofa-framework/sofa/pull/1815 ); - [SofaGuiCommon] Fix computationTimeSampling [#1698]( https://github.com/sofa-framework/sofa/pull/1698 ); - [SofaGuiCommon] fix BackgroundSetting [#1826]( https://github.com/sofa-framework/sofa/pull/1826 ); - [SofaGuiQt] ADD qt.conf.h for custom qt.conf loading at runtime [#1820]( https://github.com/sofa-framework/sofa/pull/1820 ); - [SofaGuiQt] Fix Export Graph option [#1785]( https://github.com/sofa-framework/sofa/pull/1785 ); - [SofaGuiQt] Clean QtGLViewer with key events [#1850]( https://github.com/sofa-framework/sofa/pull/1850 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test [#1823]( https://github.com/sofa-framework/sofa/pull/1823 ); - [SofaMiscFEM] Minor changes in TrianglePressureFF and TriangularFEMFF [#1779]( https://github.com/sofa-framework/sofa/pull/1779 ); - **[SofaSimpleFem]** Fix nasty bug in HexaFEMForceField' s draw() [#1766]( https://github.com/sofa-framework/sofa/pull/1766 ). **Plugins / Projects**; - [Geomagic] Fix GeomagicVisualModel compilation [#1776]( https://github.com/sofa-framework/sofa/pull/1776 ); - [PreassembledMass] FIX typo in PreassembledMass.inl [#1833]( https://github.com/sofa-framework/sofa/pull/1833 ); - [SofaCUDA] FIX compilation errors [#1761]( https://github.com/sofa-framew",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:212149,load,loading,212149,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loading']
Performance,ll/2477 ); - [SofaHelper] Remove boost::thread dependency [#2264]( https://github.com/sofa-framework/sofa/pull/2264 ); - [SofaHelper_test] Remove temporary file in FileMonitor_test [#2537]( https://github.com/sofa-framework/sofa/pull/2537 ); - [SofaKernel] change data content copy on write condition [#2285]( https://github.com/sofa-framework/sofa/pull/2285 ); - [SofaMiscFEM] Small optimizations on TriangularFEMForceField (speedup ~x1.6) [#2273]( https://github.com/sofa-framework/sofa/pull/2273 ); - [SofaMiscFem] Minor homogeneization in TriangleFEMFF [#2408]( https://github.com/sofa-framework/sofa/pull/2408 ); - [SofaMiscFem] Remove TopologyHandler in FEM to use TopologyData callbacks (part 4) [#2390]( https://github.com/sofa-framework/sofa/pull/2390 ); - [SofaMiscFem] Remove debug code [#2420]( https://github.com/sofa-framework/sofa/pull/2420 ); - [SofaMiscFem] Remove unnecessary copy/pasted code [#2421]( https://github.com/sofa-framework/sofa/pull/2421 ); - [SofaMiscForcefield] Small optimization in addMdx in MeshMatrixMass [#2516]( https://github.com/sofa-framework/sofa/pull/2516 ); - [SofaMiscFem][SofaNonUniformFem] Remove newmat usage [#2531]( https://github.com/sofa-framework/sofa/pull/2531 ); - [SofaPreconditioner] Cleaning [#2493]( https://github.com/sofa-framework/sofa/pull/2493 ); - [SofaSimpleFem] Move duplicated code into a function [#2231]( https://github.com/sofa-framework/sofa/pull/2231 ); - [SofaSimpleFem] Remove branches based on type of matrix [#2323]( https://github.com/sofa-framework/sofa/pull/2323 ); - [SofaSparseSolver] Clean examples scenes of sparse linear solvers [#2422]( https://github.com/sofa-framework/sofa/pull/2422 ); - [SofaTopologyMapping] Fix shadowed variable #2158 [#2413]( https://github.com/sofa-framework/sofa/pull/2413 ); - [Tests] Update SceneCreator_test to inherit from BaseSimulationTest and remove some warnings [#2406]( https://github.com/sofa-framework/sofa/pull/2406 ). **Plugins / Projects**; - [Plugins] Move Newmat matters ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:161701,optimiz,optimization,161701,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimization']
Performance,ll/2733 ); - [Sofa.Core] Use forward declaration for BoundingBox in Base [#2728]( https://github.com/sofa-framework/sofa/pull/2728 ); - [Sofa.DefaultType] Name() should be compile-time evaluable [#3174]( https://github.com/sofa-framework/sofa/pull/3174 ); - [Sofa.GL.Component] OglModel: Uniformize floating point type [#2856]( https://github.com/sofa-framework/sofa/pull/2856 ); - [Sofa.GUI.Component] Add module version [#3038]( https://github.com/sofa-framework/sofa/pull/3038 ); - [Sofa.Geometry][SofaMeshCollision] Deprecate RayTriangleIntersection class [#2763]( https://github.com/sofa-framework/sofa/pull/2763 ); - [Sofa.Helper] Introduce narrow_cast [#2590]( https://github.com/sofa-framework/sofa/pull/2590 ); - [Sofa.Helper] Remove some compilation warnings [#2619]( https://github.com/sofa-framework/sofa/pull/2619 ); - [Sofa.LinearAlgebra] Deprecate unused EigenMatrixManipulator [#2793]( https://github.com/sofa-framework/sofa/pull/2793 ); - [Sofa.Type] Quat: Optimize rotate() (and inverseRotate()) [#3138]( https://github.com/sofa-framework/sofa/pull/3138 ); - [Sofa.Type] Fix some compilation warnings [#2589]( https://github.com/sofa-framework/sofa/pull/2589 ); - [Sofa.Type] Make RGBAColor constexpr [#2630]( https://github.com/sofa-framework/sofa/pull/2630 ); - [Sofa.Type] Simplify template rebinding [#2570]( https://github.com/sofa-framework/sofa/pull/2570 ); - [SofaBaseMechanics] Clean AddMToMatrixFunctor [#2755]( https://github.com/sofa-framework/sofa/pull/2755 ); - [SofaBaseMechanics][SofaMiscForcefield] Auto-detect MassType [#2644]( https://github.com/sofa-framework/sofa/pull/2644 ); - [SofaBaseTopology] Clearer error message [#2638]( https://github.com/sofa-framework/sofa/pull/2638 ); - [SofaBaseVisual] Remove unused background setting in BaseCamera [#2637]( https://github.com/sofa-framework/sofa/pull/2637 ); - [SofaBoundaryCondition] Remove optimization based on type of matrix [#2859]( https://github.com/sofa-framework/sofa/pull/2859 ); - [SofaBoundaryConditi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:125202,Optimiz,Optimize,125202,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Optimiz'],['Optimize']
Performance,"logy]; - SphereGridTopology component to create sphere grids, similar to CylinderGridTopology.; - Adds a new orientedBox dataField in BoxROI so that we can use it to either defined AABoxes or OrientedBox; - Minor improvement on the way warning/error message are presented to the users in runSofa. A single panel is now used instead of of two, it is always displayed, the Panel name also contains the number of message eg: ""Messages(5)""; - The Graph view is now displaying the type of message they contains.; - [runSofa]; - Autoload plugins, described in the user-custom file 'plugin_list.conf' if present; else 'plugin_list.conf.default' containing all compiled plugins and generated automatically by CMake. **For developpers**; - Add a Logger component that stores the history of messages into each sofa component.; - Implements new methods to write on-liner's conditional message:; msg_info_when(level<3) << ""This is a conditional info message""; - Implement an implicit version of each of the msg_* API allowing to write; msg_info() << ""Hello"" in place for msg_info(this) << Hello""; - CImgPlugin : creation of a dedicated plugin for image loading based on CImg [#185]( https://github.com/sofa-framework/sofa/pull/185 ); - Remove deprecated miniBoost dependency [#273]( https://github.com/sofa-framework/sofa/pull/273 ). ### Improvements. **Modules**; - [All]; - update containers to support c++x11 features [#113]( https://github.com/sofa-framework/sofa/pull/113 ); - speed up spheres rendering + code cleaning [#170]( https://github.com/sofa-framework/sofa/pull/170 ); - updates externs/gtest to a fresh checkout [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - auto-init/cleanup libraries [#168]( https://github.com/sofa-framework/sofa/pull/168 ); - Improve and clean msg_api and logging of message (#190, #255, #275). See [documentation](https://www.sofa-framework.org/community/doc/programming-with-sofa/logger/) for more information.; - Add CMake option to limit cores used to build",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:325359,load,loading,325359,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loading']
Performance,mework/sofa/pull/4676); - [Controller+Engine] Rename Data [#4678](https://github.com/sofa-framework/sofa/pull/4678); - [IO] Rename Data [#4679](https://github.com/sofa-framework/sofa/pull/4679); - [ODESolver] Rename Data [#4680](https://github.com/sofa-framework/sofa/pull/4680); - [Playback] Rename Data [#4681](https://github.com/sofa-framework/sofa/pull/4681); - [Setting] Rename Data [#4682](https://github.com/sofa-framework/sofa/pull/4682); - [Topology] Rename Data [#4683](https://github.com/sofa-framework/sofa/pull/4683); - [Visual] Rename Data [#4684](https://github.com/sofa-framework/sofa/pull/4684); - [Constraint] Rename Data [#4696](https://github.com/sofa-framework/sofa/pull/4696); - [all] Rename depreciation macros in config.h.in for unique module id… [#4755](https://github.com/sofa-framework/sofa/pull/4755); - [examples] Rename FixedConstraint example [#4764](https://github.com/sofa-framework/sofa/pull/4764). ### Others. - [Helper] PluginManager: testing loading a plugin with a dependency on an other plugin [#4464](https://github.com/sofa-framework/sofa/pull/4464); - [Simulation] Tests: introduce multiple parallel simulations [#4580](https://github.com/sofa-framework/sofa/pull/4580); - [Simulation.Core] Remove useless and annoying timers [#4631](https://github.com/sofa-framework/sofa/pull/4631); - [image] Fix module name [#4720](https://github.com/sofa-framework/sofa/pull/4720); - [tools] Add metis relocation in post install fixup [#4767](https://github.com/sofa-framework/sofa/pull/4767). ## [v23.12.00]( https://github.com/sofa-framework/sofa/tree/v23.12.00 ). [Full log](https://github.com/sofa-framework/sofa/compare/v23.06..v23.12). ### Highlighted contributions; - [Mass] Remove DiagonalMass and replace with MeshMatrixMass (with lumping) [#3001](https://github.com/sofa-framework/sofa/pull/3001); - [LinearAlgebra] Pull Insimo's CompressedRowSparseMatrix into the main branch [#3515](https://github.com/sofa-framework/sofa/pull/3515); - [plugins] Add fetchabl,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:20529,load,loading,20529,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loading']
Performance,"mpilation's users; beyond what the individual works permit. Inclusion of a covered work; in an aggregate does not cause this License to apply to the other; parts of the aggregate. 6. Conveying Non-Source Forms. You may convey a covered work in object code form under the terms; of sections 4 and 5, provided that you also convey the; machine-readable Corresponding Source under the terms of this License,; in one of these ways:. a) Convey the object code in, or embodied in, a physical product; (including a physical distribution medium), accompanied by the; Corresponding Source fixed on a durable physical medium; customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product; (including a physical distribution medium), accompanied by a; written offer, valid for at least three years and valid for as; long as you offer spare parts or customer support for that product; model, to give anyone who possesses the object code either (1) a; copy of the Corresponding Source for all the software in the; product that is covered by this License, on a durable physical; medium customarily used for software interchange, for a price no; more than your reasonable cost of physically performing this; conveying of source, or (2) access to copy the; Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the; written offer to provide the Corresponding Source. This; alternative is allowed only occasionally and noncommercially, and; only if you received the object code with such an offer, in accord; with subsection 6b. d) Convey the object code by offering access from a designated; place (gratis or for a charge), and offer equivalent access to the; Corresponding Source in the same way through the same place at no; further charge. You need not require recipients to copy the; Corresponding Source along with the object code. If the place to; copy the object code is a network server, the Corres",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:32098,perform,performing,32098,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['perform'],['performing']
Performance,nSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.cpp. ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Model REQUIRED); sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Mapper REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED); sofa_find_package(Sofa.Component.Topology.Mapping REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Setting); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Visual); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:3150,perform,performer,3150,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,nSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/A,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:1475,perform,performer,1475,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,"nagerSecondaryPass; - Add OglTexturePointer; - adding SquareDistanceMapping to compute the square distance between 2 points.; - add OrderIndependentTransparency Manager (using two passes instead of three); - add OglOITShader to customize the shading of transparent surfaces; - ProjectionToTargetLineMapping and ProjectionToTargetPlaneMapping with precomputed constant Jacobians and using last origin and direction/normal for extra points; - Adding a timer embedding all the animation loop step but would need further doc.; - display of indices has been improved; - Add an example using cloth springs: examples/Components/forcefield/ClothBendingForceField.py; - Improving a few examples by making the embedding nodes as non pickable (tag 'NoPicking'); - Add BaseNode::getRootPath; - Improving performances: - Message::class is now an enum; - Updated draw method of PointSetGeometryAlgorithms, QuadSetGeometryAlgorithms, TetrahedronSetGeometryAlgorithms, TriangleSetGeometryAlgorithms; - Add Blender-like orientation helper in the bottom-left part of the screen while drawing bbox (QtGlViewer); - Add Blender-like orientation helper in the bottom-left part of the screen while drawing bbox (QtViewer); - add of GUIEvent into the STLExporter; - Make the code compatible with ClipPlane (using ClipVertex in shaders, which is deprecated for GLSL > 1.4); - Optimize the callto C-PYTHON side when the functions are not implemented in the python side; - Add color attribute support (and default color if not present in the node); - Reactivate color map in TetraFEM, as it does not depend on SofaOpenGLVisual anymore; - indices data field for UniformMass; - analyze matrix only if number of non-zeroes has changed and no iterative refinement; - update the applyConstraint methods according to the actual API; - Adding ProjectionTo{Plane|Line}MultiMapping where the plane (origin,normal) and the line (origin,direction) are dofs; - add MeshBoundaryROI with an example. - [Tests]; - for (multi)Mapping test, che",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:345808,perform,performances,345808,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['perform'],['performances']
Performance,"ndencies that can be fetched: cxxopts, gtest, metis, CImg"" ON). # Option to accelerate the compilation; # see https://cmake.org/cmake/help/v3.16/command/target_precompile_headers.html; # and https://cmake.org/cmake/help/v3.16/prop_tgt/DISABLE_PRECOMPILE_HEADERS.html. # https://cmake.org/cmake/help/latest/policy/CMP0127.html; if (${CMAKE_VERSION} VERSION_GREATER_EQUAL 3.22); cmake_policy(SET CMP0127 NEW); endif(); cmake_dependent_option(SOFA_BUILD_WITH_PCH_ENABLED ; ""Compile SOFA using precompiled header (to accelerate the build process)"" OFF; ""CMAKE_VERSION VERSION_GREATER_EQUAL 3.16"" OFF); if(SOFA_BUILD_WITH_PCH_ENABLED); message(""-- Precompiled headers: enabled (SOFA_BUILD_WITH_PCH_ENABLED is ON).""); else(); message(""-- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).""); set(DISABLE_PRECOMPILE_HEADERS ON); endif(). ## Change default install component and prefix; set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME applications); if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT); set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/install CACHE PATH ""Install path prefix, prepended onto install directories."" FORCE); endif(); if(APPLE AND SOFA_BUILD_APP_BUNDLE); set(SOFA_BUILD_RELEASE_PACKAGE ON); set(CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/runSofa.app/Contents/MacOS); message(""SOFA_BUILD_APP_BUNDLE = ${SOFA_BUILD_APP_BUNDLE}\n""; "" Forcing SOFA_BUILD_RELEASE_PACKAGE = ${SOFA_BUILD_RELEASE_PACKAGE}\n""; "" Forcing CMAKE_INSTALL_PREFIX = ${CMAKE_INSTALL_PREFIX}""; ); endif(); message(STATUS ""Install prefix: ${CMAKE_INSTALL_PREFIX}""). # Remove generated CMake files, this prevents CMake from finding packages that; # were disabled (like, unchecked in cmake-gui) after being built once.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/cmake); file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/lib/cmake); # Remove generated SofaPython configuration files, to prevent SofaPython from; # adding paths to disabled plugins.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/etc/sofa/python.d). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:2727,CACHE,CACHE,2727,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['CACHE'],['CACHE']
Performance,neralSimpleFem] Add comments and tests for TriangularFEMForceFieldOptim [#2284]( https://github.com/sofa-framework/sofa/pull/2284 ); - [SofaGeneralSimpleFem] Remove TopologyHandler in FEM to use TopologyData callbacks (part 1) [#2384]( https://github.com/sofa-framework/sofa/pull/2384 ); - [SofaGuiGlut] Unreachable break [#2405]( https://github.com/sofa-framework/sofa/pull/2405 ); - [SofaGuiQt] Get rid of magic numbers when centering the window [#2466]( https://github.com/sofa-framework/sofa/pull/2466 ); - [SofaHelper] replace infinite loop Update PipeProcess.cpp [#2477]( https://github.com/sofa-framework/sofa/pull/2477 ); - [SofaHelper] Remove boost::thread dependency [#2264]( https://github.com/sofa-framework/sofa/pull/2264 ); - [SofaHelper_test] Remove temporary file in FileMonitor_test [#2537]( https://github.com/sofa-framework/sofa/pull/2537 ); - [SofaKernel] change data content copy on write condition [#2285]( https://github.com/sofa-framework/sofa/pull/2285 ); - [SofaMiscFEM] Small optimizations on TriangularFEMForceField (speedup ~x1.6) [#2273]( https://github.com/sofa-framework/sofa/pull/2273 ); - [SofaMiscFem] Minor homogeneization in TriangleFEMFF [#2408]( https://github.com/sofa-framework/sofa/pull/2408 ); - [SofaMiscFem] Remove TopologyHandler in FEM to use TopologyData callbacks (part 4) [#2390]( https://github.com/sofa-framework/sofa/pull/2390 ); - [SofaMiscFem] Remove debug code [#2420]( https://github.com/sofa-framework/sofa/pull/2420 ); - [SofaMiscFem] Remove unnecessary copy/pasted code [#2421]( https://github.com/sofa-framework/sofa/pull/2421 ); - [SofaMiscForcefield] Small optimization in addMdx in MeshMatrixMass [#2516]( https://github.com/sofa-framework/sofa/pull/2516 ); - [SofaMiscFem][SofaNonUniformFem] Remove newmat usage [#2531]( https://github.com/sofa-framework/sofa/pull/2531 ); - [SofaPreconditioner] Cleaning [#2493]( https://github.com/sofa-framework/sofa/pull/2493 ); - [SofaSimpleFem] Move duplicated code into a function [#2231]( https:,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:161084,optimiz,optimizations,161084,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimizations']
Performance,nl; ${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.h; ${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.inl; ${SRC_ROOT}/behavior/PairStateAccessor.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.inl; ${SRC_ROOT}/behavior/RotationFinder.h; ${SRC_ROOT}/behavior/StateAccessor.h; ${SRC_ROOT}/behavior/SingleMatrixAccessor.h; ${SRC_ROOT}/behavior/SingleStateAccessor.h; ${SRC_ROOT}/behavior/fwd.h; ${SRC_ROOT}/collision/BroadPhaseDetection.h; ${SRC_ROOT}/collision/CollisionAlgorithm.h; ${SRC_ROOT}/collision/CollisionGroupManager.h; ${SRC_ROOT}/collision/Contact.h; ${SRC_ROOT}/collision/ContactManager.h; ${SRC_ROOT}/collision/Detection.h; ${SRC_ROOT}/collision/DetectionOutput.h; ${SRC_ROOT}/collision/Intersection.h; ${SRC_ROOT}/collision/Intersection.inl; ${SRC_ROOT}/collision/IntersectorFactory.h; ${SRC_ROOT}/collision/NarrowPhaseDetection.h; ${SRC_ROOT}/collision/Pipeline.h; ${SRC_ROOT}/loader/BaseLoader.h; ${SRC_ROOT}/loader/ImageLoader.h; ${SRC_ROOT}/loader/MeshLoader.h; ${SRC_ROOT}/loader/SceneLoader.h; ${SRC_ROOT}/loader/VoxelLoader.h; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.h; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.h; ${SRC_ROOT}/objectmodel/AbstractDataLink.h; ${SRC_ROOT}/objectmodel/AspectPool.h; ${SRC_ROOT}/objectmodel/Base.h; ${SRC_ROOT}/objectmodel/BaseClass.h; ${SRC_ROOT}/objectmodel/BaseClassNameHelper.h; ${SRC_ROOT}/objectmodel/BaseContext.h; ${SRC_ROOT}/objectmodel/BaseData.h; ${SRC_ROOT}/objectmodel/BaseLink.h; ${SRC_ROOT}/objectmodel/BaseNode.h; ${SRC_ROOT}/objectmodel/BaseObject.h; ${SRC_ROOT}/objectmodel/BaseObjectDescription.h; ${SRC_ROOT}/objectmodel/ClassInfo.h; ${SRC_ROOT}/objectmodel/ComponentState.h; ${SRC_ROOT}/objectmodel/ConfigurationSetting.h; ${SRC_ROOT}/objectmodel/Context.h; ${SRC_ROOT}/objectmodel/ContextObject.h; ${SRC_ROOT}/objectmodel/DDGNode.h; ${SRC_ROOT}/objectmodel/Data.h; ${SRC_ROOT}/objectmodel/DataCallback.h; ${SRC_ROOT}/objectmodel/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:4524,load,loader,4524,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['load'],['loader']
Performance,"nother tutorial.; Find the icon on the far left of the toolbar in the Modeler. It looks like a piece of paper with the corner folded, and its tool tip is New Tab. Press the button.; This will give us a scene graph with some default components.; Right click on the TreeCollisionGroupManager and select Delete.; We don't need this component for our scene.; Find the OglModel component with the Filter, and drag and drop it onto the root node. Double click the OglModel node to edit its properties.; Rename the model ""Objective"".; Under the Property 2/3 tab, find the fileMesh section. Click on the ... button to bring up the file browser. Select the file /Sofa/share/mesh/dragon.obj, and press OK to return to the Modeler.; We now have a scene with all the components needed to handle collisions in a scene, and a visual model representing our deformable object.; Key points; This is how the collisions are performed in SOFA using these default components.; DefaultPipeline: Launch all the operations to perform the collision detection and response. Collision Detection:. Broad Phase: using ""Axis Aligned Bounding Boxes"" (AABB), we only keep potential colliding pair of objects; Narrow Phase: we use the geometrical primitives (spheres, triangles, lines, points) to test the distance between two objects. ; we use the BruteForceDetection to select which primitives will be used, and the MinProximityIntersection to detect if a collision exists between two geometrical primitives. Collision Response:. With all the colliding primitives, we create an appropriate collision response: the ContactManager gives the information about what response we have to use. ; Components are created dynamically in the graph to create repulsive forces, or constraints. In this tutorial, we will create PenalityContactForceField. . Advanced collision detection and response are implemented in SOFA, so don't hesitate to experiment other examples.; Results; Press the Run in SOFA (or press Ctrl-R), and press Animate; In t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/0_FullObject.html:1327,perform,perform,1327,examples/Tutorials/StepByStep/FullObject/0_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/0_FullObject.html,1,['perform'],['perform']
Performance,"nt] Fix a typo in the warning emited by the APIVersion component and add missing allowed versions. [#2103]( https://github.com/sofa-framework/sofa/pull/2103 ); - [SofaGraphComponent] Fix message for RequiredPlugin [#2093]( https://github.com/sofa-framework/sofa/pull/2093 ); - [SofaGuiCommon] FIX build with SOFA_NO_OPENGL [#1724]( https://github.com/sofa-framework/sofa/pull/1724 ); - [SofaGuiCommon] Fix computationTimeSampling [#1698]( https://github.com/sofa-framework/sofa/pull/1698 ); - [SofaGuiCommon] Fix include path for compat files when installing [#1892]( https://github.com/sofa-framework/sofa/pull/1892 ); - [SofaGuiCommon] Remove unneeded include in PickHandler [#1707]( https://github.com/sofa-framework/sofa/pull/1707 ); - [SofaGuiCommon] Write json file [#2018]( https://github.com/sofa-framework/sofa/pull/2018 ); - [SofaGuiCommon] fix BackgroundSetting [#1826]( https://github.com/sofa-framework/sofa/pull/1826 ); - [SofaGuiQt] ADD qt.conf.h for custom qt.conf loading at runtime [#1820]( https://github.com/sofa-framework/sofa/pull/1820 ); - [SofaGuiQt] Clean QtGLViewer with key events [#1850]( https://github.com/sofa-framework/sofa/pull/1850 ); - [SofaGuiQt] FIX ""show grid"" (G) shortcut for QGLViewer [#2151]( https://github.com/sofa-framework/sofa/pull/2151 ); - [SofaGuiQt] FIX segfault due to qFatal in GenGraphForm [#1948]( https://github.com/sofa-framework/sofa/pull/1948 ); - [SofaGuiQt] Fix Expand node [#2069]( https://github.com/sofa-framework/sofa/pull/2069 ); - [SofaGuiQt] Fix Export Graph option [#1785]( https://github.com/sofa-framework/sofa/pull/1785 ); - [SofaGuiQt] Fix RealGUI: QDesktopWidget header missing for Qt < 5.11 [#1904]( https://github.com/sofa-framework/sofa/pull/1904 ); - [SofaGuiQt] Fix compat file SofaGuiQt.h [#2044]( https://github.com/sofa-framework/sofa/pull/2044 ); - [SofaGuiQt] Fix compilation [#1889]( https://github.com/sofa-framework/sofa/pull/1889 ); - [SofaGuiQt] Fix compilation when SOFA_DUMP_VISITOR is enabled [#1914]( https:",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:186277,load,loading,186277,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loading']
Performance,odyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURC,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:1666,perform,performer,1666,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,"ofa/pull/2922 ); - [Core.Topology] Fix info message when Topology given to topologyHandler is not dynamic [#3142]( https://github.com/sofa-framework/sofa/pull/3142 ); - [Core.Topology] Remove array quadsInHexahedronArray, QuadsOrientationInHexahedronArray should be used [#2995]( https://github.com/sofa-framework/sofa/pull/2995 ); - [Core] Extract BaseLinearSolver class into its own files [#2938]( https://github.com/sofa-framework/sofa/pull/2938 ); - [DefaultType] Prevent division by zero [#2929]( https://github.com/sofa-framework/sofa/pull/2929 ); - [FEM.Elastic] Fix typo on Poisson's ratio [#2911]( https://github.com/sofa-framework/sofa/pull/2911 ); - [FEM.Elastic] Minor changes in TetraXX FEM at init and to be able to access Data [#2845]( https://github.com/sofa-framework/sofa/pull/2845 ); - [FEM.Elastic] Simplify addkToMatrix in TriangularFEMForceFieldOptim [#2861]( https://github.com/sofa-framework/sofa/pull/2861 ); - [FEM.HyperElastic] Remove optimization based on type of matrix in StandardTetrahedralFEMForceField [#2858]( https://github.com/sofa-framework/sofa/pull/2858 ); - [LMConstraint] Remove LMConstraint folder as it is an external plugin [#2828]( https://github.com/sofa-framework/sofa/pull/2828 ); - [LinearSolver.Direct] Minor clean up in SparseCholeskySolver [#2881]( https://github.com/sofa-framework/sofa/pull/2881 ); - [LinearSolver.Direct] Move advice message into parse method [#3029]( https://github.com/sofa-framework/sofa/pull/3029 ); - [LinearSolver.Iterative] Clean floating point types in CG [#2808]( https://github.com/sofa-framework/sofa/pull/2808 ); - [LinearSolver] Remove explicit template instantiation for floating point types different from SReal [#2939]( https://github.com/sofa-framework/sofa/pull/2939 ); - [LinearSolver] SparseLDLSolver: template warning to info message [#2969]( https://github.com/sofa-framework/sofa/pull/2969 ); - [Mapping.Linear] Fix some warnings [#2933]( https://github.com/sofa-framework/sofa/pull/2933 ); - [Mass] fix s",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:122411,optimiz,optimization,122411,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimization']
Performance,ofa/pull/2935) ; - [Plugins] Fix Cmake configuration w/o compat [#3209](https://github.com/sofa-framework/sofa/pull/3209) ; - [GUI.Qt] Fix MSAA sampling setup [#3220](https://github.com/sofa-framework/sofa/pull/3220) ; - [DrawToolGL] Fix ill-formed drawLines with multiple colors [#3260](https://github.com/sofa-framework/sofa/pull/3260) ; - [SofaSphFluid] Fix required plugin in scenes [#3272](https://github.com/sofa-framework/sofa/pull/3272) ; - [SofaCarving] Fix bug in CarvingManager when searching for target collision model [#3276](https://github.com/sofa-framework/sofa/pull/3276) ; - [GUI/runSofa] Cmake: tweaks and fixes [#3323](https://github.com/sofa-framework/sofa/pull/3323) ; - [CImgPlugin] Replace new keyword with creating unique pointers to properly clean up allocated memory. [#3365](https://github.com/sofa-framework/sofa/pull/3365) ; - [SofaMatrix] Fix crash if init fails in FillReducingOrdering [#3366](https://github.com/sofa-framework/sofa/pull/3366) ; - [SofaDistanceGrid] Set invalid state if cannot load mesh [#3400](https://github.com/sofa-framework/sofa/pull/3400) ; - [SofaMatrix] Update plugin CMakeLists to avoid strong dependency on Qt [#3423](https://github.com/sofa-framework/sofa/pull/3423) ; - [SofaNewmat] Fix modules [#3427](https://github.com/sofa-framework/sofa/pull/3427) ; - [plugins] Fix warnings in SofaSphFluid and image [#3439](https://github.com/sofa-framework/sofa/pull/3439) ; - [GUI.Qt] Restore QGLViewer for Qt6 [#3454](https://github.com/sofa-framework/sofa/pull/3454) ; - [GUI.Qt] Restore Stats (Charts) and DocBrowser for Qt6 [#3456](https://github.com/sofa-framework/sofa/pull/3456) ; - [Modeler] rename shadow variable [#3546](https://github.com/sofa-framework/sofa/pull/3546) ; - [GUI.Common] Cmake: Fix message when searching for Sofa.GL [#3549](https://github.com/sofa-framework/sofa/pull/3549) ; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid3D [#3557](https://github.com/sofa-framework/sofa/pull/3557); - [CollisionOBBCapsule],MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:82319,load,load,82319,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['load']
Performance,ogy] Add method to register callbacks directly using the topologyData [#2375]( https://github.com/sofa-framework/sofa/pull/2375 ); - [SofaBaseTopology] Ensure to add a topology EndingEvent before propagating to all topologyData [#2376]( https://github.com/sofa-framework/sofa/pull/2376 ); - [SofaBaseVisual] Fix VisualModelImpl to use topologyData and callback to handle topological changes [#2300]( https://github.com/sofa-framework/sofa/pull/2300 ); - [SofaCore] Add const version of getMSState to Mass [#2293]( https://github.com/sofa-framework/sofa/pull/2293 ); - [SofaCore] Clearer message when template parameter is not compatible with current context [#2262]( https://github.com/sofa-framework/sofa/pull/2262 ); - [SofaCore] Required data msg now depends on existing default value [#2527]( https://github.com/sofa-framework/sofa/pull/2527 ); - [SofaDefaultType] Introduce test interface for BaseMatrix [#2280]( https://github.com/sofa-framework/sofa/pull/2280 ); - [SofaGeneralAnimationLoop] More optimization on MechanicalMatrixMapper [#2411]( https://github.com/sofa-framework/sofa/pull/2411 ); - [SofaGeneralAnimationLoop] Remove matrix compression [#2367]( https://github.com/sofa-framework/sofa/pull/2367 ); - [SofaGeneralDeformable] Add option to enable/disable spring display in TriangularBendingSprings [#2297]( https://github.com/sofa-framework/sofa/pull/2297 ); - [SofaGeneralSimpleFem] Update BeamFEMForceField topologyHander and add tests [#2382]( https://github.com/sofa-framework/sofa/pull/2382 ); - [SofaGraphComponent] Restore check of deprecated components [#2267]( https://github.com/sofa-framework/sofa/pull/2267 ); - [SofaGuiQt] Introduce expand/collapse buttons [#2322]( https://github.com/sofa-framework/sofa/pull/2322 ); - [SofaGuiQt] Introduce expand/collapse buttons in profiler [#2351]( https://github.com/sofa-framework/sofa/pull/2351 ); - [SofaGuiQt] Multiple selection of timers in the profiler [#2141]( https://github.com/sofa-framework/sofa/pull/2141 ); - [SofaG,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:141248,optimiz,optimization,141248,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimization']
Performance,"on support in CUDA (requires GT200+ GPU and -arch sm_13 flag."" OFF); if(SOFACUDA_DOUBLE); set(SOFA_GPU_CUDA_DOUBLE 1) # #cmakedefine; endif(). option(SOFACUDA_DOUBLE_PRECISE ""Enable double-precision for sqrt/div... (requires compute capability; >= 2 and CUDA_VERSION > 3.0)"" OFF); # Note: with SOFA_GPU_CUDA_PRECISE and SOFA_GPU_CUDA_DOUBLE you get IEEE; # 754-compliant floating point operations for addition and multiplication only.; if(SOFACUDA_DOUBLE_PRECISE); set(SOFA_GPU_CUDA_DOUBLE_PRECISE 1) # #cmakedefine; endif(). option(SOFACUDA_PRECISE ""Use IEEE 754-compliant floating point operations."" OFF). include(SofaCUDANvccFlags.cmake). # nvcc uses a ""host code compiler"" to compile CPU code, specified by CUDA_HOST_COMPILER.; # With some versions of CMake, CUDA_HOST_COMPILER defaults to CMAKE_C_COMPILER,; # but few host compilers are actually supported. Workarounds should go here.; if (${CUDA_HOST_COMPILER} MATCHES ""ccache$""); message(STATUS ""SofaCUDA: CUDA host compiler was set to ccache, changing to g++""); set(CUDA_HOST_COMPILER ""g++"" CACHE STRING ""Host side compiler used by NVCC"" FORCE); endif(). # quick and dirty fix for nvcc compatibility with -fno-partial-inlining flag; set(CUDA_PROPAGATE_HOST_FLAGS OFF). if(WIN32); add_definitions(""-DWIN32""); set(WINDOWSOPTIONS ""/MD""); endif(). # Make the compiler definitions available to nvcc; add_definitions(""-DSOFA_BUILD_SOFACUDA""); # Give include directories to nvcc compiler.; # Note: keep cuda_include_directories() before cuda_add_library().; cuda_include_directories(""${CMAKE_CURRENT_SOURCE_DIR}""); cuda_include_directories(""${CMAKE_CURRENT_SOURCE_DIR}/src""); cuda_include_directories(""${CMAKE_BINARY_DIR}/include""); cuda_add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${CUDA_SOURCES} ${README_FILES} OPTIONS ${VERBOSE_PTXAS} ${WINDOWSOPTIONS}). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR};${CMAKE_CURRENT_SOURCE_DIR}/src>""); set_target_properties(${PROJECT_NAM",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:18823,CACHE,CACHE,18823,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,1,['CACHE'],['CACHE']
Performance,onProjectiveConstraintSet.inl; ${SRC_ROOT}/behavior/PairStateAccessor.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.inl; ${SRC_ROOT}/behavior/RotationFinder.h; ${SRC_ROOT}/behavior/StateAccessor.h; ${SRC_ROOT}/behavior/SingleMatrixAccessor.h; ${SRC_ROOT}/behavior/SingleStateAccessor.h; ${SRC_ROOT}/behavior/fwd.h; ${SRC_ROOT}/collision/BroadPhaseDetection.h; ${SRC_ROOT}/collision/CollisionAlgorithm.h; ${SRC_ROOT}/collision/CollisionGroupManager.h; ${SRC_ROOT}/collision/Contact.h; ${SRC_ROOT}/collision/ContactManager.h; ${SRC_ROOT}/collision/Detection.h; ${SRC_ROOT}/collision/DetectionOutput.h; ${SRC_ROOT}/collision/Intersection.h; ${SRC_ROOT}/collision/Intersection.inl; ${SRC_ROOT}/collision/IntersectorFactory.h; ${SRC_ROOT}/collision/NarrowPhaseDetection.h; ${SRC_ROOT}/collision/Pipeline.h; ${SRC_ROOT}/loader/BaseLoader.h; ${SRC_ROOT}/loader/ImageLoader.h; ${SRC_ROOT}/loader/MeshLoader.h; ${SRC_ROOT}/loader/SceneLoader.h; ${SRC_ROOT}/loader/VoxelLoader.h; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.h; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.h; ${SRC_ROOT}/objectmodel/AbstractDataLink.h; ${SRC_ROOT}/objectmodel/AspectPool.h; ${SRC_ROOT}/objectmodel/Base.h; ${SRC_ROOT}/objectmodel/BaseClass.h; ${SRC_ROOT}/objectmodel/BaseClassNameHelper.h; ${SRC_ROOT}/objectmodel/BaseContext.h; ${SRC_ROOT}/objectmodel/BaseData.h; ${SRC_ROOT}/objectmodel/BaseLink.h; ${SRC_ROOT}/objectmodel/BaseNode.h; ${SRC_ROOT}/objectmodel/BaseObject.h; ${SRC_ROOT}/objectmodel/BaseObjectDescription.h; ${SRC_ROOT}/objectmodel/ClassInfo.h; ${SRC_ROOT}/objectmodel/ComponentState.h; ${SRC_ROOT}/objectmodel/ConfigurationSetting.h; ${SRC_ROOT}/objectmodel/Context.h; ${SRC_ROOT}/objectmodel/ContextObject.h; ${SRC_ROOT}/objectmodel/DDGNode.h; ${SRC_ROOT}/objectmodel/Data.h; ${SRC_ROOT}/objectmodel/DataCallback.h; ${SRC_ROOT}/objectmodel/DataContentValue.h; ${SRC_ROOT}/objectmodel/DataFileName.h; ${SRC_ROOT}/objectmodel/DataFileNameVecto,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:4625,load,loader,4625,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['load'],['loader']
Performance,ouseInteraction.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.cpp; ${SOFAGUICOMPONENT_SOURCE_DI,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:1938,perform,performer,1938,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,"pology containing the mesh edges, triangles and ; quads, an OglModel component to draw the mesh on the screen and if the mesh is not skinned an IdentityMapping to link the MechanicalObject containing the mesh vertices to the OglModel (this step is ; automatically done by the SkinningMapping if we have a skinned mesh). Examples.       The file example.scn (located in the folder : ColladaSceneLoader/Demos/ ) which loads the collada file ""example.dae"" illustrate pretty well how works the plugin.; Its XML description contains a line with the new SceneColladaLoader component with its filename data filled as below :. <SceneColladaLoader name=""sceneColladaLoader"" filename=""example.dae"" />. The collada file example.dae contains a very basic scene with a mesh skinned with two bones representing an arm which is animated in two step as shown in the following screenshots [took from Blender (software)] :.       . Animation step 1 : Arm is raised. Animation step 2 : Arm is bent. And now the same scene loaded into Sofa :. Animation step 1 : Arm is raised; Animation step 1-2 : Arm animation interpolated by Sofa(animation speed depends of the animation time step); Animation step 2 : Arm is bent. Another example with a scene containing two meshes, one with the same bones as in the previous example and a sphere without skinning.       . The scene in the Sofa Modeler. The same scene in runSofa.       As you can see in Sofa Modeler, the scene to load a collada file is very simple. We have the SceneColladaLoader to load it and, important thing, we also have an EulerSolver ; which will be used by the potential SkeletalMotionProjectiveConstraints to ""play"" the animation updating positions and velocities.; When you launch runSofa with this scene, a new node will be added which contains the whole collada scene. The name of this node is the name you gave to the ; SceneColladaLoader plus the string ""_scene"". On the right picture, the loader generated two child nodes call ""mesh 0"" which contains",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:3402,load,loaded,3402,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,1,['load'],['loaded']
Performance,"pp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/CapsuleContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/OBBContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED) # for performers. add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision Sofa.GUI.Component). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(COLLISIONOBBCAPSULE_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(COLLISIONOBBCAPSULE_BUILD_TESTS); enable_testing(); add_subdirectory(CollisionOBBCapsule_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:4015,perform,performers,4015,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['perform'],['performers']
Performance,"pty string instead of null pointer in DataExchange [#3686](https://github.com/sofa-framework/sofa/pull/3686) ; - [Geomagic] Fix potential crash at exit when device has not been init [#3698](https://github.com/sofa-framework/sofa/pull/3698) ; - [SofaCUDA] Fix includes pointing to compatibility layer [#3727](https://github.com/sofa-framework/sofa/pull/3727) ; - [plugins] ArticulatedSystemMapping : adds size check & fixes typo [#3751](https://github.com/sofa-framework/sofa/pull/3751) . **Examples / Scenes**; - [All] Fix example scenes showing warnings or errors [#3526](https://github.com/sofa-framework/sofa/pull/3526) ; - [all] Update totalmass to totalMass [#3622](https://github.com/sofa-framework/sofa/pull/3622) . **Scripts / Tools**; - [CI, Scenes] Restore custom parameters for the scene-tests [#3674](https://github.com/sofa-framework/sofa/pull/3674) . ### Cleaning. **Architecture**; - [all] Lifecycle v22.06 [#3535](https://github.com/sofa-framework/sofa/pull/3535) ; - [Type] Quat: small optimization for axisToQuat() [#3559](https://github.com/sofa-framework/sofa/pull/3559) ; - [Config] Remove unused SOFA_WITH_THREADING option [#3565](https://github.com/sofa-framework/sofa/pull/3565) ; - [Project] Start v23.06 dev phase [#3573](https://github.com/sofa-framework/sofa/pull/3573) ; - [Cmake] Update warning replacement message for deprecated macro sofa_add_XX [#3611](https://github.com/sofa-framework/sofa/pull/3611) ; - [Sofa] Remove warnings [#3627](https://github.com/sofa-framework/sofa/pull/3627) ; - [Sofa.framework] Compile and run tests when SReal is float [#3628](https://github.com/sofa-framework/sofa/pull/3628) ; - [Type] Fix massive warning due to Mat.h [#3633](https://github.com/sofa-framework/sofa/pull/3633) ; - [Core] TLink: Fix warnings about comparisons between unnamed enums [#3714](https://github.com/sofa-framework/sofa/pull/3714) ; - [Helper] Deprecate constructor of OptionsGroup [#3741](https://github.com/sofa-framework/sofa/pull/3741) ; - [Config] Remove",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:61292,optimiz,optimization,61292,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimization']
Performance,"pull/250 ); - add tests for DefaultAnimationLoop [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for LocalMinDistance [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add a way to convert message type to string in Message.cpp [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - adding listener mechanism to SceneLoader [#204]( https://github.com/sofa-framework/sofa/pull/204 ); - Grid Topologies cleanup + new SphereGrid [#164]( https://github.com/sofa-framework/sofa/pull/164 ); - Add CMake option SOFA_WITH_EXPERIMENTAL_FEATURES (default OFF) to enable MechanicalObject::buildIdentityBlocksInJacobian [#276]( https://github.com/sofa-framework/sofa/pull/276 ); - [SofaGraphComponents]; - add tests for RequiredPlugin [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaHelper]; - GLSL: load shader source code from a standard string [#158]( https://github.com/sofa-framework/sofa/pull/158 ); - [SofaBaseTopology]; - GridTopology : implement ""flat"" grids in 1 or 2 dimension by using setting grid resolution to ""1"" in the corresponding axis, and associated examples [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - add tests for RegularGridTopology [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - [SofaEngine]; - BREAKING: Add oriented box feature to BoxROI [#108]( https://github.com/sofa-framework/sofa/pull/108 ); - [SofaConstraint]; - add instantiation of constraint corrections with Vec2f [#157]( https://github.com/sofa-framework/sofa/pull/157 ); - [SofaOpenglVisual]; - add tests for ClipPlane [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaVolumetricData]; - add tests for DistanceGrid [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for Light [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaBoundar",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:328095,load,load,328095,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['load']
Performance,ractionProjectiveConstraintSet.h; ${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.inl; ${SRC_ROOT}/behavior/PairStateAccessor.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.inl; ${SRC_ROOT}/behavior/RotationFinder.h; ${SRC_ROOT}/behavior/StateAccessor.h; ${SRC_ROOT}/behavior/SingleMatrixAccessor.h; ${SRC_ROOT}/behavior/SingleStateAccessor.h; ${SRC_ROOT}/behavior/fwd.h; ${SRC_ROOT}/collision/BroadPhaseDetection.h; ${SRC_ROOT}/collision/CollisionAlgorithm.h; ${SRC_ROOT}/collision/CollisionGroupManager.h; ${SRC_ROOT}/collision/Contact.h; ${SRC_ROOT}/collision/ContactManager.h; ${SRC_ROOT}/collision/Detection.h; ${SRC_ROOT}/collision/DetectionOutput.h; ${SRC_ROOT}/collision/Intersection.h; ${SRC_ROOT}/collision/Intersection.inl; ${SRC_ROOT}/collision/IntersectorFactory.h; ${SRC_ROOT}/collision/NarrowPhaseDetection.h; ${SRC_ROOT}/collision/Pipeline.h; ${SRC_ROOT}/loader/BaseLoader.h; ${SRC_ROOT}/loader/ImageLoader.h; ${SRC_ROOT}/loader/MeshLoader.h; ${SRC_ROOT}/loader/SceneLoader.h; ${SRC_ROOT}/loader/VoxelLoader.h; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.h; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.h; ${SRC_ROOT}/objectmodel/AbstractDataLink.h; ${SRC_ROOT}/objectmodel/AspectPool.h; ${SRC_ROOT}/objectmodel/Base.h; ${SRC_ROOT}/objectmodel/BaseClass.h; ${SRC_ROOT}/objectmodel/BaseClassNameHelper.h; ${SRC_ROOT}/objectmodel/BaseContext.h; ${SRC_ROOT}/objectmodel/BaseData.h; ${SRC_ROOT}/objectmodel/BaseLink.h; ${SRC_ROOT}/objectmodel/BaseNode.h; ${SRC_ROOT}/objectmodel/BaseObject.h; ${SRC_ROOT}/objectmodel/BaseObjectDescription.h; ${SRC_ROOT}/objectmodel/ClassInfo.h; ${SRC_ROOT}/objectmodel/ComponentState.h; ${SRC_ROOT}/objectmodel/ConfigurationSetting.h; ${SRC_ROOT}/objectmodel/Context.h; ${SRC_ROOT}/objectmodel/ContextObject.h; ${SRC_ROOT}/objectmodel/DDGNode.h; ${SRC_ROOT}/objectmodel/Data.h; ${SRC_ROOT}/objectmodel/DataCallback.h; ${SRC_ROOT}/objectmodel/DataContentValue.h; ${SRC_ROOT}/ob,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:4558,load,loader,4558,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['load'],['loader']
Performance,ramework/sofa/pull/1124 ); - [CGal plugin][CImgPlugin] Image data moved from Image/ to CImgPlugin/ [#1104]( https://github.com/sofa-framework/sofa/pull/1104 ); - [Geomagic] Reorder plugin files for better modularization [#1208]( https://github.com/sofa-framework/sofa/pull/1208 ); - [ManifoldTopologies] Undust and clean [#1156]( https://github.com/sofa-framework/sofa/pull/1156 ). **Examples / Scenes**; - [Scenes] Clean some alias warnings [#1098]( https://github.com/sofa-framework/sofa/pull/1098 ); - [scenes] Change OglModel to use a MeshObjLoader instead of loading the mesh internally. [#1096]( https://github.com/sofa-framework/sofa/pull/1096 ). ____________________________________________________________. ## [v19.06]( https://github.com/sofa-framework/sofa/tree/v19.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v18.12...v19.06 ). ### Breaking. **Modules**; - [All] Run clang-tidy and update license headers [#899]( https://github.com/sofa-framework/sofa/pull/899 ); - [All] Refactor the loading of Xsp files. [#918]( https://github.com/sofa-framework/sofa/pull/918 ); - **[SofaBaseTopology]** Change triangles orientation in tetrahedron [#878]( https://github.com/sofa-framework/sofa/pull/878 ); - **[SofaBaseTopology]** Major Change in Topology Containers [#967]( https://github.com/sofa-framework/sofa/pull/967 ); - **[SofaKernel]** Refactor the MutationListener [#917]( https://github.com/sofa-framework/sofa/pull/917 ); - **[SofaKernel]** Some Topology cleaning... [#866]( https://github.com/sofa-framework/sofa/pull/866 ); - [SofaOpenglVisual] Fix ogl perf problem [#1069]( https://github.com/sofa-framework/sofa/pull/1069 ). ### Modularizations. - [SofaExporter] Modularize (+minor dependency cleaning) [#915]( https://github.com/sofa-framework/sofa/pull/915 ); - [SofaHaptics] Modularize sofa haptics [#945]( https://github.com/sofa-framework/sofa/pull/945 ); - [SofaOpenglVisual] Pluginize. [#1080]( https://github.com/sofa-framework/sofa/pull/1080 ). ### Impro,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:257555,load,loading,257555,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loading']
Performance,"re the volume mesh. Add a new GNode to the root node. Rename it ""Tetrahedrons Mesh"".; Add a MeshGmshLoader component to the Tetrahedrons Mesh node. Rename it ""loader"". Specify the Filename of the object to be /Sofa/share/mesh/cylinder.msh.; Add a MechanicalObject component to the Tetrahedrons Mesh node. Rename it ""Volume"".; Under the Transformations tab, press the Scale of the DOFs in 3 dimensions button. In the textbox that appears, enter ""@loader.scale3d"". Similarly, press the Translation of the DOFs button and enter ""@loader.translation"", and press the Rotation of the DOFs button and enter ""@loader.rotation"".; Under the Vector 1/4 tab, press the position coordinates of the degrees of freedom button. In the textbox that appears, enter ""@loader.position"". ; Add a TetrahedronSetTopologyContainer component to the Tetrahedrons Mesh node. Rename it ""Container"". Specify /Sofa/share/mesh/cylinder.msh as the Filename of the mesh. TetrahedronSetTopologyContainer is a topology container, it is used to store a topology (positions, edges, triangles, tetrahedrons). Usually this topology is not defined manually, but copied from the topology of a MeshLoader component.; In the Property 2/2 tab, press the List of tetrahedron indices button. Enter ""@loader.tetrahedra"" in the textbox that appears. This syntax means that the Data ""tetrahedra"" contained in the SOFA Component of this node named ""loader"" must be copied into this Data. ; Add a TetrahedronSetGeometryAlgorithms component to the Tetrahedrons Mesh node. In the Visualization 2/2 tab, check the if true, draw the tetahedra in the topology box; Change the RGB code color used to draw tetrahedra property to (1 1 0.3). ; The options in the TetrahedronSetGeometryAlgorithms component are used to display the topological element (tetrahedra here).; Results; Run in SOFA and animate.; In this scene we only have the tetrahedral mesh in terms of topology and geometry. No interactions are possible at this step.; Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/1_TopoMapping.html:1669,load,loader,1669,examples/Tutorials/StepByStep/TopologicalMapping/1_TopoMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/1_TopoMapping.html,2,['load'],['loader']
Performance,"re]** Add new (simpler) DataEngine implementation [#760]( https://github.com/sofa-framework/sofa/pull/760 ); - [SofaExporter] ADD in WriteState all required tests on data and clean export with msg API [#714]( https://github.com/sofa-framework/sofa/pull/714 ); - **[SofaFramework]** Improve external dirs fetching in SofaMacros [#759]( https://github.com/sofa-framework/sofa/pull/759 ); - [SofaGeneralAnimationLoop] Improvement on MMMapper [#772]( https://github.com/sofa-framework/sofa/pull/772 ); - **[SofaHelper]** EDIT FileSystem and FileRepository for regression tests [#830]( https://github.com/sofa-framework/sofa/pull/830 ); - **[SofaKernel]** Improve Displayflags [#671]( https://github.com/sofa-framework/sofa/pull/671 ); - **[SofaKernel]** Add a ""sofa_add_module"" in SofaMacro.cmake [#732]( https://github.com/sofa-framework/sofa/pull/732 ); - **[SofaKernel]** use string in base object description [#862]( https://github.com/sofa-framework/sofa/pull/862 ); - [SofaMeshCollision] TriangleModel optimization when topology changes occur [#839]( https://github.com/sofa-framework/sofa/pull/839 ); - [SofaSparseSolver] ADD saveMatrixToFile to SparseLDLSolver [#845]( https://github.com/sofa-framework/sofa/pull/845 ); - [SofaTest] ADD a PrintTo method so test failure shows human readable informations. [#730]( https://github.com/sofa-framework/sofa/pull/730 ); - [VisualModel] Improve the messages when loading mesh inside VisualModel [#778]( https://github.com/sofa-framework/sofa/pull/778 ); - [WriteState] minor fix with the time attribute, default values [#776]( https://github.com/sofa-framework/sofa/pull/776 ). **Plugins / Projects**; - [Geomagic] ADD an inputForceFeedback data in Geomagic [#648]( https://github.com/sofa-framework/sofa/pull/648 ); - [Geomagic] Fix dll export and some enhancements [#786]( https://github.com/sofa-framework/sofa/pull/786 ); - [MultiThreading] removed the boost thread dependency [#701]( https://github.com/sofa-framework/sofa/pull/701 ); - [MultiThrea",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:281011,optimiz,optimization,281011,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimization']
Performance,rformer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.cpp. ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Model REQUIRED); sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Mapper REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED); sofa_find_package(Sofa.Component.Topology.Mapping REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}),MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:2941,perform,performer,2941,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,"rk written entirely by you; rather, the intent is to; exercise the right to control the distribution of derivative or; collective works based on the Program. In addition, mere aggregation of another work not based on the Program; with the Program (or with a work based on the Program) on a volume of; a storage or distribution medium does not bring the other work under; the scope of this License. 3. You may copy and distribute the Program (or a work based on it,; under Section 2) in object code or executable form under the terms of; Sections 1 and 2 above provided that you also do one of the following:. a) Accompany it with the complete corresponding machine-readable; source code, which must be distributed under the terms of Sections; 1 and 2 above on a medium customarily used for software interchange; or,. b) Accompany it with a written offer, valid for at least three; years, to give any third party, for a charge no more than your; cost of physically performing source distribution, a complete; machine-readable copy of the corresponding source code, to be; distributed under the terms of Sections 1 and 2 above on a medium; customarily used for software interchange; or,. c) Accompany it with the information you received as to the offer; to distribute corresponding source code. (This alternative is; allowed only for noncommercial distribution and only if you; received the program in object code or executable form with such; an offer, in accord with Subsection b above.). The source code for a work means the preferred form of the work for; making modifications to it. For an executable work, complete source; code means all the source code for all modules it contains, plus any; associated interface definition files, plus the scripts used to; control compilation and installation of the executable. However, as a; special exception, the source code distributed need not include; anything that is normally distributed (in either source or binary; form) with the major components (co",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:7456,perform,performing,7456,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,6,['perform'],['performing']
Performance,rmer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.cpp. ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Model REQUIRED); sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Mapper ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:2674,perform,performer,2674,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,"rnings about comparisons between unnamed enums [#3714](https://github.com/sofa-framework/sofa/pull/3714) ; - [Helper] Deprecate constructor of OptionsGroup [#3741](https://github.com/sofa-framework/sofa/pull/3741) ; - [Config] Remove suspicious Eigen macro preventing vectorization [#3780](https://github.com/sofa-framework/sofa/pull/3780) . **Modules**; - [StateContainer] Avoid code duplication in MechanicalObject [#3541](https://github.com/sofa-framework/sofa/pull/3541) ; - [FEM.Elastic] Fix unit tests warnings [#3545](https://github.com/sofa-framework/sofa/pull/3545) ; - [GUI] GUI libraries as plugins [#3550](https://github.com/sofa-framework/sofa/pull/3550) ; - [LinearAlgebra, LinearSolver.Direct] make getSubMatrixDim() compile-time constant [#3556](https://github.com/sofa-framework/sofa/pull/3556) ; - [FEM.Elastic] Consistent default values for poisson's ratio and Young's modulus [#3563](https://github.com/sofa-framework/sofa/pull/3563) ; - [FEM.Elastic] Minor refactoring and optimization in draw [#3564](https://github.com/sofa-framework/sofa/pull/3564) ; - [all] Fix some warnings further v22.12 [#3570](https://github.com/sofa-framework/sofa/pull/3570) ; - [LinearAlgebra] Remove wrong comment [#3582](https://github.com/sofa-framework/sofa/pull/3582) ; - [LinearAlgebra] Factorize rotateMatrix in RotationMatrix [#3586](https://github.com/sofa-framework/sofa/pull/3586) ; - [Mass] Remove empty loop in addForce [#3593](https://github.com/sofa-framework/sofa/pull/3593) ; - [Spring] Remove duplicated code [#3594](https://github.com/sofa-framework/sofa/pull/3594) ; - [Components] rename shadow variable [#3606](https://github.com/sofa-framework/sofa/pull/3606) ; - [Helper,Geometry] Move proximity classes into free functions [#3666](https://github.com/sofa-framework/sofa/pull/3666) ; - [all] Remove a bunch of warnings [#3711](https://github.com/sofa-framework/sofa/pull/3711); - [Spring] Remove variable redefinitions [#3754](https://github.com/sofa-framework/sofa/pull/3754) ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:63051,optimiz,optimization,63051,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimization']
Performance,"runSofa or in the sofa Modeler (in the main toolbar : Edit / Plugin Manager...).; You are now able to use the new SceneColladaLoader component. In the Modeler, you can find it in the Loader category. To do so, drag and drop the component into your scene graph and fill up the data ""filename"" with ; the path of the collada scene you want to load. If you launch runSofa with your scene you will see your SceneColladaLoader component and a new generated node below which contains the whole collada scene.       For every skinned mesh, the SceneColladaLoader component creates a MechanicalObject containing the bones used to skin the mesh, a SkeletalMotionContraint containing the whole bones animation ; and a SkinningMapping in order to apply the skinning on the mesh.; For every mesh, skinned or not, the loader also creates components needed for visualisation : a MechanicalObject with the mesh vertices, a MeshTopology containing the mesh edges, triangles and ; quads, an OglModel component to draw the mesh on the screen and if the mesh is not skinned an IdentityMapping to link the MechanicalObject containing the mesh vertices to the OglModel (this step is ; automatically done by the SkinningMapping if we have a skinned mesh). Examples.       The file example.scn (located in the folder : ColladaSceneLoader/Demos/ ) which loads the collada file ""example.dae"" illustrate pretty well how works the plugin.; Its XML description contains a line with the new SceneColladaLoader component with its filename data filled as below :. <SceneColladaLoader name=""sceneColladaLoader"" filename=""example.dae"" />. The collada file example.dae contains a very basic scene with a mesh skinned with two bones representing an arm which is animated in two step as shown in the following screenshots [took from Blender (software)] :.       . Animation step 1 : Arm is raised. Animation step 2 : Arm is bent. And now the same scene loaded into Sofa :. Animation step 1 : Arm is raised; Animation step 1-2 : Arm anim",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:2290,load,loader,2290,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,1,['load'],['loader']
Performance,sg in Multi2Mapping_test [#1097]( https://github.com/sofa-framework/sofa/pull/1097 ); - [SofaTopologyMapping] Cleanups of some topological mappings + better initialization [#1126]( https://github.com/sofa-framework/sofa/pull/1126 ); - [SofaViewer] Prevent the GUI to ouput every CTRL actions in the console [#1130]( https://github.com/sofa-framework/sofa/pull/1130 ). **Plugins / Projects**; - [CGALPlugin] Some cleanups to CylinderMesh [#1124]( https://github.com/sofa-framework/sofa/pull/1124 ); - [CGal plugin][CImgPlugin] Image data moved from Image/ to CImgPlugin/ [#1104]( https://github.com/sofa-framework/sofa/pull/1104 ); - [Geomagic] Reorder plugin files for better modularization [#1208]( https://github.com/sofa-framework/sofa/pull/1208 ); - [ManifoldTopologies] Undust and clean [#1156]( https://github.com/sofa-framework/sofa/pull/1156 ). **Examples / Scenes**; - [Scenes] Clean some alias warnings [#1098]( https://github.com/sofa-framework/sofa/pull/1098 ); - [scenes] Change OglModel to use a MeshObjLoader instead of loading the mesh internally. [#1096]( https://github.com/sofa-framework/sofa/pull/1096 ). ____________________________________________________________. ## [v19.06]( https://github.com/sofa-framework/sofa/tree/v19.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v18.12...v19.06 ). ### Breaking. **Modules**; - [All] Run clang-tidy and update license headers [#899]( https://github.com/sofa-framework/sofa/pull/899 ); - [All] Refactor the loading of Xsp files. [#918]( https://github.com/sofa-framework/sofa/pull/918 ); - **[SofaBaseTopology]** Change triangles orientation in tetrahedron [#878]( https://github.com/sofa-framework/sofa/pull/878 ); - **[SofaBaseTopology]** Major Change in Topology Containers [#967]( https://github.com/sofa-framework/sofa/pull/967 ); - **[SofaKernel]** Refactor the MutationListener [#917]( https://github.com/sofa-framework/sofa/pull/917 ); - **[SofaKernel]** Some Topology cleaning... [#866]( https://github.com/so,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:257101,load,loading,257101,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loading']
Performance,"sources(${PROJECT_NAME} INTERFACE ""$<BUILD_INTERFACE:${HEADER_FILES};${SOFACONFIG_BUILD_OPTIONS_SRC}>""). # Library; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOFACONFIG_BUILD_OPTIONS_SRC} ${SOURCE_FILES}). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>""). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/WinDepPack>""); endif(). # Compile options; # Set C++17; target_compile_features(${PROJECT_NAME} PUBLIC cxx_std_17). set(SOFACONFIG_COMPILE_OPTIONS_DEBUG """"); set(SOFACONFIG_COMPILE_OPTIONS_RELEASE """"); set(SOFACONFIG_COMPILE_OPTIONS """"); set(SOFACONFIG_LINK_OPTIONS """"); set(SOFACONFIG_LINK_OPTIONS_DEBUG """"); set(SOFACONFIG_LINK_OPTIONS_RELEASE """"). ## Link-time optimization; if(NOT IPO_CHECK_DONE); include(CheckIPOSupported); check_ipo_supported(RESULT IS_IPO_SUPPORTED OUTPUT IPO_ERROR); set(IPO_CHECK_DONE ON CACHE INTERNAL ""IPO check has been done"" FORCE); if (IS_IPO_SUPPORTED); set(IPO_SUPPORTED ON CACHE INTERNAL ""IPO can be activated"" FORCE); else(); message(STATUS ""IPO / LTO not supported: <${IPO_ERROR}>""); endif(); endif(). if (IPO_SUPPORTED); # Focus on max speed with link-time optimization; option(SOFA_ENABLE_LINK_TIME_OPTIMIZATION ""Enable interprocedural optimization"" OFF); if (SOFA_ENABLE_LINK_TIME_OPTIMIZATION); set(CMAKE_INTERPROCEDURAL_OPTIMIZATION_RELEASE TRUE PARENT_SCOPE); endif(); else(); message(STATUS ""IPO / LTO not supported: <${IPO_ERROR}>""); endif(). ## GCC-specific; if(${CMAKE_CXX_COMPILER_ID} MATCHES ""GNU""); ## Find out the version of g++ (and save it in GCXX_VERSION); if(CMAKE_CXX_COMPILER_ARG1) # CXX=""ccache g++""; string(STRIP ${CMAKE_CXX_COMPILER_ARG1} CMAKE_CXX_COMPILER_ARG1_stripped); execute_process(COMMAND ${CMAKE_CXX_COMPILER_ARG1_stripped} -dumpversion OUTPUT_VARIABLE GCXX_VERSION); else(); execute_process(COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE GCXX_VERSION); endif().",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:5150,optimiz,optimization,5150,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,3,"['CACHE', 'optimiz']","['CACHE', 'optimization']"
Performance,"t: ICPRegistration_ShapeMatching.scn is ignored; - Vec: 'normalized' function constness; - SpotLight: direction normalization; - ProjectionTo{Plane,Line}MultiMapping Jacobian insertion order; - SofaGeneralRigid: bug in ArticulatedSystemMapping; - SofaEngine: BoxROI instantiation; - SofaBaseCollision: Fix computeBBox in SPhereModel; - bug in MechanicalPickParticlesWithTagsVisitor input tags were not respected; - SofaOpenGLVisual: fix light's modelview matrix computation (lookat data was not checked); - StateMask method clean needs to resize m_size to 0. - [Test-CI]; - fix crash UncoupledConstraintCorrection_test; - fix SofaComponentBase_test on windows; - fix Mapping and MultiMapping tests; - fix MultiMapping::applyDJT test; - fix {Difference,Addition}Mapping when a pair is composed of the same index.; - fix tested scenes selection; - removed OptiTrackNatNet from ""options"" configurations; - ignore some OptiTrackNatNet scenes testing. - [SofaPython]; - fix GridTopology type on the python side; - fix OBJ loader; - fix loading a scene from a .py in a Node independently from the awful Simulation singleton.; - fix SofaPython.Tools.localPath in some situations; - fix BaseContext_getObjects so it can select objects from a base class name (and adding an example); - quaternion: fix singularity in from_line function. - [Flexible]; - fix case sensitive issues; - API: fix a bug with colors when reloading a scene; - fix the bulk factor in NeoHookean material; - fix NeoHookean traction test; - testing detachFromGraph; - BaseDeformationMapping: remove debug message, fix usage of sout (no need for testing f_printLog); - fix test compilation w/o image plugin; - fix loadVisual; - fix bug in topologygausspointsampler (computation of volume integrals for irregular hexa). - [Compliant]; - CompliantImplicitSolver: fix Lagrange multipliers clear when reseting the simulation; - auto-fix init errors in RigidMass; - Frame.py: adding tolist() conversion; - fix Jacobian reserved size; - fix cont",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:358871,load,loader,358871,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['load'],"['loader', 'loading']"
Performance,"the; GNU General Public License, you may choose any version ever published; by the Free Software Foundation. If the Program specifies that a proxy can decide which future; versions of the GNU General Public License can be used, that proxy's; public statement of acceptance of a version permanently authorizes you; to choose that version for the Program. Later license versions may give you additional or different; permissions. However, no additional obligations are imposed on any; author or copyright holder as a result of your choosing to follow a; later version. 15. Disclaimer of Warranty. THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY; APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT; HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY; OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,; THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR; PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM; IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF; ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. Limitation of Liability. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING; WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS; THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY; GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE; USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF; DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD; PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),; EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF; SUCH DAMAGES. 17. Interpretation of Sections 15 and 16. If the disclaimer of warranty and limitation of liability provided; above cannot be given local legal effect according to their terms,; reviewing courts shall apply local ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:49791,PERFORM,PERFORMANCE,49791,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['PERFORM'],['PERFORMANCE']
Performance,"to 0. - [Test-CI]; - fix crash UncoupledConstraintCorrection_test; - fix SofaComponentBase_test on windows; - fix Mapping and MultiMapping tests; - fix MultiMapping::applyDJT test; - fix {Difference,Addition}Mapping when a pair is composed of the same index.; - fix tested scenes selection; - removed OptiTrackNatNet from ""options"" configurations; - ignore some OptiTrackNatNet scenes testing. - [SofaPython]; - fix GridTopology type on the python side; - fix OBJ loader; - fix loading a scene from a .py in a Node independently from the awful Simulation singleton.; - fix SofaPython.Tools.localPath in some situations; - fix BaseContext_getObjects so it can select objects from a base class name (and adding an example); - quaternion: fix singularity in from_line function. - [Flexible]; - fix case sensitive issues; - API: fix a bug with colors when reloading a scene; - fix the bulk factor in NeoHookean material; - fix NeoHookean traction test; - testing detachFromGraph; - BaseDeformationMapping: remove debug message, fix usage of sout (no need for testing f_printLog); - fix test compilation w/o image plugin; - fix loadVisual; - fix bug in topologygausspointsampler (computation of volume integrals for irregular hexa). - [Compliant]; - CompliantImplicitSolver: fix Lagrange multipliers clear when reseting the simulation; - auto-fix init errors in RigidMass; - Frame.py: adding tolist() conversion; - fix Jacobian reserved size; - fix contacts and associated test. - [image]; - python tools: fix bug in mhd parsing; - MeshToImage: fix bresenham, be sure dmax>=1; - fix resampling of projection images, and marching cubes default parameter; - fix bug in mhd file loader; - fix rasterization when using vertex colors. ### Cleanings. - warnings were removed; - dead branches were removed; - the ‘using’ directives were removed in header files; - the repository sofa_root/modules/sofa/components has been cleaned (deprecated components removed); - clean many SOFA examples; - removing ""using help",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:359530,load,loadVisual,359530,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loadVisual']
Performance,tonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.cpp. ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Model REQUIRED); sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Mapper REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED); sofa_find_package(Sofa.Component.Topology.Mapping REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Setting); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:3083,perform,performer,3083,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,tps://github.com/sofa-framework/sofa/pull/3018 ); - [sofaProjectExample] Resuscitate application with gui and simulation (cpp) [#2792]( https://github.com/sofa-framework/sofa/pull/2792 ). **Examples / Scenes**; - [examples] FIX benchmark_cubes.scn needs CollisionOBBCapsule [#2898]( https://github.com/sofa-framework/sofa/pull/2898 ); - [examples] Fix ProjectToPointconstraint scene by using MeshSpringForceField [#2827]( https://github.com/sofa-framework/sofa/pull/2827 ); - [examples] Fix falling cubes scene [#2831]( https://github.com/sofa-framework/sofa/pull/2831 ); - [examples] Fix plugins in a couple of scenes [#2810]( https://github.com/sofa-framework/sofa/pull/2810 ); - [examples] Move PointSplatModel and SpatialGridPointModel scenes into Sph plugin [#2847]( https://github.com/sofa-framework/sofa/pull/2847 ); - [examples] FIX scenes with old CollisionGroupManager component [#3198]( https://github.com/sofa-framework/sofa/pull/3198 ). **Scripts / Tools**; - [tools] Correction of the import of the queue library [#2572]( https://github.com/sofa-framework/sofa/pull/2572 ). ### Cleanings. **Project**; - [GitHub] Update Changelog and version [#2546]( https://github.com/sofa-framework/sofa/pull/2546 ); - [Git] Clean project files [#2884]( https://github.com/sofa-framework/sofa/pull/2884 ); - [Project] Update README [#2905]( https://github.com/sofa-framework/sofa/pull/2905 ); - [Readme] Delete references to removed/moved directories in licence paragraph [#2547]( https://github.com/sofa-framework/sofa/pull/2547 ); - [doc] Remove old doc materials [#2889]( https://github.com/sofa-framework/sofa/pull/2889 ). **Architecture**; - [CMake] Clean modules post-NG [#2980]( https://github.com/sofa-framework/sofa/pull/2980 ); - [CMake] Replace references of SofaNG codename to SOFA [#3102]( https://github.com/sofa-framework/sofa/pull/3102 ); - [CMake] Update all deps to SofaFramework modules [#2958]( https://github.com/sofa-framework/sofa/pull/2958 ); - [CMake] Use standard macros + f,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:118635,queue,queue,118635,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['queue'],['queue']
Performance,transform in SphereLoader to match other loaders API [#1495]( https://github.com/sofa-framework/sofa/pull/1495 ); - [SofaGeneralLoader] allow ReadState at init [#1654]( https://github.com/sofa-framework/sofa/pull/1654 ); - [SofaHaptics] Add multithread test on LCPForceFeedback component [#1581]( https://github.com/sofa-framework/sofa/pull/1581 ); - [SofaHaptics] Add simple tests on LCPForceFeedback component [#1576]( https://github.com/sofa-framework/sofa/pull/1576 ); - [SofaImplicitField] Add new ImplicitFields and getHessian to ScalarField [#1510]( https://github.com/sofa-framework/sofa/pull/1510 ); - **[SofaKernel]** ADD: add polynomial springs force fields [#1342]( https://github.com/sofa-framework/sofa/pull/1342 ); - **[SofaKernel]** Add DataLink object & PathResolver. [#1485]( https://github.com/sofa-framework/sofa/pull/1485 ); - **[SofaKernel]** Add setLinkedBase method in BaseLink [#1436]( https://github.com/sofa-framework/sofa/pull/1436 ); - **[SofaKernel]** Add whole program optimization (aka link-time optimization) for msvc [#1468]( https://github.com/sofa-framework/sofa/pull/1468 ); - **[SofaKernel]** Exposing Data in ContactListener. [#1678]( https://github.com/sofa-framework/sofa/pull/1678 ); - **[SofaKernel]** Filerepository gettemppath [#1383]( https://github.com/sofa-framework/sofa/pull/1383 ); - **[SofaKernel]** Set read-only all data defined by the file loaded [#1660]( https://github.com/sofa-framework/sofa/pull/1660 ); - [SofaQtGui] Restore GraphWidget for Momentum and Energy using QtCharts instead of Qwt [#1508]( https://github.com/sofa-framework/sofa/pull/1508 ). **Plugins / Projects**; - [Compliant] Add WinchMultiMapping and ContactMultiMapping [#1557]( https://github.com/sofa-framework/sofa/pull/1557 ). ### Bug Fixes; **Architecture**; - [CMake] FIX non-existent target with sofa_add_plugin [#1584]( https://github.com/sofa-framework/sofa/pull/1584 ); - [CMake] Fix Cmake configure step with SOFA_WITH_DEPRECATED_COMPONENTS [#1452]( https://github,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:218633,optimiz,optimization,218633,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['optimiz'],['optimization']
Performance,ull/2356 ); - [SofaHelper] Add a method getTrace() to BackTrace class. [#2341]( https://github.com/sofa-framework/sofa/pull/2341 ); - [SofaHelper] Factory key type can be other than std::string [#2259]( https://github.com/sofa-framework/sofa/pull/2259 ); - [SofaMiscFEM_test] Add class to test and compare TriangleFEM and TriangularFEMForceField [#2249]( https://github.com/sofa-framework/sofa/pull/2249 ); - [SofaMiscForceField_test] Add TopologicalChanges unit tests for MeshMatrixMass [#2215]( https://github.com/sofa-framework/sofa/pull/2215 ); - [SofaMiscTopology] Add a component TopologyBoundingTrasher to remove mesh going outside from scene bounding box [#2288]( https://github.com/sofa-framework/sofa/pull/2288 ); - [SofaSimpleFem] Add callback on VonMises in TetrahedronFEMForceField [#2407]( https://github.com/sofa-framework/sofa/pull/2407 ); - [SofaSimpleFem] Hexa FEM optimization when assembling by bloc [#2240]( https://github.com/sofa-framework/sofa/pull/2240 ); - [SofaSimpleFem] Simplify bloc-based optimization [#2281]( https://github.com/sofa-framework/sofa/pull/2281 ); - [SofaSimulationCore] Clearer message when a linear solver is missing [#2221]( https://github.com/sofa-framework/sofa/pull/2221 ); - [SofaSparseSolver] Fix msg readibility in SparseLDL [#2294]( https://github.com/sofa-framework/sofa/pull/2294 ); - [SofaSparseSolver] Introduce FillReducingOrdering [#2501]( https://github.com/sofa-framework/sofa/pull/2501 ). **Plugins / Projects**; - [image] Restore ability to select a subset of instanciations [#2340]( https://github.com/sofa-framework/sofa/pull/2340 ). **Examples / Scenes**; - [examples] Add a new example how to create heterogeneous tet FEM [#2289]( https://github.com/sofa-framework/sofa/pull/2289 ); - [examples] Speedup the caduceus [#2471]( https://github.com/sofa-framework/sofa/pull/2471 ); - [Scenes] Update TriangleSurfaceCutting scene to use a bigger mesh with texture [#2381]( https://github.com/sofa-framework/sofa/pull/2381 ). **Scripts /,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:143346,optimiz,optimization,143346,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimization']
Performance,ultiMatrixAccessor.cpp; ${SRC_ROOT}/behavior/ForceField.cpp; ${SRC_ROOT}/behavior/LinearSolver.cpp; ${SRC_ROOT}/behavior/LinearSolverAccessor.cpp; ${SRC_ROOT}/behavior/Mass.cpp; ${SRC_ROOT}/behavior/MechanicalMatrix.cpp; ${SRC_ROOT}/behavior/MechanicalState.cpp; ${SRC_ROOT}/behavior/MixedInteractionConstraint.cpp; ${SRC_ROOT}/behavior/MixedInteractionForceField.cpp; ${SRC_ROOT}/behavior/MultiMatrixAccessor.cpp; ${SRC_ROOT}/behavior/OdeSolver.cpp; ${SRC_ROOT}/behavior/PairInteractionConstraint.cpp; ${SRC_ROOT}/behavior/PairInteractionForceField.cpp; ${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.cpp; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.cpp; ${SRC_ROOT}/behavior/SingleMatrixAccessor.cpp; ${SRC_ROOT}/behavior/fwd.cpp; ${SRC_ROOT}/collision/BroadPhaseDetection.cpp; ${SRC_ROOT}/collision/Contact.cpp; ${SRC_ROOT}/collision/Intersection.cpp; ${SRC_ROOT}/collision/NarrowPhaseDetection.cpp; ${SRC_ROOT}/collision/Pipeline.cpp; ${SRC_ROOT}/loader/BaseLoader.cpp; ${SRC_ROOT}/loader/MeshLoader.cpp; ${SRC_ROOT}/loader/SceneLoader.cpp; ${SRC_ROOT}/loader/VoxelLoader.cpp; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.cpp; ${SRC_ROOT}/objectmodel/AbstractDataLink.cpp; ${SRC_ROOT}/objectmodel/AspectPool.cpp; ${SRC_ROOT}/objectmodel/Base.cpp; ${SRC_ROOT}/objectmodel/BaseClass.cpp; ${SRC_ROOT}/objectmodel/BaseContext.cpp; ${SRC_ROOT}/objectmodel/BaseData.cpp; ${SRC_ROOT}/objectmodel/BaseLink.cpp; ${SRC_ROOT}/objectmodel/BaseNode.cpp; ${SRC_ROOT}/objectmodel/BaseObject.cpp; ${SRC_ROOT}/objectmodel/BaseObjectDescription.cpp; ${SRC_ROOT}/objectmodel/ClassInfo.cpp; ${SRC_ROOT}/objectmodel/ComponentState.cpp; ${SRC_ROOT}/objectmodel/ConfigurationSetting.cpp; ${SRC_ROOT}/objectmodel/Context.cpp; ${SRC_ROOT}/objectmodel/ContextObject.cpp; ${SRC_ROOT}/objectmodel/DDGNode.cpp; ${SRC_ROOT}/objectmodel/Data.cpp; ${SRC_ROOT}/objectmodel/DataCallback.cpp; ${SRC_ROOT}/objectmodel/DataContentValue.cpp; ${SRC_ROOT}/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:10039,load,loader,10039,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['load'],['loader']
Performance,uttonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/perfo,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:1535,perform,performer,1535,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,"with CudaRigid types [#3164](https://github.com/sofa-framework/sofa/pull/3164) ; - [GUI.performer] Add remove elements function for LineCollisionModel [#3239](https://github.com/sofa-framework/sofa/pull/3239) ; - [Regression] Test Eigen solvers scenes for regression [#3326](https://github.com/sofa-framework/sofa/pull/3326); - [Regression] Add HexahedronFEMForceFieldAndMass to regression tests [#3367](https://github.com/sofa-framework/sofa/pull/3367) ; - [SofaCarving] Update and add more tests in SofaCarving_test [#3407](https://github.com/sofa-framework/sofa/pull/3407) ; - [SofaCuda] Add method in CudaVector Accessor and CudaBilateralInteractionConstraint [#3460](https://github.com/sofa-framework/sofa/pull/3460) ; - [SofaPhysicsAPI] Add several methods using output parameters [#3520](https://github.com/sofa-framework/sofa/pull/3520) ; - [SofaPhysicsAPI] Add C bindings to access C++ api [#3539](https://github.com/sofa-framework/sofa/pull/3539) ; - [SofaPhysicsAPI] Add methods and C bindings to load SOFA ini file, plugins and messageHandler [#3540](https://github.com/sofa-framework/sofa/pull/3540) . ### Bug Fixes. **Architecture**; - [Config] Rename ide folder for libraries [#3214](https://github.com/sofa-framework/sofa/pull/3214) ; - [CMake] FIX parent modules library consistency [#3225](https://github.com/sofa-framework/sofa/pull/3225) ; - [CMake] FIX out-of-tree SofaGui and runSofa locations [#3229](https://github.com/sofa-framework/sofa/pull/3229); - [Sofa.Type] Fix compile-time Mat and Vec [#3281](https://github.com/sofa-framework/sofa/pull/3281) ; - [Simulation.Core] Fix import of required plugins [#3322](https://github.com/sofa-framework/sofa/pull/3322) ; - [Topology] Fix internal infinite update loop in TopologySubsetData remove process [#3330](https://github.com/sofa-framework/sofa/pull/3330) ; - [Topology] Update getLastElementIndex in TopologySubsetIndices [#3331](https://github.com/sofa-framework/sofa/pull/3331) ; - [Core.Collision] Fix memory leak in Narr",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:76811,load,load,76811,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['load']
Performance,x [#953]( https://github.com/sofa-framework/sofa/pull/953 ); - [SofaLoader] Fix positions when handleSeams is activated in MeshObjLoader [#923]( https://github.com/sofa-framework/sofa/pull/923 ); - [SofaMeshCollision] Fix TriangleModel to handle topology changes [#903]( https://github.com/sofa-framework/sofa/pull/903 ); - **[SofaSimulationCore]** Remove unjustified Assert in getSimulation() [#1082]( https://github.com/sofa-framework/sofa/pull/1082 ); - **[SofaSimulationCore]** FIX CollisionVisitor::processCollisionPipeline [#962]( https://github.com/sofa-framework/sofa/pull/962 ); - [SofaTests] Fix small bugs in the Multi2Mapping_test [#1078]( https://github.com/sofa-framework/sofa/pull/1078 ). **Plugins / Projects**; - [CImgPlugin] FIX: messed up package prefix in CImg [#921]( https://github.com/sofa-framework/sofa/pull/921 ); - [Geomagic] FIX compilation error in Geomagic plugin with removal of SOFA_FLOAT/DOUBLE [#898]( https://github.com/sofa-framework/sofa/pull/898 ); - [image] Fix image_gui plugin loading [#1015]( https://github.com/sofa-framework/sofa/pull/1015 ); - [image] Message API is needed even if no python [#1068]( https://github.com/sofa-framework/sofa/pull/1068 ); - [runSofa] FIX the opening of ModifyObject view. [#1010]( https://github.com/sofa-framework/sofa/pull/1010 ); - [runSofa] Fix runSofa -a option with a gui. [#1058]( https://github.com/sofa-framework/sofa/pull/1058 ); - [runSofa] User experience fixes in the ModifyData view. [#1011]( https://github.com/sofa-framework/sofa/pull/1011 ); - [Sensable] Fix the compilation of the Sensable plugin [#1019]( https://github.com/sofa-framework/sofa/pull/1019 ); - [SofaCUDA] Compilation error fix (CudaStandardTetrahedralFEMForceField.cu) [#991]( https://github.com/sofa-framework/sofa/pull/991 ); - [SofaCUDA] Fix several Cuda example scenes [#1000]( https://github.com/sofa-framework/sofa/pull/1000 ); - [SofaCUDA] Fix windows compilation. [#966]( https://github.com/sofa-framework/sofa/pull/966 ); - [SofaPyt,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:269351,load,loading,269351,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loading']
Performance,xamples / Scenes**. **Scripts / Tools**. ### Improvements. **Architecture**; - [CMake] CLEAN and reenable old macro for git infos [#2309]( https://github.com/sofa-framework/sofa/pull/2309 ); - [GitHub] Create bug-report issue template [#2365]( https://github.com/sofa-framework/sofa/pull/2365 ); - [SofaMacros] Improve sofa_install_git_infos [#2373]( https://github.com/sofa-framework/sofa/pull/2373 ); - [SofaScenes] Introduce option to add scenes as a project of the build [#2327]( https://github.com/sofa-framework/sofa/pull/2327 ). **Modules**; - [All] Add warnings if components are missing to solve a specific response [#2523]( https://github.com/sofa-framework/sofa/pull/2523 ); - [SofaHelper] Handle recent MSH format in MeshGmshLoader [#2155]( https://github.com/sofa-framework/sofa/pull/2155 ); - [Sofa.Geometry][Sofa.Topology] Add some functions + create unittests [#2434]( https://github.com/sofa-framework/sofa/pull/2434 ); - [Sofa.Helper] PluginManager: Add optional way to check if a plugin is init at the load stage [#2425]( https://github.com/sofa-framework/sofa/pull/2425 ); - [Sofa.LinearAlgebra] Introduce fast sparse matrix product and use it in MechanicalMatrixMapper [#2394]( https://github.com/sofa-framework/sofa/pull/2394 ); - [SofaBaseLinearSolver] Introduce GlobalSystemMatrixExporter [#2303]( https://github.com/sofa-framework/sofa/pull/2303 ); - [SofaBaseTopology] Add method to register callbacks directly using the topologyData [#2375]( https://github.com/sofa-framework/sofa/pull/2375 ); - [SofaBaseTopology] Ensure to add a topology EndingEvent before propagating to all topologyData [#2376]( https://github.com/sofa-framework/sofa/pull/2376 ); - [SofaBaseVisual] Fix VisualModelImpl to use topologyData and callback to handle topological changes [#2300]( https://github.com/sofa-framework/sofa/pull/2300 ); - [SofaCore] Add const version of getMSState to Mass [#2293]( https://github.com/sofa-framework/sofa/pull/2293 ); - [SofaCore] Clearer message when template pa,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:139875,load,load,139875,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['load']
Performance,"y the Free Software; Foundation. 10. If you wish to incorporate parts of the Program into other free; programs whose distribution conditions are different, write to the author; to ask for permission. For software which is copyrighted by the Free; Software Foundation, write to the Free Software Foundation; we sometimes; make exceptions for this. Our decision will be guided by the two goals; of preserving the free status of all derivatives of our free software and; of promoting the sharing and reuse of software generally. 			 NO WARRANTY. 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY; FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN; OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES; PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED; OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF; MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS; TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE; PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,; REPAIR OR CORRECTION. 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING; WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR; REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,; INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING; OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED; TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY; YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER; PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE; POSSIBILITY OF SUCH DAMAGES. 		 END OF TERMS AND CONDITIONS. 	 How to Apply These Terms to Your New Programs. If you develop a new program, and you want it to be of the greatest; possible use to the public, the best way to achieve this is to make it; free sof",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:15233,PERFORM,PERFORMANCE,15233,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['PERFORM'],['PERFORMANCE']
Safety," Class names are in UpperCamelCase; - [N2] Function names are in lowerCamelCase(); - [N3] Namespaces names are in lowercase; - [N4] Variables names are in lowerCamelCase and must express their use more than their type. **Exceptions**: mathematical objects like `Matrix M`, local iterators variables like `i`, `j`, `k` and usual symbols like `x` for positions or `v` for velocities.; - [N5] Data member variables names must begin with `d_`; - [N6] Link member variables names (e.g. SingleLink) must begin with `l_`; - [N7] Other member variables names must begin with `m_ `(exception: this is not mandatory for PODs as well as public attributes); - [N8] Names for booleans variables must answer a question: `m_isRed`, `m_hasName`; - [N9] C++ files must must have the extension .h, .cpp, or .inl; - [N10] Files that define a class should have the same name as the class and should contain only one class.; - [N11] Each library name should be prefixed with `Sofa`. ### Formatting; - Special characters like TAB and page break must be avoided.; - Indentation must use **4 spaces** everywhere (C++ and Python), but there must be no indentation for namespaces; - Braces use the **Allman style**: the opening brace associated with a control statement is on the next line, indented to the same level as the control statement, and statements within the braces are indented to the next level. ```cpp; while (x == y); {; something();; somethingElse();; }; finalThing();; ```. - A space character should be used in the following situations:; - After C++ reserved words: `if (true)`; - Around binary operators: `a + b`; - After commas: `doSomething(a, b, c)`; - After semicolons in for statements: `for (unsigned int i = 0; i < container.size(); i++)`; ```cpp; for (unsigned int i = 0; i < container.size(); ++i ); {; if ((a + b) > c); {; doSomething(a, b, c);; }; }; ```. - Template declarations are split on two lines; ; ```cpp; template<class T>; static void dynamicCast(T*& ptr, Base* b);; ```. ### Commenting",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:1637,avoid,avoided,1637,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,1,['avoid'],['avoided']
Safety, List all files; set(COLLISIONOBBCAPSULE_SRC_DIR src/CollisionOBBCapsule); set(HEADER_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/config.h.in; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/Intersector.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geome,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:1095,detect,detection,1095,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety," Performs: dest[i][j] += src[offset + i][j] 0<= i < src_entries 0<= j < 3 (for 3D objects) 0 <= j < 2 (for 2D objects); /// @param offset the offset in the BaseVector where the scalar values will be used. It will be updated to the first scalar value after the ones used by this operation when this method returns; virtual void addFromBaseVectorSameSize(core::VecId dest, const defaulttype::BaseVector* src, unsigned int &offset);; }; ``` ; More info about Doxygen here: https://www.stack.nl/~dimitri/doxygen/manual/index.html . ### Good practices; - [G1] You should try to use as few `#include` directive as possible.; - [G2] You should limit as much as possible the amount of code in included files (*.h, *.inl).; - [G3] All definitions should reside in source files. The header files should declare an interface only.; - [G4] Variables should be initialized when they are declared.; - [G5] You should use `const` profusely.; - [G6] You should use `assert` profusely.; - [G7] You must avoid the `using` directive in header files (.h and .inl): ~~`using namespace foo;`~~; - [G8] You should declare automatic variables only when you need them (not before).; - [G9] You must always initialize pointers, either to the address of something, or to `nullptr`; - [G10] You may use the type specifier `auto` (since C++11) when:; - you are in a for loop; - you deal with iterators; - you deal with long typenames AND or when the variable type is obvious. ## SOFA specific rules; - Tricky code should not be commented but rewritten! In general, the use of comments should be minimized by making the code self-documenting by appropriate name choices and an explicit logical structure.; - The use of magic numbers in the code should be avoided. Numbers other than 0 and 1 should be declared as named constants instead.; - The definition of ε-definition of limit ('epsilon', an arbitrarily small positive quantity) should not be code specific but rather use the class template [`std::numeric_limits`](https://en.",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:4886,avoid,avoid,4886,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,1,['avoid'],['avoid']
Safety," WITH ANY OTHER PROGRAMS),; EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF; SUCH DAMAGES. 17. Interpretation of Sections 15 and 16. If the disclaimer of warranty and limitation of liability provided; above cannot be given local legal effect according to their terms,; reviewing courts shall apply local law that most closely approximates; an absolute waiver of all civil liability in connection with the; Program, unless a warranty or assumption of liability accompanies a; copy of the Program in return for a fee. END OF TERMS AND CONDITIONS. How to Apply These Terms to Your New Programs. If you develop a new program, and you want it to be of the greatest; possible use to the public, the best way to achieve this is to make it; free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest; to attach them to the start of each source file to most effectively; state the exclusion of warranty; and each file should have at least; the ""copyright"" line and a pointer to where the full notice is found. <one line to give the program's name and a brief idea of what it does.>; Copyright (C) <year> <name of author>. This program is free software: you can redistribute it and/or modify; it under the terms of the GNU General Public License as published by; the Free Software Foundation, either version 3 of the License, or; (at your option) any later version. This program is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU General Public License for more details. You should have received a copy of the GNU General Public License; along with this program. If not, see <http://www.gnu.org/licenses/>. Also add information on how to contact you by electronic and paper mail. If the program does terminal interaction, make it output a short; notice like this when ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:51358,safe,safest,51358,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['safe'],['safest']
Safety," add of SceneDataIO to save and load the current state of a simulation; - add of the method getDataFields; - adding automatically tested examples; - add tags to MeshAttributes; - add a helper PythonScriptFunction_call and PythonScriptFunction_callNoResult to call a python controller function from c++ code; - PythonScriptHelper -> PythonScriptControllerHelper: PythonScriptHelper: add convertion for float and std::string; - Add the timingEnabled attribute to the PythonScriptController to control if the script is gather timing statistics; - adding python module to load .obj files; - adding BaseContext_getObject_noWarning that returns None w/o warning if the object is not found; - improving a bit the conversion from a cpp Base* to a PyObject* when the cpp Base* type is (even partially) known.; - adding a test to show how to bind a component outside of SofaPython; - Factory: conversion shortcuts for known types; - PythonScriptController: if the filename is let empty, the controller is supposed to be in an already loaded file, to avoid to read the same file several times; - adding ""loadPlugin"" function to the Sofa python module; - Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name.; - object and type names are now both optional when calling BaseContext_getObjects(); - search direction can now optionally be passed to BaseContext_getObjects(); - at object creation failure, print additional error messages from BaseObjectDescription; - adding special Data types in the PythonFactory, so more specific cases can be added outside of the plugin SofaPython.; - adding Node::addObject_noWarning not to print a warning when adding an object to an already initialized node; - add of a method which compute quaternion from a line define by a director vector; - add of few new features to save and load the current state of simulation. - [Flexible]; - adding FlexibleCorotationalMeshFEMForceField (meta-forcefield). Not optimized but wor",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:349714,avoid,avoid,349714,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['avoid'],['avoid']
Safety," collision object is mapped to the simulated deformable model using a Mapping, this time a MechanicalMapping: BarycentricMapping. You may wonder what the difference is between this mapping and the one used for the visual model, as we are using the same component! What makes a mapping visual or mechanical?; This is determined by the template used to create the mapping:; Find the BarycentricMapping component using the Filter. From the dropdown menu, select Vec3d, Vec3d.; This mean it transforms a state expressed by Vec3d type into Vec3d. Remember, collision models are only expressed in Vec3d type, so the mapped state must be of Vec3d types.; Open the BarycentricMapping properties and go to the Properties 2/2 tab. Set the Input object to map to ""@.."" and the Output object to map to ""@.""; This corresponds to mapping from the MechanicalObject from one node above to the MechanicalObject of the current node.; Finally, we will remove our old TSphereModel, and replace it with one in the CollisionNode; Delete the current TSphereModel. Add a new TSphereModel to the CollisionNode, and change the Default contact stiffness property to ""1000"".; Results; Run in SOFA. Change to DT to ""0.005"". Animate.; You can see height spheres, corresponding to the height corners of the cube chosen to represent our collision mode. Of course, using four height spheres to do the collision detection is much faster than 171 as in the previous scene. But the behavior is also very different.; Apply a force on one of the spheres by holding down the Shift key, and clicking and dragging a sphere with the mouse.; You will be able to deform the object. This is due to the MechanicalMapping.; We display some debug information about the mechanical mapping using blue lines. Each point of the collision model depends on several points of the simulated object. If a force is applied to one of the collision model's points, the force will be propagated to all the points that depend on it.; Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/6_FullObject.html:2826,detect,detection,2826,examples/Tutorials/StepByStep/FullObject/6_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/6_FullObject.html,1,['detect'],['detection']
Safety," some collision models.; Key points; To use the Collision Pipeline described here, you need to use Collision Models. They describe geometrical primitives which will be involved in the collision detection. To demonstrate the flexibility you can have, we will use at the same time some spheres, triangles, lines and points.; There will be as many spheres as particules contained in the Topology.; Add a new GNode to the root node, and rename it ""Obstacle"".; Add a MeshTopology component to the Obstacle node. Set the Filename of the mesh to mySofaDirectory/Sofa/share/mesh/cube.obj.; Add a MechanicalObject to the Obstacle node. Change to the Transformation tab, and change the Scale of the DOFs in 3 dimensions from (1 1 1) to ""(40 40 0.1)"".; Add a TTriangleModel to the Obstacle node. In the Property 2/3 tab, change the Default contact stiffness to 500. Repeat both steps with a LineModel and a PointModel; Add a OglModel component to the Obstacle node. In the Property 2/3 tab, set the Path to the model to /Sofa/share/mesh/cube.obj. In the Transformation tab, change the Initial Translation of the object to ""(0 0 -10)"" and the Initial Scale of the object to ""(40 40 0.1)"".; Results; Delete the PlaneForceField. Run in SOFA and animate.; At this point, our deformable object will interact with the floor using spheres placed at each particle. The collision detection does not take correctly into account what we visually see, but the dragon does not pass through the floor.; Related; You have several way to modify the collision detection and response.; Modify the proximity distance to know when two primitives are colliding: open MinProximityIntersection and edit ""alarmDistance"" and ""contactDistance"". ; Modify the stiffness of the response: the response is computed using the product of the contactStiffness of the two collision models involved. Open SphereModel and edit this parameter. You can do the same process with the TTriangleModel, LineModel, PointModel.; Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/5_FullObject.html:1537,detect,detection,1537,examples/Tutorials/StepByStep/FullObject/5_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/5_FullObject.html,2,['detect'],['detection']
Safety, the lumping data in MMMass [#4128](https://github.com/sofa-framework/sofa/pull/4128); - [Constraint.Lagrangian.Solver] GenericConstraintSolver: use given re-ordered list for unbuilt GS [#4132](https://github.com/sofa-framework/sofa/pull/4132); - [Core] Store default value in a Data [#4133](https://github.com/sofa-framework/sofa/pull/4133); - [all] Use SimulationInitDoneEvent instead of AnimateBeginEvent [#4160](https://github.com/sofa-framework/sofa/pull/4160); - [GitHub] filter action if not on sofa-framework repository [#4171](https://github.com/sofa-framework/sofa/pull/4171); - [LinearSystem] Assemble non-mapped and mapped matrices in parallel [#4172](https://github.com/sofa-framework/sofa/pull/4172); - [Config] Integrate Tracy profiler [#4182](https://github.com/sofa-framework/sofa/pull/4182); - [Config] CMake: Dont check for IPO at every configure step [#4191](https://github.com/sofa-framework/sofa/pull/4191); - [Constraint.Lagrangian.Solver] GenericConstraintSolver: avoid repeated allocation in loops [#4195](https://github.com/sofa-framework/sofa/pull/4195); - [LinearSolver.Direct] Better distribution of tasks among threads [#4220](https://github.com/sofa-framework/sofa/pull/4220); - [all] Add the folder sofa-launcher to the resources component [#4245](https://github.com/sofa-framework/sofa/pull/4245); - [MatrixAccumulator] adds 6x6 matrix handling [#4247](https://github.com/sofa-framework/sofa/pull/4247); - [LinearAlgebra] Speedup accumulation on BTDMatrix [#4248](https://github.com/sofa-framework/sofa/pull/4248); - [LinearAlgebra] Support 6x6 matrices accumulation in BaseMatrix [#4253](https://github.com/sofa-framework/sofa/pull/4253); - [example] Speedup TorusFall with parallel inverse product [#4256](https://github.com/sofa-framework/sofa/pull/4256); - [Helper] ADD option to cmake for advanced timer [#4259](https://github.com/sofa-framework/sofa/pull/4259); - [LinearSystem] Speedup computation of Jacobian matrices [#4317](https://github.com/sofa-framework/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:31782,avoid,avoid,31782,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['avoid'],['avoid']
Safety, using cron condition [#4468](https://github.com/sofa-framework/sofa/pull/4468); - [GitHub] Fix PR messages not properly sent [#4475](https://github.com/sofa-framework/sofa/pull/4475); - [GitHub] Use finally pull_request_target [#4476](https://github.com/sofa-framework/sofa/pull/4476); - [SofaCUDA] Fix spatial grid compilation with double [#4478](https://github.com/sofa-framework/sofa/pull/4478); - [image] Fix compilation on Windows [#4484](https://github.com/sofa-framework/sofa/pull/4484); - [Testing] Fix installation of gtest headers [#4489](https://github.com/sofa-framework/sofa/pull/4489); - [Helper] PluginManager Fix test in debug [#4491](https://github.com/sofa-framework/sofa/pull/4491); - [Topology] Fix method isQuadDeulaunayOriented and its use in splitAlongPath [#4494](https://github.com/sofa-framework/sofa/pull/4494); - [GitHub] Fix review request Discord msg [#4502](https://github.com/sofa-framework/sofa/pull/4502); - [Simulation.Core] RequiredPlugin: Avoid calling loadPlugin() twice on start-up [#4509](https://github.com/sofa-framework/sofa/pull/4509); - [Share] Remove DefaultCollisionGroupManager in the default scenes [#4521](https://github.com/sofa-framework/sofa/pull/4521); - [all] Fix some warnings [#4529](https://github.com/sofa-framework/sofa/pull/4529); - [GitHub] Fix GH Discussions Announcements for Discord [#4530](https://github.com/sofa-framework/sofa/pull/4530); - [Simulation.Core] Make TSAN pass for caduceus [#4535](https://github.com/sofa-framework/sofa/pull/4535); - [Config] Add cxxopts cmake find module [#4538](https://github.com/sofa-framework/sofa/pull/4538); - [Sofa.Testing] Add SimpleApi in Config.cmake.in [#4542](https://github.com/sofa-framework/sofa/pull/4542); - [script] Stale action: remove temporary layer and activate closing [#4560](https://github.com/sofa-framework/sofa/pull/4560); - [README] Update link to Discord [#4562](https://github.com/sofa-framework/sofa/pull/4562); - [plugins] Add SimpleApi as a dependency in SofaCarvin,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:7928,Avoid,Avoid,7928,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Avoid'],['Avoid']
Safety," versions be marked as; changed, so that their problems will not be attributed erroneously to; authors of previous versions. Some devices are designed to deny users access to install or run; modified versions of the software inside them, although the manufacturer; can do so. This is fundamentally incompatible with the aim of; protecting users' freedom to change the software. The systematic; pattern of such abuse occurs in the area of products for individuals to; use, which is precisely where it is most unacceptable. Therefore, we; have designed this version of the GPL to prohibit the practice for those; products. If such problems arise substantially in other domains, we; stand ready to extend this provision to those domains in future versions; of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents.; States should not allow patents to restrict development and use of; software on general-purpose computers, but in those that do, we wish to; avoid the special danger that patents applied to a free program could; make it effectively proprietary. To prevent this, the GPL assures that; patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and; modification follow. TERMS AND CONDITIONS. 0. Definitions. ""This License"" refers to version 3 of the GNU General Public License. ""Copyright"" also means copyright-like laws that apply to other kinds of; works, such as semiconductor masks. ""The Program"" refers to any copyrightable work licensed under this; License. Each licensee is addressed as ""you"". ""Licensees"" and; ""recipients"" may be individuals or organizations. To ""modify"" a work means to copy from or adapt all or part of the work; in a fashion requiring copyright permission, other than the making of an; exact copy. The resulting work is called a ""modified version"" of the; earlier work or a work ""based on"" the earlier work. A ""covered work"" means either t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:22170,avoid,avoid,22170,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['avoid'],['avoid']
Safety,${SRC_ROOT}/behavior/MultiMatrixAccessor.h; ${SRC_ROOT}/behavior/MultiVec.h; ${SRC_ROOT}/behavior/OdeSolver.h; ${SRC_ROOT}/behavior/PairInteractionConstraint.h; ${SRC_ROOT}/behavior/PairInteractionConstraint.inl; ${SRC_ROOT}/behavior/PairInteractionForceField.h; ${SRC_ROOT}/behavior/PairInteractionForceField.inl; ${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.h; ${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.inl; ${SRC_ROOT}/behavior/PairStateAccessor.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.inl; ${SRC_ROOT}/behavior/RotationFinder.h; ${SRC_ROOT}/behavior/StateAccessor.h; ${SRC_ROOT}/behavior/SingleMatrixAccessor.h; ${SRC_ROOT}/behavior/SingleStateAccessor.h; ${SRC_ROOT}/behavior/fwd.h; ${SRC_ROOT}/collision/BroadPhaseDetection.h; ${SRC_ROOT}/collision/CollisionAlgorithm.h; ${SRC_ROOT}/collision/CollisionGroupManager.h; ${SRC_ROOT}/collision/Contact.h; ${SRC_ROOT}/collision/ContactManager.h; ${SRC_ROOT}/collision/Detection.h; ${SRC_ROOT}/collision/DetectionOutput.h; ${SRC_ROOT}/collision/Intersection.h; ${SRC_ROOT}/collision/Intersection.inl; ${SRC_ROOT}/collision/IntersectorFactory.h; ${SRC_ROOT}/collision/NarrowPhaseDetection.h; ${SRC_ROOT}/collision/Pipeline.h; ${SRC_ROOT}/loader/BaseLoader.h; ${SRC_ROOT}/loader/ImageLoader.h; ${SRC_ROOT}/loader/MeshLoader.h; ${SRC_ROOT}/loader/SceneLoader.h; ${SRC_ROOT}/loader/VoxelLoader.h; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.h; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.h; ${SRC_ROOT}/objectmodel/AbstractDataLink.h; ${SRC_ROOT}/objectmodel/AspectPool.h; ${SRC_ROOT}/objectmodel/Base.h; ${SRC_ROOT}/objectmodel/BaseClass.h; ${SRC_ROOT}/objectmodel/BaseClassNameHelper.h; ${SRC_ROOT}/objectmodel/BaseContext.h; ${SRC_ROOT}/objectmodel/BaseData.h; ${SRC_ROOT}/objectmodel/BaseLink.h; ${SRC_ROOT}/objectmodel/BaseNode.h; ${SRC_ROOT}/objectmodel/BaseObject.h; ${SRC_ROOT}/objectmodel/BaseObjectDescription.h; ${SRC_ROOT}/objectmodel/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:4223,Detect,Detection,4223,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['Detect'],['Detection']
Safety,). ### Breaking. - [Type] RGBAColor: remove inheritance from type::fixed_array and use std::array to store its components [#4263](https://github.com/sofa-framework/sofa/pull/4263); - [All] ColorMap uses RGBAColor [#4270](https://github.com/sofa-framework/sofa/pull/4270); - [Type] Refactor Vec [#4296](https://github.com/sofa-framework/sofa/pull/4296); - [SolidMechanics.Springs] Cleaning of QuadularBendingSprings [#4304](https://github.com/sofa-framework/sofa/pull/4304); - [Topology.Container.Dynamic] GeometryAlgorithms: support generic State [#4362](https://github.com/sofa-framework/sofa/pull/4362); - [LinearSolver.Direct] Introduce other ordering methods in SparseLDL through Eigen [#4370](https://github.com/sofa-framework/sofa/pull/4370); - [Constraint.Lagrangian.Solver] Fix assert in GenericConstraintSolver [#4389](https://github.com/sofa-framework/sofa/pull/4389); - [Type] Refactor Mat [#4396](https://github.com/sofa-framework/sofa/pull/4396); - [LinearSystem] Detect changes in sparsity pattern when using ConstantSparsityPatternSystem [#4428](https://github.com/sofa-framework/sofa/pull/4428); - [Core][LinearSolver] Introduction of ordering method components [#4477](https://github.com/sofa-framework/sofa/pull/4477); - [Simulation.Graph] Move SimpleApi into its own library [#4495](https://github.com/sofa-framework/sofa/pull/4495); - [all] Lifecycle for v24.06 (2): remove Compat [#4533](https://github.com/sofa-framework/sofa/pull/4533); - [all] Add PenalityContact vector Data display [#4637](https://github.com/sofa-framework/sofa/pull/4637); - [GUI.Component] Add virtualization for attachment performer [#4638](https://github.com/sofa-framework/sofa/pull/4638); - [GUI.Qt] Some cleaning in qt RealGui [#4641](https://github.com/sofa-framework/sofa/pull/4641); - [FEM.HyperElastic] Convert string Data to OptionsGroup [#4651](https://github.com/sofa-framework/sofa/pull/4651); - [AnimationLoop] Remove duplicated Constraint Visitors [#4715](https://github.com/sofa-framework/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:2081,Detect,Detect,2081,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Detect'],['Detect']
Safety,); set(HEADER_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/config.h.in; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/Intersector.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mappe,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:1166,detect,detection,1166,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,**[SofaBaseMechanics]** Change data name: handleTopologicalChanges in UniformM [#1291]( https://github.com/sofa-framework/sofa/pull/1291 ); - **[SofaCore/Visual]** Add new functions in drawTool (BREAKING) [#1252]( https://github.com/sofa-framework/sofa/pull/1252 ); - [SofaGeneralEngine] Refresh MeshBarycentricMapperEngine [#1404]( https://github.com/sofa-framework/sofa/pull/1404 ); - **[SofaCore]** ADD directory DataFileNames [#1407]( https://github.com/sofa-framework/sofa/pull/1407 ); - **[SofaKernel]** Refactor DDGNode [#1372]( https://github.com/sofa-framework/sofa/pull/1372 ); - **[SofaKernel]** Totally remove the macro CHECK_TOPOLOGY from BaseMeshTopology [#1399]( https://github.com/sofa-framework/sofa/pull/1399 ); - **[SofaKernel]** Update EulerExplicitSolver [#1260]( https://github.com/sofa-framework/sofa/pull/1260 ); - **[SofaKernel]** implement activer's code at CollisionModel. [#1259]( https://github.com/sofa-framework/sofa/pull/1259 ). **Plugins**; - [SofaCUDA] Arch auto-detection for nvcc [#1336]( https://github.com/sofa-framework/sofa/pull/1336 ). ### Improvements. **Architecture**; - [CMake] Create an IDE folder for all relocatable_install targets [#1405]( https://github.com/sofa-framework/sofa/pull/1405 ). **Modules**; - **[SofaBaseVisual]** Add camera gizmo in base camera [#1253]( https://github.com/sofa-framework/sofa/pull/1253 ); - **[SofaCore]** Remove warning in ExecParam [#1325]( https://github.com/sofa-framework/sofa/pull/1325 ); - **[SofaCore]** ADD: DataCallback system in Base [#1406]( https://github.com/sofa-framework/sofa/pull/1406 ); - **[SofaDefaultType]** Add a Ray type. [#1251]( https://github.com/sofa-framework/sofa/pull/1251 ); - **[SofaHelper]** Add the obj id to labels when available [#1256]( https://github.com/sofa-framework/sofa/pull/1256 ); - **[SofaHelper]** Add auto-friendly getWriteAccessors/getReadAcessor... [#1254]( https://github.com/sofa-framework/sofa/pull/1254 ); - **[SofaKernel]** Set the default compilation mode to c++,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:231451,detect,detection,231451,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['detect'],['detection']
Safety,". Collision Tutorials. Triangle Based Modelization; Multiple Objects Handling; Advanced Response. Description; 		In these tutorials, we will try to explain the different ways of modeling the collision detection and response in SOFA. First, we will recall what you may have seen in the previous Step by step tutorials about the modelization of the collision model. Then we will explain how the collisions between objects are handled, and the effect on the stability of the different approaches. Finally, we will see advanced features about collision response, with constraint based response allowing us to simulate friction.; . ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Collision/Collision.html:201,detect,detection,201,examples/Tutorials/Collision/Collision.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Collision/Collision.html,1,['detect'],['detection']
Safety,". Collision detection; Description:. 			In this tutorial, we add the collision between the teeth and the instrument.; 		; Key points:. Added a collision pipeline using hierarchical bounding boxes and a proximity detection algorithm ; Added collision model (Triangle, Line, Point) for the teeth; Added collision model (Line, Point) for the instrument; Added a mapping (RigidMapping) to ""connect"" the Mechanical Model and the Collision Model. Note:; The collision model mesh is charged using the objects MeshLoader and Mesh; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_04.html:12,detect,detection,12,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_04.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_04.html,2,['detect'],['detection']
Safety,". Composite Object; Creating a composite object using a; SubsetMultiMapping; Fran�ois Faure, 2013. This page explains how to create a composite object as illustrated in; the following image, in an efficient way. The object is composed of a; deformable beam connected to rigid parts at the two ends. This requires; to attach points to the rigid objects using a RigidMapping, and to; connect these points to the FEM.  . Using AttachConstraint is not an option because it works only for; independent DOFs, and the points mapped to the rigid object are not; independent. The classic way would be to connect the deformable object to the rigid; objects using springs. However, this would require stiff springs which; harm the numerical conditioning of the system, without attaching the; points rigidly. . Replacing the spring with hard constraints using Lagrange multipliers; requires a constraint solver which consumes computation time. The solution we propose avoids these drawbacks. An FE model connected to two; rigid objects. The yellow squares highlight FE nodes embedded in the; rigid objects using a mapping. The white points are independent FE; nodes. Our approach is to distribute the FE vertices in two separate groups:; the mapped vertices at the ends, and the independent vertices in the; central part. This requires separate State components and graph nodes.; Unfortunately, the FEM force fields are internal, therefore they can; not be used to connect vertices of different objects. More generally,; FE models are typically defined as a whole and it is not easy to split; them. To overcome this limitation, we define the whole FE model as a common; child of the independent and the mapped particles, using a; MultiMapping, as illustrated in the next figure. The complete FEM,; including elements and masses, is defined at the bottom, while the; independent DOFs are the independent particles and the frames near the; top. The SubsetMultiMapping simply copies values from and to the two; subse",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/tutorials/compositeObject/doc.html:956,avoid,avoids,956,applications/tutorials/compositeObject/doc.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/tutorials/compositeObject/doc.html,1,['avoid'],['avoids']
Safety,". Constraint resolution; Description:. 			The aim of this tutorial is to add the constraint response in our scene. ; 			When a contact between two objects occurs, a constraint is created to generate a force to avoid the contact at the next time step.; 		; Key points:. In the root node, we add a FreeMotionAnimationLoop solver which gets the constraints from the objects, computes the LCP and propagates the contact correction.; In the instrument node, we add UncoupledConstraintCorrection to compute the constraints of the related object. Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_05.html:210,avoid,avoid,210,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_05.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_05.html,1,['avoid'],['avoid']
Safety,". Creation of a Scene (6/9). Description; We will now replace the PlaneForceField with a true obstacle, modeled with a topology (read from a mesh file), a mechanical object, and some collision models.; Key points; To use the Collision Pipeline described here, you need to use Collision Models. They describe geometrical primitives which will be involved in the collision detection. To demonstrate the flexibility you can have, we will use at the same time some spheres, triangles, lines and points.; There will be as many spheres as particules contained in the Topology.; Add a new GNode to the root node, and rename it ""Obstacle"".; Add a MeshTopology component to the Obstacle node. Set the Filename of the mesh to mySofaDirectory/Sofa/share/mesh/cube.obj.; Add a MechanicalObject to the Obstacle node. Change to the Transformation tab, and change the Scale of the DOFs in 3 dimensions from (1 1 1) to ""(40 40 0.1)"".; Add a TTriangleModel to the Obstacle node. In the Property 2/3 tab, change the Default contact stiffness to 500. Repeat both steps with a LineModel and a PointModel; Add a OglModel component to the Obstacle node. In the Property 2/3 tab, set the Path to the model to /Sofa/share/mesh/cube.obj. In the Transformation tab, change the Initial Translation of the object to ""(0 0 -10)"" and the Initial Scale of the object to ""(40 40 0.1)"".; Results; Delete the PlaneForceField. Run in SOFA and animate.; At this point, our deformable object will interact with the floor using spheres placed at each particle. The collision detection does not take correctly into account what we visually see, but the dragon does not pass through the floor.; Related; You have several way to modify the collision detection and response.; Modify the proximity distance to know when two primitives are colliding: open MinProximityIntersection and edit ""alarmDistance"" and ""contactDistance"". ; Modify the stiffness of the response: the response is computed using the product of the contactStiffness of the tw",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/5_FullObject.html:371,detect,detection,371,examples/Tutorials/StepByStep/FullObject/5_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/5_FullObject.html,1,['detect'],['detection']
Safety,". Creation of a Scene (8/9). Description; In this last step, we will change the collision components pass to the collision detection.; Delete the TSphereModel.; Add a PointModel component to the CollisionNode.; Repeat with a LineModel and a TTriangleModel.; Results; Run in SOFA. Change DT to 0.005. Animate.; Instead of spheres, we model our object using exactly the mesh. This should improve the quality of the response, but with a higher computational cost.; Previous. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/8_FullObject.html:123,detect,detection,123,examples/Tutorials/StepByStep/FullObject/8_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/8_FullObject.html,1,['detect'],['detection']
Safety,". Creation of a Scene (8/9). Description; In this step of the tutorial we will change the collision model from the cube object to the dragon object, so that the collision model is using the same model as the visual one.; ; In the properties of the CollisionNode, change the Filename of the mesh from /Sofa/share/mesh/cube.onj to /Sofa/share/mesh/dragon.obj. In the properties of the CollisionNode's MechanicalObject, under Transformation, change the Scale of the DOFs in 3 dimensions from (6 6 6) to (1 1 1).; Results; Run in SOFA. Change the DT to 0.005. Animate.; You can see that there are many more sphere to handle the collision. Some are redundant, and useless.; This example demonstrated the need to carefully choose the collision model you want to use. A good approach is to have two versions of your model: a fine version used to do the rendering of the scene, and a much coarser one to handle the collisions quickly.; The presence of spheres may create some artifacts during the collision response, but they are very fast to simulate. Disable the display of the collision models and activate the visual models to really see the efficiency of the spheres.; Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/7_FullObject.html:644,redund,redundant,644,examples/Tutorials/StepByStep/FullObject/7_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/7_FullObject.html,1,['redund'],['redundant']
Safety,". Instrument visual model; Description:. 		Added LCP contact resolution. The modifications are:; 		In the root node:; Added a different collision response (FrictionContact); Added local minimal distance contact detection; Added a FreeMotionAnimationLoop which gets the constraints from the objects, computes the LCP and propagates the contact correction; 		In the instrument node:; Added UncoupledConstraintCorrection to compute the constraints of the related object. 		Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_05b.html:211,detect,detection,211,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_05b.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_05b.html,1,['detect'],['detection']
Safety,. Instrument visual model; Description:. 		Using LCP contact detection and resolution:; 		Added a driver for the Omni phantom device ; 		Added a mechanical state controller that gathers data from the phantom and updates the position of a representation of the device in the simulation ; 		Added a computation (LCPForceFeedback) of the haptic forces ; 		Added VectorSpringForceField && JointSpringForceField to link the mouvements of the Omni phantom and the instrument; Redo this tutorial with distance grid collision. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_06b.html:61,detect,detection,61,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_06b.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_06b.html,1,['detect'],['detection']
Safety,". Tutorial Topology Hexa2TetraTopologicalMapping. Description. 	This tutorial shows a very useful mapping available in SOFA. As its name suggests, this mapping enables you to get a tetrahedral topology from a hexadral one.; 	Therefore, this mapping divides each hexahedron into 6 tetrahedra. This can be very useful to get tetrahedra if you are working with a RegularGrid geometry. . 	By using the Hexa2TetraTopologicalMapping, you will collect all the data concerning the tetrahedra in the following components:; 	; TetrahedronSetTopologyContainer,; TetrahedronSetTopologyModifier,; TetrahedronSetTopologyAlgorithms,; TetrahedronSetGeometryAlgorithms. It must be stressed that the default division of each hexahedron is always made in the same way, so that it can lead to mesh orientation.; 	To avoid this bias effect, a swapping method is proposed just by activating a flag ""swapping"" in order to perform the better division. ; And do not forget that topological changes are not handled in this mapping. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyHexa2TetraTopologicalMapping.html:796,avoid,avoid,796,examples/Tutorials/Topologies/TopologyHexa2TetraTopologicalMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyHexa2TetraTopologicalMapping.html,1,['avoid'],['avoid']
Safety,".com/sofa-framework/sofa/pull/1798 ). ### Cleanings; **Architecture**; - [CMake] CLEAN old metapackage usage [#1883]( https://github.com/sofa-framework/sofa/pull/1883 ); - [CMake] CLEAN option SOFA_BUILD_WITH_PCH_ENABLED [#1755]( https://github.com/sofa-framework/sofa/pull/1755 ); - [CMake] CLEAN/FIX deprecated things (MSVC mainly) [#2217]( https://github.com/sofa-framework/sofa/pull/2217 ). **Modules**; - [All] Remove commented code & fix trivial issues [#1693]( https://github.com/sofa-framework/sofa/pull/1693 ); - [All] Remove useless pragma guards in cpp files [#1929]( https://github.com/sofa-framework/sofa/pull/1929 ); - [All] CLEAN tests, use CMake weak dependencies [#1886]( https://github.com/sofa-framework/sofa/pull/1886 ); - [All] Disable Drawtool functions using Vec4f [#2197]( https://github.com/sofa-framework/sofa/pull/2197 ); - [All] Rename SOFA_NO_OPENGL + Relocate Sofa.GL + Improve sofa_add_* macros [#1913]( https://github.com/sofa-framework/sofa/pull/1913 ); - [All] Avoid redundant printLog check [#2102]( https://github.com/sofa-framework/sofa/pull/2102 ); - [All] Depreciate one of the missing use of Aspect in Link and update the code base [#1712]( https://github.com/sofa-framework/sofa/pull/1712 ); - [All] Fix warnings [#2196]( https://github.com/sofa-framework/sofa/pull/2196 ); - [All] Fix warnings [#2097]( https://github.com/sofa-framework/sofa/pull/2097 ); - [All] Refactor Read/Write Accessor. [#1807]( https://github.com/sofa-framework/sofa/pull/1807 ); - [All] Refactor vector & vector_device [#1799]( https://github.com/sofa-framework/sofa/pull/1799 ); - [All] Remove last includes of SofaSimulationTree [#1812]( https://github.com/sofa-framework/sofa/pull/1812 ); - [All] Remove un-needed includes. [#1750]( https://github.com/sofa-framework/sofa/pull/1750 ); - [All] Remove unused includes [#1960]( https://github.com/sofa-framework/sofa/pull/1960 ); - [All] Remove warning: unused variable [#1787]( https://github.com/sofa-framework/sofa/pull/1787 ); - ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:196063,Avoid,Avoid,196063,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Avoid', 'redund']","['Avoid', 'redundant']"
Safety,"/github.com/sofa-framework/sofa/pull/138 ); - fixing issue related to parsing attributes with atof/atoi [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - unify color datafield [#206]( https://github.com/sofa-framework/sofa/pull/206 ); - Fix CMakeLists bug on Sofa.ini and installedSofa.ini creation [#291]( https://github.com/sofa-framework/sofa/pull/291 ); - Fix a lot of failing tests (#271, #279); - Fix compilation with SOFA_FLOATING_POINT_TYPE as float [#262]( https://github.com/sofa-framework/sofa/pull/262 ); - CMake: Fix and clean boost, when using Sofa as an external lib [#421]( https://github.com/sofa-framework/sofa/pull/421 ); - [SofaKernel]; - Fix the Filemonitor_test random failure on MacOs [#143]( https://github.com/sofa-framework/sofa/pull/143 ); - implement a numerical integration for triangle [#249]( https://github.com/sofa-framework/sofa/pull/249 ); - add brace initializer to helper::vector class [#252]( https://github.com/sofa-framework/sofa/pull/252 ); - Activates thread-safetiness on MessageDispatcher. [#257]( https://github.com/sofa-framework/sofa/pull/257 ); - Fix getRelativePath() in DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - FileRepository::getRelativePath() lowering the case on WIN32 is now a deprecated behavior [#264]( https://github.com/sofa-framework/sofa/pull/264 ); - Fix FileRepository should not be optional [#122]( https://github.com/sofa-framework/sofa/pull/122 ); - FileMonitor: fix the recurrent problem with file 'SofaKernel/framework/framework_test/resources/existing.txt' pointed in Issue #146 [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - Fix wrong inline in exported functions [#449]( https://github.com/sofa-framework/sofa/pull/449 ); - [SofaFramework]; - fix the integration scheme for Quaternion [#172]( https://github.com/sofa-framework/sofa/pull/172 ) and fix values with which the quaternion is being compared after creation from euler angles; - [SofaHelper]; - VisualToolGL: fix s",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:332304,safe,safetiness,332304,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['safe'],['safetiness']
Safety,/sofa/pull/3426) ; - [Topology] Add mechanism to check checkTopologyInputTypes [#3428](https://github.com/sofa-framework/sofa/pull/3428) ; - [Topology.Container] Check at init for Container in Modifier [#3434](https://github.com/sofa-framework/sofa/pull/3434) ; - [Simulation] Task scheduler can accept callable [#3482](https://github.com/sofa-framework/sofa/pull/3482) ; - [Simulation] Worker threads are no longer static [#3491](https://github.com/sofa-framework/sofa/pull/3491) ; - [Core] Support getObjects on set containers [#3495](https://github.com/sofa-framework/sofa/pull/3495) ; - [Type] Conversion to scalar for Mat1x1 [#3498](https://github.com/sofa-framework/sofa/pull/3498) ; - [VectorTypeInfo] Change default handling of data buffer [#3505](https://github.com/sofa-framework/sofa/pull/3505) . **Modules**; - [MappedMatrix] MechanicalMatrixMapper: adds option [#3173](https://github.com/sofa-framework/sofa/pull/3173) ; - [Constraint.Lagrangian.Correction] LinearSolverCC: use FullVector API if detected [#3231](https://github.com/sofa-framework/sofa/pull/3231) ; - [Topology_test] Add tests in EdgeSetTopology_test to check topological changes [#3245](https://github.com/sofa-framework/sofa/pull/3245) ; - [SolidMechanics][Spring] Implement applyRemovedEdges for SpringForceField [#3269](https://github.com/sofa-framework/sofa/pull/3269) ; - [StateContainer] Optimize vector operations [#3284](https://github.com/sofa-framework/sofa/pull/3284) ; - [Mapping.Linear] Add support for 2d in SubsetMultiMapping [#3321](https://github.com/sofa-framework/sofa/pull/3321) ; - [Constraint.Lagrangian] Update BilateralInteractionConstraint to support topological changes [#3329](https://github.com/sofa-framework/sofa/pull/3329) ; - [all] Unit tests for getTemplateName in some components [#3380](https://github.com/sofa-framework/sofa/pull/3380) ; - [all] Implement getModuleComponentList for most modules [#3386](https://github.com/sofa-framework/sofa/pull/3386) ; - [Constraint.Lagrangian.Sol,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:74063,detect,detected,74063,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['detect'],['detected']
Safety,"2246 ); - [CGALPlugin] Fix CGAL compilation with CImgData include [#2345]( https://github.com/sofa-framework/sofa/pull/2345 ); - [CImgPlugin] Add Threads dependency in Cmake [#2302]( https://github.com/sofa-framework/sofa/pull/2302 ); - [Geomagic] Fix compilation of code with openHaptics due to sofa::type namespace missing. [#2229]( https://github.com/sofa-framework/sofa/pull/2229 ); - [image] Ignore python2 scenes in CI [#2526]( https://github.com/sofa-framework/sofa/pull/2526 ); - [image] fix shadow variable [#2515]( https://github.com/sofa-framework/sofa/pull/2515 ); - [image] fix shadow variables [#2528]( https://github.com/sofa-framework/sofa/pull/2528 ); - [SofaCUDA] Fix broken visuals in examples [#2447]( https://github.com/sofa-framework/sofa/pull/2447 ); - [SofaCUDA] Fix compilation [#2446]( https://github.com/sofa-framework/sofa/pull/2446 ); - [SofaCUDA] Fix static variable definition for double-precision [#2440]( https://github.com/sofa-framework/sofa/pull/2440 ); - [SofaCUDA] Redundant namespace [#2538]( https://github.com/sofa-framework/sofa/pull/2538 ); - [SofaGuiGlut] FIX compilation for v21.06 [#2274]( https://github.com/sofa-framework/sofa/pull/2274 ); - [SofaGuiGlut] Fix compilation for v21.12 [#2539]( https://github.com/sofa-framework/sofa/pull/2539 ). **Examples / Scenes**; - [examples] FIX duplicated scene in regression-tests [#2251]( https://github.com/sofa-framework/sofa/pull/2251 ); - [examples] FIX duplicated scene in regression-tests (2) [#2252]( https://github.com/sofa-framework/sofa/pull/2252 ). **Scripts / Tools**. ### Cleanings. **Architecture**; - [CMake] Remove option SOFA_ENABLE_SOFT_DEPS_TO_SOFAPYTHON [#2533]( https://github.com/sofa-framework/sofa/pull/2533 ); - [GitHub] Improve ""bug report"" issue template [#2454]( https://github.com/sofa-framework/sofa/pull/2454 ). **Modules**; - [All] Clean warnings [#1549]( https://github.com/sofa-framework/sofa/pull/1549 ); - [All] Remove several TopologyDataHandler and headers inclusion in com",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:153472,Redund,Redundant,153472,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Redund'],['Redundant']
Safety,24]( https://github.com/sofa-framework/sofa/pull/2324 ). **Plugins / Projects**; - [Geomagic] Fix compilation of code with openHaptics due to sofa::type namespace missing. [#2229]( https://github.com/sofa-framework/sofa/pull/2229 ); - [SofaGuiGlut] FIX compilation for v21.06 [#2274]( https://github.com/sofa-framework/sofa/pull/2274 ). ### Cleanings; **Modules**; - [All] Minor code cleaning [#2225]( https://github.com/sofa-framework/sofa/pull/2225 ). ____________________________________________________________. ## [v21.06.00]( https://github.com/sofa-framework/sofa/tree/v21.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.03...v21.06.00 ). ### SOFA-NG; **Architecture**; - [CMake] Macro replace dot with underscore for preprocessor defines [#1701]( https://github.com/sofa-framework/sofa/pull/1701 ). **Modules**; - **[Sofa.Type]** Remove stdtype subdirectory [#1946]( https://github.com/sofa-framework/sofa/pull/1946 ); - **[SofaBaseCollision]** Move OBB/Capsule-related intersections/detections/contacts to SofaMiscCollision [#2073]( https://github.com/sofa-framework/sofa/pull/2073 ); - **[SofaBaseCollision]** Remove dependencies on BaseIntTool [#2081]( https://github.com/sofa-framework/sofa/pull/2081 ); - **[SofaCore]** Clean dependencies to SimulationCore [#1928]( https://github.com/sofa-framework/sofa/pull/1928 ); - **[SofaFramework]** Create Sofa.Config module [#1674]( https://github.com/sofa-framework/sofa/pull/1674 ); - **[SofaFramework]** Create Sofa.Testing module [#1834]( https://github.com/sofa-framework/sofa/pull/1834 ); - **[SofaFramework]** Isolate OpenGL code into a single module (Sofa.GL) [#1649]( https://github.com/sofa-framework/sofa/pull/1649 ); - **[SofaFramework]** Rename modules (cmake) [#2001]( https://github.com/sofa-framework/sofa/pull/2001 ); - [SofaGui] Package SofaGui [#1719]( https://github.com/sofa-framework/sofa/pull/1719 ); - **[SofaHelper]** Clean dependencies to defaulttype [#1915]( https://github.com/sofa-framework,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:167521,detect,detections,167521,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['detect'],['detections']
Safety,4309](https://github.com/sofa-framework/sofa/pull/4309); - [Spring] Extract LinearSpring class in its own file [#4454](https://github.com/sofa-framework/sofa/pull/4454); - [VolumetricRendering][SofaCUDA] Move CUDA files related to VolumetricRendering [#4487](https://github.com/sofa-framework/sofa/pull/4487); - [DefaultType] Extract inner classes from SolidTypes in files [#4513](https://github.com/sofa-framework/sofa/pull/4513); - [LinearAlgebra] Refactor sparse matrix product [#4547](https://github.com/sofa-framework/sofa/pull/4547); - [plugins] Remove ExternalBehaviorModel and ManualMapping plugins [#4565](https://github.com/sofa-framework/sofa/pull/4565); - [LinearSystem.Direct] Remove metis dependency [#4588](https://github.com/sofa-framework/sofa/pull/4588); - [ODESolver] Explicit link to linear solver [#4628](https://github.com/sofa-framework/sofa/pull/4628); - [Collision.Detection.Algorithm] Rename Data [#4674](https://github.com/sofa-framework/sofa/pull/4674); - [Collision.Detection.Intersection] Rename Data [#4675](https://github.com/sofa-framework/sofa/pull/4675); - [Collision.Geometry+Response] Rename Data [#4676](https://github.com/sofa-framework/sofa/pull/4676); - [Controller+Engine] Rename Data [#4678](https://github.com/sofa-framework/sofa/pull/4678); - [IO] Rename Data [#4679](https://github.com/sofa-framework/sofa/pull/4679); - [ODESolver] Rename Data [#4680](https://github.com/sofa-framework/sofa/pull/4680); - [Playback] Rename Data [#4681](https://github.com/sofa-framework/sofa/pull/4681); - [Setting] Rename Data [#4682](https://github.com/sofa-framework/sofa/pull/4682); - [Topology] Rename Data [#4683](https://github.com/sofa-framework/sofa/pull/4683); - [Visual] Rename Data [#4684](https://github.com/sofa-framework/sofa/pull/4684); - [Constraint] Rename Data [#4696](https://github.com/sofa-framework/sofa/pull/4696); - [all] Rename depreciation macros in config.h.in for unique module id… [#4755](https://github.com/sofa-framework/sofa/pull/4755); -,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:19376,Detect,Detection,19376,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Detect'],['Detection']
Safety,659]( https://github.com/sofa-framework/sofa/pull/2659 ); - [SofaGuiCommon] Restore argv [#2802]( https://github.com/sofa-framework/sofa/pull/2802 ); - [SofaGuiQt] Fix some dll export macro missing [#2555]( https://github.com/sofa-framework/sofa/pull/2555 ); - [SofaGui] Restore and update CMake variables and modules [#3011]( https://github.com/sofa-framework/sofa/pull/3011 ); - [SofaHelper] Speedup ReadAccessor conversion operator [#2583]( https://github.com/sofa-framework/sofa/pull/2583 ); - [SofaMiscFEM] Fix TriangleFEMForceField and TriangularFEMForceField to have the same behavior [#2275]( https://github.com/sofa-framework/sofa/pull/2275 ); - [SofaMiscFem] FIX missing Strain Displacement matrix update in TriangularFEMForceField [#2706]( https://github.com/sofa-framework/sofa/pull/2706 ); - [SofaMiscForceField] Fix error while trying to compile a plugin depending on SofaGuiQt [#2707]( https://github.com/sofa-framework/sofa/pull/2707 ); - [SofaMiscForceField][SofaBaseMechanics] Add compile-time conditions to avoid compiling unrealistic cases [#2514]( https://github.com/sofa-framework/sofa/pull/2514 ); - [SofaMiscSolver] Accumulate mapped forces in NewmarkImplicitSolver [#2578]( https://github.com/sofa-framework/sofa/pull/2578 ); - [SofaSparseSolver] Add cmake configuration for Threads [#2739]( https://github.com/sofa-framework/sofa/pull/2739 ); - [SofaSparseSolver] Fix compilation error due to namespace change [#2543]( https://github.com/sofa-framework/sofa/pull/2543 ); - [SofaUserInteraction] Fix compat alias defined in the same scope [#3032]( https://github.com/sofa-framework/sofa/pull/3032 ); - [SolidMechanics] TopologySubsetIndices for RestShapeSpringsForceField [#3037]( https://github.com/sofa-framework/sofa/pull/3037 ); - [StateContainer] Fix VecId names for != V_COORD [#2872]( https://github.com/sofa-framework/sofa/pull/2872 ); - [Topology.Container] Fix save/restoreLastState in draw method were missing [#3143]( https://github.com/sofa-framework/sofa/pull/3,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:113715,avoid,avoid,113715,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['avoid'],['avoid']
Safety,://github.com/sofa-framework/sofa/pull/2544 ); - [Controller] Fix specialization issue in inline file [#3182]( https://github.com/sofa-framework/sofa/pull/3182 ); - [FEM.elastic] Some optimisation to make FastTetrahedralCorotational even faster [#2877]( https://github.com/sofa-framework/sofa/pull/2877 ); - [GKlib] Portable random number generation [#3072]( https://github.com/sofa-framework/sofa/pull/3072 ); - [GUI.Common] FIX unused variable [#3158]( https://github.com/sofa-framework/sofa/pull/3158 ); - [GUI.Qt] Move default format setup before application creation [#3105]( https://github.com/sofa-framework/sofa/pull/3105 ); - [Helper] Convert path back slashes to slash [#2970]( https://github.com/sofa-framework/sofa/pull/2970 ); - [Helper] Deduce plugin name from path based on known extension [#2961]( https://github.com/sofa-framework/sofa/pull/2961 ); - [Helper] Fix crash when module does not provide a version [#2949]( https://github.com/sofa-framework/sofa/pull/2949 ); - [Helper] Make TagFactory thread safe [#2942]( https://github.com/sofa-framework/sofa/pull/2942 ); - [IO.Mesh] Fix binary loading in case of degenerated triangles [#3084]( https://github.com/sofa-framework/sofa/pull/3084 ); - [Lagrangian.Correction] LinearSolverConstraintCorrection: Trivial optimisations for MSVC [#3135]( https://github.com/sofa-framework/sofa/pull/3135 ); - [Mass] Fix point topological changes for UniformMass [#2853]( https://github.com/sofa-framework/sofa/pull/2853 ); - [MeshGmsh]Fixed false error detection in MeshGmsh.cpp file [#3030]( https://github.com/sofa-framework/sofa/pull/3030 ); - [Preconditioner] Fix missing find_package() in the cmake.in [#2841]( https://github.com/sofa-framework/sofa/pull/2841 ); - [S.C.Engine] Remove previous engine files and fix some cmake.in [#2909]( https://github.com/sofa-framework/sofa/pull/2909 ); - [S.C.LinearSolver]fix bug in linearsolvers and preconditioners [#2883]( https://github.com/sofa-framework/sofa/pull/2883 ); - [S.C.Mapping] Fix as,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:106774,safe,safe,106774,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['safe'],['safe']
Safety,"://github.com/sofa-framework/sofa/pull/3565) ; - [Project] Start v23.06 dev phase [#3573](https://github.com/sofa-framework/sofa/pull/3573) ; - [Cmake] Update warning replacement message for deprecated macro sofa_add_XX [#3611](https://github.com/sofa-framework/sofa/pull/3611) ; - [Sofa] Remove warnings [#3627](https://github.com/sofa-framework/sofa/pull/3627) ; - [Sofa.framework] Compile and run tests when SReal is float [#3628](https://github.com/sofa-framework/sofa/pull/3628) ; - [Type] Fix massive warning due to Mat.h [#3633](https://github.com/sofa-framework/sofa/pull/3633) ; - [Core] TLink: Fix warnings about comparisons between unnamed enums [#3714](https://github.com/sofa-framework/sofa/pull/3714) ; - [Helper] Deprecate constructor of OptionsGroup [#3741](https://github.com/sofa-framework/sofa/pull/3741) ; - [Config] Remove suspicious Eigen macro preventing vectorization [#3780](https://github.com/sofa-framework/sofa/pull/3780) . **Modules**; - [StateContainer] Avoid code duplication in MechanicalObject [#3541](https://github.com/sofa-framework/sofa/pull/3541) ; - [FEM.Elastic] Fix unit tests warnings [#3545](https://github.com/sofa-framework/sofa/pull/3545) ; - [GUI] GUI libraries as plugins [#3550](https://github.com/sofa-framework/sofa/pull/3550) ; - [LinearAlgebra, LinearSolver.Direct] make getSubMatrixDim() compile-time constant [#3556](https://github.com/sofa-framework/sofa/pull/3556) ; - [FEM.Elastic] Consistent default values for poisson's ratio and Young's modulus [#3563](https://github.com/sofa-framework/sofa/pull/3563) ; - [FEM.Elastic] Minor refactoring and optimization in draw [#3564](https://github.com/sofa-framework/sofa/pull/3564) ; - [all] Fix some warnings further v22.12 [#3570](https://github.com/sofa-framework/sofa/pull/3570) ; - [LinearAlgebra] Remove wrong comment [#3582](https://github.com/sofa-framework/sofa/pull/3582) ; - [LinearAlgebra] Factorize rotateMatrix in RotationMatrix [#3586](https://github.com/sofa-framework/sofa/pull/3586)",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:62431,Avoid,Avoid,62431,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Avoid'],['Avoid']
Safety,; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.cpp; ${COLLISIONOBB,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:2355,detect,detection,2355,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,; ************************************; * SofaCarving.txt *; ************************************. AUTHOR :; - Brina Goyette; - Erik Pernod (Version 0.3 - 2018-07-12). . LICENCE :; - LGPL. OTHER COMMENTS :. The plugin include:; - CarvingManager handling carving operations between a tool and an object. ; The CarvingManager class will perform topological resection on a triangle surface (could be on top of tetrahedron topology); The tool performing the carving as well as the object to carved need to be represented by collision models; Detecting the collision is done using the scene Intersection and NarrowPhaseDetection pipeline.; - 2 simples scenes showing a sphere carving a cylinder volume with different parameters; - A scene showing how to use the carving Manager on a tool object model. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCarving/SofaCarving.txt:538,Detect,Detecting,538,applications/plugins/SofaCarving/SofaCarving.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCarving/SofaCarving.txt,1,['Detect'],['Detecting']
Safety,"; - [Core] Convert warning to error in object factory [#3404](https://github.com/sofa-framework/sofa/pull/3404) . ### Breaking. **Architecture**; - [Core] Make some functions non-virtual [#3242](https://github.com/sofa-framework/sofa/pull/3242) ; - [Core] Add some const qualifier to collision methods & use SReal & nodiscard. [#3270](https://github.com/sofa-framework/sofa/pull/3270) ; - [Topology] Improve TopologyHandler registration [#3271](https://github.com/sofa-framework/sofa/pull/3271) ; - [Core] Finally disable deprecated code in BaseData and ExectParam's Aspects. [#3279](https://github.com/sofa-framework/sofa/pull/3279) ; - [Simulation] Separate factory code from TaskScheduler [#3480](https://github.com/sofa-framework/sofa/pull/3480); - [all] Replace all Vector2, Vector3, Vector4 by their short name alias Vec2, Vec3 [#3299](https://github.com/sofa-framework/sofa/pull/3299) ; - [Core] Remove memory leaks [#3183](https://github.com/sofa-framework/sofa/pull/3183) ; - [Core] Avoid extra copy in DataFileNameVector [#3188](https://github.com/sofa-framework/sofa/pull/3188) . **Modules**; - [Constraint.Lagrangian] Create data links in ConstraintCorrection for linear solver [#3152](https://github.com/sofa-framework/sofa/pull/3152) ; - [LinearSolver] Create data links for preconditioners and ShewchukPCGLinearSolver [#3155](https://github.com/sofa-framework/sofa/pull/3155) ; - [Constraint.Lagrangian] Fix BilateralInteractionConstraint double init and clean some Data [#3327](https://github.com/sofa-framework/sofa/pull/3327) ; - [Constraint.Lagrangian] Remove merge option from BilateralInteractionConstraint [#3328](https://github.com/sofa-framework/sofa/pull/3328) ; - [Constraint.Lagrangian.Solver] Deprecate MechanicalAccumulateConstraint [#3393](https://github.com/sofa-framework/sofa/pull/3393) ; - [TriangularFEMForceField] Avoid double write access to the TriangleInfo Data in TriangularFEMForceField [#3412](https://github.com/sofa-framework/sofa/pull/3412) ; - [all] Fix ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:70471,Avoid,Avoid,70471,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Avoid'],['Avoid']
Safety,"ACTION_SRC}/initSofaUserInteraction.h; ). set(SOURCE_FILES; ${SOFAUSERINTERACTION_SRC}/initSofaUserInteraction.cpp; ). list(APPEND HEADER_FILES; ${SOFAUSERINTERACTION_SRC}/SleepController.h; ). list(APPEND SOURCE_FILES; ${SOFAUSERINTERACTION_SRC}/SleepController.cpp; ). sofa_find_package(SofaDeformable REQUIRED); sofa_find_package(SofaGeneralMeshCollision REQUIRED); sofa_find_package(SofaGeneralVisual REQUIRED); sofa_find_package(SofaTopologyMapping REQUIRED); sofa_find_package(SofaBoundaryCondition REQUIRED); sofa_find_package(SofaGraphComponent REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaGeneralMeshCollision SofaGeneralVisual SofaTopologyMapping SofaDeformable SofaBoundaryCondition SofaGraphComponent). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Geometry, Sofa.Component.Collision.Detection.Algorithm, Sofa.Component.Collision.Detection.Intersection, Sofa.Component.Collision.Response.Contact and Sofa.Component.Controller and Sofa.GUI.Component instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); sofa_find_package(Sofa.Component.Controller REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Algorithm); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Intersection); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Contact); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Controller); target_link_librarie",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaUserInteraction/CMakeLists.txt:1202,Detect,Detection,1202,applications/collections/deprecated/modules/SofaUserInteraction/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaUserInteraction/CMakeLists.txt,1,['Detect'],['Detection']
Safety,"ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR; REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,; INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING; OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED; TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY; YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER; PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE; POSSIBILITY OF SUCH DAMAGES. END OF TERMS AND CONDITIONS. How to Apply These Terms to Your New Programs. If you develop a new program, and you want it to be of the greatest; possible use to the public, the best way to achieve this is to make it; free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest; to attach them to the start of each source file to most effectively; convey the exclusion of warranty; and each file should have at least; the ""copyright"" line and a pointer to where the full notice is found. {description}; Copyright (C) {year} {fullname}. This program is free software; you can redistribute it and/or modify; it under the terms of the GNU General Public License as published by; the Free Software Foundation; either version 2 of the License, or; (at your option) any later version. This program is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU General Public License for more details. You should have received a copy of the GNU General Public License along; with this program; if not, write to the Free Software Foundation, Inc.,; 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Also add information on how to contact you by electronic and paper mail. If the program is interactive, make it output a short notice like this; when it st",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:15379,safe,safest,15379,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,5,['safe'],['safest']
Safety,APSULE_SRC_DIR}/detection/intersection/MeshIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/CapsuleContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/OBBContact,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:2579,detect,detection,2579,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,"BLE TO YOU; FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR; CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE; LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING; RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A; FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF; SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH; DAMAGES. END OF TERMS AND CONDITIONS. How to Apply These Terms to Your New Libraries. If you develop a new library, and you want it to be of the greatest; possible use to the public, we recommend making it free software that; everyone can redistribute and change. You can do so by permitting; redistribution under these terms (or, alternatively, under the terms of the; ordinary General Public License). To apply these terms, attach the following notices to the library. It is; safest to attach them to the start of each source file to most effectively; convey the exclusion of warranty; and each file should have at least the; ""copyright"" line and a pointer to where the full notice is found. <one line to give the library's name and a brief idea of what it does.>; Copyright (C) <year> <name of author>. This library is free software; you can redistribute it and/or; modify it under the terms of the GNU Lesser General Public; License as published by the Free Software Foundation; either; version 2.1 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public; License along with this library; if not, write to the Free Software; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301; USA. Also add information on how to contact you by electronic and paper ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:24661,safe,safest,24661,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['safe'],['safest']
Safety,"CImg). set(CIMG_H_DIR ${cimg_SOURCE_DIR}); sofa_find_package(CImg REQUIRED); endif(); elseif (NOT CImg_FOUND); message(FATAL_ERROR ""CImgPlugin: DEPENDENCY CImg NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install cimg-dev, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # OS X only: if the user installed its own JPEG/PNG lib (typically with homebrew/port),; # it will allow to use those instead of those present in XCode's frameworks; set(CMAKE_FIND_FRAMEWORK LAST). sofa_find_package(TIFF QUIET); sofa_find_package(ZSTD QUIET); sofa_find_package(JPEG QUIET); sofa_find_package(PNG QUIET); sofa_find_package(ZLIB QUIET). # Configure Paths according to detected packages; set(DEP_TARGETS """"); set(CIMG_CFLAGS -Dcimg_no_system_calls) # Remove CImg sys calls; if(TIFF_FOUND AND ( NOT(SOFA_BUILD_RELEASE_PACKAGE) OR ZSTD_FOUND)); message(STATUS ""CImgPlugin: TIFF Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_tiff); list(APPEND DEP_TARGETS TIFF::TIFF); if(ZSTD_FOUND); set(DEP_ZSTD ZSTD::ZSTD); endif(); else(); message(STATUS ""CImgPlugin: TIFF Image Format disabled""); endif(); if(JPEG_FOUND); message(STATUS ""CImgPlugin: JPEG Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_jpeg); if(WIN32); # prevent INT32 redefinition on Windows (see jmorecfg.h); list(APPEND CIMG_CFLAGS -DXMD_H); endif(); list(APPEND DEP_TARGETS JPEG::JPEG); else(); message(STATUS ""CImgPlugin: JPEG Image Format disabled""); endif(); if(PNG_FOUND); message(STATUS ""CImgPlugin: PNG Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_png); if(UNIX); # Prevent pngconf error (see https://bugs.launchpad.net/ubuntu/+source/libpng/+bug/218409); list(APPEND CIMG_CFLAGS -DPNG_SKIP_SETJMP_CHECK); endif(); list(APPEND DEP_TARGETS PNG::PNG); else(); message(STATUS ""CImgPlugin: PNG Image Format disabled""); endif(); if(ZLIB_FOUND); list(APPEND DEP_TARGETS ZLIB::ZLIB); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). targ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt:1778,detect,detected,1778,applications/plugins/CImgPlugin/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt,1,['detect'],['detected']
Safety,"COLLISION_SRC}/initSofaMiscCollision.h; ). set(SOURCE_FILES; ${SOFAMISCCOLLISION_SRC}/initSofaMiscCollision.cpp; ). set(EXTRA_FILES; ${SOFAMISCCOLLISION_SRC}/README.md; ). list(APPEND HEADER_FILES; ${SOFAMISCCOLLISION_SRC}/DefaultCollisionGroupManager.h; ${SOFAMISCCOLLISION_SRC}/RayTriangleVisitor.h; ${SOFAMISCCOLLISION_SRC}/SolverMerger.h; ). list(APPEND SOURCE_FILES. ${SOFAMISCCOLLISION_SRC}/DefaultCollisionGroupManager.cpp; ${SOFAMISCCOLLISION_SRC}/RayTriangleVisitor.cpp; ${SOFAMISCCOLLISION_SRC}/SolverMerger.cpp. ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaBaseTopology SofaGeneralMeshCollision SofaGeneralDeformable SofaConstraint SofaExplicitOdeSolver SofaGeneralExplicitOdeSolver SofaImplicitOdeSolver SofaBaseCollision SofaBaseMechanics). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Geometry, Sofa.Component.Collision.Detection.Intersection and Sofa.Component.Collision.Response.Contact instead.; # Moreover, OBB and Capsule-related components have been moved into the external plugin CollisionOBBCapsule.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Intersection); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Contact). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""collections""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscCollision/CMakeLists.txt:1638,Detect,Detection,1638,applications/collections/deprecated/modules/SofaMiscCollision/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscCollision/CMakeLists.txt,1,['Detect'],['Detection']
Safety,DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/CapsuleContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/OBBContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED) # for performers,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:3025,detect,detection,3025,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,"Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.03...v21.12.00 ). ### SOFA-NG. **Modules**; - [All] Remove more GeometryAlgorithms usage [#2465]( https://github.com/sofa-framework/sofa/pull/2465 ); - [All] Remove some trivial dependencies on SofaBaseTopology [#2449]( https://github.com/sofa-framework/sofa/pull/2449 ); - [Sofa.Core][SofaBaseTopology] Move TopologyData* from SofaBaseTopology to Sofa.Core [#2423]( https://github.com/sofa-framework/sofa/pull/2423 ); - [Sofa.Core][SofaBaseTopology] Refactor TopologyContainer [#2387]( https://github.com/sofa-framework/sofa/pull/2387 ); - [Sofa.LinearAlgebra] Dispatch *Matrix from BTDLinearSolver, and BlockDiagonalMatrix [#2334]( https://github.com/sofa-framework/sofa/pull/2334 ); - [Sofa.LinearAlgebra] Dispatch EigenMatrix and EigenVector from Eigen2Solver [#2339]( https://github.com/sofa-framework/sofa/pull/2339 ); - [Sofa.LinearAlgebra] Gather tests [#2383]( https://github.com/sofa-framework/sofa/pull/2383 ); - [SofaBaseMechanics] BarycentricMapping: Remove avoidable Sofa.BaseTopology dependencies [#2403]( https://github.com/sofa-framework/sofa/pull/2403 ); - [SofaBaseTopology][SofaMiscForcefield] Remove GeometryAlgorithms from DiagonalMass & MeshMatrixMass [#2436]( https://github.com/sofa-framework/sofa/pull/2436 ); - [SofaFramework] Create Sofa.LinearAlgebra (BaseVector/BaseMatrix & co) [#2314]( https://github.com/sofa-framework/sofa/pull/2314 ). **Plugins / Projects**; - [Plugins] Move CGALPlugin to an external repository [#2500]( https://github.com/sofa-framework/sofa/pull/2500 ); - [Plugins] Move Flexible/Compliant/RigidScale to external repositories [#1873]( https://github.com/sofa-framework/sofa/pull/1873 ); - [Plugins] Move SofaPython to an external repository [#2224]( https://github.com/sofa-framework/sofa/pull/2224 ); - [Plugins] Remove LMConstraint from SOFA repository [#2508]( https://github.com/sofa-framework/sofa/pull/2508 ). ### Breaking. **Architecture**. **Modules**; - [All] Unused inclu",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:135022,avoid,avoidable,135022,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['avoid'],['avoidable']
Safety,"HARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaImplicitOdeSolver SofaUserInteraction SofaBaseLinearSolver). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Mapping.MappedMatrix, Sofa.Component.Constraint.Lagrangian.Model, Sofa.Component.Constraint.Lagrangian.Correction, Sofa.Component.Constraint.Lagrangian.Solver, Sofa.Component.AnimationLoop, Sofa.Component.Collision.Detection.Intersection, Sofa.Component.Collision.Response.Contact and Sofa.GUI.Component instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Mapping.MappedMatrix REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Model REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Correction REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Solver REQUIRED); sofa_find_package(Sofa.Component.AnimationLoop REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping.MappedMatrix); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian.Model); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian.Correction); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian.Solver); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.AnimationLoop); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Intersection); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Contact); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GUI.Component). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DI",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaConstraint/CMakeLists.txt:1463,Detect,Detection,1463,applications/collections/deprecated/modules/SofaConstraint/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaConstraint/CMakeLists.txt,1,['Detect'],['Detection']
Safety,"I place no restrictions on the use of newmat except that I take; no liability for any problems that may arise from its use,; distribution or other dealings with it. You can use it in your commercial projects. You can make and distribute modified or merged versions. You can; include parts of it in your own software. If you distribute modified or merged versions, please make it; clear which parts are mine and which parts are modified. For a substantially modified version, simply note that it is,; in part, derived from my software. A comment in the code will; be sufficient. The software is provided ""as is"", without warranty of any kind. Please understand that there may still be bugs and errors. Use at your own risk. I (Robert Davies) take no responsibility; for any errors or omissions in this package or for any misfortune; that may befall you or others as a result of your use,; distribution or other dealings with it.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaNewmat/extlibs/newmat/COPYING.txt:717,risk,risk,717,applications/plugins/SofaNewmat/extlibs/newmat/COPYING.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaNewmat/extlibs/newmat/COPYING.txt,1,['risk'],['risk']
Safety,IONOBBCAPSULE_SRC_DIR}/init.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/Intersector.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:1239,detect,detection,1239,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,IR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/CapsuleContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/OBBContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; $,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:2732,detect,detection,2732,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,IR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/CapsuleContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/OBBContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.cpp; ${CO,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:2807,detect,detection,2807,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,ISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/CapsuleContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/OBBContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.Collision R,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:2950,detect,detection,2950,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,LISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:2500,detect,detection,2500,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,"OPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR; REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,; INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING; OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED; TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY; YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER; PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE; POSSIBILITY OF SUCH DAMAGES. 		 END OF TERMS AND CONDITIONS. 	 How to Apply These Terms to Your New Programs. If you develop a new program, and you want it to be of the greatest; possible use to the public, the best way to achieve this is to make it; free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest; to attach them to the start of each source file to most effectively; convey the exclusion of warranty; and each file should have at least; the ""copyright"" line and a pointer to where the full notice is found. <one line to give the program's name and a brief idea of what it does.>; Copyright (C) <year> <name of author>. This program is free software; you can redistribute it and/or modify; it under the terms of the GNU General Public License as published by; the Free Software Foundation; either version 2 of the License, or; (at your option) any later version. This program is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU General Public License for more details. You should have received a copy of the GNU General Public License; along with this program; if not, write to the Free Software; Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA. Also add information on how to contact you by electronic and paper mail. If the program is inte",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:16362,safe,safest,16362,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['safe'],['safest']
Safety,"PUBLIC SofaImplicitOdeSolver SofaUserInteraction SofaBaseLinearSolver). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Mapping.MappedMatrix, Sofa.Component.Constraint.Lagrangian.Model, Sofa.Component.Constraint.Lagrangian.Correction, Sofa.Component.Constraint.Lagrangian.Solver, Sofa.Component.AnimationLoop, Sofa.Component.Collision.Detection.Intersection, Sofa.Component.Collision.Response.Contact and Sofa.GUI.Component instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Mapping.MappedMatrix REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Model REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Correction REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Solver REQUIRED); sofa_find_package(Sofa.Component.AnimationLoop REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping.MappedMatrix); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian.Model); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian.Correction); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian.Solver); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.AnimationLoop); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Intersection); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Contact); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GUI.Component). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaConstraint/CMakeLists.txt:2121,Detect,Detection,2121,applications/collections/deprecated/modules/SofaConstraint/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaConstraint/CMakeLists.txt,1,['Detect'],['Detection']
Safety,"RINTERACTION_SRC}/config.h.in; ${SOFAUSERINTERACTION_SRC}/initSofaUserInteraction.h; ). set(SOURCE_FILES; ${SOFAUSERINTERACTION_SRC}/initSofaUserInteraction.cpp; ). list(APPEND HEADER_FILES; ${SOFAUSERINTERACTION_SRC}/SleepController.h; ). list(APPEND SOURCE_FILES; ${SOFAUSERINTERACTION_SRC}/SleepController.cpp; ). sofa_find_package(SofaDeformable REQUIRED); sofa_find_package(SofaGeneralMeshCollision REQUIRED); sofa_find_package(SofaGeneralVisual REQUIRED); sofa_find_package(SofaTopologyMapping REQUIRED); sofa_find_package(SofaBoundaryCondition REQUIRED); sofa_find_package(SofaGraphComponent REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaGeneralMeshCollision SofaGeneralVisual SofaTopologyMapping SofaDeformable SofaBoundaryCondition SofaGraphComponent). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Geometry, Sofa.Component.Collision.Detection.Algorithm, Sofa.Component.Collision.Detection.Intersection, Sofa.Component.Collision.Response.Contact and Sofa.Component.Controller and Sofa.GUI.Component instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); sofa_find_package(Sofa.Component.Controller REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Algorithm); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Intersection); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Contact); target_link_libraries(${PROJECT_NAME} PUBLIC So",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaUserInteraction/CMakeLists.txt:1156,Detect,Detection,1156,applications/collections/deprecated/modules/SofaUserInteraction/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaUserInteraction/CMakeLists.txt,1,['Detect'],['Detection']
Safety,RSION 3.22); project(CollisionOBBCapsule VERSION 1.0 LANGUAGES CXX). # List all files; set(COLLISIONOBBCAPSULE_SRC_DIR src/CollisionOBBCapsule); set(HEADER_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/config.h.in; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/Intersector.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:1025,detect,detection,1025,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,"Software Foundation. 14. If you wish to incorporate parts of the Library into other free; programs whose distribution conditions are incompatible with these,; write to the author to ask for permission. For software which is; copyrighted by the Free Software Foundation, write to the Free; Software Foundation; we sometimes make exceptions for this. Our; decision will be guided by the two goals of preserving the free status; of all derivatives of our free software and of promoting the sharing; and reuse of software generally. NO WARRANTY. 15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO; WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.; EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR; OTHER PARTIES PROVIDE THE LIBRARY ""AS IS"" WITHOUT WARRANTY OF ANY; KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR; PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE; LIBRARY IS WITH YOU. SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME; THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN; WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY; AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU; FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR; CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE; LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING; RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A; FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF; SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH; DAMAGES. END OF TERMS AND CONDITIONS. How to Apply These Terms to Your New Libraries. If you develop a new library, and you want it to be of the greatest; possible use to the public, we recommend making it free software that; everyone can ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:23394,RISK,RISK,23394,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['RISK'],['RISK']
Safety,"Tasks.h; src/MultiThreading/BeamLinearMapping_mt.h; src/MultiThreading/BeamLinearMapping_mt.inl; src/MultiThreading/BeamLinearMapping_tasks.inl; src/MultiThreading/ParallelBVHNarrowPhase.h; src/MultiThreading/ParallelBruteForceBroadPhase.h; src/MultiThreading/ParallelHexahedronFEMForceField.h; src/MultiThreading/ParallelHexahedronFEMForceField.inl; ); endif(). find_package(Sofa.Simulation.Common REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.Elastic REQUIRED); sofa_find_package(Sofa.Component.Mapping.Linear REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.LinearSolver.Iterative REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Simulation.Common); target_link_libraries(${PROJECT_NAME} Sofa.Component.Collision.Detection.Algorithm); target_link_libraries(${PROJECT_NAME} Sofa.Component.SolidMechanics.FEM.Elastic); target_link_libraries(${PROJECT_NAME} Sofa.Component.Mapping.Linear); target_link_libraries(${PROJECT_NAME} Sofa.Component.StateContainer); target_link_libraries(${PROJECT_NAME} Sofa.Component.SolidMechanics.Spring); target_link_libraries(${PROJECT_NAME} Sofa.Component.LinearSolver.Iterative). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; RELOCATABLE ""plugins""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(MULTITHREADING_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(MULTITHREADING_BUILD_TESTS); enable_testing(); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt:4179,Detect,Detection,4179,applications/plugins/MultiThreading/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt,1,['Detect'],['Detection']
Safety,[GUI.Qt] Fix MSAA sampling setup [#3220](https://github.com/sofa-framework/sofa/pull/3220) ; - [DrawToolGL] Fix ill-formed drawLines with multiple colors [#3260](https://github.com/sofa-framework/sofa/pull/3260) ; - [SofaSphFluid] Fix required plugin in scenes [#3272](https://github.com/sofa-framework/sofa/pull/3272) ; - [SofaCarving] Fix bug in CarvingManager when searching for target collision model [#3276](https://github.com/sofa-framework/sofa/pull/3276) ; - [GUI/runSofa] Cmake: tweaks and fixes [#3323](https://github.com/sofa-framework/sofa/pull/3323) ; - [CImgPlugin] Replace new keyword with creating unique pointers to properly clean up allocated memory. [#3365](https://github.com/sofa-framework/sofa/pull/3365) ; - [SofaMatrix] Fix crash if init fails in FillReducingOrdering [#3366](https://github.com/sofa-framework/sofa/pull/3366) ; - [SofaDistanceGrid] Set invalid state if cannot load mesh [#3400](https://github.com/sofa-framework/sofa/pull/3400) ; - [SofaMatrix] Update plugin CMakeLists to avoid strong dependency on Qt [#3423](https://github.com/sofa-framework/sofa/pull/3423) ; - [SofaNewmat] Fix modules [#3427](https://github.com/sofa-framework/sofa/pull/3427) ; - [plugins] Fix warnings in SofaSphFluid and image [#3439](https://github.com/sofa-framework/sofa/pull/3439) ; - [GUI.Qt] Restore QGLViewer for Qt6 [#3454](https://github.com/sofa-framework/sofa/pull/3454) ; - [GUI.Qt] Restore Stats (Charts) and DocBrowser for Qt6 [#3456](https://github.com/sofa-framework/sofa/pull/3456) ; - [Modeler] rename shadow variable [#3546](https://github.com/sofa-framework/sofa/pull/3546) ; - [GUI.Common] Cmake: Fix message when searching for Sofa.GL [#3549](https://github.com/sofa-framework/sofa/pull/3549) ; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid3D [#3557](https://github.com/sofa-framework/sofa/pull/3557); - [CollisionOBBCapsule] Fix generation of configuration file for installation [#3576](https://github.com/sofa-framework/sofa/pull/3576). **Examples /,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:82432,avoid,avoid,82432,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['avoid'],['avoid']
Safety,_SRC_DIR}/detection/intersection/OBBIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/CapsuleContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/OBBContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.cp,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:2658,detect,detection,2658,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,a/pull/1280 ); - **[SofaEngine]** Fix Engine_test [#1338]( https://github.com/sofa-framework/sofa/pull/1338 ); - **[SofaFramework]** Windows/VS: Remove warnings flags from definitions [#1368]( https://github.com/sofa-framework/sofa/pull/1368 ); - [SofaGuiQt] Fix compilation for SOFA_DUMP_VISITOR_INFO [#1415]( https://github.com/sofa-framework/sofa/pull/1415 ); - [SofaGuiQt] Fix node graph [#1424]( https://github.com/sofa-framework/sofa/pull/1424 ); - [SofaHeadlessRecorder] Update headless recorder to use the new ffmpeg recorder [#1396]( https://github.com/sofa-framework/sofa/pull/1396 ); - **[SofaHelper]** AdvancedTimer wasn't using the good timer ids for the label assignments [#1244]( https://github.com/sofa-framework/sofa/pull/1244 ); - **[SofaHelper]** Fix unloading with PluginManager [#1274]( https://github.com/sofa-framework/sofa/pull/1274 ); - **[SofaHelper]** Fix fixed_array compilation with VS2019 [#1426]( https://github.com/sofa-framework/sofa/pull/1426 ); - **[SofaKernel]** Fix hexahedra detection in BoxROI [#1417]( https://github.com/sofa-framework/sofa/pull/1417 ); - **[SofaKernel]** Fix minor bug in BoxROI and add warning message in RestShapeSpringsForceField [#1391]( https://github.com/sofa-framework/sofa/pull/1391 ); - **[SofaKernel]** Fixes a bug where the camera was not moving with the Qt viewer [#1377]( https://github.com/sofa-framework/sofa/pull/1377 ); - **[SofaKernel]** Improve error message when a component cannot be created. [#1332]( https://github.com/sofa-framework/sofa/pull/1332 ); - **[SofaKernel]** Remove the installation of external system libraries [#1387]( https://github.com/sofa-framework/sofa/pull/1387 ); - **[SofaKernel]** Set default visibility to SOFA_EXPORT_DYNAMIC_LIBRARY [#1410]( https://github.com/sofa-framework/sofa/pull/1410 ); - [SofaMiscTopology] Fix bug in TopologicalChangeProcessor [#1247]( https://github.com/sofa-framework/sofa/pull/1247 ); - **[SofaSimpleFem]** Small Fix [#1403]( https://github.com/sofa-framework/sofa/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:235847,detect,detection,235847,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['detect'],['detection']
Safety,ading/component/solidmechanics/fem/elastic/ParallelTetrahedronFEMForceField.h; src/MultiThreading/component/solidmechanics/fem/elastic/ParallelTetrahedronFEMForceField.inl; src/MultiThreading/component/solidmechanics/spring/ParallelStiffSpringForceField.h; src/MultiThreading/component/solidmechanics/spring/ParallelStiffSpringForceField.inl; src/MultiThreading/component/solidmechanics/spring/ParallelMeshSpringForceField.h; src/MultiThreading/component/solidmechanics/spring/ParallelMeshSpringForceField.inl; src/MultiThreading/SceneCheckMultithreading.h; src/MultiThreading/ParallelImplementationsRegistry.h; src/MultiThreading/TaskSchedulerUser.h; ). set(SOURCE_FILES; src/MultiThreading/initMultiThreading.cpp; src/MultiThreading/DataExchange.cpp; src/MultiThreading/MeanComputation.cpp; src/MultiThreading/component/animationloop/AnimationLoopParallelScheduler.cpp; src/MultiThreading/component/collision/detection/algorithm/ParallelBVHNarrowPhase.cpp; src/MultiThreading/component/collision/detection/algorithm/ParallelBruteForceBroadPhase.cpp; src/MultiThreading/component/linearsolver/iterative/ParallelCGLinearSolver.cpp; src/MultiThreading/component/mapping/linear/BeamLinearMapping_mt.cpp; src/MultiThreading/component/solidmechanics/fem/elastic/ParallelHexahedronFEMForceField.cpp; src/MultiThreading/component/solidmechanics/fem/elastic/ParallelTetrahedronFEMForceField.cpp; src/MultiThreading/component/solidmechanics/spring/ParallelStiffSpringForceField.cpp; src/MultiThreading/component/solidmechanics/spring/ParallelMeshSpringForceField.cpp; src/MultiThreading/SceneCheckMultithreading.cpp; src/MultiThreading/ParallelImplementationsRegistry.cpp; src/MultiThreading/TaskSchedulerUser.cpp; ). find_package(Sofa.Config REQUIRED); if(SOFA_ENABLE_LEGACY_HEADERS); list(APPEND HEADER_FILES; src/MultiThreading/AnimationLoopParallelScheduler.h; src/MultiThreading/AnimationLoopTasks.h; src/MultiThreading/BeamLinearMapping_mt.h; src/MultiThreading/BeamLinearMapping_mt.inl; src/MultiThread,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt:2287,detect,detection,2287,applications/plugins/MultiThreading/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt,1,['detect'],['detection']
Safety,"alityContactForceField.inl. sofa/gpu/cuda/CudaSpringForceField.h; sofa/gpu/cuda/CudaSpringForceField.inl. sofa/gpu/cuda/CudaSphereForceField.h; sofa/gpu/cuda/CudaSphereForceField.inl. sofa/gpu/cuda/CudaPlaneForceField.h; sofa/gpu/cuda/CudaPlaneForceField.inl. sofa/gpu/cuda/CudaLinearForceField.h; sofa/gpu/cuda/CudaLinearForceField.inl. sofa/gpu/cuda/CudaEllipsoidForceField.h; sofa/gpu/cuda/CudaEllipsoidForceField.inl. sofa/gpu/cuda/CudaMechanicalObject.h; sofa/gpu/cuda/CudaMechanicalObject.inl; ); endif(). set(README_FILES README.md). sofa_find_package(Sofa.Component.Mass REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.Elastic REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.HyperElastic REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.TensorMass REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.Mapping.Linear REQUIRED); sofa_find_package(Sofa.Component.Mapping.NonLinear REQUIRED); sofa_find_package(Sofa.Component.Engine.Select REQUIRED); sofa_find_package(Sofa.Component.Engine.Transform REQUIRED); sofa_find_package(Sofa.Component.MechanicalLoad REQUIRED). sofa_find_package(Sofa.GUI QUIET); if(Sofa.GUI_FOUND); list(APPEND SOURCE_FILES sofa/gpu/gui/CudaMouseInteraction.cpp); endif(). sofa_find_package(Sofa.GUI.Qt QUIET); if(Sofa.GUI.Qt_FOUND); list(APPEND HEADER_FILES sofa/gpu/gui/CudaDataWidget.h); list(APPEND SOURCE_FILES sofa/gpu/gui/CudaDataWidget.cpp); endif(). find_package(SofaDistanceGrid QUIET); if(SofaDistanceGrid_FOUND); sofa_find_package(MiniFlowVR QUIET); if(MiniFlowVR_FOUND); message(STATUS ""SofaCUDA: MiniFlowVR enabled.""); else(); message(STATUS ""SofaCUDA: MiniFlowVR was not enabl",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:14078,Detect,Detection,14078,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,1,['Detect'],['Detection']
Safety,amework/sofa/pull/3299) ; - [Core] Remove memory leaks [#3183](https://github.com/sofa-framework/sofa/pull/3183) ; - [Core] Avoid extra copy in DataFileNameVector [#3188](https://github.com/sofa-framework/sofa/pull/3188) . **Modules**; - [Constraint.Lagrangian] Create data links in ConstraintCorrection for linear solver [#3152](https://github.com/sofa-framework/sofa/pull/3152) ; - [LinearSolver] Create data links for preconditioners and ShewchukPCGLinearSolver [#3155](https://github.com/sofa-framework/sofa/pull/3155) ; - [Constraint.Lagrangian] Fix BilateralInteractionConstraint double init and clean some Data [#3327](https://github.com/sofa-framework/sofa/pull/3327) ; - [Constraint.Lagrangian] Remove merge option from BilateralInteractionConstraint [#3328](https://github.com/sofa-framework/sofa/pull/3328) ; - [Constraint.Lagrangian.Solver] Deprecate MechanicalAccumulateConstraint [#3393](https://github.com/sofa-framework/sofa/pull/3393) ; - [TriangularFEMForceField] Avoid double write access to the TriangleInfo Data in TriangularFEMForceField [#3412](https://github.com/sofa-framework/sofa/pull/3412) ; - [all] Fix compilation with float as floating_point_type [#3435](https://github.com/sofa-framework/sofa/pull/3435) . ### Improvements. **Architecture**; - [Core] Linear time getRoot() method in BaseNode and Node [#3059](https://github.com/sofa-framework/sofa/pull/3059) ; - [Type] Add NoInit constructor for Quat class [#3217](https://github.com/sofa-framework/sofa/pull/3217) ; - [Geometry] Make global variables constexpr [#3233](https://github.com/sofa-framework/sofa/pull/3233) ; - [Core] Reduce calls to getValue in collisions [#3264](https://github.com/sofa-framework/sofa/pull/3264) ; - [Type] Fix/clean and speed up of Mat [#3280](https://github.com/sofa-framework/sofa/pull/3280) ; - [Type] Add fixedarray aliases and BoundingBox3D [#3298](https://github.com/sofa-framework/sofa/pull/3298) ; - [Config] Option to set the number of MSVC processes [#3313](https://github.c,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:71329,Avoid,Avoid,71329,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Avoid'],['Avoid']
Safety,"ayTriangleVisitor.h; ${SOFAMISCCOLLISION_SRC}/SolverMerger.h; ). list(APPEND SOURCE_FILES. ${SOFAMISCCOLLISION_SRC}/DefaultCollisionGroupManager.cpp; ${SOFAMISCCOLLISION_SRC}/RayTriangleVisitor.cpp; ${SOFAMISCCOLLISION_SRC}/SolverMerger.cpp. ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaBaseTopology SofaGeneralMeshCollision SofaGeneralDeformable SofaConstraint SofaExplicitOdeSolver SofaGeneralExplicitOdeSolver SofaImplicitOdeSolver SofaBaseCollision SofaBaseMechanics). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Geometry, Sofa.Component.Collision.Detection.Intersection and Sofa.Component.Collision.Response.Contact instead.; # Moreover, OBB and Capsule-related components have been moved into the external plugin CollisionOBBCapsule.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Intersection); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Contact). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""collections""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFAMISCCOLLISION_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFAMISCCOLLISION_BUILD_TESTS); enable_testing(); add_subdirectory(SofaMiscCollision_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscCollision/CMakeLists.txt:1971,Detect,Detection,1971,applications/collections/deprecated/modules/SofaMiscCollision/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscCollision/CMakeLists.txt,2,['Detect'],['Detection']
Safety,c] Update GeomagicDriver.cpp to fire error when hd.h is not found [#4576](https://github.com/sofa-framework/sofa/pull/4576); - [CMake] Upgrade cmake_minimum_required to 3.22 [#4586](https://github.com/sofa-framework/sofa/pull/4586); - [Core] Remove unused debug trace [#4590](https://github.com/sofa-framework/sofa/pull/4590); - [Core] cmake: Remove last traces of Sofa.Component.Compat [#4596](https://github.com/sofa-framework/sofa/pull/4596); - [LinearAlgebra] Remove empty source file [#4599](https://github.com/sofa-framework/sofa/pull/4599); - [Type] Clean and test MatSym [#4600](https://github.com/sofa-framework/sofa/pull/4600); - [tests] Use appropriate gtest macro [#4607](https://github.com/sofa-framework/sofa/pull/4607); - [LinearSystem] Remove development artifact [#4620](https://github.com/sofa-framework/sofa/pull/4620); - [all] Minor last fixes using SimpleApi [#4627](https://github.com/sofa-framework/sofa/pull/4627); - [SolidMechanics.FEM] Small update on container access to avoid unecessary check [#4639](https://github.com/sofa-framework/sofa/pull/4639); - [AnimationLoop] Rename Data [#4664](https://github.com/sofa-framework/sofa/pull/4664); - [Guidelines] Format cpp code [#4695](https://github.com/sofa-framework/sofa/pull/4695); - [all] Remove some warnings [#4698](https://github.com/sofa-framework/sofa/pull/4698); - [examples] Run PluginFinder on examples [#4707](https://github.com/sofa-framework/sofa/pull/4707); - [examples] Remove examples using DefaultCollisionGroupManager [#4708](https://github.com/sofa-framework/sofa/pull/4708); - [Core] Warn when module name is empty [#4725](https://github.com/sofa-framework/sofa/pull/4725); - ﻿[PlayBack] Update playback scenes to write/read and compare a beam under gravity motion [#4745](https://github.com/sofa-framework/sofa/pull/4745); - [tools] Factorize and clean plugin list filtering [#4748](https://github.com/sofa-framework/sofa/pull/4748); - [tools] Add new dependency to fix in MacOS post-install-fixup [#4749,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:16817,avoid,avoid,16817,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['avoid'],['avoid']
Safety,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Collision.Detection.Algorithm_test). set(SOURCE_FILES; CollisionPipeline_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Collision.Detection.Algorithm). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Algorithm/tests/CMakeLists.txt:71,Detect,Detection,71,Sofa/Component/Collision/Detection/Algorithm/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Algorithm/tests/CMakeLists.txt,2,['Detect'],['Detection']
Safety,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Collision.Detection.Intersection_test). set(SOURCE_FILES; LocalMinDistance_test.cpp; MeshNewProximityIntersection_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Collision.Detection.Intersection). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Intersection/tests/CMakeLists.txt:71,Detect,Detection,71,Sofa/Component/Collision/Detection/Intersection/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Intersection/tests/CMakeLists.txt,2,['Detect'],['Detection']
Safety,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Collision.Geometry_test). set(SOURCE_FILES; Sphere_test.cpp; Triangle_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Collision.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.Collision.Geometry Sofa.Component.Collision.Detection.Intersection). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Geometry/tests/CMakeLists.txt:376,Detect,Detection,376,Sofa/Component/Collision/Geometry/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Geometry/tests/CMakeLists.txt,1,['Detect'],['Detection']
Safety,cmake_minimum_required(VERSION 3.22); project(CollisionOBBCapsule VERSION 1.0 LANGUAGES CXX). # List all files; set(COLLISIONOBBCAPSULE_SRC_DIR src/CollisionOBBCapsule); set(HEADER_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/config.h.in; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/Intersector.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:302,detect,detection,302,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,10,['detect'],['detection']
Safety,cmake_minimum_required(VERSION 3.22); project(MultiThreading VERSION 0.1). set(HEADER_FILES; src/MultiThreading/config.h.in; src/MultiThreading/initMultiThreading.h; src/MultiThreading/DataExchange.h; src/MultiThreading/DataExchange.inl; src/MultiThreading/MeanComputation.h; src/MultiThreading/MeanComputation.inl; src/MultiThreading/component/animationloop/AnimationLoopParallelScheduler.h; src/MultiThreading/component/animationloop/StepTask.h; src/MultiThreading/component/collision/detection/algorithm/ParallelBVHNarrowPhase.h; src/MultiThreading/component/collision/detection/algorithm/ParallelBruteForceBroadPhase.h; src/MultiThreading/component/linearsolver/iterative/ParallelCGLinearSolver.h; src/MultiThreading/component/linearsolver/iterative/ParallelCGLinearSolver.inl; src/MultiThreading/component/linearsolver/iterative/ParallelCompressedRowSparseMatrixMechanical.h; src/MultiThreading/component/mapping/linear/BeamLinearMapping_mt.h; src/MultiThreading/component/mapping/linear/BeamLinearMapping_mt.inl; src/MultiThreading/component/mapping/linear/BeamLinearMapping_tasks.inl; src/MultiThreading/component/solidmechanics/fem/elastic/ParallelHexahedronFEMForceField.h; src/MultiThreading/component/solidmechanics/fem/elastic/ParallelHexahedronFEMForceField.inl; src/MultiThreading/component/solidmechanics/fem/elastic/ParallelTetrahedronFEMForceField.h; src/MultiThreading/component/solidmechanics/fem/elastic/ParallelTetrahedronFEMForceField.inl; src/MultiThreading/component/solidmechanics/spring/ParallelStiffSpringForceField.h; src/MultiThreading/component/solidmechanics/spring/ParallelStiffSpringForceField.inl; src/MultiThreading/component/solidmechanics/spring/ParallelMeshSpringForceField.h; src/MultiThreading/component/solidmechanics/spring/ParallelMeshSpringForceField.inl; src/MultiThreading/SceneCheckMultithreading.h; src/MultiThreading/ParallelImplementationsRegistry.h; src/MultiThreading/TaskSchedulerUser.h; ). set(SOURCE_FILES; src/MultiThreading/initMultiThreading.c,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt:487,detect,detection,487,applications/plugins/MultiThreading/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt,2,['detect'],['detection']
Safety,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Collision LANGUAGES CXX). set(SOFACOMPONENTCOLLISION_SOURCE_DIR ""src/sofa/component/collision""). sofa_add_subdirectory_modules(SOFACOMPONENTCOLLISION_TARGETS; DIRECTORIES Geometry Detection Response; ). set(HEADER_FILES; ${SOFACOMPONENTCOLLISION_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCOLLISION_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCOLLISION_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTCOLLISION_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). if(SOFA_BUILD_TESTS); add_subdirectory(Testing); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/CMakeLists.txt:241,Detect,Detection,241,Sofa/Component/Collision/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/CMakeLists.txt,1,['Detect'],['Detection']
Safety,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Collision.Detection LANGUAGES CXX). set(SOFACOMPONENTCOLLISIONDETECTION_SOURCE_DIR ""src/sofa/component/collision/detection""). sofa_add_subdirectory_modules(SOFACOMPONENTCOLLISIONDETECTION_TARGETS; DIRECTORIES Algorithm Intersection; ). set(HEADER_FILES; ${SOFACOMPONENTCOLLISIONDETECTION_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCOLLISIONDETECTION_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCOLLISIONDETECTION_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTCOLLISIONDETECTION_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/CMakeLists.txt:71,Detect,Detection,71,Sofa/Component/Collision/Detection/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/CMakeLists.txt,2,"['Detect', 'detect']","['Detection', 'detection']"
Safety,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Collision.Detection.Algorithm LANGUAGES CXX). set(SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR ""src/sofa/component/collision/detection/algorithm""). set(HEADER_FILES; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/init.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/BVHNarrowPhase.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/BruteForceBroadPhase.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/BruteForceDetection.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/CollisionPM.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/DSAPBox.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/CollisionPipeline.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/DefaultPipeline.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/DirectSAP.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/DirectSAPNarrowPhase.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/EndPoint.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/IncrSAP.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/MirrorIntersector.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/RayTraceDetection.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/RayTraceNarrowPhase.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/BVHNarrowPhase.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/BruteForceBroadPhase.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/BruteForceDetection.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/DSAPBox.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/CollisionPipeline.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/DirectSAP.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/DirectSAPNarrowPh",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Algorithm/CMakeLists.txt:71,Detect,Detection,71,Sofa/Component/Collision/Detection/Algorithm/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Algorithm/CMakeLists.txt,2,"['Detect', 'detect']","['Detection', 'detection']"
Safety,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Collision.Detection.Intersection LANGUAGES CXX). set(SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR ""src/sofa/component/collision/detection/intersection""). set(HEADER_FILES; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/init.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/BaseProximityIntersection.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/DiscreteIntersection.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/LocalMinDistance.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/MeshDiscreteIntersection.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/MeshDiscreteIntersection.inl; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/MeshMinProximityIntersection.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/MeshNewProximityIntersection.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/MeshNewProximityIntersection.inl; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/MinProximityIntersection.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/NewProximityIntersection.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/NewProximityIntersection.inl; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/RayDiscreteIntersection.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/RayDiscreteIntersection.inl; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/RayNewProximityIntersection.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/TetrahedronDiscreteIntersection.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/BaseProximityIntersection.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/DiscreteIntersection.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Intersection/CMakeLists.txt:71,Detect,Detection,71,Sofa/Component/Collision/Detection/Intersection/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Intersection/CMakeLists.txt,2,"['Detect', 'detect']","['Detection', 'detection']"
Safety,"cmake_minimum_required(VERSION 3.22); project(SofaBaseCollision LANGUAGES CXX). set(SOFABASECOLLISION_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFABASECOLLISION_SRC}/config.h.in; ${SOFABASECOLLISION_SRC}/initSofaBaseCollision.h; ). set(SOURCE_FILES; ${SOFABASECOLLISION_SRC}/initSofaBaseCollision.cpp; ). sofa_find_package(SofaFramework REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Core Sofa.Simulation.Core). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Model, Sofa.Component.Collision.Detection.Algorithm, Sofa.Component.Collision.Detection.Intersection, Sofa.Component.Collision.Response.Mapper and Sofa.Component.Collision.Response.Contact instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Mapper REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Algorithm); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Intersection); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Mapper); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Contact). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseCollision/CMakeLists.txt:649,Detect,Detection,649,applications/collections/deprecated/modules/SofaBaseCollision/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseCollision/CMakeLists.txt,6,['Detect'],['Detection']
Safety,"cmake_minimum_required(VERSION 3.22); project(SofaConstraint). set(SOFACONSTRAINT_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFACONSTRAINT_SRC}/config.h.in; ${SOFACONSTRAINT_SRC}/initSofaConstraint.h; ). set(SOURCE_FILES; ${SOFACONSTRAINT_SRC}/initSofaConstraint.cpp; ). sofa_find_package(SofaBase REQUIRED) # SofaBaseLinearSolver; sofa_find_package(SofaImplicitOdeSolver REQUIRED) ; sofa_find_package(SofaUserInteraction REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaImplicitOdeSolver SofaUserInteraction SofaBaseLinearSolver). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Mapping.MappedMatrix, Sofa.Component.Constraint.Lagrangian.Model, Sofa.Component.Constraint.Lagrangian.Correction, Sofa.Component.Constraint.Lagrangian.Solver, Sofa.Component.AnimationLoop, Sofa.Component.Collision.Detection.Intersection, Sofa.Component.Collision.Response.Contact and Sofa.GUI.Component instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Mapping.MappedMatrix REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Model REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Correction REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Solver REQUIRED); sofa_find_package(Sofa.Component.AnimationLoop REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping.MappedMatrix); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian.Model); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian.Correction); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian.Solver); target_link_libraries(${PR",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaConstraint/CMakeLists.txt:938,Detect,Detection,938,applications/collections/deprecated/modules/SofaConstraint/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaConstraint/CMakeLists.txt,1,['Detect'],['Detection']
Safety,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralMeshCollision LANGUAGES CXX). set(SOFAGENERALMESHCOLLISION_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALMESHCOLLISION_SRC}/config.h.in; ${SOFAGENERALMESHCOLLISION_SRC}/initSofaGeneralMeshCollision.h; ). set(SOURCE_FILES; ${SOFAGENERALMESHCOLLISION_SRC}/initSofaGeneralMeshCollision.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Geometry, Sofa.Component.Collision.Detection.Algorithm and Sofa.Component.Collision.Detection.Intersection instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Algorithm); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Intersection). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralMeshCollision/CMakeLists.txt:580,Detect,Detection,580,applications/collections/deprecated/modules/SofaGeneralMeshCollision/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralMeshCollision/CMakeLists.txt,6,['Detect'],['Detection']
Safety,cmake_minimum_required(VERSION 3.22); project(sofaInitTimer). find_package(SofaGeneral); find_package(SofaMisc). sofa_find_package(Boost QUIET OPTIONAL_COMPONENTS thread). set(SOURCE_FILES; sofaInitTimer.cpp; ). if(Boost_THREAD_FOUND); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/thread/TimeoutWatchdog.cpp); endif(). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} SofaGeneral SofaMisc); if(UNIX); target_link_libraries(${PROJECT_NAME} dl); endif(). if(Boost_THREAD_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC Boost::thread); endif(); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/CMakeLists.txt:287,Timeout,TimeoutWatchdog,287,applications/projects/sofaInitTimer/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/CMakeLists.txt,1,['Timeout'],['TimeoutWatchdog']
Safety,ction/intersection/Intersector.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersecti,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:1598,detect,detection,1598,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,ction/intersection/IntrCapsuleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detectio,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:1737,detect,detection,1737,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,"e directories to nvcc compiler.; # Note: keep cuda_include_directories() before cuda_add_library().; cuda_include_directories(""${CMAKE_CURRENT_SOURCE_DIR}""); cuda_include_directories(""${CMAKE_CURRENT_SOURCE_DIR}/src""); cuda_include_directories(""${CMAKE_BINARY_DIR}/include""); cuda_add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${CUDA_SOURCES} ${README_FILES} OPTIONS ${VERBOSE_PTXAS} ${WINDOWSOPTIONS}). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR};${CMAKE_CURRENT_SOURCE_DIR}/src>""); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""${SOFACUDA_COMPILE_DEFINITIONS}""); target_link_libraries(${PROJECT_NAME}; Sofa.Component.Mass; Sofa.Component.SolidMechanics.FEM.Elastic; Sofa.Component.SolidMechanics.FEM.HyperElastic; Sofa.Component.SolidMechanics.TensorMass; Sofa.Component.MechanicalLoad; Sofa.Component.Collision.Response.Contact; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.StateContainer; Sofa.Component.Constraint.Projective; Sofa.Component.Mapping.Linear; Sofa.Component.Mapping.NonLinear; Sofa.Component.Engine.Select; Sofa.Component.Engine.Transform; Sofa.Component.MechanicalLoad; ). target_compile_features(${PROJECT_NAME} PRIVATE cxx_std_17). if(Sofa.GL_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.GL); endif(). if(SofaDistanceGrid_FOUND); target_link_libraries(${PROJECT_NAME} SofaDistanceGrid); if(MiniFlowVR_FOUND); target_link_libraries(${PROJECT_NAME} miniFlowVR); endif(); endif(). if(Sofa.GUI_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.GUI); endif(). if(Sofa.GUI.Qt_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.GUI.Qt); endif(). if(SofaValidation_FOUND); target_link_libraries(${PROJECT_NAME} SofaValidation); endif(). if(SofaSphFluid_FOUND); target_link_libraries(${PROJECT_NAME} SofaSphFluid); endif(). if(SOFACUDA_CUBLAS); cuda_add_cublas_to_target(${PROJECT_NAME}); target_link_libraries(${PROJECT_NA",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:20177,Detect,Detection,20177,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,1,['Detect'],['Detection']
Safety,"e""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/Sofa/framework/Config/cmake""); list(APPEND CMAKE_IGNORE_PATH ""${CMAKE_INSTALL_PREFIX}"") # ignore install directory for findXXX commands; include(SofaMacros). install(FILES; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/FindEigen3.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/macdeployqt.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/windeployqt.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/FindTinyXML2.cmake""; DESTINATION lib/cmake/Modules; COMPONENT headers; ). ## RPATH; if(UNIX); # RPATH is a field in ELF binaries that is used as a hint by the system; # loader to find needed shared libraries.; #; # In the build directory, cmake creates binaries with absolute paths in; # RPATH. And by default, it strips RPATH from installed binaries. Here we; # use CMAKE_INSTALL_RPATH to set a relative RPATH. By doing so, we avoid; # the need to play with LD_LIBRARY_PATH to get applications to run. # see https://cmake.org/Wiki/CMake_RPATH_handling for $ORIGIN doc; set(CMAKE_INSTALL_RPATH; ""$ORIGIN/../lib""; ""$$ORIGIN/../lib""; ). if(APPLE); set(CMAKE_MACOSX_RPATH ON); list(APPEND CMAKE_INSTALL_RPATH; ""@loader_path/../lib""; ""@executable_path/../lib""; ""@loader_path/../../Frameworks""; ""@executable_path/../../Frameworks""; ); set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE); endif(); endif(UNIX). ### Windows config; if(MSVC); # WinDepPack; set(SOFA_DEPENDENCY_PACK_DIR ""${CMAKE_SOURCE_DIR}"" CACHE PATH ""Directory containing Windows Dependency Pack""); if(NOT EXISTS ${SOFA_DEPENDENCY_PACK_DIR}); # force back to default value; set(SOFA_DEPENDENCY_PACK_DIR ""${CMAKE_SOURCE_DIR}"" CACHE PATH ""Directory containing Windows Dependency Pack"" FORCE); endif(); list(APPEND CMAKE_INCLUDE_PATH ${SOFA_DEPENDENCY_PACK_DIR}/include); if(CMAKE_CL_64); list(APPEND CMAKE_LIBRARY_PATH ${SOFA_DEPENDENCY_PACK_DIR}/lib/win64); else(); list(APPEND CMAKE_LIBRARY_PATH ${SOFA_D",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:4716,avoid,avoid,4716,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['avoid'],['avoid']
Safety,"eAnimationLoop; - adding RigidRestJointMapping to compute a joint between a rigid body's current position and its rest position.; - large compliances are considered as null stiffnesses; - Offset default to isMechanical=True; - python quaternion log; - added nlnscg acceleration; - pure python constraints; - .inl for python mappings; - adding Addition[Multi]Mapping; - implementing AssembledMultiMapping::applyDJT; - adding DotProduct[Multi]Mapping (with tests); - adding NormalizationMapping to map a 3d vector to its normalization; - adding ConstantAssembled[Multi]Mapping; - adding SafeDistanceMapping: a distance mapping that becomes a difference mapping for too small distances.; - adding SafeDistanceFromTargetMapping; - using the new SofaPython API; - SafeDistanceFromTargetMapping can now be ""safe"" by giving the edge directions when they are known; - adding the SofaCompliant python module (first module created outside of SofaPython!); - adding DotProductFromTargetMapping (with test); - adding RigidJointFromTargetMapping and RigidJointFromWorldFrameMapping; - add of complementary API to create deformable articulated systems; - adding NegativeUnilateralConstraint to guarantee negativeness; - adding PenaltyForceField and using it in penalty contact response; - add of two file from the SohusimDev plugin. - [image]; - API: Sampler.addMechanicalObject() more versatile; - API: refactor python API; - API: add addClosingVisual(); - add function in python API to retrieve perspective property; - MeshToImageEngine: move getValue out of for loops; - add a python ImagePlaneController; - Data<Image<T>> are now specifically bound in python; - remove pthread and X11 dependencies; - add metaimage tags that may be used to define orientation; - add python function to retrieve image type; - simpler imagePlane python controller; - add a createTransferFunction method; - improved cutplane texture resolution; - half perspective, half orthographic image transforms; - add imageCoordValuesFromPosi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:354577,Safe,SafeDistanceFromTargetMapping,354577,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,3,"['Safe', 'safe']","['SafeDistanceFromTargetMapping', 'safe']"
Safety,ection/CapsuleIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/Intersector.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTo,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:1387,detect,detection,1387,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,"ed by the Free Software; Foundation. 10. If you wish to incorporate parts of the Program into other free; programs whose distribution conditions are different, write to the author; to ask for permission. For software which is copyrighted by the Free; Software Foundation, write to the Free Software Foundation; we sometimes; make exceptions for this. Our decision will be guided by the two goals; of preserving the free status of all derivatives of our free software and; of promoting the sharing and reuse of software generally. NO WARRANTY. 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY; FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN; OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES; PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED; OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF; MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS; TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE; PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,; REPAIR OR CORRECTION. 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING; WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR; REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,; INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING; OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED; TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY; YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER; PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE; POSSIBILITY OF SUCH DAMAGES. END OF TERMS AND CONDITIONS. How to Apply These Terms to Your New Programs. If you develop a new program, and you want it to be of the greatest; possible use to the public, the best way to achieve this is to make it; free software",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:14227,RISK,RISK,14227,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,5,['RISK'],['RISK']
Safety,"el.h. sofa/gpu/cuda/CudaPenalityContactForceField.h; sofa/gpu/cuda/CudaPenalityContactForceField.inl. sofa/gpu/cuda/CudaSpringForceField.h; sofa/gpu/cuda/CudaSpringForceField.inl. sofa/gpu/cuda/CudaSphereForceField.h; sofa/gpu/cuda/CudaSphereForceField.inl. sofa/gpu/cuda/CudaPlaneForceField.h; sofa/gpu/cuda/CudaPlaneForceField.inl. sofa/gpu/cuda/CudaLinearForceField.h; sofa/gpu/cuda/CudaLinearForceField.inl. sofa/gpu/cuda/CudaEllipsoidForceField.h; sofa/gpu/cuda/CudaEllipsoidForceField.inl. sofa/gpu/cuda/CudaMechanicalObject.h; sofa/gpu/cuda/CudaMechanicalObject.inl; ); endif(). set(README_FILES README.md). sofa_find_package(Sofa.Component.Mass REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.Elastic REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.HyperElastic REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.TensorMass REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.Mapping.Linear REQUIRED); sofa_find_package(Sofa.Component.Mapping.NonLinear REQUIRED); sofa_find_package(Sofa.Component.Engine.Select REQUIRED); sofa_find_package(Sofa.Component.Engine.Transform REQUIRED); sofa_find_package(Sofa.Component.MechanicalLoad REQUIRED). sofa_find_package(Sofa.GUI QUIET); if(Sofa.GUI_FOUND); list(APPEND SOURCE_FILES sofa/gpu/gui/CudaMouseInteraction.cpp); endif(). sofa_find_package(Sofa.GUI.Qt QUIET); if(Sofa.GUI.Qt_FOUND); list(APPEND HEADER_FILES sofa/gpu/gui/CudaDataWidget.h); list(APPEND SOURCE_FILES sofa/gpu/gui/CudaDataWidget.cpp); endif(). find_package(SofaDistanceGrid QUIET); if(SofaDistanceGrid_FOUND); sofa_find_package(MiniFlowVR QUIET); if(MiniFlowVR_FOUND); message(STATUS ""SofaCUDA: MiniFlo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:14004,Detect,Detection,14004,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,1,['Detect'],['Detection']
Safety,er/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/CapsuleContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/OBBContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED) # for performers. add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision S,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:3168,detect,detection,3168,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,"faDeformable REQUIRED); sofa_find_package(SofaGeneralMeshCollision REQUIRED); sofa_find_package(SofaGeneralVisual REQUIRED); sofa_find_package(SofaTopologyMapping REQUIRED); sofa_find_package(SofaBoundaryCondition REQUIRED); sofa_find_package(SofaGraphComponent REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaGeneralMeshCollision SofaGeneralVisual SofaTopologyMapping SofaDeformable SofaBoundaryCondition SofaGraphComponent). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Geometry, Sofa.Component.Collision.Detection.Algorithm, Sofa.Component.Collision.Detection.Intersection, Sofa.Component.Collision.Response.Contact and Sofa.Component.Controller and Sofa.GUI.Component instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); sofa_find_package(Sofa.Component.Controller REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Algorithm); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Intersection); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Contact); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Controller); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GUI.Component). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaUserInteraction/CMakeLists.txt:1549,Detect,Detection,1549,applications/collections/deprecated/modules/SofaUserInteraction/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaUserInteraction/CMakeLists.txt,3,['Detect'],['Detection']
Safety,"fa_find_package(SofaDeformable REQUIRED); sofa_find_package(SofaGeneralMeshCollision REQUIRED); sofa_find_package(SofaGeneralVisual REQUIRED); sofa_find_package(SofaTopologyMapping REQUIRED); sofa_find_package(SofaBoundaryCondition REQUIRED); sofa_find_package(SofaGraphComponent REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaGeneralMeshCollision SofaGeneralVisual SofaTopologyMapping SofaDeformable SofaBoundaryCondition SofaGraphComponent). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Geometry, Sofa.Component.Collision.Detection.Algorithm, Sofa.Component.Collision.Detection.Intersection, Sofa.Component.Collision.Response.Contact and Sofa.Component.Controller and Sofa.GUI.Component instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); sofa_find_package(Sofa.Component.Controller REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Algorithm); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Intersection); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Contact); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Controller); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GUI.Component). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaUserInteraction/CMakeLists.txt:1475,Detect,Detection,1475,applications/collections/deprecated/modules/SofaUserInteraction/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaUserInteraction/CMakeLists.txt,1,['Detect'],['Detection']
Safety,getDeprecatedComponents; ************************. getDeprecatedComponents is a simple executable that reads the map sofa::helper::deprecated::components and outputs all components.; It is used by SOFA CI scripts to avoid testing scenes that contain deprecated components.; WARNING: the map needs to be up-to-date!; ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/getDeprecatedComponents/README.txt:216,avoid,avoid,216,applications/projects/getDeprecatedComponents/README.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/getDeprecatedComponents/README.txt,1,['avoid'],['avoid']
Safety,"h, *.inl).; - [G3] All definitions should reside in source files. The header files should declare an interface only.; - [G4] Variables should be initialized when they are declared.; - [G5] You should use `const` profusely.; - [G6] You should use `assert` profusely.; - [G7] You must avoid the `using` directive in header files (.h and .inl): ~~`using namespace foo;`~~; - [G8] You should declare automatic variables only when you need them (not before).; - [G9] You must always initialize pointers, either to the address of something, or to `nullptr`; - [G10] You may use the type specifier `auto` (since C++11) when:; - you are in a for loop; - you deal with iterators; - you deal with long typenames AND or when the variable type is obvious. ## SOFA specific rules; - Tricky code should not be commented but rewritten! In general, the use of comments should be minimized by making the code self-documenting by appropriate name choices and an explicit logical structure.; - The use of magic numbers in the code should be avoided. Numbers other than 0 and 1 should be declared as named constants instead.; - The definition of ε-definition of limit ('epsilon', an arbitrarily small positive quantity) should not be code specific but rather use the class template [`std::numeric_limits`](https://en.cppreference.com/w/cpp/types/numeric_limits/epsilon). Here is an example: `const DataTypes::Real EPSILON = std::numeric_limits<DataTypes::Real>::epsilon();`; `const DataTypes::Real EPSILON = std::numeric_limits<DataTypes::Real>::epsilon();`; - All internal data, needed by your component, and that can’t be recomputed must be put inside a `Data` or a `DataPtr`. This way, your component can be saved. Also, this `Data` will be automatically displayed inside the GUI.; - For messaging in SOFA components, the [dedicated Messaging API](https://www.sofa-framework.org/community/doc/programming-with-sofa/start-coding/message-api/) must be used.; - `msg_info()` will display the message in the console only i",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:5625,avoid,avoided,5625,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,1,['avoid'],['avoided']
Safety,"hen drawing 3d text; - compilation with SofaDumpVisitor flag enabled; - compilation of BezierTriangleSetGeometryAlgorithms (color changed from Vec3f to Vec4f); - runSofa: viewport aspect issue and loss of interaction in QtGLViewer; - BoxROI: visual bounding box; - SofaMiscForceField on Windows; - VisualVisitor traversal order; - SphereROI: indices out when multiple spheres; - bug in RestShapeSpringsForceField; - Remove VariationalSymplecticSolver.h from the package in SofaCommon (to fix history); - some static analysis warnings and errors (including memory leaks); - MeshROI: remove unnecessary sqrt; - SphereROI: set centers' size to radii if only one radius is provided; - ARTrack plugin compilation; - bug in MeshNewProximityIntersection involving false positive detection with triangles containing an angle > 90°; - path to images for html description pop up window; - OglModel hasTexture; - DataDisplay: normal computation; - DataDisplay: crash when the component was dynamically added to a scene; - visual bug with OglModel when putOnlyTexCoords is enabled with no texture; - Order Independent Transparency for old graphics card; - sofa::gui::glut applying changes in BaseCamera; - computation of the bounding box in PlaneForceField; - SofaHelper: Fix bug with FBO (causing some weird things when using textures); - corrected the visualization of heterogeneous tetrahedra; - SofaOpenGLVisual: Fix Spotlight source drawing + add some log for ShaderElement; - OmniDriverEmu plugin and examples; - scene test: ICPRegistration_ShapeMatching.scn is ignored; - Vec: 'normalized' function constness; - SpotLight: direction normalization; - ProjectionTo{Plane,Line}MultiMapping Jacobian insertion order; - SofaGeneralRigid: bug in ArticulatedSystemMapping; - SofaEngine: BoxROI instantiation; - SofaBaseCollision: Fix computeBBox in SPhereModel; - bug in MechanicalPickParticlesWithTagsVisitor input tags were not respected; - SofaOpenGLVisual: fix light's modelview matrix computation (lookat da",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:357110,detect,detection,357110,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['detect'],['detection']
Safety,https://github.com/sofa-framework/sofa/pull/2010 ); - **[SofaBaseCollision]** Speedup direct SAP [#1917]( https://github.com/sofa-framework/sofa/pull/1917 ); - **[SofaBaseMechanics_test]** Add TopologicalChanges unit tests for DiagonalMass [#2176]( https://github.com/sofa-framework/sofa/pull/2176 ); - **[SofaBaseTopology]** add intersection methods [#2131]( https://github.com/sofa-framework/sofa/pull/2131 ); - [SofaBoundaryCondition] Add callback in Partial/FixedConstraint [#1806]( https://github.com/sofa-framework/sofa/pull/1806 ); - [SofaBoundaryCondition] Add projectVelocity in FixedConstraint and PartialFixedConstraint [#1558]( https://github.com/sofa-framework/sofa/pull/1558 ); - [SofaBoundaryCondition_test] Add TopologicalChanges unit test for FixedConstraint [#2136]( https://github.com/sofa-framework/sofa/pull/2136 ); - [SofaConstraint] GenericConstraintSolver: compute compliances concurrently [#1862]( https://github.com/sofa-framework/sofa/pull/1862 ); - [SofaConstraint] Parallel free motion and collision detection [#2040]( https://github.com/sofa-framework/sofa/pull/2040 ); - **[SofaCore]** Add PCH support in CMakeLists.txt [#1727]( https://github.com/sofa-framework/sofa/pull/1727 ); - [SofaExporter] Add option for obj export [#1789]( https://github.com/sofa-framework/sofa/pull/1789 ); - [SofaGeneralAnimationLoop] MechanicalMatrixMapper: adds template [#1703]( https://github.com/sofa-framework/sofa/pull/1703 ); - [SofaGeneralLoader] adds translation and rotation to ReadState [#1733]( https://github.com/sofa-framework/sofa/pull/1733 ); - [SofaGeneralMeshCollision] Direct SAP is written as a narrow phase [#2030]( https://github.com/sofa-framework/sofa/pull/2030 ); - [SofaGuiQt] Add new about window UI and url redirect [#1801]( https://github.com/sofa-framework/sofa/pull/1801 ); - [SofaGuiQt] Qt6 support [#1756]( https://github.com/sofa-framework/sofa/pull/1756 ); - [SofaGuiQt] Tooltips [#2139]( https://github.com/sofa-framework/sofa/pull/2139 ); - [SofaGui] Im,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:177766,detect,detection,177766,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['detect'],['detection']
Safety,https://github.com/sofa-framework/sofa/pull/4529); - [GitHub] Fix GH Discussions Announcements for Discord [#4530](https://github.com/sofa-framework/sofa/pull/4530); - [Simulation.Core] Make TSAN pass for caduceus [#4535](https://github.com/sofa-framework/sofa/pull/4535); - [Config] Add cxxopts cmake find module [#4538](https://github.com/sofa-framework/sofa/pull/4538); - [Sofa.Testing] Add SimpleApi in Config.cmake.in [#4542](https://github.com/sofa-framework/sofa/pull/4542); - [script] Stale action: remove temporary layer and activate closing [#4560](https://github.com/sofa-framework/sofa/pull/4560); - [README] Update link to Discord [#4562](https://github.com/sofa-framework/sofa/pull/4562); - [plugins] Add SimpleApi as a dependency in SofaCarving_test [#4572](https://github.com/sofa-framework/sofa/pull/4572); - [Constraint.Lagrangian.Solver] Make problemId counter id atomic [#4581](https://github.com/sofa-framework/sofa/pull/4581); - [Collision.Response.Contact] Make contactId thread-safe [#4582](https://github.com/sofa-framework/sofa/pull/4582); - [Collision.Detection] Give current intersection methods as parameter to intersection functions [#4583](https://github.com/sofa-framework/sofa/pull/4583); - [LinearAlgebra] Fix compilation of assert [#4598](https://github.com/sofa-framework/sofa/pull/4598); - [Multithreading] fix multithread packaging [#4619](https://github.com/sofa-framework/sofa/pull/4619); - [GitHub] Add timezone info on cron Actions [#4626](https://github.com/sofa-framework/sofa/pull/4626); - [LinearAlgebra] Trigger error on the Eigen version [#4630](https://github.com/sofa-framework/sofa/pull/4630); - [Core] Missing call to super init [#4634](https://github.com/sofa-framework/sofa/pull/4634); - [Demos] Fix regression for fallingBeamLagrangianCollision.scn [#4643](https://github.com/sofa-framework/sofa/pull/4643); - [Geomagic] Fix compilation. Replace Vector3 by Vec3 [#4661](https://github.com/sofa-framework/sofa/pull/4661); - [CollisionOBBCapsule] F,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:9195,safe,safe,9195,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['safe'],['safe']
Safety,"itions(""-DSOFA_BUILD_SOFACUDA""); # Give include directories to nvcc compiler.; # Note: keep cuda_include_directories() before cuda_add_library().; cuda_include_directories(""${CMAKE_CURRENT_SOURCE_DIR}""); cuda_include_directories(""${CMAKE_CURRENT_SOURCE_DIR}/src""); cuda_include_directories(""${CMAKE_BINARY_DIR}/include""); cuda_add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${CUDA_SOURCES} ${README_FILES} OPTIONS ${VERBOSE_PTXAS} ${WINDOWSOPTIONS}). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR};${CMAKE_CURRENT_SOURCE_DIR}/src>""); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""${SOFACUDA_COMPILE_DEFINITIONS}""); target_link_libraries(${PROJECT_NAME}; Sofa.Component.Mass; Sofa.Component.SolidMechanics.FEM.Elastic; Sofa.Component.SolidMechanics.FEM.HyperElastic; Sofa.Component.SolidMechanics.TensorMass; Sofa.Component.MechanicalLoad; Sofa.Component.Collision.Response.Contact; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.StateContainer; Sofa.Component.Constraint.Projective; Sofa.Component.Mapping.Linear; Sofa.Component.Mapping.NonLinear; Sofa.Component.Engine.Select; Sofa.Component.Engine.Transform; Sofa.Component.MechanicalLoad; ). target_compile_features(${PROJECT_NAME} PRIVATE cxx_std_17). if(Sofa.GL_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.GL); endif(). if(SofaDistanceGrid_FOUND); target_link_libraries(${PROJECT_NAME} SofaDistanceGrid); if(MiniFlowVR_FOUND); target_link_libraries(${PROJECT_NAME} miniFlowVR); endif(); endif(). if(Sofa.GUI_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.GUI); endif(). if(Sofa.GUI.Qt_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.GUI.Qt); endif(). if(SofaValidation_FOUND); target_link_libraries(${PROJECT_NAME} SofaValidation); endif(). if(SofaSphFluid_FOUND); target_link_libraries(${PROJECT_NAME} SofaSphFluid); endif(). if(SOFACUDA_CUBLAS); cuda_add_cublas_to_target(${PROJ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:20131,Detect,Detection,20131,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,1,['Detect'],['Detection']
Safety,k/sofa/pull/3158 ); - [GUI.Qt] Move default format setup before application creation [#3105]( https://github.com/sofa-framework/sofa/pull/3105 ); - [Helper] Convert path back slashes to slash [#2970]( https://github.com/sofa-framework/sofa/pull/2970 ); - [Helper] Deduce plugin name from path based on known extension [#2961]( https://github.com/sofa-framework/sofa/pull/2961 ); - [Helper] Fix crash when module does not provide a version [#2949]( https://github.com/sofa-framework/sofa/pull/2949 ); - [Helper] Make TagFactory thread safe [#2942]( https://github.com/sofa-framework/sofa/pull/2942 ); - [IO.Mesh] Fix binary loading in case of degenerated triangles [#3084]( https://github.com/sofa-framework/sofa/pull/3084 ); - [Lagrangian.Correction] LinearSolverConstraintCorrection: Trivial optimisations for MSVC [#3135]( https://github.com/sofa-framework/sofa/pull/3135 ); - [Mass] Fix point topological changes for UniformMass [#2853]( https://github.com/sofa-framework/sofa/pull/2853 ); - [MeshGmsh]Fixed false error detection in MeshGmsh.cpp file [#3030]( https://github.com/sofa-framework/sofa/pull/3030 ); - [Preconditioner] Fix missing find_package() in the cmake.in [#2841]( https://github.com/sofa-framework/sofa/pull/2841 ); - [S.C.Engine] Remove previous engine files and fix some cmake.in [#2909]( https://github.com/sofa-framework/sofa/pull/2909 ); - [S.C.LinearSolver]fix bug in linearsolvers and preconditioners [#2883]( https://github.com/sofa-framework/sofa/pull/2883 ); - [S.C.Mapping] Fix assertion in BarycentricMapper [#2989]( https://github.com/sofa-framework/sofa/pull/2989 ); - [S.C.Topology.Container.Dynamic] Fix assert error in QuadSetTopologyContainer [#2990]( https://github.com/sofa-framework/sofa/pull/2990 ); - [SceneUtility] MakeDataAliasComponent: Remove alias in destructor [#2832]( https://github.com/sofa-framework/sofa/pull/2832 ); - [Sofa.Component.Diffusion][Sofa.Component.Mass] Fix diffusion [#2798]( https://github.com/sofa-framework/sofa/pull/2798 ); - [,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:107263,detect,detection,107263,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['detect'],['detection']
Safety,"lbar in the Modeler. It looks like a piece of paper with the corner folded, and its tool tip is New Tab. Press the button.; This will give us a scene graph with some default components.; Right click on the TreeCollisionGroupManager and select Delete.; We don't need this component for our scene.; Find the OglModel component with the Filter, and drag and drop it onto the root node. Double click the OglModel node to edit its properties.; Rename the model ""Objective"".; Under the Property 2/3 tab, find the fileMesh section. Click on the ... button to bring up the file browser. Select the file /Sofa/share/mesh/dragon.obj, and press OK to return to the Modeler.; We now have a scene with all the components needed to handle collisions in a scene, and a visual model representing our deformable object.; Key points; This is how the collisions are performed in SOFA using these default components.; DefaultPipeline: Launch all the operations to perform the collision detection and response. Collision Detection:. Broad Phase: using ""Axis Aligned Bounding Boxes"" (AABB), we only keep potential colliding pair of objects; Narrow Phase: we use the geometrical primitives (spheres, triangles, lines, points) to test the distance between two objects. ; we use the BruteForceDetection to select which primitives will be used, and the MinProximityIntersection to detect if a collision exists between two geometrical primitives. Collision Response:. With all the colliding primitives, we create an appropriate collision response: the ContactManager gives the information about what response we have to use. ; Components are created dynamically in the graph to create repulsive forces, or constraints. In this tutorial, we will create PenalityContactForceField. . Advanced collision detection and response are implemented in SOFA, so don't hesitate to experiment other examples.; Results; Press the Run in SOFA (or press Ctrl-R), and press Animate; In this scene, we only have a OglModel corresponding to a pur",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/0_FullObject.html:1383,Detect,Detection,1383,examples/Tutorials/StepByStep/FullObject/0_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/0_FullObject.html,1,['Detect'],['Detection']
Safety,"lletCollisionDetection] Revive project [#3800](https://github.com/sofa-framework/sofa/pull/3800) ; - [PreassembledMass] Make it external [#3802](https://github.com/sofa-framework/sofa/pull/3802) ; - [SofaCUDA] Move explicit template instantiations from CudaTypes.cpp to CudaMultiMapping.cpp [#3807](https://github.com/sofa-framework/sofa/pull/3807) ; - [plugins] Remove references to old plugins [#3960](https://github.com/sofa-framework/sofa/pull/3960); - [plugins] Remove references to external deleted plugins [#3980](https://github.com/sofa-framework/sofa/pull/3980). **Examples / Scenes**; - [Tutorials] Fix CMake with Sofa.GUI [#3624](https://github.com/sofa-framework/sofa/pull/3624) ; - [Scenes] Use ""floating-point type""-independent templates [#3635](https://github.com/sofa-framework/sofa/pull/3635) ; - [examples] Apply rest position in mappings [#3757](https://github.com/sofa-framework/sofa/pull/3757) . ### Refactoring. **Modules**; - [Collision.Detection] Rename DefaultPipeline into CollisionPipeline [#3590](https://github.com/sofa-framework/sofa/pull/3590) ; - [Mapping.NonLinear] Move DistanceMultiMapping in its own files [#3707](https://github.com/sofa-framework/sofa/pull/3707) . **Plugins / Projects**; - [MultiThreading] Reorganize following SOFA structure [#3598](https://github.com/sofa-framework/sofa/pull/3598) ; - [SofaCUDA] Reorganize following SOFA structure (1/n) [#3601](https://github.com/sofa-framework/sofa/pull/3601) ; - [SofaCUDA] Reorganize following SOFA structure (2/n) [#3605](https://github.com/sofa-framework/sofa/pull/3605) ; - [SofaCUDA] Reorganize following SOFA structure (3/n) [#3660](https://github.com/sofa-framework/sofa/pull/3660) ; - [SofaCUDA] Reorganize following SOFA structure (4/n) [#3701](https://github.com/sofa-framework/sofa/pull/3701) ; - [SofaCUDA] Reorganize following SOFA structure (5/n) [#3758](https://github.com/sofa-framework/sofa/pull/3758) ; - [SofaCUDA] Reorganize following SOFA structure (6/n) [#3760](https://github.com/so",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:67035,Detect,Detection,67035,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Detect'],['Detection']
Safety,m/sofa-framework/sofa/pull/4530); - [Simulation.Core] Make TSAN pass for caduceus [#4535](https://github.com/sofa-framework/sofa/pull/4535); - [Config] Add cxxopts cmake find module [#4538](https://github.com/sofa-framework/sofa/pull/4538); - [Sofa.Testing] Add SimpleApi in Config.cmake.in [#4542](https://github.com/sofa-framework/sofa/pull/4542); - [script] Stale action: remove temporary layer and activate closing [#4560](https://github.com/sofa-framework/sofa/pull/4560); - [README] Update link to Discord [#4562](https://github.com/sofa-framework/sofa/pull/4562); - [plugins] Add SimpleApi as a dependency in SofaCarving_test [#4572](https://github.com/sofa-framework/sofa/pull/4572); - [Constraint.Lagrangian.Solver] Make problemId counter id atomic [#4581](https://github.com/sofa-framework/sofa/pull/4581); - [Collision.Response.Contact] Make contactId thread-safe [#4582](https://github.com/sofa-framework/sofa/pull/4582); - [Collision.Detection] Give current intersection methods as parameter to intersection functions [#4583](https://github.com/sofa-framework/sofa/pull/4583); - [LinearAlgebra] Fix compilation of assert [#4598](https://github.com/sofa-framework/sofa/pull/4598); - [Multithreading] fix multithread packaging [#4619](https://github.com/sofa-framework/sofa/pull/4619); - [GitHub] Add timezone info on cron Actions [#4626](https://github.com/sofa-framework/sofa/pull/4626); - [LinearAlgebra] Trigger error on the Eigen version [#4630](https://github.com/sofa-framework/sofa/pull/4630); - [Core] Missing call to super init [#4634](https://github.com/sofa-framework/sofa/pull/4634); - [Demos] Fix regression for fallingBeamLagrangianCollision.scn [#4643](https://github.com/sofa-framework/sofa/pull/4643); - [Geomagic] Fix compilation. Replace Vector3 by Vec3 [#4661](https://github.com/sofa-framework/sofa/pull/4661); - [CollisionOBBCapsule] Fix duplicated registration in the factory [#4709](https://github.com/sofa-framework/sofa/pull/4709); - [Contact] Fix crash if collis,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:9272,Detect,Detection,9272,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Detect'],['Detection']
Safety,"modify it. For example, if you distribute copies of such a program, whether; gratis or for a fee, you must give the recipients all the rights that; you have. You must make sure that they, too, receive or can get the; source code. And you must show them these terms so they know their; rights. We protect your rights with two steps: (1) copyright the software, and; (2) offer you this license which gives you legal permission to copy,; distribute and/or modify the software. Also, for each author's protection and ours, we want to make certain; that everyone understands that there is no warranty for this free; software. If the software is modified by someone else and passed on, we; want its recipients to know that what they have is not the original, so; that any problems introduced by others will not reflect on the original; authors' reputations. Finally, any free program is threatened constantly by software; patents. We wish to avoid the danger that redistributors of a free; program will individually obtain patent licenses, in effect making the; program proprietary. To prevent this, we have made it clear that any; patent must be licensed for everyone's free use or not licensed at all. The precise terms and conditions for copying, distribution and; modification follow. 		 GNU GENERAL PUBLIC LICENSE; TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION. 0. This License applies to any program or other work which contains; a notice placed by the copyright holder saying it may be distributed; under the terms of this General Public License. The ""Program"", below,; refers to any such program or work, and a ""work based on the Program""; means either the Program or any derivative work under copyright law:; that is to say, a work containing the Program or a portion of it,; either verbatim or with modifications and/or translated into another; language. (Hereinafter, translation is included without limitation in; the term ""modification"".) Each licensee is addressed as ""you"".",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:3461,avoid,avoid,3461,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['avoid'],['avoid']
Safety,"modify it. For example, if you distribute copies of such a program, whether; gratis or for a fee, you must give the recipients all the rights that; you have. You must make sure that they, too, receive or can get the; source code. And you must show them these terms so they know their; rights. We protect your rights with two steps: (1) copyright the software, and; (2) offer you this license which gives you legal permission to copy,; distribute and/or modify the software. Also, for each author's protection and ours, we want to make certain; that everyone understands that there is no warranty for this free; software. If the software is modified by someone else and passed on, we; want its recipients to know that what they have is not the original, so; that any problems introduced by others will not reflect on the original; authors' reputations. Finally, any free program is threatened constantly by software; patents. We wish to avoid the danger that redistributors of a free; program will individually obtain patent licenses, in effect making the; program proprietary. To prevent this, we have made it clear that any; patent must be licensed for everyone's free use or not licensed at all. The precise terms and conditions for copying, distribution and; modification follow. GNU GENERAL PUBLIC LICENSE; TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION. 0. This License applies to any program or other work which contains; a notice placed by the copyright holder saying it may be distributed; under the terms of this General Public License. The ""Program"", below,; refers to any such program or work, and a ""work based on the Program""; means either the Program or any derivative work under copyright law:; that is to say, a work containing the Program or a portion of it,; either verbatim or with modifications and/or translated into another; language. (Hereinafter, translation is included without limitation in; the term ""modification"".) Each licensee is addressed as ""you"". Ac",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:2490,avoid,avoid,2490,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,5,['avoid'],['avoid']
Safety,n] Deprecate RayTriangleIntersection class [#2763]( https://github.com/sofa-framework/sofa/pull/2763 ); - [Sofa.Helper] Introduce narrow_cast [#2590]( https://github.com/sofa-framework/sofa/pull/2590 ); - [Sofa.Helper] Remove some compilation warnings [#2619]( https://github.com/sofa-framework/sofa/pull/2619 ); - [Sofa.LinearAlgebra] Deprecate unused EigenMatrixManipulator [#2793]( https://github.com/sofa-framework/sofa/pull/2793 ); - [Sofa.Type] Quat: Optimize rotate() (and inverseRotate()) [#3138]( https://github.com/sofa-framework/sofa/pull/3138 ); - [Sofa.Type] Fix some compilation warnings [#2589]( https://github.com/sofa-framework/sofa/pull/2589 ); - [Sofa.Type] Make RGBAColor constexpr [#2630]( https://github.com/sofa-framework/sofa/pull/2630 ); - [Sofa.Type] Simplify template rebinding [#2570]( https://github.com/sofa-framework/sofa/pull/2570 ); - [SofaBaseMechanics] Clean AddMToMatrixFunctor [#2755]( https://github.com/sofa-framework/sofa/pull/2755 ); - [SofaBaseMechanics][SofaMiscForcefield] Auto-detect MassType [#2644]( https://github.com/sofa-framework/sofa/pull/2644 ); - [SofaBaseTopology] Clearer error message [#2638]( https://github.com/sofa-framework/sofa/pull/2638 ); - [SofaBaseVisual] Remove unused background setting in BaseCamera [#2637]( https://github.com/sofa-framework/sofa/pull/2637 ); - [SofaBoundaryCondition] Remove optimization based on type of matrix [#2859]( https://github.com/sofa-framework/sofa/pull/2859 ); - [SofaBoundaryCondition] Replace deprecated headers [#2574]( https://github.com/sofa-framework/sofa/pull/2574 ); - [SofaBoundaryCondition] Sanitize [#2559]( https://github.com/sofa-framework/sofa/pull/2559 ); - [SofaConstraint] Clean timers in GenericConstraintSolver [#2769]( https://github.com/sofa-framework/sofa/pull/2769 ); - [SofaConstraint] Clean timers in LCPConstraintSolver [#2640]( https://github.com/sofa-framework/sofa/pull/2640 ); - [SofaConstraint] Replace raw pointer to Link [#2770]( https://github.com/sofa-framework/sof,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:125767,detect,detect,125767,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['detect'],['detect']
Safety,"ner folded, and its tool tip is New Tab. Press the button.; This will give us a scene graph with some default components.; Right click on the TreeCollisionGroupManager and select Delete.; We don't need this component for our scene.; Find the OglModel component with the Filter, and drag and drop it onto the root node. Double click the OglModel node to edit its properties.; Rename the model ""Objective"".; Under the Property 2/3 tab, find the fileMesh section. Click on the ... button to bring up the file browser. Select the file /Sofa/share/mesh/dragon.obj, and press OK to return to the Modeler.; We now have a scene with all the components needed to handle collisions in a scene, and a visual model representing our deformable object.; Key points; This is how the collisions are performed in SOFA using these default components.; DefaultPipeline: Launch all the operations to perform the collision detection and response. Collision Detection:. Broad Phase: using ""Axis Aligned Bounding Boxes"" (AABB), we only keep potential colliding pair of objects; Narrow Phase: we use the geometrical primitives (spheres, triangles, lines, points) to test the distance between two objects. ; we use the BruteForceDetection to select which primitives will be used, and the MinProximityIntersection to detect if a collision exists between two geometrical primitives. Collision Response:. With all the colliding primitives, we create an appropriate collision response: the ContactManager gives the information about what response we have to use. ; Components are created dynamically in the graph to create repulsive forces, or constraints. In this tutorial, we will create PenalityContactForceField. . Advanced collision detection and response are implemented in SOFA, so don't hesitate to experiment other examples.; Results; Press the Run in SOFA (or press Ctrl-R), and press Animate; In this scene, we only have a OglModel corresponding to a pure visual representation of an object. ; Nothing happens.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/0_FullObject.html:1738,detect,detect,1738,examples/Tutorials/StepByStep/FullObject/0_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/0_FullObject.html,2,['detect'],"['detect', 'detection']"
Safety,ng/component/solidmechanics/fem/elastic/ParallelHexahedronFEMForceField.inl; src/MultiThreading/component/solidmechanics/fem/elastic/ParallelTetrahedronFEMForceField.h; src/MultiThreading/component/solidmechanics/fem/elastic/ParallelTetrahedronFEMForceField.inl; src/MultiThreading/component/solidmechanics/spring/ParallelStiffSpringForceField.h; src/MultiThreading/component/solidmechanics/spring/ParallelStiffSpringForceField.inl; src/MultiThreading/component/solidmechanics/spring/ParallelMeshSpringForceField.h; src/MultiThreading/component/solidmechanics/spring/ParallelMeshSpringForceField.inl; src/MultiThreading/SceneCheckMultithreading.h; src/MultiThreading/ParallelImplementationsRegistry.h; src/MultiThreading/TaskSchedulerUser.h; ). set(SOURCE_FILES; src/MultiThreading/initMultiThreading.cpp; src/MultiThreading/DataExchange.cpp; src/MultiThreading/MeanComputation.cpp; src/MultiThreading/component/animationloop/AnimationLoopParallelScheduler.cpp; src/MultiThreading/component/collision/detection/algorithm/ParallelBVHNarrowPhase.cpp; src/MultiThreading/component/collision/detection/algorithm/ParallelBruteForceBroadPhase.cpp; src/MultiThreading/component/linearsolver/iterative/ParallelCGLinearSolver.cpp; src/MultiThreading/component/mapping/linear/BeamLinearMapping_mt.cpp; src/MultiThreading/component/solidmechanics/fem/elastic/ParallelHexahedronFEMForceField.cpp; src/MultiThreading/component/solidmechanics/fem/elastic/ParallelTetrahedronFEMForceField.cpp; src/MultiThreading/component/solidmechanics/spring/ParallelStiffSpringForceField.cpp; src/MultiThreading/component/solidmechanics/spring/ParallelMeshSpringForceField.cpp; src/MultiThreading/SceneCheckMultithreading.cpp; src/MultiThreading/ParallelImplementationsRegistry.cpp; src/MultiThreading/TaskSchedulerUser.cpp; ). find_package(Sofa.Config REQUIRED); if(SOFA_ENABLE_LEGACY_HEADERS); list(APPEND HEADER_FILES; src/MultiThreading/AnimationLoopParallelScheduler.h; src/MultiThreading/AnimationLoopTasks.h; src/MultiThre,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt:2200,detect,detection,2200,applications/plugins/MultiThreading/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt,1,['detect'],['detection']
Safety,"nother tutorial.; Find the icon on the far left of the toolbar in the Modeler. It looks like a piece of paper with the corner folded, and its tool tip is New Tab. Press the button.; This will give us a scene graph with some default components.; Right click on the TreeCollisionGroupManager and select Delete.; We don't need this component for our scene.; Find the OglModel component with the Filter, and drag and drop it onto the root node. Double click the OglModel node to edit its properties.; Rename the model ""Objective"".; Under the Property 2/3 tab, find the fileMesh section. Click on the ... button to bring up the file browser. Select the file /Sofa/share/mesh/dragon.obj, and press OK to return to the Modeler.; We now have a scene with all the components needed to handle collisions in a scene, and a visual model representing our deformable object.; Key points; This is how the collisions are performed in SOFA using these default components.; DefaultPipeline: Launch all the operations to perform the collision detection and response. Collision Detection:. Broad Phase: using ""Axis Aligned Bounding Boxes"" (AABB), we only keep potential colliding pair of objects; Narrow Phase: we use the geometrical primitives (spheres, triangles, lines, points) to test the distance between two objects. ; we use the BruteForceDetection to select which primitives will be used, and the MinProximityIntersection to detect if a collision exists between two geometrical primitives. Collision Response:. With all the colliding primitives, we create an appropriate collision response: the ContactManager gives the information about what response we have to use. ; Components are created dynamically in the graph to create repulsive forces, or constraints. In this tutorial, we will create PenalityContactForceField. . Advanced collision detection and response are implemented in SOFA, so don't hesitate to experiment other examples.; Results; Press the Run in SOFA (or press Ctrl-R), and press Animate; In t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/0_FullObject.html:1349,detect,detection,1349,examples/Tutorials/StepByStep/FullObject/0_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/0_FullObject.html,1,['detect'],['detection']
Safety,ntersection/CapsuleIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/Intersector.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/Capsul,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:1529,detect,detection,1529,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,ologicalMapping: use Links for required QuadSet components [#4361](https://github.com/sofa-framework/sofa/pull/4361); - [MultiThreading] Fix failing test on ParallelImplementationsRegistry [#4392](https://github.com/sofa-framework/sofa/pull/4392); - [Helper] Fix Colormap when using HSV to RGB [#4408](https://github.com/sofa-framework/sofa/pull/4408); - [All] Fix subplugin regression tests [#4420](https://github.com/sofa-framework/sofa/pull/4420); - [sofaInfo] Fix compilation and behavior [#4422](https://github.com/sofa-framework/sofa/pull/4422); - [Core] Call super init() in MultiMapping and Multi2Mapping [#4432](https://github.com/sofa-framework/sofa/pull/4432); - [Helper] Fix new[]/delete mismatch [#4447](https://github.com/sofa-framework/sofa/pull/4447); - [CMake] Fix SOFA install [#4451](https://github.com/sofa-framework/sofa/pull/4451); - [GitHub] Fix action using github.context [#4456](https://github.com/sofa-framework/sofa/pull/4456); - [Helper] PluginManager: Check symbol (real) location and avoid calling wrong entrypoint (Mac/Linux) [#4466](https://github.com/sofa-framework/sofa/pull/4466); - [GitHUb] Fix actions using cron condition [#4468](https://github.com/sofa-framework/sofa/pull/4468); - [GitHub] Fix PR messages not properly sent [#4475](https://github.com/sofa-framework/sofa/pull/4475); - [GitHub] Use finally pull_request_target [#4476](https://github.com/sofa-framework/sofa/pull/4476); - [SofaCUDA] Fix spatial grid compilation with double [#4478](https://github.com/sofa-framework/sofa/pull/4478); - [image] Fix compilation on Windows [#4484](https://github.com/sofa-framework/sofa/pull/4484); - [Testing] Fix installation of gtest headers [#4489](https://github.com/sofa-framework/sofa/pull/4489); - [Helper] PluginManager Fix test in debug [#4491](https://github.com/sofa-framework/sofa/pull/4491); - [Topology] Fix method isQuadDeulaunayOriented and its use in splitAlongPath [#4494](https://github.com/sofa-framework/sofa/pull/4494); - [GitHub] Fix review ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:6827,avoid,avoid,6827,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['avoid'],['avoid']
Safety,om/sofa-framework/sofa/pull/1149 ); - **[SofaBaseTopology]** Add new geometric methods in TetrahedronSetGeometryAlgorythms [#1160]( https://github.com/sofa-framework/sofa/pull/1160 ); - **[SofaCore]** Remove thread specific declaration [#1129]( https://github.com/sofa-framework/sofa/pull/1129 ); - [SofaGeneralEngine] Added Rigid to Euler orientation export [#1141]( https://github.com/sofa-framework/sofa/pull/1141 ); - [SofaHaptics] Add mutex and option to lock the ForceFeedback computation [#1157]( https://github.com/sofa-framework/sofa/pull/1157 ); - **[SofaKernel]** ADD: DataTypeInfo<vector<string>> & improved doc [#1113]( https://github.com/sofa-framework/sofa/pull/1113 ); - **[SofaKernel]** Add a strict option to the BoxROI to prevent partially inside element to be in the box. [#1127]( https://github.com/sofa-framework/sofa/pull/1127 ); - **[SofaKernel]** Add fixed_array_algorithm + RGBAColor::lighten [#1172]( https://github.com/sofa-framework/sofa/pull/1172 ); - **[SofaKernel]** Add new events to detect Initialization & Simulation start. [#1173]( https://github.com/sofa-framework/sofa/pull/1173 ); - **[SofaKernel]** Add option in StiffSpringFF to track list of input springs [#1093]( https://github.com/sofa-framework/sofa/pull/1093 ); - **[SofaKernel]** Change several AdvancedTimer logs for a better tracking [#1094]( https://github.com/sofa-framework/sofa/pull/1094 ); - **[SofaKernel]** Consistent SofaFramework modules [#1200]( https://github.com/sofa-framework/sofa/pull/1200 ); - **[SofaKernel]** Make componentState a real data field [#1168]( https://github.com/sofa-framework/sofa/pull/1168 ); - [SofaMiscForceField] Use doUpdateInternal API in MeshMatrixMass [#1151]( https://github.com/sofa-framework/sofa/pull/1151 ); - [SofaQtQuick] Pass extra command-line arguments for python scenes in a more high-level function call [#992]( https://github.com/sofa-framework/sofa/pull/992 ); - [SofaSphFluid] Add sprite-based point render [#1194]( https://github.com/sofa-framew,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:246701,detect,detect,246701,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['detect'],['detect']
Safety,or.h; ${SRC_ROOT}/behavior/MultiVec.h; ${SRC_ROOT}/behavior/OdeSolver.h; ${SRC_ROOT}/behavior/PairInteractionConstraint.h; ${SRC_ROOT}/behavior/PairInteractionConstraint.inl; ${SRC_ROOT}/behavior/PairInteractionForceField.h; ${SRC_ROOT}/behavior/PairInteractionForceField.inl; ${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.h; ${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.inl; ${SRC_ROOT}/behavior/PairStateAccessor.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.inl; ${SRC_ROOT}/behavior/RotationFinder.h; ${SRC_ROOT}/behavior/StateAccessor.h; ${SRC_ROOT}/behavior/SingleMatrixAccessor.h; ${SRC_ROOT}/behavior/SingleStateAccessor.h; ${SRC_ROOT}/behavior/fwd.h; ${SRC_ROOT}/collision/BroadPhaseDetection.h; ${SRC_ROOT}/collision/CollisionAlgorithm.h; ${SRC_ROOT}/collision/CollisionGroupManager.h; ${SRC_ROOT}/collision/Contact.h; ${SRC_ROOT}/collision/ContactManager.h; ${SRC_ROOT}/collision/Detection.h; ${SRC_ROOT}/collision/DetectionOutput.h; ${SRC_ROOT}/collision/Intersection.h; ${SRC_ROOT}/collision/Intersection.inl; ${SRC_ROOT}/collision/IntersectorFactory.h; ${SRC_ROOT}/collision/NarrowPhaseDetection.h; ${SRC_ROOT}/collision/Pipeline.h; ${SRC_ROOT}/loader/BaseLoader.h; ${SRC_ROOT}/loader/ImageLoader.h; ${SRC_ROOT}/loader/MeshLoader.h; ${SRC_ROOT}/loader/SceneLoader.h; ${SRC_ROOT}/loader/VoxelLoader.h; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.h; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.h; ${SRC_ROOT}/objectmodel/AbstractDataLink.h; ${SRC_ROOT}/objectmodel/AspectPool.h; ${SRC_ROOT}/objectmodel/Base.h; ${SRC_ROOT}/objectmodel/BaseClass.h; ${SRC_ROOT}/objectmodel/BaseClassNameHelper.h; ${SRC_ROOT}/objectmodel/BaseContext.h; ${SRC_ROOT}/objectmodel/BaseData.h; ${SRC_ROOT}/objectmodel/BaseLink.h; ${SRC_ROOT}/objectmodel/BaseNode.h; ${SRC_ROOT}/objectmodel/BaseObject.h; ${SRC_ROOT}/objectmodel/BaseObjectDescription.h; ${SRC_ROOT}/objectmodel/ClassInfo.h; ${SRC_ROOT}/objectmodel/C,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:4258,Detect,DetectionOutput,4258,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['Detect'],['DetectionOutput']
Safety,parseMatrix [#2641]( https://github.com/sofa-framework/sofa/pull/2641 ); - [SofaDeformable] Spring lengths can be a list [#2602]( https://github.com/sofa-framework/sofa/pull/2602 ); - [SofaEngine] BoxROI support for 2d and 1d types [#2600]( https://github.com/sofa-framework/sofa/pull/2600 ); - [SofaGeneralEngine] Extend features of NearestPointROI [#2595]( https://github.com/sofa-framework/sofa/pull/2595 ); - [SofaGeometry] Add geometric methods in class Triangle and Edge [#2587]( https://github.com/sofa-framework/sofa/pull/2587 ); - [SofaGuiQt][WindowProfiler] Add root tree + show overhead [#2643]( https://github.com/sofa-framework/sofa/pull/2643 ); - [SofaHelper] Load image using stb [#2551]( https://github.com/sofa-framework/sofa/pull/2551 ); - [SofaHelper] Reduce AdvancedTimer overhead [#2645]( https://github.com/sofa-framework/sofa/pull/2645 ); - [SofaSimpleFem] Improve data description [#2740]( https://github.com/sofa-framework/sofa/pull/2740 ); - [SofaSimpleFem][SofaGeneralSimpleFem][SofaMiscFem] Avoid vectors normalization [#2647]( https://github.com/sofa-framework/sofa/pull/2647 ); - [SofaSimulationCore] More generic DefaultVisualManagerLoop [#2549]( https://github.com/sofa-framework/sofa/pull/2549 ); - [SofaSimulationGraph] Add the ability to control where the object is added in a node. [#2396]( https://github.com/sofa-framework/sofa/pull/2396 ); - [SofaSparseSolver] Apply fill in permutation in SparseLDLSolver [#2762]( https://github.com/sofa-framework/sofa/pull/2762 ); - [SofaSparseSolver] Introduction of an asynchronous LDL solver [#2661]( https://github.com/sofa-framework/sofa/pull/2661 ); - [SofaSparseSolver] Added the choice to compute the decomposition at each step [#2756]( https://github.com/sofa-framework/sofa/pull/2756 ). **Plugins / Projects**; - [plugins] Add BeamAdapter as a new plugin [#2890]( https://github.com/sofa-framework/sofa/pull/2890 ); - [ArticulatedSystemPlugin] ArticulatedSystemMapping new features [#2803]( https://github.com/sofa-,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:101294,Avoid,Avoid,101294,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Avoid'],['Avoid']
Safety,psuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/CapsuleContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/OBBContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). find_p,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:2877,detect,detection,2877,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,pull/2144 ); - **[SofaBaseTopology]** Improve TopologyDataHandler message [#2152]( https://github.com/sofa-framework/sofa/pull/2152 ); - **[SofaBaseTopology]** Remove definition of real [#1955]( https://github.com/sofa-framework/sofa/pull/1955 ); - **[SofaBaseTopology]** Remove warning when a Data is directly linked to a topoogy Data container [#1971]( https://github.com/sofa-framework/sofa/pull/1971 ); - **[SofaBaseTopology]** Remove warnings [#2046]( https://github.com/sofa-framework/sofa/pull/2046 ); - **[SofaBaseTopology]** Single definition of global variables [#1950]( https://github.com/sofa-framework/sofa/pull/1950 ); - **[SofaBaseUtils]** Clean RequiredPlugin [#1899]( https://github.com/sofa-framework/sofa/pull/1899 ); - **[SofaBaseVisual]** Move #include<Mat.h> from BaseCamera.h to BaseCamera.cpp [#1846]( https://github.com/sofa-framework/sofa/pull/1846 ); - **[SofaBase]** Convert tests to Sofa.Testing [#2146]( https://github.com/sofa-framework/sofa/pull/2146 ); - [SofaBoundaryCondition] Avoid ambiguity [#1958]( https://github.com/sofa-framework/sofa/pull/1958 ); - [SofaCommon] Convert tests to Sofa.Testing [#2153]( https://github.com/sofa-framework/sofa/pull/2153 ); - [SofaConstraint] Small cleaning [#2174]( https://github.com/sofa-framework/sofa/pull/2174 ); - **[SofaCore]** Deprecate operator= [#2167]( https://github.com/sofa-framework/sofa/pull/2167 ); - **[SofaCore]** Factoring code in Link.h [#1704]( https://github.com/sofa-framework/sofa/pull/1704 ); - **[SofaCore]** Merge TData in Data. [#1753]( https://github.com/sofa-framework/sofa/pull/1753 ); - **[SofaCore]** Minor cleaning in constraints [#2138]( https://github.com/sofa-framework/sofa/pull/2138 ); - **[SofaCore]** Move Link::CheckPath() method to PathResolver::CheckPath() [#1717]( https://github.com/sofa-framework/sofa/pull/1717 ); - **[SofaCore]** Move definition Link::read() method to BaseLink::read() [#1736]( https://github.com/sofa-framework/sofa/pull/1736 ); - **[SofaCore]** Move function d,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:200199,Avoid,Avoid,200199,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Avoid'],['Avoid']
Safety,r/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/CapsuleContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/OBBContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED) # for performers. add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision Sofa.GUI.Component). sofa_create_package_with_targets(; PACKAGE_NAME ${PRO,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:3238,detect,detection,3238,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,"required for each new component or if an issue is fixed.; - **Examples** (at least one) must be provided showing the new feature. ### Management of pull requests. Standard pull-requests are reviewed and approved by the ""Reviewers"" team. ; Major pull-requests (BREAKING, major features) are reviewed by the ""Reviewers"" team and approved by the ""STC members"" team through a vote within a maximum period of 2 weeks. Reviewing:. - Make sure the pull request is **labelized** and well assigned.; - Control that it follows **our rules** (defined above).; - Track the **status of each pull request** using the dedicated labels:; - ""pr: wip"" must be set if the PR has been created for a team work or if some fixes are needed (discussed in the comments).; - ""pr: to review"" must be set if the PR is ready to be reviewed. ; - ""pr: ready"" must be set **instead of merge** if another PR merge is being built on the [Dashboard](https://www.sofa-framework.org/dash/?branch=origin/master). It is used to delay the merge and avoid CI overflow.; - **Control the builds**: Dashboard > Details in the pull request checks.; - Merge method: **prefer ""merge""** or ""squash"" over ""rebase"". Remember that:. - You can **add commits** in a pull request: see [GitHub documentation](https://help.github.com/articles/committing-changes-to-a-pull-request-branch-created-from-a-fork/).; - If the pull request contains out of scope commits (from a previous merge with master), **consider rebasing it**. <center><figure><img src=""https://www.sofa-framework.org/wp-content/uploads/2022/06/GitHub-PR-review-workflow.png"" alt=""PullRequestProcess"" style=""width:75%""><figcaption align = ""center""><b>Workflow of a PR review</b></figcaption></figure></center>. For more information on forks and pull request, check out [this GitHub guide](https://guides.github.com/activities/forking/). ### SOFA Developer Certificate Of Origin (DCO). SOFA is using the [mechanism of the linux project](https://www.kernel.org/doc/html/latest/process/submittin",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:6708,avoid,avoid,6708,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['avoid'],['avoid']
Safety,"s; - API: collision mesh and visual model can be added to a Rigid Offset; - adding an automatic execution of a scene based on a sml description; - Constraint: adding a typeid for faster Constraint type comparisons; - adding short name to create a ConstantCompliantPseudoStaticSolver; - using tag on joints in a generic way, set their compliance / isCompliance value; - added machinery to map data to numpy arrays, see example/numpy_data.py; - added easy pure python mappings, see examples/numpy_mapping.py; - added pure python forcefields, see examples/numpy_forcefield.py; - AssembledRigidRigidMapping autoresize; - geometric stiffness in python mappings; - insertMergeRigid is coherent with solid tags usage; - CompliantPseudoStaticSolver: avoiding an unnecessary propagation when the stopping criterion is the nb of iterations.; - visualization in DifferenceFromTargetMapping; - Frame.py: adding a function to force quaternion normalization (to avoid numerical drift); - added SimpleAnimationLoop; - adding RigidRestJointMapping to compute a joint between a rigid body's current position and its rest position.; - large compliances are considered as null stiffnesses; - Offset default to isMechanical=True; - python quaternion log; - added nlnscg acceleration; - pure python constraints; - .inl for python mappings; - adding Addition[Multi]Mapping; - implementing AssembledMultiMapping::applyDJT; - adding DotProduct[Multi]Mapping (with tests); - adding NormalizationMapping to map a 3d vector to its normalization; - adding ConstantAssembled[Multi]Mapping; - adding SafeDistanceMapping: a distance mapping that becomes a difference mapping for too small distances.; - adding SafeDistanceFromTargetMapping; - using the new SofaPython API; - SafeDistanceFromTargetMapping can now be ""safe"" by giving the edge directions when they are known; - adding the SofaCompliant python module (first module created outside of SofaPython!); - adding DotProductFromTargetMapping (with test); - adding RigidJointF",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:353846,avoid,avoid,353846,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['avoid'],['avoid']
Safety,section/CapsuleIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/Intersector.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIn,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:1457,detect,detection,1457,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,"sition is given to the AssembledRigidRigidMapping, and then computed at init into the MO; - API: modifying the API to move an Offset; - API: adding Offset::moveOffset to apply a rigid transformation to an offset (in its local frame); - API: new parameter to add non-mechanical Offsets and MappedPoints; - API: collision mesh and visual model can be added to a Rigid Offset; - adding an automatic execution of a scene based on a sml description; - Constraint: adding a typeid for faster Constraint type comparisons; - adding short name to create a ConstantCompliantPseudoStaticSolver; - using tag on joints in a generic way, set their compliance / isCompliance value; - added machinery to map data to numpy arrays, see example/numpy_data.py; - added easy pure python mappings, see examples/numpy_mapping.py; - added pure python forcefields, see examples/numpy_forcefield.py; - AssembledRigidRigidMapping autoresize; - geometric stiffness in python mappings; - insertMergeRigid is coherent with solid tags usage; - CompliantPseudoStaticSolver: avoiding an unnecessary propagation when the stopping criterion is the nb of iterations.; - visualization in DifferenceFromTargetMapping; - Frame.py: adding a function to force quaternion normalization (to avoid numerical drift); - added SimpleAnimationLoop; - adding RigidRestJointMapping to compute a joint between a rigid body's current position and its rest position.; - large compliances are considered as null stiffnesses; - Offset default to isMechanical=True; - python quaternion log; - added nlnscg acceleration; - pure python constraints; - .inl for python mappings; - adding Addition[Multi]Mapping; - implementing AssembledMultiMapping::applyDJT; - adding DotProduct[Multi]Mapping (with tests); - adding NormalizationMapping to map a 3d vector to its normalization; - adding ConstantAssembled[Multi]Mapping; - adding SafeDistanceMapping: a distance mapping that becomes a difference mapping for too small distances.; - adding SafeDistanceFromTarge",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:353640,avoid,avoiding,353640,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['avoid'],['avoiding']
Safety,sofa/pull/288 ); - make LinearMovementConstraint accept absolute movements [#394]( https://github.com/sofa-framework/sofa/pull/394 ); - [SofaCore]; - Add some read/write free method to construct Data Read/WriteAccessor [#450]( https://github.com/sofa-framework/sofa/pull/450 ); - [SofaDefaulttype]; - MapMapSparseMatrix conversion utils with Eigen Sparse [#452]( https://github.com/sofa-framework/sofa/pull/452 ); - multTranspose method between MapMapSparseMatrix and BaseVector [#456]( https://github.com/sofa-framework/sofa/pull/456 ); - [SofaDeformable]; - Rest shape can now be given using SingleLink [#315]( https://github.com/sofa-framework/sofa/pull/315 ); - Add AngularSpringForceField [#334]( https://github.com/sofa-framework/sofa/pull/334 ); - [SofaEulerianFluid]; - Pluginizing the module [#396]( https://github.com/sofa-framework/sofa/pull/396 ); - [SofaExporter]; - Clean & test the exporter [#372]( https://github.com/sofa-framework/sofa/pull/372 ); - [SofaGraphComponent]; - Add SceneCheckerVisitor to detect missing RequiredPlugin [#306]( https://github.com/sofa-framework/sofa/pull/306 ); - Add a mechanism (SceneChecker) to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - Refactor the SceneChecker and add a new SceneChecker to test dumplicated names [#392]( https://github.com/sofa-framework/sofa/pull/392 ); - [SofaGeneralEngine]; - Add test and minor cleaning for IndexValueMapper [#319]( https://github.com/sofa-framework/sofa/pull/319 ); - Add a computeBBox to the SmoothMeshEngine [#409]( https://github.com/sofa-framework/sofa/pull/409 ); - [SofaGeneralObjectInteraction]; - issofa_attachconstraint [#501]( https://github.com/sofa-framework/sofa/pull/501 ); - [SofaMisc]; - Add a data repository at start-up time [#402]( https://github.com/sofa-framework/sofa/pull/402 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaMiscFem]; - Add hyperelasticity fem code ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:307658,detect,detect,307658,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['detect'],['detect']
Safety,"ted c++ standard binder component [#908]( https://github.com/sofa-framework/sofa/pull/908 ); - **[SofaBaseMechanics]** BarycentricMapping: spatial hashing, handle limit cases [#896]( https://github.com/sofa-framework/sofa/pull/896 ); - **[SofaBaseTopology]** Clean Topology logs and add AdvanceTimer logs [#874]( https://github.com/sofa-framework/sofa/pull/874 ); - **[SofaBaseVisual]** Add default texcoord in VisualModel [#933]( https://github.com/sofa-framework/sofa/pull/933 ); - [SofaConstraint] ADD control on constraint force in UniformConstraint [#1027]( https://github.com/sofa-framework/sofa/pull/1027 ); - **[SofaCore]** Add possibilities to draw lines on surfaces in DrawTool [#937]( https://github.com/sofa-framework/sofa/pull/937 ); - **[SofaCore]** Collision visitor primitive tests count [#930]( https://github.com/sofa-framework/sofa/pull/930 ); - **[SofaCore]** ADD Datacallback and datalink [#911]( https://github.com/sofa-framework/sofa/pull/911 ); - [SofaEngine] Avoid Crash in BoxROI when rest_position is not yet defined [#1031]( https://github.com/sofa-framework/sofa/pull/1031 ); - [SofaExporter] Add option for Regression_test to check first and last iteration [#1061]( https://github.com/sofa-framework/sofa/pull/1061 ); - [SofaGeneralAnimationLoop] Improve MechanicalMatrixMapper [#882]( https://github.com/sofa-framework/sofa/pull/882 ); - [SofaGraphComponent] Run SceneChecker at each load [#938]( https://github.com/sofa-framework/sofa/pull/938 ); - [SofaGuiQt] Change the keyboard shortcut associated to camera mode [#997]( https://github.com/sofa-framework/sofa/pull/997 ); - [SofaGuiQt] Add a profiling window based on AdvanceTimer records [#1028]( https://github.com/sofa-framework/sofa/pull/1028 ); - **[SofaKernel]** Some small changes in debug topology drawing [#952]( https://github.com/sofa-framework/sofa/pull/952 ); - **[SofaKernel]** Update Static Solver [#950]( https://github.com/sofa-framework/sofa/pull/950 ); - **[SofaKernel]** Rename TModels into Colli",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:259995,Avoid,Avoid,259995,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Avoid'],['Avoid']
Safety,tersection/BaseIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/Intersector.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/in,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:1312,detect,detection,1312,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,"the; GNU General Public License, you may choose any version ever published; by the Free Software Foundation. If the Program specifies that a proxy can decide which future; versions of the GNU General Public License can be used, that proxy's; public statement of acceptance of a version permanently authorizes you; to choose that version for the Program. Later license versions may give you additional or different; permissions. However, no additional obligations are imposed on any; author or copyright holder as a result of your choosing to follow a; later version. 15. Disclaimer of Warranty. THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY; APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT; HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY; OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,; THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR; PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM; IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF; ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. Limitation of Liability. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING; WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS; THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY; GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE; USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF; DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD; PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),; EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF; SUCH DAMAGES. 17. Interpretation of Sections 15 and 16. If the disclaimer of warranty and limitation of liability provided; above cannot be given local legal effect according to their terms,; reviewing courts shall apply local ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:49764,RISK,RISK,49764,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['RISK'],['RISK']
Safety,tic/ParallelTetrahedronFEMForceField.cpp; src/MultiThreading/component/solidmechanics/spring/ParallelStiffSpringForceField.cpp; src/MultiThreading/component/solidmechanics/spring/ParallelMeshSpringForceField.cpp; src/MultiThreading/SceneCheckMultithreading.cpp; src/MultiThreading/ParallelImplementationsRegistry.cpp; src/MultiThreading/TaskSchedulerUser.cpp; ). find_package(Sofa.Config REQUIRED); if(SOFA_ENABLE_LEGACY_HEADERS); list(APPEND HEADER_FILES; src/MultiThreading/AnimationLoopParallelScheduler.h; src/MultiThreading/AnimationLoopTasks.h; src/MultiThreading/BeamLinearMapping_mt.h; src/MultiThreading/BeamLinearMapping_mt.inl; src/MultiThreading/BeamLinearMapping_tasks.inl; src/MultiThreading/ParallelBVHNarrowPhase.h; src/MultiThreading/ParallelBruteForceBroadPhase.h; src/MultiThreading/ParallelHexahedronFEMForceField.h; src/MultiThreading/ParallelHexahedronFEMForceField.inl; ); endif(). find_package(Sofa.Simulation.Common REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.Elastic REQUIRED); sofa_find_package(Sofa.Component.Mapping.Linear REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.LinearSolver.Iterative REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Simulation.Common); target_link_libraries(${PROJECT_NAME} Sofa.Component.Collision.Detection.Algorithm); target_link_libraries(${PROJECT_NAME} Sofa.Component.SolidMechanics.FEM.Elastic); target_link_libraries(${PROJECT_NAME} Sofa.Component.Mapping.Linear); target_link_libraries(${PROJECT_NAME} Sofa.Component.StateContainer); target_link_libraries(${PROJECT_NAME} Sofa.Component.SolidMechanics.Spring); target_link_libraries(${PROJECT_NAME} Sofa.Component.LinearSolver.Iterative). ## Install rules for the library and headers; CMake packag,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt:3631,Detect,Detection,3631,applications/plugins/MultiThreading/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt,1,['Detect'],['Detection']
Safety,tion/intersection/IntrCapsuleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:1669,detect,detection,1669,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,try/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/CapsuleContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/OBBContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED) # for performers. add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). t,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:3097,detect,detection,3097,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Safety,"ts. **Architecture**; - [CMake] ADD external projects handling [#649]( https://github.com/sofa-framework/sofa/pull/649 ); - [CMake] ADD the CMAKE_WARN_DEPRECATED option in SOFA [#662]( https://github.com/sofa-framework/sofa/pull/662 ); - [CMake] Improve SOFA installation and packaging [#635]( https://github.com/sofa-framework/sofa/pull/635 ); - [CMake] Cleans for packaging [#789]( https://github.com/sofa-framework/sofa/pull/789 ). **Modules**; - [All] Refactoring in Camera, BackgroundSetting and Light [#676]( https://github.com/sofa-framework/sofa/pull/676 ); - **[SofaBaseLinearSolver]** Improve warning emission for CG [#658]( https://github.com/sofa-framework/sofa/pull/658 ); - **[SofaBaseLinearSolver]** Add ability to activate printing of debug information at runtime [#667]( https://github.com/sofa-framework/sofa/pull/667 ); - [SofaGeneralImplicitOdeSolver] FIX data field name in VariationalSymplecticSolver [#624]( https://github.com/sofa-framework/sofa/pull/624 ); - [SofaGraphComponent] ADD alias usage detection [#702]( https://github.com/sofa-framework/sofa/pull/702 ); - **[SofaLoader]** ADD support to load VTK polylines in legacy formated files [#576]( https://github.com/sofa-framework/sofa/pull/576 ); - [SofaMiscMapping] Fix rigid barycentric mapping [#710]( https://github.com/sofa-framework/sofa/pull/710 ); - **[SofaHelper]** PluginManager now checks for file existence instead of library extension match. [#621]( https://github.com/sofa-framework/sofa/pull/621 ). **Plugins / Projects**; - [HeadlessRecorder] ADD frameskip option to headless recorder [#615]( https://github.com/sofa-framework/sofa/pull/615 ); - [HeadlessRecorder] Remove avcodec dependency in HeadlessRecorder.h [#752]( https://github.com/sofa-framework/sofa/pull/752 ); - [runSofa] Save&restore the scenegraph state when live-code & add info panel [#657]( https://github.com/sofa-framework/sofa/pull/657 ); - [SofaPython] PythonScriptDataEngine (PSDE) [#583]( https://github.com/sofa-framework/sofa/pul",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:294694,detect,detection,294694,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['detect'],['detection']
Safety,"wer cmake install [#4198](https://github.com/sofa-framework/sofa/pull/4198); - [Helper] Update ComponentChange for MechanicalMatrixMapper [#4235](https://github.com/sofa-framework/sofa/pull/4235); - [LinearAlgebra] Robustify accesses to empty matrices [#4236](https://github.com/sofa-framework/sofa/pull/4236); - [Topology] Check indices out-of-bound in TriangleSetTopologyContainer [#4242](https://github.com/sofa-framework/sofa/pull/4242); - [github] Fix name of PR author in GitHub workflows [#4267](https://github.com/sofa-framework/sofa/pull/4267); - [SofaCUDA] Dont use both version of cublas (legacy or v2) [#4274](https://github.com/sofa-framework/sofa/pull/4274); - [Sofa.GUI.Qt] Add cmake module for QGLViewer [#4290](https://github.com/sofa-framework/sofa/pull/4290); - [all] Fix warnings [#4291](https://github.com/sofa-framework/sofa/pull/4291); - [LinearAlgera, Core] Fix linking with LTO on MacOS/Clang [#4293](https://github.com/sofa-framework/sofa/pull/4293); - [MultiThreading] Avoid Static Initialization Order Fiasco [#4307](https://github.com/sofa-framework/sofa/pull/4307); - [SofaCUDA] FIX compilation SofaCUDA along with SparseGrid with Cuda12 [#4319](https://github.com/sofa-framework/sofa/pull/4319); - [SofaAssimp] Fix the FindAssimp.cmake [#4326](https://github.com/sofa-framework/sofa/pull/4326); - [image] image_gui to compile with Qt6 [#4330](https://github.com/sofa-framework/sofa/pull/4330); - [Haption] Partially fix the plugin [#4338](https://github.com/sofa-framework/sofa/pull/4338); - [github] quick fix for GHD script [#4347](https://github.com/sofa-framework/sofa/pull/4347); - [github] fix stale action [#4348](https://github.com/sofa-framework/sofa/pull/4348); - [GUI] Fix compilation using QDocBrowser [#4354](https://github.com/sofa-framework/sofa/pull/4354); - [VolumetricRendering] Fix the compilation [#4398](https://github.com/sofa-framework/sofa/pull/4398); - [VolumetricRendering] Fix crashes in batch mode [#4436](https://github.com/sofa-framework/so",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:38226,Avoid,Avoid,38226,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Avoid'],['Avoid']
Safety,work/sofa/pull/4302); - [Constraint.Projective] Implement applyConstraint from new matrix assembly API [#4309](https://github.com/sofa-framework/sofa/pull/4309); - [Spring] Extract LinearSpring class in its own file [#4454](https://github.com/sofa-framework/sofa/pull/4454); - [VolumetricRendering][SofaCUDA] Move CUDA files related to VolumetricRendering [#4487](https://github.com/sofa-framework/sofa/pull/4487); - [DefaultType] Extract inner classes from SolidTypes in files [#4513](https://github.com/sofa-framework/sofa/pull/4513); - [LinearAlgebra] Refactor sparse matrix product [#4547](https://github.com/sofa-framework/sofa/pull/4547); - [plugins] Remove ExternalBehaviorModel and ManualMapping plugins [#4565](https://github.com/sofa-framework/sofa/pull/4565); - [LinearSystem.Direct] Remove metis dependency [#4588](https://github.com/sofa-framework/sofa/pull/4588); - [ODESolver] Explicit link to linear solver [#4628](https://github.com/sofa-framework/sofa/pull/4628); - [Collision.Detection.Algorithm] Rename Data [#4674](https://github.com/sofa-framework/sofa/pull/4674); - [Collision.Detection.Intersection] Rename Data [#4675](https://github.com/sofa-framework/sofa/pull/4675); - [Collision.Geometry+Response] Rename Data [#4676](https://github.com/sofa-framework/sofa/pull/4676); - [Controller+Engine] Rename Data [#4678](https://github.com/sofa-framework/sofa/pull/4678); - [IO] Rename Data [#4679](https://github.com/sofa-framework/sofa/pull/4679); - [ODESolver] Rename Data [#4680](https://github.com/sofa-framework/sofa/pull/4680); - [Playback] Rename Data [#4681](https://github.com/sofa-framework/sofa/pull/4681); - [Setting] Rename Data [#4682](https://github.com/sofa-framework/sofa/pull/4682); - [Topology] Rename Data [#4683](https://github.com/sofa-framework/sofa/pull/4683); - [Visual] Rename Data [#4684](https://github.com/sofa-framework/sofa/pull/4684); - [Constraint] Rename Data [#4696](https://github.com/sofa-framework/sofa/pull/4696); - [all] Rename depreciation,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:19271,Detect,Detection,19271,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Detect'],['Detection']
Safety,"xamples/numpy_mapping.py; - added pure python forcefields, see examples/numpy_forcefield.py; - AssembledRigidRigidMapping autoresize; - geometric stiffness in python mappings; - insertMergeRigid is coherent with solid tags usage; - CompliantPseudoStaticSolver: avoiding an unnecessary propagation when the stopping criterion is the nb of iterations.; - visualization in DifferenceFromTargetMapping; - Frame.py: adding a function to force quaternion normalization (to avoid numerical drift); - added SimpleAnimationLoop; - adding RigidRestJointMapping to compute a joint between a rigid body's current position and its rest position.; - large compliances are considered as null stiffnesses; - Offset default to isMechanical=True; - python quaternion log; - added nlnscg acceleration; - pure python constraints; - .inl for python mappings; - adding Addition[Multi]Mapping; - implementing AssembledMultiMapping::applyDJT; - adding DotProduct[Multi]Mapping (with tests); - adding NormalizationMapping to map a 3d vector to its normalization; - adding ConstantAssembled[Multi]Mapping; - adding SafeDistanceMapping: a distance mapping that becomes a difference mapping for too small distances.; - adding SafeDistanceFromTargetMapping; - using the new SofaPython API; - SafeDistanceFromTargetMapping can now be ""safe"" by giving the edge directions when they are known; - adding the SofaCompliant python module (first module created outside of SofaPython!); - adding DotProductFromTargetMapping (with test); - adding RigidJointFromTargetMapping and RigidJointFromWorldFrameMapping; - add of complementary API to create deformable articulated systems; - adding NegativeUnilateralConstraint to guarantee negativeness; - adding PenaltyForceField and using it in penalty contact response; - add of two file from the SohusimDev plugin. - [image]; - API: Sampler.addMechanicalObject() more versatile; - API: refactor python API; - API: add addClosingVisual(); - add function in python API to retrieve perspective p",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:354468,Safe,SafeDistanceMapping,354468,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Safe'],['SafeDistanceMapping']
Safety,"y the Free Software; Foundation. 10. If you wish to incorporate parts of the Program into other free; programs whose distribution conditions are different, write to the author; to ask for permission. For software which is copyrighted by the Free; Software Foundation, write to the Free Software Foundation; we sometimes; make exceptions for this. Our decision will be guided by the two goals; of preserving the free status of all derivatives of our free software and; of promoting the sharing and reuse of software generally. 			 NO WARRANTY. 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY; FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN; OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES; PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED; OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF; MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS; TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE; PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,; REPAIR OR CORRECTION. 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING; WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR; REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,; INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING; OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED; TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY; YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER; PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE; POSSIBILITY OF SUCH DAMAGES. 		 END OF TERMS AND CONDITIONS. 	 How to Apply These Terms to Your New Programs. If you develop a new program, and you want it to be of the greatest; possible use to the public, the best way to achieve this is to make it; free sof",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:15205,RISK,RISK,15205,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['RISK'],['RISK']
Safety,{COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). set(SOURCE_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.cpp ; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/ge,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:2426,detect,detection,2426,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['detect'],['detection']
Security, ${SRC_ROOT}/BackTrace.h; ${SRC_ROOT}/cast.h; ${SRC_ROOT}/ColorMap.h; ${SRC_ROOT}/ComponentChange.h; ${SRC_ROOT}/DiffLib.h; ${SRC_ROOT}/Factory.h; ${SRC_ROOT}/Factory.inl; ${SRC_ROOT}/TypeInfo.h; ${SRC_ROOT}/FnDispatcher.h; ${SRC_ROOT}/FnDispatcher.inl; ${SRC_ROOT}/GenerateRigid.h; ${SRC_ROOT}/IndexOpenMP.h; ${SRC_ROOT}/LCPcalc.h; ${SRC_ROOT}/MarchingCubeUtility.h; ${SRC_ROOT}/MatEigen.h; ${SRC_ROOT}/MemoryManager.h; ${SRC_ROOT}/NameDecoder.h; ${SRC_ROOT}/narrow_cast.h; ${SRC_ROOT}/OptionsGroup.h; ${SRC_ROOT}/OwnershipSPtr.h; ${SRC_ROOT}/Polynomial_LD.h; ${SRC_ROOT}/Polynomial_LD.inl; ${SRC_ROOT}/RandomGenerator.h; ${SRC_ROOT}/SimpleTimer.h; ${SRC_ROOT}/ScopedAdvancedTimer.h; ${SRC_ROOT}/SortedPermutation.h; ${SRC_ROOT}/StringUtils.h; ${SRC_ROOT}/TagFactory.h; ${SRC_ROOT}/TriangleOctree.h; ${SRC_ROOT}/Utils.h; ${SRC_ROOT}/accessor.h; ${SRC_ROOT}/decompose.h; ${SRC_ROOT}/decompose.inl; ${SRC_ROOT}/deque.h; ${SRC_ROOT}/hash.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/integer_id.h; ${SRC_ROOT}/accessor/ReadAccessor.h; ${SRC_ROOT}/accessor/ReadAccessorVector.h; ${SRC_ROOT}/accessor/WriteAccessor.h; ${SRC_ROOT}/accessor/WriteAccessorVector.h; ${SRC_ROOT}/accessor/WriteOnlyAccessor.h; ${SRC_ROOT}/io/BaseFileAccess.h; ${SRC_ROOT}/io/FileAccess.h; ${SRC_ROOT}/io/File.h; ${SRC_ROOT}/io/Image.h; ${SRC_ROOT}/io/ImageDDS.h; ${SRC_ROOT}/io/ImageRAW.h; ${SRC_ROOT}/io/XspLoader.h; ${SRC_ROOT}/io/Mesh.h; ${SRC_ROOT}/io/MeshOBJ.h; ${SRC_ROOT}/io/MeshGmsh.h; ${SRC_ROOT}/io/MeshTopologyLoader.h; ${SRC_ROOT}/io/SphereLoader.h; ${SRC_ROOT}/io/STBImage.h; ${SRC_ROOT}/io/TriangleLoader.h; ${SRC_ROOT}/kdTree.h; ${SRC_ROOT}/kdTree.inl; ${SRC_ROOT}/list.h; ${SRC_ROOT}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h;,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:1457,access,accessor,1457,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['access'],['accessor']
Security, Cleaning. - [MechanicalLoad] Add buildStiffnessMatrix to TrianglePressureForceField [#4294](https://github.com/sofa-framework/sofa/pull/4294); - [Simulation.Core] Remove usage of ill-used nodeData in MechanicalGetNonDiagonalMassesCountVisitor and MechanicalVDotVisitor [#4328](https://github.com/sofa-framework/sofa/pull/4328); - [Simulation.Core] BaseMechanicalVisitor: Deprecate rootData [#4350](https://github.com/sofa-framework/sofa/pull/4350); - [LinearAlgebra] Use class template argument deduction with MatrixExpr [#4351](https://github.com/sofa-framework/sofa/pull/4351); - [LinearAlgebra] constexpr if statement when possible [#4352](https://github.com/sofa-framework/sofa/pull/4352); - [LinearAlgebra] Factorize template specializations of filterValues in CRS matrix [#4355](https://github.com/sofa-framework/sofa/pull/4355); - [CImgPlugin] Add fetchable CImg and remove embedded cimg [#4357](https://github.com/sofa-framework/sofa/pull/4357); - [Mapping.Linear] Replace a few beginEdit by accessors [#4363](https://github.com/sofa-framework/sofa/pull/4363); - [SofaSimpleGUI] Fix calls to deprecated functions [#4390](https://github.com/sofa-framework/sofa/pull/4390); - [Type] Remove test of a deprecated constructor [#4391](https://github.com/sofa-framework/sofa/pull/4391); - [Core] Remove pragma directive in cpp file [#4393](https://github.com/sofa-framework/sofa/pull/4393); - [All] Rename license file into LICENSE-LGPL.md to follow github repository rules [#4410](https://github.com/sofa-framework/sofa/pull/4410); - [SofaCUDA] Generalize the use of MessageDispatcher in SofaCUDA [#4430](https://github.com/sofa-framework/sofa/pull/4430); - [Core] Add documentation for the method BaseMapping::buildGeometricStiffnessMatrix [#4431](https://github.com/sofa-framework/sofa/pull/4431); - [LinearAlgebra] Factorize value filtering [#4442](https://github.com/sofa-framework/sofa/pull/4442); - [GitHub] Clean existing actions [#4444](https://github.com/sofa-framework/sofa/pull/4444); -,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:12919,access,accessors,12919,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['accessors']
Security," CudaVec3f/CudaVec3f1 [#3004](https://github.com/sofa-framework/sofa/pull/3004) ; - [SofaCUDA] Make CudaConstantForceField compatible with CudaRigid types [#3164](https://github.com/sofa-framework/sofa/pull/3164) ; - [GUI.performer] Add remove elements function for LineCollisionModel [#3239](https://github.com/sofa-framework/sofa/pull/3239) ; - [Regression] Test Eigen solvers scenes for regression [#3326](https://github.com/sofa-framework/sofa/pull/3326); - [Regression] Add HexahedronFEMForceFieldAndMass to regression tests [#3367](https://github.com/sofa-framework/sofa/pull/3367) ; - [SofaCarving] Update and add more tests in SofaCarving_test [#3407](https://github.com/sofa-framework/sofa/pull/3407) ; - [SofaCuda] Add method in CudaVector Accessor and CudaBilateralInteractionConstraint [#3460](https://github.com/sofa-framework/sofa/pull/3460) ; - [SofaPhysicsAPI] Add several methods using output parameters [#3520](https://github.com/sofa-framework/sofa/pull/3520) ; - [SofaPhysicsAPI] Add C bindings to access C++ api [#3539](https://github.com/sofa-framework/sofa/pull/3539) ; - [SofaPhysicsAPI] Add methods and C bindings to load SOFA ini file, plugins and messageHandler [#3540](https://github.com/sofa-framework/sofa/pull/3540) . ### Bug Fixes. **Architecture**; - [Config] Rename ide folder for libraries [#3214](https://github.com/sofa-framework/sofa/pull/3214) ; - [CMake] FIX parent modules library consistency [#3225](https://github.com/sofa-framework/sofa/pull/3225) ; - [CMake] FIX out-of-tree SofaGui and runSofa locations [#3229](https://github.com/sofa-framework/sofa/pull/3229); - [Sofa.Type] Fix compile-time Mat and Vec [#3281](https://github.com/sofa-framework/sofa/pull/3281) ; - [Simulation.Core] Fix import of required plugins [#3322](https://github.com/sofa-framework/sofa/pull/3322) ; - [Topology] Fix internal infinite update loop in TopologySubsetData remove process [#3330](https://github.com/sofa-framework/sofa/pull/3330) ; - [Topology] Update getLastElemen",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:76687,access,access,76687,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['access']
Security," Such a; work, in isolation, is not a derivative work of the Library, and; therefore falls outside the scope of this License. However, linking a ""work that uses the Library"" with the Library; creates an executable that is a derivative of the Library (because it; contains portions of the Library), rather than a ""work that uses the; library"". The executable is therefore covered by this License.; Section 6 states terms for distribution of such executables. When a ""work that uses the Library"" uses material from a header file; that is part of the Library, the object code for the work may be a; derivative work of the Library even though the source code is not.; Whether this is true is especially significant if the work can be; linked without the Library, or if the work is itself a library. The; threshold for this to be true is not precisely defined by law. If such an object file uses only numerical parameters, data; structure layouts and accessors, and small macros and small inline; functions (ten lines or less in length), then the use of the object; file is unrestricted, regardless of whether it is legally a derivative; work. (Executables containing this object code plus portions of the; Library will still fall under Section 6.). Otherwise, if the work is a derivative of the Library, you may; distribute the object code for the work under the terms of Section 6.; Any executables containing that work also fall under Section 6,; whether or not they are linked directly with the Library itself. 6. As an exception to the Sections above, you may also combine or; link a ""work that uses the Library"" with the Library to produce a; work containing portions of the Library, and distribute that work; under terms of your choice, provided that the terms permit; modification of the work for the customer's own use and reverse; engineering for debugging such modifications. You must give prominent notice with each copy of the work that the; Library is used in it and that the Library and its",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:13488,access,accessors,13488,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['access'],['accessors']
Security," You want to run a lot of simulation from you own python script. In this case you should look at the file ""integration_example.py"". This example shows how to start simulation in sequence, in parallel or using a cluster. The example also shows how all the simulation results are returned back to your script so you can implement your own number-crunching processing on them, e.g.: plotting graphs with *matplotlib*. - You don't want to write your own python script but still want to start a lot a lot of simulations you should have a look at the sofa-launcher.py application.; Example:; ```batch; ./sofa-launcher example.json; ```. This application is controlled via a json configuration file; ```json; {; ""files"": [; ""example.scn"",; ""example.py""; ],; ""variables"": [; {; ""GRAVITYXML"": ""1 2 3"",; ""nbIterations"": 1000; },; {; ""GRAVITYXML"": ""2 3 4"",; ""nbIterations"": 1000; }; ],; ""launcher"": ""parallel"",; ""numjobs"": 5,; ""resultsstyle"": ""results.thtml"",; ""resultsfile"": ""results.html""; }; ```; with:. - files: The sofa files with your scene; - variables: Some values in your scene can be changed automatically in each run of your scene ; You can use any name as $MYVALUE...it depend on what you put in your scene. ; in my example scene I replace the $GRAVITYXML with a different value at each run; - launcher: Indicate to launch the simulations in parallel (other choice are sequential or ssh); - numjobs: with a maximum of 5 simulation in parallel; - resultsstyle: Name of the report file template, here html but it could be anything else (eg latex array); - resultsfile: The file generated from the template and the results. NB:. - To run the distributed version of the launcher you need all hosts to share directories as well as being able to login using ssh+key (no password login).; - Depending on the files you are using in your scene you may need to protect certain symbols: see [https://pythonhosted.org/Cheetah/users_guide/](https://pythonhosted.org/cheetah/users_guide/parserinstructions.html); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/README.md:2124,password,password,2124,tools/sofa-launcher/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/README.md,1,['password'],['password']
Security, [#1895]( https://github.com/sofa-framework/sofa/pull/1895 ). ____________________________________________________________. ## [v20.12.01]( https://github.com/sofa-framework/sofa/tree/v20.12.01 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.00...v20.12.01 ). ### Improvements; **Modules**; - [SofaGui] Improve background v20.12 [#1758]( https://github.com/sofa-framework/sofa/pull/1758 ); - **[SofaHelper]** ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). **Plugins / Projects**; - [SofaPython] ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). ### Bug Fixes; **Architecture**; - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ). **Modules**; - [All] FIX build without SofaPython soft dependencies [#1829]( https://github.com/sofa-framework/sofa/pull/1829 ); - [All] Fix invalid Memory access in MechanicalObject and Compliant_test [#1849]( https://github.com/sofa-framework/sofa/pull/1849 ); - [All] Almost green dashboard [#1669]( https://github.com/sofa-framework/sofa/pull/1669 ); - **[SofaCore_test]** Update the two failling tests so they match the new convention for TypeInfo [#1709]( https://github.com/sofa-framework/sofa/pull/1709 ); - **[SofaDefaultType]** FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - **[SofaBaseMechanics]** fixes reinit of BarycentricMapping [#1815]( https://github.com/sofa-framework/sofa/pull/1815 ); - [SofaGuiCommon] Fix computationTimeSampling [#1698]( https://github.com/sofa-framework/sofa/pull/1698 ); - [SofaGuiCommon] fix BackgroundSetting [#1826]( https://github.com/sofa-framework/sofa/pull/1826 ); - [SofaGuiQt] ADD qt.conf.h for custom qt.conf loading at runtime [#1820]( https://github.com/sofa-framework/sofa/pull/1820 ); - [SofaGuiQt] Fix Export Graph option [#1785]( https://github.com/sofa-framework,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:211306,access,access,211306,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['access']
Security," alternative is; allowed only for noncommercial distribution and only if you; received the program in object code or executable form with such; an offer, in accord with Subsection b above.). The source code for a work means the preferred form of the work for; making modifications to it. For an executable work, complete source; code means all the source code for all modules it contains, plus any; associated interface definition files, plus the scripts used to; control compilation and installation of the executable. However, as a; special exception, the source code distributed need not include; anything that is normally distributed (in either source or binary; form) with the major components (compiler, kernel, and so on) of the; operating system on which the executable runs, unless that component; itself accompanies the executable. If distribution of executable or object code is made by offering; access to copy from a designated place, then offering equivalent; access to copy the source code from the same place counts as; distribution of the source code, even though third parties are not; compelled to copy the source along with the object code. 4. You may not copy, modify, sublicense, or distribute the Program; except as expressly provided under this License. Any attempt; otherwise to copy, modify, sublicense or distribute the Program is; void, and will automatically terminate your rights under this License.; However, parties who have received copies, or rights, from you under; this License will not have their licenses terminated so long as such; parties remain in full compliance. 5. You are not required to accept this License, since you have not; signed it. However, nothing else grants you permission to modify or; distribute the Program or its derivative works. These actions are; prohibited by law if you do not accept this License. Therefore, by; modifying or distributing the Program (or any work based on the; Program), you indicate your acceptance of this License to ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:8699,access,access,8699,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,12,['access'],['access']
Security," from SOFA repository [#2508]( https://github.com/sofa-framework/sofa/pull/2508 ). ### Breaking. **Architecture**. **Modules**; - [All] Unused include directive [#2475]( https://github.com/sofa-framework/sofa/pull/2475 ); - [All] Merge TopologySubsetData and TopologySparseData [#2114]( https://github.com/sofa-framework/sofa/pull/2114 ); - [All] Merge branch topologyChanges_PoC introducing topological changes callbacks [#2228]( https://github.com/sofa-framework/sofa/pull/2228 ); - [All] Remove ForceMask [#2316]( https://github.com/sofa-framework/sofa/pull/2316 ); - [All] Update collision response names [#2522]( https://github.com/sofa-framework/sofa/pull/2522 ); - [Sofa.BaseTopology] Remove 1D template for 2D/3D primitives in topology algorithms [#2291]( https://github.com/sofa-framework/sofa/pull/2291 ); - [Sofa.Core] Deprecate officially the usage of SofaOStream (sout, serr, sendl in Base) [#2292]( https://github.com/sofa-framework/sofa/pull/2292 ); - [Sofa.Core] Factorize mstate access [#2438]( https://github.com/sofa-framework/sofa/pull/2438 ); - [Sofa.Core] Use links instead of private std::list [#2364]( https://github.com/sofa-framework/sofa/pull/2364 ); - [Sofa.LinearAlgebra] Fix typo 'bloc' -> 'block' [#2404]( https://github.com/sofa-framework/sofa/pull/2404 ); - [SofaBaseLinearSolver] Clean MatrixLinearSolver [#2195]( https://github.com/sofa-framework/sofa/pull/2195 ); - [SofaBaseTopology] Disable method createTopologyHandler with a TopologyHandler* as parameter [#2393]( https://github.com/sofa-framework/sofa/pull/2393 ); - [SofaBaseTopology] Fix Last element index update in TopologyData [#2359]( https://github.com/sofa-framework/sofa/pull/2359 ); - [SofaCore] Clean RotationMatrix [#1995]( https://github.com/sofa-framework/sofa/pull/1995 ); - [SofaGUI] Replace boost's program_options with cxxopts [#2263]( https://github.com/sofa-framework/sofa/pull/2263 ); - [SofaGuiQt] FIX screenshot mechanism [#2507]( https://github.com/sofa-framework/sofa/pull/2507 ); - [",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:136835,access,access,136835,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['access']
Security, header in fixed_array [#2006]( https://github.com/sofa-framework/sofa/pull/2006 ); - **[SofaBaseCollision]** Fix pipeline warning test [#2132]( https://github.com/sofa-framework/sofa/pull/2132 ); - **[SofaBaseCollision]** Clean code related to intersection methods [#2178]( https://github.com/sofa-framework/sofa/pull/2178 ); - **[SofaBaseMechanics]** Clean DiagonalMass init [#2186]( https://github.com/sofa-framework/sofa/pull/2186 ); - **[SofaBaseMechanics]** Restore tests commented by mistake [#2104]( https://github.com/sofa-framework/sofa/pull/2104 ); - **[SofaBaseMechanics]** fixes reinit of BarycentricMapping [#1815]( https://github.com/sofa-framework/sofa/pull/1815 ); - **[SofaBaseMechanics]** Fix bug when deleting point. Mass vector was not well recomputed. [#2164]( https://github.com/sofa-framework/sofa/pull/2164 ); - **[SofaBaseMechanics_test]** Add more checks in DiagonalMass_test [#2183]( https://github.com/sofa-framework/sofa/pull/2183 ); - **[SofaBaseTopology]** Add security in TopologyData to check input Topology pointer [#2027]( https://github.com/sofa-framework/sofa/pull/2027 ); - **[SofaBaseTopology]** Missing override keyword [#2035]( https://github.com/sofa-framework/sofa/pull/2035 ); - **[SofaBaseTopology]** correct the logic issue in computeEdgeSegmentIntersection [#2184]( https://github.com/sofa-framework/sofa/pull/2184 ); - [SofaConstraint] Fix symbol export of BilateralInteractionConstraint on RigidTypes [#2031]( https://github.com/sofa-framework/sofa/pull/2031 ); - **[SofaCore]** FIX Issue #1865 [#1866]( https://github.com/sofa-framework/sofa/pull/1866 ); - **[SofaCore]** FIX buffer overflow when using AddressSanitizer [#2121]( https://github.com/sofa-framework/sofa/pull/2121 ); - **[SofaCore]** Fix explicit instantiations with MultiMapping [#1982]( https://github.com/sofa-framework/sofa/pull/1982 ); - **[SofaCore]** Remove duplicated explicit instanciation [#1981]( https://github.com/sofa-framework/sofa/pull/1981 ); - **[SofaDefaultType][Sofa,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:183421,secur,security,183421,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['secur'],['security']
Security," https://github.com/sofa-framework/sofa/pull/3050 ); - [LinearSolver] Introduce Eigen solvers [#2926]( https://github.com/sofa-framework/sofa/pull/2926 ); - [Regression] Test linear solvers for regression [#2776]( https://github.com/sofa-framework/sofa/pull/2776 ); - [SceneUtility] Move RequiredPlugin to Sofa.SimulationCore [#2849]( https://github.com/sofa-framework/sofa/pull/2849 ); - [Simulation.Core] Special message if extension is Python [#2998]( https://github.com/sofa-framework/sofa/pull/2998 ); - [Sofa.Config][MSVC] Change SIMD cmake option and flags [#2652]( https://github.com/sofa-framework/sofa/pull/2652 ); - [Sofa.GL] Add method drawScaledTetrahedron [#2586]( https://github.com/sofa-framework/sofa/pull/2586 ); - [Sofa.GUI.Common] Change the current GUI by default choice [#2979]( https://github.com/sofa-framework/sofa/pull/2979 ); - [Sofa.LinearAlgebra] Test CRS product compared to Eigen [#2839]( https://github.com/sofa-framework/sofa/pull/2839 ); - [SofaCore] By default, state accessors get the bbox of their states [#2780]( https://github.com/sofa-framework/sofa/pull/2780 ); - [SofaDefaultType] Speedup MapMapSparseMatrix [#2641]( https://github.com/sofa-framework/sofa/pull/2641 ); - [SofaDeformable] Spring lengths can be a list [#2602]( https://github.com/sofa-framework/sofa/pull/2602 ); - [SofaEngine] BoxROI support for 2d and 1d types [#2600]( https://github.com/sofa-framework/sofa/pull/2600 ); - [SofaGeneralEngine] Extend features of NearestPointROI [#2595]( https://github.com/sofa-framework/sofa/pull/2595 ); - [SofaGeometry] Add geometric methods in class Triangle and Edge [#2587]( https://github.com/sofa-framework/sofa/pull/2587 ); - [SofaGuiQt][WindowProfiler] Add root tree + show overhead [#2643]( https://github.com/sofa-framework/sofa/pull/2643 ); - [SofaHelper] Load image using stb [#2551]( https://github.com/sofa-framework/sofa/pull/2551 ); - [SofaHelper] Reduce AdvancedTimer overhead [#2645]( https://github.com/sofa-framework/sofa/pull/2645 ); -",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:100140,access,accessors,100140,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['accessors']
Security, on Silicon M1) [#2160]( https://github.com/sofa-framework/sofa/pull/2160 ); - **[Sofa.Type]** Clean Quat [#1878]( https://github.com/sofa-framework/sofa/pull/1878 ); - **[SofaBaseCollision]** REFACTOR BruteForceDetection [#1999]( https://github.com/sofa-framework/sofa/pull/1999 ); - **[SofaBaseLinearSolver]** Cleaning in FullMatrix & FullVector & MechanicalState [#1792]( https://github.com/sofa-framework/sofa/pull/1792 ); - **[SofaBaseLinearSolver]** Document and clean CGLinearSolver [#2098]( https://github.com/sofa-framework/sofa/pull/2098 ); - **[SofaBaseMechanics]** Restore useRestPos Data initialization for BarycentricMapping [#1939]( https://github.com/sofa-framework/sofa/pull/1939 ); - **[SofaBaseTopology]** Clean RenumberPoints methods [#1840]( https://github.com/sofa-framework/sofa/pull/1840 ); - **[SofaBaseTopology]** Remove getter to some Data in Topology container and put them public [#1947]( https://github.com/sofa-framework/sofa/pull/1947 ); - **[SofaBaseTopology]** Remove public access to propagateTopologyChanges [#1860]( https://github.com/sofa-framework/sofa/pull/1860 ); - **[SofaBaseTopology]** Rename TopologyEngine and TopologyData classes to match file names [#1872]( https://github.com/sofa-framework/sofa/pull/1872 ); - **[SofaBaseTopology]** Secure All Topology modifiers API [#1859]( https://github.com/sofa-framework/sofa/pull/1859 ); - **[SofaBaseTopology]** Secure PointSetTopologyModifier API [#1858]( https://github.com/sofa-framework/sofa/pull/1858 ); - **[SofaBaseTopology]** Totally remove topologyEngine and move mechanism only in TopologyData and TopologyHandler [#1898]( https://github.com/sofa-framework/sofa/pull/1898 ); - **[SofaCore]** Base::findLinkDest returns Base* instead of void* [#1700]( https://github.com/sofa-framework/sofa/pull/1700 ); - **[SofaCore]** FIX SingleLink clear/set behavior [#1749]( https://github.com/sofa-framework/sofa/pull/1749 ); - **[SofaCore]** Move definition of Link::updateLinks to BaseLink.h [#1735]( https://,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:172777,access,access,172777,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['access']
Security," restrictions translate to certain responsibilities for you if you; distribute copies of the software, or if you modify it. For example, if you distribute copies of such a program, whether; gratis or for a fee, you must give the recipients all the rights that; you have. You must make sure that they, too, receive or can get the; source code. And you must show them these terms so they know their; rights. We protect your rights with two steps: (1) copyright the software, and; (2) offer you this license which gives you legal permission to copy,; distribute and/or modify the software. Also, for each author's protection and ours, we want to make certain; that everyone understands that there is no warranty for this free; software. If the software is modified by someone else and passed on, we; want its recipients to know that what they have is not the original, so; that any problems introduced by others will not reflect on the original; authors' reputations. Finally, any free program is threatened constantly by software; patents. We wish to avoid the danger that redistributors of a free; program will individually obtain patent licenses, in effect making the; program proprietary. To prevent this, we have made it clear that any; patent must be licensed for everyone's free use or not licensed at all. The precise terms and conditions for copying, distribution and; modification follow. 		 GNU GENERAL PUBLIC LICENSE; TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION. 0. This License applies to any program or other work which contains; a notice placed by the copyright holder saying it may be distributed; under the terms of this General Public License. The ""Program"", below,; refers to any such program or work, and a ""work based on the Program""; means either the Program or any derivative work under copyright law:; that is to say, a work containing the Program or a portion of it,; either verbatim or with modifications and/or translated into another; language. (Hereinafte",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:3406,threat,threatened,3406,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['threat'],['threatened']
Security," restrictions translate to certain responsibilities for you if you; distribute copies of the software, or if you modify it. For example, if you distribute copies of such a program, whether; gratis or for a fee, you must give the recipients all the rights that; you have. You must make sure that they, too, receive or can get the; source code. And you must show them these terms so they know their; rights. We protect your rights with two steps: (1) copyright the software, and; (2) offer you this license which gives you legal permission to copy,; distribute and/or modify the software. Also, for each author's protection and ours, we want to make certain; that everyone understands that there is no warranty for this free; software. If the software is modified by someone else and passed on, we; want its recipients to know that what they have is not the original, so; that any problems introduced by others will not reflect on the original; authors' reputations. Finally, any free program is threatened constantly by software; patents. We wish to avoid the danger that redistributors of a free; program will individually obtain patent licenses, in effect making the; program proprietary. To prevent this, we have made it clear that any; patent must be licensed for everyone's free use or not licensed at all. The precise terms and conditions for copying, distribution and; modification follow. GNU GENERAL PUBLIC LICENSE; TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION. 0. This License applies to any program or other work which contains; a notice placed by the copyright holder saying it may be distributed; under the terms of this General Public License. The ""Program"", below,; refers to any such program or work, and a ""work based on the Program""; means either the Program or any derivative work under copyright law:; that is to say, a work containing the Program or a portion of it,; either verbatim or with modifications and/or translated into another; language. (Hereinafter, ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:2435,threat,threatened,2435,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,5,['threat'],['threatened']
Security," semicolons in for statements: `for (unsigned int i = 0; i < container.size(); i++)`; ```cpp; for (unsigned int i = 0; i < container.size(); ++i ); {; if ((a + b) > c); {; doSomething(a, b, c);; }; }; ```. - Template declarations are split on two lines; ; ```cpp; template<class T>; static void dynamicCast(T*& ptr, Base* b);; ```. ### Commenting; Code must be commented in a Doxygen compliant way. ; Most used commands are `///` or `/**` before blocks and `///<` after member declarations. ; Please DO NOT use `//` or `///` after member declarations. ; Example ; ```cpp; /**; * @brief MechanicalObject class; */; template <class DataTypes>; class MechanicalObject : public sofa::core::behavior::MechanicalState<DataTypes>; {; Data< bool > d_showObject; ///< Show objects. (default=false); Data< defaulttype::Vec4f > d_color; ///< drawing color; Data< bool > d_isToPrint; ///< ignore some Data for file export. /// @name New vectors access API based on VecId; /// @{; virtual Data< VecCoord >* write(core::VecCoordId v);; virtual const Data< VecCoord >* read(core::ConstVecCoordId v) const;. virtual Data< VecDeriv >* write(core::VecDerivId v);; virtual const Data< VecDeriv >* read(core::ConstVecDerivId v) const;; /// @}. /** \brief Reorder values according to parameter.; *; * Result of this method is :; * newValue[ i ] = oldValue[ index[i] ];; */; void renumberValues( const sofa::helper::vector<unsigned int> &index );. /// Force the position of a point (and force its velocity to zero value); void forcePointPosition( const unsigned int i, const sofa::helper::vector< double >& m_x);; ; /// src and dest must have the same size.; /// Performs: dest[i][j] += src[offset + i][j] 0<= i < src_entries 0<= j < 3 (for 3D objects) 0 <= j < 2 (for 2D objects); /// @param offset the offset in the BaseVector where the scalar values will be used. It will be updated to the first scalar value after the ones used by this operation when this method returns; virtual void addFromBaseVectorSameSize(core::Ve",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:3193,access,access,3193,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,1,['access'],['access']
Security,"# Welcome. Welcome to the SOFA Community! Here is a brief summary of how it is structured:. - SOFA Users: people using SOFA by writing scenes or using the SOFA API.; - SOFA Developers: people programming into SOFA, modifying the API, writing plugins.; - SOFA Contributors: (awesome) people proposing their changes in SOFA code via pull-requests.; - SOFA Reviewers: people reviewing and merging the pull-requests. This group is validated by the Scientific and Technical Committee (STC).; - SOFA Consortium: research centers and companies willing to share the cost of development and maintenance of SOFA, hosted by Inria.; - SOFA Consortium Staff: administrators of SOFA and its ecosystem. This group is directed by the Executive Committee (EC). All SOFA Developers are gladly invited to the SOFA-dev meetings. ; They take place remotely every Wednesday at 10 a.m. CET and are animated by the SOFA Reviewers + the Consortium Staff. ; [Subscribe to SOFA-dev mailing-list](https://sympa.inria.fr/sympa/subscribe/sofa-dev) to get the agenda, reports and conference room url. About the steering committees:. - SOFA Scientific and Technical Committee (STC): defines the technical roadmap twice a year, validate the contribution rules, the Reviewers team and discuss every technical point in SOFA.; - SOFA Executive Committee (EC): decides on evolutions of the membership contract, the communication policy and the priorities of the Consortium. A more detailed definition of the committees is available [in the SOFA website](https://www.sofa-framework.org/consortium/presentation/). # Getting started. Please **read carefully** [the GitHub guide on Contributing to Open Source](https://guides.github.com/activities/contributing-to-open-source/). We also recommend you to check this [more detailed documentation on issues and pull requests](https://help.github.com/categories/collaborating-with-issues-and-pull-requests/). # Support - Discussion forum. For any **question** (help needed, problem of understandi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:427,validat,validated,427,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['validat'],['validated']
Security,"#3500](https://github.com/sofa-framework/sofa/pull/3500) ; - [MechanicalLoad] Move getValue call out of the loops [#3503](https://github.com/sofa-framework/sofa/pull/3503) . **Plugins / Projects**; - [SofaCUDA] Add ConstraintCorrection instantiation in CudaVec3f/CudaVec3f1 [#3004](https://github.com/sofa-framework/sofa/pull/3004) ; - [SofaCUDA] Make CudaConstantForceField compatible with CudaRigid types [#3164](https://github.com/sofa-framework/sofa/pull/3164) ; - [GUI.performer] Add remove elements function for LineCollisionModel [#3239](https://github.com/sofa-framework/sofa/pull/3239) ; - [Regression] Test Eigen solvers scenes for regression [#3326](https://github.com/sofa-framework/sofa/pull/3326); - [Regression] Add HexahedronFEMForceFieldAndMass to regression tests [#3367](https://github.com/sofa-framework/sofa/pull/3367) ; - [SofaCarving] Update and add more tests in SofaCarving_test [#3407](https://github.com/sofa-framework/sofa/pull/3407) ; - [SofaCuda] Add method in CudaVector Accessor and CudaBilateralInteractionConstraint [#3460](https://github.com/sofa-framework/sofa/pull/3460) ; - [SofaPhysicsAPI] Add several methods using output parameters [#3520](https://github.com/sofa-framework/sofa/pull/3520) ; - [SofaPhysicsAPI] Add C bindings to access C++ api [#3539](https://github.com/sofa-framework/sofa/pull/3539) ; - [SofaPhysicsAPI] Add methods and C bindings to load SOFA ini file, plugins and messageHandler [#3540](https://github.com/sofa-framework/sofa/pull/3540) . ### Bug Fixes. **Architecture**; - [Config] Rename ide folder for libraries [#3214](https://github.com/sofa-framework/sofa/pull/3214) ; - [CMake] FIX parent modules library consistency [#3225](https://github.com/sofa-framework/sofa/pull/3225) ; - [CMake] FIX out-of-tree SofaGui and runSofa locations [#3229](https://github.com/sofa-framework/sofa/pull/3229); - [Sofa.Type] Fix compile-time Mat and Vec [#3281](https://github.com/sofa-framework/sofa/pull/3281) ; - [Simulation.Core] Fix import of re",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:76419,Access,Accessor,76419,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Access'],['Accessor']
Security,"- [SofaGuiQt] Remove sec unit from GUI [#2742]( https://github.com/sofa-framework/sofa/pull/2742 ); - [SofaGuiQt] Rename attributes to follow SOFA guidelines. [#2944]( https://github.com/sofa-framework/sofa/pull/2944 ); - [SofaKernel] fix shadow variable [#2791]( https://github.com/sofa-framework/sofa/pull/2791 ); - [SofaMiscCollision] Extract OBB/Capsule code into its own plugin [#2820]( https://github.com/sofa-framework/sofa/pull/2820 ); - [SofaMiscFEM] Clean FastTetrahedralCorotationalForceField and add extraData [#2569]( https://github.com/sofa-framework/sofa/pull/2569 ); - [SofaMiscForceField] Fix type conversion in tests [#2714]( https://github.com/sofa-framework/sofa/pull/2714 ); - [SofaRigid][SofaGeneralSimpleFem] Fix typos [#2947]( https://github.com/sofa-framework/sofa/pull/2947 ); - [SofaSimpleFEM_test] Add tests on Tetrahedron, CorotationalTetrahedral and FastTetrahedral FEM ForceField [#2842]( https://github.com/sofa-framework/sofa/pull/2842 ); - [SofaSimpleFem] Prefer usage of accessor in HexahedronFEMForceField [#2778]( https://github.com/sofa-framework/sofa/pull/2778 ); - [SofaSimulation] Remove DAGNodeMultiMappingElement [#2694]( https://github.com/sofa-framework/sofa/pull/2694 ); - [SofaSparseSolver] Disable matrix export in SparseLDLSolver [#2725]( https://github.com/sofa-framework/sofa/pull/2725 ); - [SofaSparseSolver] SparseLUSolver and SparseCholeskySolver support fill reducing permutation [#2788]( https://github.com/sofa-framework/sofa/pull/2788 ); - [SofaTest] Move last tests to Sofa.Component [#2996]( https://github.com/sofa-framework/sofa/pull/2996 ); - [SofaTest] Remove last usages and make it optional [#3000]( https://github.com/sofa-framework/sofa/pull/3000 ); - [SofaUserInteraction] remove shadow variable [#2795]( https://github.com/sofa-framework/sofa/pull/2795 ); - [SolidMechanics.FEM.HyperElastic] Reformat and clean TetrahedronHyperelasticityFEMForceField [#3141]( https://github.com/sofa-framework/sofa/pull/3141 ); - [SolidMechanics] ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:128957,access,accessor,128957,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['accessor']
Security,". Topology Linear Different Mesh. Description. 	The aim of this tutorial is to show the different ways to create linear mesh topologies. In this tutorial, three linear pendulums are represented, implying:; 	 ; A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A mesh spring forcefield to create springs between points; An ODE scheme and a linear solver to solve the system at each time step.; And a topological component. Key points. 	There are three possible ways to build a linear mesh using the components:; 	; MeshTopology, to create a static mesh. I.e a component able to handle different topologies (2D/3D), either triangles, tetrahedra, quads, or hexahedra. But this component is only a container. This means, the structure can be accessed, as well as further information. But no modifications are possible.; RegularGridTopology, to create a regular mesh. I.e a component able to create a mesh (no mesh file needed) with a regular grid, by giving the boundaries and the scaling.; EdgeSetTopologyContainer, to create a dynamic mesh. I.e a component able to handle only edge topology, but, other classes can be added to perform topological operations. Classes are EdgeSetTopologyModifier (for unitary operation), EdgeSetTopologyAlgorithms (for more complex topological operations) and EdgeSetGeometryAlgorithms (to couple topology algorithms and geometry positions). . Results. 	Thus, when simulate, the three models will act as a pendulum, the same way.; 	. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyLinearDifferentMesh.html:777,access,accessed,777,examples/Tutorials/Topologies/TopologyLinearDifferentMesh.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyLinearDifferentMesh.html,1,['access'],['accessed']
Security,". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/.github/PULL_REQUEST_TEMPLATE.md:165,Certificate,Certificate,165,.github/PULL_REQUEST_TEMPLATE.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/.github/PULL_REQUEST_TEMPLATE.md,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,". simpleBoundaryConditions.html. simpleBoundaryConditions.scn; Description:; An FEM cube is stretched using a pressure field applied on one face, while the opposite face is maintained on a plane.; This scene contains typical boundary conditions involved in mechanical validations:; Surface pressure. Constraining particles to a plane, or to a line, or to a point. Interesting Point:. 		The constraints allow the constrained particles to freely slide on the plane without global translation or rotation.; The pressure applies uniform forces.; As a result, the object keeps a box shape with plane, orthogonal faces. See Also:. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Demos/chainHybridNoGroup.html:268,validat,validations,268,examples/Demos/chainHybridNoGroup.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Demos/chainHybridNoGroup.html,2,['validat'],['validations']
Security,.com/sofa-framework/sofa/pull/3348) ; - [All] Reduce calls to getValue [#3356](https://github.com/sofa-framework/sofa/pull/3356) ; - [all] Remove in-class typedefs pointing to common sofa::type [#3357](https://github.com/sofa-framework/sofa/pull/3357) ; - [Lagrangian.Solver] Move MechanicalGetConstraintResolutionVisitor in its own files [#3390](https://github.com/sofa-framework/sofa/pull/3390) ; - [Lagrangian.Solver] Move MechanicalGetConstraintViolationVisitor in its own files [#3391](https://github.com/sofa-framework/sofa/pull/3391) ; - [Lagrangian.Solver] Move ConstraintStoreLambdaVisitor in visitors folder [#3392](https://github.com/sofa-framework/sofa/pull/3392) ; - [Topology.Mapping] Types cleaning in Edge2QuadTopologicalMapping [#3408](https://github.com/sofa-framework/sofa/pull/3408) ; - [SolidMechanics.FEM] Clean and optimise TriangularFEMForceField draw method [#3413](https://github.com/sofa-framework/sofa/pull/3413); - [Topology.Mapping] Replace all beginEdit by writeAccessor to access Loc2GlobMap [#3429](https://github.com/sofa-framework/sofa/pull/3429) ; - [All] Fix unnecessary copy to access topology buffer when const ref can be used [#3446](https://github.com/sofa-framework/sofa/pull/3446) ; - [Lagrangian.Solver] Merge duplicated code into small but expressive functions [#3474](https://github.com/sofa-framework/sofa/pull/3474) ; - [all] Remove compilation warnings [#3494](https://github.com/sofa-framework/sofa/pull/3494) ; - [FEM.Elastic] Clean draw method [#3508](https://github.com/sofa-framework/sofa/pull/3508) ; - [all] Lifecycle v22.12 [#3534](https://github.com/sofa-framework/sofa/pull/3534) . **Plugins / Projects**; - [tutorials] Fix CMakeLists targets [#3200](https://github.com/sofa-framework/sofa/pull/3200) ; - [Project] Start v22.12 dev phase [#3218](https://github.com/sofa-framework/sofa/pull/3218) ; - [SofaImplicitField] Fix CMake for new NG architecture [#3223](https://github.com/sofa-framework/sofa/pull/3223); - [SofaValidation] is a plugi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:88804,access,access,88804,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['access']
Security,/ComponentChange.h; ${SRC_ROOT}/DiffLib.h; ${SRC_ROOT}/Factory.h; ${SRC_ROOT}/Factory.inl; ${SRC_ROOT}/TypeInfo.h; ${SRC_ROOT}/FnDispatcher.h; ${SRC_ROOT}/FnDispatcher.inl; ${SRC_ROOT}/GenerateRigid.h; ${SRC_ROOT}/IndexOpenMP.h; ${SRC_ROOT}/LCPcalc.h; ${SRC_ROOT}/MarchingCubeUtility.h; ${SRC_ROOT}/MatEigen.h; ${SRC_ROOT}/MemoryManager.h; ${SRC_ROOT}/NameDecoder.h; ${SRC_ROOT}/narrow_cast.h; ${SRC_ROOT}/OptionsGroup.h; ${SRC_ROOT}/OwnershipSPtr.h; ${SRC_ROOT}/Polynomial_LD.h; ${SRC_ROOT}/Polynomial_LD.inl; ${SRC_ROOT}/RandomGenerator.h; ${SRC_ROOT}/SimpleTimer.h; ${SRC_ROOT}/ScopedAdvancedTimer.h; ${SRC_ROOT}/SortedPermutation.h; ${SRC_ROOT}/StringUtils.h; ${SRC_ROOT}/TagFactory.h; ${SRC_ROOT}/TriangleOctree.h; ${SRC_ROOT}/Utils.h; ${SRC_ROOT}/accessor.h; ${SRC_ROOT}/decompose.h; ${SRC_ROOT}/decompose.inl; ${SRC_ROOT}/deque.h; ${SRC_ROOT}/hash.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/integer_id.h; ${SRC_ROOT}/accessor/ReadAccessor.h; ${SRC_ROOT}/accessor/ReadAccessorVector.h; ${SRC_ROOT}/accessor/WriteAccessor.h; ${SRC_ROOT}/accessor/WriteAccessorVector.h; ${SRC_ROOT}/accessor/WriteOnlyAccessor.h; ${SRC_ROOT}/io/BaseFileAccess.h; ${SRC_ROOT}/io/FileAccess.h; ${SRC_ROOT}/io/File.h; ${SRC_ROOT}/io/Image.h; ${SRC_ROOT}/io/ImageDDS.h; ${SRC_ROOT}/io/ImageRAW.h; ${SRC_ROOT}/io/XspLoader.h; ${SRC_ROOT}/io/Mesh.h; ${SRC_ROOT}/io/MeshOBJ.h; ${SRC_ROOT}/io/MeshGmsh.h; ${SRC_ROOT}/io/MeshTopologyLoader.h; ${SRC_ROOT}/io/SphereLoader.h; ${SRC_ROOT}/io/STBImage.h; ${SRC_ROOT}/io/TriangleLoader.h; ${SRC_ROOT}/kdTree.h; ${SRC_ROOT}/kdTree.inl; ${SRC_ROOT}/list.h; ${SRC_ROOT}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/sy,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:1537,access,accessor,1537,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['access'],['accessor']
Security,"/sofa-framework/sofa/tree/v23.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v22.12..v23.06 ). ### Highlighted contributions. - [LinearSystem] Refactor matrix assembly [#2777](https://github.com/sofa-framework/sofa/pull/2777) ; - [Core] Introduce parallel for each [#3548](https://github.com/sofa-framework/sofa/pull/3548) ; - [MultiThreading] Introduce ParallelTetrahedronFEMForceField [#3552](https://github.com/sofa-framework/sofa/pull/3552) ; - [examples] Apply Sofa/Component structure for all examples [#3588](https://github.com/sofa-framework/sofa/pull/3588) . ### Breaking. **Architecture**; - [all] Lifecycle v23.06 1/n [#3634](https://github.com/sofa-framework/sofa/pull/3634) ; - [all] Lifecycle v23.06 2/n [#3649](https://github.com/sofa-framework/sofa/pull/3649) ; - [all] Lifecycle v23.06 3/n [#3654](https://github.com/sofa-framework/sofa/pull/3654) ; - [all] Lifecycle v23.06 4/n [#3655](https://github.com/sofa-framework/sofa/pull/3655) ; - [Core] Use std::function for Link's Validator (and fix UB) [#3665](https://github.com/sofa-framework/sofa/pull/3665) ; - [Helper] Improve OptionsGroup [#3737](https://github.com/sofa-framework/sofa/pull/3737) ; - [Simulation] Suggest required plugin in the syntax of the scene loader [#3799](https://github.com/sofa-framework/sofa/pull/3799) . **Modules**; - [Mapping] Adds template to RigidMapping [#3680](https://github.com/sofa-framework/sofa/pull/3680) ; - [Analyze] Raw pointers to Links [#3683](https://github.com/sofa-framework/sofa/pull/3683) ; - [MechanicalLoad] Stupid check for consistency between state and topology [#3692](https://github.com/sofa-framework/sofa/pull/3692) ; - [Mapping.NonLinear] Geometric stiffness method in an OptionsGroup [#3740](https://github.com/sofa-framework/sofa/pull/3740) ; - [Core.Visual, Component.Visual] Create VisualState (formerly Vec3State) [#3782](https://github.com/sofa-framework/sofa/pull/3782) . **Plugins / Projects**; - [MultiThreading] Factorize task scheduler user",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:51087,Validat,Validator,51087,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Validat'],['Validator']
Security,"6 ); - [SofaDeformable] Forgot minus sign in #2429 [#2448]( https://github.com/sofa-framework/sofa/pull/2448 ); - [SofaGUICommon] Fix configuration file for install with cxxopts [#2279]( https://github.com/sofa-framework/sofa/pull/2279 ); - [SofaGeneralEngine] Fix a typo in the PairBoxRoi.inl [#2324]( https://github.com/sofa-framework/sofa/pull/2324 ); - [SofaGeneralLoader] Make GridMeshCreator work again [#2473]( https://github.com/sofa-framework/sofa/pull/2473 ); - [SofaGuiQt] Fix graph update on startup [#2458]( https://github.com/sofa-framework/sofa/pull/2458 ); - [SofaGuiQt] Revert #2458 [#2479]( https://github.com/sofa-framework/sofa/pull/2479 ); - [SofaGuiQt] Some fixes for Qt6 [#2490]( https://github.com/sofa-framework/sofa/pull/2490 ); - [SofaGuiQt] Switch name and class name for slaves [#2371]( https://github.com/sofa-framework/sofa/pull/2371 ); - [SofaKernel] Remove ambiguous constructors from type::vector [#2270]( https://github.com/sofa-framework/sofa/pull/2270 ); - [SofaKernel] Remove the getXXXAccessor in accessor.h to keep the one in Data.h [#2278]( https://github.com/sofa-framework/sofa/pull/2278 ); - [SofaMeshCollision, SofaConstraint] Remove LMDNewProximityIntersection [#2272]( https://github.com/sofa-framework/sofa/pull/2272 ); - [SofaMeshCollision] Fix cmake generated config file [#2400]( https://github.com/sofa-framework/sofa/pull/2400 ); - [SofaMeshCollision] Fix compilation without Compatiblity layer [#2227]( https://github.com/sofa-framework/sofa/pull/2227 ); - [SofaMiscCollision] Fix the BarycentricStickContact response [#2509]( https://github.com/sofa-framework/sofa/pull/2509 ); - [SofaMiscForceField] Fix MeshMatrixMass init and topologicalChanges [#2193]( https://github.com/sofa-framework/sofa/pull/2193 ); - [SofaMiscForceField] Fix addForce function in MeshMatrixMass [#2305]( https://github.com/sofa-framework/sofa/pull/2305 ); - [SofaSimpleFem] Check topology in draw [#2478]( https://github.com/sofa-framework/sofa/pull/2478 ); - [SofaSim",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:150896,access,accessor,150896,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['accessor']
Security,"620) ; - [defaulttype] Fix cuda template instantiation [#3646](https://github.com/sofa-framework/sofa/pull/3646); - [Core] Fix UB (misaligned address) when comparing string [#3664](https://github.com/sofa-framework/sofa/pull/3664) ; - [Helper, GL] Fix various memleaks [#3671](https://github.com/sofa-framework/sofa/pull/3671) ; - [Helper] ArgumentParser: Fix map insertion when parsing more than once [#3672](https://github.com/sofa-framework/sofa/pull/3672) ; - [Defaulttype] Add generic precision aliases for Mat templates [#3675](https://github.com/sofa-framework/sofa/pull/3675) ; - [Config] Disable SOFA_EXTERN_TEMPLATE [#3678](https://github.com/sofa-framework/sofa/pull/3678) ; - [all] Simple robustification [#3685](https://github.com/sofa-framework/sofa/pull/3685) ; - [Helper] Fix FileRepository::relativeToPath [#3693](https://github.com/sofa-framework/sofa/pull/3693) ; - [Core] Fix MSVC warning in Link [#3763](https://github.com/sofa-framework/sofa/pull/3763) ; - [Core] Access cumulative sum of VecIds through proxy class [#3918](https://github.com/sofa-framework/sofa/pull/3918) . **Modules**; - [GUI] Fix CMake Packaging [#3595](https://github.com/sofa-framework/sofa/pull/3595) ; - [Component.Engine] Replace some explicit instanciations on double with SReal [#3629](https://github.com/sofa-framework/sofa/pull/3629) ; - [Topology.Container.Grid] RegularGrid: Fix rounding errors with SReal=float [#3636](https://github.com/sofa-framework/sofa/pull/3636); - [Collision.Geometry] Fix transparency while displaying the Bounding Collision Cubemodel [#3658](https://github.com/sofa-framework/sofa/pull/3658) ; - [MechanicalLoad] Fix ConstantForceField when no force given [#3670](https://github.com/sofa-framework/sofa/pull/3670) ; - [Collision] Make the (CubeModel) BoundingTree deterministic [#3687](https://github.com/sofa-framework/sofa/pull/3687) ; - [IO.Mesh] Fix UB when filename is empty [#3689](https://github.com/sofa-framework/sofa/pull/3689) ; - [FEM.Elastic] Check for null",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:56284,Access,Access,56284,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Access'],['Access']
Security,"987]( https://github.com/sofa-framework/sofa/pull/2987 ); - [Config] Remove unused option SOFA_WITH_DEPRECATED_COMPONENTS [#3172]( https://github.com/sofa-framework/sofa/pull/3172 ); - [Constraint.Lagrangian.Solver] Convert double to SReal [#2922]( https://github.com/sofa-framework/sofa/pull/2922 ); - [Core.Topology] Fix info message when Topology given to topologyHandler is not dynamic [#3142]( https://github.com/sofa-framework/sofa/pull/3142 ); - [Core.Topology] Remove array quadsInHexahedronArray, QuadsOrientationInHexahedronArray should be used [#2995]( https://github.com/sofa-framework/sofa/pull/2995 ); - [Core] Extract BaseLinearSolver class into its own files [#2938]( https://github.com/sofa-framework/sofa/pull/2938 ); - [DefaultType] Prevent division by zero [#2929]( https://github.com/sofa-framework/sofa/pull/2929 ); - [FEM.Elastic] Fix typo on Poisson's ratio [#2911]( https://github.com/sofa-framework/sofa/pull/2911 ); - [FEM.Elastic] Minor changes in TetraXX FEM at init and to be able to access Data [#2845]( https://github.com/sofa-framework/sofa/pull/2845 ); - [FEM.Elastic] Simplify addkToMatrix in TriangularFEMForceFieldOptim [#2861]( https://github.com/sofa-framework/sofa/pull/2861 ); - [FEM.HyperElastic] Remove optimization based on type of matrix in StandardTetrahedralFEMForceField [#2858]( https://github.com/sofa-framework/sofa/pull/2858 ); - [LMConstraint] Remove LMConstraint folder as it is an external plugin [#2828]( https://github.com/sofa-framework/sofa/pull/2828 ); - [LinearSolver.Direct] Minor clean up in SparseCholeskySolver [#2881]( https://github.com/sofa-framework/sofa/pull/2881 ); - [LinearSolver.Direct] Move advice message into parse method [#3029]( https://github.com/sofa-framework/sofa/pull/3029 ); - [LinearSolver.Iterative] Clean floating point types in CG [#2808]( https://github.com/sofa-framework/sofa/pull/2808 ); - [LinearSolver] Remove explicit template instantiation for floating point types different from SReal [#2939]( https://",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:122179,access,access,122179,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['access']
Security,; ${SRC_ROOT}/Factory.h; ${SRC_ROOT}/Factory.inl; ${SRC_ROOT}/TypeInfo.h; ${SRC_ROOT}/FnDispatcher.h; ${SRC_ROOT}/FnDispatcher.inl; ${SRC_ROOT}/GenerateRigid.h; ${SRC_ROOT}/IndexOpenMP.h; ${SRC_ROOT}/LCPcalc.h; ${SRC_ROOT}/MarchingCubeUtility.h; ${SRC_ROOT}/MatEigen.h; ${SRC_ROOT}/MemoryManager.h; ${SRC_ROOT}/NameDecoder.h; ${SRC_ROOT}/narrow_cast.h; ${SRC_ROOT}/OptionsGroup.h; ${SRC_ROOT}/OwnershipSPtr.h; ${SRC_ROOT}/Polynomial_LD.h; ${SRC_ROOT}/Polynomial_LD.inl; ${SRC_ROOT}/RandomGenerator.h; ${SRC_ROOT}/SimpleTimer.h; ${SRC_ROOT}/ScopedAdvancedTimer.h; ${SRC_ROOT}/SortedPermutation.h; ${SRC_ROOT}/StringUtils.h; ${SRC_ROOT}/TagFactory.h; ${SRC_ROOT}/TriangleOctree.h; ${SRC_ROOT}/Utils.h; ${SRC_ROOT}/accessor.h; ${SRC_ROOT}/decompose.h; ${SRC_ROOT}/decompose.inl; ${SRC_ROOT}/deque.h; ${SRC_ROOT}/hash.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/integer_id.h; ${SRC_ROOT}/accessor/ReadAccessor.h; ${SRC_ROOT}/accessor/ReadAccessorVector.h; ${SRC_ROOT}/accessor/WriteAccessor.h; ${SRC_ROOT}/accessor/WriteAccessorVector.h; ${SRC_ROOT}/accessor/WriteOnlyAccessor.h; ${SRC_ROOT}/io/BaseFileAccess.h; ${SRC_ROOT}/io/FileAccess.h; ${SRC_ROOT}/io/File.h; ${SRC_ROOT}/io/Image.h; ${SRC_ROOT}/io/ImageDDS.h; ${SRC_ROOT}/io/ImageRAW.h; ${SRC_ROOT}/io/XspLoader.h; ${SRC_ROOT}/io/Mesh.h; ${SRC_ROOT}/io/MeshOBJ.h; ${SRC_ROOT}/io/MeshGmsh.h; ${SRC_ROOT}/io/MeshTopologyLoader.h; ${SRC_ROOT}/io/SphereLoader.h; ${SRC_ROOT}/io/STBImage.h; ${SRC_ROOT}/io/TriangleLoader.h; ${SRC_ROOT}/kdTree.h; ${SRC_ROOT}/kdTree.inl; ${SRC_ROOT}/list.h; ${SRC_ROOT}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/syst,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:1575,access,accessor,1575,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['access'],['accessor']
Security,"; - **[SofaBaseLinearSolver]** Cleaning in FullMatrix & FullVector & MechanicalState [#1792]( https://github.com/sofa-framework/sofa/pull/1792 ); - **[SofaBaseLinearSolver]** Document and clean CGLinearSolver [#2098]( https://github.com/sofa-framework/sofa/pull/2098 ); - **[SofaBaseMechanics]** Restore useRestPos Data initialization for BarycentricMapping [#1939]( https://github.com/sofa-framework/sofa/pull/1939 ); - **[SofaBaseTopology]** Clean RenumberPoints methods [#1840]( https://github.com/sofa-framework/sofa/pull/1840 ); - **[SofaBaseTopology]** Remove getter to some Data in Topology container and put them public [#1947]( https://github.com/sofa-framework/sofa/pull/1947 ); - **[SofaBaseTopology]** Remove public access to propagateTopologyChanges [#1860]( https://github.com/sofa-framework/sofa/pull/1860 ); - **[SofaBaseTopology]** Rename TopologyEngine and TopologyData classes to match file names [#1872]( https://github.com/sofa-framework/sofa/pull/1872 ); - **[SofaBaseTopology]** Secure All Topology modifiers API [#1859]( https://github.com/sofa-framework/sofa/pull/1859 ); - **[SofaBaseTopology]** Secure PointSetTopologyModifier API [#1858]( https://github.com/sofa-framework/sofa/pull/1858 ); - **[SofaBaseTopology]** Totally remove topologyEngine and move mechanism only in TopologyData and TopologyHandler [#1898]( https://github.com/sofa-framework/sofa/pull/1898 ); - **[SofaCore]** Base::findLinkDest returns Base* instead of void* [#1700]( https://github.com/sofa-framework/sofa/pull/1700 ); - **[SofaCore]** FIX SingleLink clear/set behavior [#1749]( https://github.com/sofa-framework/sofa/pull/1749 ); - **[SofaCore]** Move definition of Link::updateLinks to BaseLink.h [#1735]( https://github.com/sofa-framework/sofa/pull/1735 ); - **[SofaCore]** Moves MechanicaMatrix out of MultiMatrix.h [#1870]( https://github.com/sofa-framework/sofa/pull/1870 ); - **[SofaCore]** Remove ""depend"" from Node [#1763]( https://github.com/sofa-framework/sofa/pull/1763 ); - **[SofaCo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:173051,Secur,Secure,173051,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Secur'],['Secure']
Security,; - [BatchGUI] Show progress bar [#4168](https://github.com/sofa-framework/sofa/pull/4168); - [Constraint.Lagrangian.Solver] Another step to factorize both constraint solvers [#4213](https://github.com/sofa-framework/sofa/pull/4213); - [all] Replace tinyxml by external tinyxml2 [#4240](https://github.com/sofa-framework/sofa/pull/4240). ### Improvements; - [all] Add namespaces in the factory and a python-like import mechanism [#2512](https://github.com/sofa-framework/sofa/pull/2512); - [IO][Tests] Add basic test for the MeshSTLLoader [#2999](https://github.com/sofa-framework/sofa/pull/2999); - [SofaCarving] Add an example written in python [#3457](https://github.com/sofa-framework/sofa/pull/3457); - [MultiThreading] Implement domain decomposition for a lock-free parallelism [#3566](https://github.com/sofa-framework/sofa/pull/3566); - [Components] Add functions to visualization of TetrahedronFemForceField [#3821](https://github.com/sofa-framework/sofa/pull/3821); - [LinearAlgebra] Change access specifier for the method set [#3834](https://github.com/sofa-framework/sofa/pull/3834); - [Mapping.NonLinear] Warns when non-symmetric matrix is produced [#3838](https://github.com/sofa-framework/sofa/pull/3838); - [Spring] Limit spring force to some axis [#3849](https://github.com/sofa-framework/sofa/pull/3849); - [Spring] Limit spring force to some axis [#3850](https://github.com/sofa-framework/sofa/pull/3850); - [Constraint] Add tag to classify constraints [#3888](https://github.com/sofa-framework/sofa/pull/3888); - [Spring] Rename RestShapeSpringsForceField to a more user-oriented name [#3903](https://github.com/sofa-framework/sofa/pull/3903); - [Mapping.NonLinear] Implement buildGeometricStiffnessMatrix for DistanceFromTargetMapping + example [#3921](https://github.com/sofa-framework/sofa/pull/3921); - [Config] Allow fast math mode for gcc/clang [#3922](https://github.com/sofa-framework/sofa/pull/3922); - [all] Use NVI design pattern for drawVisual [#3931](https://github.c,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:25225,access,access,25225,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['access']
Security,= SofaValidation. This plugin provide tools to validate simulations.; ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaValidation/README.md:47,validat,validate,47,applications/collections/deprecated/modules/SofaValidation/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaValidation/README.md,1,['validat'],['validate']
Security,"BLE 0); endif(); if(${SOFA_FLOATING_POINT_TYPE} STREQUAL double); set(SOFA_WITH_DOUBLE 1); set(SOFA_WITH_FLOAT 0); endif(). # Options; option(SOFA_DETECTIONOUTPUT_FREEMOTION ""Compile Sofa with the DETECTIONOUTPUT_FREEMOTION macro defined."" OFF); option(SOFA_NO_UPDATE_BBOX ""Compile Sofa with the SOFA_NO_UPDATE_BBOX macro defined."" OFF); option(SOFA_DUMP_VISITOR_INFO ""Compile Sofa with the SOFA_DUMP_VISITOR_INFO macro defined."" OFF); if(MSVC); option(SOFA_VECTORIZE ""(deprecated) Enable the use of SSE2 instructions by the compiler (Only available for MSVC)."" OFF); option(SOFA_ENABLE_SIMD ""Enable the use of SIMD instructions by the compiler (AVX/AVX2 for msvc, march=native for gcc/clang)."" OFF); endif(); option(SOFA_ENABLE_FAST_MATH ""Enable floating-point model to fast (theoretically faster but can bring unexpected results/bugs)."" OFF). ### SOFA_DEV_TOOL; option(SOFA_WITH_DEVTOOLS ""Compile with development extra features."" ON). # Variables to expose in configured files; sofa_set_01(SOFA_NO_UPDATE_BBOX_ VALUE ${SOFA_NO_UPDATE_BBOX}) # build_option_bbox.h.in. # Create build and install versions of etc/sofa.ini:; # - In build dir, sofa.ini contains absolute paths to distant (in source) share/ and examples/ dirs; # - In install dir, sofa.ini (generated later via installedSofa.ini) contains relative paths to local share/ and examples/ dirs; set(SHARE_DIR ""${CMAKE_SOURCE_DIR}/share""); set(EXAMPLES_DIR ""${CMAKE_SOURCE_DIR}/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/sofa.ini""); set(SHARE_DIR ""../share/sofa""); set(EXAMPLES_DIR ""../share/sofa/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini"" DESTINATION etc RENAME sofa.ini COMPONENT applications). set(SOFACONFIGSRC_ROOT ""src/sofa""); set(HEADER_FILES; ${SOFACONFIGSRC_ROOT}/config.h.in; ${SOFACONFIGSRC_ROOT}/version.h.in; ${SOFACONFIGSRC_ROOT}/url.h.in; ); set(SOURCE_FILES; ${SOFACONFIGSRC_ROOT}/initSofaConfi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:2909,expose,expose,2909,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['expose'],['expose']
Security,"CMAKE_CURRENT_SOURCE_DIR}/runSofa.rc""); endif(). if(APPLE AND SOFA_BUILD_APP_BUNDLE); add_executable(${PROJECT_NAME} MACOSX_BUNDLE ${RC_FILES} ${RESOURCE_FILES} ${HEADER_FILES} ${SOURCE_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES MACOSX_BUNDLE_INFO_PLIST ""${CMAKE_CURRENT_SOURCE_DIR}/runSofa.plist""); else(); add_executable(${PROJECT_NAME} ${RC_FILES} ${RESOURCE_FILES} ${HEADER_FILES} ${SOURCE_FILES}); endif(). target_compile_definitions(${PROJECT_NAME} PUBLIC ""CONFIG_PLUGIN_FILENAME=${_configPluginFileName}""); target_compile_definitions(${PROJECT_NAME} PUBLIC ""DEFAULT_CONFIG_PLUGIN_FILENAME=${_defaultConfigPluginFileName}""). target_link_libraries(${PROJECT_NAME} Sofa.Simulation.Graph); target_link_libraries(${PROJECT_NAME} Sofa.GUI.Common); target_link_libraries(${PROJECT_NAME} Sofa.GUI.Batch); target_link_libraries(${PROJECT_NAME} SceneChecking). if(Sofa.Component.Playback_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.Component.Playback); else(); message(WARNING ""runSofa: Sofa.Component.Playback not found, disabling validation feature.""); endif(). if(SOFA_BUILD_TESTS); add_subdirectory(runSofa_test); endif(). # Create build and install versions of .ini file for resources finding; set(RESOURCES_DIR ""${CMAKE_CURRENT_SOURCE_DIR}/resources""); configure_file(""${CMAKE_CURRENT_SOURCE_DIR}/etc/${PROJECT_NAME}.ini.in"" ""${CMAKE_BINARY_DIR}/etc/${PROJECT_NAME}.ini""); set(RESOURCES_DIR ""../share/sofa/gui/runSofa""); configure_file(""${CMAKE_CURRENT_SOURCE_DIR}/etc/${PROJECT_NAME}.ini.in"" ""${CMAKE_BINARY_DIR}/etc/installed${PROJECT_NAME}.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installed${PROJECT_NAME}.ini"" DESTINATION etc RENAME ${PROJECT_NAME}.ini COMPONENT applications). install(DIRECTORY ""resources/"" DESTINATION ""share/sofa/gui/runSofa"" COMPONENT resources). sofa_add_targets_to_package(; PACKAGE_NAME Sofa.GUI; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""${CMAKE_CURRENT_SOURCE_DIR}""; INCLUDE_INSTALL_DIR ""Sofa.GUI/runSofa""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/runSofa/CMakeLists.txt:2720,validat,validation,2720,applications/projects/runSofa/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/runSofa/CMakeLists.txt,1,['validat'],['validation']
Security,"ERSION}"" VERSION_EQUAL 4.6); list(APPEND SOFACONFIG_COMPILE_OPTIONS_RELEASE ""-fno-partial-inlining""); endif(). # stack-protector; list(APPEND SOFACONFIG_COMPILE_OPTIONS_RELEASE ""-fstack-protector;--param=ssp-buffer-size=4""); # _FORTIFY_SOURCE; list(APPEND SOFACONFIG_COMPILE_OPTIONS_RELEASE ""-D_FORTIFY_SOURCE=2""). if(CMAKE_BUILD_TYPE MATCHES ""Release""); # ???; list(APPEND SOFACONFIG_LINK_OPTIONS ""-Wl,--no-undefined;-lc""); endif(). endif(). ## GCC/Clang-specific; if(${CMAKE_CXX_COMPILER_ID} MATCHES ""GNU"" OR ${CMAKE_CXX_COMPILER_ID} MATCHES ""Clang""); # Warnings; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-Wall;-W;-Wno-padded""). # Silence attribute warnings (for example, ignored already defined external template); target_compile_options(${PROJECT_NAME} PUBLIC -Wno-attributes). if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-ffast-math""); endif(). option(SOFA_ENABLE_THREAD_SANITIZER ""Enable thread sanitizer (only gcc or clang)"" OFF); if(SOFA_ENABLE_THREAD_SANITIZER); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-fsanitize=thread""); list(APPEND SOFACONFIG_LINK_OPTIONS ""-fsanitize=thread""); endif(); endif(). ## Windows-specific; if(WIN32); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-D_USE_MATH_DEFINES""); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-D_CRT_SECURE_NO_WARNINGS""); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-D_CRT_NONSTDC_NO_DEPRECATE""). set(SOFA_MSVC_NB_COMPILER_PROCESSES ""0"" CACHE STRING ""The maximum number of processes that the compiler can create. 0 (default) for the number of effective processors on the computer""); if (SOFA_MSVC_NB_COMPILER_PROCESSES EQUAL ""0""); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/MP""); else(); if (SOFA_MSVC_NB_COMPILER_PROCESSES MATCHES ""^[0-9]+$""); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/MP${SOFA_MSVC_NB_COMPILER_PROCESSES}""); else(); message(FATAL_ERROR ""A number is expected for SOFA_MSVC_NB_COMPILER_PROCESSES""); endif(); endif(). list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/wd4250;/wd4251;/wd4275;/wd4675;/wd4661""); # 4661: no suitabl",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:7344,sanitiz,sanitizer,7344,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['sanitiz'],['sanitizer']
Security,"Modules**; - [All] Remove commented code & fix trivial issues [#1693]( https://github.com/sofa-framework/sofa/pull/1693 ); - [All] Remove useless pragma guards in cpp files [#1929]( https://github.com/sofa-framework/sofa/pull/1929 ); - [All] CLEAN tests, use CMake weak dependencies [#1886]( https://github.com/sofa-framework/sofa/pull/1886 ); - [All] Disable Drawtool functions using Vec4f [#2197]( https://github.com/sofa-framework/sofa/pull/2197 ); - [All] Rename SOFA_NO_OPENGL + Relocate Sofa.GL + Improve sofa_add_* macros [#1913]( https://github.com/sofa-framework/sofa/pull/1913 ); - [All] Avoid redundant printLog check [#2102]( https://github.com/sofa-framework/sofa/pull/2102 ); - [All] Depreciate one of the missing use of Aspect in Link and update the code base [#1712]( https://github.com/sofa-framework/sofa/pull/1712 ); - [All] Fix warnings [#2196]( https://github.com/sofa-framework/sofa/pull/2196 ); - [All] Fix warnings [#2097]( https://github.com/sofa-framework/sofa/pull/2097 ); - [All] Refactor Read/Write Accessor. [#1807]( https://github.com/sofa-framework/sofa/pull/1807 ); - [All] Refactor vector & vector_device [#1799]( https://github.com/sofa-framework/sofa/pull/1799 ); - [All] Remove last includes of SofaSimulationTree [#1812]( https://github.com/sofa-framework/sofa/pull/1812 ); - [All] Remove un-needed includes. [#1750]( https://github.com/sofa-framework/sofa/pull/1750 ); - [All] Remove unused includes [#1960]( https://github.com/sofa-framework/sofa/pull/1960 ); - [All] Remove warning: unused variable [#1787]( https://github.com/sofa-framework/sofa/pull/1787 ); - [All] Update code to use sofa::InvalidID instead of topology::InvalidID [#2116]( https://github.com/sofa-framework/sofa/pull/2116 ); - [All] use =deleted for deprecation [#1793]( https://github.com/sofa-framework/sofa/pull/1793 ); - [All] Convert tests to Sofa.Testing [#2188]( https://github.com/sofa-framework/sofa/pull/2188 ); - [All] Remove useless inclusions of MechanicalObject.h [#2015]( ht",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:196493,Access,Accessor,196493,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Access'],['Accessor']
Security,S; set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/AdvancedTimer.h; ${SRC_ROOT}/BackTrace.h; ${SRC_ROOT}/cast.h; ${SRC_ROOT}/ColorMap.h; ${SRC_ROOT}/ComponentChange.h; ${SRC_ROOT}/DiffLib.h; ${SRC_ROOT}/Factory.h; ${SRC_ROOT}/Factory.inl; ${SRC_ROOT}/TypeInfo.h; ${SRC_ROOT}/FnDispatcher.h; ${SRC_ROOT}/FnDispatcher.inl; ${SRC_ROOT}/GenerateRigid.h; ${SRC_ROOT}/IndexOpenMP.h; ${SRC_ROOT}/LCPcalc.h; ${SRC_ROOT}/MarchingCubeUtility.h; ${SRC_ROOT}/MatEigen.h; ${SRC_ROOT}/MemoryManager.h; ${SRC_ROOT}/NameDecoder.h; ${SRC_ROOT}/narrow_cast.h; ${SRC_ROOT}/OptionsGroup.h; ${SRC_ROOT}/OwnershipSPtr.h; ${SRC_ROOT}/Polynomial_LD.h; ${SRC_ROOT}/Polynomial_LD.inl; ${SRC_ROOT}/RandomGenerator.h; ${SRC_ROOT}/SimpleTimer.h; ${SRC_ROOT}/ScopedAdvancedTimer.h; ${SRC_ROOT}/SortedPermutation.h; ${SRC_ROOT}/StringUtils.h; ${SRC_ROOT}/TagFactory.h; ${SRC_ROOT}/TriangleOctree.h; ${SRC_ROOT}/Utils.h; ${SRC_ROOT}/accessor.h; ${SRC_ROOT}/decompose.h; ${SRC_ROOT}/decompose.inl; ${SRC_ROOT}/deque.h; ${SRC_ROOT}/hash.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/integer_id.h; ${SRC_ROOT}/accessor/ReadAccessor.h; ${SRC_ROOT}/accessor/ReadAccessorVector.h; ${SRC_ROOT}/accessor/WriteAccessor.h; ${SRC_ROOT}/accessor/WriteAccessorVector.h; ${SRC_ROOT}/accessor/WriteOnlyAccessor.h; ${SRC_ROOT}/io/BaseFileAccess.h; ${SRC_ROOT}/io/FileAccess.h; ${SRC_ROOT}/io/File.h; ${SRC_ROOT}/io/Image.h; ${SRC_ROOT}/io/ImageDDS.h; ${SRC_ROOT}/io/ImageRAW.h; ${SRC_ROOT}/io/XspLoader.h; ${SRC_ROOT}/io/Mesh.h; ${SRC_ROOT}/io/MeshOBJ.h; ${SRC_ROOT}/io/MeshGmsh.h; ${SRC_ROOT}/io/MeshTopologyLoader.h; ${SRC_ROOT}/io/SphereLoader.h; ${SRC_ROOT}/io/STBImage.h; ${SRC_ROOT}/io/TriangleLoader.h; ${SRC_ROOT}/kdTree.h; ${SRC_ROOT}/kdTree.inl; ${SRC_ROOT}/list.h; ${SRC_ROOT}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Loca,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:1391,hash,hash,1391,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['hash'],['hash']
Security,"[#1069]( https://github.com/sofa-framework/sofa/pull/1069 ). ### Modularizations. - [SofaExporter] Modularize (+minor dependency cleaning) [#915]( https://github.com/sofa-framework/sofa/pull/915 ); - [SofaHaptics] Modularize sofa haptics [#945]( https://github.com/sofa-framework/sofa/pull/945 ); - [SofaOpenglVisual] Pluginize. [#1080]( https://github.com/sofa-framework/sofa/pull/1080 ). ### Improvements. **Architecture**; - [CMake] Rework sofa_generate_package [#951]( https://github.com/sofa-framework/sofa/pull/951 ); - [CMake] SofaMacros.cmake: deprecating sofa_create_package [#909]( https://github.com/sofa-framework/sofa/pull/909 ). **Modules**; - [All] Improve install and packaging [#1018]( https://github.com/sofa-framework/sofa/pull/1018 ); - [All] Plugins finding and loading [#913]( https://github.com/sofa-framework/sofa/pull/913 ); - [All] Replace deprecated c++ standard binder component [#908]( https://github.com/sofa-framework/sofa/pull/908 ); - **[SofaBaseMechanics]** BarycentricMapping: spatial hashing, handle limit cases [#896]( https://github.com/sofa-framework/sofa/pull/896 ); - **[SofaBaseTopology]** Clean Topology logs and add AdvanceTimer logs [#874]( https://github.com/sofa-framework/sofa/pull/874 ); - **[SofaBaseVisual]** Add default texcoord in VisualModel [#933]( https://github.com/sofa-framework/sofa/pull/933 ); - [SofaConstraint] ADD control on constraint force in UniformConstraint [#1027]( https://github.com/sofa-framework/sofa/pull/1027 ); - **[SofaCore]** Add possibilities to draw lines on surfaces in DrawTool [#937]( https://github.com/sofa-framework/sofa/pull/937 ); - **[SofaCore]** Collision visitor primitive tests count [#930]( https://github.com/sofa-framework/sofa/pull/930 ); - **[SofaCore]** ADD Datacallback and datalink [#911]( https://github.com/sofa-framework/sofa/pull/911 ); - [SofaEngine] Avoid Crash in BoxROI when rest_position is not yet defined [#1031]( https://github.com/sofa-framework/sofa/pull/1031 ); - [SofaExporter] Add op",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:259158,hash,hashing,259158,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['hash'],['hashing']
Security,amework/sofa/pull/3299) ; - [Core] Remove memory leaks [#3183](https://github.com/sofa-framework/sofa/pull/3183) ; - [Core] Avoid extra copy in DataFileNameVector [#3188](https://github.com/sofa-framework/sofa/pull/3188) . **Modules**; - [Constraint.Lagrangian] Create data links in ConstraintCorrection for linear solver [#3152](https://github.com/sofa-framework/sofa/pull/3152) ; - [LinearSolver] Create data links for preconditioners and ShewchukPCGLinearSolver [#3155](https://github.com/sofa-framework/sofa/pull/3155) ; - [Constraint.Lagrangian] Fix BilateralInteractionConstraint double init and clean some Data [#3327](https://github.com/sofa-framework/sofa/pull/3327) ; - [Constraint.Lagrangian] Remove merge option from BilateralInteractionConstraint [#3328](https://github.com/sofa-framework/sofa/pull/3328) ; - [Constraint.Lagrangian.Solver] Deprecate MechanicalAccumulateConstraint [#3393](https://github.com/sofa-framework/sofa/pull/3393) ; - [TriangularFEMForceField] Avoid double write access to the TriangleInfo Data in TriangularFEMForceField [#3412](https://github.com/sofa-framework/sofa/pull/3412) ; - [all] Fix compilation with float as floating_point_type [#3435](https://github.com/sofa-framework/sofa/pull/3435) . ### Improvements. **Architecture**; - [Core] Linear time getRoot() method in BaseNode and Node [#3059](https://github.com/sofa-framework/sofa/pull/3059) ; - [Type] Add NoInit constructor for Quat class [#3217](https://github.com/sofa-framework/sofa/pull/3217) ; - [Geometry] Make global variables constexpr [#3233](https://github.com/sofa-framework/sofa/pull/3233) ; - [Core] Reduce calls to getValue in collisions [#3264](https://github.com/sofa-framework/sofa/pull/3264) ; - [Type] Fix/clean and speed up of Mat [#3280](https://github.com/sofa-framework/sofa/pull/3280) ; - [Type] Add fixedarray aliases and BoundingBox3D [#3298](https://github.com/sofa-framework/sofa/pull/3298) ; - [Config] Option to set the number of MSVC processes [#3313](https://github.c,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:71348,access,access,71348,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['access']
Security,c] Update GeomagicDriver.cpp to fire error when hd.h is not found [#4576](https://github.com/sofa-framework/sofa/pull/4576); - [CMake] Upgrade cmake_minimum_required to 3.22 [#4586](https://github.com/sofa-framework/sofa/pull/4586); - [Core] Remove unused debug trace [#4590](https://github.com/sofa-framework/sofa/pull/4590); - [Core] cmake: Remove last traces of Sofa.Component.Compat [#4596](https://github.com/sofa-framework/sofa/pull/4596); - [LinearAlgebra] Remove empty source file [#4599](https://github.com/sofa-framework/sofa/pull/4599); - [Type] Clean and test MatSym [#4600](https://github.com/sofa-framework/sofa/pull/4600); - [tests] Use appropriate gtest macro [#4607](https://github.com/sofa-framework/sofa/pull/4607); - [LinearSystem] Remove development artifact [#4620](https://github.com/sofa-framework/sofa/pull/4620); - [all] Minor last fixes using SimpleApi [#4627](https://github.com/sofa-framework/sofa/pull/4627); - [SolidMechanics.FEM] Small update on container access to avoid unecessary check [#4639](https://github.com/sofa-framework/sofa/pull/4639); - [AnimationLoop] Rename Data [#4664](https://github.com/sofa-framework/sofa/pull/4664); - [Guidelines] Format cpp code [#4695](https://github.com/sofa-framework/sofa/pull/4695); - [all] Remove some warnings [#4698](https://github.com/sofa-framework/sofa/pull/4698); - [examples] Run PluginFinder on examples [#4707](https://github.com/sofa-framework/sofa/pull/4707); - [examples] Remove examples using DefaultCollisionGroupManager [#4708](https://github.com/sofa-framework/sofa/pull/4708); - [Core] Warn when module name is empty [#4725](https://github.com/sofa-framework/sofa/pull/4725); - ﻿[PlayBack] Update playback scenes to write/read and compare a beam under gravity motion [#4745](https://github.com/sofa-framework/sofa/pull/4745); - [tools] Factorize and clean plugin list filtering [#4748](https://github.com/sofa-framework/sofa/pull/4748); - [tools] Add new dependency to fix in MacOS post-install-fixup [#4749,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:16807,access,access,16807,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['access']
Security,cmake_minimum_required(VERSION 3.22). project(Sofa.Core_test). set(SOURCE_FILES; accessor/ReadAccessor.cpp; accessor/WriteAccessor.cpp; collision/NarrowPhaseDetection_test.cpp; loader/MeshLoader_test.cpp; objectmodel/AspectPool_test.cpp; objectmodel/BaseClass_test.cpp; objectmodel/BaseData_test.cpp; objectmodel/BaseLink_test.cpp; objectmodel/BaseObjectDescription_test.cpp; objectmodel/Data_test.cpp; objectmodel/DataLink_test.cpp; objectmodel/DataFileName_test.cpp; objectmodel/DataFileNameVector_test.cpp; objectmodel/DataCallback_test.cpp; objectmodel/DDGNode_test.cpp; objectmodel/MultiLink_test.cpp; objectmodel/RemovedData_test.cpp; objectmodel/SingleLink_test.cpp; objectmodel/VectorData_test.cpp; topology/BaseMeshTopology_test.cpp; DataEngine_test.cpp; Engine_test.cpp; MatrixAccumulator_test.cpp; ObjectFactory_test.cpp; PathResolver_test.cpp; TestEngine.cpp; TrackedData_test.cpp; VecId_test.cpp; visual/DisplayFlags_test.cpp; ). set(HEADER_FILES; objectmodel/BaseLink_test.h; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES} ${HEADER_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Core). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/test/CMakeLists.txt:81,access,accessor,81,Sofa/framework/Core/test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/test/CMakeLists.txt,2,['access'],['accessor']
Security,"cmake_minimum_required(VERSION 3.22). project(Sofa.Helper_test). set(SOURCE_FILES; DiffLib_test.cpp; Factory_test.cpp; KdTree_test.cpp; NameDecoder_test.cpp; OptionsGroup_test.cpp; StringUtils_test.cpp; TagFactory_test.cpp; Utils_test.cpp; accessor/ReadAccessor.cpp; accessor/WriteAccessor.cpp; io/MeshOBJ_test.cpp; io/STBImage_test.cpp; io/XspLoader_test.cpp; logging/logging_test.cpp; narrow_cast_test.cpp; system/FileMonitor_test.cpp; system/FileRepository_test.cpp; system/FileSystem_test.cpp; system/PluginManager_test.cpp; system/thread/CircularQueue_test.cpp; ). add_subdirectory(system/TestPluginA); add_subdirectory(system/TestPluginB). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Helper). add_definitions(""-DSTBIMAGETEST_RESOURCES_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/io/images\""""). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/test/CMakeLists.txt:240,access,accessor,240,Sofa/framework/Helper/test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/test/CMakeLists.txt,2,['access'],['accessor']
Security,"cumentation](https://help.github.com/articles/committing-changes-to-a-pull-request-branch-created-from-a-fork/).; - If the pull request contains out of scope commits (from a previous merge with master), **consider rebasing it**. <center><figure><img src=""https://www.sofa-framework.org/wp-content/uploads/2022/06/GitHub-PR-review-workflow.png"" alt=""PullRequestProcess"" style=""width:75%""><figcaption align = ""center""><b>Workflow of a PR review</b></figcaption></figure></center>. For more information on forks and pull request, check out [this GitHub guide](https://guides.github.com/activities/forking/). ### SOFA Developer Certificate Of Origin (DCO). SOFA is using the [mechanism of the linux project](https://www.kernel.org/doc/html/latest/process/submitting-patches.html#sign-your-work-the-developer-s-certificate-of-origin) to track and secure all issues related to copyrights: the Developper Certificate of Origin (DCO). If you are contributing code or documentation to the SOFA project, and using the git signed-off-by mechanism, you are agreeing to this certificate. This DCO essentially means that:. - you offer the changes under the same license agreement as the project, and; - you have the right to do that,; - you did not steal somebody else’s work. The original DCO is available online : [http://developercertificate.org](http://developercertificate.org). ```; Developer Certificate of Origin; Version 1.1. Copyright (C) 2004, 2006 The Linux Foundation and its contributors.; 1 Letterman Drive; Suite D4700; San Francisco, CA, 94129. Everyone is permitted to copy and distribute verbatim copies of this; license document, but changing it is not allowed. Developer's Certificate of Origin 1.1. By making a contribution to this project, I certify that:. (a) The contribution was created in whole or in part by me and I; have the right to submit it under the open source license; indicated in the file; or. (b) The contribution is based upon previous work that, to the best; of my knowledg",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:8002,certificate,certificate,8002,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['certificate'],['certificate']
Security,"d; executable containing the modified Library. (It is understood; that the user who changes the contents of definitions files in the; Library will not necessarily be able to recompile the application; to use the modified definitions.). b) Use a suitable shared library mechanism for linking with the; Library. A suitable mechanism is one that (1) uses at run time a; copy of the library already present on the user's computer system,; rather than copying library functions into the executable, and (2); will operate properly with a modified version of the library, if; the user installs one, as long as the modified version is; interface-compatible with the version that the work was made with. c) Accompany the work with a written offer, valid for at; least three years, to give the same user the materials; specified in Subsection 6a, above, for a charge no more; than the cost of performing this distribution. d) If distribution of the work is made by offering access to copy; from a designated place, offer equivalent access to copy the above; specified materials from the same place. e) Verify that the user has already received a copy of these; materials or that you have already sent this user a copy. For an executable, the required form of the ""work that uses the; Library"" must include any data and utility programs needed for; reproducing the executable from it. However, as a special exception,; the materials to be distributed need not include anything that is; normally distributed (in either source or binary form) with the major; components (compiler, kernel, and so on) of the operating system on; which the executable runs, unless that component itself accompanies; the executable. It may happen that this requirement contradicts the license; restrictions of other proprietary libraries that do not normally; accompany the operating system. Such a contradiction means you cannot; use both them and the Library together in an executable that you; distribute. 7. You may place library",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:16266,access,access,16266,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,4,['access'],['access']
Security,"der, agreement or; otherwise) that contradict the conditions of this License, they do not; excuse you from the conditions of this License. If you cannot; distribute so as to satisfy simultaneously your obligations under this; License and any other pertinent obligations, then as a consequence you; may not distribute the Library at all. For example, if a patent; license would not permit royalty-free redistribution of the Library by; all those who receive copies directly or indirectly through you, then; the only way you could satisfy both it and this License would be to; refrain entirely from distribution of the Library. If any portion of this section is held invalid or unenforceable under any; particular circumstance, the balance of the section is intended to apply,; and the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any; patents or other property right claims or to contest validity of any; such claims; this section has the sole purpose of protecting the; integrity of the free software distribution system which is; implemented by public license practices. Many people have made; generous contributions to the wide range of software distributed; through that system in reliance on consistent application of that; system; it is up to the author/donor to decide if he or she is willing; to distribute software through any other system and a licensee cannot; impose that choice. This section is intended to make thoroughly clear what is believed to; be a consequence of the rest of this License. 12. If the distribution and/or use of the Library is restricted in; certain countries either by patents or by copyrighted interfaces, the; original copyright holder who places the Library under this License may add; an explicit geographical distribution limitation excluding those countries,; so that distribution is permitted only in or among countries not thus; excluded. In such case, this License incorpora",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:20724,integrity,integrity,20724,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['integrity'],['integrity']
Security,detect MassType [#2644]( https://github.com/sofa-framework/sofa/pull/2644 ); - [SofaBaseTopology] Clearer error message [#2638]( https://github.com/sofa-framework/sofa/pull/2638 ); - [SofaBaseVisual] Remove unused background setting in BaseCamera [#2637]( https://github.com/sofa-framework/sofa/pull/2637 ); - [SofaBoundaryCondition] Remove optimization based on type of matrix [#2859]( https://github.com/sofa-framework/sofa/pull/2859 ); - [SofaBoundaryCondition] Replace deprecated headers [#2574]( https://github.com/sofa-framework/sofa/pull/2574 ); - [SofaBoundaryCondition] Sanitize [#2559]( https://github.com/sofa-framework/sofa/pull/2559 ); - [SofaConstraint] Clean timers in GenericConstraintSolver [#2769]( https://github.com/sofa-framework/sofa/pull/2769 ); - [SofaConstraint] Clean timers in LCPConstraintSolver [#2640]( https://github.com/sofa-framework/sofa/pull/2640 ); - [SofaConstraint] Replace raw pointer to Link [#2770]( https://github.com/sofa-framework/sofa/pull/2770 ); - [SofaConstraint] Sanitize [#2577]( https://github.com/sofa-framework/sofa/pull/2577 ); - [SofaCore] Add ObjectFactory_test.cpp [#2696]( https://github.com/sofa-framework/sofa/pull/2696 ); - [SofaCore] Check link to mstate if specified [#2553]( https://github.com/sofa-framework/sofa/pull/2553 ); - [SofaCore] Fix type conversion [#2639]( https://github.com/sofa-framework/sofa/pull/2639 ); - [SofaCore] Name dynamically allocated vec ids [#2811]( https://github.com/sofa-framework/sofa/pull/2811 ); - [SofaCore_test] Minor clean of few unit tests [#2573]( https://github.com/sofa-framework/sofa/pull/2573 ); - [SofaEulerianFluid] Move examples into plugin [#2833]( https://github.com/sofa-framework/sofa/pull/2833 ); - [SofaGeneralEngine] Fix some warnings [#2723]( https://github.com/sofa-framework/sofa/pull/2723 ); - [SofaGuiQt] Error handling when exporting graph [#2771]( https://github.com/sofa-framework/sofa/pull/2771 ); - [SofaGuiQt] Fix english spelling: AdvancedTimer instead of AdvanceTimer [#2,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:126779,Sanitiz,Sanitize,126779,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Sanitiz'],['Sanitize']
Security,"e terms of this; License by making exceptions from one or more of its conditions.; Additional permissions that are applicable to the entire Program shall; be treated as though they were included in this License, to the extent; that they are valid under applicable law. If additional permissions; apply only to part of the Program, that part may be used separately; under those permissions, but the entire Program remains governed by; this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option; remove any additional permissions from that copy, or from any part of; it. (Additional permissions may be written to require their own; removal in certain cases when you modify the work.) You may place; additional permissions on material, added by you to a covered work,; for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you; add to a covered work, you may (if authorized by the copyright holders of; that material) supplement the terms of this License with terms:. a) Disclaiming warranty or limiting liability differently from the; terms of sections 15 and 16 of this License; or. b) Requiring preservation of specified reasonable legal notices or; author attributions in that material or in the Appropriate Legal; Notices displayed by works containing it; or. c) Prohibiting misrepresentation of the origin of that material, or; requiring that modified versions of such material be marked in; reasonable ways as different from the original version; or. d) Limiting the use for publicity purposes of names of licensors or; authors of the material; or. e) Declining to grant rights under trademark law for use of some; trade names, trademarks, or service marks; or. f) Requiring indemnification of licensors and authors of that; material by anyone who conveys the material (or modified versions of; it) with contractual assumptions of liability to the recipie",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:37489,authoriz,authorized,37489,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['authoriz'],['authorized']
Security,"er PR merge is being built on the [Dashboard](https://www.sofa-framework.org/dash/?branch=origin/master). It is used to delay the merge and avoid CI overflow.; - **Control the builds**: Dashboard > Details in the pull request checks.; - Merge method: **prefer ""merge""** or ""squash"" over ""rebase"". Remember that:. - You can **add commits** in a pull request: see [GitHub documentation](https://help.github.com/articles/committing-changes-to-a-pull-request-branch-created-from-a-fork/).; - If the pull request contains out of scope commits (from a previous merge with master), **consider rebasing it**. <center><figure><img src=""https://www.sofa-framework.org/wp-content/uploads/2022/06/GitHub-PR-review-workflow.png"" alt=""PullRequestProcess"" style=""width:75%""><figcaption align = ""center""><b>Workflow of a PR review</b></figcaption></figure></center>. For more information on forks and pull request, check out [this GitHub guide](https://guides.github.com/activities/forking/). ### SOFA Developer Certificate Of Origin (DCO). SOFA is using the [mechanism of the linux project](https://www.kernel.org/doc/html/latest/process/submitting-patches.html#sign-your-work-the-developer-s-certificate-of-origin) to track and secure all issues related to copyrights: the Developper Certificate of Origin (DCO). If you are contributing code or documentation to the SOFA project, and using the git signed-off-by mechanism, you are agreeing to this certificate. This DCO essentially means that:. - you offer the changes under the same license agreement as the project, and; - you have the right to do that,; - you did not steal somebody else’s work. The original DCO is available online : [http://developercertificate.org](http://developercertificate.org). ```; Developer Certificate of Origin; Version 1.1. Copyright (C) 2004, 2006 The Linux Foundation and its contributors.; 1 Letterman Drive; Suite D4700; San Francisco, CA, 94129. Everyone is permitted to copy and distribute verbatim copies of this; license do",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:7564,Certificate,Certificate,7564,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['Certificate'],['Certificate']
Security,"er section; 7. This requirement modifies the requirement in section 4 to; ""keep intact all notices"". c) You must license the entire work, as a whole, under this; License to anyone who comes into possession of a copy. This; License will therefore apply, along with any applicable section 7; additional terms, to the whole of the work, and all its parts,; regardless of how they are packaged. This License gives no; permission to license the work in any other way, but it does not; invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display; Appropriate Legal Notices; however, if the Program has interactive; interfaces that do not display Appropriate Legal Notices, your; work need not make them do so. A compilation of a covered work with other separate and independent; works, which are not by their nature extensions of the covered work,; and which are not combined with it such as to form a larger program,; in or on a volume of a storage or distribution medium, is called an; ""aggregate"" if the compilation and its resulting copyright are not; used to limit the access or legal rights of the compilation's users; beyond what the individual works permit. Inclusion of a covered work; in an aggregate does not cause this License to apply to the other; parts of the aggregate. 6. Conveying Non-Source Forms. You may convey a covered work in object code form under the terms; of sections 4 and 5, provided that you also convey the; machine-readable Corresponding Source under the terms of this License,; in one of these ways:. a) Convey the object code in, or embodied in, a physical product; (including a physical distribution medium), accompanied by the; Corresponding Source fixed on a durable physical medium; customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product; (including a physical distribution medium), accompanied by a; written offer, valid for at least three year",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:30844,access,access,30844,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['access'],['access']
Security,"er, agreement or; otherwise) that contradict the conditions of this License, they do not; excuse you from the conditions of this License. If you cannot; distribute so as to satisfy simultaneously your obligations under this; License and any other pertinent obligations, then as a consequence you; may not distribute the Program at all. For example, if a patent; license would not permit royalty-free redistribution of the Program by; all those who receive copies directly or indirectly through you, then; the only way you could satisfy both it and this License would be to; refrain entirely from distribution of the Program. If any portion of this section is held invalid or unenforceable under; any particular circumstance, the balance of the section is intended to; apply and the section as a whole is intended to apply in other; circumstances. It is not the purpose of this section to induce you to infringe any; patents or other property right claims or to contest validity of any; such claims; this section has the sole purpose of protecting the; integrity of the free software distribution system, which is; implemented by public license practices. Many people have made; generous contributions to the wide range of software distributed; through that system in reliance on consistent application of that; system; it is up to the author/donor to decide if he or she is willing; to distribute software through any other system and a licensee cannot; impose that choice. This section is intended to make thoroughly clear what is believed to; be a consequence of the rest of this License. 8. If the distribution and/or use of the Program is restricted in; certain countries either by patents or by copyrighted interfaces, the; original copyright holder who places the Program under this License; may add an explicit geographical distribution limitation excluding; those countries, so that distribution is permitted only in or among; countries not thus excluded. In such case, this License incorpora",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:11573,integrity,integrity,11573,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,6,['integrity'],['integrity']
Security,"eral Public License has appeared, then you can specify; that version instead if you wish.) Do not make any other change in; these notices. Once this change is made in a given copy, it is irreversible for; that copy, so the ordinary GNU General Public License applies to all; subsequent copies and derivative works made from that copy. This option is useful when you wish to copy part of the code of; the Library into a program that is not a library. 4. You may copy and distribute the Library (or a portion or; derivative of it, under Section 2) in object code or executable form; under the terms of Sections 1 and 2 above provided that you accompany; it with the complete corresponding machine-readable source code, which; must be distributed under the terms of Sections 1 and 2 above on a; medium customarily used for software interchange. If distribution of object code is made by offering access to copy; from a designated place, then offering equivalent access to copy the; source code from the same place satisfies the requirement to; distribute the source code, even though third parties are not; compelled to copy the source along with the object code. 5. A program that contains no derivative of any portion of the; Library, but is designed to work with the Library by being compiled or; linked with it, is called a ""work that uses the Library"". Such a; work, in isolation, is not a derivative work of the Library, and; therefore falls outside the scope of this License. However, linking a ""work that uses the Library"" with the Library; creates an executable that is a derivative of the Library (because it; contains portions of the Library), rather than a ""work that uses the; library"". The executable is therefore covered by this License.; Section 6 states terms for distribution of such executables. When a ""work that uses the Library"" uses material from a header file; that is part of the Library, the object code for the work may be a; derivative work of the Library even though the sour",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:12081,access,access,12081,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,4,['access'],['access']
Security,"eying the object code work. A ""User Product"" is either (1) a ""consumer product"", which means any; tangible personal property which is normally used for personal, family,; or household purposes, or (2) anything designed or sold for incorporation; into a dwelling. In determining whether a product is a consumer product,; doubtful cases shall be resolved in favor of coverage. For a particular; product received by a particular user, ""normally used"" refers to a; typical or common use of that class of product, regardless of the status; of the particular user or of the way in which the particular user; actually uses, or expects or is expected to use, the product. A product; is a consumer product regardless of whether the product has substantial; commercial, industrial or non-consumer uses, unless such uses represent; the only significant mode of use of the product. ""Installation Information"" for a User Product means any methods,; procedures, authorization keys, or other information required to install; and execute modified versions of a covered work in that User Product from; a modified version of its Corresponding Source. The information must; suffice to ensure that the continued functioning of the modified object; code is in no case prevented or interfered with solely because; modification has been made. If you convey an object code work under this section in, or with, or; specifically for use in, a User Product, and the conveying occurs as; part of a transaction in which the right of possession and use of the; User Product is transferred to the recipient in perpetuity or for a; fixed term (regardless of how the transaction is characterized), the; Corresponding Source conveyed under this section must be accompanied; by the Installation Information. But this requirement does not apply; if neither you nor any third party retains the ability to install; modified object code on the User Product (for example, the work has; been installed in ROM). The requirement to provide Inst",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:34606,authoriz,authorization,34606,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['authoriz'],['authorization']
Security,"f you distribute copies of the software, or if; you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether; gratis or for a fee, you must pass on to the recipients the same; freedoms that you received. You must make sure that they, too, receive; or can get the source code. And you must show them these terms so they; know their rights. Developers that use the GNU GPL protect your rights with two steps:; (1) assert copyright on the software, and (2) offer you this License; giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains; that there is no warranty for this free software. For both users' and; authors' sake, the GPL requires that modified versions be marked as; changed, so that their problems will not be attributed erroneously to; authors of previous versions. Some devices are designed to deny users access to install or run; modified versions of the software inside them, although the manufacturer; can do so. This is fundamentally incompatible with the aim of; protecting users' freedom to change the software. The systematic; pattern of such abuse occurs in the area of products for individuals to; use, which is precisely where it is most unacceptable. Therefore, we; have designed this version of the GPL to prohibit the practice for those; products. If such problems arise substantially in other domains, we; stand ready to extend this provision to those domains in future versions; of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents.; States should not allow patents to restrict development and use of; software on general-purpose computers, but in those that do, we wish to; avoid the special danger that patents applied to a free program could; make it effectively proprietary. To prevent this, the GPL assures that; patents cannot be used to render the ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:21315,access,access,21315,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['access'],['access']
Security,"gramming into SOFA, modifying the API, writing plugins.; - SOFA Contributors: (awesome) people proposing their changes in SOFA code via pull-requests.; - SOFA Reviewers: people reviewing and merging the pull-requests. This group is validated by the Scientific and Technical Committee (STC).; - SOFA Consortium: research centers and companies willing to share the cost of development and maintenance of SOFA, hosted by Inria.; - SOFA Consortium Staff: administrators of SOFA and its ecosystem. This group is directed by the Executive Committee (EC). All SOFA Developers are gladly invited to the SOFA-dev meetings. ; They take place remotely every Wednesday at 10 a.m. CET and are animated by the SOFA Reviewers + the Consortium Staff. ; [Subscribe to SOFA-dev mailing-list](https://sympa.inria.fr/sympa/subscribe/sofa-dev) to get the agenda, reports and conference room url. About the steering committees:. - SOFA Scientific and Technical Committee (STC): defines the technical roadmap twice a year, validate the contribution rules, the Reviewers team and discuss every technical point in SOFA.; - SOFA Executive Committee (EC): decides on evolutions of the membership contract, the communication policy and the priorities of the Consortium. A more detailed definition of the committees is available [in the SOFA website](https://www.sofa-framework.org/consortium/presentation/). # Getting started. Please **read carefully** [the GitHub guide on Contributing to Open Source](https://guides.github.com/activities/contributing-to-open-source/). We also recommend you to check this [more detailed documentation on issues and pull requests](https://help.github.com/categories/collaborating-with-issues-and-pull-requests/). # Support - Discussion forum. For any **question** (help needed, problem of understanding SOFA, announcements), create a topic on [the SOFA GitHub Discussions](https://github.com/sofa-framework/sofa/discussions) and benefit from the feedback of the community. When creating a new t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:1195,validat,validate,1195,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['validat'],['validate']
Security,ility layer [#3302](https://github.com/sofa-framework/sofa/pull/3302) ; - [SofaCarving] Some cleaning in carvingManager to use link instead of string and clean warning in scenes [#3332](https://github.com/sofa-framework/sofa/pull/3332) ; - [image] Fix CMake warning from deprecated function [#3359](https://github.com/sofa-framework/sofa/pull/3359) ; - [SofaDistanceGrid] Clean examples [#3399](https://github.com/sofa-framework/sofa/pull/3399) ; - [image] Remove example scenes requiring Flexible plugin [#3421](https://github.com/sofa-framework/sofa/pull/3421) ; - [GL.Rendering3D] OglModel: Minor cleanups [#3417](https://github.com/sofa-framework/sofa/pull/3417) ; - [MultiThreading] Clean file format [#3476](https://github.com/sofa-framework/sofa/pull/3476) ; - [applications] remove shadow variable [#3488](https://github.com/sofa-framework/sofa/pull/3488) ; - [plugins] SofaCUDA does not require Sofa.GL [#3514](https://github.com/sofa-framework/sofa/pull/3514) ; - [SofaPhysicsAPI] Some small cleaning and add access to VisualModel* [#3519](https://github.com/sofa-framework/sofa/pull/3519) . **Examples / Scenes**; - [examples] Another pass of plugin finder [#3351](https://github.com/sofa-framework/sofa/pull/3351) . **Scripts / Tools**; - [metis] Upgrade metis and GKlib [#3063](https://github.com/sofa-framework/sofa/pull/3063) ; - [git] Add various temporary files to .gitignore [#3344](https://github.com/sofa-framework/sofa/pull/3344) . ### Refactoring. **Architecture**; - [Sofa.Core] Move operator<<(Data&) into operator<<(BaseData). [#3300](https://github.com/sofa-framework/sofa/pull/3300) . **Modules**; - [Lagrangian.Solver] Move GenericConstraintProblem in its own files [#3396](https://github.com/sofa-framework/sofa/pull/3396) . ## [v22.06.00]( https://github.com/sofa-framework/sofa/tree/v22.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.12.00...v22.06.00 ). ### SOFA-NG. **Architecture**; - [SofaNG] Dispatch SofaHaptics and SofaValidation [#3041],MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:91047,access,access,91047,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['access']
Security,"ing organizations. If propagation of a covered; work results from an entity transaction, each party to that; transaction who receives a copy of the work also receives whatever; licenses to the work the party's predecessor in interest had or could; give under the previous paragraph, plus a right to possession of the; Corresponding Source of the work from the predecessor in interest, if; the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the; rights granted or affirmed under this License. For example, you may; not impose a license fee, royalty, or other charge for exercise of; rights granted under this License, and you may not initiate litigation; (including a cross-claim or counterclaim in a lawsuit) alleging that; any patent claim is infringed by making, using, selling, offering for; sale, or importing the Program or any portion of it. 11. Patents. A ""contributor"" is a copyright holder who authorizes use under this; License of the Program or a work on which the Program is based. The; work thus licensed is called the contributor's ""contributor version"". A contributor's ""essential patent claims"" are all patent claims; owned or controlled by the contributor, whether already acquired or; hereafter acquired, that would be infringed by some manner, permitted; by this License, of making, using, or selling its contributor version,; but do not include claims that would be infringed only as a; consequence of further modification of the contributor version. For; purposes of this definition, ""control"" includes the right to grant; patent sublicenses in a manner consistent with the requirements of; this License. Each contributor grants you a non-exclusive, worldwide, royalty-free; patent license under the contributor's essential patent claims, to; make, use, sell, offer for sale, import and otherwise run, modify and; propagate the contents of its contributor version. In the following three paragraphs, a ""pat",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:43015,authoriz,authorizes,43015,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['authoriz'],['authorizes']
Security,ins] Remove fetching of SofaPython [#3855](https://github.com/sofa-framework/sofa/pull/3855); - [Constraint.Lagrangian] Add messages when no compliance is given [#3858](https://github.com/sofa-framework/sofa/pull/3858); - [all] include base class inl file [#3865](https://github.com/sofa-framework/sofa/pull/3865); - [SofaCUDA] No longer use deprecated texture references in HexaTLED [#3868](https://github.com/sofa-framework/sofa/pull/3868); - [SofaCUDA] Deprecated CudaTexture.h [#3869](https://github.com/sofa-framework/sofa/pull/3869); - [Config] Fix cross-compilation for embedded external libs [#3870](https://github.com/sofa-framework/sofa/pull/3870); - [all] Deprecate unused verbose data [#3871](https://github.com/sofa-framework/sofa/pull/3871); - [contact] Add missing call to super init [#3884](https://github.com/sofa-framework/sofa/pull/3884); - [examples] Fix unstable scene constantMomentum.scn [#3886](https://github.com/sofa-framework/sofa/pull/3886); - [SolidMechanics] Use accessors & make geometrical data required in BFF [#3887](https://github.com/sofa-framework/sofa/pull/3887); - [SofaCUDA] Replace deprecated vector types [#3902](https://github.com/sofa-framework/sofa/pull/3902); - [Helper] Improve text message for users in ComponentChange [#3913](https://github.com/sofa-framework/sofa/pull/3913); - [all] Minor clean of types [#3915](https://github.com/sofa-framework/sofa/pull/3915); - [examples] Remove example for MechanicalMatrixMapper [#3919](https://github.com/sofa-framework/sofa/pull/3919); - [MechanicalLoad] Replace doUpdateInternal by callback: ConstantFF [#3924](https://github.com/sofa-framework/sofa/pull/3924); - [FEM.Elastic] Implement buildStiffnessMatrix for FastTetrahedralCorotationalForceField [#3929](https://github.com/sofa-framework/sofa/pull/3929); - [all] Cosmetic: apply nested namespaces style [#3932](https://github.com/sofa-framework/sofa/pull/3932); - [Helper] Properly deprecate an already deprecated function [#3933](https://github.com/so,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:41104,access,accessors,41104,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['accessors']
Security,"ith iterators; - you deal with long typenames AND or when the variable type is obvious. ## SOFA specific rules; - Tricky code should not be commented but rewritten! In general, the use of comments should be minimized by making the code self-documenting by appropriate name choices and an explicit logical structure.; - The use of magic numbers in the code should be avoided. Numbers other than 0 and 1 should be declared as named constants instead.; - The definition of ε-definition of limit ('epsilon', an arbitrarily small positive quantity) should not be code specific but rather use the class template [`std::numeric_limits`](https://en.cppreference.com/w/cpp/types/numeric_limits/epsilon). Here is an example: `const DataTypes::Real EPSILON = std::numeric_limits<DataTypes::Real>::epsilon();`; `const DataTypes::Real EPSILON = std::numeric_limits<DataTypes::Real>::epsilon();`; - All internal data, needed by your component, and that can’t be recomputed must be put inside a `Data` or a `DataPtr`. This way, your component can be saved. Also, this `Data` will be automatically displayed inside the GUI.; - For messaging in SOFA components, the [dedicated Messaging API](https://www.sofa-framework.org/community/doc/programming-with-sofa/start-coding/message-api/) must be used.; - `msg_info()` will display the message in the console only if the `printLog` flag is activated.; - `msg_warning()` will display the message in the console with an warning message.; - `msg_error()` will display the message in the console with an error message.; - Use `sofa::type::vector` instead of `std::vector`; - Only use `sofa::simulation::tree::GNode` when you need to directly use access to the children or the parent of the node. If not, use the more generic `sofa::simulation::Node`; - When an information, a function or an internal variable from an external component is needed in a component, prefer an explicit Link to connect both components instead of implicitly browsing the graph using `getContext`; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:6931,access,access,6931,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,1,['access'],['access']
Security,l] Give reason when component cannot be created [#3682](https://github.com/sofa-framework/sofa/pull/3682) ; - [Type] Support structured binding for type::fixed_array [#3753](https://github.com/sofa-framework/sofa/pull/3753) ; - Update CONTRIBUTING.md [#3774](https://github.com/sofa-framework/sofa/pull/3774) . **Modules**; - [Collision.Response.Contact] Implement addKToMatrix for PenalityContactForceField [#3626](https://github.com/sofa-framework/sofa/pull/3626) ; - [Mapping.NonLinear] Implement missing applyJT [#3776](https://github.com/sofa-framework/sofa/pull/3776) ; - [Constraint] Add data to access constraint forces in LCPCS [#3796](https://github.com/sofa-framework/sofa/pull/3796) ; - [Rendering3D] OglModel: Use glMapBufferRange to update buffers [#3822](https://github.com/sofa-framework/sofa/pull/3822) ; - [Logging] Suggestion to better highlight warnings in console [#3914](https://github.com/sofa-framework/sofa/pull/3914) . **Plugins / Projects**; - [Multithreading] 2 steps to maximize coalescing memory access [#3572](https://github.com/sofa-framework/sofa/pull/3572) ; - [MultiThreading] Parallel springs [#3596](https://github.com/sofa-framework/sofa/pull/3596) ; - [MultiThreading] Prepare data for rendering in parallel [#3599](https://github.com/sofa-framework/sofa/pull/3599) ; - [MultiThreading] Implement addDForce in ParallelStiffSpringForceField [#3668](https://github.com/sofa-framework/sofa/pull/3668) ; - [SofaCUDA] Add missing templates for Cuda MechanicalObject [#3688](https://github.com/sofa-framework/sofa/pull/3688) ; - [SceneChecking] Add check when setting contactStiffness uselessly [#3843](https://github.com/sofa-framework/sofa/pull/3843) . **Examples / Scenes**; - [example] Introduce an example for DistanceMultiMapping [#3742](https://github.com/sofa-framework/sofa/pull/3742) ; - [examples] Introduce examples for DistanceMapping and SquareDistanceMapping [#3756](https://github.com/sofa-framework/sofa/pull/3756). ### Bug Fixes. **Architecture**; -,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:54189,access,access,54189,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['access']
Security,lation warnings [#2589]( https://github.com/sofa-framework/sofa/pull/2589 ); - [Sofa.Type] Make RGBAColor constexpr [#2630]( https://github.com/sofa-framework/sofa/pull/2630 ); - [Sofa.Type] Simplify template rebinding [#2570]( https://github.com/sofa-framework/sofa/pull/2570 ); - [SofaBaseMechanics] Clean AddMToMatrixFunctor [#2755]( https://github.com/sofa-framework/sofa/pull/2755 ); - [SofaBaseMechanics][SofaMiscForcefield] Auto-detect MassType [#2644]( https://github.com/sofa-framework/sofa/pull/2644 ); - [SofaBaseTopology] Clearer error message [#2638]( https://github.com/sofa-framework/sofa/pull/2638 ); - [SofaBaseVisual] Remove unused background setting in BaseCamera [#2637]( https://github.com/sofa-framework/sofa/pull/2637 ); - [SofaBoundaryCondition] Remove optimization based on type of matrix [#2859]( https://github.com/sofa-framework/sofa/pull/2859 ); - [SofaBoundaryCondition] Replace deprecated headers [#2574]( https://github.com/sofa-framework/sofa/pull/2574 ); - [SofaBoundaryCondition] Sanitize [#2559]( https://github.com/sofa-framework/sofa/pull/2559 ); - [SofaConstraint] Clean timers in GenericConstraintSolver [#2769]( https://github.com/sofa-framework/sofa/pull/2769 ); - [SofaConstraint] Clean timers in LCPConstraintSolver [#2640]( https://github.com/sofa-framework/sofa/pull/2640 ); - [SofaConstraint] Replace raw pointer to Link [#2770]( https://github.com/sofa-framework/sofa/pull/2770 ); - [SofaConstraint] Sanitize [#2577]( https://github.com/sofa-framework/sofa/pull/2577 ); - [SofaCore] Add ObjectFactory_test.cpp [#2696]( https://github.com/sofa-framework/sofa/pull/2696 ); - [SofaCore] Check link to mstate if specified [#2553]( https://github.com/sofa-framework/sofa/pull/2553 ); - [SofaCore] Fix type conversion [#2639]( https://github.com/sofa-framework/sofa/pull/2639 ); - [SofaCore] Name dynamically allocated vec ids [#2811]( https://github.com/sofa-framework/sofa/pull/2811 ); - [SofaCore_test] Minor clean of few unit tests [#2573]( https://githu,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:126346,Sanitiz,Sanitize,126346,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Sanitiz'],['Sanitize']
Security,"le, permission to use the GNU C Library in; non-free programs enables many more people to use the whole GNU; operating system, as well as its variant, the GNU/Linux operating; system. Although the Lesser General Public License is Less protective of the; users' freedom, it does ensure that the user of a program that is; linked with the Library has the freedom and the wherewithal to run; that program using a modified version of the Library. The precise terms and conditions for copying, distribution and; modification follow. Pay close attention to the difference between a; ""work based on the library"" and a ""work that uses the library"". The; former contains code derived from the library, whereas the latter must; be combined with the library in order to run. GNU LESSER GENERAL PUBLIC LICENSE; TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION. 0. This License Agreement applies to any software library or other; program which contains a notice placed by the copyright holder or; other authorized party saying it may be distributed under the terms of; this Lesser General Public License (also called ""this License"").; Each licensee is addressed as ""you"". A ""library"" means a collection of software functions and/or data; prepared so as to be conveniently linked with application programs; (which use some of those functions and data) to form executables. The ""Library"", below, refers to any such software library or work; which has been distributed under these terms. A ""work based on the; Library"" means either the Library or any derivative work under; copyright law: that is to say, a work containing the Library or a; portion of it, either verbatim or with modifications and/or translated; straightforwardly into another language. (Hereinafter, translation is; included without limitation in the term ""modification"".). ""Source code"" for a work means the preferred form of the work for; making modifications to it. For a library, complete source code means; all the source code fo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:6183,authoriz,authorized,6183,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['authoriz'],['authorized']
Security,lisions [#3264](https://github.com/sofa-framework/sofa/pull/3264) ; - [Type] Fix/clean and speed up of Mat [#3280](https://github.com/sofa-framework/sofa/pull/3280) ; - [Type] Add fixedarray aliases and BoundingBox3D [#3298](https://github.com/sofa-framework/sofa/pull/3298) ; - [Config] Option to set the number of MSVC processes [#3313](https://github.com/sofa-framework/sofa/pull/3313) ; - [Helper] RAII for DrawTool state life cycle [#3338](https://github.com/sofa-framework/sofa/pull/3338) ; - [Config] Option to enable interprocedural optimization [#3345](https://github.com/sofa-framework/sofa/pull/3345) ; - [Config] Change type of CMake message when adding a module [#3381](https://github.com/sofa-framework/sofa/pull/3381) ; - [CMake] Speed-up Configuration (again) [#3382](https://github.com/sofa-framework/sofa/pull/3382) ; - [Helper] Portable thread local storage duration [#3422](https://github.com/sofa-framework/sofa/pull/3422) ; - [Helper.Accessor] Support more std vector methods in WriteAccessorVector [#3426](https://github.com/sofa-framework/sofa/pull/3426) ; - [Topology] Add mechanism to check checkTopologyInputTypes [#3428](https://github.com/sofa-framework/sofa/pull/3428) ; - [Topology.Container] Check at init for Container in Modifier [#3434](https://github.com/sofa-framework/sofa/pull/3434) ; - [Simulation] Task scheduler can accept callable [#3482](https://github.com/sofa-framework/sofa/pull/3482) ; - [Simulation] Worker threads are no longer static [#3491](https://github.com/sofa-framework/sofa/pull/3491) ; - [Core] Support getObjects on set containers [#3495](https://github.com/sofa-framework/sofa/pull/3495) ; - [Type] Conversion to scalar for Mat1x1 [#3498](https://github.com/sofa-framework/sofa/pull/3498) ; - [VectorTypeInfo] Change default handling of data buffer [#3505](https://github.com/sofa-framework/sofa/pull/3505) . **Modules**; - [MappedMatrix] MechanicalMatrixMapper: adds option [#3173](https://github.com/sofa-framework/sofa/pull/3173) ; - [C,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:72948,Access,Accessor,72948,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Access'],['Accessor']
Security,"luding a physical distribution medium), accompanied by a; written offer, valid for at least three years and valid for as; long as you offer spare parts or customer support for that product; model, to give anyone who possesses the object code either (1) a; copy of the Corresponding Source for all the software in the; product that is covered by this License, on a durable physical; medium customarily used for software interchange, for a price no; more than your reasonable cost of physically performing this; conveying of source, or (2) access to copy the; Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the; written offer to provide the Corresponding Source. This; alternative is allowed only occasionally and noncommercially, and; only if you received the object code with such an offer, in accord; with subsection 6b. d) Convey the object code by offering access from a designated; place (gratis or for a charge), and offer equivalent access to the; Corresponding Source in the same way through the same place at no; further charge. You need not require recipients to copy the; Corresponding Source along with the object code. If the place to; copy the object code is a network server, the Corresponding Source; may be on a different server (operated by you or a third party); that supports equivalent copying facilities, provided you maintain; clear directions next to the object code saying where to find the; Corresponding Source. Regardless of what server hosts the; Corresponding Source, you remain obligated to ensure that it is; available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided; you inform other peers where the object code and Corresponding; Source of the work are being offered to the general public at no; charge under subsection 6d. A separable portion of the object code, whose source code is excluded; from the Corresponding Sourc",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:32537,access,access,32537,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,2,['access'],['access']
Security,"mework/sofa/pull/1792 ); - **[SofaBaseLinearSolver]** Document and clean CGLinearSolver [#2098]( https://github.com/sofa-framework/sofa/pull/2098 ); - **[SofaBaseMechanics]** Restore useRestPos Data initialization for BarycentricMapping [#1939]( https://github.com/sofa-framework/sofa/pull/1939 ); - **[SofaBaseTopology]** Clean RenumberPoints methods [#1840]( https://github.com/sofa-framework/sofa/pull/1840 ); - **[SofaBaseTopology]** Remove getter to some Data in Topology container and put them public [#1947]( https://github.com/sofa-framework/sofa/pull/1947 ); - **[SofaBaseTopology]** Remove public access to propagateTopologyChanges [#1860]( https://github.com/sofa-framework/sofa/pull/1860 ); - **[SofaBaseTopology]** Rename TopologyEngine and TopologyData classes to match file names [#1872]( https://github.com/sofa-framework/sofa/pull/1872 ); - **[SofaBaseTopology]** Secure All Topology modifiers API [#1859]( https://github.com/sofa-framework/sofa/pull/1859 ); - **[SofaBaseTopology]** Secure PointSetTopologyModifier API [#1858]( https://github.com/sofa-framework/sofa/pull/1858 ); - **[SofaBaseTopology]** Totally remove topologyEngine and move mechanism only in TopologyData and TopologyHandler [#1898]( https://github.com/sofa-framework/sofa/pull/1898 ); - **[SofaCore]** Base::findLinkDest returns Base* instead of void* [#1700]( https://github.com/sofa-framework/sofa/pull/1700 ); - **[SofaCore]** FIX SingleLink clear/set behavior [#1749]( https://github.com/sofa-framework/sofa/pull/1749 ); - **[SofaCore]** Move definition of Link::updateLinks to BaseLink.h [#1735]( https://github.com/sofa-framework/sofa/pull/1735 ); - **[SofaCore]** Moves MechanicaMatrix out of MultiMatrix.h [#1870]( https://github.com/sofa-framework/sofa/pull/1870 ); - **[SofaCore]** Remove ""depend"" from Node [#1763]( https://github.com/sofa-framework/sofa/pull/1763 ); - **[SofaCore]** isDiagonal is const [#1903]( https://github.com/sofa-framework/sofa/pull/1903 ); - [SofaExplicitOdeSolver] Introduc",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:173171,Secur,Secure,173171,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Secur'],['Secure']
Security,"mpilation's users; beyond what the individual works permit. Inclusion of a covered work; in an aggregate does not cause this License to apply to the other; parts of the aggregate. 6. Conveying Non-Source Forms. You may convey a covered work in object code form under the terms; of sections 4 and 5, provided that you also convey the; machine-readable Corresponding Source under the terms of this License,; in one of these ways:. a) Convey the object code in, or embodied in, a physical product; (including a physical distribution medium), accompanied by the; Corresponding Source fixed on a durable physical medium; customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product; (including a physical distribution medium), accompanied by a; written offer, valid for at least three years and valid for as; long as you offer spare parts or customer support for that product; model, to give anyone who possesses the object code either (1) a; copy of the Corresponding Source for all the software in the; product that is covered by this License, on a durable physical; medium customarily used for software interchange, for a price no; more than your reasonable cost of physically performing this; conveying of source, or (2) access to copy the; Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the; written offer to provide the Corresponding Source. This; alternative is allowed only occasionally and noncommercially, and; only if you received the object code with such an offer, in accord; with subsection 6b. d) Convey the object code by offering access from a designated; place (gratis or for a charge), and offer equivalent access to the; Corresponding Source in the same way through the same place at no; further charge. You need not require recipients to copy the; Corresponding Source along with the object code. If the place to; copy the object code is a network server, the Corres",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:32143,access,access,32143,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['access'],['access']
Security,"ncerning interaction through a network will apply to the; combination as such. 14. Revised Versions of this License. The Free Software Foundation may publish revised and/or new versions of; the GNU General Public License from time to time. Such new versions will; be similar in spirit to the present version, but may differ in detail to; address new problems or concerns. Each version is given a distinguishing version number. If the; Program specifies that a certain numbered version of the GNU General; Public License ""or any later version"" applies to it, you have the; option of following the terms and conditions either of that numbered; version or of any later version published by the Free Software; Foundation. If the Program does not specify a version number of the; GNU General Public License, you may choose any version ever published; by the Free Software Foundation. If the Program specifies that a proxy can decide which future; versions of the GNU General Public License can be used, that proxy's; public statement of acceptance of a version permanently authorizes you; to choose that version for the Program. Later license versions may give you additional or different; permissions. However, no additional obligations are imposed on any; author or copyright holder as a result of your choosing to follow a; later version. 15. Disclaimer of Warranty. THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY; APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT; HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY; OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,; THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR; PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM; IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF; ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. Limitation of Liability. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREE",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:49089,authoriz,authorizes,49089,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['authoriz'],['authorizes']
Security,om Node [#1763]( https://github.com/sofa-framework/sofa/pull/1763 ); - **[SofaCore]** isDiagonal is const [#1903]( https://github.com/sofa-framework/sofa/pull/1903 ); - [SofaExplicitOdeSolver] Introduce visitor to know the number of non-diagonal mass matrices [#2165]( https://github.com/sofa-framework/sofa/pull/2165 ); - [SofaGeneralSimpleFem] Remove \*Containers [#2099]( https://github.com/sofa-framework/sofa/pull/2099 ); - **[SofaHelper]** Add two search paths for every prefixes of the plugin manager [#1824]( https://github.com/sofa-framework/sofa/pull/1824 ); - **[SofaHelper]** Move polygon cube intersection ad-hoc algorithm to SofaBaseTopology [#1772]( https://github.com/sofa-framework/sofa/pull/1772 ); - **[SofaHelper]** Remove SofaSimulationCore dependency from AdvancedTimer [#1770]( https://github.com/sofa-framework/sofa/pull/1770 ); - **[SofaHelper]** Replace boost::shared_ptr for std::shared_ptr [#1901]( https://github.com/sofa-framework/sofa/pull/1901 ); - **[SofaHelper]** remove stream operator<< in accessor [#1808]( https://github.com/sofa-framework/sofa/pull/1808 ); - [SofaMiscCollision] Clean options [#2170]( https://github.com/sofa-framework/sofa/pull/2170 ); - [SofaMiscCollision] Fix multiple bugs in group manager [#2076]( https://github.com/sofa-framework/sofa/pull/2076 ); - [SofaMiscCollision] Move OBB/Capsule (and related Intr* Code) [#2168]( https://github.com/sofa-framework/sofa/pull/2168 ); - [SofaMiscMapping] Factorize code to remove duplicated struct [#1957]( https://github.com/sofa-framework/sofa/pull/1957 ); - **[SofaSimulationCore]** Move CpuTask class into its own file [#1993]( https://github.com/sofa-framework/sofa/pull/1993 ); - **[SofaSimulationCore]** Simplify repetitive code in BaseMechanicalVisitor [#2125]( https://github.com/sofa-framework/sofa/pull/2125 ); - **[SofaSimulationGraph]** Remove dead-end experiment in SimpleApi.h [#1845]( https://github.com/sofa-framework/sofa/pull/1845 ); - [SofaTopologyMapping] adds ellipse feature to,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:174995,access,accessor,174995,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['accessor']
Security,"om/sofa-framework/sofa/pull/1891 ); - [CMake] FIX SofaFramework aliases [#2175]( https://github.com/sofa-framework/sofa/pull/2175 ); - [CMake] FIX header include tree [#1863]( https://github.com/sofa-framework/sofa/pull/1863 ); - [CMake] FIX resources and translations install on Windows [#1949]( https://github.com/sofa-framework/sofa/pull/1949 ); - [CMake] Set CMake install default component [#2037]( https://github.com/sofa-framework/sofa/pull/2037 ); - [CMake][tools] v20.12.00 changes [#1804]( https://github.com/sofa-framework/sofa/pull/1804 ). **Extlibs**; - [GTest] Fix with GCC11 [#2181]( https://github.com/sofa-framework/sofa/pull/2181 ). **Modules**; - [All] FIX build without SofaPython soft dependencies [#1829]( https://github.com/sofa-framework/sofa/pull/1829 ); - [All] FIX warnings during STC#11 [#2140]( https://github.com/sofa-framework/sofa/pull/2140 ); - [All] Fix compilation warning. [#1699]( https://github.com/sofa-framework/sofa/pull/1699 ); - [All] Fix invalid Memory access in MechanicalObject and Compliant_test [#1849]( https://github.com/sofa-framework/sofa/pull/1849 ); - [All] Fix debug compilation [#2223]( https://github.com/sofa-framework/sofa/pull/2223 ); - [All] Changes needed for v21.06 [#2226]( https://github.com/sofa-framework/sofa/pull/2226 ); - **[Sofa.Type]** Add forgotten function declaration, used in Debug [#1937]( https://github.com/sofa-framework/sofa/pull/1937 ); - **[Sofa.Type]** Add missing header in fixed_array [#2006]( https://github.com/sofa-framework/sofa/pull/2006 ); - **[SofaBaseCollision]** Fix pipeline warning test [#2132]( https://github.com/sofa-framework/sofa/pull/2132 ); - **[SofaBaseCollision]** Clean code related to intersection methods [#2178]( https://github.com/sofa-framework/sofa/pull/2178 ); - **[SofaBaseMechanics]** Clean DiagonalMass init [#2186]( https://github.com/sofa-framework/sofa/pull/2186 ); - **[SofaBaseMechanics]** Restore tests commented by mistake [#2104]( https://github.com/sofa-framework/sofa/pull/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:181977,access,access,181977,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['access']
Security,"om/sofa-framework/sofa/pull/2044 ); - [SofaGuiQt] Fix compilation [#1889]( https://github.com/sofa-framework/sofa/pull/1889 ); - [SofaGuiQt] Fix compilation when SOFA_DUMP_VISITOR is enabled [#1914]( https://github.com/sofa-framework/sofa/pull/1914 ); - [SofaGuiQt] Use opaque API instead [#1918]( https://github.com/sofa-framework/sofa/pull/1918 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test [#1823]( https://github.com/sofa-framework/sofa/pull/1823 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test (2) [#1825]( https://github.com/sofa-framework/sofa/pull/1825 ); - **[SofaHelper]** Fix AdvandedTimer test with end() [#1781]( https://github.com/sofa-framework/sofa/pull/1781 ); - **[SofaHelper]** Fix compilation in kdtree [#1942]( https://github.com/sofa-framework/sofa/pull/1942 ); - **[SofaHelper]** Fix out of bounds error [#1868]( https://github.com/sofa-framework/sofa/pull/1868 ); - **[SofaHelper]** Fix the use of Read/WriteAccessorVector that is too permisive (in accessor.h) [#1900]( https://github.com/sofa-framework/sofa/pull/1900 ); - **[SofaHelper][SofaBoundaryCondition]** Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - **[SofaKernel]** Fix SimpleApi forward declaration of BaseObject and relocatable of Sofa.GL [#1760]( https://github.com/sofa-framework/sofa/pull/1760 ); - **[SofaKernel]** Removing double load() in Loaders [#2094]( https://github.com/sofa-framework/sofa/pull/2094 ); - [SofaLoader] Fix MeshObjLoader material parsing by using the proper locale. [#2200]( https://github.com/sofa-framework/sofa/pull/2200 ); - [SofaLoader] FIX Circular dependency in the update of MeshObjLoader [#2201]( https://github.com/sofa-framework/sofa/pull/2201 ); - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ); - [SofaMeshCollision] Fix: windows debug linkage of class EmptyFilter [#1839]( https://github.co",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:188147,access,accessor,188147,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['accessor']
Security,"only); sofa_find_package(DiffLib REQUIRED). set(SRC_ROOT ""src/sofa/helper""). # HEADERS + SOURCES; set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/AdvancedTimer.h; ${SRC_ROOT}/BackTrace.h; ${SRC_ROOT}/cast.h; ${SRC_ROOT}/ColorMap.h; ${SRC_ROOT}/ComponentChange.h; ${SRC_ROOT}/DiffLib.h; ${SRC_ROOT}/Factory.h; ${SRC_ROOT}/Factory.inl; ${SRC_ROOT}/TypeInfo.h; ${SRC_ROOT}/FnDispatcher.h; ${SRC_ROOT}/FnDispatcher.inl; ${SRC_ROOT}/GenerateRigid.h; ${SRC_ROOT}/IndexOpenMP.h; ${SRC_ROOT}/LCPcalc.h; ${SRC_ROOT}/MarchingCubeUtility.h; ${SRC_ROOT}/MatEigen.h; ${SRC_ROOT}/MemoryManager.h; ${SRC_ROOT}/NameDecoder.h; ${SRC_ROOT}/narrow_cast.h; ${SRC_ROOT}/OptionsGroup.h; ${SRC_ROOT}/OwnershipSPtr.h; ${SRC_ROOT}/Polynomial_LD.h; ${SRC_ROOT}/Polynomial_LD.inl; ${SRC_ROOT}/RandomGenerator.h; ${SRC_ROOT}/SimpleTimer.h; ${SRC_ROOT}/ScopedAdvancedTimer.h; ${SRC_ROOT}/SortedPermutation.h; ${SRC_ROOT}/StringUtils.h; ${SRC_ROOT}/TagFactory.h; ${SRC_ROOT}/TriangleOctree.h; ${SRC_ROOT}/Utils.h; ${SRC_ROOT}/accessor.h; ${SRC_ROOT}/decompose.h; ${SRC_ROOT}/decompose.inl; ${SRC_ROOT}/deque.h; ${SRC_ROOT}/hash.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/integer_id.h; ${SRC_ROOT}/accessor/ReadAccessor.h; ${SRC_ROOT}/accessor/ReadAccessorVector.h; ${SRC_ROOT}/accessor/WriteAccessor.h; ${SRC_ROOT}/accessor/WriteAccessorVector.h; ${SRC_ROOT}/accessor/WriteOnlyAccessor.h; ${SRC_ROOT}/io/BaseFileAccess.h; ${SRC_ROOT}/io/FileAccess.h; ${SRC_ROOT}/io/File.h; ${SRC_ROOT}/io/Image.h; ${SRC_ROOT}/io/ImageDDS.h; ${SRC_ROOT}/io/ImageRAW.h; ${SRC_ROOT}/io/XspLoader.h; ${SRC_ROOT}/io/Mesh.h; ${SRC_ROOT}/io/MeshOBJ.h; ${SRC_ROOT}/io/MeshGmsh.h; ${SRC_ROOT}/io/MeshTopologyLoader.h; ${SRC_ROOT}/io/SphereLoader.h; ${SRC_ROOT}/io/STBImage.h; ${SRC_ROOT}/io/TriangleLoader.h; ${SRC_ROOT}/kdTree.h; ${SRC_ROOT}/kdTree.inl; ${SRC_ROOT}/list.h; ${SRC_ROOT}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:1294,access,accessor,1294,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['access'],['accessor']
Security,"ork under this section in, or with, or; specifically for use in, a User Product, and the conveying occurs as; part of a transaction in which the right of possession and use of the; User Product is transferred to the recipient in perpetuity or for a; fixed term (regardless of how the transaction is characterized), the; Corresponding Source conveyed under this section must be accompanied; by the Installation Information. But this requirement does not apply; if neither you nor any third party retains the ability to install; modified object code on the User Product (for example, the work has; been installed in ROM). The requirement to provide Installation Information does not include a; requirement to continue to provide support service, warranty, or updates; for a work that has been modified or installed by the recipient, or for; the User Product in which it has been modified or installed. Access to a; network may be denied when the modification itself materially and; adversely affects the operation of the network or violates the rules and; protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided,; in accord with this section must be in a format that is publicly; documented (and with an implementation available to the public in; source code form), and must require no special password or key for; unpacking, reading or copying. 7. Additional Terms. ""Additional permissions"" are terms that supplement the terms of this; License by making exceptions from one or more of its conditions.; Additional permissions that are applicable to the entire Program shall; be treated as though they were included in this License, to the extent; that they are valid under applicable law. If additional permissions; apply only to part of the Program, that part may be used separately; under those permissions, but the entire Program remains governed by; this License without regard to the additional permissions. When you convey a copy of a ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:35908,Access,Access,35908,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['Access'],['Access']
Security,"pology] Rename Edge::pointBaryCoefs into Edge::getBarycentricCoordinates [#4165](https://github.com/sofa-framework/sofa/pull/4165); - [LinearSolver.Direct] SparseLDL: Fix crash in addJMInvJtLocal [#4180](https://github.com/sofa-framework/sofa/pull/4180); - [Helper] Fix warning in MeshTopologyLoader.cpp [#4181](https://github.com/sofa-framework/sofa/pull/4181); - [examples] Fix warning of UncoupledCC in caduceus [#4187](https://github.com/sofa-framework/sofa/pull/4187); - [LinearSystem] MatrixLinearSystem: add registration in the factory for BTDMatrix6 [#4189](https://github.com/sofa-framework/sofa/pull/4189); - [SofaCarving] Fix warnings in SofaCarving_test due to use of deprecated methods [#4193](https://github.com/sofa-framework/sofa/pull/4193); - [GUI.Qt] Fix libQGLViewer cmake install [#4198](https://github.com/sofa-framework/sofa/pull/4198); - [Helper] Update ComponentChange for MechanicalMatrixMapper [#4235](https://github.com/sofa-framework/sofa/pull/4235); - [LinearAlgebra] Robustify accesses to empty matrices [#4236](https://github.com/sofa-framework/sofa/pull/4236); - [Topology] Check indices out-of-bound in TriangleSetTopologyContainer [#4242](https://github.com/sofa-framework/sofa/pull/4242); - [github] Fix name of PR author in GitHub workflows [#4267](https://github.com/sofa-framework/sofa/pull/4267); - [SofaCUDA] Dont use both version of cublas (legacy or v2) [#4274](https://github.com/sofa-framework/sofa/pull/4274); - [Sofa.GUI.Qt] Add cmake module for QGLViewer [#4290](https://github.com/sofa-framework/sofa/pull/4290); - [all] Fix warnings [#4291](https://github.com/sofa-framework/sofa/pull/4291); - [LinearAlgera, Core] Fix linking with LTO on MacOS/Clang [#4293](https://github.com/sofa-framework/sofa/pull/4293); - [MultiThreading] Avoid Static Initialization Order Fiasco [#4307](https://github.com/sofa-framework/sofa/pull/4307); - [SofaCUDA] FIX compilation SofaCUDA along with SparseGrid with Cuda12 [#4319](https://github.com/sofa-framework/sofa/pul",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:37455,access,accesses,37455,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['accesses']
Security,"ption align = ""center""><b>Workflow of a PR review</b></figcaption></figure></center>. For more information on forks and pull request, check out [this GitHub guide](https://guides.github.com/activities/forking/). ### SOFA Developer Certificate Of Origin (DCO). SOFA is using the [mechanism of the linux project](https://www.kernel.org/doc/html/latest/process/submitting-patches.html#sign-your-work-the-developer-s-certificate-of-origin) to track and secure all issues related to copyrights: the Developper Certificate of Origin (DCO). If you are contributing code or documentation to the SOFA project, and using the git signed-off-by mechanism, you are agreeing to this certificate. This DCO essentially means that:. - you offer the changes under the same license agreement as the project, and; - you have the right to do that,; - you did not steal somebody else’s work. The original DCO is available online : [http://developercertificate.org](http://developercertificate.org). ```; Developer Certificate of Origin; Version 1.1. Copyright (C) 2004, 2006 The Linux Foundation and its contributors.; 1 Letterman Drive; Suite D4700; San Francisco, CA, 94129. Everyone is permitted to copy and distribute verbatim copies of this; license document, but changing it is not allowed. Developer's Certificate of Origin 1.1. By making a contribution to this project, I certify that:. (a) The contribution was created in whole or in part by me and I; have the right to submit it under the open source license; indicated in the file; or. (b) The contribution is based upon previous work that, to the best; of my knowledge, is covered under an appropriate open source; license and I have the right under that license to submit that; work with modifications, whether created in whole or in part; by me, under the same open source license (unless I am; permitted to submit under a different license), as indicated; in the file; or. (c) The contribution was provided directly to me by some other; person who certified ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:8325,Certificate,Certificate,8325,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['Certificate'],['Certificate']
Security,pull/1095 ); - **[SofaFramework]** Add other orders for fromEuler() for Quaternions. [#1221]( https://github.com/sofa-framework/sofa/pull/1221 ); - **[SofaFramework]** Install the SofaSimulationCore target back into the SofaFramework package [#1182]( https://github.com/sofa-framework/sofa/pull/1182 ); - [SofaGuiQt] Fix unexpected symbol in CMakeLists [#1132]( https://github.com/sofa-framework/sofa/pull/1132 ); - [SofaGui] FIX missing find_package in SofaGuiConfig.cmake.in [#1198]( https://github.com/sofa-framework/sofa/pull/1198 ); - [SofaGui] Fix VideoRecorder [#1138]( https://github.com/sofa-framework/sofa/pull/1138 ); - [SofaGui] Prevent the GuiManager to store a pointer for the valid gui name [#1108]( https://github.com/sofa-framework/sofa/pull/1108 ); - [SofaHeadlessRecorder] FIX headlessRecorder_test [#1174]( https://github.com/sofa-framework/sofa/pull/1174 ); - **[SofaHelper]** FIX Eigen install path [#1240]( https://github.com/sofa-framework/sofa/pull/1240 ); - **[SofaKernel]** Add bloc access in basematrix [#1143]( https://github.com/sofa-framework/sofa/pull/1143 ); - **[SofaKernel]** Changes for Visual Studio and c++17 [#1162]( https://github.com/sofa-framework/sofa/pull/1162 ); - **[SofaKernel]** FIX regex in SofaMacros.cmake [#1161]( https://github.com/sofa-framework/sofa/pull/1161 ); - **[SofaKernel]** Fix alloc size [#1142]( https://github.com/sofa-framework/sofa/pull/1142 ); - **[SofaKernel]** Fix some AdvanceTimer log missing [#1158]( https://github.com/sofa-framework/sofa/pull/1158 ); - **[SofaKernel]** Fix useless warnings [#1144]( https://github.com/sofa-framework/sofa/pull/1144 ); - **[SofaKernel]** Several fix in draw methods and topology warnings [#1111]( https://github.com/sofa-framework/sofa/pull/1111 ); - **[SofaKernel]** Small Fix in CollisionModel [#1202]( https://github.com/sofa-framework/sofa/pull/1202 ); - **[SofaKernel]** Use links for input and output topologies of the barycentric mapping [#1125]( https://github.com/sofa-framework/sof,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:251164,access,access,251164,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['access']
Security,"pull/3356) ; - [all] Remove in-class typedefs pointing to common sofa::type [#3357](https://github.com/sofa-framework/sofa/pull/3357) ; - [Lagrangian.Solver] Move MechanicalGetConstraintResolutionVisitor in its own files [#3390](https://github.com/sofa-framework/sofa/pull/3390) ; - [Lagrangian.Solver] Move MechanicalGetConstraintViolationVisitor in its own files [#3391](https://github.com/sofa-framework/sofa/pull/3391) ; - [Lagrangian.Solver] Move ConstraintStoreLambdaVisitor in visitors folder [#3392](https://github.com/sofa-framework/sofa/pull/3392) ; - [Topology.Mapping] Types cleaning in Edge2QuadTopologicalMapping [#3408](https://github.com/sofa-framework/sofa/pull/3408) ; - [SolidMechanics.FEM] Clean and optimise TriangularFEMForceField draw method [#3413](https://github.com/sofa-framework/sofa/pull/3413); - [Topology.Mapping] Replace all beginEdit by writeAccessor to access Loc2GlobMap [#3429](https://github.com/sofa-framework/sofa/pull/3429) ; - [All] Fix unnecessary copy to access topology buffer when const ref can be used [#3446](https://github.com/sofa-framework/sofa/pull/3446) ; - [Lagrangian.Solver] Merge duplicated code into small but expressive functions [#3474](https://github.com/sofa-framework/sofa/pull/3474) ; - [all] Remove compilation warnings [#3494](https://github.com/sofa-framework/sofa/pull/3494) ; - [FEM.Elastic] Clean draw method [#3508](https://github.com/sofa-framework/sofa/pull/3508) ; - [all] Lifecycle v22.12 [#3534](https://github.com/sofa-framework/sofa/pull/3534) . **Plugins / Projects**; - [tutorials] Fix CMakeLists targets [#3200](https://github.com/sofa-framework/sofa/pull/3200) ; - [Project] Start v22.12 dev phase [#3218](https://github.com/sofa-framework/sofa/pull/3218) ; - [SofaImplicitField] Fix CMake for new NG architecture [#3223](https://github.com/sofa-framework/sofa/pull/3223); - [SofaValidation] is a plugin, not a collection [#3296](https://github.com/sofa-framework/sofa/pull/3296) ; - [SofaSimpleGUI] Without compatibili",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:88915,access,access,88915,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['access']
Security,"quest checks.; - Merge method: **prefer ""merge""** or ""squash"" over ""rebase"". Remember that:. - You can **add commits** in a pull request: see [GitHub documentation](https://help.github.com/articles/committing-changes-to-a-pull-request-branch-created-from-a-fork/).; - If the pull request contains out of scope commits (from a previous merge with master), **consider rebasing it**. <center><figure><img src=""https://www.sofa-framework.org/wp-content/uploads/2022/06/GitHub-PR-review-workflow.png"" alt=""PullRequestProcess"" style=""width:75%""><figcaption align = ""center""><b>Workflow of a PR review</b></figcaption></figure></center>. For more information on forks and pull request, check out [this GitHub guide](https://guides.github.com/activities/forking/). ### SOFA Developer Certificate Of Origin (DCO). SOFA is using the [mechanism of the linux project](https://www.kernel.org/doc/html/latest/process/submitting-patches.html#sign-your-work-the-developer-s-certificate-of-origin) to track and secure all issues related to copyrights: the Developper Certificate of Origin (DCO). If you are contributing code or documentation to the SOFA project, and using the git signed-off-by mechanism, you are agreeing to this certificate. This DCO essentially means that:. - you offer the changes under the same license agreement as the project, and; - you have the right to do that,; - you did not steal somebody else’s work. The original DCO is available online : [http://developercertificate.org](http://developercertificate.org). ```; Developer Certificate of Origin; Version 1.1. Copyright (C) 2004, 2006 The Linux Foundation and its contributors.; 1 Letterman Drive; Suite D4700; San Francisco, CA, 94129. Everyone is permitted to copy and distribute verbatim copies of this; license document, but changing it is not allowed. Developer's Certificate of Origin 1.1. By making a contribution to this project, I certify that:. (a) The contribution was created in whole or in part by me and I; have the right t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:7746,certificate,certificate-of-origin,7746,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,3,"['Certificate', 'certificate', 'secur']","['Certificate', 'certificate-of-origin', 'secure']"
Security,"rs' protection, the GPL clearly explains; that there is no warranty for this free software. For both users' and; authors' sake, the GPL requires that modified versions be marked as; changed, so that their problems will not be attributed erroneously to; authors of previous versions. Some devices are designed to deny users access to install or run; modified versions of the software inside them, although the manufacturer; can do so. This is fundamentally incompatible with the aim of; protecting users' freedom to change the software. The systematic; pattern of such abuse occurs in the area of products for individuals to; use, which is precisely where it is most unacceptable. Therefore, we; have designed this version of the GPL to prohibit the practice for those; products. If such problems arise substantially in other domains, we; stand ready to extend this provision to those domains in future versions; of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents.; States should not allow patents to restrict development and use of; software on general-purpose computers, but in those that do, we wish to; avoid the special danger that patents applied to a free program could; make it effectively proprietary. To prevent this, the GPL assures that; patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and; modification follow. TERMS AND CONDITIONS. 0. Definitions. ""This License"" refers to version 3 of the GNU General Public License. ""Copyright"" also means copyright-like laws that apply to other kinds of; works, such as semiconductor masks. ""The Program"" refers to any copyrightable work licensed under this; License. Each licensee is addressed as ""you"". ""Licensees"" and; ""recipients"" may be individuals or organizations. To ""modify"" a work means to copy from or adapt all or part of the work; in a fashion requiring copyright permission, other than the making of ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:21985,threat,threatened,21985,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['threat'],['threatened']
Security,"s not available for anyone; to copy, free of charge and under the terms of this License, through a; publicly available network server or other readily accessible means,; then you must either (1) cause the Corresponding Source to be so; available, or (2) arrange to deprive yourself of the benefit of the; patent license for this particular work, or (3) arrange, in a manner; consistent with the requirements of this License, to extend the patent; license to downstream recipients. ""Knowingly relying"" means you have; actual knowledge that, but for the patent license, your conveying the; covered work in a country, or your recipient's use of the covered work; in a country, would infringe one or more identifiable patents in that; country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or; arrangement, you convey, or propagate by procuring conveyance of, a; covered work, and grant a patent license to some of the parties; receiving the covered work authorizing them to use, propagate, modify; or convey a specific copy of the covered work, then the patent license; you grant is automatically extended to all recipients of the covered; work and works based on it. A patent license is ""discriminatory"" if it does not include within; the scope of its coverage, prohibits the exercise of, or is; conditioned on the non-exercise of one or more of the rights that are; specifically granted under this License. You may not convey a covered; work if you are a party to an arrangement with a third party that is; in the business of distributing software, under which you make payment; to the third party based on the extent of your activity of conveying; the work, and under which the third party grants, to any of the; parties who would receive the covered work from you, a discriminatory; patent license (a) in connection with copies of the covered work; conveyed by you (or copies made from those copies), or (b) primarily; for and in connection wit",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:45494,authoriz,authorizing,45494,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['authoriz'],['authorizing']
Security,s://github.com/sofa-framework/sofa/pull/1237 ); - [SofaSparseSolver] Move CSparse and metis into SofaSparseSolver [#1357]( https://github.com/sofa-framework/sofa/pull/1357 ). **Plugins / Projects**; - [CGALPlugin] Clean and pluginization [#1308]( https://github.com/sofa-framework/sofa/pull/1308 ); - [Geomagic] Move all code related to device model display in a dedicated class. [#1366]( https://github.com/sofa-framework/sofa/pull/1366 ); - [Geomagic] Fix compilation [#1393]( https://github.com/sofa-framework/sofa/pull/1393 ); - [ManifoldTopologies] Remove CHECK_TOPOLOGY macro occurrences [#1353]( https://github.com/sofa-framework/sofa/pull/1353 ); - [ManifoldTopologies] Update the license in init.cpp [#1414]( https://github.com/sofa-framework/sofa/pull/1414 ); - [OpenCTMPlugin] Fix compilation and clean before moving out [#1359]( https://github.com/sofa-framework/sofa/pull/1359 ); - [PluginExample] Update PluginExample [#1356]( https://github.com/sofa-framework/sofa/pull/1356 ); - [Regression] Update hash [#1321]( https://github.com/sofa-framework/sofa/pull/1321 ); - [SofaSphFluid] Clean SofaFluid plugin compilation warning. [#1296]( https://github.com/sofa-framework/sofa/pull/1296 ). **Examples / Scenes**; - [examples] Fix and remove 3 scenes with deprecated component [#1355]( https://github.com/sofa-framework/sofa/pull/1355 ); - [examples] Remove useless files and add MeshMatrixMass example [#1257]( https://github.com/sofa-framework/sofa/pull/1257 ); - [scenes] Fix scenes from alias [#1292]( https://github.com/sofa-framework/sofa/pull/1292 ); - [scenes] Remove scene warnings due to Rigid template [#1295]( https://github.com/sofa-framework/sofa/pull/1295 ); - [scenes] Fix alias warnings in scenes [#1279]( https://github.com/sofa-framework/sofa/pull/1279 ). ____________________________________________________________. ## [v19.12]( https://github.com/sofa-framework/sofa/tree/v19.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v19.06...v19.12 ). ### Br,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:242418,hash,hash,242418,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['hash'],['hash']
Security,s://github.com/sofa-framework/sofa/pull/3592) ; - [Simulation] SceneCheck can be added in plugins [#3597](https://github.com/sofa-framework/sofa/pull/3597) ; - [Contributing] Update file to mention good first issue [#3625](https://github.com/sofa-framework/sofa/pull/3625) ; - [Simulation] Error when trying to load a non-existing file [#3677](https://github.com/sofa-framework/sofa/pull/3677) ; - [all] Give reason when component cannot be created [#3682](https://github.com/sofa-framework/sofa/pull/3682) ; - [Type] Support structured binding for type::fixed_array [#3753](https://github.com/sofa-framework/sofa/pull/3753) ; - Update CONTRIBUTING.md [#3774](https://github.com/sofa-framework/sofa/pull/3774) . **Modules**; - [Collision.Response.Contact] Implement addKToMatrix for PenalityContactForceField [#3626](https://github.com/sofa-framework/sofa/pull/3626) ; - [Mapping.NonLinear] Implement missing applyJT [#3776](https://github.com/sofa-framework/sofa/pull/3776) ; - [Constraint] Add data to access constraint forces in LCPCS [#3796](https://github.com/sofa-framework/sofa/pull/3796) ; - [Rendering3D] OglModel: Use glMapBufferRange to update buffers [#3822](https://github.com/sofa-framework/sofa/pull/3822) ; - [Logging] Suggestion to better highlight warnings in console [#3914](https://github.com/sofa-framework/sofa/pull/3914) . **Plugins / Projects**; - [Multithreading] 2 steps to maximize coalescing memory access [#3572](https://github.com/sofa-framework/sofa/pull/3572) ; - [MultiThreading] Parallel springs [#3596](https://github.com/sofa-framework/sofa/pull/3596) ; - [MultiThreading] Prepare data for rendering in parallel [#3599](https://github.com/sofa-framework/sofa/pull/3599) ; - [MultiThreading] Implement addDForce in ParallelStiffSpringForceField [#3668](https://github.com/sofa-framework/sofa/pull/3668) ; - [SofaCUDA] Add missing templates for Cuda MechanicalObject [#3688](https://github.com/sofa-framework/sofa/pull/3688) ; - [SceneChecking] Add check when setting,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:53766,access,access,53766,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['access']
Security,"ses in a manner consistent with the requirements of; this License. Each contributor grants you a non-exclusive, worldwide, royalty-free; patent license under the contributor's essential patent claims, to; make, use, sell, offer for sale, import and otherwise run, modify and; propagate the contents of its contributor version. In the following three paragraphs, a ""patent license"" is any express; agreement or commitment, however denominated, not to enforce a patent; (such as an express permission to practice a patent or covenant not to; sue for patent infringement). To ""grant"" such a patent license to a; party means to make such an agreement or commitment not to enforce a; patent against the party. If you convey a covered work, knowingly relying on a patent license,; and the Corresponding Source of the work is not available for anyone; to copy, free of charge and under the terms of this License, through a; publicly available network server or other readily accessible means,; then you must either (1) cause the Corresponding Source to be so; available, or (2) arrange to deprive yourself of the benefit of the; patent license for this particular work, or (3) arrange, in a manner; consistent with the requirements of this License, to extend the patent; license to downstream recipients. ""Knowingly relying"" means you have; actual knowledge that, but for the patent license, your conveying the; covered work in a country, or your recipient's use of the covered work; in a country, would infringe one or more identifiable patents in that; country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or; arrangement, you convey, or propagate by procuring conveyance of, a; covered work, and grant a patent license to some of the parties; receiving the covered work authorizing them to use, propagate, modify; or convey a specific copy of the covered work, then the patent license; you grant is automatically extended to all recipients of the c",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:44639,access,accessible,44639,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['access'],['accessible']
Security,st.h; ${SRC_ROOT}/ColorMap.h; ${SRC_ROOT}/ComponentChange.h; ${SRC_ROOT}/DiffLib.h; ${SRC_ROOT}/Factory.h; ${SRC_ROOT}/Factory.inl; ${SRC_ROOT}/TypeInfo.h; ${SRC_ROOT}/FnDispatcher.h; ${SRC_ROOT}/FnDispatcher.inl; ${SRC_ROOT}/GenerateRigid.h; ${SRC_ROOT}/IndexOpenMP.h; ${SRC_ROOT}/LCPcalc.h; ${SRC_ROOT}/MarchingCubeUtility.h; ${SRC_ROOT}/MatEigen.h; ${SRC_ROOT}/MemoryManager.h; ${SRC_ROOT}/NameDecoder.h; ${SRC_ROOT}/narrow_cast.h; ${SRC_ROOT}/OptionsGroup.h; ${SRC_ROOT}/OwnershipSPtr.h; ${SRC_ROOT}/Polynomial_LD.h; ${SRC_ROOT}/Polynomial_LD.inl; ${SRC_ROOT}/RandomGenerator.h; ${SRC_ROOT}/SimpleTimer.h; ${SRC_ROOT}/ScopedAdvancedTimer.h; ${SRC_ROOT}/SortedPermutation.h; ${SRC_ROOT}/StringUtils.h; ${SRC_ROOT}/TagFactory.h; ${SRC_ROOT}/TriangleOctree.h; ${SRC_ROOT}/Utils.h; ${SRC_ROOT}/accessor.h; ${SRC_ROOT}/decompose.h; ${SRC_ROOT}/decompose.inl; ${SRC_ROOT}/deque.h; ${SRC_ROOT}/hash.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/integer_id.h; ${SRC_ROOT}/accessor/ReadAccessor.h; ${SRC_ROOT}/accessor/ReadAccessorVector.h; ${SRC_ROOT}/accessor/WriteAccessor.h; ${SRC_ROOT}/accessor/WriteAccessorVector.h; ${SRC_ROOT}/accessor/WriteOnlyAccessor.h; ${SRC_ROOT}/io/BaseFileAccess.h; ${SRC_ROOT}/io/FileAccess.h; ${SRC_ROOT}/io/File.h; ${SRC_ROOT}/io/Image.h; ${SRC_ROOT}/io/ImageDDS.h; ${SRC_ROOT}/io/ImageRAW.h; ${SRC_ROOT}/io/XspLoader.h; ${SRC_ROOT}/io/Mesh.h; ${SRC_ROOT}/io/MeshOBJ.h; ${SRC_ROOT}/io/MeshGmsh.h; ${SRC_ROOT}/io/MeshTopologyLoader.h; ${SRC_ROOT}/io/SphereLoader.h; ${SRC_ROOT}/io/STBImage.h; ${SRC_ROOT}/io/TriangleLoader.h; ${SRC_ROOT}/kdTree.h; ${SRC_ROOT}/kdTree.inl; ${SRC_ROOT}/list.h; ${SRC_ROOT}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SR,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:1494,access,accessor,1494,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['access'],['accessor']
Security,"the linux project](https://www.kernel.org/doc/html/latest/process/submitting-patches.html#sign-your-work-the-developer-s-certificate-of-origin) to track and secure all issues related to copyrights: the Developper Certificate of Origin (DCO). If you are contributing code or documentation to the SOFA project, and using the git signed-off-by mechanism, you are agreeing to this certificate. This DCO essentially means that:. - you offer the changes under the same license agreement as the project, and; - you have the right to do that,; - you did not steal somebody else’s work. The original DCO is available online : [http://developercertificate.org](http://developercertificate.org). ```; Developer Certificate of Origin; Version 1.1. Copyright (C) 2004, 2006 The Linux Foundation and its contributors.; 1 Letterman Drive; Suite D4700; San Francisco, CA, 94129. Everyone is permitted to copy and distribute verbatim copies of this; license document, but changing it is not allowed. Developer's Certificate of Origin 1.1. By making a contribution to this project, I certify that:. (a) The contribution was created in whole or in part by me and I; have the right to submit it under the open source license; indicated in the file; or. (b) The contribution is based upon previous work that, to the best; of my knowledge, is covered under an appropriate open source; license and I have the right under that license to submit that; work with modifications, whether created in whole or in part; by me, under the same open source license (unless I am; permitted to submit under a different license), as indicated; in the file; or. (c) The contribution was provided directly to me by some other; person who certified (a), (b) or (c) and I have not modified; it. (d) I understand and agree that this project and the contribution; are public and that a record of the contribution (including all; personal information I submit with it, including my sign-off) is; maintained indefinitely and may be redistributed ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:8620,Certificate,Certificate,8620,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['Certificate'],['Certificate']
Security,"ull/3546) ; - [GUI.Common] Cmake: Fix message when searching for Sofa.GL [#3549](https://github.com/sofa-framework/sofa/pull/3549) ; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid3D [#3557](https://github.com/sofa-framework/sofa/pull/3557); - [CollisionOBBCapsule] Fix generation of configuration file for installation [#3576](https://github.com/sofa-framework/sofa/pull/3576). **Examples / Scenes**; - [Examples] Fix & Clean ProjectToPlaneConstraint and RegularGridTopology_dimension scenes [#3453](https://github.com/sofa-framework/sofa/pull/3453) . ### Cleaning. **Architecture**; - [Core] Minor cleaning [#3176](https://github.com/sofa-framework/sofa/pull/3176) ; - [objectmodel] Remove redefinition of initData [#3190](https://github.com/sofa-framework/sofa/pull/3190) ; - [Sofa.Core] Remove shadow variables [#3212](https://github.com/sofa-framework/sofa/pull/3212) ; - [Sofa.Type] Constexpr Quaternion [#3221](https://github.com/sofa-framework/sofa/pull/3221) ; - [Helper] Reorganize accessors files and add tests [#3234](https://github.com/sofa-framework/sofa/pull/3234) ; - [Sofa.DefaultType] Constexpr VecTypes and RigidTypes [#3237](https://github.com/sofa-framework/sofa/pull/3237) ; - [Sofa.Core] Remove compilation warning because of un-used argument in BaseClass.h [#3243](https://github.com/sofa-framework/sofa/pull/3243) ; - [Topology] Remove Disabled and Deprecated method <= 22.06 [#3250](https://github.com/sofa-framework/sofa/pull/3250) ; - [Core][Type] Minor warning fixes [#3283](https://github.com/sofa-framework/sofa/pull/3283) ; - [Sofa.Defaulttype] Move Rigid{Coord, Deriv, Mass} from RigidTypes into their own headers [#3282](https://github.com/sofa-framework/sofa/pull/3282) ; - [Sofa.Core] Add missing #include [#3297](https://github.com/sofa-framework/sofa/pull/3297) ; - [Sofa.Core] Use pragma, single line namespaces and move forward declarations in fwd.h [#3303](https://github.com/sofa-framework/sofa/pull/3303) ; - [Sofa.Core] Remove the use of Link in",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:84020,access,accessors,84020,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['access'],['accessors']
Security,"xed term (regardless of how the transaction is characterized), the; Corresponding Source conveyed under this section must be accompanied; by the Installation Information. But this requirement does not apply; if neither you nor any third party retains the ability to install; modified object code on the User Product (for example, the work has; been installed in ROM). The requirement to provide Installation Information does not include a; requirement to continue to provide support service, warranty, or updates; for a work that has been modified or installed by the recipient, or for; the User Product in which it has been modified or installed. Access to a; network may be denied when the modification itself materially and; adversely affects the operation of the network or violates the rules and; protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided,; in accord with this section must be in a format that is publicly; documented (and with an implementation available to the public in; source code form), and must require no special password or key for; unpacking, reading or copying. 7. Additional Terms. ""Additional permissions"" are terms that supplement the terms of this; License by making exceptions from one or more of its conditions.; Additional permissions that are applicable to the entire Program shall; be treated as though they were included in this License, to the extent; that they are valid under applicable law. If additional permissions; apply only to part of the Program, that part may be used separately; under those permissions, but the entire Program remains governed by; this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option; remove any additional permissions from that copy, or from any part of; it. (Additional permissions may be written to require their own; removal in certain cases when you modify the work.) You may place; additional p",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:36361,password,password,36361,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['password'],['password']
Security,y.inl; ${SRC_ROOT}/TypeInfo.h; ${SRC_ROOT}/FnDispatcher.h; ${SRC_ROOT}/FnDispatcher.inl; ${SRC_ROOT}/GenerateRigid.h; ${SRC_ROOT}/IndexOpenMP.h; ${SRC_ROOT}/LCPcalc.h; ${SRC_ROOT}/MarchingCubeUtility.h; ${SRC_ROOT}/MatEigen.h; ${SRC_ROOT}/MemoryManager.h; ${SRC_ROOT}/NameDecoder.h; ${SRC_ROOT}/narrow_cast.h; ${SRC_ROOT}/OptionsGroup.h; ${SRC_ROOT}/OwnershipSPtr.h; ${SRC_ROOT}/Polynomial_LD.h; ${SRC_ROOT}/Polynomial_LD.inl; ${SRC_ROOT}/RandomGenerator.h; ${SRC_ROOT}/SimpleTimer.h; ${SRC_ROOT}/ScopedAdvancedTimer.h; ${SRC_ROOT}/SortedPermutation.h; ${SRC_ROOT}/StringUtils.h; ${SRC_ROOT}/TagFactory.h; ${SRC_ROOT}/TriangleOctree.h; ${SRC_ROOT}/Utils.h; ${SRC_ROOT}/accessor.h; ${SRC_ROOT}/decompose.h; ${SRC_ROOT}/decompose.inl; ${SRC_ROOT}/deque.h; ${SRC_ROOT}/hash.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/integer_id.h; ${SRC_ROOT}/accessor/ReadAccessor.h; ${SRC_ROOT}/accessor/ReadAccessorVector.h; ${SRC_ROOT}/accessor/WriteAccessor.h; ${SRC_ROOT}/accessor/WriteAccessorVector.h; ${SRC_ROOT}/accessor/WriteOnlyAccessor.h; ${SRC_ROOT}/io/BaseFileAccess.h; ${SRC_ROOT}/io/FileAccess.h; ${SRC_ROOT}/io/File.h; ${SRC_ROOT}/io/Image.h; ${SRC_ROOT}/io/ImageDDS.h; ${SRC_ROOT}/io/ImageRAW.h; ${SRC_ROOT}/io/XspLoader.h; ${SRC_ROOT}/io/Mesh.h; ${SRC_ROOT}/io/MeshOBJ.h; ${SRC_ROOT}/io/MeshGmsh.h; ${SRC_ROOT}/io/MeshTopologyLoader.h; ${SRC_ROOT}/io/SphereLoader.h; ${SRC_ROOT}/io/STBImage.h; ${SRC_ROOT}/io/TriangleLoader.h; ${SRC_ROOT}/kdTree.h; ${SRC_ROOT}/kdTree.inl; ${SRC_ROOT}/list.h; ${SRC_ROOT}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/threa,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:1619,access,accessor,1619,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['access'],['accessor']
Security,"you must give the recipients all the rights that we gave; you. You must make sure that they, too, receive or can get the source; code. If you link other code with the library, you must provide; complete object files to the recipients, so that they can relink them; with the library after making changes to the library and recompiling; it. And you must show them these terms so they know their rights. We protect your rights with a two-step method: (1) we copyright the; library, and (2) we offer you this license, which gives you legal; permission to copy, distribute and/or modify the library. To protect each distributor, we want to make it very clear that; there is no warranty for the free library. Also, if the library is; modified by someone else and passed on, the recipients should know; that what they have is not the original version, so that the original; author's reputation will not be affected by problems that might be; introduced by others. Finally, software patents pose a constant threat to the existence of; any free program. We wish to make sure that a company cannot; effectively restrict the users of a free program by obtaining a; restrictive license from a patent holder. Therefore, we insist that; any patent license obtained for a version of the library must be; consistent with the full freedom of use specified in this license. Most GNU software, including some libraries, is covered by the; ordinary GNU General Public License. This license, the GNU Lesser; General Public License, applies to certain designated libraries, and; is quite different from the ordinary General Public License. We use; this license for certain libraries in order to permit linking those; libraries into non-free programs. When a program is linked with a library, whether statically or using; a shared library, the combination of the two is legally speaking a; combined work, a derivative of the original library. The ordinary; General Public License therefore permits such linking only if the;",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:2957,threat,threat,2957,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['threat'],['threat']
Testability," ### Moved files. - Kernel modules of SOFA (SofaFramework, SofaBase, SofaCommon and SofaSimulation) have been moved to one common module SofaKernel, located at _sofa_root/SofaKernel_. SofaKernel is a pure LGPL module.; - code in _sofa_root/modules/sofa/simulation/_ has been splitted into three modules of SofaKernel: SofaSimulationCommon, SofaSimulationTree, SofaSimulationGraph; - MOVE the SofaPardiso module as a plugin; - Move OglTetrahedralModel into a new plugin called VolumetricRendering. - Minor moves; - Move ColorMap code to helper and let (Ogl)ColorMap from SofaOpenGLVisual doing OpenGL stuff; - Move TorsionForceField and ComplementaryROI into SOFA (those two components where in a deprecated repository _sofa_root/modules/sofa/components/_). - [Compliant]; - moving propagate_constraint_force_visitor in a helper file and minor cleaning of CompliantImplicitSolver. ### Improvements. - test examples are now running (on Jenkins for the Continuous Integration); - Add unit test for quaternions; - Improving default mouse manipulation while picking a dof; - MouseWheel events now propagated. - Minor improvements; - runSofa: force loading the SofaPython plugin if existing; - runSofa: adding clang-style formatting (option '-z clang'); - MechanicalObject: adding more visualisation colors for Rigids; - SofaPluginManager: Clear description and components when removing last plugin; - CMake: removing ""-Wno-deprecated-register"" compiler option that is only known by a few compilers; - Collision: add function setConstraintId in BaseConstraintSet; - SPtr: up to 10 parameters in constructor; - Add function in EigenBaseSparseMatrix in order to use eigen matrices with async solvers; - Add CUSPARSESolver in SofaCudaSolversPlugin, this solver uses cusparse library to solve a sparse triangular system on the GPU; - MeshBoundaryROI: allows specifying an input subset; - ColorMap: with face culling enabled; - ColorMap: adding a scale for the legend range values; - ImageViewer: adding new boo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:342918,test,test,342918,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['test'],['test']
Testability," (#190, #255, #275). See [documentation](https://www.sofa-framework.org/community/doc/programming-with-sofa/logger/) for more information.; - Add CMake option to limit cores used to build specific targets [#254]( https://github.com/sofa-framework/sofa/pull/254 ); - Fix rgbacolor parsing [#305]( https://github.com/sofa-framework/sofa/pull/305 ); - CMake: installing gtest headers for separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - [SofaKernel]; - Update the RichConsoleStyleMessageFormatter [#126]( https://github.com/sofa-framework/sofa/pull/126 ); - creation of a defaulttype::RGBAColor [#119]( https://github.com/sofa-framework/sofa/pull/119 ); - add a new method in BaseObjectDescription [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - adding listener mechanism to SceneLoader [#205]( https://github.com/sofa-framework/sofa/pull/205 ); - common usage for DiagonalMass and tests [#230]( https://github.com/sofa-framework/sofa/pull/230 ); - add tests for DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - add tests for DefaultAnimationLoop [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for LocalMinDistance [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add a way to convert message type to string in Message.cpp [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - adding listener mechanism to SceneLoader [#204]( https://github.com/sofa-framework/sofa/pull/204 ); - Grid Topologies cleanup + new SphereGrid [#164]( https://github.com/sofa-framework/sofa/pull/164 ); - Add CMake option SOFA_WITH_EXPERIMENTAL_FEATURES (default OFF) to enable MechanicalObject::buildIdentityBlocksInJacobian [#276]( https://github.com/sofa-framework/sofa/pull/276 ); - [SofaGraphComponents]; - add tests for RequiredPlugin [#258]( https://gith",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:327030,test,tests,327030,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability," **Extlibs**; - [GTest] Fix with GCC11 [#2181]( https://github.com/sofa-framework/sofa/pull/2181 ). **Modules**; - [All] FIX build without SofaPython soft dependencies [#1829]( https://github.com/sofa-framework/sofa/pull/1829 ); - [All] FIX warnings during STC#11 [#2140]( https://github.com/sofa-framework/sofa/pull/2140 ); - [All] Fix compilation warning. [#1699]( https://github.com/sofa-framework/sofa/pull/1699 ); - [All] Fix invalid Memory access in MechanicalObject and Compliant_test [#1849]( https://github.com/sofa-framework/sofa/pull/1849 ); - [All] Fix debug compilation [#2223]( https://github.com/sofa-framework/sofa/pull/2223 ); - [All] Changes needed for v21.06 [#2226]( https://github.com/sofa-framework/sofa/pull/2226 ); - **[Sofa.Type]** Add forgotten function declaration, used in Debug [#1937]( https://github.com/sofa-framework/sofa/pull/1937 ); - **[Sofa.Type]** Add missing header in fixed_array [#2006]( https://github.com/sofa-framework/sofa/pull/2006 ); - **[SofaBaseCollision]** Fix pipeline warning test [#2132]( https://github.com/sofa-framework/sofa/pull/2132 ); - **[SofaBaseCollision]** Clean code related to intersection methods [#2178]( https://github.com/sofa-framework/sofa/pull/2178 ); - **[SofaBaseMechanics]** Clean DiagonalMass init [#2186]( https://github.com/sofa-framework/sofa/pull/2186 ); - **[SofaBaseMechanics]** Restore tests commented by mistake [#2104]( https://github.com/sofa-framework/sofa/pull/2104 ); - **[SofaBaseMechanics]** fixes reinit of BarycentricMapping [#1815]( https://github.com/sofa-framework/sofa/pull/1815 ); - **[SofaBaseMechanics]** Fix bug when deleting point. Mass vector was not well recomputed. [#2164]( https://github.com/sofa-framework/sofa/pull/2164 ); - **[SofaBaseMechanics_test]** Add more checks in DiagonalMass_test [#2183]( https://github.com/sofa-framework/sofa/pull/2183 ); - **[SofaBaseTopology]** Add security in TopologyData to check input Topology pointer [#2027]( https://github.com/sofa-framework/sofa/pull/2",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:182559,test,test,182559,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability," **Modules**; - [All] Improve install and packaging [#1018]( https://github.com/sofa-framework/sofa/pull/1018 ); - [All] Plugins finding and loading [#913]( https://github.com/sofa-framework/sofa/pull/913 ); - [All] Replace deprecated c++ standard binder component [#908]( https://github.com/sofa-framework/sofa/pull/908 ); - **[SofaBaseMechanics]** BarycentricMapping: spatial hashing, handle limit cases [#896]( https://github.com/sofa-framework/sofa/pull/896 ); - **[SofaBaseTopology]** Clean Topology logs and add AdvanceTimer logs [#874]( https://github.com/sofa-framework/sofa/pull/874 ); - **[SofaBaseVisual]** Add default texcoord in VisualModel [#933]( https://github.com/sofa-framework/sofa/pull/933 ); - [SofaConstraint] ADD control on constraint force in UniformConstraint [#1027]( https://github.com/sofa-framework/sofa/pull/1027 ); - **[SofaCore]** Add possibilities to draw lines on surfaces in DrawTool [#937]( https://github.com/sofa-framework/sofa/pull/937 ); - **[SofaCore]** Collision visitor primitive tests count [#930]( https://github.com/sofa-framework/sofa/pull/930 ); - **[SofaCore]** ADD Datacallback and datalink [#911]( https://github.com/sofa-framework/sofa/pull/911 ); - [SofaEngine] Avoid Crash in BoxROI when rest_position is not yet defined [#1031]( https://github.com/sofa-framework/sofa/pull/1031 ); - [SofaExporter] Add option for Regression_test to check first and last iteration [#1061]( https://github.com/sofa-framework/sofa/pull/1061 ); - [SofaGeneralAnimationLoop] Improve MechanicalMatrixMapper [#882]( https://github.com/sofa-framework/sofa/pull/882 ); - [SofaGraphComponent] Run SceneChecker at each load [#938]( https://github.com/sofa-framework/sofa/pull/938 ); - [SofaGuiQt] Change the keyboard shortcut associated to camera mode [#997]( https://github.com/sofa-framework/sofa/pull/997 ); - [SofaGuiQt] Add a profiling window based on AdvanceTimer records [#1028]( https://github.com/sofa-framework/sofa/pull/1028 ); - **[SofaKernel]** Some small chan",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:259803,test,tests,259803,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability," *SetGeometryAlgorithms [#3070]( https://github.com/sofa-framework/sofa/pull/3070 ); - [Sofa.GUI.Common] Fix module reference in CMake file [#2994]( https://github.com/sofa-framework/sofa/pull/2994 ); - [Sofa.GUI.Qt] Fix GUI registration [#3007]( https://github.com/sofa-framework/sofa/pull/3007 ); - [Sofa.GUI.Qt] Fix toolTip for button reload [#3199]( https://github.com/sofa-framework/sofa/pull/3199 ); - [Sofa.LinearAlgebra] Fix SOFA_OPENMP [#2669]( https://github.com/sofa-framework/sofa/pull/2669 ); - [Sofa.LinearAlgebra] Fix compilation warnings [#2627]( https://github.com/sofa-framework/sofa/pull/2627 ); - [Sofa.Simulation.Graph] Fix broken context management [#2964]( https://github.com/sofa-framework/sofa/pull/2964 ); - [Sofa.Type] Change (?) default constructor for fixed_array [#2764]( https://github.com/sofa-framework/sofa/pull/2764 ); - [Sofa.Type] Mat: Correct tensorProduct [#2787]( https://github.com/sofa-framework/sofa/pull/2787 ); - [Sofa.Type] Fix cmake typo, which was disabling tests [#3129]( https://github.com/sofa-framework/sofa/pull/3129 ) ; - [Sofa.Visual] Revert PR #2856 [#3073]( https://github.com/sofa-framework/sofa/pull/3073 ); - [SofaBaseCollision] Fixed invalid vector bug in ContactListener [#2676]( https://github.com/sofa-framework/sofa/pull/2676 ); - [SofaBaseLinearSolver] Fix message in MatrixLinearSolver [#2781]( https://github.com/sofa-framework/sofa/pull/2781 ); - [SofaBaseTopology][SofaDeformable][SofaMiscTopology] Proper topological changes in SpringForceField [#2653]( https://github.com/sofa-framework/sofa/pull/2653 ); - [SofaBoundaryCondition] Remove duplicated code [#2830]( https://github.com/sofa-framework/sofa/pull/2830 ); - [SofaCore.Topology] Depreciate method linked to topologyHandler create/destroy function [#2869]( https://github.com/sofa-framework/sofa/pull/2869 ); - [SofaCore] Fix invalid include in MappingHelper [#2632]( https://github.com/sofa-framework/sofa/pull/2632 ); - [SofaCore] Inf fix topo subset indices [#2870]( h",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:110496,test,tests,110496,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability, - **[SofaCore]** Reduce the needs for include in Node.h [#1744]( https://github.com/sofa-framework/sofa/pull/1744 ); - **[SofaCore]** Remove empty file [#2204]( https://github.com/sofa-framework/sofa/pull/2204 ); - **[SofaCore_simutest]** Add tests for Link::CheckPath [#1714]( https://github.com/sofa-framework/sofa/pull/1714 ); - **[SofaCore_test]** Update the two failling tests so they match the new convention for TypeInfo [#1709]( https://github.com/sofa-framework/sofa/pull/1709 ); - **[SofaExplicitOdeSolver]** Mark Data as disabled [#2218]( https://github.com/sofa-framework/sofa/pull/2218 ); - [SofaExporter] Remove SofaBaseVisual dependency [#2039]( https://github.com/sofa-framework/sofa/pull/2039 ); - [SofaExporter] Removed duplicated header guard [#1954]( https://github.com/sofa-framework/sofa/pull/1954 ); - [SofaExporter] Update OBJExporter example [#1782]( https://github.com/sofa-framework/sofa/pull/1782 ); - **[SofaFramework/Sofa.Testing]** remove macro and move testing resources from SofaFramework [#2000]( https://github.com/sofa-framework/sofa/pull/2000 ); - **[SofaFramework]** Remove warnings (a lot) [#1876]( https://github.com/sofa-framework/sofa/pull/1876 ); - [SofaGeneralEngine] Add option in NearestPointROI to use restPosition or position [#1978]( https://github.com/sofa-framework/sofa/pull/1978 ); - [SofaGeneralEngine] Remove dep on IdentityMapping (because of helper::eq) [#2090]( https://github.com/sofa-framework/sofa/pull/2090 ); - [SofaGeneralMeshCollision] Introduce RayTraceNarrowPhase [#2145]( https://github.com/sofa-framework/sofa/pull/2145 ); - [SofaGuiCommon] Clean includes [#2064]( https://github.com/sofa-framework/sofa/pull/2064 ); - [SofaGuiQt] FIX warning in GraphListenerQListView [#2091]( https://github.com/sofa-framework/sofa/pull/2091 ); - **[SofaHelper]** Clarify with global namespace [#1953]( https://github.com/sofa-framework/sofa/pull/1953 ); - **[SofaHelper]** Moves operator>> specialisation for int from set.h to set.cpp [#1902]( ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:202346,Test,Testing,202346,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Test', 'test']","['Testing', 'testing']"
Testability, - [IO] Rename Data [#4679](https://github.com/sofa-framework/sofa/pull/4679); - [ODESolver] Rename Data [#4680](https://github.com/sofa-framework/sofa/pull/4680); - [Playback] Rename Data [#4681](https://github.com/sofa-framework/sofa/pull/4681); - [Setting] Rename Data [#4682](https://github.com/sofa-framework/sofa/pull/4682); - [Topology] Rename Data [#4683](https://github.com/sofa-framework/sofa/pull/4683); - [Visual] Rename Data [#4684](https://github.com/sofa-framework/sofa/pull/4684); - [Constraint] Rename Data [#4696](https://github.com/sofa-framework/sofa/pull/4696); - [all] Rename depreciation macros in config.h.in for unique module id… [#4755](https://github.com/sofa-framework/sofa/pull/4755); - [examples] Rename FixedConstraint example [#4764](https://github.com/sofa-framework/sofa/pull/4764). ### Others. - [Helper] PluginManager: testing loading a plugin with a dependency on an other plugin [#4464](https://github.com/sofa-framework/sofa/pull/4464); - [Simulation] Tests: introduce multiple parallel simulations [#4580](https://github.com/sofa-framework/sofa/pull/4580); - [Simulation.Core] Remove useless and annoying timers [#4631](https://github.com/sofa-framework/sofa/pull/4631); - [image] Fix module name [#4720](https://github.com/sofa-framework/sofa/pull/4720); - [tools] Add metis relocation in post install fixup [#4767](https://github.com/sofa-framework/sofa/pull/4767). ## [v23.12.00]( https://github.com/sofa-framework/sofa/tree/v23.12.00 ). [Full log](https://github.com/sofa-framework/sofa/compare/v23.06..v23.12). ### Highlighted contributions; - [Mass] Remove DiagonalMass and replace with MeshMatrixMass (with lumping) [#3001](https://github.com/sofa-framework/sofa/pull/3001); - [LinearAlgebra] Pull Insimo's CompressedRowSparseMatrix into the main branch [#3515](https://github.com/sofa-framework/sofa/pull/3515); - [plugins] Add fetchable SoftRobots [#3882](https://github.com/sofa-framework/sofa/pull/3882); - [Sofa.Simulation] First steps to remove the,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:20657,Test,Tests,20657,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Tests']
Testability," - [LinearAlgebra] Fix BDT compilation [#3333](https://github.com/sofa-framework/sofa/pull/3333) ; - [BarycentricMappers] Fix potential division by 0 [#3383](https://github.com/sofa-framework/sofa/pull/3383) ; - [Engine.Analyze] ClusteringEngine: set correct values in load() [#3398](https://github.com/sofa-framework/sofa/pull/3398) ; - [Tests] Update tests to new modules [#3406](https://github.com/sofa-framework/sofa/pull/3406) ; - [Tests] Fix mutiple component init calls in several tests [#3447](https://github.com/sofa-framework/sofa/pull/3447) ; - [image, FEM, LinearSolver] fix Eigen3 assertion with SVD [#3452](https://github.com/sofa-framework/sofa/pull/3452) ; - [Constraint.lagrangian] Update BilateralInteractionConstraint namespace [#3468](https://github.com/sofa-framework/sofa/pull/3468) ; - [Topology.container] Fix missing TopologyElementType setting in SparseGridTopology init [#3475](https://github.com/sofa-framework/sofa/pull/3475) ; - [LinearSolver.Direct] Fix crashing unit tests [#3512](https://github.com/sofa-framework/sofa/pull/3512) ; - [LinearSolver.Direct] Segfault in SparseLDLSolver due to empty system matrix [#3529](https://github.com/sofa-framework/sofa/pull/3529) ; - [Tests] Update required plugins in tests [#3542](https://github.com/sofa-framework/sofa/pull/3542) . **Plugins / Projects**; - [SofaCUDA] FIX namespaces [#2935](https://github.com/sofa-framework/sofa/pull/2935) ; - [Plugins] Fix Cmake configuration w/o compat [#3209](https://github.com/sofa-framework/sofa/pull/3209) ; - [GUI.Qt] Fix MSAA sampling setup [#3220](https://github.com/sofa-framework/sofa/pull/3220) ; - [DrawToolGL] Fix ill-formed drawLines with multiple colors [#3260](https://github.com/sofa-framework/sofa/pull/3260) ; - [SofaSphFluid] Fix required plugin in scenes [#3272](https://github.com/sofa-framework/sofa/pull/3272) ; - [SofaCarving] Fix bug in CarvingManager when searching for target collision model [#3276](https://github.com/sofa-framework/sofa/pull/3276) ; - [GUI/r",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:80889,test,tests,80889,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability, ; - [IO.Mesh] Fix UB when filename is empty [#3689](https://github.com/sofa-framework/sofa/pull/3689) ; - [FEM.Elastic] Check for nullptr in BeamFEMForceField [#3690](https://github.com/sofa-framework/sofa/pull/3690) ; - [Spring] Check for nullptr in RestShapeSpringsForceField [#3691](https://github.com/sofa-framework/sofa/pull/3691) ; - [Testing] Fix CMake config after removal of compat [#3694](https://github.com/sofa-framework/sofa/pull/3694) ; - [LinearAlgebra] Fix crash when matrix has no nonzero values [#3700](https://github.com/sofa-framework/sofa/pull/3700) ; - [IO.Mesh] Fix mesh creation if load called multiple times [#3702](https://github.com/sofa-framework/sofa/pull/3702) ; - [LinearSolver.Direct] Make sure the matrix is factorized in SparseCholeskySolver [#3706](https://github.com/sofa-framework/sofa/pull/3706) ; - [GUI.Qt] Register meta type to fix asynchronous Qt call [#3749](https://github.com/sofa-framework/sofa/pull/3749) ; - [Tests] S.Components tests compiles with SReal=float [#3755](https://github.com/sofa-framework/sofa/pull/3755) ; - [Mapping.NonLinear] Fix SquareMapping applyDJT [#3761](https://github.com/sofa-framework/sofa/pull/3761); - [LinearAlgebra] Restore insertion operator for BaseVector [#3775](https://github.com/sofa-framework/sofa/pull/3775) ; - [StateContainer] Fix bug in dynamic data registration [#3783](https://github.com/sofa-framework/sofa/pull/3783) ; - [Rendering3D] Missing StateLifeCycle [#3784](https://github.com/sofa-framework/sofa/pull/3784) ; - [Mapping.Nonlinear] Fix matrix assembly in RigidMapping [#3803](https://github.com/sofa-framework/sofa/pull/3803) ; - [Visual] VisualModelImpl: Fix updateVisual() [#3815](https://github.com/sofa-framework/sofa/pull/3815) ; - [LinearSolver.Iterative] CMake: Fix package configuration [#3840](https://github.com/sofa-framework/sofa/pull/3840) ; - [Rendering3D] OglModel: Revert back to glBufferSubData [#3841](https://github.com/sofa-framework/sofa/pull/3841) ; - [SolidMechanics.Spring],MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:58142,test,tests,58142,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability," For **bug tracking**, **feature proposals** and **task management**, create a [SOFA issue](https://github.com/sofa-framework/sofa/issues)! There is nothing to it and whatever issue you are having, you are likely not the only one, so others will find your issue helpful, too. Issues labeled ""discussion"" are also used for larger topics: architecture, future of SOFA, long term dev, etc. Please **DO NOT create an issue for questions or support**. Use [the GitHub Discussions](https://github.com/sofa-framework/sofa/discussions) instead. When creating an issue, pay attention to the following tips:. - **Check existing issues**. What you are running into may have been addressed already.; - **Set the right label** to your issue among our label list or propose them in the description.; - **Be clear** about what your problem is: what was the expected outcome, what happened instead? Detail how someone else can recreate the problem.; - If your issue reports a bug or any abnormal behavior in SOFA, a **test highlighting the issue** should be written and pull requested. For more information on issues, check out [this GitHub guide](https://guides.github.com/features/issues/). . # Pull requests. If you are able to patch the bug or add the feature yourself – fantastic, make a pull request with the code! Be sure you have read any documents on contributing and you understand [the SOFA license](https://github.com/sofa-framework/sofa/blob/master/LICENCE.txt). Once you have submitted a pull request the maintainer(s) can compare your branch to the existing one and decide whether or not to incorporate (pull in) your changes. ### Reminder - How to pull request (from GitHub documentation). - **[Fork](http://guides.github.com/activities/forking/)** the repository and clone it locally.; - [Connect your clone](https://help.github.com/articles/configuring-a-remote-for-a-fork/) to [the original **upstream** repository](https://github.com/sofa-framework/sofa/) by adding it as a remote.; - **Create a b",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:3566,test,test,3566,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['test'],['test']
Testability," Public Licenses are designed to make sure that you; have the freedom to distribute copies of free software (and charge for; them if you wish), that you receive source code or can get it if you; want it, that you can change the software or use pieces of it in new; free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you; these rights or asking you to surrender the rights. Therefore, you have; certain responsibilities if you distribute copies of the software, or if; you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether; gratis or for a fee, you must pass on to the recipients the same; freedoms that you received. You must make sure that they, too, receive; or can get the source code. And you must show them these terms so they; know their rights. Developers that use the GNU GPL protect your rights with two steps:; (1) assert copyright on the software, and (2) offer you this License; giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains; that there is no warranty for this free software. For both users' and; authors' sake, the GPL requires that modified versions be marked as; changed, so that their problems will not be attributed erroneously to; authors of previous versions. Some devices are designed to deny users access to install or run; modified versions of the software inside them, although the manufacturer; can do so. This is fundamentally incompatible with the aim of; protecting users' freedom to change the software. The systematic; pattern of such abuse occurs in the area of products for individuals to; use, which is precisely where it is most unacceptable. Therefore, we; have designed this version of the GPL to prohibit the practice for those; products. If such problems arise substantially in other domains, we; stand ready to extend this pro",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:20831,assert,assert,20831,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['assert'],['assert']
Testability," SOFA shaders as a project of the build."" OFF); if (SOFA_BUILD_ADD_SHADERS); add_subdirectory(share/shaders); endif(). ## Build external projects at the same time; set(SOFA_EXTERNAL_DIRECTORIES """" CACHE STRING ""list of paths separated by ';'""); if(NOT ""${SOFA_EXTERNAL_DIRECTORIES}"" STREQUAL """"); foreach(dir ${SOFA_EXTERNAL_DIRECTORIES}); get_filename_component(name ${dir} NAME) # Get the name of the actual directory; message(""Adding external directory: ${name} (${dir})""); add_subdirectory(${dir} ""${CMAKE_CURRENT_BINARY_DIR}/external_directories/${name}""); endforeach(); endif(). ## Custom; if(EXISTS ""${CMAKE_CURRENT_LIST_DIR}/custom.cmake""); message(""Adding custom file""); include( ""custom.cmake"" ); endif(). ## IDE directories; # Sofa.Component; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES ""Sofa.Component.*"" AND NOT target MATCHES "".*_relocatable_install""); set_target_properties(${target} PROPERTIES FOLDER Sofa.Component) # IDE folder; endif(); endforeach(); # Testing; if(TARGET Sofa.Testing) # No need to search for test targets if tests are not enabled; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES "".*_test"" OR target MATCHES "".*_simutest""); set_target_properties(${target} PROPERTIES FOLDER Testing) # IDE folder; endif(); endforeach(); endif(); ##. ## Install configuration; #install(FILES ""${CMAKE_BINARY_DIR}/CMakeCache.txt"" DESTINATION . COMPONENT headers); install(FILES ""${CMAKE_SOURCE_DIR}/README.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/CHANGELOG.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/LICENSE-LGPL.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/Authors.txt"" DESTINATION . COMPONENT applications). option(SOFA_INSTALL_RESOURCES_FILES ""Copy resources files (etc/, share/, examples/, tools/sofa-launcher/) when installing"" ON); ## Install resource files; if(SOFA_INSTALL_RESOURCES_FILES); i",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:9622,Test,Testing,9622,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['Test'],['Testing']
Testability," SOFA structure [#3598](https://github.com/sofa-framework/sofa/pull/3598) ; - [SofaCUDA] Reorganize following SOFA structure (1/n) [#3601](https://github.com/sofa-framework/sofa/pull/3601) ; - [SofaCUDA] Reorganize following SOFA structure (2/n) [#3605](https://github.com/sofa-framework/sofa/pull/3605) ; - [SofaCUDA] Reorganize following SOFA structure (3/n) [#3660](https://github.com/sofa-framework/sofa/pull/3660) ; - [SofaCUDA] Reorganize following SOFA structure (4/n) [#3701](https://github.com/sofa-framework/sofa/pull/3701) ; - [SofaCUDA] Reorganize following SOFA structure (5/n) [#3758](https://github.com/sofa-framework/sofa/pull/3758) ; - [SofaCUDA] Reorganize following SOFA structure (6/n) [#3760](https://github.com/sofa-framework/sofa/pull/3760) ; - [SofaCUDA] Reorganize following SOFA structure (7/n) [#3785](https://github.com/sofa-framework/sofa/pull/3785) ; - [SofaCUDA] Reorganize following SOFA structure (8/n) [#3795](https://github.com/sofa-framework/sofa/pull/3795) . ### Tests. **Modules**; - [Solver.Direct] Unit test on topological changes leading to empty system [#3501](https://github.com/sofa-framework/sofa/pull/3501) ; - [LinearAlgebra] Unit tests for RotationMatrix [#3585](https://github.com/sofa-framework/sofa/pull/3585); - [LinearAlgebra] Fix matrix unit test [#3832](https://github.com/sofa-framework/sofa/pull/3832) . **Examples / Scenes**; - [examples] Introduce example and tests for SquareMapping [#3768](https://github.com/sofa-framework/sofa/pull/3768) . ## [v22.12.00]( https://github.com/sofa-framework/sofa/tree/v22.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v22.06..v22.12 ). ### Highlighted contributions. - [Core, Helper] Add spelling suggestion in ObjectFactory [#3042](https://github.com/sofa-framework/sofa/pull/3042) ; - [Constraint.Lagrangian] Add the NNCG as NLCP solver in GenericCS [#3053](https://github.com/sofa-framework/sofa/pull/3053) ; - [CMake] Introduce CMake presets [#3305](https://github.com/sofa-framew",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:68340,Test,Tests,68340,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Tests']
Testability," You want to run a lot of simulation from you own python script. In this case you should look at the file ""integration_example.py"". This example shows how to start simulation in sequence, in parallel or using a cluster. The example also shows how all the simulation results are returned back to your script so you can implement your own number-crunching processing on them, e.g.: plotting graphs with *matplotlib*. - You don't want to write your own python script but still want to start a lot a lot of simulations you should have a look at the sofa-launcher.py application.; Example:; ```batch; ./sofa-launcher example.json; ```. This application is controlled via a json configuration file; ```json; {; ""files"": [; ""example.scn"",; ""example.py""; ],; ""variables"": [; {; ""GRAVITYXML"": ""1 2 3"",; ""nbIterations"": 1000; },; {; ""GRAVITYXML"": ""2 3 4"",; ""nbIterations"": 1000; }; ],; ""launcher"": ""parallel"",; ""numjobs"": 5,; ""resultsstyle"": ""results.thtml"",; ""resultsfile"": ""results.html""; }; ```; with:. - files: The sofa files with your scene; - variables: Some values in your scene can be changed automatically in each run of your scene ; You can use any name as $MYVALUE...it depend on what you put in your scene. ; in my example scene I replace the $GRAVITYXML with a different value at each run; - launcher: Indicate to launch the simulations in parallel (other choice are sequential or ssh); - numjobs: with a maximum of 5 simulation in parallel; - resultsstyle: Name of the report file template, here html but it could be anything else (eg latex array); - resultsfile: The file generated from the template and the results. NB:. - To run the distributed version of the launcher you need all hosts to share directories as well as being able to login using ssh+key (no password login).; - Depending on the files you are using in your scene you may need to protect certain symbols: see [https://pythonhosted.org/Cheetah/users_guide/](https://pythonhosted.org/cheetah/users_guide/parserinstructions.html); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/README.md:2100,log,login,2100,tools/sofa-launcher/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/README.md,2,['log'],['login']
Testability," [#3235](https://github.com/sofa-framework/sofa/pull/3235) ; - [Constraint.Lagrangian] Make class abstract and add key function [#3240](https://github.com/sofa-framework/sofa/pull/3240) ; - [SolidMechanics.Spring] RestShapeSpringForceField: Fix addKToMatrix [#3249](https://github.com/sofa-framework/sofa/pull/3249) ; - [all] Split Tag & TagSet into separated files and fix missing includes. [#3277](https://github.com/sofa-framework/sofa/pull/3277) ; - [all] Minor warning fixes [#3306](https://github.com/sofa-framework/sofa/pull/3306) ; - [LinearSolver.Direct] Missing call to super init() [#3316](https://github.com/sofa-framework/sofa/pull/3316) ; - [LinearAlgebra] Fix BDT compilation [#3333](https://github.com/sofa-framework/sofa/pull/3333) ; - [BarycentricMappers] Fix potential division by 0 [#3383](https://github.com/sofa-framework/sofa/pull/3383) ; - [Engine.Analyze] ClusteringEngine: set correct values in load() [#3398](https://github.com/sofa-framework/sofa/pull/3398) ; - [Tests] Update tests to new modules [#3406](https://github.com/sofa-framework/sofa/pull/3406) ; - [Tests] Fix mutiple component init calls in several tests [#3447](https://github.com/sofa-framework/sofa/pull/3447) ; - [image, FEM, LinearSolver] fix Eigen3 assertion with SVD [#3452](https://github.com/sofa-framework/sofa/pull/3452) ; - [Constraint.lagrangian] Update BilateralInteractionConstraint namespace [#3468](https://github.com/sofa-framework/sofa/pull/3468) ; - [Topology.container] Fix missing TopologyElementType setting in SparseGridTopology init [#3475](https://github.com/sofa-framework/sofa/pull/3475) ; - [LinearSolver.Direct] Fix crashing unit tests [#3512](https://github.com/sofa-framework/sofa/pull/3512) ; - [LinearSolver.Direct] Segfault in SparseLDLSolver due to empty system matrix [#3529](https://github.com/sofa-framework/sofa/pull/3529) ; - [Tests] Update required plugins in tests [#3542](https://github.com/sofa-framework/sofa/pull/3542) . **Plugins / Projects**; - [SofaCUDA] FIX ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:80229,Test,Tests,80229,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Test', 'test']","['Tests', 'tests']"
Testability, [#3687](https://github.com/sofa-framework/sofa/pull/3687) ; - [IO.Mesh] Fix UB when filename is empty [#3689](https://github.com/sofa-framework/sofa/pull/3689) ; - [FEM.Elastic] Check for nullptr in BeamFEMForceField [#3690](https://github.com/sofa-framework/sofa/pull/3690) ; - [Spring] Check for nullptr in RestShapeSpringsForceField [#3691](https://github.com/sofa-framework/sofa/pull/3691) ; - [Testing] Fix CMake config after removal of compat [#3694](https://github.com/sofa-framework/sofa/pull/3694) ; - [LinearAlgebra] Fix crash when matrix has no nonzero values [#3700](https://github.com/sofa-framework/sofa/pull/3700) ; - [IO.Mesh] Fix mesh creation if load called multiple times [#3702](https://github.com/sofa-framework/sofa/pull/3702) ; - [LinearSolver.Direct] Make sure the matrix is factorized in SparseCholeskySolver [#3706](https://github.com/sofa-framework/sofa/pull/3706) ; - [GUI.Qt] Register meta type to fix asynchronous Qt call [#3749](https://github.com/sofa-framework/sofa/pull/3749) ; - [Tests] S.Components tests compiles with SReal=float [#3755](https://github.com/sofa-framework/sofa/pull/3755) ; - [Mapping.NonLinear] Fix SquareMapping applyDJT [#3761](https://github.com/sofa-framework/sofa/pull/3761); - [LinearAlgebra] Restore insertion operator for BaseVector [#3775](https://github.com/sofa-framework/sofa/pull/3775) ; - [StateContainer] Fix bug in dynamic data registration [#3783](https://github.com/sofa-framework/sofa/pull/3783) ; - [Rendering3D] Missing StateLifeCycle [#3784](https://github.com/sofa-framework/sofa/pull/3784) ; - [Mapping.Nonlinear] Fix matrix assembly in RigidMapping [#3803](https://github.com/sofa-framework/sofa/pull/3803) ; - [Visual] VisualModelImpl: Fix updateVisual() [#3815](https://github.com/sofa-framework/sofa/pull/3815) ; - [LinearSolver.Iterative] CMake: Fix package configuration [#3840](https://github.com/sofa-framework/sofa/pull/3840) ; - [Rendering3D] OglModel: Revert back to glBufferSubData [#3841](https://github.com/s,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:58122,Test,Tests,58122,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Tests']
Testability," [Sofa.DefaultType] Fix declaration of global variables [#2317]( https://github.com/sofa-framework/sofa/pull/2317 ); - [Sofa.GL] Set glew as mandatory [#2358]( https://github.com/sofa-framework/sofa/pull/2358 ); - [Sofa.Helper] Fix and micro-optimize AdvancedTimer [#2349]( https://github.com/sofa-framework/sofa/pull/2349 ); - [Sofa.Helper] More tests for NameDecoder + fix them [#2380]( https://github.com/sofa-framework/sofa/pull/2380 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framework/sofa/pull/2352 ); - [Sofa.Helper_test] ""fix"" wstring unittest [#2320]( https://github.com/sofa-framework/sofa/pull/2320 ); - [Sofa.LinearAlgebra] Fix assert in CompressedRowSparseMatrix [#2347]( https://github.com/sofa-framework/sofa/pull/2347 ); - [Sofa.LinearAlgebra] Fix installation (fwd.h) [#2337]( https://github.com/sofa-framework/sofa/pull/2337 ); - [Sofa.Type, Sofa.Topology] Fix testEdgeBuffer with clang (and add constexpr default constructors) [#2357]( https://github.com/sofa-framework/sofa/pull/2357 ); - [Sofa.Type] FIX createFromRotationVEctor, the inequality was wrong [#2332]( https://github.com/sofa-framework/sofa/pull/2332 ); - [Sofa.Type] Optimize constructor with params for sofa::type::vec [#2439]( https://github.com/sofa-framework/sofa/pull/2439 ); - [SofaBaseLinearSolver] CGLinearSolver must call super init() to check required Data [#2419]( https://github.com/sofa-framework/sofa/pull/2419 ); - [SofaBaseLinearSolver] CRS explicit instantiation [#2306]( https://github.com/sofa-framework/sofa/pull/2306 ); - [SofaBaseLinearSolver] Fix compilation when enabling CRSMultiMatrixAccessor [#2456]( https://github.com/sofa-framework/sofa/pull/2456 ); - [SofaBaseLinearSolver] Fix mulTranspose for scalar types [#2331]( https://github.com/sofa-framework/sofa/pull/2331 ); - [SofaBaseLinearSolver] Link is not overwritten [#2497]( https://github.com/sofa-framework/sofa/pull/2497 ); - [SofaBaseMechanics] Fi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:146559,test,testEdgeBuffer,146559,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['testEdgeBuffer']
Testability," [SofaCarving] Fix method doCarve should be called at AnimateEndEvent [#1532]( https://github.com/sofa-framework/sofa/pull/1532 ); - **[SofaCore]** FIX const correctness in DataTracker [#1488]( https://github.com/sofa-framework/sofa/pull/1488 ); - **[SofaCore]** FIX simu unload crash caused by missing checks on slaves ptrs [#1445]( https://github.com/sofa-framework/sofa/pull/1445 ); - **[SofaFramework]** Fix deprecated_as_error macro for MSVC [#1658]( https://github.com/sofa-framework/sofa/pull/1658 ); - [SofaGUI] Fix Cmake files for out-of-tree compilation [#1570]( https://github.com/sofa-framework/sofa/pull/1570 ); - [SofaGeneralAnimationLoop] Fix mechanical matrix mapper [#1587]( https://github.com/sofa-framework/sofa/pull/1587 ); - [SofaGeneralEngine] Fix BarycentricMapperEngine parse() function [#1516]( https://github.com/sofa-framework/sofa/pull/1516 ); - [SofaGeneralLoader] fix GIDMeshLoader and add example [#1554]( https://github.com/sofa-framework/sofa/pull/1554 ); - [SofaHelper/image] Fix unit tests [#1585]( https://github.com/sofa-framework/sofa/pull/1585 ); - **[SofaHelper]** Add SOFA/bin to SOFA_PLUGIN_PATH [#1718]( https://github.com/sofa-framework/sofa/pull/1718 ); - **[SofaHelper]** Link necessary Boost macro with SofaHelper (for Windows) [#1578]( https://github.com/sofa-framework/sofa/pull/1578 ); - **[SofaKernel]**[SofaGuiQt] Qt viewer with intel drivers [#1690]( https://github.com/sofa-framework/sofa/pull/1690 ); - **[SofaKernel]** Add updateOnTransformChange update callback on MeshLoader. [#1459]( https://github.com/sofa-framework/sofa/pull/1459 ); - **[SofaKernel]** Data file repository now looks into the SOFA install directory [#1656]( https://github.com/sofa-framework/sofa/pull/1656 ); - **[SofaKernel]** Improve check for already registered plugins [#1472]( https://github.com/sofa-framework/sofa/pull/1472 ); - **[SofaKernel]** In DataFileName, the name FILE used in the PathType enum could be ambigous [#1465]( https://github.com/sofa-framework/s",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:221338,test,tests,221338,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability," [SofaKernel]; - remove last direct opengl calls in modules; - add deprecation message on MechanicalObject attributes; - [SofaBaseVisual] clean BaseCamera: remove direct opengl calls; - [SofaHaptics] boost-thread is not used any more, clean cmake; - [SofaGeneralLoader] STLLoader: fixing binary loading in debug and cleaning examples; - [SofaPython]; - remove ScriptEnvironment i.e. automatic initialization of Node; - Node::isInitialized(), not used anymore; - [Flexible]; - clean relativeStrainMapping. ### Moved files. - move CImg from extlibs to image plugin extlibs. ### Documentation. - Add the contribution and guidelines : **CONTRIBUTING.md** and **GUIDELINES.md**; - Add the configuration required (ex: C++, compiler versions); - Add a page to use SOFA in Matlab; - Improve Logger documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/sofa-framework/sofa]( https://github.com/sofa-framework/sofa ); - creation of a RigidScale plugin: implementing mappings, especially allowing to get the DOF with Rigid+Scale type, while reusing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing to integrate a Leap in your SOFA simulation; - add the DrawTool: DrawTool is an interface, describing an API to display primitives on screen. For now, only the OpenGL (fixed-pipeline version) implementation has been made.; - add a Logger; - add the diffusion effect in SOFA (heat transfer); - SOFA_USE_MASK compilation variable to activate or de-activate the masks in SOFA; - DataTracker: simple and elegant way to track Data in Engine; - extlibs: update cimg to version 1.7.3; - Add guidelines for contributions in CONTRIBUTING.md. ### Moved files. - Kernel ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:341055,log,log,341055,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability, [StateContainer] Optimize vector operations [#3284](https://github.com/sofa-framework/sofa/pull/3284) ; - [Mapping.Linear] Add support for 2d in SubsetMultiMapping [#3321](https://github.com/sofa-framework/sofa/pull/3321) ; - [Constraint.Lagrangian] Update BilateralInteractionConstraint to support topological changes [#3329](https://github.com/sofa-framework/sofa/pull/3329) ; - [all] Unit tests for getTemplateName in some components [#3380](https://github.com/sofa-framework/sofa/pull/3380) ; - [all] Implement getModuleComponentList for most modules [#3386](https://github.com/sofa-framework/sofa/pull/3386) ; - [Constraint.Lagrangian.Solver] Add events in the constraint solver pipeline [#3418](https://github.com/sofa-framework/sofa/pull/3418) ; - [FEM.Elastic] Speedup hexa drawing in force field [#3420](https://github.com/sofa-framework/sofa/pull/3420) ; - [Visual] Introduce TrailRenderer [#3471](https://github.com/sofa-framework/sofa/pull/3471) ; - [Solver.Direct] Unit tests on empty system [#3500](https://github.com/sofa-framework/sofa/pull/3500) ; - [MechanicalLoad] Move getValue call out of the loops [#3503](https://github.com/sofa-framework/sofa/pull/3503) . **Plugins / Projects**; - [SofaCUDA] Add ConstraintCorrection instantiation in CudaVec3f/CudaVec3f1 [#3004](https://github.com/sofa-framework/sofa/pull/3004) ; - [SofaCUDA] Make CudaConstantForceField compatible with CudaRigid types [#3164](https://github.com/sofa-framework/sofa/pull/3164) ; - [GUI.performer] Add remove elements function for LineCollisionModel [#3239](https://github.com/sofa-framework/sofa/pull/3239) ; - [Regression] Test Eigen solvers scenes for regression [#3326](https://github.com/sofa-framework/sofa/pull/3326); - [Regression] Add HexahedronFEMForceFieldAndMass to regression tests [#3367](https://github.com/sofa-framework/sofa/pull/3367) ; - [SofaCarving] Update and add more tests in SofaCarving_test [#3407](https://github.com/sofa-framework/sofa/pull/3407) ; - [SofaCuda] Add method in Cu,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:75394,test,tests,75394,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability," add of SceneDataIO to save and load the current state of a simulation; - add of the method getDataFields; - adding automatically tested examples; - add tags to MeshAttributes; - add a helper PythonScriptFunction_call and PythonScriptFunction_callNoResult to call a python controller function from c++ code; - PythonScriptHelper -> PythonScriptControllerHelper: PythonScriptHelper: add convertion for float and std::string; - Add the timingEnabled attribute to the PythonScriptController to control if the script is gather timing statistics; - adding python module to load .obj files; - adding BaseContext_getObject_noWarning that returns None w/o warning if the object is not found; - improving a bit the conversion from a cpp Base* to a PyObject* when the cpp Base* type is (even partially) known.; - adding a test to show how to bind a component outside of SofaPython; - Factory: conversion shortcuts for known types; - PythonScriptController: if the filename is let empty, the controller is supposed to be in an already loaded file, to avoid to read the same file several times; - adding ""loadPlugin"" function to the Sofa python module; - Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name.; - object and type names are now both optional when calling BaseContext_getObjects(); - search direction can now optionally be passed to BaseContext_getObjects(); - at object creation failure, print additional error messages from BaseObjectDescription; - adding special Data types in the PythonFactory, so more specific cases can be added outside of the plugin SofaPython.; - adding Node::addObject_noWarning not to print a warning when adding an object to an already initialized node; - add of a method which compute quaternion from a line define by a director vector; - add of few new features to save and load the current state of simulation. - [Flexible]; - adding FlexibleCorotationalMeshFEMForceField (meta-forcefield). Not optimized but wor",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:349486,test,test,349486,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability, computeBBox() [#634]( https://github.com/sofa-framework/sofa/pull/634 ); - [All] FIX warnings [#584]( https://github.com/sofa-framework/sofa/pull/584 ); - [All] Various small changes in error messages & bugfix from defrost branches [#660]( https://github.com/sofa-framework/sofa/pull/660 ); - [SofaConstraint] FIX: Moving semicolon under preprocessor define [#680]( https://github.com/sofa-framework/sofa/pull/680 ); - **[SofaEngine]** FIX Bug in BoxROI that is not properly initialized [#627]( https://github.com/sofa-framework/sofa/pull/627 ); - **[SofaFramework]** Fix plugin list configuration [#645]( https://github.com/sofa-framework/sofa/pull/645 ); - [SofaGraphComponent] FIX SceneChecker_test + ADD alias test [#711]( https://github.com/sofa-framework/sofa/pull/711 ); - [SofaGraphComponent] FIX SceneCheck build on MacOS [#719]( https://github.com/sofa-framework/sofa/pull/719 ); - [SofaGuiQt] FIX missing resources [#758]( https://github.com/sofa-framework/sofa/pull/758 ); - [SofaGeneralEngine] FIX disabled tests [#675]( https://github.com/sofa-framework/sofa/pull/675 ); - **[SofaHelper]** More robust method to test end of string [#617]( https://github.com/sofa-framework/sofa/pull/617 ); - **[SofaKernel]** FIX macro issue resulted from the #include cleaning. [#672]( https://github.com/sofa-framework/sofa/pull/672 ); - [SofaMiscFem] FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaOpenglVisual] FIX MacOS crash in batch mode [#646]( https://github.com/sofa-framework/sofa/pull/646 ); - **[SofaSimulationGraph]** FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaSparseSolver] FIX SparseLDL crash and add proper SOFA_FLOAT/DOUBLE mangement [#655]( https://github.com/sofa-framework/sofa/pull/655 ). **Plugins / Projects**; - [CGALPlugin] FIX compilation issue with recent version of CGAL (4.11) & Ubunu 18.04 LTS [#664]( https://github.com/sofa-framework/sofa/pull/664 ); - [CImgPlugin] Export CImg_CFLAGS [#595]( ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:297041,test,tests,297041,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability," documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/sofa-framework/sofa]( https://github.com/sofa-framework/sofa ); - creation of a RigidScale plugin: implementing mappings, especially allowing to get the DOF with Rigid+Scale type, while reusing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing to integrate a Leap in your SOFA simulation; - add the DrawTool: DrawTool is an interface, describing an API to display primitives on screen. For now, only the OpenGL (fixed-pipeline version) implementation has been made.; - add a Logger; - add the diffusion effect in SOFA (heat transfer); - SOFA_USE_MASK compilation variable to activate or de-activate the masks in SOFA; - DataTracker: simple and elegant way to track Data in Engine; - extlibs: update cimg to version 1.7.3; - Add guidelines for contributions in CONTRIBUTING.md. ### Moved files. - Kernel modules of SOFA (SofaFramework, SofaBase, SofaCommon and SofaSimulation) have been moved to one common module SofaKernel, located at _sofa_root/SofaKernel_. SofaKernel is a pure LGPL module.; - code in _sofa_root/modules/sofa/simulation/_ has been splitted into three modules of SofaKernel: SofaSimulationCommon, SofaSimulationTree, SofaSimulationGraph; - MOVE the SofaPardiso module as a plugin; - Move OglTetrahedralModel into a new plugin called VolumetricRendering. - Minor moves; - Move ColorMap code to helper and let (Ogl)ColorMap from SofaOpenGLVisual doing OpenGL stuff; - Move TorsionForceField and ComplementaryROI into SOFA (those two components where in a deprecated repository _sofa_root/modules/sofa/components/_). - [Compliant]; - moving propagate_constraint_force_visitor",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:341717,Log,Logger,341717,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Log'],['Logger']
Testability, fix & new features. [#656]( https://github.com/sofa-framework/sofa/pull/656 ). **Tools**; - [tools] FIX sofa-launcher stdout [#592]( https://github.com/sofa-framework/sofa/pull/592 ). ### Bug Fixes. **Modules**; - [All] FIX VS2017 build (Windows) [#630]( https://github.com/sofa-framework/sofa/pull/630 ); - [All] Fix computeBBox() [#634]( https://github.com/sofa-framework/sofa/pull/634 ); - [All] FIX warnings [#584]( https://github.com/sofa-framework/sofa/pull/584 ); - [All] Various small changes in error messages & bugfix from defrost branches [#660]( https://github.com/sofa-framework/sofa/pull/660 ); - [SofaConstraint] FIX: Moving semicolon under preprocessor define [#680]( https://github.com/sofa-framework/sofa/pull/680 ); - **[SofaEngine]** FIX Bug in BoxROI that is not properly initialized [#627]( https://github.com/sofa-framework/sofa/pull/627 ); - **[SofaFramework]** Fix plugin list configuration [#645]( https://github.com/sofa-framework/sofa/pull/645 ); - [SofaGraphComponent] FIX SceneChecker_test + ADD alias test [#711]( https://github.com/sofa-framework/sofa/pull/711 ); - [SofaGraphComponent] FIX SceneCheck build on MacOS [#719]( https://github.com/sofa-framework/sofa/pull/719 ); - [SofaGuiQt] FIX missing resources [#758]( https://github.com/sofa-framework/sofa/pull/758 ); - [SofaGeneralEngine] FIX disabled tests [#675]( https://github.com/sofa-framework/sofa/pull/675 ); - **[SofaHelper]** More robust method to test end of string [#617]( https://github.com/sofa-framework/sofa/pull/617 ); - **[SofaKernel]** FIX macro issue resulted from the #include cleaning. [#672]( https://github.com/sofa-framework/sofa/pull/672 ); - [SofaMiscFem] FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaOpenglVisual] FIX MacOS crash in batch mode [#646]( https://github.com/sofa-framework/sofa/pull/646 ); - **[SofaSimulationGraph]** FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaSparseSolver] FIX SparseLDL crash ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:296735,test,test,296735,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability, fix to compile on Mac OSX Xcode 9 and Linux gcc 7.3.0 [#969]( https://github.com/sofa-framework/sofa/pull/969 ); - **[SofaKernel]** FIX: force name data to contain something [#1009]( https://github.com/sofa-framework/sofa/pull/1009 ); - **[SofaKernel]** Fix error in MapperHexahedron and MapperQuad barycentric coef computation [#1057]( https://github.com/sofa-framework/sofa/pull/1057 ); - **[SofaKernel]** Fix: remove unwanted AdvanceTimer::begin command [#1029]( https://github.com/sofa-framework/sofa/pull/1029 ); - **[SofaKernel]** Remove warnings [#968]( https://github.com/sofa-framework/sofa/pull/968 ); - **[SofaKernel]** several small fix [#953]( https://github.com/sofa-framework/sofa/pull/953 ); - [SofaLoader] Fix positions when handleSeams is activated in MeshObjLoader [#923]( https://github.com/sofa-framework/sofa/pull/923 ); - [SofaMeshCollision] Fix TriangleModel to handle topology changes [#903]( https://github.com/sofa-framework/sofa/pull/903 ); - **[SofaSimulationCore]** Remove unjustified Assert in getSimulation() [#1082]( https://github.com/sofa-framework/sofa/pull/1082 ); - **[SofaSimulationCore]** FIX CollisionVisitor::processCollisionPipeline [#962]( https://github.com/sofa-framework/sofa/pull/962 ); - [SofaTests] Fix small bugs in the Multi2Mapping_test [#1078]( https://github.com/sofa-framework/sofa/pull/1078 ). **Plugins / Projects**; - [CImgPlugin] FIX: messed up package prefix in CImg [#921]( https://github.com/sofa-framework/sofa/pull/921 ); - [Geomagic] FIX compilation error in Geomagic plugin with removal of SOFA_FLOAT/DOUBLE [#898]( https://github.com/sofa-framework/sofa/pull/898 ); - [image] Fix image_gui plugin loading [#1015]( https://github.com/sofa-framework/sofa/pull/1015 ); - [image] Message API is needed even if no python [#1068]( https://github.com/sofa-framework/sofa/pull/1068 ); - [runSofa] FIX the opening of ModifyObject view. [#1010]( https://github.com/sofa-framework/sofa/pull/1010 ); - [runSofa] Fix runSofa -a option with a gu,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:268701,Assert,Assert,268701,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Assert'],['Assert']
Testability," https://github.com/sofa-framework/sofa/pull/1311 ); - [SofaCUDA] Compilation without OpenGL [#1242]( https://github.com/sofa-framework/sofa/pull/1242 ). **Examples / Scenes**; - [examples] Add a scene illustrating ShewchukPCG [#1420]( https://github.com/sofa-framework/sofa/pull/1420 ). ### Bug Fixes. **Architecture**; - [CMake] Add SofaNonUniformFem to the dependencies of SofaMisc [#1384]( https://github.com/sofa-framework/sofa/pull/1384 ); - [SofaFramework/CMake] Create configuration type dir before copying lib [#1347]( https://github.com/sofa-framework/sofa/pull/1347 ); - [extlibs/gtest] Add character test in gtest paramName to allow dash character [#1265]( https://github.com/sofa-framework/sofa/pull/1265 ). **Modules**; - [All] Clean warnings for option config, again [#1339]( https://github.com/sofa-framework/sofa/pull/1339 ); - [All] Fix SOFA_LIBSUFFIX used in Debug by PluginManager [#1313]( https://github.com/sofa-framework/sofa/pull/1313 ); - [All] Overridden 'canCreate' methods should always log an error message when they fail [#1294]( https://github.com/sofa-framework/sofa/pull/1294 ); - **[SofaBaseTopology]** Fix GridTopology edge computation [#1323]( https://github.com/sofa-framework/sofa/pull/1323 ); - **[SofaBaseTopology]**[SofaExporter] Fix failing tests due to changes in topology [#1335]( https://github.com/sofa-framework/sofa/pull/1335 ); - [SofaConstraint] Fix test further to #1369 [#1386]( https://github.com/sofa-framework/sofa/pull/1386 ); - **[SofaEigen2Solver]** Fix CMake test on the version of Eigen [#1416]( https://github.com/sofa-framework/sofa/pull/1416 ); - **[SofaEngine]** Fix engine unit tests [#1280]( https://github.com/sofa-framework/sofa/pull/1280 ); - **[SofaEngine]** Fix Engine_test [#1338]( https://github.com/sofa-framework/sofa/pull/1338 ); - **[SofaFramework]** Windows/VS: Remove warnings flags from definitions [#1368]( https://github.com/sofa-framework/sofa/pull/1368 ); - [SofaGuiQt] Fix compilation for SOFA_DUMP_VISITOR_INFO [#1",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:234154,log,log,234154,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability," https://github.com/sofa-framework/sofa/pull/1384 ); - [SofaFramework/CMake] Create configuration type dir before copying lib [#1347]( https://github.com/sofa-framework/sofa/pull/1347 ); - [extlibs/gtest] Add character test in gtest paramName to allow dash character [#1265]( https://github.com/sofa-framework/sofa/pull/1265 ). **Modules**; - [All] Clean warnings for option config, again [#1339]( https://github.com/sofa-framework/sofa/pull/1339 ); - [All] Fix SOFA_LIBSUFFIX used in Debug by PluginManager [#1313]( https://github.com/sofa-framework/sofa/pull/1313 ); - [All] Overridden 'canCreate' methods should always log an error message when they fail [#1294]( https://github.com/sofa-framework/sofa/pull/1294 ); - **[SofaBaseTopology]** Fix GridTopology edge computation [#1323]( https://github.com/sofa-framework/sofa/pull/1323 ); - **[SofaBaseTopology]**[SofaExporter] Fix failing tests due to changes in topology [#1335]( https://github.com/sofa-framework/sofa/pull/1335 ); - [SofaConstraint] Fix test further to #1369 [#1386]( https://github.com/sofa-framework/sofa/pull/1386 ); - **[SofaEigen2Solver]** Fix CMake test on the version of Eigen [#1416]( https://github.com/sofa-framework/sofa/pull/1416 ); - **[SofaEngine]** Fix engine unit tests [#1280]( https://github.com/sofa-framework/sofa/pull/1280 ); - **[SofaEngine]** Fix Engine_test [#1338]( https://github.com/sofa-framework/sofa/pull/1338 ); - **[SofaFramework]** Windows/VS: Remove warnings flags from definitions [#1368]( https://github.com/sofa-framework/sofa/pull/1368 ); - [SofaGuiQt] Fix compilation for SOFA_DUMP_VISITOR_INFO [#1415]( https://github.com/sofa-framework/sofa/pull/1415 ); - [SofaGuiQt] Fix node graph [#1424]( https://github.com/sofa-framework/sofa/pull/1424 ); - [SofaHeadlessRecorder] Update headless recorder to use the new ffmpeg recorder [#1396]( https://github.com/sofa-framework/sofa/pull/1396 ); - **[SofaHelper]** AdvancedTimer wasn't using the good timer ids for the label assignments [#1244]( htt",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:234539,test,test,234539,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability, inequality was wrong [#2332]( https://github.com/sofa-framework/sofa/pull/2332 ); - [SofaBoundaryCondition] Fix ProjectToLineConstraint_RemovingMeshTest.scn [#2241]( https://github.com/sofa-framework/sofa/pull/2241 ); - [SofaConstraint] fix segfault in GenericConstraintSolver [#2265]( https://github.com/sofa-framework/sofa/pull/2265 ); - [SofaGeneralEngine] Fix a typo in the PairBoxRoi.inl [#2324]( https://github.com/sofa-framework/sofa/pull/2324 ). **Plugins / Projects**; - [Geomagic] Fix compilation of code with openHaptics due to sofa::type namespace missing. [#2229]( https://github.com/sofa-framework/sofa/pull/2229 ); - [SofaGuiGlut] FIX compilation for v21.06 [#2274]( https://github.com/sofa-framework/sofa/pull/2274 ). ### Cleanings; **Modules**; - [All] Minor code cleaning [#2225]( https://github.com/sofa-framework/sofa/pull/2225 ). ____________________________________________________________. ## [v21.06.00]( https://github.com/sofa-framework/sofa/tree/v21.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.03...v21.06.00 ). ### SOFA-NG; **Architecture**; - [CMake] Macro replace dot with underscore for preprocessor defines [#1701]( https://github.com/sofa-framework/sofa/pull/1701 ). **Modules**; - **[Sofa.Type]** Remove stdtype subdirectory [#1946]( https://github.com/sofa-framework/sofa/pull/1946 ); - **[SofaBaseCollision]** Move OBB/Capsule-related intersections/detections/contacts to SofaMiscCollision [#2073]( https://github.com/sofa-framework/sofa/pull/2073 ); - **[SofaBaseCollision]** Remove dependencies on BaseIntTool [#2081]( https://github.com/sofa-framework/sofa/pull/2081 ); - **[SofaCore]** Clean dependencies to SimulationCore [#1928]( https://github.com/sofa-framework/sofa/pull/1928 ); - **[SofaFramework]** Create Sofa.Config module [#1674]( https://github.com/sofa-framework/sofa/pull/1674 ); - **[SofaFramework]** Create Sofa.Testing module [#1834]( https://github.com/sofa-framework/sofa/pull/1834 ); - **[SofaFramework]** Iso,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:167097,log,log,167097,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability, install on Windows [#1949]( https://github.com/sofa-framework/sofa/pull/1949 ). **Modules**; - [SofaGeneralExplicitOdeSolver] Fix typo in CentralDifferenceSolver description [#1894]( https://github.com/sofa-framework/sofa/pull/1894 ); - [SofaGuiQt] Fix RealGUI: QDesktopWidget header missing for Qt < 5.11 [#1904]( https://github.com/sofa-framework/sofa/pull/1904 ); - [SofaGuiQt] FIX segfault due to qFatal in GenGraphForm [#1948]( https://github.com/sofa-framework/sofa/pull/1948 ); - **[SofaHelper]** Fix out of bounds error [#1868]( https://github.com/sofa-framework/sofa/pull/1868 ). **Plugins / Projects**; - [SofaCUDA] change the setTopology method signature [#1843]( https://github.com/sofa-framework/sofa/pull/1843 ). **Examples / Scenes**; - [examples] Add missing RequiredPlugin [#1895]( https://github.com/sofa-framework/sofa/pull/1895 ). ____________________________________________________________. ## [v20.12.01]( https://github.com/sofa-framework/sofa/tree/v20.12.01 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.00...v20.12.01 ). ### Improvements; **Modules**; - [SofaGui] Improve background v20.12 [#1758]( https://github.com/sofa-framework/sofa/pull/1758 ); - **[SofaHelper]** ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). **Plugins / Projects**; - [SofaPython] ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). ### Bug Fixes; **Architecture**; - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ). **Modules**; - [All] FIX build without SofaPython soft dependencies [#1829]( https://github.com/sofa-framework/sofa/pull/1829 ); - [All] Fix invalid Memory access in MechanicalObject and Compliant_test [#1849]( https://github.com/sofa-framework/sofa/pull/1849 ); - [All] Almost green dashboard [#1669]( https://github.com/sofa-framework/sofa/pull/1669 ); - **[SofaCore_,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:210512,log,log,210512,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability," interface [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - DistanceGrid; - [SofaBoundaryCondition]; - ConstantForceField: clean to follow sofa guideline & fix the ""visible dependencies"" [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - ConstantForceField: replace the ""points"" attribute by ""indices"" with backward compatibility & deprecation message [#258]( https://github.com/sofa-framework/sofa/pull/258 ). **Plugins / Projects**; - [SceneCreator]; - clean with cosmetic changes and removed un-needed includes; - [SofaPython]; - cleaning data binding [#166]( https://github.com/sofa-framework/sofa/pull/166 ). ### Moved files. - The module handling HighOrderTopologies moved into a [separate repository]( https://github.com/sofa-framework/plugin.HighOrder) [#222](https://github.com/sofa-framework/sofa/pull/222 ). ____________________________________________________________. ## [v16.12]( https://github.com/sofa-framework/sofa/tree/v16.12 ). **Last commit: on Jan 08, 2017** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v16.08...v16.12 ). ### Environment; - **C++11 is now mandatory**. This implies some changes in building tools.; - Generator: CMake 3.1 or higher.; - Compiler: GCC 4.8 or higher, Clang 3.4 or higher, Microsoft Visual C++ 2013 or higher. ### New features for users. - new Geomagic plugin: supporting latest versions of force feedback interfaces from Geomagic; - add ForceMaskOff, a component to locally (in a branch of the scene graph) cancel the force mask; - live-coding for python; - live-coding for GLSL; - new component MakeAlias; - new component MakeDataAlias; - improved error message & console rendering. ### New features for developpers. - Preliminary Markdown support in the msg_* API. You can now write much better formatting & alignement as well as adding URL to documentations related to the error.; - class RichStyleConsoleFormatter which interprete the markdowns in the message and format this to a resizable console with ni",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:336575,log,log,336575,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability, methods [#2178]( https://github.com/sofa-framework/sofa/pull/2178 ); - **[SofaBaseMechanics]** Clean DiagonalMass init [#2186]( https://github.com/sofa-framework/sofa/pull/2186 ); - **[SofaBaseMechanics]** Restore tests commented by mistake [#2104]( https://github.com/sofa-framework/sofa/pull/2104 ); - **[SofaBaseMechanics]** fixes reinit of BarycentricMapping [#1815]( https://github.com/sofa-framework/sofa/pull/1815 ); - **[SofaBaseMechanics]** Fix bug when deleting point. Mass vector was not well recomputed. [#2164]( https://github.com/sofa-framework/sofa/pull/2164 ); - **[SofaBaseMechanics_test]** Add more checks in DiagonalMass_test [#2183]( https://github.com/sofa-framework/sofa/pull/2183 ); - **[SofaBaseTopology]** Add security in TopologyData to check input Topology pointer [#2027]( https://github.com/sofa-framework/sofa/pull/2027 ); - **[SofaBaseTopology]** Missing override keyword [#2035]( https://github.com/sofa-framework/sofa/pull/2035 ); - **[SofaBaseTopology]** correct the logic issue in computeEdgeSegmentIntersection [#2184]( https://github.com/sofa-framework/sofa/pull/2184 ); - [SofaConstraint] Fix symbol export of BilateralInteractionConstraint on RigidTypes [#2031]( https://github.com/sofa-framework/sofa/pull/2031 ); - **[SofaCore]** FIX Issue #1865 [#1866]( https://github.com/sofa-framework/sofa/pull/1866 ); - **[SofaCore]** FIX buffer overflow when using AddressSanitizer [#2121]( https://github.com/sofa-framework/sofa/pull/2121 ); - **[SofaCore]** Fix explicit instantiations with MultiMapping [#1982]( https://github.com/sofa-framework/sofa/pull/1982 ); - **[SofaCore]** Remove duplicated explicit instanciation [#1981]( https://github.com/sofa-framework/sofa/pull/1981 ); - **[SofaDefaultType][SofaCUDA]** FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - [SofaDeformable] Fix test in StiffSpringForceField doUpdateInternal [#1979]( https://github.com/sofa-framework/sofa/pull/1979 ); - **[SofaFramework]** Fix config ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:183687,log,logic,183687,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['logic']
Testability," object is added in a node. [#2396]( https://github.com/sofa-framework/sofa/pull/2396 ); - [SofaSparseSolver] Apply fill in permutation in SparseLDLSolver [#2762]( https://github.com/sofa-framework/sofa/pull/2762 ); - [SofaSparseSolver] Introduction of an asynchronous LDL solver [#2661]( https://github.com/sofa-framework/sofa/pull/2661 ); - [SofaSparseSolver] Added the choice to compute the decomposition at each step [#2756]( https://github.com/sofa-framework/sofa/pull/2756 ). **Plugins / Projects**; - [plugins] Add BeamAdapter as a new plugin [#2890]( https://github.com/sofa-framework/sofa/pull/2890 ); - [ArticulatedSystemPlugin] ArticulatedSystemMapping new features [#2803]( https://github.com/sofa-framework/sofa/pull/2803 ); - [ArticulatedSystemPlugin] New example [#2804]( https://github.com/sofa-framework/sofa/pull/2804 ); - [SofaCUDA] Add ConstantForceField, MultiMapping and SubsetMultiMapping [#2557]( https://github.com/sofa-framework/sofa/pull/2557 ); - [SofaCUDA] Add benchmark scenes to check CudaMeshSpringForceField [#2556]( https://github.com/sofa-framework/sofa/pull/2556 ); - [SofaCUDA] Add benchmarks logs in .csv file [#2588]( https://github.com/sofa-framework/sofa/pull/2588 ); - [SofaCUDA] Add support for NearestPointROI [#2620]( https://github.com/sofa-framework/sofa/pull/2620 ); - [SofaCUDA] Add support of CudaVector for qt gui dataWidget [#2558]( https://github.com/sofa-framework/sofa/pull/2558 ); - [SofaMatrix] A new plugin adding tools for linear system matrix [#2517]( https://github.com/sofa-framework/sofa/pull/2517 ); - [SofaMatrix] Eigen can be used to reorder a mesh in order to reduce fill-in [#2875]( https://github.com/sofa-framework/sofa/pull/2875 ); - [SofaMatrix] Export the compliance matrix of a constraint solver [#2782]( https://github.com/sofa-framework/sofa/pull/2782 ); - [SofaMatrix] More details in the readme file [#2580]( https://github.com/sofa-framework/sofa/pull/2580 ); - [SofaMatrix] Setup arithmetic precision for matrix export [#",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:102555,benchmark,benchmark,102555,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['benchmark'],['benchmark']
Testability, of Multi2Mapping_test; - add DistanceMapping_test. - [SofaPython]; - logger: cleaning emitter; - sml.Mesh: adding load function; - sml: python set for tags is created by objects themselves; - sml: add tag to JointGeneric; - sml: add the printLog flag; - sml: setup units in BaseScene for all sml Scene class; - sml: mesh has a clear id; - sml:insertVisual: bug fix for solid with multiple meshes (just impacting the Display scene); - sml: handy constructor for Dof creation; - sml: like <mesh> <image> can be defined in <solid>; - sml: add a utility function: look into the valueByTag dictionary for a tag contained in tags; - sml: adding a warning if a vertex group is empty; - sml: can have offsets under solids; - sml: remove deprecated setTagFromTag() method; - API: add subsetFromDeformables function; - binding Node::isInitialized; - binding loadPythonSceneWithArguments; - adding a binding to get the pointer of a Data (with its dimensions and type); - adding binding of BaseMapping::getJs (as dense matrices for now); - adding python functions to convert a Data in a numpy array with shared memory; - adding a visitor to set all mstates as non pickable (such as picking will only be performed with collision models); - add tags to mesh groups; - add a groupsByTag dict to easily iterate over groups knowing a tag; - add of SceneDataIO to save and load the current state of a simulation; - add of the method getDataFields; - adding automatically tested examples; - add tags to MeshAttributes; - add a helper PythonScriptFunction_call and PythonScriptFunction_callNoResult to call a python controller function from c++ code; - PythonScriptHelper -> PythonScriptControllerHelper: PythonScriptHelper: add convertion for float and std::string; - Add the timingEnabled attribute to the PythonScriptController to control if the script is gather timing statistics; - adding python module to load .obj files; - adding BaseContext_getObject_noWarning that returns None w/o warning if the object is not,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:348804,test,tested,348804,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tested']
Testability, parsing by using the proper locale. [#2200]( https://github.com/sofa-framework/sofa/pull/2200 ); - [SofaLoader] FIX Circular dependency in the update of MeshObjLoader [#2201]( https://github.com/sofa-framework/sofa/pull/2201 ); - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ); - [SofaMeshCollision] Fix: windows debug linkage of class EmptyFilter [#1839]( https://github.com/sofa-framework/sofa/pull/1839 ); - [SofaMiscCollision] Contact response order [#2134]( https://github.com/sofa-framework/sofa/pull/2134 ); - [SofaMiscCollision] Fix config.in cmake file for export [#2052]( https://github.com/sofa-framework/sofa/pull/2052 ); - [SofaMiscFEM] Minor changes in TrianglePressureFF and TriangularFEMFF [#1779]( https://github.com/sofa-framework/sofa/pull/1779 ); - [SofaMiscForceField] Clean MeshMatrixMass_test and add more tests [#2191]( https://github.com/sofa-framework/sofa/pull/2191 ); - [SofaMiscTopology_test] Replace inheritence of SofaTest by BaseSimulation_test and fix test [#1909]( https://github.com/sofa-framework/sofa/pull/1909 ); - [SofaOpenGLVisual] Fix unreachable code in VisualManagerSecondaryPass [#2068]( https://github.com/sofa-framework/sofa/pull/2068 ); - [SofaOpenglVisual] Fix typo [#2029]( https://github.com/sofa-framework/sofa/pull/2029 ); - [SofaRigid] fixes applyJT of RigidMapping [#1813]( https://github.com/sofa-framework/sofa/pull/1813 ); - **[SofaSimpleFem]** Fix TetrahedronFEMForceField Von Mises stress drawing [#1854]( https://github.com/sofa-framework/sofa/pull/1854 ); - **[SofaSimpleFem]** Fix nasty bug in HexaFEMForceField' s draw() [#1766]( https://github.com/sofa-framework/sofa/pull/1766 ); - **[SofaSimpleFem]** Fix rendering options in TetrahedronFEMFF [#2156]( https://github.com/sofa-framework/sofa/pull/2156 ); - **[SofaSimulation/Tests]** Fix init/cleanup in SofaSimulation modules [#1987]( https://github.com/sofa-framework/sofa/pull/1987 ); - **[SofaSimulationCore]** Set def,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:189702,test,test,189702,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability, useless classid in AnimationLoopParalleleScheduler.cpp [#1906]( https://github.com/sofa-framework/sofa/pull/1906 ); - [SofaCUDA] Renaming cudaMatrix methods to use rowSize and colSize [#1788]( https://github.com/sofa-framework/sofa/pull/1788 ); - [SofaDistanceGrid] Regroup miniFlowVR-related things [#1616]( https://github.com/sofa-framework/sofa/pull/1616 ); - [SofaPython] CLEAN PythonEnvironment info messages [#1835]( https://github.com/sofa-framework/sofa/pull/1835 ); - [THMPGSpatialHashing] Add a readme file and basic information [#2007]( https://github.com/sofa-framework/sofa/pull/2007 ); - [projects] remove unused variable [#1747]( https://github.com/sofa-framework/sofa/pull/1747 ). **Examples / Scenes**; - [examples] Clean warning scene examples [#1802]( https://github.com/sofa-framework/sofa/pull/1802 ); - [scenes] Update tetrahedron and tetrahedralCorotational FEM scenes [#2172]( https://github.com/sofa-framework/sofa/pull/2172 ). **Scripts / Tools**; - [tools] CLEAN logs for macos-postinstall-fixup [#2120]( https://github.com/sofa-framework/sofa/pull/2120 ). ____________________________________________________________. ## [v20.12.03]( https://github.com/sofa-framework/sofa/tree/v20.12.03 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.02...v20.12.03 ). ### Bug Fixes; **Architecture**; - [CMake] Set CMake install default component [#2037]( https://github.com/sofa-framework/sofa/pull/2037 ). **Modules**; - [SofaBoundaryCondition] Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - [SofaGuiQt] Fix Expand node [#2069]( https://github.com/sofa-framework/sofa/pull/2069 ); - **[SofaHelper]** Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - [SofaMiscCollision] Fix config.in cmake file for export [#2052]( https://github.com/sofa-framework/sofa/pull/2052 ); - **[SofaSimulationCore]** Broken URL [#2011]( https://github.com/sofa-framework/sofa/pull/2011 ). **Plugins / Projects**; - [G,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:208115,log,logs,208115,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['logs']
Testability, wrong initialization order [#1938]( https://github.com/sofa-framework/sofa/pull/1938 ); - **[SofaSimulation\*]** Fix confusion between namespaces [#1959]( https://github.com/sofa-framework/sofa/pull/1959 ); - **[SofaSimulationCore]** Clean free motion animation loop [#1930]( https://github.com/sofa-framework/sofa/pull/1930 ); - **[SofaSimulationCore]** Move WorkerThread class into its own file [#2002]( https://github.com/sofa-framework/sofa/pull/2002 ); - **[SofaSimulationCore]** Moves code from TopologyChangeVisitor.h into .cpp [#1905]( https://github.com/sofa-framework/sofa/pull/1905 ); - **[SofaSimulationCore]** Remove ClassSystem.h [#1844]( https://github.com/sofa-framework/sofa/pull/1844 ); - **[SofaSimulationCore]** Add tons of details in Euler solver [#2163]( https://github.com/sofa-framework/sofa/pull/2163 ); - **[SofaSimulationCore]** Clean AnimateVisitor [#2194]( https://github.com/sofa-framework/sofa/pull/2194 ); - **[SofaSimulation]** Convert tests to Sofa.Testing [#2154]( https://github.com/sofa-framework/sofa/pull/2154 ); - [SofaSparseSolver] Clean useless dependencies [#2012]( https://github.com/sofa-framework/sofa/pull/2012 ); - [SofaUserInteraction] Minor cleaning of RayTraceDetection [#2009]( https://github.com/sofa-framework/sofa/pull/2009 ); - [SofaUserInteraction] Remove AddFramePerformer as it is not compiled [#1970]( https://github.com/sofa-framework/sofa/pull/1970 ); - [SofaUserInteraction] Deprecate RayTraceDetection [#2212]( https://github.com/sofa-framework/sofa/pull/2212 ); - [Tests] Move tests in their (new) correct locations [#1998]( https://github.com/sofa-framework/sofa/pull/1998 ); - [Tests] Replace sofa::helper::testing by sofa::testing [#2143]( https://github.com/sofa-framework/sofa/pull/2143 ). **Plugins / Projects**; - [CGAL] Remove #pragma once in .cpp files [#2202]( https://github.com/sofa-framework/sofa/pull/2202 ); - [Geomagic] Add macro HAS_OPENHAPTICS to know if library is present [#2115]( https://github.com/sofa-framework,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:205619,Test,Testing,205619,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Testing']
Testability,"""-DGTEST_LINKED_AS_SHARED_LIBRARY=0""); target_compile_options(gtest PRIVATE ""-DGTEST_CREATE_SHARED_LIBRARY=1""). install(DIRECTORY ${googletest_SOURCE_DIR}/googletest/include/gtest DESTINATION include/extlibs/GTest/ COMPONENT headers); target_include_directories(gtest PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/GTest/>""); ; include(SofaMacros); sofa_create_package_with_targets(; PACKAGE_NAME GTest; PACKAGE_VERSION 1.14.0; TARGETS gtest AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""include""; INCLUDE_INSTALL_DIR ""extlibs/GTest""; ). set_target_properties(gtest PROPERTIES FOLDER Testing); set_target_properties(gtest_main PROPERTIES FOLDER Testing); endif(); elseif (NOT GTest_FOUND); message(FATAL_ERROR ""${PROJECT_NAME}: DEPENDENCY googletest NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install googletest, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # add custom googletest main; add_subdirectory(SofaGTestMain). set(SOFATESTINGSRC_ROOT ""src/sofa/testing""). set(HEADER_FILES; ${SOFATESTINGSRC_ROOT}/config.h.in; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.h; ${SOFATESTINGSRC_ROOT}/BaseTest.h; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.h; ${SOFATESTINGSRC_ROOT}/NumericTest.h; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.h; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.h; ). set(SOURCE_FILES; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.cpp; ${SOFATESTINGSRC_ROOT}/BaseTest.cpp; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.cpp; ${SOFATESTINGSRC_ROOT}/NumericTest.cpp; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.cpp; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.cpp; ). sofa_find_package(Sofa.Helper REQUIRED); sofa_find_package(Sofa.DefaultType REQUIRED); sofa_find_package(Sofa.Core REQUIRED); sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.Def",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt:2136,test,testing,2136,Sofa/framework/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt,1,['test'],['testing']
Testability,"# Code style guide. ## General rules. ### Base rules; The base rules are in Google C++ Style Guide: https://google.github.io/styleguide/cppguide.html ; All rules below **replace** the corresponding base rules. ; For any subject not mentionned below, please refer to the base. ### Commit message; A correct commit message must therefore be structured as: ; `[NAME_OF_MODULE_OR_PLUGIN] ACTION message` ; where ACTION includes ADD, REMOVE, FIX, CLEAN, REVERT. ; Example: `[SofaKernel] ADD test for the mass conservation in UniformMass` . ### Naming; Identifiers must respect the following conventions:. - [N1] Class names are in UpperCamelCase; - [N2] Function names are in lowerCamelCase(); - [N3] Namespaces names are in lowercase; - [N4] Variables names are in lowerCamelCase and must express their use more than their type. **Exceptions**: mathematical objects like `Matrix M`, local iterators variables like `i`, `j`, `k` and usual symbols like `x` for positions or `v` for velocities.; - [N5] Data member variables names must begin with `d_`; - [N6] Link member variables names (e.g. SingleLink) must begin with `l_`; - [N7] Other member variables names must begin with `m_ `(exception: this is not mandatory for PODs as well as public attributes); - [N8] Names for booleans variables must answer a question: `m_isRed`, `m_hasName`; - [N9] C++ files must must have the extension .h, .cpp, or .inl; - [N10] Files that define a class should have the same name as the class and should contain only one class.; - [N11] Each library name should be prefixed with `Sofa`. ### Formatting; - Special characters like TAB and page break must be avoided.; - Indentation must use **4 spaces** everywhere (C++ and Python), but there must be no indentation for namespaces; - Braces use the **Allman style**: the opening brace associated with a control statement is on the next line, indented to the same level as the control statement, and statements within the braces are indented to the next level. ```cpp; whil",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:486,test,test,486,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,1,['test'],['test']
Testability,# SOFA Changelog. ## [v24.06.00]( https://github.com/sofa-framework/sofa/tree/v24.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v23.12..v24.06 ). ### Highlighted contributions. - [GitHub] Add a python-based action managing discussions [#4268](https://github.com/sofa-framework/sofa/pull/4268); - [plugins] Update license to LGPL of remaining files [#4425](https://github.com/sofa-framework/sofa/pull/4425); - [LinearSystem] Introduce components to map matrices [#4490](https://github.com/sofa-framework/sofa/pull/4490); - [SofaSphFluid] Externalize SofaSphFluid [#4526](https://github.com/sofa-framework/sofa/pull/4526); - [LinearSystem] Introduce ConstantSparsityProjectionMethod [#4552](https://github.com/sofa-framework/sofa/pull/4552); - [HyperElastic] Introduce stable Neo Hookean hyperelastic material [#4603](https://github.com/sofa-framework/sofa/pull/4603); - [LinearSystem] Cache mapped mass matrix [#4625](https://github.com/sofa-framework/sofa/pull/4625); - [Constraint.Lagrangian] Add fixed lagrangian constraint [#4646](https://github.com/sofa-framework/sofa/pull/4646). ### Breaking. - [Type] RGBAColor: remove inheritance from type::fixed_array and use std::array to store its components [#4263](https://github.com/sofa-framework/sofa/pull/4263); - [All] ColorMap uses RGBAColor [#4270](https://github.com/sofa-framework/sofa/pull/4270); - [Type] Refactor Vec [#4296](https://github.com/sofa-framework/sofa/pull/4296); - [SolidMechanics.Springs] Cleaning of QuadularBendingSprings [#4304](https://github.com/sofa-framework/sofa/pull/4304); - [Topology.Container.Dynamic] GeometryAlgorithms: support generic State [#4362](https://github.com/sofa-framework/sofa/pull/4362); - [LinearSolver.Direct] Introduce other ordering methods in SparseLDL through Eigen [#4370](https://github.com/sofa-framework/sofa/pull/4370); - [Constraint.Lagrangian.Solver] Fix assert in GenericConstraintSolver [#4389](https://github.com/sofa-framework/sofa/pull/4389); - [Type] Refactor ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:97,log,log,97,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,"#1699]( https://github.com/sofa-framework/sofa/pull/1699 ); - [All] Fix invalid Memory access in MechanicalObject and Compliant_test [#1849]( https://github.com/sofa-framework/sofa/pull/1849 ); - [All] Fix debug compilation [#2223]( https://github.com/sofa-framework/sofa/pull/2223 ); - [All] Changes needed for v21.06 [#2226]( https://github.com/sofa-framework/sofa/pull/2226 ); - **[Sofa.Type]** Add forgotten function declaration, used in Debug [#1937]( https://github.com/sofa-framework/sofa/pull/1937 ); - **[Sofa.Type]** Add missing header in fixed_array [#2006]( https://github.com/sofa-framework/sofa/pull/2006 ); - **[SofaBaseCollision]** Fix pipeline warning test [#2132]( https://github.com/sofa-framework/sofa/pull/2132 ); - **[SofaBaseCollision]** Clean code related to intersection methods [#2178]( https://github.com/sofa-framework/sofa/pull/2178 ); - **[SofaBaseMechanics]** Clean DiagonalMass init [#2186]( https://github.com/sofa-framework/sofa/pull/2186 ); - **[SofaBaseMechanics]** Restore tests commented by mistake [#2104]( https://github.com/sofa-framework/sofa/pull/2104 ); - **[SofaBaseMechanics]** fixes reinit of BarycentricMapping [#1815]( https://github.com/sofa-framework/sofa/pull/1815 ); - **[SofaBaseMechanics]** Fix bug when deleting point. Mass vector was not well recomputed. [#2164]( https://github.com/sofa-framework/sofa/pull/2164 ); - **[SofaBaseMechanics_test]** Add more checks in DiagonalMass_test [#2183]( https://github.com/sofa-framework/sofa/pull/2183 ); - **[SofaBaseTopology]** Add security in TopologyData to check input Topology pointer [#2027]( https://github.com/sofa-framework/sofa/pull/2027 ); - **[SofaBaseTopology]** Missing override keyword [#2035]( https://github.com/sofa-framework/sofa/pull/2035 ); - **[SofaBaseTopology]** correct the logic issue in computeEdgeSegmentIntersection [#2184]( https://github.com/sofa-framework/sofa/pull/2184 ); - [SofaConstraint] Fix symbol export of BilateralInteractionConstraint on RigidTypes [#2031]( ht",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:182900,test,tests,182900,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"#4393](https://github.com/sofa-framework/sofa/pull/4393); - [All] Rename license file into LICENSE-LGPL.md to follow github repository rules [#4410](https://github.com/sofa-framework/sofa/pull/4410); - [SofaCUDA] Generalize the use of MessageDispatcher in SofaCUDA [#4430](https://github.com/sofa-framework/sofa/pull/4430); - [Core] Add documentation for the method BaseMapping::buildGeometricStiffnessMatrix [#4431](https://github.com/sofa-framework/sofa/pull/4431); - [LinearAlgebra] Factorize value filtering [#4442](https://github.com/sofa-framework/sofa/pull/4442); - [GitHub] Clean existing actions [#4444](https://github.com/sofa-framework/sofa/pull/4444); - [SofaCUDA] Initialize module from another module [#4453](https://github.com/sofa-framework/sofa/pull/4453); - [SofaDistanceGrid] remove shadow variable [#4455](https://github.com/sofa-framework/sofa/pull/4455); - [Defaulttype, LinearAlgera] Fix warnings [#4465](https://github.com/sofa-framework/sofa/pull/4465); - [Testing] Deprecate BaseSimulationTest::importPlugin [#4467](https://github.com/sofa-framework/sofa/pull/4467); - [All] CMake: Remove deprecation warnings [#4469](https://github.com/sofa-framework/sofa/pull/4469); - [framework] Fix typo [#4474](https://github.com/sofa-framework/sofa/pull/4474); - [all] Apply nested namespaces [#4482](https://github.com/sofa-framework/sofa/pull/4482); - [all] Missing override keyword [#4483](https://github.com/sofa-framework/sofa/pull/4483); - [all] Convert some loops to range-based [#4485](https://github.com/sofa-framework/sofa/pull/4485); - [Config] CMake: fix warning about upper/lowercase for Difflib [#4486](https://github.com/sofa-framework/sofa/pull/4486); - [README] Update badge with Discord [#4498](https://github.com/sofa-framework/sofa/pull/4498); - [Plugins] Move MeshSTEPLoader to an external repository [#4504](https://github.com/sofa-framework/sofa/pull/4504); - [Plugins] Gather external plugins configs in a same folder (proposal) [#4505](https://github.com/sofa",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:14235,Test,Testing,14235,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Testing']
Testability,"${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshVTKLoader.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshGmshLoader.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/VisualModelOBJExporter.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/VTKExporter.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/GIDMeshLoader.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/GridMeshCreator.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshOffLoader.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshSTLLoader.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshTrianLoader.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshXspLoader.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/OffSequenceLoader.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/SphereLoader.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/StringMeshCreator.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/VoxelGridLoader.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/BlenderExporter.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshExporter.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/STLExporter.cpp; ). sofa_find_package(TinyXML2 REQUIRED) # BaseVTKReader; sofa_find_package(ZLIB REQUIRED) # BlenderExporter; sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${WRAPPER_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PRIVATE tinyxml2::tinyxml2); target_link_libraries(${PROJECT_NAME} PUBLIC ZLIB::ZLIB); if(CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS ZLIB::ZLIB); endif(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_IO_MESH_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_IO_MESH_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/IO/Mesh/CMakeLists.txt:3198,Test,Tests,3198,Sofa/Component/IO/Mesh/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/IO/Mesh/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,${SRC_ROOT}/behavior/MechanicalMatrix.cpp; ${SRC_ROOT}/behavior/MechanicalState.cpp; ${SRC_ROOT}/behavior/MixedInteractionConstraint.cpp; ${SRC_ROOT}/behavior/MixedInteractionForceField.cpp; ${SRC_ROOT}/behavior/MultiMatrixAccessor.cpp; ${SRC_ROOT}/behavior/OdeSolver.cpp; ${SRC_ROOT}/behavior/PairInteractionConstraint.cpp; ${SRC_ROOT}/behavior/PairInteractionForceField.cpp; ${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.cpp; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.cpp; ${SRC_ROOT}/behavior/SingleMatrixAccessor.cpp; ${SRC_ROOT}/behavior/fwd.cpp; ${SRC_ROOT}/collision/BroadPhaseDetection.cpp; ${SRC_ROOT}/collision/Contact.cpp; ${SRC_ROOT}/collision/Intersection.cpp; ${SRC_ROOT}/collision/NarrowPhaseDetection.cpp; ${SRC_ROOT}/collision/Pipeline.cpp; ${SRC_ROOT}/loader/BaseLoader.cpp; ${SRC_ROOT}/loader/MeshLoader.cpp; ${SRC_ROOT}/loader/SceneLoader.cpp; ${SRC_ROOT}/loader/VoxelLoader.cpp; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.cpp; ${SRC_ROOT}/objectmodel/AbstractDataLink.cpp; ${SRC_ROOT}/objectmodel/AspectPool.cpp; ${SRC_ROOT}/objectmodel/Base.cpp; ${SRC_ROOT}/objectmodel/BaseClass.cpp; ${SRC_ROOT}/objectmodel/BaseContext.cpp; ${SRC_ROOT}/objectmodel/BaseData.cpp; ${SRC_ROOT}/objectmodel/BaseLink.cpp; ${SRC_ROOT}/objectmodel/BaseNode.cpp; ${SRC_ROOT}/objectmodel/BaseObject.cpp; ${SRC_ROOT}/objectmodel/BaseObjectDescription.cpp; ${SRC_ROOT}/objectmodel/ClassInfo.cpp; ${SRC_ROOT}/objectmodel/ComponentState.cpp; ${SRC_ROOT}/objectmodel/ConfigurationSetting.cpp; ${SRC_ROOT}/objectmodel/Context.cpp; ${SRC_ROOT}/objectmodel/ContextObject.cpp; ${SRC_ROOT}/objectmodel/DDGNode.cpp; ${SRC_ROOT}/objectmodel/Data.cpp; ${SRC_ROOT}/objectmodel/DataCallback.cpp; ${SRC_ROOT}/objectmodel/DataContentValue.cpp; ${SRC_ROOT}/objectmodel/DataFileName.cpp; ${SRC_ROOT}/objectmodel/DataFileNameVector.cpp; ${SRC_ROOT}/objectmodel/DataLink.cpp; ${SRC_ROOT}/objectmodel/DetachNodeEvent.cpp; ${SRC_ROOT}/obje,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:10205,log,logging,10205,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['log'],['logging']
Testability,${SRC_ROOT}/io/MeshGmsh.h; ${SRC_ROOT}/io/MeshTopologyLoader.h; ${SRC_ROOT}/io/SphereLoader.h; ${SRC_ROOT}/io/STBImage.h; ${SRC_ROOT}/io/TriangleLoader.h; ${SRC_ROOT}/kdTree.h; ${SRC_ROOT}/kdTree.inl; ${SRC_ROOT}/list.h; ${SRC_ROOT}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cp,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:2889,log,logging,2889,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,${SRC_ROOT}/io/MeshOBJ.cpp; ${SRC_ROOT}/io/MeshGmsh.cpp; ${SRC_ROOT}/io/MeshTopologyLoader.cpp; ${SRC_ROOT}/io/SphereLoader.cpp; ${SRC_ROOT}/io/STBImage.cpp; ${SRC_ROOT}/io/TriangleLoader.cpp; ${SRC_ROOT}/io/XspLoader.cpp; ${SRC_ROOT}/kdTree.cpp; ${SRC_ROOT}/system/DynamicLibrary.cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.cpp); endif(). sofa_find_package(Sofa.Config REQUIR,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:5547,log,logging,5547,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingCubeUtility.cpp; ${SRC_ROOT}/NameDecoder.cpp; ${SRC_ROOT}/OptionsGroup.cpp; ${SRC_ROOT}/ScopedAdvancedTimer.cpp; ${SRC_ROOT}/Polynomial_LD.cpp; ${SRC_ROOT}/RandomGenerator.cpp; ${SRC_ROOT}/StringUtils.cpp; ${SRC_ROOT}/TagFactory.cpp; ${SRC_ROOT}/TriangleOctree.cpp; ${SRC_ROOT}/Utils.cpp; ${SRC_ROOT}/decompose.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/io/BaseFileAccess.cpp; ${SRC_ROOT}/io/FileAccess.cpp; ${SRC_ROOT}/io/File.cpp; ${SRC_ROOT}/io/Image.cpp; ${SRC_ROOT}/io/ImageDDS.cpp; ${SRC_ROOT}/io/ImageRAW.cpp; ${SRC_ROOT}/io/Mesh.cpp; ${SRC_ROOT}/io,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:3558,log,logging,3558,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,( https://github.com/sofa-framework/sofa/pull/2045 ); - **[Sofa.GL]** static variable belongs to the class [#1951]( https://github.com/sofa-framework/sofa/pull/1951 ); - **[Sofa.Topology]** remove unnecessary pragma [#1969]( https://github.com/sofa-framework/sofa/pull/1969 ); - **[Sofa.Type & DefaultType]** Adds forward declaration for Vec and StdRigidTypes. [#1907]( https://github.com/sofa-framework/sofa/pull/1907 ); - **[Sofa.Type]** Modernize fixed_array [#1985]( https://github.com/sofa-framework/sofa/pull/1985 ); - **[Sofa.Type]** Remove MIN_DETERMINANT preprocessor value [#1932]( https://github.com/sofa-framework/sofa/pull/1932 ); - **[Sofa.Type]** add operator* for RGBAColor [#1952]( https://github.com/sofa-framework/sofa/pull/1952 ); - **[SofaBaseCollision]** Broad phase and narrow phase separation [#2118]( https://github.com/sofa-framework/sofa/pull/2118 ); - **[SofaBaseCollision]** Fix simulation dependency [#1768]( https://github.com/sofa-framework/sofa/pull/1768 ); - **[SofaBaseMechanics_test]** Update tests to use Sofa.Testing instead of Sofa_Test [#2144]( https://github.com/sofa-framework/sofa/pull/2144 ); - **[SofaBaseTopology]** Improve TopologyDataHandler message [#2152]( https://github.com/sofa-framework/sofa/pull/2152 ); - **[SofaBaseTopology]** Remove definition of real [#1955]( https://github.com/sofa-framework/sofa/pull/1955 ); - **[SofaBaseTopology]** Remove warning when a Data is directly linked to a topoogy Data container [#1971]( https://github.com/sofa-framework/sofa/pull/1971 ); - **[SofaBaseTopology]** Remove warnings [#2046]( https://github.com/sofa-framework/sofa/pull/2046 ); - **[SofaBaseTopology]** Single definition of global variables [#1950]( https://github.com/sofa-framework/sofa/pull/1950 ); - **[SofaBaseUtils]** Clean RequiredPlugin [#1899]( https://github.com/sofa-framework/sofa/pull/1899 ); - **[SofaBaseVisual]** Move #include<Mat.h> from BaseCamera.h to BaseCamera.cpp [#1846]( https://github.com/sofa-framework/sofa/pull/1846 );,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:199092,test,tests,199092,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"(INSTALL_GTEST OFF CACHE BOOL """" FORCE) # rely on SOFA macros; set(gtest_force_shared_crt ON CACHE BOOL """" FORCE); set(gtest_disable_pthreads OFF CACHE BOOL """" FORCE). message(""${PROJECT_NAME}: adding subdirectory ${googletest_SOURCE_DIR}""). add_subdirectory(${googletest_SOURCE_DIR} ${googletest_BINARY_DIR}). target_compile_options(gtest_main PRIVATE ""-DGTEST_LINKED_AS_SHARED_LIBRARY=0""); target_compile_options(gtest PRIVATE ""-DGTEST_CREATE_SHARED_LIBRARY=1""). install(DIRECTORY ${googletest_SOURCE_DIR}/googletest/include/gtest DESTINATION include/extlibs/GTest/ COMPONENT headers); target_include_directories(gtest PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/GTest/>""); ; include(SofaMacros); sofa_create_package_with_targets(; PACKAGE_NAME GTest; PACKAGE_VERSION 1.14.0; TARGETS gtest AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""include""; INCLUDE_INSTALL_DIR ""extlibs/GTest""; ). set_target_properties(gtest PROPERTIES FOLDER Testing); set_target_properties(gtest_main PROPERTIES FOLDER Testing); endif(); elseif (NOT GTest_FOUND); message(FATAL_ERROR ""${PROJECT_NAME}: DEPENDENCY googletest NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install googletest, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # add custom googletest main; add_subdirectory(SofaGTestMain). set(SOFATESTINGSRC_ROOT ""src/sofa/testing""). set(HEADER_FILES; ${SOFATESTINGSRC_ROOT}/config.h.in; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.h; ${SOFATESTINGSRC_ROOT}/BaseTest.h; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.h; ${SOFATESTINGSRC_ROOT}/NumericTest.h; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.h; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.h; ). set(SOURCE_FILES; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.cpp; ${SOFATESTINGSRC_ROOT}/BaseTest.cpp; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.cpp; ${SOFATESTINGSRC_ROOT}/NumericTest.cpp; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.cpp; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.cpp; ). so",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt:1706,Test,Testing,1706,Sofa/framework/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt,2,['Test'],['Testing']
Testability,"(https://github.com/sofa-framework/sofa/pull/3448) ; - [Core] Minor cleaning [#3492](https://github.com/sofa-framework/sofa/pull/3492) . **Modules**; - [all] Remove code disabled in v21.06 [#3163](https://github.com/sofa-framework/sofa/pull/3163) ; - [Spring] RestSpringsForceField: Unify Vec/Rigid implementation [#3175](https://github.com/sofa-framework/sofa/pull/3175) ; - [LinearSolver.Direct] BTDLinearSolver: Clean debug informations and rename data [#3226](https://github.com/sofa-framework/sofa/pull/3226) ; - [all] Set of warning fixes [#3227](https://github.com/sofa-framework/sofa/pull/3227) ; - [All] Remove deprecation warnings while building the deprecated thing itself [#3236](https://github.com/sofa-framework/sofa/pull/3236) ; - [LinearAlgebra] Remove deprecated code [#3251](https://github.com/sofa-framework/sofa/pull/3251) ; - [tests] Fix remove SofaComponentAll plugin which doesn't exist anymore [#3266](https://github.com/sofa-framework/sofa/pull/3266) ; - [Test] Remove the output of a test from file versioning [#3285](https://github.com/sofa-framework/sofa/pull/3285) ; - [Collision] Cleaning pass on types [#3287](https://github.com/sofa-framework/sofa/pull/3287) ; - [S.C.MechanicalLoad] PlaneForcefield: Fix ""potential divide by zero"" warnings in msvc [#3315](https://github.com/sofa-framework/sofa/pull/3315) ; - [LinearAlgebra] Explicit instantiations and extern template for some matrices [#3334](https://github.com/sofa-framework/sofa/pull/3334) ; - [Mapping] Add checks at init in TopologicalMapping [#3339](https://github.com/sofa-framework/sofa/pull/3339) ; - [Topology.Container.Grid] trivial optimization in GridTopology [#3348](https://github.com/sofa-framework/sofa/pull/3348) ; - [All] Reduce calls to getValue [#3356](https://github.com/sofa-framework/sofa/pull/3356) ; - [all] Remove in-class typedefs pointing to common sofa::type [#3357](https://github.com/sofa-framework/sofa/pull/3357) ; - [Lagrangian.Solver] Move MechanicalGetConstraintResolutionVisit",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:87099,Test,Test,87099,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Test', 'test']","['Test', 'test']"
Testability,") [#3758](https://github.com/sofa-framework/sofa/pull/3758) ; - [SofaCUDA] Reorganize following SOFA structure (6/n) [#3760](https://github.com/sofa-framework/sofa/pull/3760) ; - [SofaCUDA] Reorganize following SOFA structure (7/n) [#3785](https://github.com/sofa-framework/sofa/pull/3785) ; - [SofaCUDA] Reorganize following SOFA structure (8/n) [#3795](https://github.com/sofa-framework/sofa/pull/3795) . ### Tests. **Modules**; - [Solver.Direct] Unit test on topological changes leading to empty system [#3501](https://github.com/sofa-framework/sofa/pull/3501) ; - [LinearAlgebra] Unit tests for RotationMatrix [#3585](https://github.com/sofa-framework/sofa/pull/3585); - [LinearAlgebra] Fix matrix unit test [#3832](https://github.com/sofa-framework/sofa/pull/3832) . **Examples / Scenes**; - [examples] Introduce example and tests for SquareMapping [#3768](https://github.com/sofa-framework/sofa/pull/3768) . ## [v22.12.00]( https://github.com/sofa-framework/sofa/tree/v22.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v22.06..v22.12 ). ### Highlighted contributions. - [Core, Helper] Add spelling suggestion in ObjectFactory [#3042](https://github.com/sofa-framework/sofa/pull/3042) ; - [Constraint.Lagrangian] Add the NNCG as NLCP solver in GenericCS [#3053](https://github.com/sofa-framework/sofa/pull/3053) ; - [CMake] Introduce CMake presets [#3305](https://github.com/sofa-framework/sofa/pull/3305) ; - [all] Type conversion cleaning (+ user-defined literal) [#3314](https://github.com/sofa-framework/sofa/pull/3314) ; - [Core] Convert warning to error in object factory [#3404](https://github.com/sofa-framework/sofa/pull/3404) . ### Breaking. **Architecture**; - [Core] Make some functions non-virtual [#3242](https://github.com/sofa-framework/sofa/pull/3242) ; - [Core] Add some const qualifier to collision methods & use SReal & nodiscard. [#3270](https://github.com/sofa-framework/sofa/pull/3270) ; - [Topology] Improve TopologyHandler registration [#3271](https",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:68922,log,log,68922,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,"). ## Build external projects at the same time; set(SOFA_EXTERNAL_DIRECTORIES """" CACHE STRING ""list of paths separated by ';'""); if(NOT ""${SOFA_EXTERNAL_DIRECTORIES}"" STREQUAL """"); foreach(dir ${SOFA_EXTERNAL_DIRECTORIES}); get_filename_component(name ${dir} NAME) # Get the name of the actual directory; message(""Adding external directory: ${name} (${dir})""); add_subdirectory(${dir} ""${CMAKE_CURRENT_BINARY_DIR}/external_directories/${name}""); endforeach(); endif(). ## Custom; if(EXISTS ""${CMAKE_CURRENT_LIST_DIR}/custom.cmake""); message(""Adding custom file""); include( ""custom.cmake"" ); endif(). ## IDE directories; # Sofa.Component; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES ""Sofa.Component.*"" AND NOT target MATCHES "".*_relocatable_install""); set_target_properties(${target} PROPERTIES FOLDER Sofa.Component) # IDE folder; endif(); endforeach(); # Testing; if(TARGET Sofa.Testing) # No need to search for test targets if tests are not enabled; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES "".*_test"" OR target MATCHES "".*_simutest""); set_target_properties(${target} PROPERTIES FOLDER Testing) # IDE folder; endif(); endforeach(); endif(); ##. ## Install configuration; #install(FILES ""${CMAKE_BINARY_DIR}/CMakeCache.txt"" DESTINATION . COMPONENT headers); install(FILES ""${CMAKE_SOURCE_DIR}/README.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/CHANGELOG.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/LICENSE-LGPL.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/Authors.txt"" DESTINATION . COMPONENT applications). option(SOFA_INSTALL_RESOURCES_FILES ""Copy resources files (etc/, share/, examples/, tools/sofa-launcher/) when installing"" ON); ## Install resource files; if(SOFA_INSTALL_RESOURCES_FILES); install(DIRECTORY share/ DESTINATION share/sofa COMPONENT resources); install(DIRECTORY examples/ DESTINATION share/so",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:9646,Test,Testing,9646,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,3,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,); - [GUI.Qt] Add clickable link to online documentation [#4650](https://github.com/sofa-framework/sofa/pull/4650); - [CMake] Start finding Qt6 then Qt5 [#4686](https://github.com/sofa-framework/sofa/pull/4686); - [examples] Use MeshMatrixMass in hyperelastic examples [#4687](https://github.com/sofa-framework/sofa/pull/4687). ### Bug Fixes. - [Geometry] Update method intersectionWithEdge signature and redirect all methods to it in EdgeSetGeometryAlgorithms [#4194](https://github.com/sofa-framework/sofa/pull/4194); - [SofaSPHFluid] Add option in ParticleSource to add/remove random values in the particles generation. Remove noise for CI scenes [#4316](https://github.com/sofa-framework/sofa/pull/4316); - [ODESolver] Fix compilation with SOFA_NO_VMULTIOP [#4325](https://github.com/sofa-framework/sofa/pull/4325); - [Topology.Mapping] Edge2QuadTopologicalMapping: use Links for required QuadSet components [#4361](https://github.com/sofa-framework/sofa/pull/4361); - [MultiThreading] Fix failing test on ParallelImplementationsRegistry [#4392](https://github.com/sofa-framework/sofa/pull/4392); - [Helper] Fix Colormap when using HSV to RGB [#4408](https://github.com/sofa-framework/sofa/pull/4408); - [All] Fix subplugin regression tests [#4420](https://github.com/sofa-framework/sofa/pull/4420); - [sofaInfo] Fix compilation and behavior [#4422](https://github.com/sofa-framework/sofa/pull/4422); - [Core] Call super init() in MultiMapping and Multi2Mapping [#4432](https://github.com/sofa-framework/sofa/pull/4432); - [Helper] Fix new[]/delete mismatch [#4447](https://github.com/sofa-framework/sofa/pull/4447); - [CMake] Fix SOFA install [#4451](https://github.com/sofa-framework/sofa/pull/4451); - [GitHub] Fix action using github.context [#4456](https://github.com/sofa-framework/sofa/pull/4456); - [Helper] PluginManager: Check symbol (real) location and avoid calling wrong entrypoint (Mac/Linux) [#4466](https://github.com/sofa-framework/sofa/pull/4466); - [GitHUb] Fix actions using c,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:5961,test,test,5961,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,"---; name: Bug report; about: Create a report to help us improve SOFA; title: ''; labels: 'issue: bug (minor)'; assignees: ''. ---. ### Problem. **Description**; < DESCRIBE YOUR PROBLEM HERE >. **Steps to reproduce**; < LIST THE STEPS TO REPRODUCE YOUR PROBLEM HERE >. **Expected behavior**; < DESCRIBE WHAT YOU THINK SHOULD HAVE HAPPEN INSTEAD >. ---------------------------------------------. ### Environment. **Context**. - System: < NAME AND VERSION - e.g: ""Windows 10"", ""Ubuntu 20.04"", ... >; - Version of SOFA: < INFOS ABOUT THE BRANCH OR BINARIES - e.g: ""master branch at commit 70bb123"", ""v21.06.00 binaries"", ... >; - State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/.github/ISSUE_TEMPLATE/bug_report.md:1423,Log,Logs,1423,.github/ISSUE_TEMPLATE/bug_report.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/.github/ISSUE_TEMPLATE/bug_report.md,1,['Log'],['Logs']
Testability,-framework/sofa/pull/2420 ); - [SofaMiscFem] Remove unnecessary copy/pasted code [#2421]( https://github.com/sofa-framework/sofa/pull/2421 ); - [SofaMiscForcefield] Small optimization in addMdx in MeshMatrixMass [#2516]( https://github.com/sofa-framework/sofa/pull/2516 ); - [SofaMiscFem][SofaNonUniformFem] Remove newmat usage [#2531]( https://github.com/sofa-framework/sofa/pull/2531 ); - [SofaPreconditioner] Cleaning [#2493]( https://github.com/sofa-framework/sofa/pull/2493 ); - [SofaSimpleFem] Move duplicated code into a function [#2231]( https://github.com/sofa-framework/sofa/pull/2231 ); - [SofaSimpleFem] Remove branches based on type of matrix [#2323]( https://github.com/sofa-framework/sofa/pull/2323 ); - [SofaSparseSolver] Clean examples scenes of sparse linear solvers [#2422]( https://github.com/sofa-framework/sofa/pull/2422 ); - [SofaTopologyMapping] Fix shadowed variable #2158 [#2413]( https://github.com/sofa-framework/sofa/pull/2413 ); - [Tests] Update SceneCreator_test to inherit from BaseSimulationTest and remove some warnings [#2406]( https://github.com/sofa-framework/sofa/pull/2406 ). **Plugins / Projects**; - [Plugins] Move Newmat matters into the new SofaNewmat plugin [#2532]( https://github.com/sofa-framework/sofa/pull/2532 ); - [CImgPlugin] Minimize plugin dependencies [#2318]( https://github.com/sofa-framework/sofa/pull/2318 ); - [image] fix shadow variable #2432 [#2437]( https://github.com/sofa-framework/sofa/pull/2437 ); - [image] Remove useless DiffusionSolver dependency [#2308]( https://github.com/sofa-framework/sofa/pull/2308 ); - [image] Clean init members warning [#2536]( https://github.com/sofa-framework/sofa/pull/2536 ); - [SofaCUDA] reorder CMakeLists just for more clarity [#2534]( https://github.com/sofa-framework/sofa/pull/2534 ). **Examples / Scenes**; - [examples] Add handleDynamicTopology in OglModel with dynamic texcoords [#2445]( https://github.com/sofa-framework/sofa/pull/2445 ); - [examples] Clean linear solver scenes [#2494]( ht,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:162492,Test,Tests,162492,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Tests']
Testability,-framework/sofa/pull/532 ); - [SofaBoundaryCondition]; - ADD flag PROJECTVELOCITY [#288]( https://github.com/sofa-framework/sofa/pull/288 ); - make LinearMovementConstraint accept absolute movements [#394]( https://github.com/sofa-framework/sofa/pull/394 ); - [SofaCore]; - Add some read/write free method to construct Data Read/WriteAccessor [#450]( https://github.com/sofa-framework/sofa/pull/450 ); - [SofaDefaulttype]; - MapMapSparseMatrix conversion utils with Eigen Sparse [#452]( https://github.com/sofa-framework/sofa/pull/452 ); - multTranspose method between MapMapSparseMatrix and BaseVector [#456]( https://github.com/sofa-framework/sofa/pull/456 ); - [SofaDeformable]; - Rest shape can now be given using SingleLink [#315]( https://github.com/sofa-framework/sofa/pull/315 ); - Add AngularSpringForceField [#334]( https://github.com/sofa-framework/sofa/pull/334 ); - [SofaEulerianFluid]; - Pluginizing the module [#396]( https://github.com/sofa-framework/sofa/pull/396 ); - [SofaExporter]; - Clean & test the exporter [#372]( https://github.com/sofa-framework/sofa/pull/372 ); - [SofaGraphComponent]; - Add SceneCheckerVisitor to detect missing RequiredPlugin [#306]( https://github.com/sofa-framework/sofa/pull/306 ); - Add a mechanism (SceneChecker) to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - Refactor the SceneChecker and add a new SceneChecker to test dumplicated names [#392]( https://github.com/sofa-framework/sofa/pull/392 ); - [SofaGeneralEngine]; - Add test and minor cleaning for IndexValueMapper [#319]( https://github.com/sofa-framework/sofa/pull/319 ); - Add a computeBBox to the SmoothMeshEngine [#409]( https://github.com/sofa-framework/sofa/pull/409 ); - [SofaGeneralObjectInteraction]; - issofa_attachconstraint [#501]( https://github.com/sofa-framework/sofa/pull/501 ); - [SofaMisc]; - Add a data repository at start-up time [#402]( https://github.com/sofa-framework/sofa/pull/402 ); - [SofaMiscCollision]; - Plugini,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:307528,test,test,307528,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,". ## [v21.12.00]( https://github.com/sofa-framework/sofa/tree/v21.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.03...v21.12.00 ). ### SOFA-NG. **Modules**; - [All] Remove more GeometryAlgorithms usage [#2465]( https://github.com/sofa-framework/sofa/pull/2465 ); - [All] Remove some trivial dependencies on SofaBaseTopology [#2449]( https://github.com/sofa-framework/sofa/pull/2449 ); - [Sofa.Core][SofaBaseTopology] Move TopologyData* from SofaBaseTopology to Sofa.Core [#2423]( https://github.com/sofa-framework/sofa/pull/2423 ); - [Sofa.Core][SofaBaseTopology] Refactor TopologyContainer [#2387]( https://github.com/sofa-framework/sofa/pull/2387 ); - [Sofa.LinearAlgebra] Dispatch *Matrix from BTDLinearSolver, and BlockDiagonalMatrix [#2334]( https://github.com/sofa-framework/sofa/pull/2334 ); - [Sofa.LinearAlgebra] Dispatch EigenMatrix and EigenVector from Eigen2Solver [#2339]( https://github.com/sofa-framework/sofa/pull/2339 ); - [Sofa.LinearAlgebra] Gather tests [#2383]( https://github.com/sofa-framework/sofa/pull/2383 ); - [SofaBaseMechanics] BarycentricMapping: Remove avoidable Sofa.BaseTopology dependencies [#2403]( https://github.com/sofa-framework/sofa/pull/2403 ); - [SofaBaseTopology][SofaMiscForcefield] Remove GeometryAlgorithms from DiagonalMass & MeshMatrixMass [#2436]( https://github.com/sofa-framework/sofa/pull/2436 ); - [SofaFramework] Create Sofa.LinearAlgebra (BaseVector/BaseMatrix & co) [#2314]( https://github.com/sofa-framework/sofa/pull/2314 ). **Plugins / Projects**; - [Plugins] Move CGALPlugin to an external repository [#2500]( https://github.com/sofa-framework/sofa/pull/2500 ); - [Plugins] Move Flexible/Compliant/RigidScale to external repositories [#1873]( https://github.com/sofa-framework/sofa/pull/1873 ); - [Plugins] Move SofaPython to an external repository [#2224]( https://github.com/sofa-framework/sofa/pull/2224 ); - [Plugins] Remove LMConstraint from SOFA repository [#2508]( https://github.com/sofa-framework/sofa/p",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:134906,test,tests,134906,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,". Creation of a Pendulum (1/8). Description; The objective of this small step by step tutorial is to discover the basic components used with SOFA, how they interact, and how you can configure them. We will create a pendulum made of two object, and two different springs. We will not go into the details about the template parameter of the mechanical states, nor the forcefields used.; Press the Edit in Modeler button at the top of the window.; This will show the scene graph for our initial basic scene in the Modeler window.; Key points; We used 3 components:; ; A Node ""FirstObject"" to store the components describing the object we want to simulate. It is important that the hierarchy of the nodes in the scene graph reflects the scene you want to model.; The shape is modeled using a MechanicalObject which desribes the particle states. ; A UniformMass is added for the MechanicalObject, giving the same mass for each particle of the MechanicalObject. . Hold the cursor over the button with the SOFA logo on the far right of the Modeler toolbar. ; The tooltip will say Run in SOFA.; Press this Run in SOFA button.; This will open the scene described by the scene graph in SOFA. In SOFA, you can see one Particle represented by a white dot. (Note: you may need to select ""Behavior"" in the View table in order to see the scene).; Results; Press the Animate button.; You will see that nothing happens. In the next step we will see why.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/0_Pendulum.html:1004,log,logo,1004,examples/Tutorials/StepByStep/Pendulum/0_Pendulum.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/0_Pendulum.html,1,['log'],['logo']
Testability,". RungeKutta Solver. Description; 	; 		Like EulerSolver in Sofa, RungeKuttaSolver denotes the ODE solver using the explicit integration scheme for computing of ; 		the dynamic system. This integration scheme explicitely resolves the system in relation to time: given the mechanical state; 		at time Tn, compute the state at time Tn+1=Tn + dt. The difference with RungeKuttaSolver is that this ; 		integration use a more sophisticated algorithm for the computation of the state at time Tn+1. Therefore there is more stability; 		and can use a higher time step than the EulerSolver one. Otherwise, RungeKuttaSolver uses a more general explicit method than EulerSolver.; ; Key points. 		As with every Explicit Integration method, RungeKutta accumulates errors for each time step. Therefore, two criteria must be ; 		controled when using it : ; 		; The time step dt.; The dynamic of the system. 		However, RungeKutta4 is certainly more stable than Explicit Euler: The convergence error in RungeKutta4 is in relation to o(dt4), ; 		but in Explicit Euler it's only o(dt). For this example, RungeKutta can resolve the system with dt=0.001, but not the ExplicitEuler (0.0001). ; . 		Users can try several solvers with different values of the dt parameter to gain an idea of the solver's differences (also test the dependence of the solver ; 		according to the dynamics of the system by using [Shift + left mouse]).; 		. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ExplicitRungeKutta4.html:1297,test,test,1297,examples/Tutorials/Solvers/ExplicitRungeKutta4.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ExplicitRungeKutta4.html,1,['test'],['test']
Testability,". TestPlugin. TestPlugin. Representative; image of the; TestPlugin plugin. Introduction; Examples; Project structure; Intellectual property; and; rights; Howto. doxygen code documentation; \( \LaTeX \) formulas in this document. Introduction. This page explains how to customize the empty plugin. Once you have; read this page, you can replace it with the documentation of your; plugin. To customize the template, you can:. Copy the TestPlugin directory and rename it, for example,; MyPlugin; Open a command line tool in the MyPlugin directory and use the; script utils/changeClassName.sh  in Unix and utils\changeClassName.bat  in Windows ; to replace TestPlugin; with MyPlugin in all; the file; names and their content:; On Unix:; utils/changeClassName.bash TestPlugin MyPlugin. On Windows:; utils\changeClassName.bat TestPlugin MyPlugin; cd examples; ..\utils\changeClassName.bat TestPlugin MyPlugin; cd ../doc/; ..\utils\changeClassName.bat TestPlugin MyPlugin  This can take some time !. At this point, you may want to add the plugin directory to svn.; You can also reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_TestPlugin ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_TestPlugin); {; usePlugin(TestPlugin) } . if your plugin depends on other plugins, edit file TestPlugin-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. TestPlugin.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html:2,Test,TestPlugin,2,applications/plugins/SofaTest/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html,9,['Test'],['TestPlugin']
Testability,". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/.github/PULL_REQUEST_TEMPLATE.md:541,test,test,541,.github/PULL_REQUEST_TEMPLATE.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/.github/PULL_REQUEST_TEMPLATE.md,2,['test'],['test']
Testability,"./Frameworks""; ""@executable_path/../../Frameworks""; ); set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE); endif(); endif(UNIX). ### Windows config; if(MSVC); # WinDepPack; set(SOFA_DEPENDENCY_PACK_DIR ""${CMAKE_SOURCE_DIR}"" CACHE PATH ""Directory containing Windows Dependency Pack""); if(NOT EXISTS ${SOFA_DEPENDENCY_PACK_DIR}); # force back to default value; set(SOFA_DEPENDENCY_PACK_DIR ""${CMAKE_SOURCE_DIR}"" CACHE PATH ""Directory containing Windows Dependency Pack"" FORCE); endif(); list(APPEND CMAKE_INCLUDE_PATH ${SOFA_DEPENDENCY_PACK_DIR}/include); if(CMAKE_CL_64); list(APPEND CMAKE_LIBRARY_PATH ${SOFA_DEPENDENCY_PACK_DIR}/lib/win64); else(); list(APPEND CMAKE_LIBRARY_PATH ${SOFA_DEPENDENCY_PACK_DIR}/lib/win32); endif(); install(DIRECTORY ${SOFA_DEPENDENCY_PACK_DIR}/include/ DESTINATION include/extlibs/WinDepPack COMPONENT headers); install(DIRECTORY ${SOFA_DEPENDENCY_PACK_DIR}/licenses/ DESTINATION licenses COMPONENT applications); endif(). ### Testing; option(SOFA_BUILD_TESTS ""Compile the automatic tests for Sofa, along with the gtest library."" ON). ## Active or not the use of ccache; option(SOFA_USE_CCACHE ""Compile using ccache optimization"" OFF); if(SOFA_USE_CCACHE); find_program(CCACHE_PROGRAM ccache); if(CCACHE_PROGRAM); # Support Unix Makefiles and Ninja; #TODO replace by <LANG>_COMPILER_LAUNCHER when min cmake version > 3.4; set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ""${CCACHE_PROGRAM}""); set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ""${CCACHE_PROGRAM}""); else(); message(WARNING ""ccache not found, disabling option""); set(SOFA_USE_CCACHE OFF CACHE bool ""Compile using ccache optimization"" FORCE); endif(); endif(). ### Ninja build pools; option(SOFA_NINJA_BUILD_POOLS ""Activate the Ninja build pools feature, to limit the cores used by specific targets"" OFF). # Sofa.Config sets the environment (options, compiler flags, global variables); sofa_add_subdirectory(library Sofa/framework/Config Sofa.Config ON). ### Extlibs; add_subdirectory(extlibs). ### Compatibility; o",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:6015,Test,Testing,6015,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,2,"['Test', 'test']","['Testing', 'tests']"
Testability,.com/sofa-framework/sofa/pull/1439 ). ### Improvements; **Architecture**; - [All] Accelerating CMake generation [#1464]( https://github.com/sofa-framework/sofa/pull/1464 ); - [SofaMacros] Handle COMPONENTS (needed by SofaPython3) [#1671]( https://github.com/sofa-framework/sofa/pull/1671 ). **Modules**; - [All] Replace last use of Qwt by QtCharts and remove internal library [#1512]( https://github.com/sofa-framework/sofa/pull/1512 ); - [SofaBaseCollision] Add option to use of normal orientation in triangle and self-colliding cube [#1559]( https://github.com/sofa-framework/sofa/pull/1559 ); - **[SofaCore]** Add virtual getPathName function in Base [#1455]( https://github.com/sofa-framework/sofa/pull/1455 ); - [SofaGeneralLoader] Add option for transform in SphereLoader to match other loaders API [#1495]( https://github.com/sofa-framework/sofa/pull/1495 ); - [SofaGeneralLoader] allow ReadState at init [#1654]( https://github.com/sofa-framework/sofa/pull/1654 ); - [SofaHaptics] Add multithread test on LCPForceFeedback component [#1581]( https://github.com/sofa-framework/sofa/pull/1581 ); - [SofaHaptics] Add simple tests on LCPForceFeedback component [#1576]( https://github.com/sofa-framework/sofa/pull/1576 ); - [SofaImplicitField] Add new ImplicitFields and getHessian to ScalarField [#1510]( https://github.com/sofa-framework/sofa/pull/1510 ); - **[SofaKernel]** ADD: add polynomial springs force fields [#1342]( https://github.com/sofa-framework/sofa/pull/1342 ); - **[SofaKernel]** Add DataLink object & PathResolver. [#1485]( https://github.com/sofa-framework/sofa/pull/1485 ); - **[SofaKernel]** Add setLinkedBase method in BaseLink [#1436]( https://github.com/sofa-framework/sofa/pull/1436 ); - **[SofaKernel]** Add whole program optimization (aka link-time optimization) for msvc [#1468]( https://github.com/sofa-framework/sofa/pull/1468 ); - **[SofaKernel]** Exposing Data in ContactListener. [#1678]( https://github.com/sofa-framework/sofa/pull/1678 ); - **[SofaKernel]** Fil,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:217886,test,test,217886,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,".com/sofa-framework/sofa/pull/2196 ); - [All] Fix warnings [#2097]( https://github.com/sofa-framework/sofa/pull/2097 ); - [All] Refactor Read/Write Accessor. [#1807]( https://github.com/sofa-framework/sofa/pull/1807 ); - [All] Refactor vector & vector_device [#1799]( https://github.com/sofa-framework/sofa/pull/1799 ); - [All] Remove last includes of SofaSimulationTree [#1812]( https://github.com/sofa-framework/sofa/pull/1812 ); - [All] Remove un-needed includes. [#1750]( https://github.com/sofa-framework/sofa/pull/1750 ); - [All] Remove unused includes [#1960]( https://github.com/sofa-framework/sofa/pull/1960 ); - [All] Remove warning: unused variable [#1787]( https://github.com/sofa-framework/sofa/pull/1787 ); - [All] Update code to use sofa::InvalidID instead of topology::InvalidID [#2116]( https://github.com/sofa-framework/sofa/pull/2116 ); - [All] use =deleted for deprecation [#1793]( https://github.com/sofa-framework/sofa/pull/1793 ); - [All] Convert tests to Sofa.Testing [#2188]( https://github.com/sofa-framework/sofa/pull/2188 ); - [All] Remove useless inclusions of MechanicalObject.h [#2015]( https://github.com/sofa-framework/sofa/pull/2015 ); - [All] Remove deprecated calls and warnings [#2210]( https://github.com/sofa-framework/sofa/pull/2210 ); - [All] Remove use of compatibility layer [#2179]( https://github.com/sofa-framework/sofa/pull/2179 ); - **[Sofa.Core]** Move eq,peq utilities functions to a standalone file [#2137]( https://github.com/sofa-framework/sofa/pull/2137 ); - **[Sofa.GL]** Relocate the module (again) + clarify module vs plugin definitions [#1941]( https://github.com/sofa-framework/sofa/pull/1941 ); - **[Sofa.GL]** Remove warnings from deprecated headers [#2045]( https://github.com/sofa-framework/sofa/pull/2045 ); - **[Sofa.GL]** static variable belongs to the class [#1951]( https://github.com/sofa-framework/sofa/pull/1951 ); - **[Sofa.Topology]** remove unnecessary pragma [#1969]( https://github.com/sofa-framework/sofa/pull/1969 ); - **[",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:197329,Test,Testing,197329,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Testing']
Testability,.com/sofa-framework/sofa/pull/4057); - [all] Lifecycle v23.12 4/n [#4058](https://github.com/sofa-framework/sofa/pull/4058); - [plugins] Fix OptionGroup deprecated constructor in image and SofaCUDA plugin [#4064](https://github.com/sofa-framework/sofa/pull/4064); - [all] Update code regarding lifecycle in Topology.h [#4065](https://github.com/sofa-framework/sofa/pull/4065); - [all] Fix warnings related to Vec and unused var [#4067](https://github.com/sofa-framework/sofa/pull/4067); - [all] Remove some simple uses of bwdInit() [#4075](https://github.com/sofa-framework/sofa/pull/4075); - [SofaMatrix] Remove CImgPlugin dependency [#4112](https://github.com/sofa-framework/sofa/pull/4112); - [all] Replace deprecated wbloc function by its new function name [#4118](https://github.com/sofa-framework/sofa/pull/4118); - [Core] VecId: set correct message for the deleted function holonomicC [#4120](https://github.com/sofa-framework/sofa/pull/4120); - [IO.Mesh.Tests] Reduce number of logs by unactivating printlog [#4148](https://github.com/sofa-framework/sofa/pull/4148); - [Constraint.Lagrangian.Solver] LCPConstraintSolver: remove useless computation if printLog is enabled [#4170](https://github.com/sofa-framework/sofa/pull/4170); - [Scene] Eigen3-SVD.scn: disable printLog [#4184](https://github.com/sofa-framework/sofa/pull/4184); - [Constraint.Lagrangian.Solver] Clean both constraint solvers [#4185](https://github.com/sofa-framework/sofa/pull/4185); - [Topology.Container] Update and rename methods in EdgeSetGeometryAlgorithms to compute barycentric coordinates [#4190](https://github.com/sofa-framework/sofa/pull/4190); - [Topology.Container] Remove method writeMSHfile in GeometryAlgorithms components [#4192](https://github.com/sofa-framework/sofa/pull/4192); - [all] Fix mismatch on explicit template instantiations [#4210](https://github.com/sofa-framework/sofa/pull/4210); - [SofaCUDA] Move cuda GUI dependent code [#4227](https://github.com/sofa-framework/sofa/pull/4227); - [all] ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:45559,Test,Tests,45559,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Test', 'log']","['Tests', 'logs']"
Testability,".cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.cpp); endif(). sofa_find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Topology REQUIRED). # LIBRARY; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTER",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:5826,log,logging,5826,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingCubeUtility.cpp; ${SRC_ROOT}/NameDecoder.cpp; ${SRC_ROOT}/OptionsGroup.cpp; ${SRC_ROOT}/ScopedAdvancedTimer.cpp; ${SRC_ROOT}/Polynomial_LD.cpp; ${SRC_ROOT}/RandomGenerat,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:3157,log,logging,3157,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,"/******************************************************************************; * SOFA, Simulation Open-Framework Architecture *; * (c) 2006 INRIA, USTL, UJF, CNRS, MGH *; * *; * CONTRIBUTORS *; * *; *******************************************************************************/. :: SOFA Framework ::. The following authors contributed to the design and implementation; of the core SOFA APIs, as well as base features and applications :. Yinoussa Adagolodgo; Michael Adam; Jeremie Allard; Barbara Andre; Pierre-Jean Bensoussan; Alexandre Bilger; Jean-Nicolas Brunet; Paul Maria Scheikl; Guillaume Bousquet; Olivier Carre; Bruno Carrez; Frederic Chateau; Eulalie Coevoet; Hadrien Courtecuisse; Olivier Comas; Stephane Cotin; Jeremie Dequidt; Erwan Douaille; Marie Durand; Christian Duriez; Herve Delingette; Florent Falipou; Francois Faure; Sylvere Fonteneau; Simone Gasparini; Thierry Gaugry; Benjamin Gilles; Christophe Guebert; Laure Heigeas; Tobias Heimann; Everton Hermann; Jeremy Jaussaud; Lenka Jerabkova; Francois Jourdes; Hoeryong Jung; Frederic Largiliere; Geoffrey Lienhart; Vincent Majorczyk; Damien Marchal; Stephanie Marchesseau; Bruno Marques; Cesar Mendoza; Matthieu Nesme; Paul Neumann; Chi-Thanh Nguyen; Marek Olsak; Guillaume Paran; Erik Pernod; Igor Peterlik; Juan Pablo de la Plata Alcalde; Francois Poyer; Jeremy Ringuard; Frederick Roy; Etienne Schmitt; Federico Spadoni; Hugo Talbot; Romain Testylier; Maxime Tournier; Moreno Trlin; Felix Vanneste. :: SOFA Modules ::. In addition to classes created by the SOFA Team mentioned above,; the following authors are to be credited for their contributions :. + Co-rotational FEM; Matthieu Nesme and Francois Faure. + Dynamic Topologies; Barbara Andre, Herve Delingette, Erik Pernod. + Tetrahedral volume rendering; Sebastien Barbier and George-Pierre Bonneau. + Articulated Rigid Bodies based on Penalities; Michael Adam, Francois Faure. + Articulated Rigid Bodies based on Reduced Coordinates; Juan Pablo de la Plata Alcalde, Chri",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Authors.txt:1417,Test,Testylier,1417,Authors.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Authors.txt,1,['Test'],['Testylier']
Testability,"//github.com/sofa-framework/sofa/pull/168 ); - Improve and clean msg_api and logging of message (#190, #255, #275). See [documentation](https://www.sofa-framework.org/community/doc/programming-with-sofa/logger/) for more information.; - Add CMake option to limit cores used to build specific targets [#254]( https://github.com/sofa-framework/sofa/pull/254 ); - Fix rgbacolor parsing [#305]( https://github.com/sofa-framework/sofa/pull/305 ); - CMake: installing gtest headers for separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - [SofaKernel]; - Update the RichConsoleStyleMessageFormatter [#126]( https://github.com/sofa-framework/sofa/pull/126 ); - creation of a defaulttype::RGBAColor [#119]( https://github.com/sofa-framework/sofa/pull/119 ); - add a new method in BaseObjectDescription [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - adding listener mechanism to SceneLoader [#205]( https://github.com/sofa-framework/sofa/pull/205 ); - common usage for DiagonalMass and tests [#230]( https://github.com/sofa-framework/sofa/pull/230 ); - add tests for DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - add tests for DefaultAnimationLoop [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for LocalMinDistance [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add a way to convert message type to string in Message.cpp [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - adding listener mechanism to SceneLoader [#204]( https://github.com/sofa-framework/sofa/pull/204 ); - Grid Topologies cleanup + new SphereGrid [#164]( https://github.com/sofa-framework/sofa/pull/164 ); - Add CMake option SOFA_WITH_EXPERIMENTAL_FEATURES (default OFF) to enable MechanicalObject::buildIdentityBlocksInJacobian [#276]( https://github.com/sofa-framework",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:326959,test,tests,326959,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,//github.com/sofa-framework/sofa/pull/2152 ); - **[SofaBaseTopology]** Remove definition of real [#1955]( https://github.com/sofa-framework/sofa/pull/1955 ); - **[SofaBaseTopology]** Remove warning when a Data is directly linked to a topoogy Data container [#1971]( https://github.com/sofa-framework/sofa/pull/1971 ); - **[SofaBaseTopology]** Remove warnings [#2046]( https://github.com/sofa-framework/sofa/pull/2046 ); - **[SofaBaseTopology]** Single definition of global variables [#1950]( https://github.com/sofa-framework/sofa/pull/1950 ); - **[SofaBaseUtils]** Clean RequiredPlugin [#1899]( https://github.com/sofa-framework/sofa/pull/1899 ); - **[SofaBaseVisual]** Move #include<Mat.h> from BaseCamera.h to BaseCamera.cpp [#1846]( https://github.com/sofa-framework/sofa/pull/1846 ); - **[SofaBase]** Convert tests to Sofa.Testing [#2146]( https://github.com/sofa-framework/sofa/pull/2146 ); - [SofaBoundaryCondition] Avoid ambiguity [#1958]( https://github.com/sofa-framework/sofa/pull/1958 ); - [SofaCommon] Convert tests to Sofa.Testing [#2153]( https://github.com/sofa-framework/sofa/pull/2153 ); - [SofaConstraint] Small cleaning [#2174]( https://github.com/sofa-framework/sofa/pull/2174 ); - **[SofaCore]** Deprecate operator= [#2167]( https://github.com/sofa-framework/sofa/pull/2167 ); - **[SofaCore]** Factoring code in Link.h [#1704]( https://github.com/sofa-framework/sofa/pull/1704 ); - **[SofaCore]** Merge TData in Data. [#1753]( https://github.com/sofa-framework/sofa/pull/1753 ); - **[SofaCore]** Minor cleaning in constraints [#2138]( https://github.com/sofa-framework/sofa/pull/2138 ); - **[SofaCore]** Move Link::CheckPath() method to PathResolver::CheckPath() [#1717]( https://github.com/sofa-framework/sofa/pull/1717 ); - **[SofaCore]** Move definition Link::read() method to BaseLink::read() [#1736]( https://github.com/sofa-framework/sofa/pull/1736 ); - **[SofaCore]** Move function definition in cpp files [#2041]( https://github.com/sofa-framework/sofa/pull/2041 ); - **,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:200299,test,tests,200299,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,//github.com/sofa-framework/sofa/pull/4259); - [LinearSystem] Speedup computation of Jacobian matrices [#4317](https://github.com/sofa-framework/sofa/pull/4317); - [FEM.Elastic] Reference instead of a copy in TriangularFEMForceField [#4332](https://github.com/sofa-framework/sofa/pull/4332); - [All] Add GIT_REF option for external plugins [#4448](https://github.com/sofa-framework/sofa/pull/4448); - [Testing] Externalize (find_package() or fetch) googletest/gtest [#4471](https://github.com/sofa-framework/sofa/pull/4471). ### Bug Fixes; - [test] Fix unit test on RestShapeSpringsForceField [#3864](https://github.com/sofa-framework/sofa/pull/3864); - [test] Fix failing unit test [#3876](https://github.com/sofa-framework/sofa/pull/3876); - [Constraint.Lagrangian.Solver] LCPConstraintSolver: Fix when mu=0 (no friction) [#3905](https://github.com/sofa-framework/sofa/pull/3905); - [applications] remove unused variable [#3920](https://github.com/sofa-framework/sofa/pull/3920); - [Projective] Fix and test FixedPlaneConstraint [#3925](https://github.com/sofa-framework/sofa/pull/3925); - [MechanicalLoad] Restore addKToMatrix and test SurfacePressureForceField [#3935](https://github.com/sofa-framework/sofa/pull/3935); - [Core.Topology] Restore invalid ids in invalid containers [#3962](https://github.com/sofa-framework/sofa/pull/3962); - [Sofa.Component] FIX default color for TetrahedronFEMForceField [#3971](https://github.com/sofa-framework/sofa/pull/3971); - [image] Fix crash in case no parameters provided to TransferFunction [#3976](https://github.com/sofa-framework/sofa/pull/3976); - [Mapping.NonLinear] Fix assert in RigidMapping [#3978](https://github.com/sofa-framework/sofa/pull/3978); - [Diffusion] Fix buildStiffnessMatrix in TetrahedronDiffusionFEMForceField [#4012](https://github.com/sofa-framework/sofa/pull/4012); - [Core] Fix drawing of Objects when hiding Visual Models [#4044](https://github.com/sofa-framework/sofa/pull/4044); - [FEM.Elastic] Compute BBox in triangle F,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:33655,test,test,33655,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,//github.com/sofa-framework/sofa/pull/584 ); - [All] Various small changes in error messages & bugfix from defrost branches [#660]( https://github.com/sofa-framework/sofa/pull/660 ); - [SofaConstraint] FIX: Moving semicolon under preprocessor define [#680]( https://github.com/sofa-framework/sofa/pull/680 ); - **[SofaEngine]** FIX Bug in BoxROI that is not properly initialized [#627]( https://github.com/sofa-framework/sofa/pull/627 ); - **[SofaFramework]** Fix plugin list configuration [#645]( https://github.com/sofa-framework/sofa/pull/645 ); - [SofaGraphComponent] FIX SceneChecker_test + ADD alias test [#711]( https://github.com/sofa-framework/sofa/pull/711 ); - [SofaGraphComponent] FIX SceneCheck build on MacOS [#719]( https://github.com/sofa-framework/sofa/pull/719 ); - [SofaGuiQt] FIX missing resources [#758]( https://github.com/sofa-framework/sofa/pull/758 ); - [SofaGeneralEngine] FIX disabled tests [#675]( https://github.com/sofa-framework/sofa/pull/675 ); - **[SofaHelper]** More robust method to test end of string [#617]( https://github.com/sofa-framework/sofa/pull/617 ); - **[SofaKernel]** FIX macro issue resulted from the #include cleaning. [#672]( https://github.com/sofa-framework/sofa/pull/672 ); - [SofaMiscFem] FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaOpenglVisual] FIX MacOS crash in batch mode [#646]( https://github.com/sofa-framework/sofa/pull/646 ); - **[SofaSimulationGraph]** FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaSparseSolver] FIX SparseLDL crash and add proper SOFA_FLOAT/DOUBLE mangement [#655]( https://github.com/sofa-framework/sofa/pull/655 ). **Plugins / Projects**; - [CGALPlugin] FIX compilation issue with recent version of CGAL (4.11) & Ubunu 18.04 LTS [#664]( https://github.com/sofa-framework/sofa/pull/664 ); - [CImgPlugin] Export CImg_CFLAGS [#595]( https://github.com/sofa-framework/sofa/pull/595 ); - [CImgPlugin] FIX CMakeLists install fail since pluginizat,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:297147,test,test,297147,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,/1854 ); - **[SofaSimpleFem]** Fix nasty bug in HexaFEMForceField' s draw() [#1766]( https://github.com/sofa-framework/sofa/pull/1766 ); - **[SofaSimpleFem]** Fix rendering options in TetrahedronFEMFF [#2156]( https://github.com/sofa-framework/sofa/pull/2156 ); - **[SofaSimulation/Tests]** Fix init/cleanup in SofaSimulation modules [#1987]( https://github.com/sofa-framework/sofa/pull/1987 ); - **[SofaSimulationCore]** Set default TaskScheduler worker threads to idle state [#1997]( https://github.com/sofa-framework/sofa/pull/1997 ); - **[SofaSimulationCore]** Broken URL [#2011]( https://github.com/sofa-framework/sofa/pull/2011 ); - **[SofaSimulationCore]** FIX Task scheduler memory leak [#1927]( https://github.com/sofa-framework/sofa/pull/1927 ); - **[SofaSimulationCore]** Reorder according to definition [#2034]( https://github.com/sofa-framework/sofa/pull/2034 ); - **[SofaSimulationCore]** Revert changes in #1927 [#2017]( https://github.com/sofa-framework/sofa/pull/2017 ); - [SofaSimulationGraph] Restore tests [#1988]( https://github.com/sofa-framework/sofa/pull/1988 ); - [SofaSimulationGraph] Reading links fail when owner is invalid [#2166]( https://github.com/sofa-framework/sofa/pull/2166 ); - [SofaSparseSolver] SparseLDLSolver optimizations [#1996]( https://github.com/sofa-framework/sofa/pull/1996 ); - [SofaTopologyMapping] Fix Edge2Quad condition [#2126]( https://github.com/sofa-framework/sofa/pull/2126 ); - [SofaUserInteraction] Fix Bug of removing topological element when a Hexa2TetraTopologicalMapping is in the scene [#1973]( https://github.com/sofa-framework/sofa/pull/1973 ). **Plugins / Projects**; - [CGALPlugin] Fix cgal drawings [#2206]( https://github.com/sofa-framework/sofa/pull/2206 ); - [CGALPlugin] Fix compilation errors related to SOFA.GL and types converted to DataTypes [#2065]( https://github.com/sofa-framework/sofa/pull/2065 ); - [CImgPlugin] Fix unit test [#2147]( https://github.com/sofa-framework/sofa/pull/2147 ); - [Geomagic] Fix Geomagic plugi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:191245,test,tests,191245,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,/3196 ). **Modules**; - [Constraint.Lagrangian.Correction] Searching for Direct Linear Solver in LinearSolverConstraintCorrection [#3055]( https://github.com/sofa-framework/sofa/pull/3055 ) ; - [GUI.Qt] Redirect Qt messages to the SOFA output stream [#3101]( https://github.com/sofa-framework/sofa/pull/3101 ); - [GUI.Qt] Save scene graph lock state persistently [#3119]( https://github.com/sofa-framework/sofa/pull/3119 ) ; - [GUI] Completing text description for mouse interaction with springs [#3122]( https://github.com/sofa-framework/sofa/pull/3122 ); - [HyperElastic] Add draw method to StandardTetrahedralFEMForceField [#2838]( https://github.com/sofa-framework/sofa/pull/2838 ); - [HyperElastic] Introduce example scene for StandardTetrahedralFEMForceField [#2857]( https://github.com/sofa-framework/sofa/pull/2857 ); - [LinearSolver.Direct] LU solver can be templated to CRSMat3x3 [#2862]( https://github.com/sofa-framework/sofa/pull/2862 ); - [LinearSolver.Direct] Unit tests around SparseLDLSolver [#3050]( https://github.com/sofa-framework/sofa/pull/3050 ); - [LinearSolver] Introduce Eigen solvers [#2926]( https://github.com/sofa-framework/sofa/pull/2926 ); - [Regression] Test linear solvers for regression [#2776]( https://github.com/sofa-framework/sofa/pull/2776 ); - [SceneUtility] Move RequiredPlugin to Sofa.SimulationCore [#2849]( https://github.com/sofa-framework/sofa/pull/2849 ); - [Simulation.Core] Special message if extension is Python [#2998]( https://github.com/sofa-framework/sofa/pull/2998 ); - [Sofa.Config][MSVC] Change SIMD cmake option and flags [#2652]( https://github.com/sofa-framework/sofa/pull/2652 ); - [Sofa.GL] Add method drawScaledTetrahedron [#2586]( https://github.com/sofa-framework/sofa/pull/2586 ); - [Sofa.GUI.Common] Change the current GUI by default choice [#2979]( https://github.com/sofa-framework/sofa/pull/2979 ); - [Sofa.LinearAlgebra] Test CRS product compared to Eigen [#2839]( https://github.com/sofa-framework/sofa/pull/2839 ); - [SofaCore,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:99100,test,tests,99100,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,/450 ); - [SofaDefaulttype]; - MapMapSparseMatrix conversion utils with Eigen Sparse [#452]( https://github.com/sofa-framework/sofa/pull/452 ); - multTranspose method between MapMapSparseMatrix and BaseVector [#456]( https://github.com/sofa-framework/sofa/pull/456 ); - [SofaDeformable]; - Rest shape can now be given using SingleLink [#315]( https://github.com/sofa-framework/sofa/pull/315 ); - Add AngularSpringForceField [#334]( https://github.com/sofa-framework/sofa/pull/334 ); - [SofaEulerianFluid]; - Pluginizing the module [#396]( https://github.com/sofa-framework/sofa/pull/396 ); - [SofaExporter]; - Clean & test the exporter [#372]( https://github.com/sofa-framework/sofa/pull/372 ); - [SofaGraphComponent]; - Add SceneCheckerVisitor to detect missing RequiredPlugin [#306]( https://github.com/sofa-framework/sofa/pull/306 ); - Add a mechanism (SceneChecker) to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - Refactor the SceneChecker and add a new SceneChecker to test dumplicated names [#392]( https://github.com/sofa-framework/sofa/pull/392 ); - [SofaGeneralEngine]; - Add test and minor cleaning for IndexValueMapper [#319]( https://github.com/sofa-framework/sofa/pull/319 ); - Add a computeBBox to the SmoothMeshEngine [#409]( https://github.com/sofa-framework/sofa/pull/409 ); - [SofaGeneralObjectInteraction]; - issofa_attachconstraint [#501]( https://github.com/sofa-framework/sofa/pull/501 ); - [SofaMisc]; - Add a data repository at start-up time [#402]( https://github.com/sofa-framework/sofa/pull/402 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaMiscFem]; - Add hyperelasticity fem code in SOFA [#349]( https://github.com/sofa-framework/sofa/pull/349 ); - [SofaSimpleFem]; - ADD computeBBox and test to HexaFEMForceField [#289]( https://github.com/sofa-framework/sofa/pull/289 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-fr,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:307934,test,test,307934,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,/452 ); - multTranspose method between MapMapSparseMatrix and BaseVector [#456]( https://github.com/sofa-framework/sofa/pull/456 ); - [SofaDeformable]; - Rest shape can now be given using SingleLink [#315]( https://github.com/sofa-framework/sofa/pull/315 ); - Add AngularSpringForceField [#334]( https://github.com/sofa-framework/sofa/pull/334 ); - [SofaEulerianFluid]; - Pluginizing the module [#396]( https://github.com/sofa-framework/sofa/pull/396 ); - [SofaExporter]; - Clean & test the exporter [#372]( https://github.com/sofa-framework/sofa/pull/372 ); - [SofaGraphComponent]; - Add SceneCheckerVisitor to detect missing RequiredPlugin [#306]( https://github.com/sofa-framework/sofa/pull/306 ); - Add a mechanism (SceneChecker) to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - Refactor the SceneChecker and add a new SceneChecker to test dumplicated names [#392]( https://github.com/sofa-framework/sofa/pull/392 ); - [SofaGeneralEngine]; - Add test and minor cleaning for IndexValueMapper [#319]( https://github.com/sofa-framework/sofa/pull/319 ); - Add a computeBBox to the SmoothMeshEngine [#409]( https://github.com/sofa-framework/sofa/pull/409 ); - [SofaGeneralObjectInteraction]; - issofa_attachconstraint [#501]( https://github.com/sofa-framework/sofa/pull/501 ); - [SofaMisc]; - Add a data repository at start-up time [#402]( https://github.com/sofa-framework/sofa/pull/402 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaMiscFem]; - Add hyperelasticity fem code in SOFA [#349]( https://github.com/sofa-framework/sofa/pull/349 ); - [SofaSimpleFem]; - ADD computeBBox and test to HexaFEMForceField [#289]( https://github.com/sofa-framework/sofa/pull/289 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaVolumetricData]; - Split the module in two plugins [#389]( https://github.com/sofa-framework/sofa/pull/38,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:308045,test,test,308045,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,/511 ); - [SofaBoundaryCondition]; - Fix LinearForceField that disappears [#525]( https://github.com/sofa-framework/sofa/pull/525 ); - FIX Removed incorrect warning from LinearForceField [#384]( https://github.com/sofa-framework/sofa/pull/384 ); - [SofaConstraint]; - Fix error due to MacOS >= 10.11 using a relative filename [#325]( https://github.com/sofa-framework/sofa/pull/325 ); - Fix issue in GenericConstraintCorrection [#567]( https://github.com/sofa-framework/sofa/pull/567 ); - [SofaDeformable]; - Fix RestShapeSpringsForceField [#367]( https://github.com/sofa-framework/sofa/pull/367 ); - [SofaExporter]; - FIX allow to extend VTKExporter in a plugin [#309]( https://github.com/sofa-framework/sofa/pull/309 ); - [SofaGeneralEngine]; - Fix some XyzTransformMatrixEngine::update() function [#343]( https://github.com/sofa-framework/sofa/pull/343 ); - [SofaGeneralImplicitOdeSolver]; - fix test [#478]( https://github.com/sofa-framework/sofa/pull/478 ); - [SofaGraphComponent]; - Fix the test that was wrong and thus failing in SceneChecker [#405]( https://github.com/sofa-framework/sofa/pull/405 ); - Fix a crashing bug in SceneCheckAPIChange. [#479]( https://github.com/sofa-framework/sofa/pull/479 ); - FIX SceneChecker & RequiredPlugin [#563]( https://github.com/sofa-framework/sofa/pull/563 ); - [SofaGeneralObjectInteraction]; - Remove stiffness multiplicator in SpringForceField [#290]( https://github.com/sofa-framework/sofa/pull/290 ); - [SofaMiscFem]; - Fix FastTetrahedralCorotationalFF topology change [#554]( https://github.com/sofa-framework/sofa/pull/554 ); - [SofaOpenglVisual]; - Fix a bug crashing sofa when the textures cannot be loaded. [#474]( https://github.com/sofa-framework/sofa/pull/474 ). **Extlibs**; - [CImg]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Eigen]; - Warning fix with eigen when compiling with msvc [#447]( https://github.com/sofa-framework/sofa/pull/447 ); - [libQGLViewer]; - FIX missing headers [#46,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:315790,test,test,315790,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,"/changeClassName.bash TestPlugin MyPlugin. On Windows:; utils\changeClassName.bat TestPlugin MyPlugin; cd examples; ..\utils\changeClassName.bat TestPlugin MyPlugin; cd ../doc/; ..\utils\changeClassName.bat TestPlugin MyPlugin  This can take some time !. At this point, you may want to add the plugin directory to svn.; You can also reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_TestPlugin ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_TestPlugin); {; usePlugin(TestPlugin) } . if your plugin depends on other plugins, edit file TestPlugin-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. TestPlugin.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initTestPlugin.h. a template of user documentation is found in TestPlugin.tex. Is should; be filled in for every component in the plugin, then compiled with your; favourite Latex distribution. The filename should match the name of the; component. ; the examples are in examples/; . The first one is TestPlugin.scn, and when; runSOFA; opens it, an html page pops; up, with a link to the plugin documentation. Intellectual; property and rights. Authors. You. Contact. You@your.institute. License. Your can distribute this plugin; under; the same license as the core of SOFA, or any other license of your; choice. Patents. APP registration. Sponsors. Do not forget to thank your; sponsors, they love i",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html:1733,Test,TestPlugin,1733,applications/plugins/SofaTest/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html,1,['Test'],['TestPlugin']
Testability,"/github.com/sofa-framework/sofa/pull/2229 ); - [image] Ignore python2 scenes in CI [#2526]( https://github.com/sofa-framework/sofa/pull/2526 ); - [image] fix shadow variable [#2515]( https://github.com/sofa-framework/sofa/pull/2515 ); - [image] fix shadow variables [#2528]( https://github.com/sofa-framework/sofa/pull/2528 ); - [SofaCUDA] Fix broken visuals in examples [#2447]( https://github.com/sofa-framework/sofa/pull/2447 ); - [SofaCUDA] Fix compilation [#2446]( https://github.com/sofa-framework/sofa/pull/2446 ); - [SofaCUDA] Fix static variable definition for double-precision [#2440]( https://github.com/sofa-framework/sofa/pull/2440 ); - [SofaCUDA] Redundant namespace [#2538]( https://github.com/sofa-framework/sofa/pull/2538 ); - [SofaGuiGlut] FIX compilation for v21.06 [#2274]( https://github.com/sofa-framework/sofa/pull/2274 ); - [SofaGuiGlut] Fix compilation for v21.12 [#2539]( https://github.com/sofa-framework/sofa/pull/2539 ). **Examples / Scenes**; - [examples] FIX duplicated scene in regression-tests [#2251]( https://github.com/sofa-framework/sofa/pull/2251 ); - [examples] FIX duplicated scene in regression-tests (2) [#2252]( https://github.com/sofa-framework/sofa/pull/2252 ). **Scripts / Tools**. ### Cleanings. **Architecture**; - [CMake] Remove option SOFA_ENABLE_SOFT_DEPS_TO_SOFAPYTHON [#2533]( https://github.com/sofa-framework/sofa/pull/2533 ); - [GitHub] Improve ""bug report"" issue template [#2454]( https://github.com/sofa-framework/sofa/pull/2454 ). **Modules**; - [All] Clean warnings [#1549]( https://github.com/sofa-framework/sofa/pull/1549 ); - [All] Remove several TopologyDataHandler and headers inclusion in components [#2162]( https://github.com/sofa-framework/sofa/pull/2162 ); - [All] Remove warnings [#2378]( https://github.com/sofa-framework/sofa/pull/2378 ); - [All] Update codebase to compile w/o Sofa.Compat for v21.12 [#2525]( https://github.com/sofa-framework/sofa/pull/2525 ); - [All] Update lifecycle (macros, etc) for v21.12 [#2524]( https:",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:153832,test,tests,153832,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"/mechanicalvisitor/MechanicalPropagateOnlyPositionVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalPropagateOnlyVelocityVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalResetConstraintVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalResetForceVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalSetPositionAndVelocityVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVAllocVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVAvailVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVDotVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVFreeVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVInitVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVMultiOpVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVNormVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVOpVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVReallocVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVSizeVisitor.cpp; ). sofa_find_package(Sofa.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Core). # is this a compiler/linker version specific problem?; if(CMAKE_SYSTEM_NAME STREQUAL Linux); # target_link_options is available from CMake 3.13; # target_link_options(${PROJECT_NAME} PUBLIC ""-pthread""); SET(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -pthread"" ); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_SIMULATION_CORE_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_SIMULATION_CORE_BUILD_TESTS); add_subdirectory(test); add_subdirectory(simutest); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:13638,Test,Tests,13638,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,"/pull/306 ); - Add a mechanism (SceneChecker) to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - Refactor the SceneChecker and add a new SceneChecker to test dumplicated names [#392]( https://github.com/sofa-framework/sofa/pull/392 ); - [SofaGeneralEngine]; - Add test and minor cleaning for IndexValueMapper [#319]( https://github.com/sofa-framework/sofa/pull/319 ); - Add a computeBBox to the SmoothMeshEngine [#409]( https://github.com/sofa-framework/sofa/pull/409 ); - [SofaGeneralObjectInteraction]; - issofa_attachconstraint [#501]( https://github.com/sofa-framework/sofa/pull/501 ); - [SofaMisc]; - Add a data repository at start-up time [#402]( https://github.com/sofa-framework/sofa/pull/402 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaMiscFem]; - Add hyperelasticity fem code in SOFA [#349]( https://github.com/sofa-framework/sofa/pull/349 ); - [SofaSimpleFem]; - ADD computeBBox and test to HexaFEMForceField [#289]( https://github.com/sofa-framework/sofa/pull/289 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaVolumetricData]; - Split the module in two plugins [#389]( https://github.com/sofa-framework/sofa/pull/389 ). **Plugins / Projects**; - [CGALPlugin]; - Add new functionality for mesh generation from image: definition of features [#294]( https://github.com/sofa-framework/sofa/pull/294 ); - [meshconv]; - Improve the CMake config of meshconv requiring miniflowVR to compile [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [PSL]; - Experimental : Add PSL for 17.12 [#541]( https://github.com/sofa-framework/sofa/pull/541 ); - [runSofa]; - autoload plugins (2nd version) [#301]( https://github.com/sofa-framework/sofa/pull/301 ); - Extend the live coding support, message API available for nodes, add an openInEditor [#337]( https://github.com/sofa-framework/sofa/pull/337 ); - add ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:308748,test,test,308748,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,/pull/3864); - [test] Fix failing unit test [#3876](https://github.com/sofa-framework/sofa/pull/3876); - [Constraint.Lagrangian.Solver] LCPConstraintSolver: Fix when mu=0 (no friction) [#3905](https://github.com/sofa-framework/sofa/pull/3905); - [applications] remove unused variable [#3920](https://github.com/sofa-framework/sofa/pull/3920); - [Projective] Fix and test FixedPlaneConstraint [#3925](https://github.com/sofa-framework/sofa/pull/3925); - [MechanicalLoad] Restore addKToMatrix and test SurfacePressureForceField [#3935](https://github.com/sofa-framework/sofa/pull/3935); - [Core.Topology] Restore invalid ids in invalid containers [#3962](https://github.com/sofa-framework/sofa/pull/3962); - [Sofa.Component] FIX default color for TetrahedronFEMForceField [#3971](https://github.com/sofa-framework/sofa/pull/3971); - [image] Fix crash in case no parameters provided to TransferFunction [#3976](https://github.com/sofa-framework/sofa/pull/3976); - [Mapping.NonLinear] Fix assert in RigidMapping [#3978](https://github.com/sofa-framework/sofa/pull/3978); - [Diffusion] Fix buildStiffnessMatrix in TetrahedronDiffusionFEMForceField [#4012](https://github.com/sofa-framework/sofa/pull/4012); - [Core] Fix drawing of Objects when hiding Visual Models [#4044](https://github.com/sofa-framework/sofa/pull/4044); - [FEM.Elastic] Compute BBox in triangle FEM [#4061](https://github.com/sofa-framework/sofa/pull/4061); - [FEM.Elastic] Fix typo in error message [#4062](https://github.com/sofa-framework/sofa/pull/4062); - [LinearAlgebra] Fix matrix sizes when filtering [#4063](https://github.com/sofa-framework/sofa/pull/4063); - [MechanicalLoad] Fix compilation further to new RemovedData constructor [#4094](https://github.com/sofa-framework/sofa/pull/4094); - [MechanicalLoad] Fix plane force field buildStiffnessMatrix [#4098](https://github.com/sofa-framework/sofa/pull/4098); - [GUI.Qt] Fix crash if filename is null [#4102](https://github.com/sofa-framework/sofa/pull/4102); - [Tutorials] ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:34274,assert,assert,34274,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['assert'],['assert']
Testability,/pull/4447); - [CMake] Fix SOFA install [#4451](https://github.com/sofa-framework/sofa/pull/4451); - [GitHub] Fix action using github.context [#4456](https://github.com/sofa-framework/sofa/pull/4456); - [Helper] PluginManager: Check symbol (real) location and avoid calling wrong entrypoint (Mac/Linux) [#4466](https://github.com/sofa-framework/sofa/pull/4466); - [GitHUb] Fix actions using cron condition [#4468](https://github.com/sofa-framework/sofa/pull/4468); - [GitHub] Fix PR messages not properly sent [#4475](https://github.com/sofa-framework/sofa/pull/4475); - [GitHub] Use finally pull_request_target [#4476](https://github.com/sofa-framework/sofa/pull/4476); - [SofaCUDA] Fix spatial grid compilation with double [#4478](https://github.com/sofa-framework/sofa/pull/4478); - [image] Fix compilation on Windows [#4484](https://github.com/sofa-framework/sofa/pull/4484); - [Testing] Fix installation of gtest headers [#4489](https://github.com/sofa-framework/sofa/pull/4489); - [Helper] PluginManager Fix test in debug [#4491](https://github.com/sofa-framework/sofa/pull/4491); - [Topology] Fix method isQuadDeulaunayOriented and its use in splitAlongPath [#4494](https://github.com/sofa-framework/sofa/pull/4494); - [GitHub] Fix review request Discord msg [#4502](https://github.com/sofa-framework/sofa/pull/4502); - [Simulation.Core] RequiredPlugin: Avoid calling loadPlugin() twice on start-up [#4509](https://github.com/sofa-framework/sofa/pull/4509); - [Share] Remove DefaultCollisionGroupManager in the default scenes [#4521](https://github.com/sofa-framework/sofa/pull/4521); - [all] Fix some warnings [#4529](https://github.com/sofa-framework/sofa/pull/4529); - [GitHub] Fix GH Discussions Announcements for Discord [#4530](https://github.com/sofa-framework/sofa/pull/4530); - [Simulation.Core] Make TSAN pass for caduceus [#4535](https://github.com/sofa-framework/sofa/pull/4535); - [Config] Add cxxopts cmake find module [#4538](https://github.com/sofa-framework/sofa/pull/4538); -,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:7581,test,test,7581,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,"/sofa-framework/sofa/pull/2069 ); - [SofaGuiQt] Fix Export Graph option [#1785]( https://github.com/sofa-framework/sofa/pull/1785 ); - [SofaGuiQt] Fix RealGUI: QDesktopWidget header missing for Qt < 5.11 [#1904]( https://github.com/sofa-framework/sofa/pull/1904 ); - [SofaGuiQt] Fix compat file SofaGuiQt.h [#2044]( https://github.com/sofa-framework/sofa/pull/2044 ); - [SofaGuiQt] Fix compilation [#1889]( https://github.com/sofa-framework/sofa/pull/1889 ); - [SofaGuiQt] Fix compilation when SOFA_DUMP_VISITOR is enabled [#1914]( https://github.com/sofa-framework/sofa/pull/1914 ); - [SofaGuiQt] Use opaque API instead [#1918]( https://github.com/sofa-framework/sofa/pull/1918 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test [#1823]( https://github.com/sofa-framework/sofa/pull/1823 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test (2) [#1825]( https://github.com/sofa-framework/sofa/pull/1825 ); - **[SofaHelper]** Fix AdvandedTimer test with end() [#1781]( https://github.com/sofa-framework/sofa/pull/1781 ); - **[SofaHelper]** Fix compilation in kdtree [#1942]( https://github.com/sofa-framework/sofa/pull/1942 ); - **[SofaHelper]** Fix out of bounds error [#1868]( https://github.com/sofa-framework/sofa/pull/1868 ); - **[SofaHelper]** Fix the use of Read/WriteAccessorVector that is too permisive (in accessor.h) [#1900]( https://github.com/sofa-framework/sofa/pull/1900 ); - **[SofaHelper][SofaBoundaryCondition]** Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - **[SofaKernel]** Fix SimpleApi forward declaration of BaseObject and relocatable of Sofa.GL [#1760]( https://github.com/sofa-framework/sofa/pull/1760 ); - **[SofaKernel]** Removing double load() in Loaders [#2094]( https://github.com/sofa-framework/sofa/pull/2094 ); - [SofaLoader] Fix MeshObjLoader material parsing by using the proper locale. [#2200]( https://github.com/sofa-framework/sofa/pull/2200 ); - [Sofa",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:187775,test,test,187775,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,"/sofa-framework/sofa/pull/2526 ); - [image] fix shadow variable [#2515]( https://github.com/sofa-framework/sofa/pull/2515 ); - [image] fix shadow variables [#2528]( https://github.com/sofa-framework/sofa/pull/2528 ); - [SofaCUDA] Fix broken visuals in examples [#2447]( https://github.com/sofa-framework/sofa/pull/2447 ); - [SofaCUDA] Fix compilation [#2446]( https://github.com/sofa-framework/sofa/pull/2446 ); - [SofaCUDA] Fix static variable definition for double-precision [#2440]( https://github.com/sofa-framework/sofa/pull/2440 ); - [SofaCUDA] Redundant namespace [#2538]( https://github.com/sofa-framework/sofa/pull/2538 ); - [SofaGuiGlut] FIX compilation for v21.06 [#2274]( https://github.com/sofa-framework/sofa/pull/2274 ); - [SofaGuiGlut] Fix compilation for v21.12 [#2539]( https://github.com/sofa-framework/sofa/pull/2539 ). **Examples / Scenes**; - [examples] FIX duplicated scene in regression-tests [#2251]( https://github.com/sofa-framework/sofa/pull/2251 ); - [examples] FIX duplicated scene in regression-tests (2) [#2252]( https://github.com/sofa-framework/sofa/pull/2252 ). **Scripts / Tools**. ### Cleanings. **Architecture**; - [CMake] Remove option SOFA_ENABLE_SOFT_DEPS_TO_SOFAPYTHON [#2533]( https://github.com/sofa-framework/sofa/pull/2533 ); - [GitHub] Improve ""bug report"" issue template [#2454]( https://github.com/sofa-framework/sofa/pull/2454 ). **Modules**; - [All] Clean warnings [#1549]( https://github.com/sofa-framework/sofa/pull/1549 ); - [All] Remove several TopologyDataHandler and headers inclusion in components [#2162]( https://github.com/sofa-framework/sofa/pull/2162 ); - [All] Remove warnings [#2378]( https://github.com/sofa-framework/sofa/pull/2378 ); - [All] Update codebase to compile w/o Sofa.Compat for v21.12 [#2525]( https://github.com/sofa-framework/sofa/pull/2525 ); - [All] Update lifecycle (macros, etc) for v21.12 [#2524]( https://github.com/sofa-framework/sofa/pull/2524 ); - [All] Clean unreferenced files [#2333]( https://github.com/sofa",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:153947,test,tests,153947,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"/sofa/pull/2310 ); - [SofaEigen2Solver] Description + timers + support of any BaseMatrix [#2336]( https://github.com/sofa-framework/sofa/pull/2336 ); - [SofaExporter] Rename OBJExporter into VisualModelOBJExporter [#2505]( https://github.com/sofa-framework/sofa/pull/2505 ); - [SofaGeneralAnimationLoop, Sofa.SimulationCore] Extract MechanicalAccumulateJacobian [#2481]( https://github.com/sofa-framework/sofa/pull/2481 ); - [SofaGeneralAnimationLoop] MechanicalMatrixMapper timers [#2362]( https://github.com/sofa-framework/sofa/pull/2362 ); - [SofaGeneralDeformable] Remove TopologyHandler in FEM to use TopologyData callbacks (part 2) [#2388]( https://github.com/sofa-framework/sofa/pull/2388 ); - [SofaGeneralDeformable] Remove TopologyHandler in FEM to use TopologyData callbacks (part 3) [#2389]( https://github.com/sofa-framework/sofa/pull/2389 ); - [SofaGeneralEngine] Cleaning of MeshBoundaryROI [#2319]( https://github.com/sofa-framework/sofa/pull/2319 ); - [SofaGeneralSimpleFem] Add comments and tests for TriangularFEMForceFieldOptim [#2284]( https://github.com/sofa-framework/sofa/pull/2284 ); - [SofaGeneralSimpleFem] Remove TopologyHandler in FEM to use TopologyData callbacks (part 1) [#2384]( https://github.com/sofa-framework/sofa/pull/2384 ); - [SofaGuiGlut] Unreachable break [#2405]( https://github.com/sofa-framework/sofa/pull/2405 ); - [SofaGuiQt] Get rid of magic numbers when centering the window [#2466]( https://github.com/sofa-framework/sofa/pull/2466 ); - [SofaHelper] replace infinite loop Update PipeProcess.cpp [#2477]( https://github.com/sofa-framework/sofa/pull/2477 ); - [SofaHelper] Remove boost::thread dependency [#2264]( https://github.com/sofa-framework/sofa/pull/2264 ); - [SofaHelper_test] Remove temporary file in FileMonitor_test [#2537]( https://github.com/sofa-framework/sofa/pull/2537 ); - [SofaKernel] change data content copy on write condition [#2285]( https://github.com/sofa-framework/sofa/pull/2285 ); - [SofaMiscFEM] Small optimizations on Trian",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:160114,test,tests,160114,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"/sofa/pull/258 ); - [CI]; - improvement of all test scripts. **Plugins / Projects**; - [GUI]; - mouse events are now transmitted to the scene with QtGLViewer [#132]( https://github.com/sofa-framework/sofa/pull/132 ); - [SceneCreator]; - Cosmetic changes and remove un-needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pull/202 ); - change the way createObject() handle its arguments to simplify scene writing + batch of tests [#286]( https://github.com/sofa-framework/sofa/pull/286 ); - [SofaTest]; - add Backtrace::autodump to all tests to ease debugging [#191]( https://github.com/sofa-framework/sofa/pull/191 ); - add automatic tests for updateForceMask [#209]( https://github.com/sofa-framework/sofa/pull/209 ); - add tests on PluginManager [#240]( https://github.com/sofa-framework/sofa/pull/240 ); - TestMessageHandler : new and robust implementation to connect msg_* message to test failure [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - update to use the new TestMessageHandler where msg_error generates test failures [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - add tests for TestMessageHandler [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - [SofaCUDA]; - FIX NVCC flags for debug build on Windows [#300]( https://github.com/sofa-framework/sofa/pull/300 ). ### Bug Fixes. **Modules**; - Warnings have been fixed [#229]( https://github.com/sofa-framework/sofa/pull/229 ); - [All]; - check that SofaPython is found before lauching the cmake sofa_set_python_directory command [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - use the cmake install DIRECTORY instead of FILES to preserve the files hierarchy when installing [#138]( https://github.com/sofa-framewor",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:330315,test,tests,330315,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"/sofa/pull/3601) ; - [SofaCUDA] Reorganize following SOFA structure (2/n) [#3605](https://github.com/sofa-framework/sofa/pull/3605) ; - [SofaCUDA] Reorganize following SOFA structure (3/n) [#3660](https://github.com/sofa-framework/sofa/pull/3660) ; - [SofaCUDA] Reorganize following SOFA structure (4/n) [#3701](https://github.com/sofa-framework/sofa/pull/3701) ; - [SofaCUDA] Reorganize following SOFA structure (5/n) [#3758](https://github.com/sofa-framework/sofa/pull/3758) ; - [SofaCUDA] Reorganize following SOFA structure (6/n) [#3760](https://github.com/sofa-framework/sofa/pull/3760) ; - [SofaCUDA] Reorganize following SOFA structure (7/n) [#3785](https://github.com/sofa-framework/sofa/pull/3785) ; - [SofaCUDA] Reorganize following SOFA structure (8/n) [#3795](https://github.com/sofa-framework/sofa/pull/3795) . ### Tests. **Modules**; - [Solver.Direct] Unit test on topological changes leading to empty system [#3501](https://github.com/sofa-framework/sofa/pull/3501) ; - [LinearAlgebra] Unit tests for RotationMatrix [#3585](https://github.com/sofa-framework/sofa/pull/3585); - [LinearAlgebra] Fix matrix unit test [#3832](https://github.com/sofa-framework/sofa/pull/3832) . **Examples / Scenes**; - [examples] Introduce example and tests for SquareMapping [#3768](https://github.com/sofa-framework/sofa/pull/3768) . ## [v22.12.00]( https://github.com/sofa-framework/sofa/tree/v22.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v22.06..v22.12 ). ### Highlighted contributions. - [Core, Helper] Add spelling suggestion in ObjectFactory [#3042](https://github.com/sofa-framework/sofa/pull/3042) ; - [Constraint.Lagrangian] Add the NNCG as NLCP solver in GenericCS [#3053](https://github.com/sofa-framework/sofa/pull/3053) ; - [CMake] Introduce CMake presets [#3305](https://github.com/sofa-framework/sofa/pull/3305) ; - [all] Type conversion cleaning (+ user-defined literal) [#3314](https://github.com/sofa-framework/sofa/pull/3314) ; - [Core] Convert warning to err",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:68518,test,tests,68518,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"107 ); - [CollisionOBBCapsule] Fix return type to support rigid types [#3075]( https://github.com/sofa-framework/sofa/pull/3075 ); - [SofaCUDA] Add matrix3 transpose method on device [#2675]( https://github.com/sofa-framework/sofa/pull/2675 ); - [SofaCUDA] Fail gracefully if no cuda device found [#3087]( https://github.com/sofa-framework/sofa/pull/3087 ); - [SofaCUDA] Fix compilation for SOFA_GPU_CUDA_DOUBLE [#2863]( https://github.com/sofa-framework/sofa/pull/2863 ); - [SofaCUDA] Fix some namespace, headers includes and decl exports [#3003]( https://github.com/sofa-framework/sofa/pull/3003 ); - [SofaCUDA] Fix symbol definition at run time and compilation error [#2634]( https://github.com/sofa-framework/sofa/pull/2634 ); - [SofaCUDA] Ignore CudaTLED-related scene on the CI [#2893]( https://github.com/sofa-framework/sofa/pull/2893 ); - [SofaCUDA] Restore CudaHexahedronFEMForceField [#2535]( https://github.com/sofa-framework/sofa/pull/2535 ); - [SofaCUDA] Rework and move benchmark scenes for HexahedronFEMForceField and TetrahedronFEMForceField [#2561]( https://github.com/sofa-framework/sofa/pull/2561 ); - [SofaCUDA] fix HexahedronFEMForceField double compilation [#3081]( https://github.com/sofa-framework/sofa/pull/3081 ); - [SofaCUDA] update .scene-tests files to fix tests on dashboard [#2616]( https://github.com/sofa-framework/sofa/pull/2616 ); - [SofaCUDA] FIX linking error : needed the code of the destructor [#2708]( https://github.com/sofa-framework/sofa/pull/2708 ); - [SofaCUDA] Forward declaration in wrong namespace [#2923]( https://github.com/sofa-framework/sofa/pull/2923 ); - [SofaMatrix] Move CI setting to the plugin folder [#2579]( https://github.com/sofa-framework/sofa/pull/2579 ); - [SofaNewMat] Fix compilation [#2829]( https://github.com/sofa-framework/sofa/pull/2829 ); - [SofaSphFluid] Fix ParticleSource topologicalChanges use new callbacks mechanism [#2868]( https://github.com/sofa-framework/sofa/pull/2868 ); - [image] fix shadow variable [#2606]( https",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:116014,benchmark,benchmark,116014,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['benchmark'],['benchmark']
Testability,"12 ); - [All] Fix warnings [#2196]( https://github.com/sofa-framework/sofa/pull/2196 ); - [All] Fix warnings [#2097]( https://github.com/sofa-framework/sofa/pull/2097 ); - [All] Refactor Read/Write Accessor. [#1807]( https://github.com/sofa-framework/sofa/pull/1807 ); - [All] Refactor vector & vector_device [#1799]( https://github.com/sofa-framework/sofa/pull/1799 ); - [All] Remove last includes of SofaSimulationTree [#1812]( https://github.com/sofa-framework/sofa/pull/1812 ); - [All] Remove un-needed includes. [#1750]( https://github.com/sofa-framework/sofa/pull/1750 ); - [All] Remove unused includes [#1960]( https://github.com/sofa-framework/sofa/pull/1960 ); - [All] Remove warning: unused variable [#1787]( https://github.com/sofa-framework/sofa/pull/1787 ); - [All] Update code to use sofa::InvalidID instead of topology::InvalidID [#2116]( https://github.com/sofa-framework/sofa/pull/2116 ); - [All] use =deleted for deprecation [#1793]( https://github.com/sofa-framework/sofa/pull/1793 ); - [All] Convert tests to Sofa.Testing [#2188]( https://github.com/sofa-framework/sofa/pull/2188 ); - [All] Remove useless inclusions of MechanicalObject.h [#2015]( https://github.com/sofa-framework/sofa/pull/2015 ); - [All] Remove deprecated calls and warnings [#2210]( https://github.com/sofa-framework/sofa/pull/2210 ); - [All] Remove use of compatibility layer [#2179]( https://github.com/sofa-framework/sofa/pull/2179 ); - **[Sofa.Core]** Move eq,peq utilities functions to a standalone file [#2137]( https://github.com/sofa-framework/sofa/pull/2137 ); - **[Sofa.GL]** Relocate the module (again) + clarify module vs plugin definitions [#1941]( https://github.com/sofa-framework/sofa/pull/1941 ); - **[Sofa.GL]** Remove warnings from deprecated headers [#2045]( https://github.com/sofa-framework/sofa/pull/2045 ); - **[Sofa.GL]** static variable belongs to the class [#1951]( https://github.com/sofa-framework/sofa/pull/1951 ); - **[Sofa.Topology]** remove unnecessary pragma [#1969]( https://",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:197315,test,tests,197315,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,129 ); - [SofaGeneralEngine] Added Rigid to Euler orientation export [#1141]( https://github.com/sofa-framework/sofa/pull/1141 ); - [SofaHaptics] Add mutex and option to lock the ForceFeedback computation [#1157]( https://github.com/sofa-framework/sofa/pull/1157 ); - **[SofaKernel]** ADD: DataTypeInfo<vector<string>> & improved doc [#1113]( https://github.com/sofa-framework/sofa/pull/1113 ); - **[SofaKernel]** Add a strict option to the BoxROI to prevent partially inside element to be in the box. [#1127]( https://github.com/sofa-framework/sofa/pull/1127 ); - **[SofaKernel]** Add fixed_array_algorithm + RGBAColor::lighten [#1172]( https://github.com/sofa-framework/sofa/pull/1172 ); - **[SofaKernel]** Add new events to detect Initialization & Simulation start. [#1173]( https://github.com/sofa-framework/sofa/pull/1173 ); - **[SofaKernel]** Add option in StiffSpringFF to track list of input springs [#1093]( https://github.com/sofa-framework/sofa/pull/1093 ); - **[SofaKernel]** Change several AdvancedTimer logs for a better tracking [#1094]( https://github.com/sofa-framework/sofa/pull/1094 ); - **[SofaKernel]** Consistent SofaFramework modules [#1200]( https://github.com/sofa-framework/sofa/pull/1200 ); - **[SofaKernel]** Make componentState a real data field [#1168]( https://github.com/sofa-framework/sofa/pull/1168 ); - [SofaMiscForceField] Use doUpdateInternal API in MeshMatrixMass [#1151]( https://github.com/sofa-framework/sofa/pull/1151 ); - [SofaQtQuick] Pass extra command-line arguments for python scenes in a more high-level function call [#992]( https://github.com/sofa-framework/sofa/pull/992 ); - [SofaSphFluid] Add sprite-based point render [#1194]( https://github.com/sofa-framework/sofa/pull/1194 ); - [SofaSphFluid] Update rendering & other [#1215]( https://github.com/sofa-framework/sofa/pull/1215 ). **Plugins / Projects**; - [runSofa] Fix DataWidget display Speicherleck and long loading [#1181]( https://github.com/sofa-framework/sofa/pull/1181 ). **Examples / S,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:246991,log,logs,246991,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['logs']
Testability,"26](https://github.com/sofa-framework/sofa/pull/3526) ; - [all] Update totalmass to totalMass [#3622](https://github.com/sofa-framework/sofa/pull/3622) . **Scripts / Tools**; - [CI, Scenes] Restore custom parameters for the scene-tests [#3674](https://github.com/sofa-framework/sofa/pull/3674) . ### Cleaning. **Architecture**; - [all] Lifecycle v22.06 [#3535](https://github.com/sofa-framework/sofa/pull/3535) ; - [Type] Quat: small optimization for axisToQuat() [#3559](https://github.com/sofa-framework/sofa/pull/3559) ; - [Config] Remove unused SOFA_WITH_THREADING option [#3565](https://github.com/sofa-framework/sofa/pull/3565) ; - [Project] Start v23.06 dev phase [#3573](https://github.com/sofa-framework/sofa/pull/3573) ; - [Cmake] Update warning replacement message for deprecated macro sofa_add_XX [#3611](https://github.com/sofa-framework/sofa/pull/3611) ; - [Sofa] Remove warnings [#3627](https://github.com/sofa-framework/sofa/pull/3627) ; - [Sofa.framework] Compile and run tests when SReal is float [#3628](https://github.com/sofa-framework/sofa/pull/3628) ; - [Type] Fix massive warning due to Mat.h [#3633](https://github.com/sofa-framework/sofa/pull/3633) ; - [Core] TLink: Fix warnings about comparisons between unnamed enums [#3714](https://github.com/sofa-framework/sofa/pull/3714) ; - [Helper] Deprecate constructor of OptionsGroup [#3741](https://github.com/sofa-framework/sofa/pull/3741) ; - [Config] Remove suspicious Eigen macro preventing vectorization [#3780](https://github.com/sofa-framework/sofa/pull/3780) . **Modules**; - [StateContainer] Avoid code duplication in MechanicalObject [#3541](https://github.com/sofa-framework/sofa/pull/3541) ; - [FEM.Elastic] Fix unit tests warnings [#3545](https://github.com/sofa-framework/sofa/pull/3545) ; - [GUI] GUI libraries as plugins [#3550](https://github.com/sofa-framework/sofa/pull/3550) ; - [LinearAlgebra, LinearSolver.Direct] make getSubMatrixDim() compile-time constant [#3556](https://github.com/sofa-framework/sofa/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:61847,test,tests,61847,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,3 ); - **[SofaKernel]** Set read-only all data defined by the file loaded [#1660]( https://github.com/sofa-framework/sofa/pull/1660 ); - [SofaQtGui] Restore GraphWidget for Momentum and Energy using QtCharts instead of Qwt [#1508]( https://github.com/sofa-framework/sofa/pull/1508 ). **Plugins / Projects**; - [Compliant] Add WinchMultiMapping and ContactMultiMapping [#1557]( https://github.com/sofa-framework/sofa/pull/1557 ). ### Bug Fixes; **Architecture**; - [CMake] FIX non-existent target with sofa_add_plugin [#1584]( https://github.com/sofa-framework/sofa/pull/1584 ); - [CMake] Fix Cmake configure step with SOFA_WITH_DEPRECATED_COMPONENTS [#1452]( https://github.com/sofa-framework/sofa/pull/1452 ). **Extlibs**; - [extlibs/gtest] Fix the broken sofa_create_package_with_targets in gtest [#1457]( https://github.com/sofa-framework/sofa/pull/1457 ). **Modules**; - [All] issofa_bugfix: cleans and fixes [#218]( https://github.com/sofa-framework/sofa/pull/218 ); - [SofaBaseLinearSolver] Fix logging info with SPARSEMATRIX_VERBOSE [#1715]( https://github.com/sofa-framework/sofa/pull/1715 ); - [SofaBaseMechanics] Use d_showColor for indices instead of arbitrary white [#1511]( https://github.com/sofa-framework/sofa/pull/1511 ); - [SofaBaseMechanics] 🐛 FIX draw function in UniformMass [#1480]( https://github.com/sofa-framework/sofa/pull/1480 ); - [SofaCarving] Fix method doCarve should be called at AnimateEndEvent [#1532]( https://github.com/sofa-framework/sofa/pull/1532 ); - **[SofaCore]** FIX const correctness in DataTracker [#1488]( https://github.com/sofa-framework/sofa/pull/1488 ); - **[SofaCore]** FIX simu unload crash caused by missing checks on slaves ptrs [#1445]( https://github.com/sofa-framework/sofa/pull/1445 ); - **[SofaFramework]** Fix deprecated_as_error macro for MSVC [#1658]( https://github.com/sofa-framework/sofa/pull/1658 ); - [SofaGUI] Fix Cmake files for out-of-tree compilation [#1570]( https://github.com/sofa-framework/sofa/pull/1570 ); - [SofaGeneralAni,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:219962,log,logging,219962,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['logging']
Testability,"3660) ; - [SofaCUDA] Reorganize following SOFA structure (4/n) [#3701](https://github.com/sofa-framework/sofa/pull/3701) ; - [SofaCUDA] Reorganize following SOFA structure (5/n) [#3758](https://github.com/sofa-framework/sofa/pull/3758) ; - [SofaCUDA] Reorganize following SOFA structure (6/n) [#3760](https://github.com/sofa-framework/sofa/pull/3760) ; - [SofaCUDA] Reorganize following SOFA structure (7/n) [#3785](https://github.com/sofa-framework/sofa/pull/3785) ; - [SofaCUDA] Reorganize following SOFA structure (8/n) [#3795](https://github.com/sofa-framework/sofa/pull/3795) . ### Tests. **Modules**; - [Solver.Direct] Unit test on topological changes leading to empty system [#3501](https://github.com/sofa-framework/sofa/pull/3501) ; - [LinearAlgebra] Unit tests for RotationMatrix [#3585](https://github.com/sofa-framework/sofa/pull/3585); - [LinearAlgebra] Fix matrix unit test [#3832](https://github.com/sofa-framework/sofa/pull/3832) . **Examples / Scenes**; - [examples] Introduce example and tests for SquareMapping [#3768](https://github.com/sofa-framework/sofa/pull/3768) . ## [v22.12.00]( https://github.com/sofa-framework/sofa/tree/v22.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v22.06..v22.12 ). ### Highlighted contributions. - [Core, Helper] Add spelling suggestion in ObjectFactory [#3042](https://github.com/sofa-framework/sofa/pull/3042) ; - [Constraint.Lagrangian] Add the NNCG as NLCP solver in GenericCS [#3053](https://github.com/sofa-framework/sofa/pull/3053) ; - [CMake] Introduce CMake presets [#3305](https://github.com/sofa-framework/sofa/pull/3305) ; - [all] Type conversion cleaning (+ user-defined literal) [#3314](https://github.com/sofa-framework/sofa/pull/3314) ; - [Core] Convert warning to error in object factory [#3404](https://github.com/sofa-framework/sofa/pull/3404) . ### Breaking. **Architecture**; - [Core] Make some functions non-virtual [#3242](https://github.com/sofa-framework/sofa/pull/3242) ; - [Core] Add some const qua",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:68759,test,tests,68759,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,4 ); - Refactor SofaTest to cut dependencies [#471]( https://github.com/sofa-framework/sofa/pull/471 ); - Modularizing config.h [#475]( https://github.com/sofa-framework/sofa/pull/475 ); - EDIT: use PluginRepository instead of Utils::getPluginDirectory [#518]( https://github.com/sofa-framework/sofa/pull/518 ); - [SofaBaseLinearSolver]; - Add comments in the CGLinearSolver [#469]( https://github.com/sofa-framework/sofa/pull/469 ); - [SofaBaseVisual]; - Clean API message [#503]( https://github.com/sofa-framework/sofa/pull/503 ); - [SofaDefaultType]; - remove warning generated by MapMapSparseMatrixEigenUtils [#485]( https://github.com/sofa-framework/sofa/pull/485 ); - [SofaHelper]; - mute extlibs warnings [#397]( https://github.com/sofa-framework/sofa/pull/397 ); - FileMonitor_windows compilation [#448]( https://github.com/sofa-framework/sofa/pull/448 ); - Clean API message [#503]( https://github.com/sofa-framework/sofa/pull/503 ). **Other modules**; - [SofaGeneralEngine]; - add test and minor cleaning for IndexValueMapper [#319]( https://github.com/sofa-framework/sofa/pull/319 ); - [SofaGeneralObjectInteraction]; - Remove stiffness multiplicator in SpringForceField [#290]( https://github.com/sofa-framework/sofa/pull/290 ); - [SofaValidation]; - move code to set default folder for monitor to init function [#500]( https://github.com/sofa-framework/sofa/pull/500 ). **Plugins / Projects**; - [All]; - FIX: compilation warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - [CGALPlugin]; - Fix warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - [image]; - Fix warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - [Registration]; - Remove deprecated scene [#331]( https://github.com/sofa-framework/sofa/pull/331 ); - [SofaPython]; - General cleaning [#304]( https://github.com/sofa-framework/sofa/pull/304 ); - Fix warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - print cleaning + SofaPython quaternion dot product,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:322664,test,test,322664,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,4) ; - [Mapping.Nonlinear] Fix matrix assembly in RigidMapping [#3803](https://github.com/sofa-framework/sofa/pull/3803) ; - [Visual] VisualModelImpl: Fix updateVisual() [#3815](https://github.com/sofa-framework/sofa/pull/3815) ; - [LinearSolver.Iterative] CMake: Fix package configuration [#3840](https://github.com/sofa-framework/sofa/pull/3840) ; - [Rendering3D] OglModel: Revert back to glBufferSubData [#3841](https://github.com/sofa-framework/sofa/pull/3841) ; - [SolidMechanics.Spring] CMake: Fix package configuration [#3846](https://github.com/sofa-framework/sofa/pull/3846) ; - [Spring] Remove unused dependencies [#3848](https://github.com/sofa-framework/sofa/pull/3848) ; - [FEM.Linear] FIX & Minor refactor of buildStiffnessMatrix in TriangleFEMForceField [#3989](https://github.com/sofa-framework/sofa/pull/3989). **Plugins / Projects**; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid2D [#3561](https://github.com/sofa-framework/sofa/pull/3561) ; - [MultiThreading] ParallelBruteForceBroadPhase: Fix assertion error [#3574](https://github.com/sofa-framework/sofa/pull/3574) ; - [image] Fix Sofa.GUI dependency [#3591](https://github.com/sofa-framework/sofa/pull/3591) ; - [SofaCUDA] Missing support for double precision floating-points [#3603](https://github.com/sofa-framework/sofa/pull/3603) ; - [SofaPhysicsAPI] Fix compilation by replacing use of SofaGUI by sofa::GUI::common [#3612](https://github.com/sofa-framework/sofa/pull/3612) ; - [SofaCUDA] No longer use deprecated texture references in TetraTLED [#3650](https://github.com/sofa-framework/sofa/pull/3650) ; - [MultiThreading] Empty string instead of null pointer in DataExchange [#3686](https://github.com/sofa-framework/sofa/pull/3686) ; - [Geomagic] Fix potential crash at exit when device has not been init [#3698](https://github.com/sofa-framework/sofa/pull/3698) ; - [SofaCUDA] Fix includes pointing to compatibility layer [#3727](https://github.com/sofa-framework/sofa/pull/3727) ; - [plugins] ArticulatedS,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:59698,assert,assertion,59698,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['assert'],['assertion']
Testability,4); - [Constraint] Rename Data [#4696](https://github.com/sofa-framework/sofa/pull/4696); - [all] Rename depreciation macros in config.h.in for unique module id… [#4755](https://github.com/sofa-framework/sofa/pull/4755); - [examples] Rename FixedConstraint example [#4764](https://github.com/sofa-framework/sofa/pull/4764). ### Others. - [Helper] PluginManager: testing loading a plugin with a dependency on an other plugin [#4464](https://github.com/sofa-framework/sofa/pull/4464); - [Simulation] Tests: introduce multiple parallel simulations [#4580](https://github.com/sofa-framework/sofa/pull/4580); - [Simulation.Core] Remove useless and annoying timers [#4631](https://github.com/sofa-framework/sofa/pull/4631); - [image] Fix module name [#4720](https://github.com/sofa-framework/sofa/pull/4720); - [tools] Add metis relocation in post install fixup [#4767](https://github.com/sofa-framework/sofa/pull/4767). ## [v23.12.00]( https://github.com/sofa-framework/sofa/tree/v23.12.00 ). [Full log](https://github.com/sofa-framework/sofa/compare/v23.06..v23.12). ### Highlighted contributions; - [Mass] Remove DiagonalMass and replace with MeshMatrixMass (with lumping) [#3001](https://github.com/sofa-framework/sofa/pull/3001); - [LinearAlgebra] Pull Insimo's CompressedRowSparseMatrix into the main branch [#3515](https://github.com/sofa-framework/sofa/pull/3515); - [plugins] Add fetchable SoftRobots [#3882](https://github.com/sofa-framework/sofa/pull/3882); - [Sofa.Simulation] First steps to remove the singleton Simulation [#3889](https://github.com/sofa-framework/sofa/pull/3889); - [plugins] ADD external collisions plugins [#3890](https://github.com/sofa-framework/sofa/pull/3890); - [LinearAlgebra] Implement CompressedRowSparseMatrixConstraint [#3894](https://github.com/sofa-framework/sofa/pull/3894); - [Simulation.Core] Refactor DefaultAnimationLoop + multithreading [#3959](https://github.com/sofa-framework/sofa/pull/3959); - [LinearSolver.Direct] Parallelization of H A^-1 H^T in Spa,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:21153,log,log,21153,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,"418) ; - [FEM.Elastic] Speedup hexa drawing in force field [#3420](https://github.com/sofa-framework/sofa/pull/3420) ; - [Visual] Introduce TrailRenderer [#3471](https://github.com/sofa-framework/sofa/pull/3471) ; - [Solver.Direct] Unit tests on empty system [#3500](https://github.com/sofa-framework/sofa/pull/3500) ; - [MechanicalLoad] Move getValue call out of the loops [#3503](https://github.com/sofa-framework/sofa/pull/3503) . **Plugins / Projects**; - [SofaCUDA] Add ConstraintCorrection instantiation in CudaVec3f/CudaVec3f1 [#3004](https://github.com/sofa-framework/sofa/pull/3004) ; - [SofaCUDA] Make CudaConstantForceField compatible with CudaRigid types [#3164](https://github.com/sofa-framework/sofa/pull/3164) ; - [GUI.performer] Add remove elements function for LineCollisionModel [#3239](https://github.com/sofa-framework/sofa/pull/3239) ; - [Regression] Test Eigen solvers scenes for regression [#3326](https://github.com/sofa-framework/sofa/pull/3326); - [Regression] Add HexahedronFEMForceFieldAndMass to regression tests [#3367](https://github.com/sofa-framework/sofa/pull/3367) ; - [SofaCarving] Update and add more tests in SofaCarving_test [#3407](https://github.com/sofa-framework/sofa/pull/3407) ; - [SofaCuda] Add method in CudaVector Accessor and CudaBilateralInteractionConstraint [#3460](https://github.com/sofa-framework/sofa/pull/3460) ; - [SofaPhysicsAPI] Add several methods using output parameters [#3520](https://github.com/sofa-framework/sofa/pull/3520) ; - [SofaPhysicsAPI] Add C bindings to access C++ api [#3539](https://github.com/sofa-framework/sofa/pull/3539) ; - [SofaPhysicsAPI] Add methods and C bindings to load SOFA ini file, plugins and messageHandler [#3540](https://github.com/sofa-framework/sofa/pull/3540) . ### Bug Fixes. **Architecture**; - [Config] Rename ide folder for libraries [#3214](https://github.com/sofa-framework/sofa/pull/3214) ; - [CMake] FIX parent modules library consistency [#3225](https://github.com/sofa-framework/sofa/pull/322",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:76193,test,tests,76193,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"4269](https://github.com/sofa-framework/sofa/pull/4269); - [all] Fix headeronly extlibs licenses [#4272](https://github.com/sofa-framework/sofa/pull/4272); - [all] Externalize cxxopts [#4273](https://github.com/sofa-framework/sofa/pull/4273); - [Topology.Mapping] SimpleTesselatedHexaTopologicalMapping: use correct type for Index [#4279](https://github.com/sofa-framework/sofa/pull/4279); - [GUI.Qt] Minor single-line cleaning [#4308](https://github.com/sofa-framework/sofa/pull/4308); - [Core] Minor clean of DefaultAnimationLoop [#4314](https://github.com/sofa-framework/sofa/pull/4314); - [Collections] Remove reference to non-existing SofaSimulation [#4320](https://github.com/sofa-framework/sofa/pull/4320); - [All] Changed default plugins [#4322](https://github.com/sofa-framework/sofa/pull/4322); - [ODESolver.Backward] Convert double to SReal in NewmarkImplicitSolver [#4341](https://github.com/sofa-framework/sofa/pull/4341); - [Sofa.Testing] Do not build Sofa.Testing if SOFA_BUILD_TESTS is OFF [#4459](https://github.com/sofa-framework/sofa/pull/4459); - [Simulation.Common] Fix downstream project compilation with tinyXML2 [#4506](https://github.com/sofa-framework/sofa/pull/4506). ### Refactoring; - [Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code [#3278](https://github.com/sofa-framework/sofa/pull/3278); - [all] Rename DefaultContactManager into CollisionResponse [#3891](https://github.com/sofa-framework/sofa/pull/3891); - [FEM.Elastic] Minor refactor of buildStiffnessMatrix in TetrahedronFEMForceField [#3983](https://github.com/sofa-framework/sofa/pull/3983); - [plugins] Remove PSL files, add ExternalProjectConfig and update CMakeLists [#4047](https://github.com/sofa-framework/sofa/pull/4047); - Revert ""[Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code"" [#4068](https://github.com/sofa-framework/sofa/pull/4068); - [MechanicalLoad] Implement buildStiffnessMatrix for TaitSurfacePressureForceField [#4",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:48106,Test,Testing,48106,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Testing']
Testability,"664]( https://github.com/sofa-framework/sofa/pull/664 ); - [CImgPlugin] Export CImg_CFLAGS [#595]( https://github.com/sofa-framework/sofa/pull/595 ); - [CImgPlugin] FIX CMakeLists install fail since pluginization [#609]( https://github.com/sofa-framework/sofa/pull/609 ); - [CImgPlugin] FIX malformed cflag append [#622]( https://github.com/sofa-framework/sofa/pull/622 ); - [HeadlessRecorder] Fix headless recorder stream definition [#666]( https://github.com/sofa-framework/sofa/pull/666 ); - [MultiThreading] FIX: add createSubelements param in MeshGmshLoader [#626]( https://github.com/sofa-framework/sofa/pull/626 ); - [runSofa] Fix compilation when SofaGuiQt is not activated [#599]( https://github.com/sofa-framework/sofa/pull/599 ); - [runSofa] ADD infinite iterations option to batch gui [#613]( https://github.com/sofa-framework/sofa/pull/613 ); - [runSofa] FIX missing resources [#758]( https://github.com/sofa-framework/sofa/pull/758 ); - [SofaDistanceGrid] ADD .scene-tests to ignore scene [#594]( https://github.com/sofa-framework/sofa/pull/594 ); - [SofaPython] FIX build for MacOS >10.13.0 [#614]( https://github.com/sofa-framework/sofa/pull/614 ). **Examples / Scenes**; - FIX collision of the fontain example [#612]( https://github.com/sofa-framework/sofa/pull/612 ); - FIX failing scenes on CI [#641]( https://github.com/sofa-framework/sofa/pull/641 ); - FIX missing RequiredPlugin [#628]( https://github.com/sofa-framework/sofa/pull/628 ). **Extlibs**; - [extlibs/gtest] Update gtest & clean the CMakeLists.txt [#604]( https://github.com/sofa-framework/sofa/pull/604 ). ### Cleanings. **Architecture**; - [CMake] Remove the option SOFA_GUI_INTERACTION and its associated codes/macro [#643]( https://github.com/sofa-framework/sofa/pull/643 ). **Modules**; - [All] CMake: Remove COMPONENTSET, keep DEPRECATED [#586]( https://github.com/sofa-framework/sofa/pull/586 ); - [All] CLEAN topology classes [#693]( https://github.com/sofa-framework/sofa/pull/693 ); - **[SofaHelper]** CLEAN ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:298902,test,tests,298902,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,84]( https://github.com/sofa-framework/sofa/pull/3084 ); - [Lagrangian.Correction] LinearSolverConstraintCorrection: Trivial optimisations for MSVC [#3135]( https://github.com/sofa-framework/sofa/pull/3135 ); - [Mass] Fix point topological changes for UniformMass [#2853]( https://github.com/sofa-framework/sofa/pull/2853 ); - [MeshGmsh]Fixed false error detection in MeshGmsh.cpp file [#3030]( https://github.com/sofa-framework/sofa/pull/3030 ); - [Preconditioner] Fix missing find_package() in the cmake.in [#2841]( https://github.com/sofa-framework/sofa/pull/2841 ); - [S.C.Engine] Remove previous engine files and fix some cmake.in [#2909]( https://github.com/sofa-framework/sofa/pull/2909 ); - [S.C.LinearSolver]fix bug in linearsolvers and preconditioners [#2883]( https://github.com/sofa-framework/sofa/pull/2883 ); - [S.C.Mapping] Fix assertion in BarycentricMapper [#2989]( https://github.com/sofa-framework/sofa/pull/2989 ); - [S.C.Topology.Container.Dynamic] Fix assert error in QuadSetTopologyContainer [#2990]( https://github.com/sofa-framework/sofa/pull/2990 ); - [SceneUtility] MakeDataAliasComponent: Remove alias in destructor [#2832]( https://github.com/sofa-framework/sofa/pull/2832 ); - [Sofa.Component.Diffusion][Sofa.Component.Mass] Fix diffusion [#2798]( https://github.com/sofa-framework/sofa/pull/2798 ); - [Sofa.Component.Engine] Change the default drawSize from 0.0 to 1.0 for ROIs. [#3045]( https://github.com/sofa-framework/sofa/pull/3045 ); - [Sofa.Component] Fix compilation when FLOATING_POINT is set to float [#2907]( https://github.com/sofa-framework/sofa/pull/2907 ); - [Sofa.Component] Put the initilization code in init() instead of the entrypoint initExternalPlugin() [#3112]( https://github.com/sofa-framework/sofa/pull/3112 ); - [Sofa.Core] Remove annoying 'unused' warning in StateAccessor [#2835]( https://github.com/sofa-framework/sofa/pull/2835 ); - [Sofa.DefaultType] Removes definition of GLdouble in SolidTypes [#3060]( https://github.com/sofa-framework,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:107882,assert,assert,107882,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['assert'],['assert']
Testability,"9]( https://github.com/sofa-framework/sofa/pull/2379 ); - [All] Update IDE directory for targets [#2239]( https://github.com/sofa-framework/sofa/pull/2239 ); - [SofaMiscForceField] Fix massDensity vector update when adding new elements in MeshMatrixMass [#2257]( https://github.com/sofa-framework/sofa/pull/2257 ); - [Sofa.Compat] Fix Matrixexpr alias [#2369]( https://github.com/sofa-framework/sofa/pull/2369 ); - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-framework/sofa/pull/2360 ); - [Sofa.Core] Fix diamond inheritance in PairInteractionConstraint [#2488]( https://github.com/sofa-framework/sofa/pull/2488 ); - [Sofa.DefaultType] Fix declaration of global variables [#2317]( https://github.com/sofa-framework/sofa/pull/2317 ); - [Sofa.GL] Set glew as mandatory [#2358]( https://github.com/sofa-framework/sofa/pull/2358 ); - [Sofa.Helper] Fix and micro-optimize AdvancedTimer [#2349]( https://github.com/sofa-framework/sofa/pull/2349 ); - [Sofa.Helper] More tests for NameDecoder + fix them [#2380]( https://github.com/sofa-framework/sofa/pull/2380 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framework/sofa/pull/2352 ); - [Sofa.Helper_test] ""fix"" wstring unittest [#2320]( https://github.com/sofa-framework/sofa/pull/2320 ); - [Sofa.LinearAlgebra] Fix assert in CompressedRowSparseMatrix [#2347]( https://github.com/sofa-framework/sofa/pull/2347 ); - [Sofa.LinearAlgebra] Fix installation (fwd.h) [#2337]( https://github.com/sofa-framework/sofa/pull/2337 ); - [Sofa.Type, Sofa.Topology] Fix testEdgeBuffer with clang (and add constexpr default constructors) [#2357]( https://github.com/sofa-framework/sofa/pull/2357 ); - [Sofa.Type] FIX createFromRotationVEctor, the inequality was wrong [#2332]( https://github.com/sofa-framework/sofa/pull/2332 ); - [Sofa.Type] Optimize constructor with params for sofa::type::vec [#2439]( https://github.com/sofa-framework/sofa/pull/2439 ); - [SofaBaseLinearSolv",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:145944,test,tests,145944,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,://github.com/sofa-framework/sofa/pull/1030 ); - **[SofaHelper]** FIX compilation on Visual Studio 2015 with QWT plugin [#935]( https://github.com/sofa-framework/sofa/pull/935 ); - **[SofaHelper]** FIX WinDepPack INSTALL_INTERFACE [#1042]( https://github.com/sofa-framework/sofa/pull/1042 ); - **[SofaHelper]** REMOVE PluginManager::m_searchPaths [#947]( https://github.com/sofa-framework/sofa/pull/947 ); - **[SofaKernel]** Clean & Fix TopologyChangeVisitor and StateChangeVisitor behavior [#880]( https://github.com/sofa-framework/sofa/pull/880 ); - **[SofaKernel]** Clean output data when doUpdate in BoxROI [#1056]( https://github.com/sofa-framework/sofa/pull/1056 ); - **[SofaKernel]** FIX deprecation message related to template types. [#939]( https://github.com/sofa-framework/sofa/pull/939 ); - **[SofaKernel]** FIX in TetrahedronFEMForceField & TetrahedronSetTopologyAlgorithm [#973]( https://github.com/sofa-framework/sofa/pull/973 ); - **[SofaKernel]** FIX operator>> in Mat.h and add corresponding test. [#993]( https://github.com/sofa-framework/sofa/pull/993 ); - **[SofaKernel]** FIX: A few fix to compile on Mac OSX Xcode 9 and Linux gcc 7.3.0 [#969]( https://github.com/sofa-framework/sofa/pull/969 ); - **[SofaKernel]** FIX: force name data to contain something [#1009]( https://github.com/sofa-framework/sofa/pull/1009 ); - **[SofaKernel]** Fix error in MapperHexahedron and MapperQuad barycentric coef computation [#1057]( https://github.com/sofa-framework/sofa/pull/1057 ); - **[SofaKernel]** Fix: remove unwanted AdvanceTimer::begin command [#1029]( https://github.com/sofa-framework/sofa/pull/1029 ); - **[SofaKernel]** Remove warnings [#968]( https://github.com/sofa-framework/sofa/pull/968 ); - **[SofaKernel]** several small fix [#953]( https://github.com/sofa-framework/sofa/pull/953 ); - [SofaLoader] Fix positions when handleSeams is activated in MeshObjLoader [#923]( https://github.com/sofa-framework/sofa/pull/923 ); - [SofaMeshCollision] Fix TriangleModel to handle top,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:267591,test,test,267591,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,://github.com/sofa-framework/sofa/pull/1464 ); - [SofaMacros] Handle COMPONENTS (needed by SofaPython3) [#1671]( https://github.com/sofa-framework/sofa/pull/1671 ). **Modules**; - [All] Replace last use of Qwt by QtCharts and remove internal library [#1512]( https://github.com/sofa-framework/sofa/pull/1512 ); - [SofaBaseCollision] Add option to use of normal orientation in triangle and self-colliding cube [#1559]( https://github.com/sofa-framework/sofa/pull/1559 ); - **[SofaCore]** Add virtual getPathName function in Base [#1455]( https://github.com/sofa-framework/sofa/pull/1455 ); - [SofaGeneralLoader] Add option for transform in SphereLoader to match other loaders API [#1495]( https://github.com/sofa-framework/sofa/pull/1495 ); - [SofaGeneralLoader] allow ReadState at init [#1654]( https://github.com/sofa-framework/sofa/pull/1654 ); - [SofaHaptics] Add multithread test on LCPForceFeedback component [#1581]( https://github.com/sofa-framework/sofa/pull/1581 ); - [SofaHaptics] Add simple tests on LCPForceFeedback component [#1576]( https://github.com/sofa-framework/sofa/pull/1576 ); - [SofaImplicitField] Add new ImplicitFields and getHessian to ScalarField [#1510]( https://github.com/sofa-framework/sofa/pull/1510 ); - **[SofaKernel]** ADD: add polynomial springs force fields [#1342]( https://github.com/sofa-framework/sofa/pull/1342 ); - **[SofaKernel]** Add DataLink object & PathResolver. [#1485]( https://github.com/sofa-framework/sofa/pull/1485 ); - **[SofaKernel]** Add setLinkedBase method in BaseLink [#1436]( https://github.com/sofa-framework/sofa/pull/1436 ); - **[SofaKernel]** Add whole program optimization (aka link-time optimization) for msvc [#1468]( https://github.com/sofa-framework/sofa/pull/1468 ); - **[SofaKernel]** Exposing Data in ContactListener. [#1678]( https://github.com/sofa-framework/sofa/pull/1678 ); - **[SofaKernel]** Filerepository gettemppath [#1383]( https://github.com/sofa-framework/sofa/pull/1383 ); - **[SofaKernel]** Set read-only all data,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:218009,test,tests,218009,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"::GUI::common [#3612](https://github.com/sofa-framework/sofa/pull/3612) ; - [SofaCUDA] No longer use deprecated texture references in TetraTLED [#3650](https://github.com/sofa-framework/sofa/pull/3650) ; - [MultiThreading] Empty string instead of null pointer in DataExchange [#3686](https://github.com/sofa-framework/sofa/pull/3686) ; - [Geomagic] Fix potential crash at exit when device has not been init [#3698](https://github.com/sofa-framework/sofa/pull/3698) ; - [SofaCUDA] Fix includes pointing to compatibility layer [#3727](https://github.com/sofa-framework/sofa/pull/3727) ; - [plugins] ArticulatedSystemMapping : adds size check & fixes typo [#3751](https://github.com/sofa-framework/sofa/pull/3751) . **Examples / Scenes**; - [All] Fix example scenes showing warnings or errors [#3526](https://github.com/sofa-framework/sofa/pull/3526) ; - [all] Update totalmass to totalMass [#3622](https://github.com/sofa-framework/sofa/pull/3622) . **Scripts / Tools**; - [CI, Scenes] Restore custom parameters for the scene-tests [#3674](https://github.com/sofa-framework/sofa/pull/3674) . ### Cleaning. **Architecture**; - [all] Lifecycle v22.06 [#3535](https://github.com/sofa-framework/sofa/pull/3535) ; - [Type] Quat: small optimization for axisToQuat() [#3559](https://github.com/sofa-framework/sofa/pull/3559) ; - [Config] Remove unused SOFA_WITH_THREADING option [#3565](https://github.com/sofa-framework/sofa/pull/3565) ; - [Project] Start v23.06 dev phase [#3573](https://github.com/sofa-framework/sofa/pull/3573) ; - [Cmake] Update warning replacement message for deprecated macro sofa_add_XX [#3611](https://github.com/sofa-framework/sofa/pull/3611) ; - [Sofa] Remove warnings [#3627](https://github.com/sofa-framework/sofa/pull/3627) ; - [Sofa.framework] Compile and run tests when SReal is float [#3628](https://github.com/sofa-framework/sofa/pull/3628) ; - [Type] Fix massive warning due to Mat.h [#3633](https://github.com/sofa-framework/sofa/pull/3633) ; - [Core] TLink: Fix warnings ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:61088,test,tests,61088,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"; ${SOFAVALIDATION_SRC}/DevMonitorManager.h; ${SOFAVALIDATION_SRC}/DevTensionMonitor.h; ${SOFAVALIDATION_SRC}/DevTensionMonitor.inl; ${SOFAVALIDATION_SRC}/EvalPointsDistance.h; ${SOFAVALIDATION_SRC}/EvalPointsDistance.inl; ${SOFAVALIDATION_SRC}/EvalSurfaceDistance.h; ${SOFAVALIDATION_SRC}/EvalSurfaceDistance.inl; ${SOFAVALIDATION_SRC}/ExtraMonitor.h; ${SOFAVALIDATION_SRC}/ExtraMonitor.inl; ${SOFAVALIDATION_SRC}/Monitor.h; ${SOFAVALIDATION_SRC}/Monitor.inl; ). set(SOURCE_FILES; ${SOFAVALIDATION_SRC}/initSofaValidation.cpp; ${SOFAVALIDATION_SRC}/DataController.cpp; ${SOFAVALIDATION_SRC}/DataMonitor.cpp; ${SOFAVALIDATION_SRC}/DevAngleCollisionMonitor.cpp; ${SOFAVALIDATION_SRC}/DevMonitorManager.cpp; ${SOFAVALIDATION_SRC}/DevTensionMonitor.cpp; ${SOFAVALIDATION_SRC}/EvalPointsDistance.cpp; ${SOFAVALIDATION_SRC}/EvalSurfaceDistance.cpp; ${SOFAVALIDATION_SRC}/ExtraMonitor.cpp; ${SOFAVALIDATION_SRC}/Monitor.cpp; ). find_package(Sofa.Simulation.Common REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Common Sofa.Component.Collision). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Playback REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Playback). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""plugins""; ). ## Tests; cmake_dependent_option(SOFAVALIDATION_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFAVALIDATION_BUILD_TESTS); enable_testing(); add_subdirectory(SofaValidation_test); endif(). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaValidation/CMakeLists.txt:2189,Test,Tests,2189,applications/collections/deprecated/modules/SofaValidation/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaValidation/CMakeLists.txt,2,"['Test', 'test']","['Tests', 'tests']"
Testability,"; **********************************************; * Assimp plugin.txt *; **********************************************. AUTHOR :; - epernod (Erik Pernod); ; CONTACT:; - erik.pernod@gmail.com . LICENSE :; - Assimp is released as Open Source under the terms of a 3-clause BSD license.; - License of this Plugin: LGPL. OTHER COMMENTS :. Open Asset Import Library (short name: Assimp) is a portable Open Source library to import various well-known 3D model formats in a uniform manner. ; The most recent version also knows how to export 3D files and is therefore suitable as a general-purpose 3D model converter. ; See the feature list. - Library web page: http://www.assimp.org/; - Source code on github: https://github.com/assimp/assimp; - Release version: https://github.com/assimp/assimp/releases; - Library version tested: 4.1.0. Important: For the moment only single Mesh is handle. That is to say, if a multi mesh is loaded, only one Sofa Mesh will be created by merging all sub meshes.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/README_AssimpPlugin.txt:817,test,tested,817,applications/plugins/SofaAssimp/README_AssimpPlugin.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/README_AssimpPlugin.txt,1,['test'],['tested']
Testability,"; - [GUI.Qt] Redirect Qt messages to the SOFA output stream [#3101]( https://github.com/sofa-framework/sofa/pull/3101 ); - [GUI.Qt] Save scene graph lock state persistently [#3119]( https://github.com/sofa-framework/sofa/pull/3119 ) ; - [GUI] Completing text description for mouse interaction with springs [#3122]( https://github.com/sofa-framework/sofa/pull/3122 ); - [HyperElastic] Add draw method to StandardTetrahedralFEMForceField [#2838]( https://github.com/sofa-framework/sofa/pull/2838 ); - [HyperElastic] Introduce example scene for StandardTetrahedralFEMForceField [#2857]( https://github.com/sofa-framework/sofa/pull/2857 ); - [LinearSolver.Direct] LU solver can be templated to CRSMat3x3 [#2862]( https://github.com/sofa-framework/sofa/pull/2862 ); - [LinearSolver.Direct] Unit tests around SparseLDLSolver [#3050]( https://github.com/sofa-framework/sofa/pull/3050 ); - [LinearSolver] Introduce Eigen solvers [#2926]( https://github.com/sofa-framework/sofa/pull/2926 ); - [Regression] Test linear solvers for regression [#2776]( https://github.com/sofa-framework/sofa/pull/2776 ); - [SceneUtility] Move RequiredPlugin to Sofa.SimulationCore [#2849]( https://github.com/sofa-framework/sofa/pull/2849 ); - [Simulation.Core] Special message if extension is Python [#2998]( https://github.com/sofa-framework/sofa/pull/2998 ); - [Sofa.Config][MSVC] Change SIMD cmake option and flags [#2652]( https://github.com/sofa-framework/sofa/pull/2652 ); - [Sofa.GL] Add method drawScaledTetrahedron [#2586]( https://github.com/sofa-framework/sofa/pull/2586 ); - [Sofa.GUI.Common] Change the current GUI by default choice [#2979]( https://github.com/sofa-framework/sofa/pull/2979 ); - [Sofa.LinearAlgebra] Test CRS product compared to Eigen [#2839]( https://github.com/sofa-framework/sofa/pull/2839 ); - [SofaCore] By default, state accessors get the bbox of their states [#2780]( https://github.com/sofa-framework/sofa/pull/2780 ); - [SofaDefaultType] Speedup MapMapSparseMatrix [#2641]( https://github.",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:99307,Test,Test,99307,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Test']
Testability,"; - [SofaCUDA] Reorganize following SOFA structure (1/n) [#3601](https://github.com/sofa-framework/sofa/pull/3601) ; - [SofaCUDA] Reorganize following SOFA structure (2/n) [#3605](https://github.com/sofa-framework/sofa/pull/3605) ; - [SofaCUDA] Reorganize following SOFA structure (3/n) [#3660](https://github.com/sofa-framework/sofa/pull/3660) ; - [SofaCUDA] Reorganize following SOFA structure (4/n) [#3701](https://github.com/sofa-framework/sofa/pull/3701) ; - [SofaCUDA] Reorganize following SOFA structure (5/n) [#3758](https://github.com/sofa-framework/sofa/pull/3758) ; - [SofaCUDA] Reorganize following SOFA structure (6/n) [#3760](https://github.com/sofa-framework/sofa/pull/3760) ; - [SofaCUDA] Reorganize following SOFA structure (7/n) [#3785](https://github.com/sofa-framework/sofa/pull/3785) ; - [SofaCUDA] Reorganize following SOFA structure (8/n) [#3795](https://github.com/sofa-framework/sofa/pull/3795) . ### Tests. **Modules**; - [Solver.Direct] Unit test on topological changes leading to empty system [#3501](https://github.com/sofa-framework/sofa/pull/3501) ; - [LinearAlgebra] Unit tests for RotationMatrix [#3585](https://github.com/sofa-framework/sofa/pull/3585); - [LinearAlgebra] Fix matrix unit test [#3832](https://github.com/sofa-framework/sofa/pull/3832) . **Examples / Scenes**; - [examples] Introduce example and tests for SquareMapping [#3768](https://github.com/sofa-framework/sofa/pull/3768) . ## [v22.12.00]( https://github.com/sofa-framework/sofa/tree/v22.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v22.06..v22.12 ). ### Highlighted contributions. - [Core, Helper] Add spelling suggestion in ObjectFactory [#3042](https://github.com/sofa-framework/sofa/pull/3042) ; - [Constraint.Lagrangian] Add the NNCG as NLCP solver in GenericCS [#3053](https://github.com/sofa-framework/sofa/pull/3053) ; - [CMake] Introduce CMake presets [#3305](https://github.com/sofa-framework/sofa/pull/3305) ; - [all] Type conversion cleaning (+ user-defined li",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:68383,test,test,68383,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,; - [SofaGeneralSimpleFem] Update BeamFEMForceField topologyHander and add tests [#2382]( https://github.com/sofa-framework/sofa/pull/2382 ); - [SofaGraphComponent] Restore check of deprecated components [#2267]( https://github.com/sofa-framework/sofa/pull/2267 ); - [SofaGuiQt] Introduce expand/collapse buttons [#2322]( https://github.com/sofa-framework/sofa/pull/2322 ); - [SofaGuiQt] Introduce expand/collapse buttons in profiler [#2351]( https://github.com/sofa-framework/sofa/pull/2351 ); - [SofaGuiQt] Multiple selection of timers in the profiler [#2141]( https://github.com/sofa-framework/sofa/pull/2141 ); - [SofaGuiQt] UX: graph is easier to read [#2356]( https://github.com/sofa-framework/sofa/pull/2356 ); - [SofaHelper] Add a method getTrace() to BackTrace class. [#2341]( https://github.com/sofa-framework/sofa/pull/2341 ); - [SofaHelper] Factory key type can be other than std::string [#2259]( https://github.com/sofa-framework/sofa/pull/2259 ); - [SofaMiscFEM_test] Add class to test and compare TriangleFEM and TriangularFEMForceField [#2249]( https://github.com/sofa-framework/sofa/pull/2249 ); - [SofaMiscForceField_test] Add TopologicalChanges unit tests for MeshMatrixMass [#2215]( https://github.com/sofa-framework/sofa/pull/2215 ); - [SofaMiscTopology] Add a component TopologyBoundingTrasher to remove mesh going outside from scene bounding box [#2288]( https://github.com/sofa-framework/sofa/pull/2288 ); - [SofaSimpleFem] Add callback on VonMises in TetrahedronFEMForceField [#2407]( https://github.com/sofa-framework/sofa/pull/2407 ); - [SofaSimpleFem] Hexa FEM optimization when assembling by bloc [#2240]( https://github.com/sofa-framework/sofa/pull/2240 ); - [SofaSimpleFem] Simplify bloc-based optimization [#2281]( https://github.com/sofa-framework/sofa/pull/2281 ); - [SofaSimulationCore] Clearer message when a linear solver is missing [#2221]( https://github.com/sofa-framework/sofa/pull/2221 ); - [SofaSparseSolver] Fix msg readibility in SparseLDL [#2294]( https:,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:142616,test,test,142616,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,"ACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LineSetSkinningMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointTopologicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedHexaTopologicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraTopologicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SkinningMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMultiMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/TubularMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/VoidMapping.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Grid REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Dynamic); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Grid). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_MAPPING_LINEAR_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_MAPPING_LINEAR_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt:8816,Test,Tests,8816,Sofa/Component/Mapping/Linear/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"AL_SOURCE_DIR}/TrailRenderer.h; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/TrailRenderer.inl; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/Visual3DText.h; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/VisualGrid.h; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/VisualModelImpl.h; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/VisualStyle.h; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/VisualTransform.h; ). set(SOURCE_FILES; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/BaseCamera.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/Camera.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/InteractiveCamera.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/LineAxis.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/RecordedCamera.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/TrailRenderer.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/Visual3DText.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/VisualGrid.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/VisualModelImpl.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/VisualStyle.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/VisualTransform.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(TinyXML2 REQUIRED) # BaseCamera; sofa_find_package(Sofa.Component.Topology.Container.Grid REQUIRED) # VisualModelImpl. add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Grid); target_link_libraries(${PROJECT_NAME} PRIVATE tinyxml2::tinyxml2). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_VISUAL_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_VISUAL_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Visual/CMakeLists.txt:2194,Test,Tests,2194,Sofa/Component/Visual/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Visual/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"ATE dl); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); target_link_libraries(${PROJECT_NAME} PRIVATE dl); find_library(ICONV iconv); target_link_libraries(${PROJECT_NAME} PRIVATE ${ICONV}); # on macOS, -framework CoreServices is needed for FileMonitor; target_link_libraries(${PROJECT_NAME} PRIVATE ""-framework CoreServices""); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); # Windows library, used in system::FileSystem; target_link_libraries(${PROJECT_NAME} PRIVATE Shlwapi); endif(). # Eigen (header only); target_link_libraries(${PROJECT_NAME} PUBLIC Eigen3::Eigen). # Link the experimental library if the compiler version is less than gcc-9 or clang-9; if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU""); if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 9.1); target_link_libraries(${PROJECT_NAME} PUBLIC stdc++fs); endif(); elseif(CMAKE_CXX_COMPILER_ID STREQUAL ""Clang""); if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 9.0); target_link_libraries(${PROJECT_NAME} PUBLIC c++fs); endif(); endif(). # Json (header only) needed by AdvancedTimer; target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<BUILD_INTERFACE:${JSON_INCLUDE_DIR}>""). # STB (header only) for Image; target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<BUILD_INTERFACE:${STB_INCLUDE_DIR}>""). # DiffLib (header only); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<BUILD_INTERFACE:${difflib_INCLUDE_DIR}>""). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_HELPER_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_HELPER_BUILD_TESTS); add_subdirectory(test); add_subdirectory(simutest); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:9274,Test,Tests,9274,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,"AYBACK_SOURCE_DIR}/init.h; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/CompareState.h; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/CompareTopology.h; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/InputEventReader.h; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/ReadState.h; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/ReadState.inl; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/ReadTopology.h; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/ReadTopology.inl; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/WriteState.h; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/WriteState.inl; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/WriteTopology.h; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/WriteTopology.inl; ). set(SOURCE_FILES; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/CompareState.cpp; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/CompareTopology.cpp; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/InputEventReader.cpp; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/ReadState.cpp; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/ReadTopology.cpp; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/WriteState.cpp; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/WriteTopology.cpp; ). sofa_find_package(ZLIB REQUIRED); sofa_find_package(Sofa.Simulation.Common REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${WRAPPER_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Common); target_link_libraries(${PROJECT_NAME} PUBLIC ZLIB::ZLIB); if(CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS ZLIB::ZLIB); endif(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_PLAYBACK_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_PLAYBACK_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Playback/CMakeLists.txt:1909,Test,Tests,1909,Sofa/Component/Playback/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Playback/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,BoundaryCondition] Fix ProjectToLineConstraint_RemovingMeshTest.scn [#2241]( https://github.com/sofa-framework/sofa/pull/2241 ); - [SofaBoundaryCondition] Fix constraints in assembled systems [#2269]( https://github.com/sofa-framework/sofa/pull/2269 ); - [SofaConstraint] Fix BilateralInteractionConstraint's draw() [#2530]( https://github.com/sofa-framework/sofa/pull/2530 ); - [SofaConstraint] Fix crash when constraint correction is missing [#2222]( https://github.com/sofa-framework/sofa/pull/2222 ); - [SofaConstraint] fix segfault in GenericConstraintSolver [#2265]( https://github.com/sofa-framework/sofa/pull/2265 ); - [SofaCore] Fix potential memory failure on TopologyData Add method [#2459]( https://github.com/sofa-framework/sofa/pull/2459 ); - [SofaCore] FIX BaseData::getLinkPath() [#2354]( https://github.com/sofa-framework/sofa/pull/2354 ); - [SofaCore] Link: case where Data parent is invalid [#2211]( https://github.com/sofa-framework/sofa/pull/2211 ); - [SofaCore_simutest] Fix getobjects and testcomponentstate unit tests [#2326]( https://github.com/sofa-framework/sofa/pull/2326 ); - [SofaDeformable] Forgot minus sign in #2429 [#2448]( https://github.com/sofa-framework/sofa/pull/2448 ); - [SofaGUICommon] Fix configuration file for install with cxxopts [#2279]( https://github.com/sofa-framework/sofa/pull/2279 ); - [SofaGeneralEngine] Fix a typo in the PairBoxRoi.inl [#2324]( https://github.com/sofa-framework/sofa/pull/2324 ); - [SofaGeneralLoader] Make GridMeshCreator work again [#2473]( https://github.com/sofa-framework/sofa/pull/2473 ); - [SofaGuiQt] Fix graph update on startup [#2458]( https://github.com/sofa-framework/sofa/pull/2458 ); - [SofaGuiQt] Revert #2458 [#2479]( https://github.com/sofa-framework/sofa/pull/2479 ); - [SofaGuiQt] Some fixes for Qt6 [#2490]( https://github.com/sofa-framework/sofa/pull/2490 ); - [SofaGuiQt] Switch name and class name for slaves [#2371]( https://github.com/sofa-framework/sofa/pull/2371 ); - [SofaKernel] Remove ambiguous co,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:149774,test,testcomponentstate,149774,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['test'],"['testcomponentstate', 'tests']"
Testability,"C ""$<INSTALL_INTERFACE:include/extlibs/GTest/>""); ; include(SofaMacros); sofa_create_package_with_targets(; PACKAGE_NAME GTest; PACKAGE_VERSION 1.14.0; TARGETS gtest AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""include""; INCLUDE_INSTALL_DIR ""extlibs/GTest""; ). set_target_properties(gtest PROPERTIES FOLDER Testing); set_target_properties(gtest_main PROPERTIES FOLDER Testing); endif(); elseif (NOT GTest_FOUND); message(FATAL_ERROR ""${PROJECT_NAME}: DEPENDENCY googletest NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install googletest, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # add custom googletest main; add_subdirectory(SofaGTestMain). set(SOFATESTINGSRC_ROOT ""src/sofa/testing""). set(HEADER_FILES; ${SOFATESTINGSRC_ROOT}/config.h.in; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.h; ${SOFATESTINGSRC_ROOT}/BaseTest.h; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.h; ${SOFATESTINGSRC_ROOT}/NumericTest.h; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.h; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.h; ). set(SOURCE_FILES; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.cpp; ${SOFATESTINGSRC_ROOT}/BaseTest.cpp; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.cpp; ${SOFATESTINGSRC_ROOT}/NumericTest.cpp; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.cpp; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.cpp; ). sofa_find_package(Sofa.Helper REQUIRED); sofa_find_package(Sofa.DefaultType REQUIRED); sofa_find_package(Sofa.Core REQUIRED); sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.DefaultType Sofa.Core Sofa.Simulation.Graph Sofa.SimpleApi GTest::gtest SofaGTestMain ); target_compile_options(${PROJECT_NAME} PUBLIC ""-DGTEST_LINKED_AS_SHARED_LIBRARY=1""). set(SOFA_TESTING_RESOURCES_DIR ""${CMAKE_CURRENT_SOURCE_DIR}/resources""). set_target_properties(${PROJE",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt:2400,Test,TestMessageHandler,2400,Sofa/framework/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt,1,['Test'],['TestMessageHandler']
Testability,C_ROOT}/io/ImageRAW.cpp; ${SRC_ROOT}/io/Mesh.cpp; ${SRC_ROOT}/io/MeshOBJ.cpp; ${SRC_ROOT}/io/MeshGmsh.cpp; ${SRC_ROOT}/io/MeshTopologyLoader.cpp; ${SRC_ROOT}/io/SphereLoader.cpp; ${SRC_ROOT}/io/STBImage.cpp; ${SRC_ROOT}/io/TriangleLoader.cpp; ${SRC_ROOT}/io/XspLoader.cpp; ${SRC_ROOT}/kdTree.cpp; ${SRC_ROOT}/system/DynamicLibrary.cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:5493,log,logging,5493,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,C_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingCubeUtility.cpp; ${SRC_ROOT}/NameDecoder.cpp; ${SRC_ROOT}/OptionsGroup.cpp; ${SRC_ROOT}/ScopedAdvancedTimer.cpp; ${SRC_ROOT}/Polynomial_LD.cpp; ${SRC_ROOT}/RandomGenerator.cpp; ${SRC_ROOT}/StringUtils.cpp; ${SRC_ROOT}/TagFactory.cpp; ${SRC_ROOT}/TriangleOctree.cpp; ${SRC_ROOT}/Utils.cpp; ${SRC_ROOT}/dec,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:3290,log,logging,3290,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,C_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingCubeUtility.cpp; ${SRC_ROOT}/NameDecoder.cpp; ${SRC_ROOT}/OptionsGroup.cpp; ${SRC_ROOT}/ScopedAdvancedTimer.cpp; ${SRC_ROOT}/Polynomial_LD.cpp; ${SRC_ROOT}/RandomGenerator.cpp; ${SRC_ROOT}/StringUtils.cpp; ${SRC_ROOT}/TagFactory.cpp; ${SRC_ROOT}/TriangleOctree.cpp; ${SRC_ROOT}/Utils.cpp; ${SRC_ROOT}/decompose.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/io/BaseFileAccess.cpp; ${SRC_ROOT}/io/FileAccess.cpp; ${SRC_ROOT}/io/File.cpp; ${SRC_ROOT}/io/Image.c,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:3456,log,logging,3456,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,Core]** FIX resizing of bboxes in UpdateBoundingBoxVisitor [#1268]( https://github.com/sofa-framework/sofa/pull/1268 ); - [SofaTopologyMapping] Fix Tetra2TriangleTopologicalMapping [#1319]( https://github.com/sofa-framework/sofa/pull/1319 ). **Plugins / Projects**; - [Geomagic] Fix several wrong behaviors in driver code [#1378]( https://github.com/sofa-framework/sofa/pull/1378 ); - [MeshSTEPLoader] FIX OCC version check [#1312]( https://github.com/sofa-framework/sofa/pull/1312 ); - [MeshSTEPLoader] FIX build with OCC >= 7.4 [#1310]( https://github.com/sofa-framework/sofa/pull/1310 ); - [Modeler] FIX link error on Windows [#1282]( https://github.com/sofa-framework/sofa/pull/1282 ); - [SofaMiscCollision] Fix topological changes in TetrahedronCollisionModel [#1354]( https://github.com/sofa-framework/sofa/pull/1354 ); - [SofaSphFluid] Fix broken behavior for ParticleSink and ParticleSource [#1278]( https://github.com/sofa-framework/sofa/pull/1278 ); - [SofaSphFluid] FIX .scene-tests [#1317]( https://github.com/sofa-framework/sofa/pull/1317 ); - [SofaOpenCL] Make it work with 20.06 [#1361]( https://github.com/sofa-framework/sofa/pull/1361 ); - [SofaPython] Restrict the plugin and its dependers to C++11 [#1284]( https://github.com/sofa-framework/sofa/pull/1284 ). **Examples / Scenes**; - [examples] Fix SurfacePressureForceField example [#1273]( https://github.com/sofa-framework/sofa/pull/1273 ); - [examples] Fix caduceus [#1392]( https://github.com/sofa-framework/sofa/pull/1392 ); - [examples] Update the scene StandardTetrahedralFEMForceField.scn [#1064]( https://github.com/sofa-framework/sofa/pull/1064 ). ### Cleanings. **Architecture**. **Modules**; - [All] Clean namespace for some classes [#1422]( https://github.com/sofa-framework/sofa/pull/1422 ); - [All] Fix warnings due to visibility attribute [#1421]( https://github.com/sofa-framework/sofa/pull/1421 ); - [All] Clean due to doc [#1398]( https://github.com/sofa-framework/sofa/pull/1398 ); - [All] Clean warnings [#137,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:237854,test,tests,237854,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"D_H); endif(); list(APPEND DEP_TARGETS JPEG::JPEG); else(); message(STATUS ""CImgPlugin: JPEG Image Format disabled""); endif(); if(PNG_FOUND); message(STATUS ""CImgPlugin: PNG Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_png); if(UNIX); # Prevent pngconf error (see https://bugs.launchpad.net/ubuntu/+source/libpng/+bug/218409); list(APPEND CIMG_CFLAGS -DPNG_SKIP_SETJMP_CHECK); endif(); list(APPEND DEP_TARGETS PNG::PNG); else(); message(STATUS ""CImgPlugin: PNG Image Format disabled""); endif(); if(ZLIB_FOUND); list(APPEND DEP_TARGETS ZLIB::ZLIB); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<BUILD_INTERFACE:${CImg_INCLUDE_DIRS}>""); target_compile_options(${PROJECT_NAME} PUBLIC ${CIMG_CFLAGS}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.DefaultType ); target_link_libraries(${PROJECT_NAME} INTERFACE CImg); target_link_libraries(${PROJECT_NAME} PUBLIC ${DEP_TARGETS}). if(SOFA_BUILD_RELEASE_PACKAGE OR CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS ${DEP_TARGETS} ${DEP_ZSTD}); endif(). if(MSVC); target_link_options(${PROJECT_NAME} PRIVATE ""/DEF:${CMAKE_CURRENT_SOURCE_DIR}/exports.def""); endif(). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} CImg AUTO_SET_TARGET_PROPERTIES ; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""CImgPlugin""; RELOCATABLE ""plugins""; ). install(FILES; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindCImg.cmake""; DESTINATION lib/cmake/Modules; COMPONENT headers; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(CIMGPLUGIN_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(CIMGPLUGIN_BUILD_TESTS); enable_testing(); add_subdirectory(CImgPlugin_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt:4112,Test,Tests,4112,applications/plugins/CImgPlugin/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt,3,"['Test', 'test']","['Tests', 'tests']"
Testability,"ENEUTILITY_SOURCE_DIR ""src/sofa/component/sceneutility""). set(HEADER_FILES; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/init.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/AddResourceRepository.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/APIVersion.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/InfoComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeAliasComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeDataAliasComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MessageHandlerComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimation.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimationOnEvent.h; ). set(SOURCE_FILES; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/AddResourceRepository.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/APIVersion.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/InfoComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeAliasComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeDataAliasComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MessageHandlerComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimation.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimationOnEvent.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_SCENEUTILITY_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_SCENEUTILITY_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SceneUtility/CMakeLists.txt:1771,Test,Tests,1771,Sofa/Component/SceneUtility/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SceneUtility/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"ERING3D_SOURCE_DIR}/init.h; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/ClipPlane.h; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/DataDisplay.h; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/MergeVisualModels.h; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/OglCylinderModel.h; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/OglModel.h; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/OglSceneFrame.h; 	${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/PointSplatModel.h; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/SlicedVolumetricModel.h; ). set(SOURCE_FILES; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/init.cpp; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/ClipPlane.cpp; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/DataDisplay.cpp; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/MergeVisualModels.cpp; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/OglCylinderModel.cpp; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/OglModel.cpp; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/OglSceneFrame.cpp; 	${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/PointSplatModel.cpp; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/SlicedVolumetricModel.cpp; ). sofa_find_package(Sofa.GL REQUIRED); sofa_find_package(Sofa.Component.Visual REQUIRED) # for VisualModelImpl; sofa_find_package(Sofa.GL.Component.Rendering2D REQUIRED) # for OglColoMap in DataDisplay. add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Visual Sofa.GL.Component.Rendering2D Sofa.GL). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_GL_COMPONENT_RENDERING3D_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_GL_COMPONENT_RENDERING3D_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Rendering3D/CMakeLists.txt:1923,Test,Tests,1923,Sofa/GL/Component/Rendering3D/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Rendering3D/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"EXPERIMENTAL_FEATURES (default OFF) to enable MechanicalObject::buildIdentityBlocksInJacobian [#276]( https://github.com/sofa-framework/sofa/pull/276 ); - [SofaGraphComponents]; - add tests for RequiredPlugin [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaHelper]; - GLSL: load shader source code from a standard string [#158]( https://github.com/sofa-framework/sofa/pull/158 ); - [SofaBaseTopology]; - GridTopology : implement ""flat"" grids in 1 or 2 dimension by using setting grid resolution to ""1"" in the corresponding axis, and associated examples [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - add tests for RegularGridTopology [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - [SofaEngine]; - BREAKING: Add oriented box feature to BoxROI [#108]( https://github.com/sofa-framework/sofa/pull/108 ); - [SofaConstraint]; - add instantiation of constraint corrections with Vec2f [#157]( https://github.com/sofa-framework/sofa/pull/157 ); - [SofaOpenglVisual]; - add tests for ClipPlane [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaVolumetricData]; - add tests for DistanceGrid [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for Light [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaBoundaryCondition]; - add tests for ConstantForceField, some of them are OpenIssue demonstrating existing problem, as crashing sofa when using negative or too large values in indices [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [CI]; - improvement of all test scripts. **Plugins / Projects**; - [GUI]; - mouse events are now transmitted to the scene with QtGLViewer [#132]( https://github.com/sofa-framework/sofa/pull/132 ); - [SceneCreator]; - Cosmetic changes and remove un-needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://githu",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:328814,test,tests,328814,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"E_FILES; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/BaseProximityIntersection.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/DiscreteIntersection.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/LocalMinDistance.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/MeshDiscreteIntersection.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/MeshMinProximityIntersection.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/MeshNewProximityIntersection.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/MinProximityIntersection.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/NewProximityIntersection.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/RayDiscreteIntersection.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/RayNewProximityIntersection.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/TetrahedronDiscreteIntersection.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${WRAPPER_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_COLLISION_DETECTION_INTERSECTION_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_COLLISION_DETECTION_INTERSECTION_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Intersection/CMakeLists.txt:3321,Test,Tests,3321,Sofa/Component/Collision/Detection/Intersection/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Intersection/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"Full log]( https://github.com/sofa-framework/sofa/compare/v16.12...v17.06 ). ### New features. **For users**; - [SceneCreator]; - new methods to add basic 3D object: Cube, Cylinder, Sphere and Plane. In rigid or deformable.; - [GeneralTopology]; - SphereGridTopology component to create sphere grids, similar to CylinderGridTopology.; - Adds a new orientedBox dataField in BoxROI so that we can use it to either defined AABoxes or OrientedBox; - Minor improvement on the way warning/error message are presented to the users in runSofa. A single panel is now used instead of of two, it is always displayed, the Panel name also contains the number of message eg: ""Messages(5)""; - The Graph view is now displaying the type of message they contains.; - [runSofa]; - Autoload plugins, described in the user-custom file 'plugin_list.conf' if present; else 'plugin_list.conf.default' containing all compiled plugins and generated automatically by CMake. **For developpers**; - Add a Logger component that stores the history of messages into each sofa component.; - Implements new methods to write on-liner's conditional message:; msg_info_when(level<3) << ""This is a conditional info message""; - Implement an implicit version of each of the msg_* API allowing to write; msg_info() << ""Hello"" in place for msg_info(this) << Hello""; - CImgPlugin : creation of a dedicated plugin for image loading based on CImg [#185]( https://github.com/sofa-framework/sofa/pull/185 ); - Remove deprecated miniBoost dependency [#273]( https://github.com/sofa-framework/sofa/pull/273 ). ### Improvements. **Modules**; - [All]; - update containers to support c++x11 features [#113]( https://github.com/sofa-framework/sofa/pull/113 ); - speed up spheres rendering + code cleaning [#170]( https://github.com/sofa-framework/sofa/pull/170 ); - updates externs/gtest to a fresh checkout [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - auto-init/cleanup libraries [#168]( https://github.com/sofa-framework/sofa/pull/168 ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:324955,Log,Logger,324955,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Log'],['Logger']
Testability,"GEBRASRC_ROOT}/BlockDiagonalMatrix.cpp; ${SOFALINEARALGEBRASRC_ROOT}/BlockFullMatrix.cpp; ${SOFALINEARALGEBRASRC_ROOT}/BlockVector.cpp; ${SOFALINEARALGEBRASRC_ROOT}/BTDMatrix.cpp; ${SOFALINEARALGEBRASRC_ROOT}/CompressedRowSparseMatrixConstraint.cpp; ${SOFALINEARALGEBRASRC_ROOT}/CompressedRowSparseMatrixGeneric.cpp; ${SOFALINEARALGEBRASRC_ROOT}/CompressedRowSparseMatrixMechanical.cpp; ${SOFALINEARALGEBRASRC_ROOT}/EigenVector.cpp; ${SOFALINEARALGEBRASRC_ROOT}/FullMatrix.cpp; ${SOFALINEARALGEBRASRC_ROOT}/FullVector.cpp; ${SOFALINEARALGEBRASRC_ROOT}/RotationMatrix.cpp; ${SOFALINEARALGEBRASRC_ROOT}/SparseMatrixStorageOrder[EigenSparseMatrix].cpp; ${SOFALINEARALGEBRASRC_ROOT}/init.cpp; ). sofa_find_package(Eigen3 3.3.5 REQUIRED). if (SOFA_OPENMP AND ""${EIGEN3_VERSION}"" VERSION_LESS 3.2.10); sofa_find_package(OpenMP BOTH_SCOPES) # will set/update SOFA_LINEARALGEBRA_HAVE_OPENMP; endif(). if (SOFA_LINEARALGEBRA_HAVE_OPENMP); list(APPEND HEADER_FILES ${SOFALINEARALGEBRASRC_ROOT}/EigenBaseSparseMatrix_MT.h); endif(). sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Helper REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Type Sofa.Helper Eigen3::Eigen). if (SOFA_LINEARALGEBRA_HAVE_OPENMP); target_link_libraries(${PROJECT_NAME} PUBLIC OpenMP::OpenMP_CXX); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_LINEARALGEBRA_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_LINEARALGEBRA_BUILD_TESTS); add_subdirectory(Testing); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/LinearAlgebra/CMakeLists.txt:3775,Test,Tests,3775,Sofa/framework/LinearAlgebra/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/LinearAlgebra/CMakeLists.txt,5,"['Test', 'test']","['Testing', 'Tests', 'test', 'tests']"
Testability,Gmsh.cpp; ${SRC_ROOT}/io/MeshTopologyLoader.cpp; ${SRC_ROOT}/io/SphereLoader.cpp; ${SRC_ROOT}/io/STBImage.cpp; ${SRC_ROOT}/io/TriangleLoader.cpp; ${SRC_ROOT}/io/XspLoader.cpp; ${SRC_ROOT}/kdTree.cpp; ${SRC_ROOT}/system/DynamicLibrary.cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.cpp); endif(). sofa_find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); so,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:5594,log,logging,5594,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,"INEANALYZE_SOURCE_DIR}/AverageCoord.inl; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/ClusteringEngine.h; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/ClusteringEngine.inl; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/Distances.h; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/Distances.inl; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/HausdorffDistance.h; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/HausdorffDistance.inl; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/ShapeMatching.h; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/ShapeMatching.inl; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/SumEngine.h; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/SumEngine.inl; ). set(SOURCE_FILES; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/AverageCoord.cpp; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/ClusteringEngine.cpp; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/Distances.cpp # needs DynamicSparseGeoAlgo; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/HausdorffDistance.cpp; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/ShapeMatching.cpp; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/SumEngine.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Dynamic). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_ENGINE_ANALYZE_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_ENGINE_ANALYZE_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Analyze/CMakeLists.txt:2026,Test,Tests,2026,Sofa/Component/Engine/Analyze/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Analyze/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,Introduce function append for paths [#3961](https://github.com/sofa-framework/sofa/pull/3961); - [Project] Start dev phase v23.12 [#3963](https://github.com/sofa-framework/sofa/pull/3963); - [all] Minor clean on indentation and warning [#3975](https://github.com/sofa-framework/sofa/pull/3975); - [MechanicalLoad] Remove empty draw function in LinearForceField [#3979](https://github.com/sofa-framework/sofa/pull/3979); - [tests] Restore commented unit tests [#3982](https://github.com/sofa-framework/sofa/pull/3982); - [CHANGELOG] Update further to latest changes in v23.06 [#3998](https://github.com/sofa-framework/sofa/pull/3998); - [Component] Follow changes from SOFA #3889 [#4013](https://github.com/sofa-framework/sofa/pull/4013); - [LinearAlgebra] CompressedRowSparseMatrix: add virtual destructor [#4020](https://github.com/sofa-framework/sofa/pull/4020); - [GuiQt] Remove some unactivated code [#4025](https://github.com/sofa-framework/sofa/pull/4025); - [constraint] Update PrecomputedConstraintCorrection logs when loading compliance file [#4026](https://github.com/sofa-framework/sofa/pull/4026); - [all] Lifecycle v23.12 2/n [#4040](https://github.com/sofa-framework/sofa/pull/4040); - [GUI.Qt] Remove unused recorder feature [#4041](https://github.com/sofa-framework/sofa/pull/4041); - [MechanicalLoad] Use prefix d_ in DiagonalVelocityDampingForceField [#4046](https://github.com/sofa-framework/sofa/pull/4046); - [all] Lifecycle v23.12 3/n [#4056](https://github.com/sofa-framework/sofa/pull/4056); - [all] Clean unused warnings in SOFA [#4057](https://github.com/sofa-framework/sofa/pull/4057); - [all] Lifecycle v23.12 4/n [#4058](https://github.com/sofa-framework/sofa/pull/4058); - [plugins] Fix OptionGroup deprecated constructor in image and SofaCUDA plugin [#4064](https://github.com/sofa-framework/sofa/pull/4064); - [all] Update code regarding lifecycle in Topology.h [#4065](https://github.com/sofa-framework/sofa/pull/4065); - [all] Fix warnings related to Vec and unused v,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:44038,log,logs,44038,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['logs']
Testability,"LANGUAGES CXX). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.SceneUtility REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED). set(SCENECHECK_SRC_DIR src/SceneChecking). set(HEADER_FILES; ${SCENECHECK_SRC_DIR}/config.h.in; ${SCENECHECK_SRC_DIR}/init.h; ${SCENECHECK_SRC_DIR}/SceneCheck.h; ${SCENECHECK_SRC_DIR}/SceneCheckAPIChange.h; ${SCENECHECK_SRC_DIR}/SceneCheckCollisionResponse.h; ${SCENECHECK_SRC_DIR}/SceneCheckDeprecatedComponents.h; ${SCENECHECK_SRC_DIR}/SceneCheckDuplicatedName.h; ${SCENECHECK_SRC_DIR}/SceneCheckMissingRequiredPlugin.h; ${SCENECHECK_SRC_DIR}/SceneCheckUsingAlias.h; ${SCENECHECK_SRC_DIR}/SceneCheckerListener.h; ${SCENECHECK_SRC_DIR}/SceneCheckerVisitor.h; ). set(SOURCE_FILES; ${SCENECHECK_SRC_DIR}/init.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckAPIChange.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckCollisionResponse.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckDeprecatedComponents.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckDuplicatedName.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckMissingRequiredPlugin.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckUsingAlias.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckerListener.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckerVisitor.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core Sofa.Component.SceneUtility Sofa.Component.Collision.Response.Contact). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SCENECHECKING_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SCENECHECKING_BUILD_TESTS); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SceneChecking/CMakeLists.txt:1768,Test,Tests,1768,applications/projects/SceneChecking/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SceneChecking/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"LASTIC_SOURCE_DIR}/FastTetrahedralCorotationalForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/HexahedralFEMForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/HexahedralFEMForceFieldAndMass.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/HexahedronFEMForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/HexahedronFEMForceFieldAndMass.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/QuadBendingFEMForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/TetrahedralCorotationalFEMForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/TetrahedronFEMForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/TriangleFEMForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/TriangleFEMUtils.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/TriangularAnisotropicFEMForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/TriangularFEMForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/TriangularFEMForceFieldOptim.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Grid REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Grid). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_SOLIDMECHANICS_FEM_ELASTIC_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_SOLIDMECHANICS_FEM_ELASTIC_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/FEM/Elastic/CMakeLists.txt:4563,Test,Tests,4563,Sofa/Component/SolidMechanics/FEM/Elastic/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/FEM/Elastic/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"LES; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/BoxROI.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/ComplementaryROI.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/IndicesFromValues.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/MergeROIs.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/MeshBoundaryROI.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/MeshROI.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/MeshSampler.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/MeshSplittingEngine.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/MeshSubsetEngine.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/NearestPointROI.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/PairBoxRoi.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/PlaneROI.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/PointsFromIndices.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/ProximityROI.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/SelectConnectedLabelsROI.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/SelectLabelROI.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/SphereROI.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/SubsetTopology.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/ValuesFromIndices.cpp; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/ValuesFromPositions.cpp. ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_ENGINE_SELECT_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_ENGINE_SELECT_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Select/CMakeLists.txt:4068,Test,Tests,4068,Sofa/Component/Engine/Select/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Select/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"LIBRARIES); list(GET BULLET_LIBRARIES 0 first_bullet_lib_path); get_filename_component(bullet_lib_dir ""${first_bullet_lib_path}"" DIRECTORY); if(WIN32); set(HACD_LIB ""${bullet_lib_dir}/HACD.lib""); elseif(UNIX AND NOT APPLE); # on Ubuntu, this is installed with libbullet-extras-dev; set(HACD_LIB ""${bullet_lib_dir}/libHACD.so""); else(); # MacOS ? todo; endif(); endif(). if(EXISTS ""${HACD_LIB}""); message(STATUS ""HACD_LIB: ${HACD_LIB}""); else(); message(SEND_ERROR ""Could not find HACD, necessary to build ConvexHull."" ); endif(). if(Compliant_FOUND); list(APPEND SOURCE_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullCompliantContacts.cpp); else(); message(STATUS ""BulletCollisionDetection: could not find Compliant, won't build BulletConvexHullCompliantContacts""); endif(). if(LMConstraint_FOUND); list(APPEND HEADER_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContacts.cpp); list(APPEND SOURCE_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContacts.cpp); else(); message(STATUS ""BulletCollisionDetection: could not find LMConstraint, won't build BulletConvexHullContacts""); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Component.Collision ${BULLET_LIBRARIES} ${HACD_LIB} CollisionOBBCapsule Sofa.GL). if(Compliant_FOUND); target_link_libraries(${PROJECT_NAME} Compliant); endif(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(BULLETCOLLISIONDETECTION_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(BULLETCOLLISIONDETECTION_BUILD_TESTS); enable_testing(); add_subdirectory(BulletCollisionDetection_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt:4413,Test,Tests,4413,applications/plugins/BulletCollisionDetection/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt,3,"['Test', 'test']","['Tests', 'tests']"
Testability,"LISIONDETECTIONALGORITHM_SOURCE_DIR}/MirrorIntersector.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/RayTraceDetection.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/RayTraceNarrowPhase.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/BVHNarrowPhase.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/BruteForceBroadPhase.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/BruteForceDetection.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/DSAPBox.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/CollisionPipeline.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/DirectSAP.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/DirectSAPNarrowPhase.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/IncrSAP.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/RayTraceDetection.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/RayTraceNarrowPhase.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${WRAPPER_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_COLLISION_DETECTION_ALGORITHM_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_COLLISION_DETECTION_ALGORITHM_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Algorithm/CMakeLists.txt:2807,Test,Tests,2807,Sofa/Component/Collision/Detection/Algorithm/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Algorithm/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,LinearSolver] Introduce GlobalSystemMatrixExporter [#2303]( https://github.com/sofa-framework/sofa/pull/2303 ); - [SofaBaseTopology] Add method to register callbacks directly using the topologyData [#2375]( https://github.com/sofa-framework/sofa/pull/2375 ); - [SofaBaseTopology] Ensure to add a topology EndingEvent before propagating to all topologyData [#2376]( https://github.com/sofa-framework/sofa/pull/2376 ); - [SofaBaseVisual] Fix VisualModelImpl to use topologyData and callback to handle topological changes [#2300]( https://github.com/sofa-framework/sofa/pull/2300 ); - [SofaCore] Add const version of getMSState to Mass [#2293]( https://github.com/sofa-framework/sofa/pull/2293 ); - [SofaCore] Clearer message when template parameter is not compatible with current context [#2262]( https://github.com/sofa-framework/sofa/pull/2262 ); - [SofaCore] Required data msg now depends on existing default value [#2527]( https://github.com/sofa-framework/sofa/pull/2527 ); - [SofaDefaultType] Introduce test interface for BaseMatrix [#2280]( https://github.com/sofa-framework/sofa/pull/2280 ); - [SofaGeneralAnimationLoop] More optimization on MechanicalMatrixMapper [#2411]( https://github.com/sofa-framework/sofa/pull/2411 ); - [SofaGeneralAnimationLoop] Remove matrix compression [#2367]( https://github.com/sofa-framework/sofa/pull/2367 ); - [SofaGeneralDeformable] Add option to enable/disable spring display in TriangularBendingSprings [#2297]( https://github.com/sofa-framework/sofa/pull/2297 ); - [SofaGeneralSimpleFem] Update BeamFEMForceField topologyHander and add tests [#2382]( https://github.com/sofa-framework/sofa/pull/2382 ); - [SofaGraphComponent] Restore check of deprecated components [#2267]( https://github.com/sofa-framework/sofa/pull/2267 ); - [SofaGuiQt] Introduce expand/collapse buttons [#2322]( https://github.com/sofa-framework/sofa/pull/2322 ); - [SofaGuiQt] Introduce expand/collapse buttons in profiler [#2351]( https://github.com/sofa-framework/sofa/pull/2351 ); -,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:141123,test,test,141123,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,Loader.h; ${SRC_ROOT}/kdTree.h; ${SRC_ROOT}/kdTree.inl; ${SRC_ROOT}/list.h; ${SRC_ROOT}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingCubeUtility.cpp; ${SRC_ROOT}/NameDecoder,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:3030,log,logging,3030,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,"MMON_SRC}/xml/Element.h; ${SOFA_SIMULATION_COMMON_SRC}/xml/Element.inl; ${SOFA_SIMULATION_COMMON_SRC}/xml/NodeElement.h; ${SOFA_SIMULATION_COMMON_SRC}/xml/ObjectElement.h; ${SOFA_SIMULATION_COMMON_SRC}/xml/XML.h; ). set(SOURCE_FILES; ${SOFA_SIMULATION_COMMON_SRC}/SceneLoaderPHP.cpp; ${SOFA_SIMULATION_COMMON_SRC}/SceneLoaderXML.cpp; ${SOFA_SIMULATION_COMMON_SRC}/TransformationVisitor.cpp; ${SOFA_SIMULATION_COMMON_SRC}/init.cpp; ${SOFA_SIMULATION_COMMON_SRC}/initSofaSimulationCommon.cpp; ${SOFA_SIMULATION_COMMON_SRC}/xml/AttributeElement.cpp; ${SOFA_SIMULATION_COMMON_SRC}/xml/BaseElement.cpp; ${SOFA_SIMULATION_COMMON_SRC}/xml/BaseMultiMappingElement.cpp; ${SOFA_SIMULATION_COMMON_SRC}/xml/DataElement.cpp; ${SOFA_SIMULATION_COMMON_SRC}/xml/NodeElement.cpp; ${SOFA_SIMULATION_COMMON_SRC}/xml/ObjectElement.cpp; ${SOFA_SIMULATION_COMMON_SRC}/xml/XML.cpp; ). sofa_find_package(Sofa.Core REQUIRED); sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(TinyXML2 REQUIRED). if(UNIX AND NOT APPLE); sofa_install_libraries(PATHS ${TinyXML2_LIBRARY}); else(); sofa_install_libraries(TARGETS tinyxml2::tinyxml2); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Core Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PRIVATE tinyxml2::tinyxml2) # Private because not exported in API. set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_SIMULATION_COMMON_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_SIMULATION_COMMON_BUILD_TESTS); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Common/CMakeLists.txt:2430,Test,Tests,2430,Sofa/framework/Simulation/Common/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Common/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,"MPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/matrixaccumulators/SparsityPatternLocalMatrix.h. ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/visitors/AssembleGlobalVectorFromLocalVectorVisitor.h; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/visitors/DispatchFromGlobalVectorToLocalVectorVisitor.h; ). set(SOURCE_FILES; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/BaseMatrixProjectionMethod.cpp; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/CompositeLinearSystem.cpp; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/ConstantSparsityPatternSystem.cpp; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/ConstantSparsityProjectionMethod.cpp; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/MappedMassMatrixObserver.cpp; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/MappingGraph.cpp; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/MatrixLinearSystem.cpp; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/MatrixProjectionMethod.cpp; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/TypedMatrixLinearSystem.cpp. ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/visitors/AssembleGlobalVectorFromLocalVectorVisitor.cpp; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/visitors/DispatchFromGlobalVectorToLocalVectorVisitor.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core Sofa.LinearAlgebra). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). cmake_dependent_option(SOFA_COMPONENT_LINEARSYSTEM_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_LINEARSYSTEM_BUILD_TESTS); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSystem/CMakeLists.txt:4393,test,tests,4393,Sofa/Component/LinearSystem/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSystem/CMakeLists.txt,2,['test'],['tests']
Testability,"MatrixExporter.cpp; ${SOFAMATRIX_SRC_DIR}/MatrixImageExporter.cpp; ${SOFAMATRIX_SRC_DIR}/FillReducingOrdering.cpp; ); set(README_FILES; SofaMatrix.md; ); set(MOC_FILES; ); set(MOC_HEADER_FILES; ). if (NOT Sofa.GUI.Qt_FOUND); message(NOTICE ""[SofaMatrix] Module Sofa.GUI.Qt not found: some components (GlobalSystemMatrixImage) will not be compiled""); else(); list(APPEND HEADER_FILES; ${SOFAMATRIX_SRC_DIR}/ComplianceMatrixImage.h; ${SOFAMATRIX_SRC_DIR}/GlobalSystemMatrixImage.h; ${SOFAMATRIX_SRC_DIR}/BaseMatrixImageProxy.h; ); list(APPEND SOURCE_FILES; ${SOFAMATRIX_SRC_DIR}/ComplianceMatrixImage.cpp; ${SOFAMATRIX_SRC_DIR}/GlobalSystemMatrixImage.cpp; ${SOFAMATRIX_SRC_DIR}/BaseMatrixImageViewerWidget.cpp; ); list(APPEND MOC_HEADER_FILES; ${SOFAMATRIX_SRC_DIR}/BaseMatrixImageViewerWidget.h; ); list(APPEND SOFA_MODULES; Sofa.GUI.Qt; ). find_package(Qt6 COMPONENTS Core CoreTools QUIET); if (NOT Qt6Core_FOUND); find_package(Qt5 COMPONENTS Core QUIET); endif(); if(Qt5Core_FOUND); qt5_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); elseif (Qt6Core_FOUND); qt6_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); endif(); endif(). # Create the plugin library.; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES} ${MOC_HEADER_FILES} ${MOC_FILES}). # Link the plugin library to its dependency(ies).; target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFA_MODULES}); target_link_libraries(${PROJECT_NAME} PRIVATE metis). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; # cmake_dependent_option(SOFAMATRIX_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); #if(SOFAMATRIX_BUILD_TESTS); # enable_testing(); # add_subdirectory(SofaMatrix_test); # endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/CMakeLists.txt:3258,Test,Tests,3258,applications/plugins/SofaMatrix/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/CMakeLists.txt,3,"['Test', 'test']","['Tests', 'tests']"
Testability,"NLINEAR_SOURCE_DIR}/DistanceMapping.h; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/DistanceMapping.inl; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/DistanceMultiMapping.h; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/DistanceMultiMapping.inl; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/NonLinearMappingData.h; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/RigidMapping.h; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/RigidMapping.inl; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/RigidRigidMapping.h; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/SquareDistanceMapping.h; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/SquareDistanceMapping.inl; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/SquareMapping.h; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/SquareMapping.inl; ). set(SOURCE_FILES; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/DistanceFromTargetMapping.cpp; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/DistanceMapping.cpp; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/DistanceMultiMapping.cpp; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/RigidMapping.cpp; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/SquareDistanceMapping.cpp; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/SquareMapping.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_MAPPING_NONLINEAR_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_MAPPING_NONLINEAR_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/NonLinear/CMakeLists.txt:2132,Test,Tests,2132,Sofa/Component/Mapping/NonLinear/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/NonLinear/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"NRESPONSEMAPPER_SOURCE_DIR}/TetrahedronBarycentricContactMapper.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/BaseContactMapper.cpp; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/BarycentricContactMapper.cpp; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/IdentityContactMapper.cpp; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/RigidContactMapper.cpp; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/SubsetContactMapper.cpp; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/TetrahedronBarycentricContactMapper.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Mapping.Linear REQUIRED); sofa_find_package(Sofa.Component.Mapping.NonLinear REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED) # BarycentricMapper needs MechanicalObject. add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping.Linear); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping.NonLinear); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.StateContainer). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_COLLISION_RESPONSE_MAPPER_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_COLLISION_RESPONSE_MAPPER_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Response/Mapper/CMakeLists.txt:2688,Test,Tests,2688,Sofa/Component/Collision/Response/Mapper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Response/Mapper/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"OFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/BTDLinearSolver.cpp; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/CholeskySolver.cpp; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSimplicialLDLT.cpp; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSimplicialLLT.cpp; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSolverFactory.cpp; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSparseLU.cpp; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSparseQR.cpp; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/MatrixLinearSystem[BTDMatrix].cpp; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/PrecomputedLinearSolver.cpp; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SVDLinearSolver.cpp; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseCommon.cpp; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseLDLSolver.cpp; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/TypedMatrixLinearSystem[BTDMatrix].cpp; ). # make sure you have threads for AsyncSparseLDLSolver; sofa_find_package(Threads REQUIRED). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.LinearSolver.Iterative REQUIRED) # Only for MatrixLinearSolver which will move to core; sofa_find_package(Sofa.Component.LinearSolver.Ordering REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${WRAPPER_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core Sofa.Component.LinearSolver.Iterative Sofa.Component.LinearSolver.Ordering); target_link_libraries(${PROJECT_NAME} PUBLIC Threads::Threads). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). cmake_dependent_option(SOFA_COMPONENT_LINEARSOLVER_DIRECT_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_LINEARSOLVER_DIRECT_BUILD_TESTS); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/Direct/CMakeLists.txt:4445,test,tests,4445,Sofa/Component/LinearSolver/Direct/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/Direct/CMakeLists.txt,2,['test'],['tests']
Testability,"ONENTCOLLISIONGEOMETRY_SOURCE_DIR}/RayModel.h; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/SphereModel.h; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/SphereModel.inl; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/TetrahedronModel.h; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/TriangleModel.h; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/TriangleModel.inl; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/TriangleModelInRegularGrid.h; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/TriangleOctreeModel.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/CubeModel.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/CylinderModel.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/LineModel.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/PointModel.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/RayModel.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/SphereModel.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/TetrahedronModel.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/TriangleModel.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/TriangleModelInRegularGrid.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/TriangleOctreeModel.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${WRAPPER_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_COLLISION_GEOMETRY_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_COLLISION_GEOMETRY_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Geometry/CMakeLists.txt:2447,Test,Tests,2447,Sofa/Component/Collision/Geometry/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Geometry/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"OOT}/Cylinder.cpp; ${SOFAGLSRC_ROOT}/glText.cpp; ${SOFAGLSRC_ROOT}/Capture.cpp; ${SOFAGLSRC_ROOT}/Texture.cpp; ${SOFAGLSRC_ROOT}/VideoRecorderFFMPEG.cpp; ${SOFAGLSRC_ROOT}/gl.cpp; ${SOFAGLSRC_ROOT}/TransformationGL.cpp; ${SOFAGLSRC_ROOT}/DrawToolGL.cpp; ). if(GLEW_FOUND); list(APPEND HEADER_FILES; ${SOFAGLSRC_ROOT}/FrameBufferObject.h; ${SOFAGLSRC_ROOT}/GLSLShader.h; ); list(APPEND SOURCE_FILES; ${SOFAGLSRC_ROOT}/FrameBufferObject.cpp; ${SOFAGLSRC_ROOT}/GLSLShader.cpp; ); list(APPEND SHADER_FILES; ${SOFAGLSRC_ROOT}/shaders/generateSphere.cppglsl; ); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.DefaultType). if(TARGET OpenGL::GL AND TARGET OpenGL::GLU) # Imported targets defined since CMake 3.8; target_link_libraries(${PROJECT_NAME} PUBLIC OpenGL::GL OpenGL::GLU); else(); target_link_libraries(${PROJECT_NAME} PUBLIC ${OPENGL_LIBRARIES}); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ${OPENGL_INCLUDE_DIR}); endif(); if(CMAKE_SYSTEM_NAME STREQUAL Linux AND SOFA_BUILD_RELEASE_PACKAGE AND OPENGL_GLU_FOUND); # Add GLU to Linux binaries; sofa_install_libraries(PATHS ${OPENGL_glu_LIBRARY}); endif(). target_link_libraries(${PROJECT_NAME} PUBLIC GLEW::GLEW); if (SOFA_BUILD_RELEASE_PACKAGE OR CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS GLEW::GLEW); endif(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). sofa_add_subdirectory(module Component ${PROJECT_NAME}.Component ON). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA.GL_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA.GL_BUILD_TESTS); enable_testing(); add_subdirectory(${PROJECT_NAME}_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/CMakeLists.txt:2709,Test,Tests,2709,Sofa/GL/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/CMakeLists.txt,3,"['Test', 'test']","['Tests', 'tests']"
Testability,OOT}/io/MeshTopologyLoader.h; ${SRC_ROOT}/io/SphereLoader.h; ${SRC_ROOT}/io/STBImage.h; ${SRC_ROOT}/io/TriangleLoader.h; ${SRC_ROOT}/kdTree.h; ${SRC_ROOT}/kdTree.inl; ${SRC_ROOT}/list.h; ${SRC_ROOT}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:2920,log,logging,2920,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,"OPERTIES FOLDER Testing); set_target_properties(gtest_main PROPERTIES FOLDER Testing); endif(); elseif (NOT GTest_FOUND); message(FATAL_ERROR ""${PROJECT_NAME}: DEPENDENCY googletest NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install googletest, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # add custom googletest main; add_subdirectory(SofaGTestMain). set(SOFATESTINGSRC_ROOT ""src/sofa/testing""). set(HEADER_FILES; ${SOFATESTINGSRC_ROOT}/config.h.in; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.h; ${SOFATESTINGSRC_ROOT}/BaseTest.h; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.h; ${SOFATESTINGSRC_ROOT}/NumericTest.h; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.h; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.h; ). set(SOURCE_FILES; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.cpp; ${SOFATESTINGSRC_ROOT}/BaseTest.cpp; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.cpp; ${SOFATESTINGSRC_ROOT}/NumericTest.cpp; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.cpp; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.cpp; ). sofa_find_package(Sofa.Helper REQUIRED); sofa_find_package(Sofa.DefaultType REQUIRED); sofa_find_package(Sofa.Core REQUIRED); sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.DefaultType Sofa.Core Sofa.Simulation.Graph Sofa.SimpleApi GTest::gtest SofaGTestMain ); target_compile_options(${PROJECT_NAME} PUBLIC ""-DGTEST_LINKED_AS_SHARED_LIBRARY=1""). set(SOFA_TESTING_RESOURCES_DIR ""${CMAKE_CURRENT_SOURCE_DIR}/resources""). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt:2695,Test,TestMessageHandler,2695,Sofa/framework/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt,1,['Test'],['TestMessageHandler']
Testability,"OPOLOGYCONTAINERGRID_SOURCE_DIR}/CylinderGridTopology.h; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/SphereGridTopology.h; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/SparseGridMultipleTopology.h; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/SparseGridRamificationTopology.h; ). set(SOURCE_FILES; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/polygon_cube_intersection/fast_polygon_cube_intersection.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/polygon_cube_intersection/polygon_cube_intersection.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/GridTopology.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/RegularGridTopology.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/SparseGridTopology.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/CylinderGridTopology.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/SphereGridTopology.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/SparseGridMultipleTopology.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/SparseGridRamificationTopology.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Constant REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core Sofa.Component.Topology.Container.Constant). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_TOPOLOGY_CONTAINER_GRID_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_TOPOLOGY_CONTAINER_GRID_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/Grid/CMakeLists.txt:2385,Test,Tests,2385,Sofa/Component/Topology/Container/Grid/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/Grid/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"OT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.cpp); endif(). sofa_find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Topology REQUIRED). # LIBRARY; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/WinDepPack>""); endif(); # The default binary suffix for libraries/plugins is ""_d"" when using a debug build.; # since this is configuration specific it is a bit more convenient to put it as a debug compile definition for; # PluginManager.cpp, at the expense of being much less visible compare to having it in the generated; # SofaFramework/config.h; set_property(SOURCE ${SRC_ROOT}/system/PluginManager.cpp APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG ""SOFA_LIBSUFFIX=_d"" ). # DEPENDENCY LINKS AND INCLUDE DIRS; target_link_libraries(${PROJEC",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:6406,log,logging,6406,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,"PACKAGE_VERSION 1.14.0; TARGETS gtest AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""include""; INCLUDE_INSTALL_DIR ""extlibs/GTest""; ). set_target_properties(gtest PROPERTIES FOLDER Testing); set_target_properties(gtest_main PROPERTIES FOLDER Testing); endif(); elseif (NOT GTest_FOUND); message(FATAL_ERROR ""${PROJECT_NAME}: DEPENDENCY googletest NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install googletest, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # add custom googletest main; add_subdirectory(SofaGTestMain). set(SOFATESTINGSRC_ROOT ""src/sofa/testing""). set(HEADER_FILES; ${SOFATESTINGSRC_ROOT}/config.h.in; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.h; ${SOFATESTINGSRC_ROOT}/BaseTest.h; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.h; ${SOFATESTINGSRC_ROOT}/NumericTest.h; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.h; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.h; ). set(SOURCE_FILES; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.cpp; ${SOFATESTINGSRC_ROOT}/BaseTest.cpp; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.cpp; ${SOFATESTINGSRC_ROOT}/NumericTest.cpp; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.cpp; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.cpp; ). sofa_find_package(Sofa.Helper REQUIRED); sofa_find_package(Sofa.DefaultType REQUIRED); sofa_find_package(Sofa.Core REQUIRED); sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.DefaultType Sofa.Core Sofa.Simulation.Graph Sofa.SimpleApi GTest::gtest SofaGTestMain ); target_compile_options(${PROJECT_NAME} PUBLIC ""-DGTEST_LINKED_AS_SHARED_LIBRARY=1""). set(SOFA_TESTING_RESOURCES_DIR ""${CMAKE_CURRENT_SOURCE_DIR}/resources""). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKA",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt:2520,Test,Testing,2520,Sofa/framework/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt,1,['Test'],['Testing']
Testability,"PE parameter [#3436](https://github.com/sofa-framework/sofa/pull/3436) ; - [Simulation.Core] Clean Multithreading code [#3448](https://github.com/sofa-framework/sofa/pull/3448) ; - [Core] Minor cleaning [#3492](https://github.com/sofa-framework/sofa/pull/3492) . **Modules**; - [all] Remove code disabled in v21.06 [#3163](https://github.com/sofa-framework/sofa/pull/3163) ; - [Spring] RestSpringsForceField: Unify Vec/Rigid implementation [#3175](https://github.com/sofa-framework/sofa/pull/3175) ; - [LinearSolver.Direct] BTDLinearSolver: Clean debug informations and rename data [#3226](https://github.com/sofa-framework/sofa/pull/3226) ; - [all] Set of warning fixes [#3227](https://github.com/sofa-framework/sofa/pull/3227) ; - [All] Remove deprecation warnings while building the deprecated thing itself [#3236](https://github.com/sofa-framework/sofa/pull/3236) ; - [LinearAlgebra] Remove deprecated code [#3251](https://github.com/sofa-framework/sofa/pull/3251) ; - [tests] Fix remove SofaComponentAll plugin which doesn't exist anymore [#3266](https://github.com/sofa-framework/sofa/pull/3266) ; - [Test] Remove the output of a test from file versioning [#3285](https://github.com/sofa-framework/sofa/pull/3285) ; - [Collision] Cleaning pass on types [#3287](https://github.com/sofa-framework/sofa/pull/3287) ; - [S.C.MechanicalLoad] PlaneForcefield: Fix ""potential divide by zero"" warnings in msvc [#3315](https://github.com/sofa-framework/sofa/pull/3315) ; - [LinearAlgebra] Explicit instantiations and extern template for some matrices [#3334](https://github.com/sofa-framework/sofa/pull/3334) ; - [Mapping] Add checks at init in TopologicalMapping [#3339](https://github.com/sofa-framework/sofa/pull/3339) ; - [Topology.Container.Grid] trivial optimization in GridTopology [#3348](https://github.com/sofa-framework/sofa/pull/3348) ; - [All] Reduce calls to getValue [#3356](https://github.com/sofa-framework/sofa/pull/3356) ; - [all] Remove in-class typedefs pointing to common sofa::type ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:86966,test,tests,86966,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"PERTY ""RELOCATABLE_INSTALL_DIR""; BRIEF_DOCS ""Install directory of RELOCATABLE target""; FULL_DOCS ""Install directory of RELOCATABLE target""; ). # Enable the organisation in folders for generators that support; # it. (E.g. some versions of Visual Studio have 'solution folders'); set_property(GLOBAL PROPERTY USE_FOLDERS ON). ### Sofa using type double or float; set(SOFA_FLOATING_POINT_TYPE double CACHE STRING; ""Type used for floating point values in SOFA. It actually determines:; - what template instanciations will be compiled (via the definition of the; SOFA_FLOAT and SOFA_DOUBLE macros); - what is the type behind the 'SReal' typedef used throughout SOFA.""); set_property(CACHE SOFA_FLOATING_POINT_TYPE PROPERTY STRINGS float double). if(${SOFA_FLOATING_POINT_TYPE} STREQUAL double); set(SOFA_DOUBLE 1); set(SOFA_FLOAT 0); elseif(${SOFA_FLOATING_POINT_TYPE} STREQUAL float); set(SOFA_DOUBLE 0); set(SOFA_FLOAT 1); endif(). # If you really don't understand the negated logics of SOFA_DOUBLE and; # SOFA_FLOAT please consider using SOFA_WITH_FLOAT and SOFA_WITH_DOUBLE.; # Eg: SOFA_WITH_FLOAT indicate that you need to generate the; # float code and SOFA_WITH_DOUBLE indicates that you; # need to generate the double related code.; if(${SOFA_FLOATING_POINT_TYPE} STREQUAL float); set(SOFA_WITH_FLOAT 1); set(SOFA_WITH_DOUBLE 0); endif(); if(${SOFA_FLOATING_POINT_TYPE} STREQUAL double); set(SOFA_WITH_DOUBLE 1); set(SOFA_WITH_FLOAT 0); endif(). # Options; option(SOFA_DETECTIONOUTPUT_FREEMOTION ""Compile Sofa with the DETECTIONOUTPUT_FREEMOTION macro defined."" OFF); option(SOFA_NO_UPDATE_BBOX ""Compile Sofa with the SOFA_NO_UPDATE_BBOX macro defined."" OFF); option(SOFA_DUMP_VISITOR_INFO ""Compile Sofa with the SOFA_DUMP_VISITOR_INFO macro defined."" OFF); if(MSVC); option(SOFA_VECTORIZE ""(deprecated) Enable the use of SSE2 instructions by the compiler (Only available for MSVC)."" OFF); option(SOFA_ENABLE_SIMD ""Enable the use of SIMD instructions by the compiler (AVX/AVX2 for msvc, march=nativ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:1605,log,logics,1605,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['log'],['logics']
Testability,"REQUAL """"); foreach(dir ${SOFA_EXTERNAL_DIRECTORIES}); get_filename_component(name ${dir} NAME) # Get the name of the actual directory; message(""Adding external directory: ${name} (${dir})""); add_subdirectory(${dir} ""${CMAKE_CURRENT_BINARY_DIR}/external_directories/${name}""); endforeach(); endif(). ## Custom; if(EXISTS ""${CMAKE_CURRENT_LIST_DIR}/custom.cmake""); message(""Adding custom file""); include( ""custom.cmake"" ); endif(). ## IDE directories; # Sofa.Component; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES ""Sofa.Component.*"" AND NOT target MATCHES "".*_relocatable_install""); set_target_properties(${target} PROPERTIES FOLDER Sofa.Component) # IDE folder; endif(); endforeach(); # Testing; if(TARGET Sofa.Testing) # No need to search for test targets if tests are not enabled; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES "".*_test"" OR target MATCHES "".*_simutest""); set_target_properties(${target} PROPERTIES FOLDER Testing) # IDE folder; endif(); endforeach(); endif(); ##. ## Install configuration; #install(FILES ""${CMAKE_BINARY_DIR}/CMakeCache.txt"" DESTINATION . COMPONENT headers); install(FILES ""${CMAKE_SOURCE_DIR}/README.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/CHANGELOG.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/LICENSE-LGPL.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/Authors.txt"" DESTINATION . COMPONENT applications). option(SOFA_INSTALL_RESOURCES_FILES ""Copy resources files (etc/, share/, examples/, tools/sofa-launcher/) when installing"" ON); ## Install resource files; if(SOFA_INSTALL_RESOURCES_FILES); install(DIRECTORY share/ DESTINATION share/sofa COMPONENT resources); install(DIRECTORY examples/ DESTINATION share/sofa/examples COMPONENT resources); install(DIRECTORY tools/sofa-launcher/ DESTINATION share/sofa/sofa-launcher COMPONENT resources); endif(). file(WRITE ""${CMAKE_BINARY_",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:9897,Test,Testing,9897,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['Test'],['Testing']
Testability,ROOT}/io/BaseFileAccess.cpp; ${SRC_ROOT}/io/FileAccess.cpp; ${SRC_ROOT}/io/File.cpp; ${SRC_ROOT}/io/Image.cpp; ${SRC_ROOT}/io/ImageDDS.cpp; ${SRC_ROOT}/io/ImageRAW.cpp; ${SRC_ROOT}/io/Mesh.cpp; ${SRC_ROOT}/io/MeshOBJ.cpp; ${SRC_ROOT}/io/MeshGmsh.cpp; ${SRC_ROOT}/io/MeshTopologyLoader.cpp; ${SRC_ROOT}/io/SphereLoader.cpp; ${SRC_ROOT}/io/STBImage.cpp; ${SRC_ROOT}/io/TriangleLoader.cpp; ${SRC_ROOT}/io/XspLoader.cpp; ${SRC_ROOT}/kdTree.cpp; ${SRC_ROOT}/system/DynamicLibrary.cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:5357,log,logging,5357,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,ROOT}/io/Image.cpp; ${SRC_ROOT}/io/ImageDDS.cpp; ${SRC_ROOT}/io/ImageRAW.cpp; ${SRC_ROOT}/io/Mesh.cpp; ${SRC_ROOT}/io/MeshOBJ.cpp; ${SRC_ROOT}/io/MeshGmsh.cpp; ${SRC_ROOT}/io/MeshTopologyLoader.cpp; ${SRC_ROOT}/io/SphereLoader.cpp; ${SRC_ROOT}/io/STBImage.cpp; ${SRC_ROOT}/io/TriangleLoader.cpp; ${SRC_ROOT}/io/XspLoader.cpp; ${SRC_ROOT}/kdTree.cpp; ${SRC_ROOT}/system/DynamicLibrary.cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:5441,log,logging,5441,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,"SECONTACT_SOURCE_DIR}/PenalityContactForceField.cpp; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/RayContact.cpp; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/RuleBasedContactManager.cpp; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/StickContactConstraint.cpp; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/TetrahedronBarycentricPenalityContact.cpp; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/TetrahedronFrictionContact.cpp; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/TetrahedronRayContact.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Mapper REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian REQUIRED) # FrictionContact needs UnilateralCC, StickContact BilateralInteractionConstraint; sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Mapper); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.Spring). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_COLLISION_RESPONSE_CONTACT_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_COLLISION_RESPONSE_CONTACT_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Response/Contact/CMakeLists.txt:3789,Test,Tests,3789,Sofa/Component/Collision/Response/Contact/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Response/Contact/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"SOURCE_DIR}/PolynomialRestShapeSpringsForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/PolynomialSpringsForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/QuadBendingSprings.cpp; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/QuadularBendingSprings.cpp; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/RegularGridSpringForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/RepulsiveSpringForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/RestShapeSpringsForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/SpringForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/StiffSpringForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/TriangleBendingSprings.cpp; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/TriangularBendingSprings.cpp; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/TriangularBiquadraticSpringsForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/TriangularQuadraticSpringsForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/VectorSpringForceField.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Grid REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Grid). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_SOLIDMECHANICS_SPRING_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_SOLIDMECHANICS_SPRING_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/Spring/CMakeLists.txt:6211,Test,Tests,6211,Sofa/Component/SolidMechanics/Spring/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/Spring/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"SofaGTestMain; *************. The SofaGTestMain library contains only a main function that initializes Sofa; and runs a Google Test test suite. (It replaces the gtest_main library provided; with Google Test, that provides a that contains a minimal main() function.); Each test executable is simply linked against it, unless it also needs to run; its own main() function.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/SofaGTestMain/readme.txt:127,Test,Test,127,Sofa/framework/Testing/SofaGTestMain/readme.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/SofaGTestMain/readme.txt,4,"['Test', 'test']","['Test', 'test']"
Testability,"Solver] Apply fill in permutation in SparseLDLSolver [#2762]( https://github.com/sofa-framework/sofa/pull/2762 ); - [SofaSparseSolver] Introduction of an asynchronous LDL solver [#2661]( https://github.com/sofa-framework/sofa/pull/2661 ); - [SofaSparseSolver] Added the choice to compute the decomposition at each step [#2756]( https://github.com/sofa-framework/sofa/pull/2756 ). **Plugins / Projects**; - [plugins] Add BeamAdapter as a new plugin [#2890]( https://github.com/sofa-framework/sofa/pull/2890 ); - [ArticulatedSystemPlugin] ArticulatedSystemMapping new features [#2803]( https://github.com/sofa-framework/sofa/pull/2803 ); - [ArticulatedSystemPlugin] New example [#2804]( https://github.com/sofa-framework/sofa/pull/2804 ); - [SofaCUDA] Add ConstantForceField, MultiMapping and SubsetMultiMapping [#2557]( https://github.com/sofa-framework/sofa/pull/2557 ); - [SofaCUDA] Add benchmark scenes to check CudaMeshSpringForceField [#2556]( https://github.com/sofa-framework/sofa/pull/2556 ); - [SofaCUDA] Add benchmarks logs in .csv file [#2588]( https://github.com/sofa-framework/sofa/pull/2588 ); - [SofaCUDA] Add support for NearestPointROI [#2620]( https://github.com/sofa-framework/sofa/pull/2620 ); - [SofaCUDA] Add support of CudaVector for qt gui dataWidget [#2558]( https://github.com/sofa-framework/sofa/pull/2558 ); - [SofaMatrix] A new plugin adding tools for linear system matrix [#2517]( https://github.com/sofa-framework/sofa/pull/2517 ); - [SofaMatrix] Eigen can be used to reorder a mesh in order to reduce fill-in [#2875]( https://github.com/sofa-framework/sofa/pull/2875 ); - [SofaMatrix] Export the compliance matrix of a constraint solver [#2782]( https://github.com/sofa-framework/sofa/pull/2782 ); - [SofaMatrix] More details in the readme file [#2580]( https://github.com/sofa-framework/sofa/pull/2580 ); - [SofaMatrix] Setup arithmetic precision for matrix export [#2724]( https://github.com/sofa-framework/sofa/pull/2724 ). **Examples / Scenes**; - [examples] An exa",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:102684,benchmark,benchmarks,102684,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['benchmark', 'log']","['benchmarks', 'logs']"
Testability,"Tasks.h; src/MultiThreading/BeamLinearMapping_mt.h; src/MultiThreading/BeamLinearMapping_mt.inl; src/MultiThreading/BeamLinearMapping_tasks.inl; src/MultiThreading/ParallelBVHNarrowPhase.h; src/MultiThreading/ParallelBruteForceBroadPhase.h; src/MultiThreading/ParallelHexahedronFEMForceField.h; src/MultiThreading/ParallelHexahedronFEMForceField.inl; ); endif(). find_package(Sofa.Simulation.Common REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.Elastic REQUIRED); sofa_find_package(Sofa.Component.Mapping.Linear REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.LinearSolver.Iterative REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Simulation.Common); target_link_libraries(${PROJECT_NAME} Sofa.Component.Collision.Detection.Algorithm); target_link_libraries(${PROJECT_NAME} Sofa.Component.SolidMechanics.FEM.Elastic); target_link_libraries(${PROJECT_NAME} Sofa.Component.Mapping.Linear); target_link_libraries(${PROJECT_NAME} Sofa.Component.StateContainer); target_link_libraries(${PROJECT_NAME} Sofa.Component.SolidMechanics.Spring); target_link_libraries(${PROJECT_NAME} Sofa.Component.LinearSolver.Iterative). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; RELOCATABLE ""plugins""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(MULTITHREADING_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(MULTITHREADING_BUILD_TESTS); enable_testing(); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt:4867,Test,Tests,4867,applications/plugins/MultiThreading/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,"This is libQGLViewer version 2.8.0. Packaged on March 13, 2022. The complete change log is available in doc/changeLog.html. The latest releases and changeLog are available at:; http://www.libqglviewer.com/changeLog.html; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/changeLog.txt:84,log,log,84,Sofa/GUI/Qt/libQGLViewer/changeLog.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/changeLog.txt,1,['log'],['log']
Testability,T}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/io/BaseFileAccess.cpp; ${SRC_ROOT}/io/FileAccess.cpp; ${SRC_ROOT}/io/File.cpp; ${SRC_ROOT}/io/Image.cpp; ${SRC_ROOT}/io/ImageDDS.cpp; ${SRC_ROOT}/io/ImageRAW.cpp; ${SRC_ROOT}/io/Mesh.cpp; ${SRC_ROOT}/io/MeshOBJ.cpp; ${SRC_ROOT}/io/MeshGmsh.cpp; ${SRC_ROOT}/io/MeshTopologyLoader.cpp; ${SRC_ROOT}/io/SphereLoader.cpp; ${SRC_ROOT}/io/STBImage.cpp; ${SRC_ROOT}/io/TriangleLoader.cpp; ${SRC_ROOT}/io/XspLoader.cpp; ${SRC_ROOT}/kdTree.cpp; ${SRC_ROOT}/system/DynamicLibrary.cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/Fi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:5315,log,logging,5315,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,T}/io/STBImage.cpp; ${SRC_ROOT}/io/TriangleLoader.cpp; ${SRC_ROOT}/io/XspLoader.cpp; ${SRC_ROOT}/kdTree.cpp; ${SRC_ROOT}/system/DynamicLibrary.cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.cpp); endif(). sofa_find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Topology REQUIRED). # LIBRARY; add_library(${PROJECT_NAME} SHARED ${HE,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:5684,log,logging,5684,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,T}/kdTree.cpp; ${SRC_ROOT}/system/DynamicLibrary.cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.cpp); endif(). sofa_find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Topology REQUIRED). # LIBRARY; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directorie,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:5779,log,logging,5779,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,T}/kdTree.inl; ${SRC_ROOT}/list.h; ${SRC_ROOT}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingCubeUtility.cpp; ${SRC_ROOT}/NameDecoder.cpp; ${SRC_ROOT}/OptionsGroup.cpp; ${SRC_,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:3068,log,logging,3068,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,T}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingCubeUtility.cpp; ${SRC_ROOT}/NameDecoder.cpp; ${SRC_ROOT}/OptionsGroup.cpp; ${SRC_ROOT}/ScopedAdvancedTimer.cpp; ${SRC_ROOT}/Polynomial_LD.cpp; ${SRC_ROOT}/RandomGenerator.cpp; ${SRC_ROOT}/StringUtils.cpp; ${SRC_ROOT}/TagFactory.cpp; ${SRC_ROOT}/TriangleOctree.cpp; ${SRC_ROOT}/Utils.cpp; ${SRC_ROOT}/decompose.cpp; ${SRC_ROOT}/init.cpp; ${SRC_R,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:3335,log,logging,3335,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,Update version of the actions/github-script [#4522](https://github.com/sofa-framework/sofa/pull/4522); - [GUI] Remove the New/Save/SaveAs menu options [#4523](https://github.com/sofa-framework/sofa/pull/4523); - [all] Additional fixes further to v24.06 lifecycle [#4540](https://github.com/sofa-framework/sofa/pull/4540); - [Core] Update NarrowPhaseDetection.cpp use prefix [#4557](https://github.com/sofa-framework/sofa/pull/4557); - [Geomagic] Update GeomagicDriver.cpp to fire error when hd.h is not found [#4576](https://github.com/sofa-framework/sofa/pull/4576); - [CMake] Upgrade cmake_minimum_required to 3.22 [#4586](https://github.com/sofa-framework/sofa/pull/4586); - [Core] Remove unused debug trace [#4590](https://github.com/sofa-framework/sofa/pull/4590); - [Core] cmake: Remove last traces of Sofa.Component.Compat [#4596](https://github.com/sofa-framework/sofa/pull/4596); - [LinearAlgebra] Remove empty source file [#4599](https://github.com/sofa-framework/sofa/pull/4599); - [Type] Clean and test MatSym [#4600](https://github.com/sofa-framework/sofa/pull/4600); - [tests] Use appropriate gtest macro [#4607](https://github.com/sofa-framework/sofa/pull/4607); - [LinearSystem] Remove development artifact [#4620](https://github.com/sofa-framework/sofa/pull/4620); - [all] Minor last fixes using SimpleApi [#4627](https://github.com/sofa-framework/sofa/pull/4627); - [SolidMechanics.FEM] Small update on container access to avoid unecessary check [#4639](https://github.com/sofa-framework/sofa/pull/4639); - [AnimationLoop] Rename Data [#4664](https://github.com/sofa-framework/sofa/pull/4664); - [Guidelines] Format cpp code [#4695](https://github.com/sofa-framework/sofa/pull/4695); - [all] Remove some warnings [#4698](https://github.com/sofa-framework/sofa/pull/4698); - [examples] Run PluginFinder on examples [#4707](https://github.com/sofa-framework/sofa/pull/4707); - [examples] Remove examples using DefaultCollisionGroupManager [#4708](https://github.com/sofa-framework/sof,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:16386,test,test,16386,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,[#4467](https://github.com/sofa-framework/sofa/pull/4467); - [All] CMake: Remove deprecation warnings [#4469](https://github.com/sofa-framework/sofa/pull/4469); - [framework] Fix typo [#4474](https://github.com/sofa-framework/sofa/pull/4474); - [all] Apply nested namespaces [#4482](https://github.com/sofa-framework/sofa/pull/4482); - [all] Missing override keyword [#4483](https://github.com/sofa-framework/sofa/pull/4483); - [all] Convert some loops to range-based [#4485](https://github.com/sofa-framework/sofa/pull/4485); - [Config] CMake: fix warning about upper/lowercase for Difflib [#4486](https://github.com/sofa-framework/sofa/pull/4486); - [README] Update badge with Discord [#4498](https://github.com/sofa-framework/sofa/pull/4498); - [Plugins] Move MeshSTEPLoader to an external repository [#4504](https://github.com/sofa-framework/sofa/pull/4504); - [Plugins] Gather external plugins configs in a same folder (proposal) [#4505](https://github.com/sofa-framework/sofa/pull/4505); - [image] Fix scene test [#4517](https://github.com/sofa-framework/sofa/pull/4517); - [GitHub] Update version of the actions/github-script [#4522](https://github.com/sofa-framework/sofa/pull/4522); - [GUI] Remove the New/Save/SaveAs menu options [#4523](https://github.com/sofa-framework/sofa/pull/4523); - [all] Additional fixes further to v24.06 lifecycle [#4540](https://github.com/sofa-framework/sofa/pull/4540); - [Core] Update NarrowPhaseDetection.cpp use prefix [#4557](https://github.com/sofa-framework/sofa/pull/4557); - [Geomagic] Update GeomagicDriver.cpp to fire error when hd.h is not found [#4576](https://github.com/sofa-framework/sofa/pull/4576); - [CMake] Upgrade cmake_minimum_required to 3.22 [#4586](https://github.com/sofa-framework/sofa/pull/4586); - [Core] Remove unused debug trace [#4590](https://github.com/sofa-framework/sofa/pull/4590); - [Core] cmake: Remove last traces of Sofa.Component.Compat [#4596](https://github.com/sofa-framework/sofa/pull/4596); - [LinearAlgebra] Remo,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:15301,test,test,15301,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,"[SofaGeneralLoader] Make GridMeshCreator work again [#2473]( https://github.com/sofa-framework/sofa/pull/2473 ). ____________________________________________________________. ## [v21.06.02]( https://github.com/sofa-framework/sofa/tree/v21.06.02 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.01...v21.06.02 ). ### Bug Fixes; **Architecture**; - [CMake] Clean Sofa.Core CMakeLists + Add missing headers [#2444]( https://github.com/sofa-framework/sofa/pull/2444 ); - [SofaMeshCollision] Fix cmake generated config file [#2400]( https://github.com/sofa-framework/sofa/pull/2400 ). **Modules**; - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-framework/sofa/pull/2360 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framework/sofa/pull/2352 ). ____________________________________________________________. ## [v21.06.01]( https://github.com/sofa-framework/sofa/tree/v21.06.01 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.00...v21.06.01 ). ### Improvements; **Architecture**; - [CMake] CLEAN and reenable old macro for git infos [#2309]( https://github.com/sofa-framework/sofa/pull/2309 ); - [SofaMacros] Improve sofa_install_git_infos [#2373]( https://github.com/sofa-framework/sofa/pull/2373 ). ### Bug Fixes; **Architecture**; - [CMake] Fix return values of Qt5/Qt6 find_packages [#2346]( https://github.com/sofa-framework/sofa/pull/2346 ). **Modules**; - [Sofa.Type] FIX createFromRotationVEctor, the inequality was wrong [#2332]( https://github.com/sofa-framework/sofa/pull/2332 ); - [SofaBoundaryCondition] Fix ProjectToLineConstraint_RemovingMeshTest.scn [#2241]( https://github.com/sofa-framework/sofa/pull/2241 ); - [SofaConstraint] fix segfault in GenericConstraintSolver [#2265]( https://github.com/sofa-framework/sofa/pull/2265 ); - [SofaGeneralEngine] Fix a typo in the PairBoxRoi.inl [#2324]( https://github.com/sofa-framework/sofa/pull/2324 ). **Plugins ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:165562,log,log,165562,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,"]** Add battery of tests on topology containers [#708]( https://github.com/sofa-framework/sofa/pull/708 ); - **[SofaBaseTopology]** Topology change propagation to Mechanical State [#838]( https://github.com/sofa-framework/sofa/pull/838 ); - **[SofaBaseMechanics]** Optimize barycentric mapping initialization [#798]( https://github.com/sofa-framework/sofa/pull/798 ); - [SofaBoundaryCondition] Factorize partial fixedconstraint [#718]( https://github.com/sofa-framework/sofa/pull/718 ); - [SofaConstraint] add a force data field in SlidingConstraint [#780]( https://github.com/sofa-framework/sofa/pull/780 ); - [SofaConstraint] ADD Data to show constraint forces [#840]( https://github.com/sofa-framework/sofa/pull/840 ); - [SofaConstraint] allow call of constraints' storeLambda() [#854]( https://github.com/sofa-framework/sofa/pull/854 ); - **[SofaCore]** Add new (simpler) DataEngine implementation [#760]( https://github.com/sofa-framework/sofa/pull/760 ); - [SofaExporter] ADD in WriteState all required tests on data and clean export with msg API [#714]( https://github.com/sofa-framework/sofa/pull/714 ); - **[SofaFramework]** Improve external dirs fetching in SofaMacros [#759]( https://github.com/sofa-framework/sofa/pull/759 ); - [SofaGeneralAnimationLoop] Improvement on MMMapper [#772]( https://github.com/sofa-framework/sofa/pull/772 ); - **[SofaHelper]** EDIT FileSystem and FileRepository for regression tests [#830]( https://github.com/sofa-framework/sofa/pull/830 ); - **[SofaKernel]** Improve Displayflags [#671]( https://github.com/sofa-framework/sofa/pull/671 ); - **[SofaKernel]** Add a ""sofa_add_module"" in SofaMacro.cmake [#732]( https://github.com/sofa-framework/sofa/pull/732 ); - **[SofaKernel]** use string in base object description [#862]( https://github.com/sofa-framework/sofa/pull/862 ); - [SofaMeshCollision] TriangleModel optimization when topology changes occur [#839]( https://github.com/sofa-framework/sofa/pull/839 ); - [SofaSparseSolver] ADD saveMatrixToFile to ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:280164,test,tests,280164,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,_ROOT}/io/SphereLoader.h; ${SRC_ROOT}/io/STBImage.h; ${SRC_ROOT}/io/TriangleLoader.h; ${SRC_ROOT}/kdTree.h; ${SRC_ROOT}/kdTree.inl; ${SRC_ROOT}/list.h; ${SRC_ROOT}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROO,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:2957,log,logging,2957,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,"_x);; ; /// src and dest must have the same size.; /// Performs: dest[i][j] += src[offset + i][j] 0<= i < src_entries 0<= j < 3 (for 3D objects) 0 <= j < 2 (for 2D objects); /// @param offset the offset in the BaseVector where the scalar values will be used. It will be updated to the first scalar value after the ones used by this operation when this method returns; virtual void addFromBaseVectorSameSize(core::VecId dest, const defaulttype::BaseVector* src, unsigned int &offset);; }; ``` ; More info about Doxygen here: https://www.stack.nl/~dimitri/doxygen/manual/index.html . ### Good practices; - [G1] You should try to use as few `#include` directive as possible.; - [G2] You should limit as much as possible the amount of code in included files (*.h, *.inl).; - [G3] All definitions should reside in source files. The header files should declare an interface only.; - [G4] Variables should be initialized when they are declared.; - [G5] You should use `const` profusely.; - [G6] You should use `assert` profusely.; - [G7] You must avoid the `using` directive in header files (.h and .inl): ~~`using namespace foo;`~~; - [G8] You should declare automatic variables only when you need them (not before).; - [G9] You must always initialize pointers, either to the address of something, or to `nullptr`; - [G10] You may use the type specifier `auto` (since C++11) when:; - you are in a for loop; - you deal with iterators; - you deal with long typenames AND or when the variable type is obvious. ## SOFA specific rules; - Tricky code should not be commented but rewritten! In general, the use of comments should be minimized by making the code self-documenting by appropriate name choices and an explicit logical structure.; - The use of magic numbers in the code should be avoided. Numbers other than 0 and 1 should be declared as named constants instead.; - The definition of ε-definition of limit ('epsilon', an arbitrarily small positive quantity) should not be code specific but rather use t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:4850,assert,assert,4850,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,1,['assert'],['assert']
Testability,"a/pull/337 ); - add verification if help is not null from displayed data [#382]( https://github.com/sofa-framework/sofa/pull/382 ); - improve the html DocBrowser [#540]( https://github.com/sofa-framework/sofa/pull/540 ); - [SceneChecker]; - Add mechanism to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - [SofaDistanceGrid]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaImplicitField]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaPython]; - Add unicode to string convertion and a warning message in Binding_BaseContext::pythonToSofaDataString [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add unicode to string convertion in Binding_BaseData::SetDataValuePython [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add a test [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add GIL management [#326]( https://github.com/sofa-framework/sofa/pull/326 ); - Add support for Sofa.msg_ with emitter other than a string [#335]( https://github.com/sofa-framework/sofa/pull/335 ); - Adding new features for AdvancedTimer [#360]( https://github.com/sofa-framework/sofa/pull/360 ); - forward sys.argv to python scripts [#368]( https://github.com/sofa-framework/sofa/pull/368 ); - sparse matrix aliasing scipy/eigen [#411]( https://github.com/sofa-framework/sofa/pull/411 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ). **Other**; - [Tools]; - Update astyle config [#550]( https://github.com/sofa-framework/sofa/pull/550 ). ### Bug Fixes. **Kernel modules**; - [All]; - CMake: Fix and clean boost, when using Sofa as an external lib [#421]( https://github.com/sofa-framework/sofa/pull/421 ); - Fix computeBBox functions [#527]( https://github.com/sofa-fra",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:310722,test,test,310722,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,aTopologyMapping] adds ellipse feature to Edge2QuadTopologyMapping [#1861]( https://github.com/sofa-framework/sofa/pull/1861 ). **Plugins / Projects**; - [CGALPlugin] new features [#2124]( https://github.com/sofa-framework/sofa/pull/2124 ). ### Improvements; **Architecture**; - [CMake] Speedup configure step [#1837]( https://github.com/sofa-framework/sofa/pull/1837 ); - [CMake] ADD option to fetch pull-request commits in ExternalProject [#1961]( https://github.com/sofa-framework/sofa/pull/1961 ); - [CMake] ADD option to enable/disable compatibility layer [#2216]( https://github.com/sofa-framework/sofa/pull/2216 ). **Modules**; - **[SofaBaseCollision]** BVH narrow phase [#2043]( https://github.com/sofa-framework/sofa/pull/2043 ); - **[SofaBaseCollision]** Introduce brute force broad phase [#2010]( https://github.com/sofa-framework/sofa/pull/2010 ); - **[SofaBaseCollision]** Speedup direct SAP [#1917]( https://github.com/sofa-framework/sofa/pull/1917 ); - **[SofaBaseMechanics_test]** Add TopologicalChanges unit tests for DiagonalMass [#2176]( https://github.com/sofa-framework/sofa/pull/2176 ); - **[SofaBaseTopology]** add intersection methods [#2131]( https://github.com/sofa-framework/sofa/pull/2131 ); - [SofaBoundaryCondition] Add callback in Partial/FixedConstraint [#1806]( https://github.com/sofa-framework/sofa/pull/1806 ); - [SofaBoundaryCondition] Add projectVelocity in FixedConstraint and PartialFixedConstraint [#1558]( https://github.com/sofa-framework/sofa/pull/1558 ); - [SofaBoundaryCondition_test] Add TopologicalChanges unit test for FixedConstraint [#2136]( https://github.com/sofa-framework/sofa/pull/2136 ); - [SofaConstraint] GenericConstraintSolver: compute compliances concurrently [#1862]( https://github.com/sofa-framework/sofa/pull/1862 ); - [SofaConstraint] Parallel free motion and collision detection [#2040]( https://github.com/sofa-framework/sofa/pull/2040 ); - **[SofaCore]** Add PCH support in CMakeLists.txt [#1727]( https://github.com/sofa-framework,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:176954,test,tests,176954,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,ace some explicit instanciations on double with SReal [#3629](https://github.com/sofa-framework/sofa/pull/3629) ; - [Topology.Container.Grid] RegularGrid: Fix rounding errors with SReal=float [#3636](https://github.com/sofa-framework/sofa/pull/3636); - [Collision.Geometry] Fix transparency while displaying the Bounding Collision Cubemodel [#3658](https://github.com/sofa-framework/sofa/pull/3658) ; - [MechanicalLoad] Fix ConstantForceField when no force given [#3670](https://github.com/sofa-framework/sofa/pull/3670) ; - [Collision] Make the (CubeModel) BoundingTree deterministic [#3687](https://github.com/sofa-framework/sofa/pull/3687) ; - [IO.Mesh] Fix UB when filename is empty [#3689](https://github.com/sofa-framework/sofa/pull/3689) ; - [FEM.Elastic] Check for nullptr in BeamFEMForceField [#3690](https://github.com/sofa-framework/sofa/pull/3690) ; - [Spring] Check for nullptr in RestShapeSpringsForceField [#3691](https://github.com/sofa-framework/sofa/pull/3691) ; - [Testing] Fix CMake config after removal of compat [#3694](https://github.com/sofa-framework/sofa/pull/3694) ; - [LinearAlgebra] Fix crash when matrix has no nonzero values [#3700](https://github.com/sofa-framework/sofa/pull/3700) ; - [IO.Mesh] Fix mesh creation if load called multiple times [#3702](https://github.com/sofa-framework/sofa/pull/3702) ; - [LinearSolver.Direct] Make sure the matrix is factorized in SparseCholeskySolver [#3706](https://github.com/sofa-framework/sofa/pull/3706) ; - [GUI.Qt] Register meta type to fix asynchronous Qt call [#3749](https://github.com/sofa-framework/sofa/pull/3749) ; - [Tests] S.Components tests compiles with SReal=float [#3755](https://github.com/sofa-framework/sofa/pull/3755) ; - [Mapping.NonLinear] Fix SquareMapping applyDJT [#3761](https://github.com/sofa-framework/sofa/pull/3761); - [LinearAlgebra] Restore insertion operator for BaseVector [#3775](https://github.com/sofa-framework/sofa/pull/3775) ; - [StateContainer] Fix bug in dynamic data registration [#378,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:57506,Test,Testing,57506,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Testing']
Testability,"age, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_TestPlugin ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_TestPlugin); {; usePlugin(TestPlugin) } . if your plugin depends on other plugins, edit file TestPlugin-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. TestPlugin.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initTestPlugin.h. a template of user documentation is found in TestPlugin.tex. Is should; be filled in for every component in the plugin, then compiled with your; favourite Latex distribution. The filename should match the name of the; component. ; the examples are in examples/; . The first one is TestPlugin.scn, and when; runSOFA; opens it, an html page pops; up, with a link to the plugin documentation. Intellectual; property and rights. Authors. You. Contact. You@your.institute. License. Your can distribute this plugin; under; the same license as the core of SOFA, or any other license of your; choice. Patents. APP registration. Sponsors. Do not forget to thank your; sponsors, they love it !. HowTo; Code documentation . can be generated using doxygen. In Unix; systems, simply type doxygen; Doxyfile in the doc directory. LaTeX formulas. can be directly copy-pasted from .tex to this html document thanks to the mathjax config and; script included in the header. Equation numbering and cross-referencing works, as well a newcommand. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html:2103,Test,TestPlugin,2103,applications/plugins/SofaTest/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html,2,['Test'],['TestPlugin']
Testability,"aint.Lagrangian.Solver] Add events in the constraint solver pipeline [#3418](https://github.com/sofa-framework/sofa/pull/3418) ; - [FEM.Elastic] Speedup hexa drawing in force field [#3420](https://github.com/sofa-framework/sofa/pull/3420) ; - [Visual] Introduce TrailRenderer [#3471](https://github.com/sofa-framework/sofa/pull/3471) ; - [Solver.Direct] Unit tests on empty system [#3500](https://github.com/sofa-framework/sofa/pull/3500) ; - [MechanicalLoad] Move getValue call out of the loops [#3503](https://github.com/sofa-framework/sofa/pull/3503) . **Plugins / Projects**; - [SofaCUDA] Add ConstraintCorrection instantiation in CudaVec3f/CudaVec3f1 [#3004](https://github.com/sofa-framework/sofa/pull/3004) ; - [SofaCUDA] Make CudaConstantForceField compatible with CudaRigid types [#3164](https://github.com/sofa-framework/sofa/pull/3164) ; - [GUI.performer] Add remove elements function for LineCollisionModel [#3239](https://github.com/sofa-framework/sofa/pull/3239) ; - [Regression] Test Eigen solvers scenes for regression [#3326](https://github.com/sofa-framework/sofa/pull/3326); - [Regression] Add HexahedronFEMForceFieldAndMass to regression tests [#3367](https://github.com/sofa-framework/sofa/pull/3367) ; - [SofaCarving] Update and add more tests in SofaCarving_test [#3407](https://github.com/sofa-framework/sofa/pull/3407) ; - [SofaCuda] Add method in CudaVector Accessor and CudaBilateralInteractionConstraint [#3460](https://github.com/sofa-framework/sofa/pull/3460) ; - [SofaPhysicsAPI] Add several methods using output parameters [#3520](https://github.com/sofa-framework/sofa/pull/3520) ; - [SofaPhysicsAPI] Add C bindings to access C++ api [#3539](https://github.com/sofa-framework/sofa/pull/3539) ; - [SofaPhysicsAPI] Add methods and C bindings to load SOFA ini file, plugins and messageHandler [#3540](https://github.com/sofa-framework/sofa/pull/3540) . ### Bug Fixes. **Architecture**; - [Config] Rename ide folder for libraries [#3214](https://github.com/sofa-framework",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:76029,Test,Test,76029,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Test']
Testability,"ake] FIX out-of-tree SofaGui and runSofa locations [#3229](https://github.com/sofa-framework/sofa/pull/3229); - [Sofa.Type] Fix compile-time Mat and Vec [#3281](https://github.com/sofa-framework/sofa/pull/3281) ; - [Simulation.Core] Fix import of required plugins [#3322](https://github.com/sofa-framework/sofa/pull/3322) ; - [Topology] Fix internal infinite update loop in TopologySubsetData remove process [#3330](https://github.com/sofa-framework/sofa/pull/3330) ; - [Topology] Update getLastElementIndex in TopologySubsetIndices [#3331](https://github.com/sofa-framework/sofa/pull/3331) ; - [Core.Collision] Fix memory leak in NarrowPhaseDetection and IntersectorFactory [#3337](https://github.com/sofa-framework/sofa/pull/3337) ; - [Type] Remove explicit template instantiation to restore performances [#3349](https://github.com/sofa-framework/sofa/pull/3349) ; - [Topology] Fix topologyHandler removal [#3369](https://github.com/sofa-framework/sofa/pull/3369) ; - [Mapping.Linear] Fix assert [#3432](https://github.com/sofa-framework/sofa/pull/3432) ; - [DefaultType] fix rigidcoord compilation [#3462](https://github.com/sofa-framework/sofa/pull/3462) ; - Revert ""[Sofa.Core] Linear time getRoot() method in BaseNode and Node"" [#3464](https://github.com/sofa-framework/sofa/pull/3464) ; - [Sofa.Core, SofaSphFluid] Fix compilation with MSVC 2022, v17.4 [#3466](https://github.com/sofa-framework/sofa/pull/3466) ; - [Simulation.Core] Add the _API flag to Task::Status [#3543](https://github.com/sofa-framework/sofa/pull/3543) ; - [Core] Missing include in SingleStateAccessor [#3547](https://github.com/sofa-framework/sofa/pull/3547) ; - [Helper] Fix GenerateRigidMass redirection [#3560](https://github.com/sofa-framework/sofa/pull/3560) . **Modules**; - [Topology] Fix initTopology call chains for mesh without topology [#3216](https://github.com/sofa-framework/sofa/pull/3216) ; - [Constraint.Lagrangian.Solver] fixes verbose GenericConstraintSolver [#3232](https://github.com/sofa-framework",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:78159,assert,assert,78159,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['assert'],['assert']
Testability,"al] Introduce TrailRenderer [#3471](https://github.com/sofa-framework/sofa/pull/3471) ; - [Solver.Direct] Unit tests on empty system [#3500](https://github.com/sofa-framework/sofa/pull/3500) ; - [MechanicalLoad] Move getValue call out of the loops [#3503](https://github.com/sofa-framework/sofa/pull/3503) . **Plugins / Projects**; - [SofaCUDA] Add ConstraintCorrection instantiation in CudaVec3f/CudaVec3f1 [#3004](https://github.com/sofa-framework/sofa/pull/3004) ; - [SofaCUDA] Make CudaConstantForceField compatible with CudaRigid types [#3164](https://github.com/sofa-framework/sofa/pull/3164) ; - [GUI.performer] Add remove elements function for LineCollisionModel [#3239](https://github.com/sofa-framework/sofa/pull/3239) ; - [Regression] Test Eigen solvers scenes for regression [#3326](https://github.com/sofa-framework/sofa/pull/3326); - [Regression] Add HexahedronFEMForceFieldAndMass to regression tests [#3367](https://github.com/sofa-framework/sofa/pull/3367) ; - [SofaCarving] Update and add more tests in SofaCarving_test [#3407](https://github.com/sofa-framework/sofa/pull/3407) ; - [SofaCuda] Add method in CudaVector Accessor and CudaBilateralInteractionConstraint [#3460](https://github.com/sofa-framework/sofa/pull/3460) ; - [SofaPhysicsAPI] Add several methods using output parameters [#3520](https://github.com/sofa-framework/sofa/pull/3520) ; - [SofaPhysicsAPI] Add C bindings to access C++ api [#3539](https://github.com/sofa-framework/sofa/pull/3539) ; - [SofaPhysicsAPI] Add methods and C bindings to load SOFA ini file, plugins and messageHandler [#3540](https://github.com/sofa-framework/sofa/pull/3540) . ### Bug Fixes. **Architecture**; - [Config] Rename ide folder for libraries [#3214](https://github.com/sofa-framework/sofa/pull/3214) ; - [CMake] FIX parent modules library consistency [#3225](https://github.com/sofa-framework/sofa/pull/3225) ; - [CMake] FIX out-of-tree SofaGui and runSofa locations [#3229](https://github.com/sofa-framework/sofa/pull/3229); - [So",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:76295,test,tests,76295,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,amework/sofa/pull/1780 ); - [SofaOpenCL] Fix compilation [#1795]( https://github.com/sofa-framework/sofa/pull/1795 ); - [SofaPardisoSolver] Fix plugin and add example [#1830]( https://github.com/sofa-framework/sofa/pull/1830 ); - [SofaRigid] fixes applyJT of RigidMapping [#1813]( https://github.com/sofa-framework/sofa/pull/1813 ); - [SofaSphFluid] Remove std::execution usage [#1684]( https://github.com/sofa-framework/sofa/pull/1684 ). **Examples / Scenes**; - [Scenes] Fix (new?) failing scenes on the CI [#1798]( https://github.com/sofa-framework/sofa/pull/1798 ). ### Cleanings; **Plugins / Projects**; - [SofaPython] CLEAN PythonEnvironment info messages [#1835]( https://github.com/sofa-framework/sofa/pull/1835 ); - [SofaCUDA] Renaming cudaMatrix methods to use rowSize and colSize [#1788]( https://github.com/sofa-framework/sofa/pull/1788 ). ____________________________________________________________. ## [v20.12.00]( https://github.com/sofa-framework/sofa/tree/v20.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.06.01...v20.12.00 ). ### SOFA-NG; Follow the SOFA-NG project on [its board]( https://github.com/sofa-framework/sofa/projects/9) and [its main issue](https://github.com/sofa-framework/sofa/issues/1527 ).; - [SofaMisc] Pluginize all modules [#1306]( https://github.com/sofa-framework/sofa/issues/1306 ); - [SofaGeneral] Pluginize all modules [#1529]( https://github.com/sofa-framework/sofa/issues/1529 ); - [SofaCommon] Pluginize all modules [#1597]( https://github.com/sofa-framework/sofa/issues/1597 ); - [SofaBase] Package all modules [#1633]( https://github.com/sofa-framework/sofa/issues/1633 ); - [modules] Set relocatable flags to pluginized modules [#1604]( https://github.com/sofa-framework/sofa/pull/1604 ); - [SofaCommon] Make SofaCommon a deprecated collection [#1609]( https://github.com/sofa-framework/sofa/pull/1609 ); - [SofaGeneral] Make SofaGeneral a deprecated collection [#1596]( https://github.com/sofa-framework/sofa/pull/1596 ); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:214287,log,log,214287,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,amework/sofa/pull/3488) ; - [plugins] SofaCUDA does not require Sofa.GL [#3514](https://github.com/sofa-framework/sofa/pull/3514) ; - [SofaPhysicsAPI] Some small cleaning and add access to VisualModel* [#3519](https://github.com/sofa-framework/sofa/pull/3519) . **Examples / Scenes**; - [examples] Another pass of plugin finder [#3351](https://github.com/sofa-framework/sofa/pull/3351) . **Scripts / Tools**; - [metis] Upgrade metis and GKlib [#3063](https://github.com/sofa-framework/sofa/pull/3063) ; - [git] Add various temporary files to .gitignore [#3344](https://github.com/sofa-framework/sofa/pull/3344) . ### Refactoring. **Architecture**; - [Sofa.Core] Move operator<<(Data&) into operator<<(BaseData). [#3300](https://github.com/sofa-framework/sofa/pull/3300) . **Modules**; - [Lagrangian.Solver] Move GenericConstraintProblem in its own files [#3396](https://github.com/sofa-framework/sofa/pull/3396) . ## [v22.06.00]( https://github.com/sofa-framework/sofa/tree/v22.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.12.00...v22.06.00 ). ### SOFA-NG. **Architecture**; - [SofaNG] Dispatch SofaHaptics and SofaValidation [#3041]( https://github.com/sofa-framework/sofa/pull/3041 ); - [SofaNG] Dispatch useful SofaMiscCollision components into S.C.Collision [#2896]( https://github.com/sofa-framework/sofa/pull/2896 ); - [SofaNG] Re-organize Framework [#2876]( https://github.com/sofa-framework/sofa/pull/2876 ); - [SofaNG] Re-organize unit tests [#2873]( https://github.com/sofa-framework/sofa/pull/2873 ); - [SofaNG] Setup AnimationLoop [#2797]( https://github.com/sofa-framework/sofa/pull/2797 ); - [SofaNG] Setup Collision [#2813]( https://github.com/sofa-framework/sofa/pull/2813 ); - [SofaNG] Setup Constraint [#2790]( https://github.com/sofa-framework/sofa/pull/2790 ); - [SofaNG] Setup Diffusion [#2753]( https://github.com/sofa-framework/sofa/pull/2753 ); - [SofaNG] Setup Engine [#2812]( https://github.com/sofa-framework/sofa/pull/2812 ); - [SofaNG] Setup GU,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:91861,log,log,91861,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,amework]** [BREAKING] Rename: data tracker has changed [#822]( https://github.com/sofa-framework/sofa/pull/822 ); - [SofaPreconditioner] modularization [#668]( https://github.com/sofa-framework/sofa/pull/668 ); - [SofaSparseSolver] modularization [#668]( https://github.com/sofa-framework/sofa/pull/668 ). ### Improvements. **Architecture**; - [CMake] use ccache if available [#692]( https://github.com/sofa-framework/sofa/pull/692 ); - [Cmake] Add a findCython.cmake [#734]( https://github.com/sofa-framework/sofa/pull/734 ); - [CMake] ADD QtIFW generator + improvements [#796]( https://github.com/sofa-framework/sofa/pull/796 ); - [SofaMacros] ADD CMake macro to create pybind11 & cython targets and modules #859( https://github.com/sofa-framework/sofa/pull/859 ). **Modules**; - [All] Use drawtool everywhere [#704]( https://github.com/sofa-framework/sofa/pull/704 ); - [All] Sofa add mechanical matrix mapper [#721]( https://github.com/sofa-framework/sofa/pull/721 ); - **[SofaBaseTopology]** Add battery of tests on topology containers [#708]( https://github.com/sofa-framework/sofa/pull/708 ); - **[SofaBaseTopology]** Topology change propagation to Mechanical State [#838]( https://github.com/sofa-framework/sofa/pull/838 ); - **[SofaBaseMechanics]** Optimize barycentric mapping initialization [#798]( https://github.com/sofa-framework/sofa/pull/798 ); - [SofaBoundaryCondition] Factorize partial fixedconstraint [#718]( https://github.com/sofa-framework/sofa/pull/718 ); - [SofaConstraint] add a force data field in SlidingConstraint [#780]( https://github.com/sofa-framework/sofa/pull/780 ); - [SofaConstraint] ADD Data to show constraint forces [#840]( https://github.com/sofa-framework/sofa/pull/840 ); - [SofaConstraint] allow call of constraints' storeLambda() [#854]( https://github.com/sofa-framework/sofa/pull/854 ); - **[SofaCore]** Add new (simpler) DataEngine implementation [#760]( https://github.com/sofa-framework/sofa/pull/760 ); - [SofaExporter] ADD in WriteState all require,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:279174,test,tests,279174,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,ars in SofaBaseMechanics [#733]( https://github.com/sofa-framework/sofa/pull/733 ); - **[SofaKernel]** Move ScriptEvent class from SofaPython to core/objectModel [#764]( https://github.com/sofa-framework/sofa/pull/764 ); - [SofaMiscFem] Clean BaseMaterial::handleTopologyChange [#817]( https://github.com/sofa-framework/sofa/pull/817 ); - [SofaMiscMapping] Clean DeformableOnRigidFrameMapping [#848]( https://github.com/sofa-framework/sofa/pull/848 ); - **[SofaSimpleFem]** Stc clean simplefem [#826]( https://github.com/sofa-framework/sofa/pull/826 ). **Plugins / Projects**; - [Multithreading] Move TaskScheduler files from MultiThreading plugin to SofaKernel [#805]( https://github.com/sofa-framework/sofa/pull/805 ). **Examples / Scenes**; - [examples] Remove scenes about deprecated components [#922]( https://github.com/sofa-framework/sofa/pull/922 ). ____________________________________________________________. ## [v18.06]( https://github.com/sofa-framework/sofa/tree/v18.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v17.12...v18.06 ). ### Deprecated. **Will be removed in v18.06**; - **[SofaHelper]** Utils::getPluginDirectory() [#518]( https://github.com/sofa-framework/sofa/pull/518) - Use PluginRepository.getFirstPath( ) instead. **Will be removed in v18.12**; - [SofaBoundaryCondition] BuoyantForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaBoundaryCondition] VaccumSphereForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMisc] ParallelCGLinearSolver [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscForceField] ForceMaskOff [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscForceField] LineBendingSprings [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscForceField] WashingMachineForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscForceField] LennardJonesForceField [#457]( https://github.com/sofa-framework/sofa/pul,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:290313,log,log,290313,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,"aseTopology]** Missing override keyword [#2035]( https://github.com/sofa-framework/sofa/pull/2035 ); - **[SofaBaseTopology]** correct the logic issue in computeEdgeSegmentIntersection [#2184]( https://github.com/sofa-framework/sofa/pull/2184 ); - [SofaConstraint] Fix symbol export of BilateralInteractionConstraint on RigidTypes [#2031]( https://github.com/sofa-framework/sofa/pull/2031 ); - **[SofaCore]** FIX Issue #1865 [#1866]( https://github.com/sofa-framework/sofa/pull/1866 ); - **[SofaCore]** FIX buffer overflow when using AddressSanitizer [#2121]( https://github.com/sofa-framework/sofa/pull/2121 ); - **[SofaCore]** Fix explicit instantiations with MultiMapping [#1982]( https://github.com/sofa-framework/sofa/pull/1982 ); - **[SofaCore]** Remove duplicated explicit instanciation [#1981]( https://github.com/sofa-framework/sofa/pull/1981 ); - **[SofaDefaultType][SofaCUDA]** FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - [SofaDeformable] Fix test in StiffSpringForceField doUpdateInternal [#1979]( https://github.com/sofa-framework/sofa/pull/1979 ); - **[SofaFramework]** Fix config files for Sofa.GL, for out-of-tree [#1911]( https://github.com/sofa-framework/sofa/pull/1911 ); - **[SofaFramework]** Put back Sofa.GL in Framework [#1920]( https://github.com/sofa-framework/sofa/pull/1920 ); - [SofaGeneralEngine] fixes ExtrudeQuadsAndGenerateHexas [#1673]( https://github.com/sofa-framework/sofa/pull/1673 ); - [SofaGeneralExplicitOdeSolver] Fix typo in CentralDifferenceSolver description [#1894]( https://github.com/sofa-framework/sofa/pull/1894 ); - [SofaGraphComponent] Clean format of RequiredPlugin message [#2111]( https://github.com/sofa-framework/sofa/pull/2111 ); - [SofaGraphComponent] Fix a typo in the warning emited by the APIVersion component and add missing allowed versions. [#2103]( https://github.com/sofa-framework/sofa/pull/2103 ); - [SofaGraphComponent] Fix message for RequiredPlugin [#2093]( https://github.com/sofa-framewo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:184544,test,test,184544,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,"aterial.cpp; ${SOFATYPESRC_ROOT}/PrimitiveGroup.cpp; ${SOFATYPESRC_ROOT}/Quat.cpp; ${SOFATYPESRC_ROOT}/RGBAColor.cpp; ${SOFATYPESRC_ROOT}/SVector.cpp; ${SOFATYPESRC_ROOT}/SpatialVector.cpp; ${SOFATYPESRC_ROOT}/Transform.cpp; ${SOFATYPESRC_ROOT}/Vec.cpp; ${SOFATYPESRC_ROOT}/fixed_array.cpp; ${SOFATYPESRC_ROOT}/vector.cpp; ${SOFATYPESRC_ROOT}/vector_Integral.cpp; ${SOFATYPESRC_ROOT}/vector_Real.cpp; ${SOFATYPESRC_ROOT}/vector_String.cpp; ). sofa_find_package(Sofa.Config REQUIRED). ## Boost (1.54.0 or higher) is now mandatory.; set(BOOST_MIN_VERSION ""1.54.0""); set(Boost_NO_BOOST_CMAKE TRUE); sofa_find_package(Boost ${BOOST_MIN_VERSION} QUIET); if(NOT Boost_FOUND); if(WIN32); message(FATAL_ERROR ""Boost (${BOOST_MIN_VERSION} or higher) is mandatory.\n""; ""Note that Boost autodetection on Windows was removed.\n""; ""Please follow CMake documentation to find Boost on your system.\n""; ""Hint: set BOOST_ROOT to your Boost location.""; ); else(); message(FATAL_ERROR ""Boost (${BOOST_MIN_VERSION} or higher) is mandatory.""); endif(); endif(); sofa_find_package(Boost QUIET REQUIRED); sofa_find_package(Sofa.Compat QUIET BOTH_SCOPES). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Config); target_link_libraries(${PROJECT_NAME} PUBLIC Boost::boost); if(Sofa.Compat_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Compat); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_TYPE_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_TYPE_BUILD_TESTS); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Type/CMakeLists.txt:3466,Test,Tests,3466,Sofa/framework/Type/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Type/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,"ation of the bounding box in PlaneForceField; - SofaHelper: Fix bug with FBO (causing some weird things when using textures); - corrected the visualization of heterogeneous tetrahedra; - SofaOpenGLVisual: Fix Spotlight source drawing + add some log for ShaderElement; - OmniDriverEmu plugin and examples; - scene test: ICPRegistration_ShapeMatching.scn is ignored; - Vec: 'normalized' function constness; - SpotLight: direction normalization; - ProjectionTo{Plane,Line}MultiMapping Jacobian insertion order; - SofaGeneralRigid: bug in ArticulatedSystemMapping; - SofaEngine: BoxROI instantiation; - SofaBaseCollision: Fix computeBBox in SPhereModel; - bug in MechanicalPickParticlesWithTagsVisitor input tags were not respected; - SofaOpenGLVisual: fix light's modelview matrix computation (lookat data was not checked); - StateMask method clean needs to resize m_size to 0. - [Test-CI]; - fix crash UncoupledConstraintCorrection_test; - fix SofaComponentBase_test on windows; - fix Mapping and MultiMapping tests; - fix MultiMapping::applyDJT test; - fix {Difference,Addition}Mapping when a pair is composed of the same index.; - fix tested scenes selection; - removed OptiTrackNatNet from ""options"" configurations; - ignore some OptiTrackNatNet scenes testing. - [SofaPython]; - fix GridTopology type on the python side; - fix OBJ loader; - fix loading a scene from a .py in a Node independently from the awful Simulation singleton.; - fix SofaPython.Tools.localPath in some situations; - fix BaseContext_getObjects so it can select objects from a base class name (and adding an example); - quaternion: fix singularity in from_line function. - [Flexible]; - fix case sensitive issues; - API: fix a bug with colors when reloading a scene; - fix the bulk factor in NeoHookean material; - fix NeoHookean traction test; - testing detachFromGraph; - BaseDeformationMapping: remove debug message, fix usage of sout (no need for testing f_printLog); - fix test compilation w/o image plugin; - fix loadVisua",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:358416,Test,Test-CI,358416,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,3,"['Test', 'test']","['Test-CI', 'test', 'tests']"
Testability,"ator: CMake 3.1 or higher.; - Compiler: GCC 4.8 or higher, Clang 3.4 or higher, Microsoft Visual C++ 2013 or higher. ### New features for users. - new Geomagic plugin: supporting latest versions of force feedback interfaces from Geomagic; - add ForceMaskOff, a component to locally (in a branch of the scene graph) cancel the force mask; - live-coding for python; - live-coding for GLSL; - new component MakeAlias; - new component MakeDataAlias; - improved error message & console rendering. ### New features for developpers. - Preliminary Markdown support in the msg_* API. You can now write much better formatting & alignement as well as adding URL to documentations related to the error.; - class RichStyleConsoleFormatter which interprete the markdowns in the message and format this to a resizable console with nice alignement.; - class CountingMessageHandler (count the number of message for each message type); - class RoutingMessageHandler (to implement context specific routing of the messages to different handler); - class ExpectMessage and MessageAsATestFailure can be used to check that a component did or didn't send a message and generate a test failure.; - FileMonitor is now implemented on MacOS & Windows (for live-coding features, for example); - RequiredPlugin: modified API to take a list of plugins to load; - Implements the move semantics on sofa::helper::vector. ### Improvements. - **372 new tests**: DAGNode, MeshObj, DiagonalMass, BoxROI, ComplementaryROI, DifferenceEngine, BilateralInteractionConstraint, Quaternion, ImagePNG, etc.; - 184/480 components have an associated example; - [SofaKernel]; - replace raw pointers with a smart ones; - add a ComponentState attribute to BaseObject; - BaseData::typeName is now public: useful to debug; - implement DataTrackerEngine, a kind of DataEngine but that is not a BaseObject; - fix SVector<std::string>. The string serialization changed; - [SofaRigid]; - in case jetJs is called several times per step; - [SofaGeneralLoader];",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:337903,test,test,337903,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,"ayTriangleVisitor.h; ${SOFAMISCCOLLISION_SRC}/SolverMerger.h; ). list(APPEND SOURCE_FILES. ${SOFAMISCCOLLISION_SRC}/DefaultCollisionGroupManager.cpp; ${SOFAMISCCOLLISION_SRC}/RayTriangleVisitor.cpp; ${SOFAMISCCOLLISION_SRC}/SolverMerger.cpp. ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaBaseTopology SofaGeneralMeshCollision SofaGeneralDeformable SofaConstraint SofaExplicitOdeSolver SofaGeneralExplicitOdeSolver SofaImplicitOdeSolver SofaBaseCollision SofaBaseMechanics). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Geometry, Sofa.Component.Collision.Detection.Intersection and Sofa.Component.Collision.Response.Contact instead.; # Moreover, OBB and Capsule-related components have been moved into the external plugin CollisionOBBCapsule.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Intersection); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Contact). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""collections""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFAMISCCOLLISION_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFAMISCCOLLISION_BUILD_TESTS); enable_testing(); add_subdirectory(SofaMiscCollision_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscCollision/CMakeLists.txt:2589,Test,Tests,2589,applications/collections/deprecated/modules/SofaMiscCollision/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscCollision/CMakeLists.txt,3,"['Test', 'test']","['Tests', 'tests']"
Testability,"b.com/sofa-framework/sofa/pull/2369 ); - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-framework/sofa/pull/2360 ); - [Sofa.Core] Fix diamond inheritance in PairInteractionConstraint [#2488]( https://github.com/sofa-framework/sofa/pull/2488 ); - [Sofa.DefaultType] Fix declaration of global variables [#2317]( https://github.com/sofa-framework/sofa/pull/2317 ); - [Sofa.GL] Set glew as mandatory [#2358]( https://github.com/sofa-framework/sofa/pull/2358 ); - [Sofa.Helper] Fix and micro-optimize AdvancedTimer [#2349]( https://github.com/sofa-framework/sofa/pull/2349 ); - [Sofa.Helper] More tests for NameDecoder + fix them [#2380]( https://github.com/sofa-framework/sofa/pull/2380 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framework/sofa/pull/2352 ); - [Sofa.Helper_test] ""fix"" wstring unittest [#2320]( https://github.com/sofa-framework/sofa/pull/2320 ); - [Sofa.LinearAlgebra] Fix assert in CompressedRowSparseMatrix [#2347]( https://github.com/sofa-framework/sofa/pull/2347 ); - [Sofa.LinearAlgebra] Fix installation (fwd.h) [#2337]( https://github.com/sofa-framework/sofa/pull/2337 ); - [Sofa.Type, Sofa.Topology] Fix testEdgeBuffer with clang (and add constexpr default constructors) [#2357]( https://github.com/sofa-framework/sofa/pull/2357 ); - [Sofa.Type] FIX createFromRotationVEctor, the inequality was wrong [#2332]( https://github.com/sofa-framework/sofa/pull/2332 ); - [Sofa.Type] Optimize constructor with params for sofa::type::vec [#2439]( https://github.com/sofa-framework/sofa/pull/2439 ); - [SofaBaseLinearSolver] CGLinearSolver must call super init() to check required Data [#2419]( https://github.com/sofa-framework/sofa/pull/2419 ); - [SofaBaseLinearSolver] CRS explicit instantiation [#2306]( https://github.com/sofa-framework/sofa/pull/2306 ); - [SofaBaseLinearSolver] Fix compilation when enabling CRSMultiMatrixAccessor [#2456]( https://github.com/sofa-framework/sofa/pull/2456 ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:146320,assert,assert,146320,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['assert'],['assert']
Testability,"b.com/sofa-framework/sofa/pull/2518 ); - [SofaBaseTopology] 'createTopologyHandler' overrides a member function but is not marked 'override' [#2260]( https://github.com/sofa-framework/sofa/pull/2260 ); - [SofaBaseVisual] Split VisualModelImpl init method in several methods for more clarity [#2299]( https://github.com/sofa-framework/sofa/pull/2299 ); - [SofaConstraint] Better includes [#2266]( https://github.com/sofa-framework/sofa/pull/2266 ); - [SofaConstraint] Divide a timer in 2 [#2469]( https://github.com/sofa-framework/sofa/pull/2469 ); - [SofaConstraint] Remove dependency on TetrahedronFEMForcefield [#2250]( https://github.com/sofa-framework/sofa/pull/2250 ); - [SofaCore] Clean force fields [#2243]( https://github.com/sofa-framework/sofa/pull/2243 ); - [SofaCore] Fix two determiners in a row [#2271]( https://github.com/sofa-framework/sofa/pull/2271 ); - [SofaCore] Remove unused addSubMBKToMatrix in force fields [#2244]( https://github.com/sofa-framework/sofa/pull/2244 ); - [SofaCore] Remove unwanted logs in TopologyHandler. [#2401]( https://github.com/sofa-framework/sofa/pull/2401 ); - [SofaDeformable] clean and optimize addKToMatrix [#2429]( https://github.com/sofa-framework/sofa/pull/2429 ); - [SofaDenseSolver][SofaBaseLinearSolver] CLEAN macros *_CHECK and *_VERBOSE [#2310]( https://github.com/sofa-framework/sofa/pull/2310 ); - [SofaEigen2Solver] Description + timers + support of any BaseMatrix [#2336]( https://github.com/sofa-framework/sofa/pull/2336 ); - [SofaExporter] Rename OBJExporter into VisualModelOBJExporter [#2505]( https://github.com/sofa-framework/sofa/pull/2505 ); - [SofaGeneralAnimationLoop, Sofa.SimulationCore] Extract MechanicalAccumulateJacobian [#2481]( https://github.com/sofa-framework/sofa/pull/2481 ); - [SofaGeneralAnimationLoop] MechanicalMatrixMapper timers [#2362]( https://github.com/sofa-framework/sofa/pull/2362 ); - [SofaGeneralDeformable] Remove TopologyHandler in FEM to use TopologyData callbacks (part 2) [#2388]( https://github.",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:158789,log,logs,158789,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['logs']
Testability,"ber of effective processors on the computer""); if (SOFA_MSVC_NB_COMPILER_PROCESSES EQUAL ""0""); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/MP""); else(); if (SOFA_MSVC_NB_COMPILER_PROCESSES MATCHES ""^[0-9]+$""); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/MP${SOFA_MSVC_NB_COMPILER_PROCESSES}""); else(); message(FATAL_ERROR ""A number is expected for SOFA_MSVC_NB_COMPILER_PROCESSES""); endif(); endif(). list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/wd4250;/wd4251;/wd4275;/wd4675;/wd4661""); # 4661: no suitable definition provided for explicit template instantiation request; # it happens because we put explicit instantiation in a separate translation unit; # it is by design, so this warning is irrelevant in our project. if(MSVC_TOOLSET_VERSION GREATER 140) # > VS 2015; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/Zc:__cplusplus""); endif(). # Experimental: compilation with MSVC/Clang-cl; if(${CMAKE_CXX_COMPILER_ID} MATCHES ""Clang""); if( ${CMAKE_CXX_COMPILER_FRONTEND_VARIANT} STREQUAL MSVC) # something weird happens if we put the two test in one if ??; message(WARNING ""Experimental: you are trying to compile with MSVC and the clang-cl toolchain; this is not officially supported.""); # remove lots of warnings (the Wall of ""normal"" clang seems different of Wall of clang-cl); list(APPEND SOFACONFIG_COMPILE_OPTIONS -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-double-promotion -Wno-old-style-cast -Wno-reserved-id-macro -Wno-language-extension-token -Wno-dllexport-explicit-instantiation-decl -Wno-nonportable-system-include-path -Wno-zero-as-null-pointer-constant -Wno-documentation); # optimization flags (not sure if necessary..); list(APPEND SOFACONFIG_COMPILE_OPTIONS_RELEASE -march=native); if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/fp:fast""); endif(); endif(); endif(); endif(). # Mac specific; if(APPLE); #remove OpenGL deprecation message; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-DGL_SILENCE_DEPRECATION""); endif(). ## OpenMP; option(SOFA_OPENMP ""Compile Sofa with Op",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:8951,test,test,8951,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['test'],['test']
Testability,ceField [#4116](https://github.com/sofa-framework/sofa/pull/4116); - [Constraint.Lagrangian.Solver] Unify lists of constraint corrections into a MultiLink [#4117](https://github.com/sofa-framework/sofa/pull/4117); - [Constraint.Projective] Implement applyConstraint in LinearMovementConstraint [#4144](https://github.com/sofa-framework/sofa/pull/4144); - [all] Generalize the usage of ScopedAdvancedTimer [#4177](https://github.com/sofa-framework/sofa/pull/4177); - [all] Replace ScopedAdvancedTimers by macros [#4203](https://github.com/sofa-framework/sofa/pull/4203); - [LinearSolver] Remove CSparse-based linear solvers [#4258](https://github.com/sofa-framework/sofa/pull/4258); - [Common] Add message to make the fetch mechanism less hidden [#4310](https://github.com/sofa-framework/sofa/pull/4310); - [Simulation.Core] Deprecate LocalStorage feature [#4327](https://github.com/sofa-framework/sofa/pull/4327). ## [v23.06.00]( https://github.com/sofa-framework/sofa/tree/v23.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v22.12..v23.06 ). ### Highlighted contributions. - [LinearSystem] Refactor matrix assembly [#2777](https://github.com/sofa-framework/sofa/pull/2777) ; - [Core] Introduce parallel for each [#3548](https://github.com/sofa-framework/sofa/pull/3548) ; - [MultiThreading] Introduce ParallelTetrahedronFEMForceField [#3552](https://github.com/sofa-framework/sofa/pull/3552) ; - [examples] Apply Sofa/Component structure for all examples [#3588](https://github.com/sofa-framework/sofa/pull/3588) . ### Breaking. **Architecture**; - [all] Lifecycle v23.06 1/n [#3634](https://github.com/sofa-framework/sofa/pull/3634) ; - [all] Lifecycle v23.06 2/n [#3649](https://github.com/sofa-framework/sofa/pull/3649) ; - [all] Lifecycle v23.06 3/n [#3654](https://github.com/sofa-framework/sofa/pull/3654) ; - [all] Lifecycle v23.06 4/n [#3655](https://github.com/sofa-framework/sofa/pull/3655) ; - [Core] Use std::function for Link's Validator (and fix UB) [#3665](https:,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:50117,log,log,50117,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,"ceField and add extraData [#2569]( https://github.com/sofa-framework/sofa/pull/2569 ); - [SofaMiscForceField] Fix type conversion in tests [#2714]( https://github.com/sofa-framework/sofa/pull/2714 ); - [SofaRigid][SofaGeneralSimpleFem] Fix typos [#2947]( https://github.com/sofa-framework/sofa/pull/2947 ); - [SofaSimpleFEM_test] Add tests on Tetrahedron, CorotationalTetrahedral and FastTetrahedral FEM ForceField [#2842]( https://github.com/sofa-framework/sofa/pull/2842 ); - [SofaSimpleFem] Prefer usage of accessor in HexahedronFEMForceField [#2778]( https://github.com/sofa-framework/sofa/pull/2778 ); - [SofaSimulation] Remove DAGNodeMultiMappingElement [#2694]( https://github.com/sofa-framework/sofa/pull/2694 ); - [SofaSparseSolver] Disable matrix export in SparseLDLSolver [#2725]( https://github.com/sofa-framework/sofa/pull/2725 ); - [SofaSparseSolver] SparseLUSolver and SparseCholeskySolver support fill reducing permutation [#2788]( https://github.com/sofa-framework/sofa/pull/2788 ); - [SofaTest] Move last tests to Sofa.Component [#2996]( https://github.com/sofa-framework/sofa/pull/2996 ); - [SofaTest] Remove last usages and make it optional [#3000]( https://github.com/sofa-framework/sofa/pull/3000 ); - [SofaUserInteraction] remove shadow variable [#2795]( https://github.com/sofa-framework/sofa/pull/2795 ); - [SolidMechanics.FEM.HyperElastic] Reformat and clean TetrahedronHyperelasticityFEMForceField [#3141]( https://github.com/sofa-framework/sofa/pull/3141 ); - [SolidMechanics] TetrahedronFEMForceField: adds error message for Poisson's ratio [#2908]( https://github.com/sofa-framework/sofa/pull/2908 ); - [StateContainer] Remove deprecated code for topologicalChanges in MechanicalObject. [#2867]( https://github.com/sofa-framework/sofa/pull/2867 ); - [Topology.Dynamic] Remove implicit conversion warnings [#2973]( https://github.com/sofa-framework/sofa/pull/2973 ). **Plugins / Projects**; - [Plugins] Create ArticulatedSystem plugin (originally from SofaGeneralRigid) [",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:129470,test,tests,129470,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,cmake_minimum_required(VERSION 3.12). project(Sofa.Simulation_simutest). set(SOURCE_FILES; parallel_scenes_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Simulation.Core Sofa.Component). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/simutest/CMakeLists.txt:212,Test,Testing,212,Sofa/framework/Simulation/simutest/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/simutest/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). # framework libraries; if(NOT TARGET Sofa.Config); # add Config only if it was not loaded before; sofa_add_subdirectory(library Config Sofa.Config ON); endif(); sofa_add_subdirectory(library Type Sofa.Type ON); sofa_add_subdirectory(library Geometry Sofa.Geometry ON); sofa_add_subdirectory(library Topology Sofa.Topology ON); sofa_add_subdirectory(library Helper Sofa.Helper ON); sofa_add_subdirectory(library LinearAlgebra Sofa.LinearAlgebra ON); sofa_add_subdirectory(library DefaultType Sofa.DefaultType ON); sofa_add_subdirectory(library Core Sofa.Core ON); sofa_add_subdirectory(library Simulation Sofa.Simulation ON); sofa_add_subdirectory(library SimpleApi Sofa.SimpleApi ON); sofa_add_subdirectory(library Testing Sofa.Testing ON). # Library gathering all framework libraries; sofa_add_subdirectory(library Framework Sofa.Framework ON); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/CMakeLists.txt:753,Test,Testing,753,Sofa/framework/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/CMakeLists.txt,2,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). find_package(Sofa.Config REQUIRED). if(SOFA_BUILD_TESTS OR SOFA_BUILD_RELEASE_PACKAGE); # (Deprecated) Library used to write high level tests involving many components.; sofa_add_subdirectory(plugin SofaTest SofaTest); endif(). sofa_add_subdirectory(plugin CollisionOBBCapsule CollisionOBBCapsule). sofa_add_subdirectory(directory SofaHighOrder SofaHighOrder EXTERNAL GIT_REF v24.06). sofa_add_subdirectory(plugin CImgPlugin CImgPlugin) # ON by default and first as it is used by other plugins.; sofa_add_subdirectory(plugin ArticulatedSystemPlugin ArticulatedSystemPlugin ON); sofa_add_subdirectory(plugin SofaEulerianFluid SofaEulerianFluid); sofa_add_subdirectory(plugin SofaSphFluid SofaSphFluid EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SofaDistanceGrid SofaDistanceGrid) # Depends on SofaMiscCollision; sofa_add_subdirectory(plugin SofaImplicitField SofaImplicitField); sofa_add_subdirectory(plugin MultiThreading MultiThreading ON); sofa_add_subdirectory(plugin DiffusionSolver DiffusionSolver) # Depends on CImgPlugin; sofa_add_subdirectory(plugin image image) # Depends on CImgPlugin, DiffusionSolver, MultiThreading (soft); sofa_add_subdirectory(plugin SofaNewmat SofaNewmat). sofa_add_subdirectory(directory SofaPython3 SofaPython3 EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CGALPlugin CGALPlugin EXTERNAL GIT_REF v24.06) # Depends on image; sofa_add_subdirectory(plugin Registration Registration EXTERNAL GIT_REF v24.06) # Depends on image, SofaPython, SofaGui and SofaDistanceGrid; sofa_add_subdirectory(plugin BulletCollisionDetection BulletCollisionDetection) # Depends on Compliant and LMConstraint; sofa_add_subdirectory(plugin InvertibleFVM InvertibleFVM EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin MeshSTEPLoader MeshSTEPLoader EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin PluginExample PluginExample EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ManifoldTopologies ManifoldTopologies EXTE",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:174,test,tests,174,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,1,['test'],['tests']
Testability,"cmake_minimum_required(VERSION 3.22). project(CImgPlugin_test). sofa_find_package(CImgPlugin REQUIRED). set(SOURCE_FILES; ImageCImg_test.cpp; ). add_definitions(""-DCIMGPLUGIN_RESOURCES_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/images\""""); add_executable(${PROJECT_NAME} ${SOURCE_FILES}); add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); target_link_libraries(${PROJECT_NAME} CImgPlugin Sofa.Core Sofa.Testing). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CImgPlugin_test/CMakeLists.txt:400,Test,Testing,400,applications/plugins/CImgPlugin/CImgPlugin_test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CImgPlugin_test/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(CollisionOBBCapsule_test). set(HEADER_FILES; OBBCapsPrimitiveCreator.h; ). set(SOURCE_FILES; OBB_test.cpp; ). add_executable(${PROJECT_NAME} ${HEADER_FILES} ${SOURCE_FILES}); add_definitions(""-DSOFAMISCCOLLISION_TEST_SCENES_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/scenes\""""); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Testing CollisionOBBCapsule Sofa.Component.Collision.Testing). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CollisionOBBCapsule_test/CMakeLists.txt:366,Test,Testing,366,applications/plugins/CollisionOBBCapsule/CollisionOBBCapsule_test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CollisionOBBCapsule_test/CMakeLists.txt,2,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(MultiThreading_test). set ( HEADER_FILES; ); set(SOURCE_FILES; DataExchange_test.cpp; MeanComputation_test.cpp; ParallelImplementationsRegistry_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES} ${HEADER_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Simulation.Core MultiThreading). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/test/CMakeLists.txt:311,Test,Testing,311,applications/plugins/MultiThreading/test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/test/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(SceneChecking_test). set(SOURCE_FILES SceneChecker_test.cpp). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing SceneChecking); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SceneChecking/tests/CMakeLists.txt:200,Test,Testing,200,applications/projects/SceneChecking/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SceneChecking/tests/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(SceneCreator_test). set(HEADER_FILES. ). set(SOURCE_FILES; SceneCreator_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} SceneCreator Sofa.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.SolidMechanics.FEM.Elastic Sofa.Component.StateContainer Sofa.Component.Topology.Container.Grid ). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SceneCreator/SceneCreator_test/CMakeLists.txt:236,Test,Testing,236,applications/plugins/SceneCreator/SceneCreator_test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SceneCreator/SceneCreator_test/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Collision.Detection.Algorithm_test). set(SOURCE_FILES; CollisionPipeline_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Collision.Detection.Algorithm). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Algorithm/tests/CMakeLists.txt:239,Test,Testing,239,Sofa/Component/Collision/Detection/Algorithm/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Algorithm/tests/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Collision.Detection.Intersection_test). set(SOURCE_FILES; LocalMinDistance_test.cpp; MeshNewProximityIntersection_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Collision.Detection.Intersection). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Intersection/tests/CMakeLists.txt:280,Test,Testing,280,Sofa/Component/Collision/Detection/Intersection/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Intersection/tests/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Collision.Geometry_test). set(SOURCE_FILES; Sphere_test.cpp; Triangle_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Collision.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.Collision.Geometry Sofa.Component.Collision.Detection.Intersection). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Geometry/tests/CMakeLists.txt:236,Test,Testing,236,Sofa/Component/Collision/Geometry/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Geometry/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Collision.Response.Contact_test). set(SOURCE_FILES; PenalityContactForceField_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Collision.Testing Sofa.Component.SolidMechanics.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.Collision.Response.Contact); add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Response/Contact/tests/CMakeLists.txt:244,Test,Testing,244,Sofa/Component/Collision/Response/Contact/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Response/Contact/tests/CMakeLists.txt,3,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Collision.Response.Mapper_test). set(SOURCE_FILES; BaryMapper_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Collision.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.Collision.Response.Mapper); add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Response/Mapper/tests/CMakeLists.txt:228,Test,Testing,228,Sofa/Component/Collision/Response/Mapper/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Response/Mapper/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Collision.Testing). set(SOFACOMPONENTCOLLISIONTESTING_SRC ""src/sofa/component/collision/testing""). set(HEADER_FILES; ${SOFACOMPONENTCOLLISIONTESTING_SRC}/MeshPrimitiveCreator.h; ${SOFACOMPONENTCOLLISIONTESTING_SRC}/SpherePrimitiveCreator.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCOLLISIONTESTING_SRC}/empty.cpp ; ); add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_include_directories(${PROJECT_NAME} PUBLIC src/). target_link_libraries(${PROJECT_NAME} Sofa.Config Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} Sofa.Component.Topology.Container.Constant); target_link_libraries(${PROJECT_NAME} Sofa.Component.StateContainer); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Testing/CMakeLists.txt:71,Test,Testing,71,Sofa/Component/Collision/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Testing/CMakeLists.txt,2,"['Test', 'test']","['Testing', 'testing']"
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Constraint.Projective_test). set(SOURCE_FILES; AffineMovementProjectiveConstraint_test.cpp; FixedProjectiveConstraint_test.cpp; FixedPlaneProjectiveConstraint_test.cpp; PartialFixedProjectiveConstraint_test.cpp; DirectionProjectiveConstraint_test.cpp; LineProjectiveConstraint_test.cpp; PlaneProjectiveConstraint_test.cpp; PointProjectiveConstraint_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Topology.Testing SceneCreator); target_link_libraries(${PROJECT_NAME} Sofa.Component.Constraint.Projective Sofa.Component.StateContainer Sofa.Component.Topology.Container.Dynamic Sofa.Component.Mass Sofa.Component.SolidMechanics.Spring Sofa.Component.MechanicalLoad Sofa.Component.LinearSolver.Iterative Sofa.Component.ODESolver.Backward Sofa.Component.Engine.Select). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Projective/tests/CMakeLists.txt:515,Test,Testing,515,Sofa/Component/Constraint/Projective/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Projective/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Diffusion_test). set(SOURCE_FILES; TetrahedronDiffusionFEMForceField_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); add_definitions(""-DSOFA_COMPONENT_DIFFUSION_TEST_SCENES_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/scenes\""""); target_link_libraries(${PROJECT_NAME} Sofa.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.Diffusion Sofa.Component.Mass Sofa.Component.StateContainer Sofa.Component.Topology.Container.Grid). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Diffusion/tests/CMakeLists.txt:337,Test,Testing,337,Sofa/Component/Diffusion/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Diffusion/tests/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Engine.Analyze_test). set(SOURCE_FILES; AverageCoord_test.cpp; ClusteringEngine_test.cpp; Engine.Analyze_DataUpdate_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Engine.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.Engine.Analyze Sofa.Component.StateContainer). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Analyze/tests/CMakeLists.txt:282,Test,Testing,282,Sofa/Component/Engine/Analyze/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Analyze/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Engine.Generate_test). set(SOURCE_FILES; Engine.Generate_DataUpdate_test.cpp; ExtrudeEdgesAndGenerateQuads_test.cpp; JoinPoints_test.cpp; MergePoints_test.cpp; RandomPointDistributionInSurface_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Engine.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.Engine.Generate). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Generate/tests/CMakeLists.txt:359,Test,Testing,359,Sofa/Component/Engine/Generate/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Generate/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Engine.Select_test). set(SOURCE_FILES; BoxROI_test.cpp; ComplementaryROI_test.cpp; Engine.Select_DataUpdate_test.cpp; IndicesFromValues_test.cpp; MeshROI_test.cpp; PlaneROI_test.cpp; SphereROI_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Engine.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.Engine.Select). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Select/tests/CMakeLists.txt:359,Test,Testing,359,Sofa/Component/Engine/Select/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Select/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Engine.Testing). set(SOFACOMPONENTENGINETESTING_SRC ""src/sofa/component/engine/testing""). set(HEADER_FILES; ${SOFACOMPONENTENGINETESTING_SRC}/DataEngineTestCreation.h; ). set(SOURCE_FILES; ${SOFACOMPONENTENGINETESTING_SRC}/empty.cpp ; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_include_directories(${PROJECT_NAME} PUBLIC src/). target_link_libraries(${PROJECT_NAME} Sofa.Config Sofa.Simulation.Core); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Testing/CMakeLists.txt:68,Test,Testing,68,Sofa/Component/Engine/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Testing/CMakeLists.txt,2,"['Test', 'test']","['Testing', 'testing']"
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Engine.Transform_test). set(SOURCE_FILES; DifferenceEngine_test.cpp; DilateEngine_test.cpp; DisplacementMatrixEngine_test.cpp; DisplacementTransformEngine_test.cpp; Engine.Transform_DataUpdate_test.cpp; IndexValueMapper_test.cpp; ProjectiveTransformEngine_test.cpp; SmoothMeshEngine_test.cpp; TransformEngine_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Engine.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.Engine.Transform). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Transform/tests/CMakeLists.txt:475,Test,Testing,475,Sofa/Component/Engine/Transform/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Transform/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Haptics_test). set(SOURCE_FILES; LCPForceFeedback_test.cpp; ). add_definitions(""-DSOFA_COMPONENT_HAPTICS_TEST_SCENES_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/scenes\""""); add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Haptics Sofa.Component.StateContainer). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Haptics/tests/CMakeLists.txt:316,Test,Testing,316,Sofa/Component/Haptics/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Haptics/tests/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.IO.Mesh_test). set(SOURCE_FILES; MeshExporter_test.cpp; MeshGmshLoader_test.cpp; MeshOBJLoader_test.cpp; MeshSTLLoader_test.cpp; MeshVTKLoader_test.cpp; MeshXspLoader_test.cpp; OffSequenceLoader_test.cpp; STLExporter_test.cpp; VisualModelOBJExporter_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); add_definitions(""-DSOFA_COMPONENT_IO_MESH_TEST_FILES_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/files/\""""); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.IO.Mesh). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/IO/Mesh/tests/CMakeLists.txt:515,Test,Testing,515,Sofa/Component/IO/Mesh/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/IO/Mesh/tests/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.LinearSolver.Direct_test). set(SOURCE_FILES; SparseLDLSolver_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); # dependencies are managed directly in the target_link_libraries pass; target_link_libraries(${PROJECT_NAME} Sofa.Testing; Sofa.Component.LinearSolver.Direct; ); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/Direct/tests/CMakeLists.txt:298,Test,Testing,298,Sofa/Component/LinearSolver/Direct/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/Direct/tests/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.LinearSystem_test). set(SOURCE_FILES; MatrixLinearSystem_test.cpp; MappingGraph_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); # dependencies are managed directly in the target_link_libraries pass; target_link_libraries(${PROJECT_NAME} Sofa.Testing; Sofa.Component.LinearSystem; Sofa.Component.StateContainer; Sofa.Component.Mapping.Linear; Sofa.Component.SolidMechanics.Spring; ); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSystem/tests/CMakeLists.txt:317,Test,Testing,317,Sofa/Component/LinearSystem/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSystem/tests/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Mapping.Linear_test). set(SOURCE_FILES; BarycentricMapping_test.cpp; SubsetMultiMapping_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Mapping.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.Mapping.Linear Sofa.Component.StateContainer). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/tests/CMakeLists.txt:254,Test,Testing,254,Sofa/Component/Mapping/Linear/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Mapping.NonLinear_test). set(SOURCE_FILES; DistanceMapping_test.cpp; RigidMapping_test.cpp; SquareDistanceMapping_test.cpp; SquareMapping_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Mapping.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.Mapping.NonLinear Sofa.Component.Topology.Container.Dynamic Sofa.Component.StateContainer). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/NonLinear/tests/CMakeLists.txt:304,Test,Testing,304,Sofa/Component/Mapping/NonLinear/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/NonLinear/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Mapping.Testing). set(SOFACOMPONENTMAPPINGTESTING_SRC ""src/sofa/component/mapping/testing""). set(HEADER_FILES; ${SOFACOMPONENTMAPPINGTESTING_SRC}/MappingTestCreation.h; ${SOFACOMPONENTMAPPINGTESTING_SRC}/Multi2MappingTestCreation.h; ${SOFACOMPONENTMAPPINGTESTING_SRC}/MultiMappingTestCreation.h; ). set(SOURCE_FILES; ${SOFACOMPONENTMAPPINGTESTING_SRC}/empty.cpp ; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_include_directories(${PROJECT_NAME} PUBLIC src/). target_link_libraries(${PROJECT_NAME} Sofa.Config Sofa.Simulation.Core); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Testing/CMakeLists.txt:69,Test,Testing,69,Sofa/Component/Mapping/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Testing/CMakeLists.txt,2,"['Test', 'test']","['Testing', 'testing']"
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Mass_test). set(SOURCE_FILES; DiagonalMass_test.cpp; MeshMatrixMass_test.cpp; UniformMass_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.Mass Sofa.Component.Topology.Container.Dynamic Sofa.Component.StateContainer). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mass/tests/CMakeLists.txt:256,Test,Testing,256,Sofa/Component/Mass/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mass/tests/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.MechanicalLoad_test). set(SOURCE_FILES; ConstantForceField_test.cpp; PlaneForceField_test.cpp; QuadPressureForceField_test.cpp; SkeletalMotionConstraint_test.cpp; SurfacePressureForceField_test.cpp; TrianglePressureForceField_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); add_definitions(""-DSOFA_COMPONENT_MECHANICALLOAD_TEST_SCENES_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/scenes\""""); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.SolidMechanics.Testing SceneCreator); target_link_libraries(${PROJECT_NAME} Sofa.Component.MechanicalLoad Sofa.Component.StateContainer Sofa.Component.LinearSolver.Iterative Sofa.Component.ODESolver.Backward Sofa.Component.LinearSolver.Iterative Sofa.Component.Mass Sofa.Component.Topology.Container.Dynamic Sofa.Component.Constraint.Projective). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/MechanicalLoad/tests/CMakeLists.txt:499,Test,Testing,499,Sofa/Component/MechanicalLoad/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/MechanicalLoad/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.ODESolver.Backward_test). set(SOURCE_FILES; EulerImplicitSolverDynamic_test.cpp; EulerImplicitSolverStatic_test.cpp; NewmarkImplicitSolverDynamic_test.cpp; StaticSolver_test.cpp; SpringSolverDynamic_test.cpp; VariationalSymplecticExplicitSolverDynamic_test.cpp; VariationalSymplecticImplicitSolverDynamic_test.cpp; ). add_definitions(""-DSOFACOMPONENTODESOLVERBACKWARD_TEST_SCENES_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/scenes\""""). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); # dependencies are managed directly in the target_link_libraries pass; target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.ODESolver.Testing Sofa.Component.ODESolver.Backward Sofa.Component.StateContainer); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Backward/tests/CMakeLists.txt:650,Test,Testing,650,Sofa/Component/ODESolver/Backward/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Backward/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.ODESolver.Forward_test). set(SOURCE_FILES; CentralDifferenceExplicitSolverDynamic_test.cpp; EulerExplicitSolverDynamic_test.cpp; RungeKutta2ExplicitSolverDynamic_test.cpp; RungeKutta4ExplicitSolverDynamic_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); # dependencies are managed directly in the target_link_libraries pass; target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.ODESolver.Testing Sofa.Component.ODESolver.Forward Sofa.Component.StateContainer); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Forward/tests/CMakeLists.txt:442,Test,Testing,442,Sofa/Component/ODESolver/Forward/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Forward/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.ODESolver.Testing). set(SOFACOMPONENTODESOLVERTESTING_SRC ""src/sofa/component/odesolver/testing""). set(HEADER_FILES; ${SOFACOMPONENTODESOLVERTESTING_SRC}/EigenTestUtilities.h; ${SOFACOMPONENTODESOLVERTESTING_SRC}/MassSpringSystemCreation.h; ${SOFACOMPONENTODESOLVERTESTING_SRC}/ODESolverSpringTest.h; ). set(SOURCE_FILES; ${SOFACOMPONENTODESOLVERTESTING_SRC}/empty.cpp ; ); add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_include_directories(${PROJECT_NAME} PUBLIC src/); target_link_libraries(${PROJECT_NAME} Sofa.Config Sofa.Simulation.Core); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Testing/CMakeLists.txt:71,Test,Testing,71,Sofa/Component/ODESolver/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Testing/CMakeLists.txt,2,"['Test', 'test']","['Testing', 'testing']"
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Playback_test). set(SOURCE_FILES; ReadState_test.cpp; WriteState_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); add_definitions(""-DSOFA_COMPONENT_PLAYBACK_TEST_FILES_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/files/\""""); add_definitions(""-DSOFA_COMPONENT_PLAYBACK_TEST_BUILD_DIR=\""${CMAKE_BINARY_DIR}/\""""). target_link_libraries(${PROJECT_NAME} Sofa.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.Playback Sofa.Component.StateContainer Sofa.Component.ODESolver.Backward Sofa.Component.LinearSolver.Iterative Sofa.Component.Mass). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Playback/tests/CMakeLists.txt:417,Test,Testing,417,Sofa/Component/Playback/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Playback/tests/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.SceneUtility_test). set(SOURCE_FILES; AddResourceRepository_test.cpp; MakeAliasComponent_test.cpp; MakeDataAliasComponent_test.cpp; MessageHandlerComponent_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); add_definitions(""-DSOFA_COMPONENT_SCENEUTILITY_TEST_RESOURCES_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/\""""); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.SceneUtility). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SceneUtility/tests/CMakeLists.txt:424,Test,Testing,424,Sofa/Component/SceneUtility/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SceneUtility/tests/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.SolidMechanics.FEM.Elastic_test). set(SOURCE_FILES; BeamFEMForceField_test.cpp; HexahedronFEMForceField_test.cpp; TetrahedronFEMForceField_test.cpp; TriangleFEMForceField_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); add_definitions(""-DSOFA_COMPONENT_SOLIDMECHANICS_FEM_ELASTIC_TEST_SCENES_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/scenes\""""); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.SolidMechanics.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.SolidMechanics.FEM.Elastic Sofa.Component.StateContainer Sofa.Component.Topology.Container.Dynamic). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/FEM/Elastic/tests/CMakeLists.txt:456,Test,Testing,456,Sofa/Component/SolidMechanics/FEM/Elastic/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/FEM/Elastic/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.SolidMechanics.FEM.HyperElastic_test). set(SOURCE_FILES; Material_test.cpp; TetrahedronHyperelasticityFEMForceField_params_test.cpp; TetrahedronHyperelasticityFEMForceField_scene_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); add_definitions(""-DSOFA_COMPONENT_SOLIDMECHANICS_FEM_HYPERELASTIC_TEST_SCENES_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/scenes\""""); target_link_libraries(${PROJECT_NAME} Sofa.Testing); target_link_libraries(${PROJECT_NAME}; Sofa.Component.SolidMechanics.FEM.HyperElastic; Sofa.Component.SolidMechanics.Testing; Sofa.Component.StateContainer; Sofa.Component.ODESolver.Backward). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/FEM/HyperElastic/tests/CMakeLists.txt:469,Test,Testing,469,Sofa/Component/SolidMechanics/FEM/HyperElastic/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/FEM/HyperElastic/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.SolidMechanics.Spring_test). set(SOURCE_FILES; PolynomialRestShapeSpringsForceField_test.cpp; RestShapeSpringsForceField_test.cpp; StiffSpringForceField_test.cpp; TriangularBendingSprings_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.SolidMechanics.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.SolidMechanics.Spring Sofa.Component.StateContainer Sofa.Component.ODESolver.Backward Sofa.Component.LinearSolver.Iterative Sofa.Component.Topology.Container.Dynamic). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/Spring/tests/CMakeLists.txt:354,Test,Testing,354,Sofa/Component/SolidMechanics/Spring/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/Spring/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.SolidMechanics.Testing). set(SOFACOMPONENTSOLIDMECHANICSTESTING_SRC ""src/sofa/component/solidmechanics/testing""). set(HEADER_FILES; ${SOFACOMPONENTSOLIDMECHANICSTESTING_SRC}/ForceFieldTestCreation.h; ). set(SOURCE_FILES; ${SOFACOMPONENTSOLIDMECHANICSTESTING_SRC}/empty.cpp ; ); add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_include_directories(${PROJECT_NAME} PUBLIC src/). target_link_libraries(${PROJECT_NAME} Sofa.Config Sofa.Simulation.Core SceneCreator); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/Testing/CMakeLists.txt:76,Test,Testing,76,Sofa/Component/SolidMechanics/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/Testing/CMakeLists.txt,2,"['Test', 'test']","['Testing', 'testing']"
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.SolidMechanics_simutest). set(SOURCE_FILES; AffinePatch_test.cpp; LinearElasticity_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Topology.Testing SceneCreator); target_link_libraries(${PROJECT_NAME} Sofa.Component). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/simutests/CMakeLists.txt:249,Test,Testing,249,Sofa/Component/SolidMechanics/simutests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/simutests/CMakeLists.txt,2,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.StateContainer_test). set(SOURCE_FILES; MechanicalObject_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.StateContainer). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/StateContainer/tests/CMakeLists.txt:223,Test,Testing,223,Sofa/Component/StateContainer/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/StateContainer/tests/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Topology.Container.Constant_test). set(SOURCE_FILES; MeshTopology_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Topology.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.Topology.Container.Constant Sofa.Component.Topology.Container.Dynamic); add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/Constant/tests/CMakeLists.txt:232,Test,Testing,232,Sofa/Component/Topology/Container/Constant/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/Constant/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Topology.Container.Dynamic_test). set(SOURCE_FILES; EdgeSetTopology_test.cpp; HexahedronSetTopology_test.cpp; PointSetTopology_test.cpp; QuadSetTopology_test.cpp; TetrahedronNumericalIntegration_test.cpp; TetrahedronSetTopology_test.cpp; TriangleNumericalIntegration_test.cpp; TriangleSetTopology_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Topology.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.Topology.Container.Dynamic). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/Dynamic/tests/CMakeLists.txt:463,Test,Testing,463,Sofa/Component/Topology/Container/Dynamic/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/Dynamic/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Topology.Container.Grid_test). set(SOURCE_FILES; CylinderGridTopology_test.cpp; RegularGridTopology_test.cpp; SparseGridTopology_test.cpp; SphereGridTopology_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing); target_link_libraries(${PROJECT_NAME} Sofa.Component.Topology.Container.Grid Sofa.Component.IO.Mesh). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/Grid/tests/CMakeLists.txt:324,Test,Testing,324,Sofa/Component/Topology/Container/Grid/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/Grid/tests/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Topology.Testing). set(SOFACOMPONENTODESOLVERTESTING_SRC ""src/sofa/component/topology/testing""). set(HEADER_FILES; ${SOFACOMPONENTODESOLVERTESTING_SRC}/RegularGridNodeCreation.h; ${SOFACOMPONENTODESOLVERTESTING_SRC}/fake_TopologyScene.h; ). set(SOURCE_FILES; ${SOFACOMPONENTODESOLVERTESTING_SRC}/empty.cpp ; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_compile_definitions(${PROJECT_NAME} PUBLIC ""-DSOFA_COMPONENT_TOPOLOGY_TESTING_RESOURCES_DIR=\""${CMAKE_SOURCE_DIR}/share\""""). target_include_directories(${PROJECT_NAME} PUBLIC src/); target_link_libraries(${PROJECT_NAME} Sofa.Config Sofa.Simulation.Graph); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Testing/CMakeLists.txt:70,Test,Testing,70,Sofa/Component/Topology/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Testing/CMakeLists.txt,2,"['Test', 'test']","['Testing', 'testing']"
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Topology.Utility_test). set(SOURCE_FILES ; TopologicalChangeProcessor_test.cpp; TopologyChecker_test.cpp; ). add_definitions(""-DSOFA_COMPONENT_TOPOLOGY_UTILITY_TEST_SCENES_DIR=\""${CMAKE_SOURCE_DIR}/examples/Component/Topology/Container/Dynamic\""""); add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Topology.Utility). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Utility/tests/CMakeLists.txt:402,Test,Testing,402,Sofa/Component/Topology/Utility/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Utility/tests/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Visual_test). set(SOURCE_FILES ; VisualModelImpl_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Visual). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Visual/tests/CMakeLists.txt:215,Test,Testing,215,Sofa/Component/Visual/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Visual/tests/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Core_simutest). # Do not find dependencies explicitely, let CMake decide the appropriate time to do it; #sofa_find_package(SofaBase REQUIRED). set(SOURCE_FILES; objectmodel/Base_test.cpp; objectmodel/BaseContext_test.cpp; objectmodel/BaseLink_simutest.cpp; objectmodel/PathResolver_simutest.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.SceneUtility). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/simutest/CMakeLists.txt:442,Test,Testing,442,Sofa/framework/Core/simutest/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/simutest/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Core_test). set(SOURCE_FILES; accessor/ReadAccessor.cpp; accessor/WriteAccessor.cpp; collision/NarrowPhaseDetection_test.cpp; loader/MeshLoader_test.cpp; objectmodel/AspectPool_test.cpp; objectmodel/BaseClass_test.cpp; objectmodel/BaseData_test.cpp; objectmodel/BaseLink_test.cpp; objectmodel/BaseObjectDescription_test.cpp; objectmodel/Data_test.cpp; objectmodel/DataLink_test.cpp; objectmodel/DataFileName_test.cpp; objectmodel/DataFileNameVector_test.cpp; objectmodel/DataCallback_test.cpp; objectmodel/DDGNode_test.cpp; objectmodel/MultiLink_test.cpp; objectmodel/RemovedData_test.cpp; objectmodel/SingleLink_test.cpp; objectmodel/VectorData_test.cpp; topology/BaseMeshTopology_test.cpp; DataEngine_test.cpp; Engine_test.cpp; MatrixAccumulator_test.cpp; ObjectFactory_test.cpp; PathResolver_test.cpp; TestEngine.cpp; TrackedData_test.cpp; VecId_test.cpp; visual/DisplayFlags_test.cpp; ). set(HEADER_FILES; objectmodel/BaseLink_test.h; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES} ${HEADER_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Core). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/test/CMakeLists.txt:856,Test,TestEngine,856,Sofa/framework/Core/test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/test/CMakeLists.txt,2,['Test'],"['TestEngine', 'Testing']"
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.DefaultType_simutest). set(SOURCE_FILES; TemplateAliases_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.DefaultType). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/DefaultType/simutest/CMakeLists.txt:213,Test,Testing,213,Sofa/framework/DefaultType/simutest/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/DefaultType/simutest/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.DefaultType_test). set(HEADER_FILES; DataMockup.h; ). set(SOURCE_FILES; MapMapSparseMatrixEigenUtils_test.cpp; TypeInfo_test.cpp; TypeInfoRepository_test.cpp; TypeInfoRepository_tu1_test.cpp; TypeInfoRepository_tu2_test.cpp; QuaternionIntegration_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES} ${HEADER_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.DefaultType). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/DefaultType/test/CMakeLists.txt:419,Test,Testing,419,Sofa/framework/DefaultType/test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/DefaultType/test/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.GL.Component.Engine_test). set(SOURCE_FILES; TextureInterpolation_DataUpdate.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Engine.Testing); target_link_libraries(${PROJECT_NAME} Sofa.GL.Component). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Engine/tests/CMakeLists.txt:228,Test,Testing,228,Sofa/GL/Component/Engine/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Engine/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.GL.Component.Rendering2D_test). set(SOURCE_FILES; OglLabel_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Engine.Testing); target_link_libraries(${PROJECT_NAME} Sofa.GL.Component). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Rendering2D/tests/CMakeLists.txt:215,Test,Testing,215,Sofa/GL/Component/Rendering2D/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Rendering2D/tests/CMakeLists.txt,2,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.GL.Component.Rendering3D_test). ## MAC-OS crash when we are testing opengl feature.; if(NOT CMAKE_SYSTEM_NAME STREQUAL Darwin); set(SOURCE_FILES; ClipPlane_test.cpp; OglModel_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Engine.Testing); target_link_libraries(${PROJECT_NAME} Sofa.GL.Component). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}). endif(); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Rendering3D/tests/CMakeLists.txt:111,test,testing,111,Sofa/GL/Component/Rendering3D/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Rendering3D/tests/CMakeLists.txt,3,"['Test', 'test']","['Testing', 'testing']"
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.GL.Component.Shader_test). ## MAC-OS crash when we are testing opengl feature.; if(NOT CMAKE_SYSTEM_NAME STREQUAL Darwin); set(SOURCE_FILES; Light_test.cpp; LightManager_test.cpp). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.Engine.Testing); target_link_libraries(${PROJECT_NAME} Sofa.GL.Component). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); endif(); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Shader/tests/CMakeLists.txt:106,test,testing,106,Sofa/GL/Component/Shader/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Shader/tests/CMakeLists.txt,3,"['Test', 'test']","['Testing', 'testing']"
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.GL_test). set(SOURCE_FILES; src/GLSLShader_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.GL). add_test(NAME Sofa.GL_test COMMAND Sofa.GL_test); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Sofa.GL_test/CMakeLists.txt:199,Test,Testing,199,Sofa/GL/Sofa.GL_test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Sofa.GL_test/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.GUI.Component_test). set(SOURCE_FILES; ConstraintAttachBodyPerformer_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing); target_link_libraries(${PROJECT_NAME} Sofa.GUI.Component). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/tests/CMakeLists.txt:225,Test,Testing,225,Sofa/GUI/Component/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/tests/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Geometry_test). set(SOURCE_FILES; Edge_test.cpp; Triangle_test.cpp; Quad_test.cpp; Tetrahedron_test.cpp; Hexahedron_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Geometry). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Geometry/test/CMakeLists.txt:272,Test,Testing,272,Sofa/framework/Geometry/test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Geometry/test/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Helper_simutest). # Do not find dependencies explicitely, let CMake decide the appropriate time to do it; #sofa_find_package(SofaBase REQUIRED). set(SOURCE_FILES; AdvancedTimer_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Helper). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/simutest/CMakeLists.txt:333,Test,Testing,333,Sofa/framework/Helper/simutest/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/simutest/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Helper_test). set(SOURCE_FILES; DiffLib_test.cpp; Factory_test.cpp; KdTree_test.cpp; NameDecoder_test.cpp; OptionsGroup_test.cpp; StringUtils_test.cpp; TagFactory_test.cpp; Utils_test.cpp; accessor/ReadAccessor.cpp; accessor/WriteAccessor.cpp; io/MeshOBJ_test.cpp; io/STBImage_test.cpp; io/XspLoader_test.cpp; logging/logging_test.cpp; narrow_cast_test.cpp; system/FileMonitor_test.cpp; system/FileRepository_test.cpp; system/FileSystem_test.cpp; system/PluginManager_test.cpp; system/thread/CircularQueue_test.cpp; ). add_subdirectory(system/TestPluginA); add_subdirectory(system/TestPluginB). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Helper). add_definitions(""-DSTBIMAGETEST_RESOURCES_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/io/images\""""). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/test/CMakeLists.txt:361,log,logging,361,Sofa/framework/Helper/test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/test/CMakeLists.txt,4,"['Test', 'log']","['TestPluginA', 'TestPluginB', 'Testing', 'logging']"
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.LinearAlgebra_test). set(SOURCE_FILES; BTDMatrix_test.cpp; BaseMatrix_test.cpp; CompressedRowSparseMatrix_test.cpp; Matrix_test.cpp; RotationMatrix_test.cpp; SparseMatrixProduct_test.cpp; SparseMatrixStorageOrder_test.cpp; TriangularSystemSolver_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.LinearAlgebra Sofa.LinearAlgebra.Testing Sofa.DefaultType). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/LinearAlgebra/test/CMakeLists.txt:402,Test,Testing,402,Sofa/framework/LinearAlgebra/test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/LinearAlgebra/test/CMakeLists.txt,2,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Simulation.Common_test). set(SOURCE_FILES; LoadScene_test.cpp; ). add_definitions(""-DSOFASIMULATION_TEST_SCENES_DIR=\""${CMAKE_SOURCE_DIR}/examples/Component/Constraint/Projective\""""); add_executable(${PROJECT_NAME} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Helper). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Common/test/CMakeLists.txt:327,Test,Testing,327,Sofa/framework/Simulation/Common/test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Common/test/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Simulation.Core_simutest). set(SOURCE_FILES; DefaultAnimationLoop_test.cpp; NodeContext_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Simulation.Core Sofa.Component.SceneUtility). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/simutest/CMakeLists.txt:244,Test,Testing,244,Sofa/framework/Simulation/Core/simutest/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/simutest/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Simulation.Core_test). set(SOURCE_FILES; ParallelForEach_test.cpp; RequiredPlugin_test.cpp; SceneCheckRegistry_test.cpp; Simulation_test.cpp; ParallelSparseMatrixProduct_test.cpp; TaskSchedulerFactory_test.cpp; TaskSchedulerTestTasks.cpp; TaskSchedulerTestTasks.h; TaskSchedulerTests.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Simulation.Core Sofa.LinearAlgebra.Testing). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/test/CMakeLists.txt:435,Test,Testing,435,Sofa/framework/Simulation/Core/test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/test/CMakeLists.txt,2,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Testing_test). set(SOURCE_FILES; 	TestMessageHandler_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/test/CMakeLists.txt:209,Test,Testing,209,Sofa/framework/Testing/test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/test/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Topology_test). set(SOURCE_FILES; Hexahedron_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Topology). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Topology/test/CMakeLists.txt:201,Test,Testing,201,Sofa/framework/Topology/test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Topology/test/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(Sofa.Type_test). set(SOURCE_FILES; Color_test.cpp; MatSym_test.cpp; MatTypes_test.cpp; Material_test.cpp; Quater_test.cpp; SVector_test.cpp; VecTypes_test.cpp; fixed_array_test.cpp; vector_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Type). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Type/test/CMakeLists.txt:340,Test,Testing,340,Sofa/framework/Type/test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Type/test/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(SofaCarving_test). set(SOURCE_FILES; SofaCarving_test.cpp; ). add_definitions(""-DSOFACARVING_TEST_RESOURCES_DIR=\""${CMAKE_SOURCE_DIR}/share\""""); add_executable(${PROJECT_NAME} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} Sofa.Testing SofaCarving). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCarving/SofaCarving_test/CMakeLists.txt:283,Test,Testing,283,applications/plugins/SofaCarving/SofaCarving_test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCarving/SofaCarving_test/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(SofaDistanceGrid_test). set(SOURCE_FILES; DistanceGrid_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing SofaDistanceGrid). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaDistanceGrid/SofaDistanceGrid_test/CMakeLists.txt:206,Test,Testing,206,applications/plugins/SofaDistanceGrid/SofaDistanceGrid_test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaDistanceGrid/SofaDistanceGrid_test/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(SofaImplicitField_test). set(SOURCE_FILES; ImplicitShape_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing SofaImplicitField). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaImplicitField/SofaImplicitField_test/CMakeLists.txt:208,Test,Testing,208,applications/plugins/SofaImplicitField/SofaImplicitField_test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaImplicitField/SofaImplicitField_test/CMakeLists.txt,1,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(SofaNewmat_test). set(SOURCE_FILES; NewMatMatrix_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} Sofa.Testing SofaNewmat Sofa.LinearAlgebra.Testing); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaNewmat/SofaNewmat_test/CMakeLists.txt:200,Test,Testing,200,applications/plugins/SofaNewmat/SofaNewmat_test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaNewmat/SofaNewmat_test/CMakeLists.txt,2,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22). project(SofaValidation_test). set(SOURCE_FILES; Monitor_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} SofaValidation Sofa.Testing). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaValidation/SofaValidation_test/CMakeLists.txt:214,Test,Testing,214,applications/collections/deprecated/modules/SofaValidation/SofaValidation_test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaValidation/SofaValidation_test/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22). project(image_test). set(HEADER_FILES; TestImageEngine.h; ). set(SOURCE_FILES; TestImageEngine.cpp; DataImage_test.cpp; ImageEngine_test.cpp; ); find_package(CImgPlugin REQUIRED). add_definitions(""-DIMAGETEST_SCENES_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/scenes\""""). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} image Sofa.Testing SceneCreator Sofa.Component.Engine.Testing CImgPlugin). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/image_test/CMakeLists.txt:77,Test,TestImageEngine,77,applications/plugins/image/image_test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/image_test/CMakeLists.txt,4,['Test'],"['TestImageEngine', 'Testing']"
Testability,"cmake_minimum_required(VERSION 3.22); project(SceneCreator VERSION 0.1). sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Eigen3 REQUIRED). set(HEADER_FILES; src/SceneCreator/config.h.in; src/SceneCreator/GetAssembledSizeVisitor.h; src/SceneCreator/GetVectorVisitor.h; src/SceneCreator/SceneCreator.h; src/SceneCreator/SceneUtils.h; ); set(SOURCE_FILES; src/SceneCreator/GetAssembledSizeVisitor.cpp; src/SceneCreator/GetVectorVisitor.cpp; src/SceneCreator/SceneCreator.cpp; src/SceneCreator/SceneUtils.cpp; src/SceneCreator/initSceneCreator.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Graph Sofa.SimpleApi Sofa.Component.StateContainer); target_link_libraries(${PROJECT_NAME} PUBLIC Eigen3::Eigen); target_compile_definitions(${PROJECT_NAME} PRIVATE ""-DSOFA_BUILD_SCENECREATOR""). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SceneCreator""; RELOCATABLE ""plugins""; ). ## Add example project to use sceneCreator; sofa_find_package(Sofa.GUI.Common QUIET); if(Sofa.GUI.Common_FOUND); add_subdirectory(sceneCreatorExamples); else(); message(STATUS ""${PROJECT_NAME}: Sofa.GUI.Common not found, sceneCreatorExamples will not be built.""); endif(). ## Add test project; if(SOFA_BUILD_TESTS); add_subdirectory(SceneCreator_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SceneCreator/CMakeLists.txt:1588,test,test,1588,applications/plugins/SceneCreator/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SceneCreator/CMakeLists.txt,1,['test'],['test']
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Collision LANGUAGES CXX). set(SOFACOMPONENTCOLLISION_SOURCE_DIR ""src/sofa/component/collision""). sofa_add_subdirectory_modules(SOFACOMPONENTCOLLISION_TARGETS; DIRECTORIES Geometry Detection Response; ). set(HEADER_FILES; ${SOFACOMPONENTCOLLISION_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCOLLISION_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCOLLISION_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTCOLLISION_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). if(SOFA_BUILD_TESTS); add_subdirectory(Testing); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/CMakeLists.txt:855,Test,Testing,855,Sofa/Component/Collision/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Diffusion LANGUAGES CXX). set(SOFACOMPONENTDIFFUSION_SOURCE_DIR ""src/sofa/component/diffusion""). set(HEADER_FILES; ${SOFACOMPONENTDIFFUSION_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTDIFFUSION_SOURCE_DIR}/init.h; ${SOFACOMPONENTDIFFUSION_SOURCE_DIR}/TetrahedronDiffusionFEMForceField.h; ${SOFACOMPONENTDIFFUSION_SOURCE_DIR}/TetrahedronDiffusionFEMForceField.inl; ). set(SOURCE_FILES; ${SOFACOMPONENTDIFFUSION_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTDIFFUSION_SOURCE_DIR}/TetrahedronDiffusionFEMForceField.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_DIFFUSION_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_DIFFUSION_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Diffusion/CMakeLists.txt:975,Test,Tests,975,Sofa/Component/Diffusion/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Diffusion/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Engine LANGUAGES CXX). set(SOFACOMPONENTENGINE_SOURCE_DIR ""src/sofa/component/engine""). sofa_add_subdirectory_modules(SOFACOMPONENTENGINE_TARGETS; DIRECTORIES Analyze Generate Select Transform; ). set(HEADER_FILES; ${SOFACOMPONENTENGINE_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTENGINE_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTENGINE_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTENGINE_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). if(SOFA_BUILD_TESTS); add_subdirectory(Testing); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/CMakeLists.txt:837,Test,Testing,837,Sofa/Component/Engine/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Haptics LANGUAGES CXX). set(SOFACOMPONENTHAPTICS_SOURCE_DIR ""src/sofa/component/haptics""). set(HEADER_FILES; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/init.h; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/ForceFeedback.h; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/LCPForceFeedback.h; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/LCPForceFeedback.inl; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/MechanicalStateForceFeedback.h; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/NullForceFeedback.h; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/NullForceFeedbackT.h; ). set(SOURCE_FILES; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/ForceFeedback.cpp; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/LCPForceFeedback.cpp; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/NullForceFeedback.cpp; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/NullForceFeedbackT.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Solver REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian.Solver). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_HAPTICS_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_HAPTICS_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Haptics/CMakeLists.txt:1473,Test,Tests,1473,Sofa/Component/Haptics/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Haptics/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Mapping LANGUAGES CXX). set(SOFACOMPONENTMAPPING_SOURCE_DIR ""src/sofa/component/mapping""). sofa_add_subdirectory_modules(SOFACOMPONENTMAPPING_TARGETS; DIRECTORIES Linear NonLinear MappedMatrix; ). set(HEADER_FILES; ${SOFACOMPONENTMAPPING_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTMAPPING_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTMAPPING_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTMAPPING_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). if(SOFA_BUILD_TESTS); add_subdirectory(Testing); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/CMakeLists.txt:841,Test,Testing,841,Sofa/Component/Mapping/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Mass LANGUAGES CXX). set(SOFACOMPONENTMASS_SOURCE_DIR ""src/sofa/component/mass""). set(HEADER_FILES; ${SOFACOMPONENTMASS_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTMASS_SOURCE_DIR}/init.h; ${SOFACOMPONENTMASS_SOURCE_DIR}/AddMToMatrixFunctor.h; ${SOFACOMPONENTMASS_SOURCE_DIR}/DiagonalMass.h; ${SOFACOMPONENTMASS_SOURCE_DIR}/DiagonalMass.inl; ${SOFACOMPONENTMASS_SOURCE_DIR}/MassType.h; ${SOFACOMPONENTMASS_SOURCE_DIR}/MeshMatrixMass.h; ${SOFACOMPONENTMASS_SOURCE_DIR}/MeshMatrixMass.inl; ${SOFACOMPONENTMASS_SOURCE_DIR}/RigidMassType.h; ${SOFACOMPONENTMASS_SOURCE_DIR}/UniformMass.h; ${SOFACOMPONENTMASS_SOURCE_DIR}/UniformMass.inl; ${SOFACOMPONENTMASS_SOURCE_DIR}/VecMassType.h; ). set(SOURCE_FILES; ${SOFACOMPONENTMASS_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTMASS_SOURCE_DIR}/DiagonalMass.cpp; ${SOFACOMPONENTMASS_SOURCE_DIR}/MeshMatrixMass.cpp; ${SOFACOMPONENTMASS_SOURCE_DIR}/UniformMass.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Dynamic). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_MASS_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_MASS_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mass/CMakeLists.txt:1521,Test,Tests,1521,Sofa/Component/Mass/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mass/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.ODESolver LANGUAGES CXX). set(SOFACOMPONENTODESOLVER_SOURCE_DIR ""src/sofa/component/odesolver""). sofa_add_subdirectory_modules(SOFACOMPONENTODESOLVER_TARGETS; DIRECTORIES Forward Backward; ). set(HEADER_FILES; ${SOFACOMPONENTODESOLVER_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTODESOLVER_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTODESOLVER_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTODESOLVER_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). if(SOFA_BUILD_TESTS); add_subdirectory(Testing); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/CMakeLists.txt:844,Test,Testing,844,Sofa/Component/ODESolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.ODESolver.Backward LANGUAGES CXX). set(SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR ""src/sofa/component/odesolver/backward""). set(HEADER_FILES; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/init.h; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/EulerImplicitSolver.h; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/StaticSolver.h; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/VariationalSymplecticSolver.h; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/NewmarkImplicitSolver.h; ). set(SOURCE_FILES; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/EulerImplicitSolver.cpp; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/StaticSolver.cpp; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/VariationalSymplecticSolver.cpp; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/NewmarkImplicitSolver.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). cmake_dependent_option(SOFA_COMPONENT_ODESOLVER_BACKWARD_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_ODESOLVER_BACKWARD_BUILD_TESTS); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Backward/CMakeLists.txt:1447,test,tests,1447,Sofa/Component/ODESolver/Backward/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Backward/CMakeLists.txt,2,['test'],['tests']
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.ODESolver.Forward LANGUAGES CXX). set(SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR ""src/sofa/component/odesolver/forward""). set(HEADER_FILES; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/init.h; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/EulerSolver.h; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/CentralDifferenceSolver.h; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/RungeKutta2Solver.h; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/RungeKutta4Solver.h; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/DampVelocitySolver.h; ). set(SOURCE_FILES; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/EulerSolver.cpp; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/CentralDifferenceSolver.cpp; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/RungeKutta2Solver.cpp; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/RungeKutta4Solver.cpp; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/DampVelocitySolver.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). cmake_dependent_option(SOFA_COMPONENT_ODESOLVER_FORWARD_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_ODESOLVER_FORWARD_BUILD_TESTS); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Forward/CMakeLists.txt:1544,test,tests,1544,Sofa/Component/ODESolver/Forward/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Forward/CMakeLists.txt,2,['test'],['tests']
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.SolidMechanics LANGUAGES CXX). set(SOFACOMPONENTSOLIDMECHANICS_SOURCE_DIR ""src/sofa/component/solidmechanics""). sofa_add_subdirectory_modules(SOFACOMPONENTSOLIDMECHANICS_TARGETS; DIRECTORIES Spring FEM TensorMass; ). set(HEADER_FILES; ${SOFACOMPONENTSOLIDMECHANICS_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTSOLIDMECHANICS_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTSOLIDMECHANICS_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTSOLIDMECHANICS_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). if(SOFA_BUILD_TESTS); add_subdirectory(Testing); add_subdirectory(simutests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/CMakeLists.txt:889,Test,Testing,889,Sofa/Component/SolidMechanics/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.StateContainer LANGUAGES CXX). set(SOFACOMPONENTSTATECONTAINER_SOURCE_DIR ""src/sofa/component/statecontainer""). set(HEADER_FILES; ${SOFACOMPONENTSTATECONTAINER_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTSTATECONTAINER_SOURCE_DIR}/init.h; ${SOFACOMPONENTSTATECONTAINER_SOURCE_DIR}/MechanicalObject.h; ${SOFACOMPONENTSTATECONTAINER_SOURCE_DIR}/MechanicalObject.inl; ${SOFACOMPONENTSTATECONTAINER_SOURCE_DIR}/MappedObject.h; ${SOFACOMPONENTSTATECONTAINER_SOURCE_DIR}/MappedObject.inl; ). set(SOURCE_FILES; ${SOFACOMPONENTSTATECONTAINER_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTSTATECONTAINER_SOURCE_DIR}/MappedObject.cpp; ${SOFACOMPONENTSTATECONTAINER_SOURCE_DIR}/MechanicalObject.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_STATECONTAINER_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_STATECONTAINER_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/StateContainer/CMakeLists.txt:1147,Test,Tests,1147,Sofa/Component/StateContainer/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/StateContainer/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Topology LANGUAGES CXX). set(SOFACOMPONENTTOPOLOGY_SOURCE_DIR ""src/sofa/component/topology""). sofa_add_subdirectory_modules(SOFACOMPONENTTOPOLOGY_TARGETS; DIRECTORIES Container Mapping Utility; ). set(HEADER_FILES; ${SOFACOMPONENTTOPOLOGY_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTTOPOLOGY_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTTOPOLOGY_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTTOPOLOGY_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). if(SOFA_BUILD_TESTS); add_subdirectory(Testing); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/CMakeLists.txt:845,Test,Testing,845,Sofa/Component/Topology/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Topology.Container.Constant LANGUAGES CXX). set(SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR ""src/sofa/component/topology/container/constant""). set(HEADER_FILES; ${SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR}/init.h; ${SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR}/MeshTopology.h; ${SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR}/CubeTopology.h; ${SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR}/SphereQuadTopology.h; ). set(SOURCE_FILES; ${SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR}/MeshTopology.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR}/CubeTopology.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR}/SphereQuadTopology.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_TOPOLOGY_CONTAINER_CONSTANT_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_TOPOLOGY_CONTAINER_CONSTANT_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/Constant/CMakeLists.txt:1281,Test,Tests,1281,Sofa/Component/Topology/Container/Constant/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/Constant/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Topology.Utility LANGUAGES CXX). set(SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR ""src/sofa/component/topology/utility""). set(HEADER_FILES; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/TopologicalChangeProcessor.h; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/TopologyBoundingTrasher.h; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/TopologyBoundingTrasher.inl; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/TopologyChecker.h; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/TopologicalChangeProcessor.cpp; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/TopologyBoundingTrasher.cpp; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/TopologyChecker.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED); sofa_find_package(ZLIB BOTH_SCOPES). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core Sofa.Component.Topology.Container.Dynamic); if(ZLIB_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC ZLIB::ZLIB); if(CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS ZLIB::ZLIB); endif(); endif(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_TOPOLOGY_UTILITY_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_TOPOLOGY_UTILITY_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Utility/CMakeLists.txt:1601,Test,Tests,1601,Sofa/Component/Topology/Utility/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Utility/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Framework LANGUAGES CXX). set(SOFAFRAMEWORK_SOURCE_DIR ""src/sofa/framework""). set(SOFAFRAMEWORK_MODULES Sofa.Config Sofa.Type Sofa.Geometry Sofa.Topology Sofa.Helper Sofa.LinearAlgebra Sofa.DefaultType Sofa.Core Sofa.Simulation.Core Sofa.Simulation.Common Sofa.Simulation.Graph Sofa.Testing); foreach(framework_module ${SOFAFRAMEWORK_MODULES}); sofa_find_package(${framework_module} REQUIRED); endforeach(). set(HEADER_FILES; ${SOFAFRAMEWORK_SOURCE_DIR}/config.h.in; ${SOFAFRAMEWORK_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFAFRAMEWORK_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFAFRAMEWORK_MODULES}). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Framework/CMakeLists.txt:334,Test,Testing,334,Sofa/framework/Framework/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Framework/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.GL.Component.Engine LANGUAGES CXX). set(SOFAGLCOMPONENTENGINE_SOURCE_DIR ""src/sofa/gl/component/engine""). set(HEADER_FILES; ${SOFAGLCOMPONENTENGINE_SOURCE_DIR}/config.h.in; ${SOFAGLCOMPONENTENGINE_SOURCE_DIR}/init.h; ${SOFAGLCOMPONENTENGINE_SOURCE_DIR}/TextureInterpolation.h; ${SOFAGLCOMPONENTENGINE_SOURCE_DIR}/TextureInterpolation.inl; ). set(SOURCE_FILES; ${SOFAGLCOMPONENTENGINE_SOURCE_DIR}/init.cpp; ${SOFAGLCOMPONENTENGINE_SOURCE_DIR}/TextureInterpolation.cpp; ). sofa_find_package(Sofa.GL REQUIRED); sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core Sofa.GL). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_GL_COMPONENT_ENGINE_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_GL_COMPONENT_ENGINE_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Engine/CMakeLists.txt:974,Test,Tests,974,Sofa/GL/Component/Engine/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Engine/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.GL.Component.Rendering2D LANGUAGES CXX). set(SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR ""src/sofa/gl/component/rendering2d""). set(HEADER_FILES; ${SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR}/config.h.in; ${SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR}/init.h; ${SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR}/OglColorMap.h; ${SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR}/OglLabel.h; ${SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR}/OglViewport.h; ). set(SOURCE_FILES; ${SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR}/init.cpp; ${SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR}/OglColorMap.cpp; ${SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR}/OglLabel.cpp; ${SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR}/OglViewport.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.GL REQUIRED); sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core Sofa.GL Sofa.Component.Visual Sofa.Component.Setting). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_GL_COMPONENT_RENDERING2D_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_GL_COMPONENT_RENDERING2D_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Rendering2D/CMakeLists.txt:1294,Test,Tests,1294,Sofa/GL/Component/Rendering2D/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Rendering2D/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Geometry LANGUAGES CXX). set(SOFAGEOMETRYSRC_ROOT ""src/sofa/geometry""). set(HEADER_FILES; ${SOFAGEOMETRYSRC_ROOT}/config.h.in; ${SOFAGEOMETRYSRC_ROOT}/init.h; ${SOFAGEOMETRYSRC_ROOT}/Edge.h; ${SOFAGEOMETRYSRC_ROOT}/ElementInfo.h; ${SOFAGEOMETRYSRC_ROOT}/ElementType.h; ${SOFAGEOMETRYSRC_ROOT}/Hexahedron.h; ${SOFAGEOMETRYSRC_ROOT}/Pentahedron.h; ${SOFAGEOMETRYSRC_ROOT}/Point.h; ${SOFAGEOMETRYSRC_ROOT}/Pyramid.h; ${SOFAGEOMETRYSRC_ROOT}/Quad.h; ${SOFAGEOMETRYSRC_ROOT}/Tetrahedron.h; ${SOFAGEOMETRYSRC_ROOT}/Triangle.h. ${SOFAGEOMETRYSRC_ROOT}/proximity/PointTriangle.h; ${SOFAGEOMETRYSRC_ROOT}/proximity/SegmentTriangle.h; ${SOFAGEOMETRYSRC_ROOT}/proximity/TriangleTriangle.h; ). set(SOURCE_FILES; ${SOFAGEOMETRYSRC_ROOT}/init.cpp; ${SOFAGEOMETRYSRC_ROOT}/ElementInfo.cpp; ). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Config Sofa.Type). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_GEOMETRY_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_GEOMETRY_BUILD_TESTS); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Geometry/CMakeLists.txt:1348,Test,Tests,1348,Sofa/framework/Geometry/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Geometry/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.LinearAlgebra.Testing LANGUAGES CXX). set(HEADER_FILES; src/Sofa.LinearAlgebra.Testing/BaseMatrix_test.h; src/Sofa.LinearAlgebra.Testing/SparseMatrixTest.h; src/Sofa.LinearAlgebra.Testing/SparseMatrixProduct_test.h; ). add_library(${PROJECT_NAME} INTERFACE). target_link_libraries(${PROJECT_NAME} INTERFACE Sofa.Testing); target_include_directories(${PROJECT_NAME} INTERFACE ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/>""); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/LinearAlgebra/Testing/CMakeLists.txt:65,Test,Testing,65,Sofa/framework/LinearAlgebra/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/LinearAlgebra/Testing/CMakeLists.txt,5,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.SimpleApi LANGUAGES CXX). set(SOFASIMPLEAPI_SRC ""src/sofa/simpleapi""). set(HEADER_FILES; ${SOFASIMPLEAPI_SRC}/config.h.in; ${SOFASIMPLEAPI_SRC}/init.h; ${SOFASIMPLEAPI_SRC}/SimpleApi.h; ). set(SOURCE_FILES; ${SOFASIMPLEAPI_SRC}/init.cpp; ${SOFASIMPLEAPI_SRC}/SimpleApi.cpp; ). sofa_find_package(Sofa.Simulation.Graph REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Graph). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_SIMPLEAPI_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_SIMPLEAPI_BUILD_TESTS); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/SimpleApi/CMakeLists.txt:823,Test,Tests,823,Sofa/framework/SimpleApi/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/SimpleApi/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,cmake_minimum_required(VERSION 3.22); project(Sofa.SimpleApi_test). set(SOURCE_FILES; SimpleApi_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Simulation.Graph). add_test(Name ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/SimpleApi/test/CMakeLists.txt:201,Test,Testing,201,Sofa/framework/SimpleApi/test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/SimpleApi/test/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Simulation LANGUAGES CXX). set(SOFASIMULATION_SOURCE_DIR ""src/sofa/simulation""). set(SOFASIMULATION_DIRS Core Common Graph); set(SOFASIMULATION_TARGETS); foreach(simulation_dir ${SOFASIMULATION_DIRS}); sofa_add_subdirectory(library ${simulation_dir} ${PROJECT_NAME}.${simulation_dir} ON); if(TARGET ${PROJECT_NAME}.${simulation_dir}); list(APPEND SOFASIMULATION_TARGETS ${PROJECT_NAME}.${simulation_dir}); endif(); endforeach(). set(HEADER_FILES; ${SOFASIMULATION_SOURCE_DIR}/config.h.in; ${SOFASIMULATION_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFASIMULATION_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFASIMULATION_TARGETS}). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_SIMULATION_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_SIMULATION_BUILD_TESTS); add_subdirectory(simutest); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/CMakeLists.txt:1088,Test,Tests,1088,Sofa/framework/Simulation/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/CMakeLists.txt,3,"['Test', 'test']","['Tests', 'tests']"
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Simulation.Graph LANGUAGES CXX). set(SOFASIMULATIONGRAPH_SRC ""src/sofa/simulation/graph""). set(HEADER_FILES; ${SOFASIMULATIONGRAPH_SRC}/config.h.in; ${SOFASIMULATIONGRAPH_SRC}/init.h; ${SOFASIMULATIONGRAPH_SRC}/initSofaSimulationGraph.h; ${SOFASIMULATIONGRAPH_SRC}/DAGNode.h; ${SOFASIMULATIONGRAPH_SRC}/DAGSimulation.h; ). set(SOURCE_FILES; ${SOFASIMULATIONGRAPH_SRC}/init.cpp; ${SOFASIMULATIONGRAPH_SRC}/initSofaSimulationGraph.cpp; ${SOFASIMULATIONGRAPH_SRC}/DAGNode.cpp; ${SOFASIMULATIONGRAPH_SRC}/DAGSimulation.cpp; ). sofa_find_package(Sofa.Simulation.Common REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Common). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_SIMULATION_GRAPH_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_SIMULATION_GRAPH_BUILD_TESTS); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Graph/CMakeLists.txt:1071,Test,Tests,1071,Sofa/framework/Simulation/Graph/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Graph/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,cmake_minimum_required(VERSION 3.22); project(Sofa.Simulation.Graph_test). set(HEADER_FILES; 	Node_test.h; ). set(SOURCE_FILES; DAG_test.cpp; DAGNode_test.cpp; MutationListener_test.cpp; Node_test.cpp; Simulation_test.cpp; Link_test.cpp; ). add_executable(${PROJECT_NAME} ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Simulation.Graph Sofa.Component.StateContainer Sofa.Component.Mass). add_test(Name ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Graph/test/CMakeLists.txt:349,Test,Testing,349,Sofa/framework/Simulation/Graph/test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Graph/test/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Testing LANGUAGES CXX). # Enable testing features of cmake, like the add_test() command.; enable_testing(). # add googletest library; # set(googletest_disable_pthreads ON CACHE INTERNAL """"); find_package(GTest QUIET); if(NOT GTest_FOUND AND SOFA_ALLOW_FETCH_DEPENDENCIES); message(""${PROJECT_NAME}: DEPENDENCY googletest NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is ON, fetching googletest...""). include(FetchContent); FetchContent_Declare(googletest; GIT_REPOSITORY https://github.com/google/googletest; GIT_TAG v1.14.0; ). FetchContent_GetProperties(googletest); if(NOT googletest_POPULATED); FetchContent_Populate(googletest). set(BUILD_GMOCK OFF CACHE INTERNAL """"); set(BUILD_SHARED_LIBS ON CACHE BOOL """" FORCE); set(INSTALL_GTEST OFF CACHE BOOL """" FORCE) # rely on SOFA macros; set(gtest_force_shared_crt ON CACHE BOOL """" FORCE); set(gtest_disable_pthreads OFF CACHE BOOL """" FORCE). message(""${PROJECT_NAME}: adding subdirectory ${googletest_SOURCE_DIR}""). add_subdirectory(${googletest_SOURCE_DIR} ${googletest_BINARY_DIR}). target_compile_options(gtest_main PRIVATE ""-DGTEST_LINKED_AS_SHARED_LIBRARY=0""); target_compile_options(gtest PRIVATE ""-DGTEST_CREATE_SHARED_LIBRARY=1""). install(DIRECTORY ${googletest_SOURCE_DIR}/googletest/include/gtest DESTINATION include/extlibs/GTest/ COMPONENT headers); target_include_directories(gtest PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/GTest/>""); ; include(SofaMacros); sofa_create_package_with_targets(; PACKAGE_NAME GTest; PACKAGE_VERSION 1.14.0; TARGETS gtest AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""include""; INCLUDE_INSTALL_DIR ""extlibs/GTest""; ). set_target_properties(gtest PROPERTIES FOLDER Testing); set_target_properties(gtest_main PROPERTIES FOLDER Testing); endif(); elseif (NOT GTest_FOUND); message(FATAL_ERROR ""${PROJECT_NAME}: DEPENDENCY googletest NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install googletest, or enable SOFA_ALLOW_FETCH_DEPEND",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt:51,Test,Testing,51,Sofa/framework/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt,2,"['Test', 'test']","['Testing', 'testing']"
Testability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Topology LANGUAGES CXX). set(SOFATOPOLOGYSRC_ROOT ""src/sofa/topology""). set(HEADER_FILES; ${SOFATOPOLOGYSRC_ROOT}/config.h.in; ${SOFATOPOLOGYSRC_ROOT}/init.h; ${SOFATOPOLOGYSRC_ROOT}/Element.h; ${SOFATOPOLOGYSRC_ROOT}/Topology.h; ${SOFATOPOLOGYSRC_ROOT}/Point.h; ${SOFATOPOLOGYSRC_ROOT}/Edge.h; ${SOFATOPOLOGYSRC_ROOT}/Triangle.h; ${SOFATOPOLOGYSRC_ROOT}/Quad.h; ${SOFATOPOLOGYSRC_ROOT}/Tetrahedron.h; ${SOFATOPOLOGYSRC_ROOT}/Pentahedron.h; ${SOFATOPOLOGYSRC_ROOT}/Pyramid.h; ${SOFATOPOLOGYSRC_ROOT}/Hexahedron.h; ). set(SOURCE_FILES; ${SOFATOPOLOGYSRC_ROOT}/init.cpp; ${SOFATOPOLOGYSRC_ROOT}/Topology.cpp; ${SOFATOPOLOGYSRC_ROOT}/Element.cpp; ${SOFATOPOLOGYSRC_ROOT}/Point.cpp; ${SOFATOPOLOGYSRC_ROOT}/Edge.cpp; ${SOFATOPOLOGYSRC_ROOT}/Triangle.cpp; ${SOFATOPOLOGYSRC_ROOT}/Quad.cpp; ${SOFATOPOLOGYSRC_ROOT}/Tetrahedron.cpp; ${SOFATOPOLOGYSRC_ROOT}/Pentahedron.cpp; ${SOFATOPOLOGYSRC_ROOT}/Pyramid.cpp; ${SOFATOPOLOGYSRC_ROOT}/Hexahedron.cpp; ). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Geometry REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Config Sofa.Type Sofa.Geometry). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_TOPOLOGY_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_TOPOLOGY_BUILD_TESTS); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Topology/CMakeLists.txt:1574,Test,Tests,1574,Sofa/framework/Topology/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Topology/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,cmake_minimum_required(VERSION 3.22); project(SofaGTestMain). ## Dependencies; sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(GTest REQUIRED). add_library(${PROJECT_NAME} SofaGTestMain.cpp); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.Simulation.Graph); target_link_libraries(${PROJECT_NAME} PUBLIC GTest::gtest). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; ). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Testing); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/SofaGTestMain/CMakeLists.txt:633,Test,Testing,633,Sofa/framework/Testing/SofaGTestMain/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/SofaGTestMain/CMakeLists.txt,1,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22); project(SofaMiscCollision_test). set(HEADER_FILES; ). set(SOURCE_FILES; DefaultCollisionGroupManager_test.cpp; ). add_executable(${PROJECT_NAME} ${HEADER_FILES} ${SOURCE_FILES}); add_definitions(""-DSOFAMISCCOLLISION_TEST_SCENES_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/scenes\""""); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Testing Sofa.Component.Collision.Testing SofaMiscCollision; SofaBase SofaGeneralDeformable SofaImplicitOdeSolver SofaTopologyMapping SofaLoader). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscCollision/SofaMiscCollision_test/CMakeLists.txt:362,Test,Testing,362,applications/collections/deprecated/modules/SofaMiscCollision/SofaMiscCollision_test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscCollision/SofaMiscCollision_test/CMakeLists.txt,2,['Test'],['Testing']
Testability,"cmake_minimum_required(VERSION 3.22); project(SofaNewmat LANGUAGES CXX). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.LinearSolver.Direct REQUIRED). # Newmat; #sofa_find_package(Newmat QUIET) # useless IMO; if(NOT Newmat_FOUND); add_subdirectory(extlibs/newmat newmat); endif(); set_target_properties(newmat PROPERTIES DEBUG_POSTFIX ""_d""); set_target_properties(newmat PROPERTIES FOLDER ""SofaExtlibs""). set(SOFANEWMAT_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFANEWMAT_SRC}/config.h.in; ${SOFANEWMAT_SRC}/initSofaNewmat.h; ${SOFANEWMAT_SRC}/LULinearSolver.h; ${SOFANEWMAT_SRC}/NewMatMatrix.h; ${SOFANEWMAT_SRC}/NewMatVector.h; ). set(SOURCE_FILES; ${SOFANEWMAT_SRC}/initSofaNewmat.cpp; ${SOFANEWMAT_SRC}/LULinearSolver.cpp; ${SOFANEWMAT_SRC}/NewMatCGLinearSolver.cpp; ${SOFANEWMAT_SRC}/NewMatCholeskySolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC newmat Sofa.Component.LinearSolver.Direct). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""plugins""; ). cmake_dependent_option(SOFANEWMAT_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFANEWMAT_BUILD_TESTS); add_subdirectory(${PROJECT_NAME}_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaNewmat/CMakeLists.txt:1315,test,tests,1315,applications/plugins/SofaNewmat/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaNewmat/CMakeLists.txt,1,['test'],['tests']
Testability,"cmake_minimum_required(VERSION 3.22); project(SofaTest VERSION 0.1). set(HEADER_FILES; InitPlugin_test.h; Sofa_test.h; ). set(SOURCE_FILES; InitPlugin_test.cpp; Sofa_test.cpp; ). list(APPEND HEADER_FILES; BroadPhase_test.h; DataEngine_test.h; ForceField_test.h; PrimitiveCreation.h; Elasticity_test.h; Elasticity_test.inl; ); list(APPEND SOURCE_FILES; PrimitiveCreation.cpp; Elasticity_test.cpp; ). sofa_find_package(Sofa.Framework REQUIRED); sofa_find_package(Sofa.Component REQUIRED); sofa_find_package(SceneCreator REQUIRED); sofa_find_package(Sofa.Testing REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${PYTHON_FILES}); target_link_libraries(${PROJECT_NAME} SceneCreator Sofa.Framework Sofa.Component Sofa.Testing). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; PACKAGE_VERSION ${PROJECT_VERSION}; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/CMakeLists.txt:552,Test,Testing,552,applications/plugins/SofaTest/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/CMakeLists.txt,2,['Test'],['Testing']
Testability,cmake_minimum_required(VERSION 3.22); project(TestPluginA VERSION 0.7). set(HEADER_FILES; ComponentA.h; ComponentB.h; TestPluginA.h; ). set(SOURCE_FILES; ComponentA.cpp; ComponentB.cpp; initTestPluginA.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Core Sofa.DefaultType). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; ); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/test/system/TestPluginA/CMakeLists.txt:46,Test,TestPluginA,46,Sofa/framework/Helper/test/system/TestPluginA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/test/system/TestPluginA/CMakeLists.txt,2,['Test'],['TestPluginA']
Testability,cmake_minimum_required(VERSION 3.22); project(TestPluginB VERSION 0.7). set(HEADER_FILES; TestPluginB.h; ). set(SOURCE_FILES; initTestPluginB.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Core Sofa.DefaultType TestPluginA). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; ); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/test/system/TestPluginB/CMakeLists.txt:46,Test,TestPluginB,46,Sofa/framework/Helper/test/system/TestPluginB/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/test/system/TestPluginB/CMakeLists.txt,3,['Test'],"['TestPluginA', 'TestPluginB']"
Testability,cmake_minimum_required(VERSION 3.22); project(runSofa_test). set(SOURCE_FILES; runSofa_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES} ); target_link_libraries(${PROJECT_NAME} Sofa.Testing). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/runSofa/runSofa_test/CMakeLists.txt:193,Test,Testing,193,applications/projects/runSofa/runSofa_test/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/runSofa/runSofa_test/CMakeLists.txt,1,['Test'],['Testing']
Testability,com/sofa-framework/sofa/pull/4535); - [Config] Add cxxopts cmake find module [#4538](https://github.com/sofa-framework/sofa/pull/4538); - [Sofa.Testing] Add SimpleApi in Config.cmake.in [#4542](https://github.com/sofa-framework/sofa/pull/4542); - [script] Stale action: remove temporary layer and activate closing [#4560](https://github.com/sofa-framework/sofa/pull/4560); - [README] Update link to Discord [#4562](https://github.com/sofa-framework/sofa/pull/4562); - [plugins] Add SimpleApi as a dependency in SofaCarving_test [#4572](https://github.com/sofa-framework/sofa/pull/4572); - [Constraint.Lagrangian.Solver] Make problemId counter id atomic [#4581](https://github.com/sofa-framework/sofa/pull/4581); - [Collision.Response.Contact] Make contactId thread-safe [#4582](https://github.com/sofa-framework/sofa/pull/4582); - [Collision.Detection] Give current intersection methods as parameter to intersection functions [#4583](https://github.com/sofa-framework/sofa/pull/4583); - [LinearAlgebra] Fix compilation of assert [#4598](https://github.com/sofa-framework/sofa/pull/4598); - [Multithreading] fix multithread packaging [#4619](https://github.com/sofa-framework/sofa/pull/4619); - [GitHub] Add timezone info on cron Actions [#4626](https://github.com/sofa-framework/sofa/pull/4626); - [LinearAlgebra] Trigger error on the Eigen version [#4630](https://github.com/sofa-framework/sofa/pull/4630); - [Core] Missing call to super init [#4634](https://github.com/sofa-framework/sofa/pull/4634); - [Demos] Fix regression for fallingBeamLagrangianCollision.scn [#4643](https://github.com/sofa-framework/sofa/pull/4643); - [Geomagic] Fix compilation. Replace Vector3 by Vec3 [#4661](https://github.com/sofa-framework/sofa/pull/4661); - [CollisionOBBCapsule] Fix duplicated registration in the factory [#4709](https://github.com/sofa-framework/sofa/pull/4709); - [Contact] Fix crash if collision models are not provided [#4710](https://github.com/sofa-framework/sofa/pull/4710); - [Engine.Analyze],MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:9452,assert,assert,9452,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['assert'],['assert']
Testability,"ction [#500]( https://github.com/sofa-framework/sofa/pull/500 ). **Plugins / Projects**; - [All]; - FIX: compilation warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - [CGALPlugin]; - Fix warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - [image]; - Fix warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - [Registration]; - Remove deprecated scene [#331]( https://github.com/sofa-framework/sofa/pull/331 ); - [SofaPython]; - General cleaning [#304]( https://github.com/sofa-framework/sofa/pull/304 ); - Fix warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - print cleaning + SofaPython quaternion dot product [#404]( https://github.com/sofa-framework/sofa/pull/404 ); - [runSofa]; - Clean : remove non-ASCII chars in string [#327]( https://github.com/sofa-framework/sofa/pull/327 ). ____________________________________________________________. ## [v17.06]( https://github.com/sofa-framework/sofa/tree/v17.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v16.12...v17.06 ). ### New features. **For users**; - [SceneCreator]; - new methods to add basic 3D object: Cube, Cylinder, Sphere and Plane. In rigid or deformable.; - [GeneralTopology]; - SphereGridTopology component to create sphere grids, similar to CylinderGridTopology.; - Adds a new orientedBox dataField in BoxROI so that we can use it to either defined AABoxes or OrientedBox; - Minor improvement on the way warning/error message are presented to the users in runSofa. A single panel is now used instead of of two, it is always displayed, the Panel name also contains the number of message eg: ""Messages(5)""; - The Graph view is now displaying the type of message they contains.; - [runSofa]; - Autoload plugins, described in the user-custom file 'plugin_list.conf' if present; else 'plugin_list.conf.default' containing all compiled plugins and generated automatically by CMake. **For developpers**; - Add a Logger component that stores the his",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:323984,log,log,323984,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,"d [#3087]( https://github.com/sofa-framework/sofa/pull/3087 ); - [SofaCUDA] Fix compilation for SOFA_GPU_CUDA_DOUBLE [#2863]( https://github.com/sofa-framework/sofa/pull/2863 ); - [SofaCUDA] Fix some namespace, headers includes and decl exports [#3003]( https://github.com/sofa-framework/sofa/pull/3003 ); - [SofaCUDA] Fix symbol definition at run time and compilation error [#2634]( https://github.com/sofa-framework/sofa/pull/2634 ); - [SofaCUDA] Ignore CudaTLED-related scene on the CI [#2893]( https://github.com/sofa-framework/sofa/pull/2893 ); - [SofaCUDA] Restore CudaHexahedronFEMForceField [#2535]( https://github.com/sofa-framework/sofa/pull/2535 ); - [SofaCUDA] Rework and move benchmark scenes for HexahedronFEMForceField and TetrahedronFEMForceField [#2561]( https://github.com/sofa-framework/sofa/pull/2561 ); - [SofaCUDA] fix HexahedronFEMForceField double compilation [#3081]( https://github.com/sofa-framework/sofa/pull/3081 ); - [SofaCUDA] update .scene-tests files to fix tests on dashboard [#2616]( https://github.com/sofa-framework/sofa/pull/2616 ); - [SofaCUDA] FIX linking error : needed the code of the destructor [#2708]( https://github.com/sofa-framework/sofa/pull/2708 ); - [SofaCUDA] Forward declaration in wrong namespace [#2923]( https://github.com/sofa-framework/sofa/pull/2923 ); - [SofaMatrix] Move CI setting to the plugin folder [#2579]( https://github.com/sofa-framework/sofa/pull/2579 ); - [SofaNewMat] Fix compilation [#2829]( https://github.com/sofa-framework/sofa/pull/2829 ); - [SofaSphFluid] Fix ParticleSource topologicalChanges use new callbacks mechanism [#2868]( https://github.com/sofa-framework/sofa/pull/2868 ); - [image] fix shadow variable [#2606]( https://github.com/sofa-framework/sofa/pull/2606 ); - [image] remove shadow variable [#2910]( https://github.com/sofa-framework/sofa/pull/2910 ); - [runSofa] Clean up in case GUI init fails [#3106]( https://github.com/sofa-framework/sofa/pull/3106 ); - [runSofa] Fix CMake error if all plugins are di",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:116297,test,tests,116297,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['test'],['tests']
Testability,"d add key function [#3240](https://github.com/sofa-framework/sofa/pull/3240) ; - [SolidMechanics.Spring] RestShapeSpringForceField: Fix addKToMatrix [#3249](https://github.com/sofa-framework/sofa/pull/3249) ; - [all] Split Tag & TagSet into separated files and fix missing includes. [#3277](https://github.com/sofa-framework/sofa/pull/3277) ; - [all] Minor warning fixes [#3306](https://github.com/sofa-framework/sofa/pull/3306) ; - [LinearSolver.Direct] Missing call to super init() [#3316](https://github.com/sofa-framework/sofa/pull/3316) ; - [LinearAlgebra] Fix BDT compilation [#3333](https://github.com/sofa-framework/sofa/pull/3333) ; - [BarycentricMappers] Fix potential division by 0 [#3383](https://github.com/sofa-framework/sofa/pull/3383) ; - [Engine.Analyze] ClusteringEngine: set correct values in load() [#3398](https://github.com/sofa-framework/sofa/pull/3398) ; - [Tests] Update tests to new modules [#3406](https://github.com/sofa-framework/sofa/pull/3406) ; - [Tests] Fix mutiple component init calls in several tests [#3447](https://github.com/sofa-framework/sofa/pull/3447) ; - [image, FEM, LinearSolver] fix Eigen3 assertion with SVD [#3452](https://github.com/sofa-framework/sofa/pull/3452) ; - [Constraint.lagrangian] Update BilateralInteractionConstraint namespace [#3468](https://github.com/sofa-framework/sofa/pull/3468) ; - [Topology.container] Fix missing TopologyElementType setting in SparseGridTopology init [#3475](https://github.com/sofa-framework/sofa/pull/3475) ; - [LinearSolver.Direct] Fix crashing unit tests [#3512](https://github.com/sofa-framework/sofa/pull/3512) ; - [LinearSolver.Direct] Segfault in SparseLDLSolver due to empty system matrix [#3529](https://github.com/sofa-framework/sofa/pull/3529) ; - [Tests] Update required plugins in tests [#3542](https://github.com/sofa-framework/sofa/pull/3542) . **Plugins / Projects**; - [SofaCUDA] FIX namespaces [#2935](https://github.com/sofa-framework/sofa/pull/2935) ; - [Plugins] Fix Cmake configuration w/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:80327,Test,Tests,80327,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Test', 'test']","['Tests', 'tests']"
Testability,d safe [#2942]( https://github.com/sofa-framework/sofa/pull/2942 ); - [IO.Mesh] Fix binary loading in case of degenerated triangles [#3084]( https://github.com/sofa-framework/sofa/pull/3084 ); - [Lagrangian.Correction] LinearSolverConstraintCorrection: Trivial optimisations for MSVC [#3135]( https://github.com/sofa-framework/sofa/pull/3135 ); - [Mass] Fix point topological changes for UniformMass [#2853]( https://github.com/sofa-framework/sofa/pull/2853 ); - [MeshGmsh]Fixed false error detection in MeshGmsh.cpp file [#3030]( https://github.com/sofa-framework/sofa/pull/3030 ); - [Preconditioner] Fix missing find_package() in the cmake.in [#2841]( https://github.com/sofa-framework/sofa/pull/2841 ); - [S.C.Engine] Remove previous engine files and fix some cmake.in [#2909]( https://github.com/sofa-framework/sofa/pull/2909 ); - [S.C.LinearSolver]fix bug in linearsolvers and preconditioners [#2883]( https://github.com/sofa-framework/sofa/pull/2883 ); - [S.C.Mapping] Fix assertion in BarycentricMapper [#2989]( https://github.com/sofa-framework/sofa/pull/2989 ); - [S.C.Topology.Container.Dynamic] Fix assert error in QuadSetTopologyContainer [#2990]( https://github.com/sofa-framework/sofa/pull/2990 ); - [SceneUtility] MakeDataAliasComponent: Remove alias in destructor [#2832]( https://github.com/sofa-framework/sofa/pull/2832 ); - [Sofa.Component.Diffusion][Sofa.Component.Mass] Fix diffusion [#2798]( https://github.com/sofa-framework/sofa/pull/2798 ); - [Sofa.Component.Engine] Change the default drawSize from 0.0 to 1.0 for ROIs. [#3045]( https://github.com/sofa-framework/sofa/pull/3045 ); - [Sofa.Component] Fix compilation when FLOATING_POINT is set to float [#2907]( https://github.com/sofa-framework/sofa/pull/2907 ); - [Sofa.Component] Put the initilization code in init() instead of the entrypoint initExternalPlugin() [#3112]( https://github.com/sofa-framework/sofa/pull/3112 ); - [Sofa.Core] Remove annoying 'unused' warning in StateAccessor [#2835]( https://github.com/sofa-,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:107751,assert,assertion,107751,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['assert'],['assertion']
Testability,d specific targets [#254]( https://github.com/sofa-framework/sofa/pull/254 ); - Fix rgbacolor parsing [#305]( https://github.com/sofa-framework/sofa/pull/305 ); - CMake: installing gtest headers for separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - [SofaKernel]; - Update the RichConsoleStyleMessageFormatter [#126]( https://github.com/sofa-framework/sofa/pull/126 ); - creation of a defaulttype::RGBAColor [#119]( https://github.com/sofa-framework/sofa/pull/119 ); - add a new method in BaseObjectDescription [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - adding listener mechanism to SceneLoader [#205]( https://github.com/sofa-framework/sofa/pull/205 ); - common usage for DiagonalMass and tests [#230]( https://github.com/sofa-framework/sofa/pull/230 ); - add tests for DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - add tests for DefaultAnimationLoop [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for LocalMinDistance [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add a way to convert message type to string in Message.cpp [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - adding listener mechanism to SceneLoader [#204]( https://github.com/sofa-framework/sofa/pull/204 ); - Grid Topologies cleanup + new SphereGrid [#164]( https://github.com/sofa-framework/sofa/pull/164 ); - Add CMake option SOFA_WITH_EXPERIMENTAL_FEATURES (default OFF) to enable MechanicalObject::buildIdentityBlocksInJacobian [#276]( https://github.com/sofa-framework/sofa/pull/276 ); - [SofaGraphComponents]; - add tests for RequiredPlugin [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaHelper]; - GLSL: load shader source code from a standard string [#158]( https://github.com/sofa-framework/sofa/pull/158 ); - [SofaBaseTopolo,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:327214,test,tests,327214,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"defined in `VecTypes.h` and `RigidTypes.h`).; SofaCUDA adds more data types.; They still represent the same type of data, but they are implemented such that they can be manipulated on the GPU using CUDA.; For example, the CPU data type `Vec3Types` equivalent in SofaCUDA is `CudaVec3Types`.; CUDA data types are defined in `CudaTypes.h`. In SOFA, components working with a specific data type are just template classes explicitly instantiated with this data type.; For example, `MechanicalObject<Vec3Types>` is the instantiation of the template class `MechanicalObject` with `Vec3Types` as the template parameter.; In SofaCUDA, components are template specializations of the SOFA equivalents.; For example, `MechanicalObject<CudaVec3Types>` is a specialization of `MechanicalObject` for `CudaVec3Types`. The result is that the user just has to change the template parameter in the scene, in order to use the CUDA version of the same component.; For example, in XML, `<MechanicalObject template=""Vec3f"" />` is the CPU version of `MechanicalObject`, and `<MechanicalObject template=""CudaVec3f"" />` is the GPU version.; Note that in SOFA Vec3Types are by default in double (Vec3d), except if you compile in float only (CMake option: SOFA_FLOATING_POINT_TYPE). However CudaVec3Types are using float on the device. You can activate double precision using CMake option: SOFACUDA_DOUBLE). ## Performances. The folder `scenes/benchmarks` contains simulation files used to compare performances between CPU and GPU implementations.; All scenes exist in double: the CPU version has the suffix `_cpu`, and the GPU version has the suffix `_gpu`. To give you an idea of the speed up you can achieve using SofaCUDA, measurement have been performed on some systems on some simulations in `scenes/benchmarks`.; It is provided as a CSV file in the `doc` folder.; Here is the corresponding graph:; ![performances_csv](https://user-images.githubusercontent.com/21199245/148964875-99c21320-384f-40c9-9dc6-a5e77a8dca82.png)",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/README.md:2134,benchmark,benchmarks,2134,applications/plugins/SofaCUDA/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/README.md,2,['benchmark'],['benchmarks']
Testability,"dont mix type::fixed_array and type::Vec [#4269](https://github.com/sofa-framework/sofa/pull/4269); - [all] Fix headeronly extlibs licenses [#4272](https://github.com/sofa-framework/sofa/pull/4272); - [all] Externalize cxxopts [#4273](https://github.com/sofa-framework/sofa/pull/4273); - [Topology.Mapping] SimpleTesselatedHexaTopologicalMapping: use correct type for Index [#4279](https://github.com/sofa-framework/sofa/pull/4279); - [GUI.Qt] Minor single-line cleaning [#4308](https://github.com/sofa-framework/sofa/pull/4308); - [Core] Minor clean of DefaultAnimationLoop [#4314](https://github.com/sofa-framework/sofa/pull/4314); - [Collections] Remove reference to non-existing SofaSimulation [#4320](https://github.com/sofa-framework/sofa/pull/4320); - [All] Changed default plugins [#4322](https://github.com/sofa-framework/sofa/pull/4322); - [ODESolver.Backward] Convert double to SReal in NewmarkImplicitSolver [#4341](https://github.com/sofa-framework/sofa/pull/4341); - [Sofa.Testing] Do not build Sofa.Testing if SOFA_BUILD_TESTS is OFF [#4459](https://github.com/sofa-framework/sofa/pull/4459); - [Simulation.Common] Fix downstream project compilation with tinyXML2 [#4506](https://github.com/sofa-framework/sofa/pull/4506). ### Refactoring; - [Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code [#3278](https://github.com/sofa-framework/sofa/pull/3278); - [all] Rename DefaultContactManager into CollisionResponse [#3891](https://github.com/sofa-framework/sofa/pull/3891); - [FEM.Elastic] Minor refactor of buildStiffnessMatrix in TetrahedronFEMForceField [#3983](https://github.com/sofa-framework/sofa/pull/3983); - [plugins] Remove PSL files, add ExternalProjectConfig and update CMakeLists [#4047](https://github.com/sofa-framework/sofa/pull/4047); - Revert ""[Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code"" [#4068](https://github.com/sofa-framework/sofa/pull/4068); - [MechanicalLoad] Implement buildStiffnessMa",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:48079,Test,Testing,48079,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Testing']
Testability,"e.Analyze] ClusteringEngine: set correct values in load() [#3398](https://github.com/sofa-framework/sofa/pull/3398) ; - [Tests] Update tests to new modules [#3406](https://github.com/sofa-framework/sofa/pull/3406) ; - [Tests] Fix mutiple component init calls in several tests [#3447](https://github.com/sofa-framework/sofa/pull/3447) ; - [image, FEM, LinearSolver] fix Eigen3 assertion with SVD [#3452](https://github.com/sofa-framework/sofa/pull/3452) ; - [Constraint.lagrangian] Update BilateralInteractionConstraint namespace [#3468](https://github.com/sofa-framework/sofa/pull/3468) ; - [Topology.container] Fix missing TopologyElementType setting in SparseGridTopology init [#3475](https://github.com/sofa-framework/sofa/pull/3475) ; - [LinearSolver.Direct] Fix crashing unit tests [#3512](https://github.com/sofa-framework/sofa/pull/3512) ; - [LinearSolver.Direct] Segfault in SparseLDLSolver due to empty system matrix [#3529](https://github.com/sofa-framework/sofa/pull/3529) ; - [Tests] Update required plugins in tests [#3542](https://github.com/sofa-framework/sofa/pull/3542) . **Plugins / Projects**; - [SofaCUDA] FIX namespaces [#2935](https://github.com/sofa-framework/sofa/pull/2935) ; - [Plugins] Fix Cmake configuration w/o compat [#3209](https://github.com/sofa-framework/sofa/pull/3209) ; - [GUI.Qt] Fix MSAA sampling setup [#3220](https://github.com/sofa-framework/sofa/pull/3220) ; - [DrawToolGL] Fix ill-formed drawLines with multiple colors [#3260](https://github.com/sofa-framework/sofa/pull/3260) ; - [SofaSphFluid] Fix required plugin in scenes [#3272](https://github.com/sofa-framework/sofa/pull/3272) ; - [SofaCarving] Fix bug in CarvingManager when searching for target collision model [#3276](https://github.com/sofa-framework/sofa/pull/3276) ; - [GUI/runSofa] Cmake: tweaks and fixes [#3323](https://github.com/sofa-framework/sofa/pull/3323) ; - [CImgPlugin] Replace new keyword with creating unique pointers to properly clean up allocated memory. [#3365](https://github",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:81097,Test,Tests,81097,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Test', 'test']","['Tests', 'tests']"
Testability,"eAnimationLoop; - adding RigidRestJointMapping to compute a joint between a rigid body's current position and its rest position.; - large compliances are considered as null stiffnesses; - Offset default to isMechanical=True; - python quaternion log; - added nlnscg acceleration; - pure python constraints; - .inl for python mappings; - adding Addition[Multi]Mapping; - implementing AssembledMultiMapping::applyDJT; - adding DotProduct[Multi]Mapping (with tests); - adding NormalizationMapping to map a 3d vector to its normalization; - adding ConstantAssembled[Multi]Mapping; - adding SafeDistanceMapping: a distance mapping that becomes a difference mapping for too small distances.; - adding SafeDistanceFromTargetMapping; - using the new SofaPython API; - SafeDistanceFromTargetMapping can now be ""safe"" by giving the edge directions when they are known; - adding the SofaCompliant python module (first module created outside of SofaPython!); - adding DotProductFromTargetMapping (with test); - adding RigidJointFromTargetMapping and RigidJointFromWorldFrameMapping; - add of complementary API to create deformable articulated systems; - adding NegativeUnilateralConstraint to guarantee negativeness; - adding PenaltyForceField and using it in penalty contact response; - add of two file from the SohusimDev plugin. - [image]; - API: Sampler.addMechanicalObject() more versatile; - API: refactor python API; - API: add addClosingVisual(); - add function in python API to retrieve perspective property; - MeshToImageEngine: move getValue out of for loops; - add a python ImagePlaneController; - Data<Image<T>> are now specifically bound in python; - remove pthread and X11 dependencies; - add metaimage tags that may be used to define orientation; - add python function to retrieve image type; - simpler imagePlane python controller; - add a createTransferFunction method; - improved cutplane texture resolution; - half perspective, half orthographic image transforms; - add imageCoordValuesFromPosi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:354872,test,test,354872,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,eMechanics_test]** Update tests to use Sofa.Testing instead of Sofa_Test [#2144]( https://github.com/sofa-framework/sofa/pull/2144 ); - **[SofaBaseTopology]** Improve TopologyDataHandler message [#2152]( https://github.com/sofa-framework/sofa/pull/2152 ); - **[SofaBaseTopology]** Remove definition of real [#1955]( https://github.com/sofa-framework/sofa/pull/1955 ); - **[SofaBaseTopology]** Remove warning when a Data is directly linked to a topoogy Data container [#1971]( https://github.com/sofa-framework/sofa/pull/1971 ); - **[SofaBaseTopology]** Remove warnings [#2046]( https://github.com/sofa-framework/sofa/pull/2046 ); - **[SofaBaseTopology]** Single definition of global variables [#1950]( https://github.com/sofa-framework/sofa/pull/1950 ); - **[SofaBaseUtils]** Clean RequiredPlugin [#1899]( https://github.com/sofa-framework/sofa/pull/1899 ); - **[SofaBaseVisual]** Move #include<Mat.h> from BaseCamera.h to BaseCamera.cpp [#1846]( https://github.com/sofa-framework/sofa/pull/1846 ); - **[SofaBase]** Convert tests to Sofa.Testing [#2146]( https://github.com/sofa-framework/sofa/pull/2146 ); - [SofaBoundaryCondition] Avoid ambiguity [#1958]( https://github.com/sofa-framework/sofa/pull/1958 ); - [SofaCommon] Convert tests to Sofa.Testing [#2153]( https://github.com/sofa-framework/sofa/pull/2153 ); - [SofaConstraint] Small cleaning [#2174]( https://github.com/sofa-framework/sofa/pull/2174 ); - **[SofaCore]** Deprecate operator= [#2167]( https://github.com/sofa-framework/sofa/pull/2167 ); - **[SofaCore]** Factoring code in Link.h [#1704]( https://github.com/sofa-framework/sofa/pull/1704 ); - **[SofaCore]** Merge TData in Data. [#1753]( https://github.com/sofa-framework/sofa/pull/1753 ); - **[SofaCore]** Minor cleaning in constraints [#2138]( https://github.com/sofa-framework/sofa/pull/2138 ); - **[SofaCore]** Move Link::CheckPath() method to PathResolver::CheckPath() [#1717]( https://github.com/sofa-framework/sofa/pull/1717 ); - **[SofaCore]** Move definition Link::read(,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:200090,test,tests,200090,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,ebug [#4491](https://github.com/sofa-framework/sofa/pull/4491); - [Topology] Fix method isQuadDeulaunayOriented and its use in splitAlongPath [#4494](https://github.com/sofa-framework/sofa/pull/4494); - [GitHub] Fix review request Discord msg [#4502](https://github.com/sofa-framework/sofa/pull/4502); - [Simulation.Core] RequiredPlugin: Avoid calling loadPlugin() twice on start-up [#4509](https://github.com/sofa-framework/sofa/pull/4509); - [Share] Remove DefaultCollisionGroupManager in the default scenes [#4521](https://github.com/sofa-framework/sofa/pull/4521); - [all] Fix some warnings [#4529](https://github.com/sofa-framework/sofa/pull/4529); - [GitHub] Fix GH Discussions Announcements for Discord [#4530](https://github.com/sofa-framework/sofa/pull/4530); - [Simulation.Core] Make TSAN pass for caduceus [#4535](https://github.com/sofa-framework/sofa/pull/4535); - [Config] Add cxxopts cmake find module [#4538](https://github.com/sofa-framework/sofa/pull/4538); - [Sofa.Testing] Add SimpleApi in Config.cmake.in [#4542](https://github.com/sofa-framework/sofa/pull/4542); - [script] Stale action: remove temporary layer and activate closing [#4560](https://github.com/sofa-framework/sofa/pull/4560); - [README] Update link to Discord [#4562](https://github.com/sofa-framework/sofa/pull/4562); - [plugins] Add SimpleApi as a dependency in SofaCarving_test [#4572](https://github.com/sofa-framework/sofa/pull/4572); - [Constraint.Lagrangian.Solver] Make problemId counter id atomic [#4581](https://github.com/sofa-framework/sofa/pull/4581); - [Collision.Response.Contact] Make contactId thread-safe [#4582](https://github.com/sofa-framework/sofa/pull/4582); - [Collision.Detection] Give current intersection methods as parameter to intersection functions [#4583](https://github.com/sofa-framework/sofa/pull/4583); - [LinearAlgebra] Fix compilation of assert [#4598](https://github.com/sofa-framework/sofa/pull/4598); - [Multithreading] fix multithread packaging [#4619](https://github.com/s,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:8574,Test,Testing,8574,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Testing']
Testability,el]** Removing double load() in Loaders [#2094]( https://github.com/sofa-framework/sofa/pull/2094 ); - [SofaLoader] Fix MeshObjLoader material parsing by using the proper locale. [#2200]( https://github.com/sofa-framework/sofa/pull/2200 ); - [SofaLoader] FIX Circular dependency in the update of MeshObjLoader [#2201]( https://github.com/sofa-framework/sofa/pull/2201 ); - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ); - [SofaMeshCollision] Fix: windows debug linkage of class EmptyFilter [#1839]( https://github.com/sofa-framework/sofa/pull/1839 ); - [SofaMiscCollision] Contact response order [#2134]( https://github.com/sofa-framework/sofa/pull/2134 ); - [SofaMiscCollision] Fix config.in cmake file for export [#2052]( https://github.com/sofa-framework/sofa/pull/2052 ); - [SofaMiscFEM] Minor changes in TrianglePressureFF and TriangularFEMFF [#1779]( https://github.com/sofa-framework/sofa/pull/1779 ); - [SofaMiscForceField] Clean MeshMatrixMass_test and add more tests [#2191]( https://github.com/sofa-framework/sofa/pull/2191 ); - [SofaMiscTopology_test] Replace inheritence of SofaTest by BaseSimulation_test and fix test [#1909]( https://github.com/sofa-framework/sofa/pull/1909 ); - [SofaOpenGLVisual] Fix unreachable code in VisualManagerSecondaryPass [#2068]( https://github.com/sofa-framework/sofa/pull/2068 ); - [SofaOpenglVisual] Fix typo [#2029]( https://github.com/sofa-framework/sofa/pull/2029 ); - [SofaRigid] fixes applyJT of RigidMapping [#1813]( https://github.com/sofa-framework/sofa/pull/1813 ); - **[SofaSimpleFem]** Fix TetrahedronFEMForceField Von Mises stress drawing [#1854]( https://github.com/sofa-framework/sofa/pull/1854 ); - **[SofaSimpleFem]** Fix nasty bug in HexaFEMForceField' s draw() [#1766]( https://github.com/sofa-framework/sofa/pull/1766 ); - **[SofaSimpleFem]** Fix rendering options in TetrahedronFEMFF [#2156]( https://github.com/sofa-framework/sofa/pull/2156 ); - **[SofaSimulation/Tests,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:189546,test,tests,189546,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"endering. ### New features for developpers. - Preliminary Markdown support in the msg_* API. You can now write much better formatting & alignement as well as adding URL to documentations related to the error.; - class RichStyleConsoleFormatter which interprete the markdowns in the message and format this to a resizable console with nice alignement.; - class CountingMessageHandler (count the number of message for each message type); - class RoutingMessageHandler (to implement context specific routing of the messages to different handler); - class ExpectMessage and MessageAsATestFailure can be used to check that a component did or didn't send a message and generate a test failure.; - FileMonitor is now implemented on MacOS & Windows (for live-coding features, for example); - RequiredPlugin: modified API to take a list of plugins to load; - Implements the move semantics on sofa::helper::vector. ### Improvements. - **372 new tests**: DAGNode, MeshObj, DiagonalMass, BoxROI, ComplementaryROI, DifferenceEngine, BilateralInteractionConstraint, Quaternion, ImagePNG, etc.; - 184/480 components have an associated example; - [SofaKernel]; - replace raw pointers with a smart ones; - add a ComponentState attribute to BaseObject; - BaseData::typeName is now public: useful to debug; - implement DataTrackerEngine, a kind of DataEngine but that is not a BaseObject; - fix SVector<std::string>. The string serialization changed; - [SofaRigid]; - in case jetJs is called several times per step; - [SofaGeneralLoader]; - MeshVTKLoader can now read FIELD data of legacy file. Lookup tables are ignored.; - [SofaPython]; - binding AssembledSystem as a new class in python; - binding VisualModel::exportOBJ; - binding for DataFileNameVector; - add Compliant.getImplicitAssembledSystem(node); - SofaNumpy: bind/share a c++ 1d array as a numpy array; - script.Controller : handle optional arguments before createGraph; - [image]; - raw import: add commented basic size verifications (could be performed i",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:338164,test,tests,338164,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,er.cpp; ${SRC_ROOT}/io/XspLoader.cpp; ${SRC_ROOT}/kdTree.cpp; ${SRC_ROOT}/system/DynamicLibrary.cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.cpp); endif(). sofa_find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Topology REQUIRED). # LIBRARY; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). if(CMAKE_SYSTEM_NA,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:5732,log,logging,5732,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,2,"['Log', 'log']","['LoggingMessageHandler', 'logging']"
Testability,ess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingCubeUtility.cpp; ${SRC_ROOT}/NameDecoder.cpp; ${SRC_ROOT}/OptionsGroup.cpp; ${SRC_ROOT}/ScopedAdvancedTimer.cpp; ${SRC_ROOT}/Polynomial_LD.cpp; ${SRC_ROOT}/RandomGenerator.cpp; ${SRC_ROOT}/StringUtils.cpp; ${SRC_ROOT}/TagFactory.cpp; ${SRC_ROOT}/TriangleOctree.cpp; ${SRC_ROOT}/Utils.cpp; ${SRC_ROOT}/decompose.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/io/BaseFileAccess.cpp; ${SRC_ROOT}/io/FileAccess.cpp; $,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:3413,log,logging,3413,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,"est paramName to allow dash character [#1265]( https://github.com/sofa-framework/sofa/pull/1265 ). **Modules**; - [All] Clean warnings for option config, again [#1339]( https://github.com/sofa-framework/sofa/pull/1339 ); - [All] Fix SOFA_LIBSUFFIX used in Debug by PluginManager [#1313]( https://github.com/sofa-framework/sofa/pull/1313 ); - [All] Overridden 'canCreate' methods should always log an error message when they fail [#1294]( https://github.com/sofa-framework/sofa/pull/1294 ); - **[SofaBaseTopology]** Fix GridTopology edge computation [#1323]( https://github.com/sofa-framework/sofa/pull/1323 ); - **[SofaBaseTopology]**[SofaExporter] Fix failing tests due to changes in topology [#1335]( https://github.com/sofa-framework/sofa/pull/1335 ); - [SofaConstraint] Fix test further to #1369 [#1386]( https://github.com/sofa-framework/sofa/pull/1386 ); - **[SofaEigen2Solver]** Fix CMake test on the version of Eigen [#1416]( https://github.com/sofa-framework/sofa/pull/1416 ); - **[SofaEngine]** Fix engine unit tests [#1280]( https://github.com/sofa-framework/sofa/pull/1280 ); - **[SofaEngine]** Fix Engine_test [#1338]( https://github.com/sofa-framework/sofa/pull/1338 ); - **[SofaFramework]** Windows/VS: Remove warnings flags from definitions [#1368]( https://github.com/sofa-framework/sofa/pull/1368 ); - [SofaGuiQt] Fix compilation for SOFA_DUMP_VISITOR_INFO [#1415]( https://github.com/sofa-framework/sofa/pull/1415 ); - [SofaGuiQt] Fix node graph [#1424]( https://github.com/sofa-framework/sofa/pull/1424 ); - [SofaHeadlessRecorder] Update headless recorder to use the new ffmpeg recorder [#1396]( https://github.com/sofa-framework/sofa/pull/1396 ); - **[SofaHelper]** AdvancedTimer wasn't using the good timer ids for the label assignments [#1244]( https://github.com/sofa-framework/sofa/pull/1244 ); - **[SofaHelper]** Fix unloading with PluginManager [#1274]( https://github.com/sofa-framework/sofa/pull/1274 ); - **[SofaHelper]** Fix fixed_array compilation with VS2019 [#1426](",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:234782,test,tests,234782,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"est, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # add custom googletest main; add_subdirectory(SofaGTestMain). set(SOFATESTINGSRC_ROOT ""src/sofa/testing""). set(HEADER_FILES; ${SOFATESTINGSRC_ROOT}/config.h.in; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.h; ${SOFATESTINGSRC_ROOT}/BaseTest.h; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.h; ${SOFATESTINGSRC_ROOT}/NumericTest.h; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.h; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.h; ). set(SOURCE_FILES; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.cpp; ${SOFATESTINGSRC_ROOT}/BaseTest.cpp; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.cpp; ${SOFATESTINGSRC_ROOT}/NumericTest.cpp; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.cpp; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.cpp; ). sofa_find_package(Sofa.Helper REQUIRED); sofa_find_package(Sofa.DefaultType REQUIRED); sofa_find_package(Sofa.Core REQUIRED); sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.DefaultType Sofa.Core Sofa.Simulation.Graph Sofa.SimpleApi GTest::gtest SofaGTestMain ); target_compile_options(${PROJECT_NAME} PUBLIC ""-DGTEST_LINKED_AS_SHARED_LIBRARY=1""). set(SOFA_TESTING_RESOURCES_DIR ""${CMAKE_CURRENT_SOURCE_DIR}/resources""). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_TESTING_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_TESTING_BUILD_TESTS); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt:3674,Test,Tests,3674,Sofa/framework/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,ework/sofa/pull/4019); - [all] Lifecycle v23.12 1/n [#4034](https://github.com/sofa-framework/sofa/pull/4034); - [Core] Make doDrawVisual final [#4045](https://github.com/sofa-framework/sofa/pull/4045); - [Visual] ADD a visualization flag and draw method for NarrowPhaseDetection [#4048](https://github.com/sofa-framework/sofa/pull/4048); - [SolidMechanics.TensorMass] Implement buildStiffnessMatrix for TetrahedralTensorMassForceField [#4127](https://github.com/sofa-framework/sofa/pull/4127); - [BatchGUI] Show progress bar [#4168](https://github.com/sofa-framework/sofa/pull/4168); - [Constraint.Lagrangian.Solver] Another step to factorize both constraint solvers [#4213](https://github.com/sofa-framework/sofa/pull/4213); - [all] Replace tinyxml by external tinyxml2 [#4240](https://github.com/sofa-framework/sofa/pull/4240). ### Improvements; - [all] Add namespaces in the factory and a python-like import mechanism [#2512](https://github.com/sofa-framework/sofa/pull/2512); - [IO][Tests] Add basic test for the MeshSTLLoader [#2999](https://github.com/sofa-framework/sofa/pull/2999); - [SofaCarving] Add an example written in python [#3457](https://github.com/sofa-framework/sofa/pull/3457); - [MultiThreading] Implement domain decomposition for a lock-free parallelism [#3566](https://github.com/sofa-framework/sofa/pull/3566); - [Components] Add functions to visualization of TetrahedronFemForceField [#3821](https://github.com/sofa-framework/sofa/pull/3821); - [LinearAlgebra] Change access specifier for the method set [#3834](https://github.com/sofa-framework/sofa/pull/3834); - [Mapping.NonLinear] Warns when non-symmetric matrix is produced [#3838](https://github.com/sofa-framework/sofa/pull/3838); - [Spring] Limit spring force to some axis [#3849](https://github.com/sofa-framework/sofa/pull/3849); - [Spring] Limit spring force to some axis [#3850](https://github.com/sofa-framework/sofa/pull/3850); - [Constraint] Add tag to classify constraints [#3888](https://github.com/sofa-fra,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:24719,Test,Tests,24719,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Test', 'test']","['Tests', 'test']"
Testability,"f the barycentric mapping [#1125]( https://github.com/sofa-framework/sofa/pull/1125 ); - [SofaMisc] Fix compilation with SOFA_NO_OPENGL [#1193]( https://github.com/sofa-framework/sofa/pull/1193 ); - **[SofaSimulationGraph]** Fix CollisionGroupManager wrong search of deformable object node [#1060]( https://github.com/sofa-framework/sofa/pull/1060 ); - **[SofaSimulationGraph]** Stop DAGNode get parent topology process in BarycentricMapping [#1176]( https://github.com/sofa-framework/sofa/pull/1176 ); - [SofaSphFluid] Clean, Fix, Update ParticleSink [#1195]( https://github.com/sofa-framework/sofa/pull/1195 ). **Plugins / Projects**; - [All] Fix minor compilation issue in plugins [#1106]( https://github.com/sofa-framework/sofa/pull/1106 ); - [Carving plugin] Small fix at init. [#1110]( https://github.com/sofa-framework/sofa/pull/1110 ); - [Cgal plugin] Fix windows cmake dll path and add a scene example [#958]( https://github.com/sofa-framework/sofa/pull/958 ); - [Regression_test] Update regression test references for CollisionGroup [#1102]( https://github.com/sofa-framework/sofa/pull/1102 ). ### Cleanings. **Architecture**; - [CMake] Use cmake_dependent_option for plugin tests [#1164]( https://github.com/sofa-framework/sofa/pull/1164 ). **Modules**; - [All] Fix order warnings [#1239]( https://github.com/sofa-framework/sofa/pull/1239 ); - [All] Fix override warning in option mode [#1210]( https://github.com/sofa-framework/sofa/pull/1210 ); - [All] Small cleaning on sout and serr [#1234]( https://github.com/sofa-framework/sofa/pull/1234 ); - [All] Standardize epsilons in SOFA [#1049]( https://github.com/sofa-framework/sofa/pull/1049 ); - [All] Code cleaning of multiple classes [#1116]( https://github.com/sofa-framework/sofa/pull/1116 ); - [All] Remove deprecated macro SOFA_TRANGLEFEM [#1233]( https://github.com/sofa-framework/sofa/pull/1233 ); - [All] Remove references to ""isToPrint"" because it's broken [#1197]( https://github.com/sofa-framework/sofa/pull/1197 ); - [All] Re",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:253090,test,test,253090,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,"fa when using negative or too large values in indices [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [CI]; - improvement of all test scripts. **Plugins / Projects**; - [GUI]; - mouse events are now transmitted to the scene with QtGLViewer [#132]( https://github.com/sofa-framework/sofa/pull/132 ); - [SceneCreator]; - Cosmetic changes and remove un-needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pull/202 ); - change the way createObject() handle its arguments to simplify scene writing + batch of tests [#286]( https://github.com/sofa-framework/sofa/pull/286 ); - [SofaTest]; - add Backtrace::autodump to all tests to ease debugging [#191]( https://github.com/sofa-framework/sofa/pull/191 ); - add automatic tests for updateForceMask [#209]( https://github.com/sofa-framework/sofa/pull/209 ); - add tests on PluginManager [#240]( https://github.com/sofa-framework/sofa/pull/240 ); - TestMessageHandler : new and robust implementation to connect msg_* message to test failure [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - update to use the new TestMessageHandler where msg_error generates test failures [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - add tests for TestMessageHandler [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - [SofaCUDA]; - FIX NVCC flags for debug build on Windows [#300]( https://github.com/sofa-framework/sofa/pull/300 ). ### Bug Fixes. **Modules**; - Warnings have been fixed [#229]( https://github.com/sofa-framework/sofa/pull/229 ); - [All]; - check that SofaPython is found before lauching the cmake sofa_set_python_directory command [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - use the cmake install DIRECTORY instead of ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:330224,test,tests,330224,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"fa-framework/sofa/pull/1193 ); - **[SofaSimulationGraph]** Fix CollisionGroupManager wrong search of deformable object node [#1060]( https://github.com/sofa-framework/sofa/pull/1060 ); - **[SofaSimulationGraph]** Stop DAGNode get parent topology process in BarycentricMapping [#1176]( https://github.com/sofa-framework/sofa/pull/1176 ); - [SofaSphFluid] Clean, Fix, Update ParticleSink [#1195]( https://github.com/sofa-framework/sofa/pull/1195 ). **Plugins / Projects**; - [All] Fix minor compilation issue in plugins [#1106]( https://github.com/sofa-framework/sofa/pull/1106 ); - [Carving plugin] Small fix at init. [#1110]( https://github.com/sofa-framework/sofa/pull/1110 ); - [Cgal plugin] Fix windows cmake dll path and add a scene example [#958]( https://github.com/sofa-framework/sofa/pull/958 ); - [Regression_test] Update regression test references for CollisionGroup [#1102]( https://github.com/sofa-framework/sofa/pull/1102 ). ### Cleanings. **Architecture**; - [CMake] Use cmake_dependent_option for plugin tests [#1164]( https://github.com/sofa-framework/sofa/pull/1164 ). **Modules**; - [All] Fix order warnings [#1239]( https://github.com/sofa-framework/sofa/pull/1239 ); - [All] Fix override warning in option mode [#1210]( https://github.com/sofa-framework/sofa/pull/1210 ); - [All] Small cleaning on sout and serr [#1234]( https://github.com/sofa-framework/sofa/pull/1234 ); - [All] Standardize epsilons in SOFA [#1049]( https://github.com/sofa-framework/sofa/pull/1049 ); - [All] Code cleaning of multiple classes [#1116]( https://github.com/sofa-framework/sofa/pull/1116 ); - [All] Remove deprecated macro SOFA_TRANGLEFEM [#1233]( https://github.com/sofa-framework/sofa/pull/1233 ); - [All] Remove references to ""isToPrint"" because it's broken [#1197]( https://github.com/sofa-framework/sofa/pull/1197 ); - [All] Replace NULL by nullptr [#1179]( https://github.com/sofa-framework/sofa/pull/1179 ); - [All] Try to reduce the number of compilation warnings [#1196]( https://github.co",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:253267,test,tests,253267,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"fa-framework/sofa/pull/3605) ; - [SofaCUDA] Reorganize following SOFA structure (3/n) [#3660](https://github.com/sofa-framework/sofa/pull/3660) ; - [SofaCUDA] Reorganize following SOFA structure (4/n) [#3701](https://github.com/sofa-framework/sofa/pull/3701) ; - [SofaCUDA] Reorganize following SOFA structure (5/n) [#3758](https://github.com/sofa-framework/sofa/pull/3758) ; - [SofaCUDA] Reorganize following SOFA structure (6/n) [#3760](https://github.com/sofa-framework/sofa/pull/3760) ; - [SofaCUDA] Reorganize following SOFA structure (7/n) [#3785](https://github.com/sofa-framework/sofa/pull/3785) ; - [SofaCUDA] Reorganize following SOFA structure (8/n) [#3795](https://github.com/sofa-framework/sofa/pull/3795) . ### Tests. **Modules**; - [Solver.Direct] Unit test on topological changes leading to empty system [#3501](https://github.com/sofa-framework/sofa/pull/3501) ; - [LinearAlgebra] Unit tests for RotationMatrix [#3585](https://github.com/sofa-framework/sofa/pull/3585); - [LinearAlgebra] Fix matrix unit test [#3832](https://github.com/sofa-framework/sofa/pull/3832) . **Examples / Scenes**; - [examples] Introduce example and tests for SquareMapping [#3768](https://github.com/sofa-framework/sofa/pull/3768) . ## [v22.12.00]( https://github.com/sofa-framework/sofa/tree/v22.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v22.06..v22.12 ). ### Highlighted contributions. - [Core, Helper] Add spelling suggestion in ObjectFactory [#3042](https://github.com/sofa-framework/sofa/pull/3042) ; - [Constraint.Lagrangian] Add the NNCG as NLCP solver in GenericCS [#3053](https://github.com/sofa-framework/sofa/pull/3053) ; - [CMake] Introduce CMake presets [#3305](https://github.com/sofa-framework/sofa/pull/3305) ; - [all] Type conversion cleaning (+ user-defined literal) [#3314](https://github.com/sofa-framework/sofa/pull/3314) ; - [Core] Convert warning to error in object factory [#3404](https://github.com/sofa-framework/sofa/pull/3404) . ### Breaking. **Archit",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:68636,test,test,68636,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,faBaseTopology]** Remove definition of real [#1955]( https://github.com/sofa-framework/sofa/pull/1955 ); - **[SofaBaseTopology]** Remove warning when a Data is directly linked to a topoogy Data container [#1971]( https://github.com/sofa-framework/sofa/pull/1971 ); - **[SofaBaseTopology]** Remove warnings [#2046]( https://github.com/sofa-framework/sofa/pull/2046 ); - **[SofaBaseTopology]** Single definition of global variables [#1950]( https://github.com/sofa-framework/sofa/pull/1950 ); - **[SofaBaseUtils]** Clean RequiredPlugin [#1899]( https://github.com/sofa-framework/sofa/pull/1899 ); - **[SofaBaseVisual]** Move #include<Mat.h> from BaseCamera.h to BaseCamera.cpp [#1846]( https://github.com/sofa-framework/sofa/pull/1846 ); - **[SofaBase]** Convert tests to Sofa.Testing [#2146]( https://github.com/sofa-framework/sofa/pull/2146 ); - [SofaBoundaryCondition] Avoid ambiguity [#1958]( https://github.com/sofa-framework/sofa/pull/1958 ); - [SofaCommon] Convert tests to Sofa.Testing [#2153]( https://github.com/sofa-framework/sofa/pull/2153 ); - [SofaConstraint] Small cleaning [#2174]( https://github.com/sofa-framework/sofa/pull/2174 ); - **[SofaCore]** Deprecate operator= [#2167]( https://github.com/sofa-framework/sofa/pull/2167 ); - **[SofaCore]** Factoring code in Link.h [#1704]( https://github.com/sofa-framework/sofa/pull/1704 ); - **[SofaCore]** Merge TData in Data. [#1753]( https://github.com/sofa-framework/sofa/pull/1753 ); - **[SofaCore]** Minor cleaning in constraints [#2138]( https://github.com/sofa-framework/sofa/pull/2138 ); - **[SofaCore]** Move Link::CheckPath() method to PathResolver::CheckPath() [#1717]( https://github.com/sofa-framework/sofa/pull/1717 ); - **[SofaCore]** Move definition Link::read() method to BaseLink::read() [#1736]( https://github.com/sofa-framework/sofa/pull/1736 ); - **[SofaCore]** Move function definition in cpp files [#2041]( https://github.com/sofa-framework/sofa/pull/2041 ); - **[SofaCore]** Move the streaming operator from .h to .,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:200313,Test,Testing,200313,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Testing']
Testability,faGraphComponent] Restore check of deprecated components [#2267]( https://github.com/sofa-framework/sofa/pull/2267 ); - [SofaGuiQt] Introduce expand/collapse buttons [#2322]( https://github.com/sofa-framework/sofa/pull/2322 ); - [SofaGuiQt] Introduce expand/collapse buttons in profiler [#2351]( https://github.com/sofa-framework/sofa/pull/2351 ); - [SofaGuiQt] Multiple selection of timers in the profiler [#2141]( https://github.com/sofa-framework/sofa/pull/2141 ); - [SofaGuiQt] UX: graph is easier to read [#2356]( https://github.com/sofa-framework/sofa/pull/2356 ); - [SofaHelper] Add a method getTrace() to BackTrace class. [#2341]( https://github.com/sofa-framework/sofa/pull/2341 ); - [SofaHelper] Factory key type can be other than std::string [#2259]( https://github.com/sofa-framework/sofa/pull/2259 ); - [SofaMiscFEM_test] Add class to test and compare TriangleFEM and TriangularFEMForceField [#2249]( https://github.com/sofa-framework/sofa/pull/2249 ); - [SofaMiscForceField_test] Add TopologicalChanges unit tests for MeshMatrixMass [#2215]( https://github.com/sofa-framework/sofa/pull/2215 ); - [SofaMiscTopology] Add a component TopologyBoundingTrasher to remove mesh going outside from scene bounding box [#2288]( https://github.com/sofa-framework/sofa/pull/2288 ); - [SofaSimpleFem] Add callback on VonMises in TetrahedronFEMForceField [#2407]( https://github.com/sofa-framework/sofa/pull/2407 ); - [SofaSimpleFem] Hexa FEM optimization when assembling by bloc [#2240]( https://github.com/sofa-framework/sofa/pull/2240 ); - [SofaSimpleFem] Simplify bloc-based optimization [#2281]( https://github.com/sofa-framework/sofa/pull/2281 ); - [SofaSimulationCore] Clearer message when a linear solver is missing [#2221]( https://github.com/sofa-framework/sofa/pull/2221 ); - [SofaSparseSolver] Fix msg readibility in SparseLDL [#2294]( https://github.com/sofa-framework/sofa/pull/2294 ); - [SofaSparseSolver] Introduce FillReducingOrdering [#2501]( https://github.com/sofa-framework/sofa/p,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:142790,test,tests,142790,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"for TestMessageHandler [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - [SofaCUDA]; - FIX NVCC flags for debug build on Windows [#300]( https://github.com/sofa-framework/sofa/pull/300 ). ### Bug Fixes. **Modules**; - Warnings have been fixed [#229]( https://github.com/sofa-framework/sofa/pull/229 ); - [All]; - check that SofaPython is found before lauching the cmake sofa_set_python_directory command [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - use the cmake install DIRECTORY instead of FILES to preserve the files hierarchy when installing [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - fixing issue related to parsing attributes with atof/atoi [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - unify color datafield [#206]( https://github.com/sofa-framework/sofa/pull/206 ); - Fix CMakeLists bug on Sofa.ini and installedSofa.ini creation [#291]( https://github.com/sofa-framework/sofa/pull/291 ); - Fix a lot of failing tests (#271, #279); - Fix compilation with SOFA_FLOATING_POINT_TYPE as float [#262]( https://github.com/sofa-framework/sofa/pull/262 ); - CMake: Fix and clean boost, when using Sofa as an external lib [#421]( https://github.com/sofa-framework/sofa/pull/421 ); - [SofaKernel]; - Fix the Filemonitor_test random failure on MacOs [#143]( https://github.com/sofa-framework/sofa/pull/143 ); - implement a numerical integration for triangle [#249]( https://github.com/sofa-framework/sofa/pull/249 ); - add brace initializer to helper::vector class [#252]( https://github.com/sofa-framework/sofa/pull/252 ); - Activates thread-safetiness on MessageDispatcher. [#257]( https://github.com/sofa-framework/sofa/pull/257 ); - Fix getRelativePath() in DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - FileRepository::getRelativePath() lowering the case on WIN32 is now a deprecated behavior [#264]( https://github.com/sofa-framework/sofa/pull/264 ); - Fix FileRepository should not be optional [#122]( https:/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:331684,test,tests,331684,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"framework/sofa/pull/158 ); - [SofaBaseTopology]; - GridTopology : implement ""flat"" grids in 1 or 2 dimension by using setting grid resolution to ""1"" in the corresponding axis, and associated examples [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - add tests for RegularGridTopology [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - [SofaEngine]; - BREAKING: Add oriented box feature to BoxROI [#108]( https://github.com/sofa-framework/sofa/pull/108 ); - [SofaConstraint]; - add instantiation of constraint corrections with Vec2f [#157]( https://github.com/sofa-framework/sofa/pull/157 ); - [SofaOpenglVisual]; - add tests for ClipPlane [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaVolumetricData]; - add tests for DistanceGrid [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for Light [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaBoundaryCondition]; - add tests for ConstantForceField, some of them are OpenIssue demonstrating existing problem, as crashing sofa when using negative or too large values in indices [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [CI]; - improvement of all test scripts. **Plugins / Projects**; - [GUI]; - mouse events are now transmitted to the scene with QtGLViewer [#132]( https://github.com/sofa-framework/sofa/pull/132 ); - [SceneCreator]; - Cosmetic changes and remove un-needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pull/202 ); - change the way createObject() handle its arguments to simplify scene writing + batch of tests [#286]( https://github.com/sofa-framework/sofa/pull/286 ); - [SofaTest]; - add Backtrace::autodump to all tests to ease debugging [#191]( https://github.com",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:329119,test,tests,329119,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,framework/sofa/pull/2843 ); - [SofaNG] Setup Sofa.GL (as a plugin) [#2709]( https://github.com/sofa-framework/sofa/pull/2709 ); - [SofaNG] Setup SolidMechanics [#2759]( https://github.com/sofa-framework/sofa/pull/2759 ); - [SofaNG] Setup StateContainer [#2766]( https://github.com/sofa-framework/sofa/pull/2766 ); - [SofaNG] Setup Topology [#2612]( https://github.com/sofa-framework/sofa/pull/2612 ); - [SofaNG] Setup Visual [#2679]( https://github.com/sofa-framework/sofa/pull/2679 ); - [SofaNG] Setup cmake and add ODESolver [#2571]( https://github.com/sofa-framework/sofa/pull/2571 ). **Modules**; - [Sofa] Compilation without Compatibility mode [#2975]( https://github.com/sofa-framework/sofa/pull/2975 ); - [Component.Compat] Remove wrong mappings in compat layer [#2705]( https://github.com/sofa-framework/sofa/pull/2705 ); - [S.C.Engine.Generate] Convert and move MeshTetraStuffing as an engine [#2917]( https://github.com/sofa-framework/sofa/pull/2917 ); - [Sofa.Component.ODESolver] Gather tests + create Sofa.Component.ODESolver.Testing [#2650]( https://github.com/sofa-framework/sofa/pull/2650 ); - [Sofa.Component] Remove empty test projects and move/clean tests from SofaBoundaryCondition [#2991]( https://github.com/sofa-framework/sofa/pull/2991 ); - [Sofa.GUI] Clean CMake variables [#2974]( https://github.com/sofa-framework/sofa/pull/2974 ); - [Sofa.Helper] Refresh ComponentChange info list [#2986]( https://github.com/sofa-framework/sofa/pull/2986 ); - [Sofa.Helper] clean ComponentChange and add new category [#2565]( https://github.com/sofa-framework/sofa/pull/2565 ); - [SofaGraphComponent] Move scene checking ability into its own library [#2960]( https://github.com/sofa-framework/sofa/pull/2960 ). **Plugins / Projects**; - [PluginExample] Move the plugin to an external repository [#2519]( https://github.com/sofa-framework/sofa/pull/2519 ); - [ManifoldTopologies] Move the plugin to an external repository [#2623]( https://github.com/sofa-framework/sofa/pull/2623 ); - [Ope,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:94528,test,tests,94528,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,framework/sofa/pull/3428) ; - [Topology.Container] Check at init for Container in Modifier [#3434](https://github.com/sofa-framework/sofa/pull/3434) ; - [Simulation] Task scheduler can accept callable [#3482](https://github.com/sofa-framework/sofa/pull/3482) ; - [Simulation] Worker threads are no longer static [#3491](https://github.com/sofa-framework/sofa/pull/3491) ; - [Core] Support getObjects on set containers [#3495](https://github.com/sofa-framework/sofa/pull/3495) ; - [Type] Conversion to scalar for Mat1x1 [#3498](https://github.com/sofa-framework/sofa/pull/3498) ; - [VectorTypeInfo] Change default handling of data buffer [#3505](https://github.com/sofa-framework/sofa/pull/3505) . **Modules**; - [MappedMatrix] MechanicalMatrixMapper: adds option [#3173](https://github.com/sofa-framework/sofa/pull/3173) ; - [Constraint.Lagrangian.Correction] LinearSolverCC: use FullVector API if detected [#3231](https://github.com/sofa-framework/sofa/pull/3231) ; - [Topology_test] Add tests in EdgeSetTopology_test to check topological changes [#3245](https://github.com/sofa-framework/sofa/pull/3245) ; - [SolidMechanics][Spring] Implement applyRemovedEdges for SpringForceField [#3269](https://github.com/sofa-framework/sofa/pull/3269) ; - [StateContainer] Optimize vector operations [#3284](https://github.com/sofa-framework/sofa/pull/3284) ; - [Mapping.Linear] Add support for 2d in SubsetMultiMapping [#3321](https://github.com/sofa-framework/sofa/pull/3321) ; - [Constraint.Lagrangian] Update BilateralInteractionConstraint to support topological changes [#3329](https://github.com/sofa-framework/sofa/pull/3329) ; - [all] Unit tests for getTemplateName in some components [#3380](https://github.com/sofa-framework/sofa/pull/3380) ; - [all] Implement getModuleComponentList for most modules [#3386](https://github.com/sofa-framework/sofa/pull/3386) ; - [Constraint.Lagrangian.Solver] Add events in the constraint solver pipeline [#3418](https://github.com/sofa-framework/sofa/pull/3418) ; - ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:74154,test,tests,74154,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,framework/sofa/pull/3625) ; - [Simulation] Error when trying to load a non-existing file [#3677](https://github.com/sofa-framework/sofa/pull/3677) ; - [all] Give reason when component cannot be created [#3682](https://github.com/sofa-framework/sofa/pull/3682) ; - [Type] Support structured binding for type::fixed_array [#3753](https://github.com/sofa-framework/sofa/pull/3753) ; - Update CONTRIBUTING.md [#3774](https://github.com/sofa-framework/sofa/pull/3774) . **Modules**; - [Collision.Response.Contact] Implement addKToMatrix for PenalityContactForceField [#3626](https://github.com/sofa-framework/sofa/pull/3626) ; - [Mapping.NonLinear] Implement missing applyJT [#3776](https://github.com/sofa-framework/sofa/pull/3776) ; - [Constraint] Add data to access constraint forces in LCPCS [#3796](https://github.com/sofa-framework/sofa/pull/3796) ; - [Rendering3D] OglModel: Use glMapBufferRange to update buffers [#3822](https://github.com/sofa-framework/sofa/pull/3822) ; - [Logging] Suggestion to better highlight warnings in console [#3914](https://github.com/sofa-framework/sofa/pull/3914) . **Plugins / Projects**; - [Multithreading] 2 steps to maximize coalescing memory access [#3572](https://github.com/sofa-framework/sofa/pull/3572) ; - [MultiThreading] Parallel springs [#3596](https://github.com/sofa-framework/sofa/pull/3596) ; - [MultiThreading] Prepare data for rendering in parallel [#3599](https://github.com/sofa-framework/sofa/pull/3599) ; - [MultiThreading] Implement addDForce in ParallelStiffSpringForceField [#3668](https://github.com/sofa-framework/sofa/pull/3668) ; - [SofaCUDA] Add missing templates for Cuda MechanicalObject [#3688](https://github.com/sofa-framework/sofa/pull/3688) ; - [SceneChecking] Add check when setting contactStiffness uselessly [#3843](https://github.com/sofa-framework/sofa/pull/3843) . **Examples / Scenes**; - [example] Introduce an example for DistanceMultiMapping [#3742](https://github.com/sofa-framework/sofa/pull/3742) ; - [examples] Intro,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:53988,Log,Logging,53988,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Log'],['Logging']
Testability,"g) [#915]( https://github.com/sofa-framework/sofa/pull/915 ); - [SofaHaptics] Modularize sofa haptics [#945]( https://github.com/sofa-framework/sofa/pull/945 ); - [SofaOpenglVisual] Pluginize. [#1080]( https://github.com/sofa-framework/sofa/pull/1080 ). ### Improvements. **Architecture**; - [CMake] Rework sofa_generate_package [#951]( https://github.com/sofa-framework/sofa/pull/951 ); - [CMake] SofaMacros.cmake: deprecating sofa_create_package [#909]( https://github.com/sofa-framework/sofa/pull/909 ). **Modules**; - [All] Improve install and packaging [#1018]( https://github.com/sofa-framework/sofa/pull/1018 ); - [All] Plugins finding and loading [#913]( https://github.com/sofa-framework/sofa/pull/913 ); - [All] Replace deprecated c++ standard binder component [#908]( https://github.com/sofa-framework/sofa/pull/908 ); - **[SofaBaseMechanics]** BarycentricMapping: spatial hashing, handle limit cases [#896]( https://github.com/sofa-framework/sofa/pull/896 ); - **[SofaBaseTopology]** Clean Topology logs and add AdvanceTimer logs [#874]( https://github.com/sofa-framework/sofa/pull/874 ); - **[SofaBaseVisual]** Add default texcoord in VisualModel [#933]( https://github.com/sofa-framework/sofa/pull/933 ); - [SofaConstraint] ADD control on constraint force in UniformConstraint [#1027]( https://github.com/sofa-framework/sofa/pull/1027 ); - **[SofaCore]** Add possibilities to draw lines on surfaces in DrawTool [#937]( https://github.com/sofa-framework/sofa/pull/937 ); - **[SofaCore]** Collision visitor primitive tests count [#930]( https://github.com/sofa-framework/sofa/pull/930 ); - **[SofaCore]** ADD Datacallback and datalink [#911]( https://github.com/sofa-framework/sofa/pull/911 ); - [SofaEngine] Avoid Crash in BoxROI when rest_position is not yet defined [#1031]( https://github.com/sofa-framework/sofa/pull/1031 ); - [SofaExporter] Add option for Regression_test to check first and last iteration [#1061]( https://github.com/sofa-framework/sofa/pull/1061 ); - [SofaGeneralA",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:259285,log,logs,259285,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['log'],['logs']
Testability,"g-a-fork/) so that merge conflicts will be less likely in your pull request.; - [**Create a pull request**](https://help.github.com/articles/creating-a-pull-request-from-a-fork/) when you are ready to propose your changes into the main project. ### Start easy and simple. For newcomers in the community, we regularly identify issues easy to tackle and to get started with, using a [label ""*good first issue*""](https://github.com/sofa-framework/sofa/issues?q=label%3A%22good+first+issue%22). Choose one, solve it and create your first pull request!. ### Rules. - Description must explain the **issue solved** or the **feature added**, and this must be reported in the **[CHANGELOG.md](https://github.com/sofa-framework/sofa/blob/master/CHANGELOG.md)** file.; - Code must follow **[our guidelines](https://github.com/sofa-framework/sofa/blob/master/GUIDELINES.md)**.; - Commit must build **successfully** on Jenkins for all steps (compilation + tests + examples).; - **Unit Tests** are required for each new component or if an issue is fixed.; - **Examples** (at least one) must be provided showing the new feature. ### Management of pull requests. Standard pull-requests are reviewed and approved by the ""Reviewers"" team. ; Major pull-requests (BREAKING, major features) are reviewed by the ""Reviewers"" team and approved by the ""STC members"" team through a vote within a maximum period of 2 weeks. Reviewing:. - Make sure the pull request is **labelized** and well assigned.; - Control that it follows **our rules** (defined above).; - Track the **status of each pull request** using the dedicated labels:; - ""pr: wip"" must be set if the PR has been created for a team work or if some fixes are needed (discussed in the comments).; - ""pr: to review"" must be set if the PR is ready to be reviewed. ; - ""pr: ready"" must be set **instead of merge** if another PR merge is being built on the [Dashboard](https://www.sofa-framework.org/dash/?branch=origin/master). It is used to delay the merge and avoid CI",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:5687,Test,Tests,5687,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['Test'],['Tests']
Testability,"gForceField: Fix addKToMatrix [#3249](https://github.com/sofa-framework/sofa/pull/3249) ; - [all] Split Tag & TagSet into separated files and fix missing includes. [#3277](https://github.com/sofa-framework/sofa/pull/3277) ; - [all] Minor warning fixes [#3306](https://github.com/sofa-framework/sofa/pull/3306) ; - [LinearSolver.Direct] Missing call to super init() [#3316](https://github.com/sofa-framework/sofa/pull/3316) ; - [LinearAlgebra] Fix BDT compilation [#3333](https://github.com/sofa-framework/sofa/pull/3333) ; - [BarycentricMappers] Fix potential division by 0 [#3383](https://github.com/sofa-framework/sofa/pull/3383) ; - [Engine.Analyze] ClusteringEngine: set correct values in load() [#3398](https://github.com/sofa-framework/sofa/pull/3398) ; - [Tests] Update tests to new modules [#3406](https://github.com/sofa-framework/sofa/pull/3406) ; - [Tests] Fix mutiple component init calls in several tests [#3447](https://github.com/sofa-framework/sofa/pull/3447) ; - [image, FEM, LinearSolver] fix Eigen3 assertion with SVD [#3452](https://github.com/sofa-framework/sofa/pull/3452) ; - [Constraint.lagrangian] Update BilateralInteractionConstraint namespace [#3468](https://github.com/sofa-framework/sofa/pull/3468) ; - [Topology.container] Fix missing TopologyElementType setting in SparseGridTopology init [#3475](https://github.com/sofa-framework/sofa/pull/3475) ; - [LinearSolver.Direct] Fix crashing unit tests [#3512](https://github.com/sofa-framework/sofa/pull/3512) ; - [LinearSolver.Direct] Segfault in SparseLDLSolver due to empty system matrix [#3529](https://github.com/sofa-framework/sofa/pull/3529) ; - [Tests] Update required plugins in tests [#3542](https://github.com/sofa-framework/sofa/pull/3542) . **Plugins / Projects**; - [SofaCUDA] FIX namespaces [#2935](https://github.com/sofa-framework/sofa/pull/2935) ; - [Plugins] Fix Cmake configuration w/o compat [#3209](https://github.com/sofa-framework/sofa/pull/3209) ; - [GUI.Qt] Fix MSAA sampling setup [#3220](https://",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:80484,assert,assertion,80484,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['assert'],['assertion']
Testability,getDeprecatedComponents; ************************. getDeprecatedComponents is a simple executable that reads the map sofa::helper::deprecated::components and outputs all components.; It is used by SOFA CI scripts to avoid testing scenes that contain deprecated components.; WARNING: the map needs to be up-to-date!; ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/getDeprecatedComponents/README.txt:222,test,testing,222,applications/projects/getDeprecatedComponents/README.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/getDeprecatedComponents/README.txt,1,['test'],['testing']
Testability,"github.com/sofa-framework/sofa/pull/276 ); - [SofaGraphComponents]; - add tests for RequiredPlugin [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaHelper]; - GLSL: load shader source code from a standard string [#158]( https://github.com/sofa-framework/sofa/pull/158 ); - [SofaBaseTopology]; - GridTopology : implement ""flat"" grids in 1 or 2 dimension by using setting grid resolution to ""1"" in the corresponding axis, and associated examples [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - add tests for RegularGridTopology [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - [SofaEngine]; - BREAKING: Add oriented box feature to BoxROI [#108]( https://github.com/sofa-framework/sofa/pull/108 ); - [SofaConstraint]; - add instantiation of constraint corrections with Vec2f [#157]( https://github.com/sofa-framework/sofa/pull/157 ); - [SofaOpenglVisual]; - add tests for ClipPlane [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaVolumetricData]; - add tests for DistanceGrid [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for Light [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaBoundaryCondition]; - add tests for ConstantForceField, some of them are OpenIssue demonstrating existing problem, as crashing sofa when using negative or too large values in indices [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [CI]; - improvement of all test scripts. **Plugins / Projects**; - [GUI]; - mouse events are now transmitted to the scene with QtGLViewer [#132]( https://github.com/sofa-framework/sofa/pull/132 ); - [SceneCreator]; - Cosmetic changes and remove un-needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pu",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:328923,test,tests,328923,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,github.com/sofa-framework/sofa/pull/470 ); - ADD _d suffix for debug libs [#511]( https://github.com/sofa-framework/sofa/pull/511 ); - [SofaBoundaryCondition]; - Fix LinearForceField that disappears [#525]( https://github.com/sofa-framework/sofa/pull/525 ); - FIX Removed incorrect warning from LinearForceField [#384]( https://github.com/sofa-framework/sofa/pull/384 ); - [SofaConstraint]; - Fix error due to MacOS >= 10.11 using a relative filename [#325]( https://github.com/sofa-framework/sofa/pull/325 ); - Fix issue in GenericConstraintCorrection [#567]( https://github.com/sofa-framework/sofa/pull/567 ); - [SofaDeformable]; - Fix RestShapeSpringsForceField [#367]( https://github.com/sofa-framework/sofa/pull/367 ); - [SofaExporter]; - FIX allow to extend VTKExporter in a plugin [#309]( https://github.com/sofa-framework/sofa/pull/309 ); - [SofaGeneralEngine]; - Fix some XyzTransformMatrixEngine::update() function [#343]( https://github.com/sofa-framework/sofa/pull/343 ); - [SofaGeneralImplicitOdeSolver]; - fix test [#478]( https://github.com/sofa-framework/sofa/pull/478 ); - [SofaGraphComponent]; - Fix the test that was wrong and thus failing in SceneChecker [#405]( https://github.com/sofa-framework/sofa/pull/405 ); - Fix a crashing bug in SceneCheckAPIChange. [#479]( https://github.com/sofa-framework/sofa/pull/479 ); - FIX SceneChecker & RequiredPlugin [#563]( https://github.com/sofa-framework/sofa/pull/563 ); - [SofaGeneralObjectInteraction]; - Remove stiffness multiplicator in SpringForceField [#290]( https://github.com/sofa-framework/sofa/pull/290 ); - [SofaMiscFem]; - Fix FastTetrahedralCorotationalFF topology change [#554]( https://github.com/sofa-framework/sofa/pull/554 ); - [SofaOpenglVisual]; - Fix a bug crashing sofa when the textures cannot be loaded. [#474]( https://github.com/sofa-framework/sofa/pull/474 ). **Extlibs**; - [CImg]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Eigen]; - Warning fix with eigen whe,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:315692,test,test,315692,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingCubeUtility.cpp; ${SRC_ROOT}/NameDecoder.cpp; ${SRC_ROOT}/OptionsGroup.cpp; ${SRC_ROOT}/ScopedAdvancedTimer.cpp; ${SRC_ROOT}/Polynomial_LD.cpp; ${SRC_ROOT}/RandomGenerator.cpp; ${SRC_ROOT}/StringUtils.cpp; ${SRC_ROOT}/TagFactory.cpp; ${SRC_ROOT}/TriangleOctre,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:3245,log,logging,3245,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,2,"['Log', 'log']","['LoggingMessageHandler', 'logging']"
Testability,hMatrixMass_test and add more tests [#2191]( https://github.com/sofa-framework/sofa/pull/2191 ); - [SofaMiscTopology_test] Replace inheritence of SofaTest by BaseSimulation_test and fix test [#1909]( https://github.com/sofa-framework/sofa/pull/1909 ); - [SofaOpenGLVisual] Fix unreachable code in VisualManagerSecondaryPass [#2068]( https://github.com/sofa-framework/sofa/pull/2068 ); - [SofaOpenglVisual] Fix typo [#2029]( https://github.com/sofa-framework/sofa/pull/2029 ); - [SofaRigid] fixes applyJT of RigidMapping [#1813]( https://github.com/sofa-framework/sofa/pull/1813 ); - **[SofaSimpleFem]** Fix TetrahedronFEMForceField Von Mises stress drawing [#1854]( https://github.com/sofa-framework/sofa/pull/1854 ); - **[SofaSimpleFem]** Fix nasty bug in HexaFEMForceField' s draw() [#1766]( https://github.com/sofa-framework/sofa/pull/1766 ); - **[SofaSimpleFem]** Fix rendering options in TetrahedronFEMFF [#2156]( https://github.com/sofa-framework/sofa/pull/2156 ); - **[SofaSimulation/Tests]** Fix init/cleanup in SofaSimulation modules [#1987]( https://github.com/sofa-framework/sofa/pull/1987 ); - **[SofaSimulationCore]** Set default TaskScheduler worker threads to idle state [#1997]( https://github.com/sofa-framework/sofa/pull/1997 ); - **[SofaSimulationCore]** Broken URL [#2011]( https://github.com/sofa-framework/sofa/pull/2011 ); - **[SofaSimulationCore]** FIX Task scheduler memory leak [#1927]( https://github.com/sofa-framework/sofa/pull/1927 ); - **[SofaSimulationCore]** Reorder according to definition [#2034]( https://github.com/sofa-framework/sofa/pull/2034 ); - **[SofaSimulationCore]** Revert changes in #1927 [#2017]( https://github.com/sofa-framework/sofa/pull/2017 ); - [SofaSimulationGraph] Restore tests [#1988]( https://github.com/sofa-framework/sofa/pull/1988 ); - [SofaSimulationGraph] Reading links fail when owner is invalid [#2166]( https://github.com/sofa-framework/sofa/pull/2166 ); - [SofaSparseSolver] SparseLDLSolver optimizations [#1996]( https://github.com/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:190507,Test,Tests,190507,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Tests']
Testability,havior/PairStateAccessor.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.inl; ${SRC_ROOT}/behavior/RotationFinder.h; ${SRC_ROOT}/behavior/StateAccessor.h; ${SRC_ROOT}/behavior/SingleMatrixAccessor.h; ${SRC_ROOT}/behavior/SingleStateAccessor.h; ${SRC_ROOT}/behavior/fwd.h; ${SRC_ROOT}/collision/BroadPhaseDetection.h; ${SRC_ROOT}/collision/CollisionAlgorithm.h; ${SRC_ROOT}/collision/CollisionGroupManager.h; ${SRC_ROOT}/collision/Contact.h; ${SRC_ROOT}/collision/ContactManager.h; ${SRC_ROOT}/collision/Detection.h; ${SRC_ROOT}/collision/DetectionOutput.h; ${SRC_ROOT}/collision/Intersection.h; ${SRC_ROOT}/collision/Intersection.inl; ${SRC_ROOT}/collision/IntersectorFactory.h; ${SRC_ROOT}/collision/NarrowPhaseDetection.h; ${SRC_ROOT}/collision/Pipeline.h; ${SRC_ROOT}/loader/BaseLoader.h; ${SRC_ROOT}/loader/ImageLoader.h; ${SRC_ROOT}/loader/MeshLoader.h; ${SRC_ROOT}/loader/SceneLoader.h; ${SRC_ROOT}/loader/VoxelLoader.h; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.h; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.h; ${SRC_ROOT}/objectmodel/AbstractDataLink.h; ${SRC_ROOT}/objectmodel/AspectPool.h; ${SRC_ROOT}/objectmodel/Base.h; ${SRC_ROOT}/objectmodel/BaseClass.h; ${SRC_ROOT}/objectmodel/BaseClassNameHelper.h; ${SRC_ROOT}/objectmodel/BaseContext.h; ${SRC_ROOT}/objectmodel/BaseData.h; ${SRC_ROOT}/objectmodel/BaseLink.h; ${SRC_ROOT}/objectmodel/BaseNode.h; ${SRC_ROOT}/objectmodel/BaseObject.h; ${SRC_ROOT}/objectmodel/BaseObjectDescription.h; ${SRC_ROOT}/objectmodel/ClassInfo.h; ${SRC_ROOT}/objectmodel/ComponentState.h; ${SRC_ROOT}/objectmodel/ConfigurationSetting.h; ${SRC_ROOT}/objectmodel/Context.h; ${SRC_ROOT}/objectmodel/ContextObject.h; ${SRC_ROOT}/objectmodel/DDGNode.h; ${SRC_ROOT}/objectmodel/Data.h; ${SRC_ROOT}/objectmodel/DataCallback.h; ${SRC_ROOT}/objectmodel/DataContentValue.h; ${SRC_ROOT}/objectmodel/DataFileName.h; ${SRC_ROOT}/objectmodel/DataFileNameVector.h; ${SRC_ROOT}/objectmodel/DataLink.h; ${SRC,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:4659,log,logging,4659,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['log'],['logging']
Testability,"hen drawing 3d text; - compilation with SofaDumpVisitor flag enabled; - compilation of BezierTriangleSetGeometryAlgorithms (color changed from Vec3f to Vec4f); - runSofa: viewport aspect issue and loss of interaction in QtGLViewer; - BoxROI: visual bounding box; - SofaMiscForceField on Windows; - VisualVisitor traversal order; - SphereROI: indices out when multiple spheres; - bug in RestShapeSpringsForceField; - Remove VariationalSymplecticSolver.h from the package in SofaCommon (to fix history); - some static analysis warnings and errors (including memory leaks); - MeshROI: remove unnecessary sqrt; - SphereROI: set centers' size to radii if only one radius is provided; - ARTrack plugin compilation; - bug in MeshNewProximityIntersection involving false positive detection with triangles containing an angle > 90°; - path to images for html description pop up window; - OglModel hasTexture; - DataDisplay: normal computation; - DataDisplay: crash when the component was dynamically added to a scene; - visual bug with OglModel when putOnlyTexCoords is enabled with no texture; - Order Independent Transparency for old graphics card; - sofa::gui::glut applying changes in BaseCamera; - computation of the bounding box in PlaneForceField; - SofaHelper: Fix bug with FBO (causing some weird things when using textures); - corrected the visualization of heterogeneous tetrahedra; - SofaOpenGLVisual: Fix Spotlight source drawing + add some log for ShaderElement; - OmniDriverEmu plugin and examples; - scene test: ICPRegistration_ShapeMatching.scn is ignored; - Vec: 'normalized' function constness; - SpotLight: direction normalization; - ProjectionTo{Plane,Line}MultiMapping Jacobian insertion order; - SofaGeneralRigid: bug in ArticulatedSystemMapping; - SofaEngine: BoxROI instantiation; - SofaBaseCollision: Fix computeBBox in SPhereModel; - bug in MechanicalPickParticlesWithTagsVisitor input tags were not respected; - SofaOpenGLVisual: fix light's modelview matrix computation (lookat da",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:357783,log,log,357783,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['log', 'test']","['log', 'test']"
Testability,hiding Visual Models [#4044](https://github.com/sofa-framework/sofa/pull/4044); - [FEM.Elastic] Compute BBox in triangle FEM [#4061](https://github.com/sofa-framework/sofa/pull/4061); - [FEM.Elastic] Fix typo in error message [#4062](https://github.com/sofa-framework/sofa/pull/4062); - [LinearAlgebra] Fix matrix sizes when filtering [#4063](https://github.com/sofa-framework/sofa/pull/4063); - [MechanicalLoad] Fix compilation further to new RemovedData constructor [#4094](https://github.com/sofa-framework/sofa/pull/4094); - [MechanicalLoad] Fix plane force field buildStiffnessMatrix [#4098](https://github.com/sofa-framework/sofa/pull/4098); - [GUI.Qt] Fix crash if filename is null [#4102](https://github.com/sofa-framework/sofa/pull/4102); - [Tutorials] Update and fix oneTetrahedron tutorial [#4103](https://github.com/sofa-framework/sofa/pull/4103); - [Helper] Fix wrong function called when writing jpg file [#4111](https://github.com/sofa-framework/sofa/pull/4111); - [test] Make quaternion test deterministic and portable [#4126](https://github.com/sofa-framework/sofa/pull/4126); - [Constraint.Lagrangian.Solver] Fix default value for computeConstraintForces Data [#4129](https://github.com/sofa-framework/sofa/pull/4129); - [Sofa.GL] Fix doDrawVisual for OglLabel [#4142](https://github.com/sofa-framework/sofa/pull/4142); - [SofaSphFluid] Fix: scenes warnings and failing examples [#4149](https://github.com/sofa-framework/sofa/pull/4149); - [SofaSphFluid] Fix: internal draw method not restoring default parameters [#4150](https://github.com/sofa-framework/sofa/pull/4150); - [Mass] Fix UniformMass vertexMass value should not be set to 0 if nbr of points reach 0 [#4151](https://github.com/sofa-framework/sofa/pull/4151); - [Topology.Grid] Fix SparseGridTopology and SparseGridRamificationTopology crash at init if mesh file is not found [#4164](https://github.com/sofa-framework/sofa/pull/4164); - [Topology] Rename Edge::pointBaryCoefs into Edge::getBarycentricCoordinates [#4165],MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:35509,test,test,35509,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['test'],['test']
Testability,"hould try to use as few `#include` directive as possible.; - [G2] You should limit as much as possible the amount of code in included files (*.h, *.inl).; - [G3] All definitions should reside in source files. The header files should declare an interface only.; - [G4] Variables should be initialized when they are declared.; - [G5] You should use `const` profusely.; - [G6] You should use `assert` profusely.; - [G7] You must avoid the `using` directive in header files (.h and .inl): ~~`using namespace foo;`~~; - [G8] You should declare automatic variables only when you need them (not before).; - [G9] You must always initialize pointers, either to the address of something, or to `nullptr`; - [G10] You may use the type specifier `auto` (since C++11) when:; - you are in a for loop; - you deal with iterators; - you deal with long typenames AND or when the variable type is obvious. ## SOFA specific rules; - Tricky code should not be commented but rewritten! In general, the use of comments should be minimized by making the code self-documenting by appropriate name choices and an explicit logical structure.; - The use of magic numbers in the code should be avoided. Numbers other than 0 and 1 should be declared as named constants instead.; - The definition of ε-definition of limit ('epsilon', an arbitrarily small positive quantity) should not be code specific but rather use the class template [`std::numeric_limits`](https://en.cppreference.com/w/cpp/types/numeric_limits/epsilon). Here is an example: `const DataTypes::Real EPSILON = std::numeric_limits<DataTypes::Real>::epsilon();`; `const DataTypes::Real EPSILON = std::numeric_limits<DataTypes::Real>::epsilon();`; - All internal data, needed by your component, and that can’t be recomputed must be put inside a `Data` or a `DataPtr`. This way, your component can be saved. Also, this `Data` will be automatically displayed inside the GUI.; - For messaging in SOFA components, the [dedicated Messaging API](https://www.sofa-framework",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:5556,log,logical,5556,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,1,['log'],['logical']
Testability,"https://github.com/sofa-framework/sofa/pull/2632 ); - [SofaCore] Inf fix topo subset indices [#2870]( https://github.com/sofa-framework/sofa/pull/2870 ); - [SofaCore] Make inheritance virtual [#2594]( https://github.com/sofa-framework/sofa/pull/2594 ); - [SofaCore] Restore default component naming for python [#2801]( https://github.com/sofa-framework/sofa/pull/2801 ); - [SofaCore] Restore xml and python different naming conventions [#2773]( https://github.com/sofa-framework/sofa/pull/2773 ); - [SofaCore] Virtual inheritance of BaseObject [#2799]( https://github.com/sofa-framework/sofa/pull/2799 ); - [SofaDeformable] Handle division by zero in MeshSpringForceField [#2596]( https://github.com/sofa-framework/sofa/pull/2596 ); - [SofaDeformable] Springs are able to compute their bounding box [#2599]( https://github.com/sofa-framework/sofa/pull/2599 ); - [SofaEngine] Fix BoxROI undefined behavior [#2604]( https://github.com/sofa-framework/sofa/pull/2604 ); - [SofaFramework] Add tests on aliases for ""multiple projects"" out-of-tree build [#2566]( https://github.com/sofa-framework/sofa/pull/2566 ); - [SofaGeneralImplicitOdeSolver] Propagate position inside Newton loop [#2584]( https://github.com/sofa-framework/sofa/pull/2584 ); - [SofaGeneralObjectInteraction] Fix dependencies in cmake [#2659]( https://github.com/sofa-framework/sofa/pull/2659 ); - [SofaGuiCommon] Restore argv [#2802]( https://github.com/sofa-framework/sofa/pull/2802 ); - [SofaGuiQt] Fix some dll export macro missing [#2555]( https://github.com/sofa-framework/sofa/pull/2555 ); - [SofaGui] Restore and update CMake variables and modules [#3011]( https://github.com/sofa-framework/sofa/pull/3011 ); - [SofaHelper] Speedup ReadAccessor conversion operator [#2583]( https://github.com/sofa-framework/sofa/pull/2583 ); - [SofaMiscFEM] Fix TriangleFEMForceField and TriangularFEMForceField to have the same behavior [#2275]( https://github.com/sofa-framework/sofa/pull/2275 ); - [SofaMiscFem] FIX missing Strain Displaceme",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:112375,test,tests,112375,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,hub.com/sofa-framework/sofa/pull/1594 ); - [SofaOpenglVisual] Add transparency when we draw triangles (this allows to see inside the volume). [#1742]( https://github.com/sofa-framework/sofa/pull/1742 ); - **[SofaSimulationCore]** Add option to call ODE::solve in parallel in SolveVisitor [#2135]( https://github.com/sofa-framework/sofa/pull/2135 ); - **[SofaSimulationCore]** Launch a new event when textures have been initialized. [#1832]( https://github.com/sofa-framework/sofa/pull/1832 ). **Plugins / Projects**; - [MultiThreading] Parallel BVH narrow phase [#2053]( https://github.com/sofa-framework/sofa/pull/2053 ); - [MultiThreading] Parallel brute force broad phase [#2038]( https://github.com/sofa-framework/sofa/pull/2038 ); - [Plugins] Add SofaGLFW GUI [#2062]( https://github.com/sofa-framework/sofa/pull/2062 ); - [SofaCUDA] Add more examples for liver scene and squareTissue [#2016]( https://github.com/sofa-framework/sofa/pull/2016 ). **Examples / Scenes**; - [Benchmark] Introduce benchmark on matrix assembly [#2208]( https://github.com/sofa-framework/sofa/pull/2208 ); - [examples] Improve BeamFEMForceField example [#2092]( https://github.com/sofa-framework/sofa/pull/2092 ); - [scenes] Add scenes to test several components during mesh removal [#2161]( https://github.com/sofa-framework/sofa/pull/2161 ). ### Bug Fixes; **Architecture**; - [CMake] FIX Debug build + more cleaning [#1891]( https://github.com/sofa-framework/sofa/pull/1891 ); - [CMake] FIX SofaFramework aliases [#2175]( https://github.com/sofa-framework/sofa/pull/2175 ); - [CMake] FIX header include tree [#1863]( https://github.com/sofa-framework/sofa/pull/1863 ); - [CMake] FIX resources and translations install on Windows [#1949]( https://github.com/sofa-framework/sofa/pull/1949 ); - [CMake] Set CMake install default component [#2037]( https://github.com/sofa-framework/sofa/pull/2037 ); - [CMake][tools] v20.12.00 changes [#1804]( https://github.com/sofa-framework/sofa/pull/1804 ). **Extlibs**; - [GTest] ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:180531,Benchmark,Benchmark,180531,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Benchmark', 'benchmark']","['Benchmark', 'benchmark']"
Testability,hub.com/sofa-framework/sofa/pull/1844 ); - **[SofaSimulationCore]** Add tons of details in Euler solver [#2163]( https://github.com/sofa-framework/sofa/pull/2163 ); - **[SofaSimulationCore]** Clean AnimateVisitor [#2194]( https://github.com/sofa-framework/sofa/pull/2194 ); - **[SofaSimulation]** Convert tests to Sofa.Testing [#2154]( https://github.com/sofa-framework/sofa/pull/2154 ); - [SofaSparseSolver] Clean useless dependencies [#2012]( https://github.com/sofa-framework/sofa/pull/2012 ); - [SofaUserInteraction] Minor cleaning of RayTraceDetection [#2009]( https://github.com/sofa-framework/sofa/pull/2009 ); - [SofaUserInteraction] Remove AddFramePerformer as it is not compiled [#1970]( https://github.com/sofa-framework/sofa/pull/1970 ); - [SofaUserInteraction] Deprecate RayTraceDetection [#2212]( https://github.com/sofa-framework/sofa/pull/2212 ); - [Tests] Move tests in their (new) correct locations [#1998]( https://github.com/sofa-framework/sofa/pull/1998 ); - [Tests] Replace sofa::helper::testing by sofa::testing [#2143]( https://github.com/sofa-framework/sofa/pull/2143 ). **Plugins / Projects**; - [CGAL] Remove #pragma once in .cpp files [#2202]( https://github.com/sofa-framework/sofa/pull/2202 ); - [Geomagic] Add macro HAS_OPENHAPTICS to know if library is present [#2115]( https://github.com/sofa-framework/sofa/pull/2115 ); - [Geomagic] Duplicated includes #2070 [#2072]( https://github.com/sofa-framework/sofa/pull/2072 ); - [HeadlessRecorder] CLEAN Headless recorder [#2058]( https://github.com/sofa-framework/sofa/pull/2058 ); - [LMConstraint] Move LMConstraint components in a new plugin [#1659]( https://github.com/sofa-framework/sofa/pull/1659 ); - [LMConstraint] Move examples in LMConstraint plugin [#1778]( https://github.com/sofa-framework/sofa/pull/1778 ); - [MultiThreading] Removes useless classid in AnimationLoopParalleleScheduler.cpp [#1906]( https://github.com/sofa-framework/sofa/pull/1906 ); - [SofaCUDA] Renaming cudaMatrix methods to use rowSize and,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:206281,Test,Tests,206281,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,3,"['Test', 'test']","['Tests', 'testing']"
Testability,"hub.com/sofa-framework/sofa/pull/2083 ); - [plugins] Disable old python2 examples [#2025]( https://github.com/sofa-framework/sofa/pull/2025 ); - [runSofa/Modules] Fix various problems with Sofa.GL [#1743]( https://github.com/sofa-framework/sofa/pull/1743 ). **Examples / Scenes**; - [scenes] Fix (new?) failing scenes on the CI [#1798]( https://github.com/sofa-framework/sofa/pull/1798 ). ### Cleanings; **Architecture**; - [CMake] CLEAN old metapackage usage [#1883]( https://github.com/sofa-framework/sofa/pull/1883 ); - [CMake] CLEAN option SOFA_BUILD_WITH_PCH_ENABLED [#1755]( https://github.com/sofa-framework/sofa/pull/1755 ); - [CMake] CLEAN/FIX deprecated things (MSVC mainly) [#2217]( https://github.com/sofa-framework/sofa/pull/2217 ). **Modules**; - [All] Remove commented code & fix trivial issues [#1693]( https://github.com/sofa-framework/sofa/pull/1693 ); - [All] Remove useless pragma guards in cpp files [#1929]( https://github.com/sofa-framework/sofa/pull/1929 ); - [All] CLEAN tests, use CMake weak dependencies [#1886]( https://github.com/sofa-framework/sofa/pull/1886 ); - [All] Disable Drawtool functions using Vec4f [#2197]( https://github.com/sofa-framework/sofa/pull/2197 ); - [All] Rename SOFA_NO_OPENGL + Relocate Sofa.GL + Improve sofa_add_* macros [#1913]( https://github.com/sofa-framework/sofa/pull/1913 ); - [All] Avoid redundant printLog check [#2102]( https://github.com/sofa-framework/sofa/pull/2102 ); - [All] Depreciate one of the missing use of Aspect in Link and update the code base [#1712]( https://github.com/sofa-framework/sofa/pull/1712 ); - [All] Fix warnings [#2196]( https://github.com/sofa-framework/sofa/pull/2196 ); - [All] Fix warnings [#2097]( https://github.com/sofa-framework/sofa/pull/2097 ); - [All] Refactor Read/Write Accessor. [#1807]( https://github.com/sofa-framework/sofa/pull/1807 ); - [All] Refactor vector & vector_device [#1799]( https://github.com/sofa-framework/sofa/pull/1799 ); - [All] Remove last includes of SofaSimulationTree [",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:195713,test,tests,195713,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"ible's components internally without adding extra computation neither extra memory; - API: add strain offseting option; - API: strainMappings as data members; - API: use branching images for mass computation; - API: make AffineMass, ShapeFunction, Behavior work in more cases; - API: make Behavior work in simple cases with no label image; - materials: removed checking for changed parameters at each step.; - add example showing how to better handle partially filled elements using fine volumes; - optimizing FlexibleCorotationalMeshFEMForceField by preassembling constant sub-graph; - refactoring of MassFromDensity; - adding a warning when creating a UniformMass on Affine/Quadratic frames.; - add FEMDof class to python API; - DeformationMapping: print a warning if a child particle has no parent; - adding HEML implementation of St Venant-Kirchhoff materials (for tetrahedra).; - if correct weights are given in mapping as input data, use it (even if a shapefunction is found); - use sout for logging; - compute tangents for VisualModel loaded using loadVisual python function; - transformEngine for Affine frames. - [Compliant]; - sml: export of meshes; - sml: the solids tags to be simulated as rigids are gathered in a set(); - sml: geometricStiffness option; - sml: using logger; - implementing compliance unassembled API; - in the python API, joints can be created in compliance or not; - API: write a addSpring() in GenericRigidJoint, reuse it in children classes where possible; - API: simplify usage of jointCompliance specification by tag; - API: relative offset position is given to the AssembledRigidRigidMapping, and then computed at init into the MO; - API: modifying the API to move an Offset; - API: adding Offset::moveOffset to apply a rigid transformation to an offset (in its local frame); - API: new parameter to add non-mechanical Offsets and MappedPoints; - API: collision mesh and visual model can be added to a Rigid Offset; - adding an automatic execution of a scene base",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:352017,log,logging,352017,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['logging']
Testability,"ile drawing bbox (QtViewer); - add of GUIEvent into the STLExporter; - Make the code compatible with ClipPlane (using ClipVertex in shaders, which is deprecated for GLSL > 1.4); - Optimize the callto C-PYTHON side when the functions are not implemented in the python side; - Add color attribute support (and default color if not present in the node); - Reactivate color map in TetraFEM, as it does not depend on SofaOpenGLVisual anymore; - indices data field for UniformMass; - analyze matrix only if number of non-zeroes has changed and no iterative refinement; - update the applyConstraint methods according to the actual API; - Adding ProjectionTo{Plane|Line}MultiMapping where the plane (origin,normal) and the line (origin,direction) are dofs; - add MeshBoundaryROI with an example. - [Tests]; - for (multi)Mapping test, check the size of the mapping output is correct; - adding TestMessageHandler that raises a gtest failure each time an error message is processed; - test for node removal; - test for removal of a node containing an UncoupledConstraintCorrection (for now the test fails because there is a problem with the removal of that component); - add of Multi2Mapping_test; - add DistanceMapping_test. - [SofaPython]; - logger: cleaning emitter; - sml.Mesh: adding load function; - sml: python set for tags is created by objects themselves; - sml: add tag to JointGeneric; - sml: add the printLog flag; - sml: setup units in BaseScene for all sml Scene class; - sml: mesh has a clear id; - sml:insertVisual: bug fix for solid with multiple meshes (just impacting the Display scene); - sml: handy constructor for Dof creation; - sml: like <mesh> <image> can be defined in <solid>; - sml: add a utility function: look into the valueByTag dictionary for a tag contained in tags; - sml: adding a warning if a vertex group is empty; - sml: can have offsets under solids; - sml: remove deprecated setTagFromTag() method; - API: add subsetFromDeformables function; - binding Node::isInitialized;",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:346978,Test,Tests,346978,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,6,"['Test', 'test']","['TestMessageHandler', 'Tests', 'test']"
Testability,"ils/changeClassName.sh  in Unix and utils\changeClassName.bat  in Windows ; to replace TestPlugin; with MyPlugin in all; the file; names and their content:; On Unix:; utils/changeClassName.bash TestPlugin MyPlugin. On Windows:; utils\changeClassName.bat TestPlugin MyPlugin; cd examples; ..\utils\changeClassName.bat TestPlugin MyPlugin; cd ../doc/; ..\utils\changeClassName.bat TestPlugin MyPlugin  This can take some time !. At this point, you may want to add the plugin directory to svn.; You can also reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_TestPlugin ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_TestPlugin); {; usePlugin(TestPlugin) } . if your plugin depends on other plugins, edit file TestPlugin-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. TestPlugin.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initTestPlugin.h. a template of user documentation is found in TestPlugin.tex. Is should; be filled in for every component in the plugin, then compiled with your; favourite Latex distribution. The filename should match the name of the; component. ; the examples are in examples/; . The first one is TestPlugin.scn, and when; runSOFA; opens it, an html page pops; up, with a link to the plugin documentation. Intellectual; property and rights. Authors. You. Contact. You@your.institute. License. Your can distribute this plugin",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html:1580,Test,TestPlugin-dependencies,1580,applications/plugins/SofaTest/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html,1,['Test'],['TestPlugin-dependencies']
Testability,"in [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaHelper]; - GLSL: load shader source code from a standard string [#158]( https://github.com/sofa-framework/sofa/pull/158 ); - [SofaBaseTopology]; - GridTopology : implement ""flat"" grids in 1 or 2 dimension by using setting grid resolution to ""1"" in the corresponding axis, and associated examples [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - add tests for RegularGridTopology [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - [SofaEngine]; - BREAKING: Add oriented box feature to BoxROI [#108]( https://github.com/sofa-framework/sofa/pull/108 ); - [SofaConstraint]; - add instantiation of constraint corrections with Vec2f [#157]( https://github.com/sofa-framework/sofa/pull/157 ); - [SofaOpenglVisual]; - add tests for ClipPlane [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaVolumetricData]; - add tests for DistanceGrid [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for Light [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaBoundaryCondition]; - add tests for ConstantForceField, some of them are OpenIssue demonstrating existing problem, as crashing sofa when using negative or too large values in indices [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [CI]; - improvement of all test scripts. **Plugins / Projects**; - [GUI]; - mouse events are now transmitted to the scene with QtGLViewer [#132]( https://github.com/sofa-framework/sofa/pull/132 ); - [SceneCreator]; - Cosmetic changes and remove un-needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pull/202 ); - change the way createObject() handle its arguments to simplify scene writing + batch ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:329011,test,tests,329011,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"ion in MatrixLinearSolver [#901]( https://github.com/sofa-framework/sofa/pull/901 ); - [SofaRigid] Clean JointSpringFF [#850]( https://github.com/sofa-framework/sofa/pull/850 ); - [SofaRigid] Cosmetic clean in RigidRigidMapping & msg_* update. [#1005]( https://github.com/sofa-framework/sofa/pull/1005 ); - **[SofaSimpleFem]** Use msg and size_t in TetraDiff [#1016]( https://github.com/sofa-framework/sofa/pull/1016 ). **Plugins / Projects**; - [image] Add warning guiding users regarding pluginization of DiffusionSolver [#1067]( https://github.com/sofa-framework/sofa/pull/1067 ); - [Modeler] Deactivate Modeler by default, since it is deprecated [#972]( https://github.com/sofa-framework/sofa/pull/972 ). **Examples / Scenes**; - [Scenes] Apply script on all scenes using VisualModel/OglModel [#1081]( https://github.com/sofa-framework/sofa/pull/1081 ). ____________________________________________________________. ## [v18.12]( https://github.com/sofa-framework/sofa/tree/v18.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v18.06...v18.12 ). ### Deprecated. **Removed in v18.12**; - [SofaBoundaryCondition] BuoyantForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaBoundaryCondition] VaccumSphereForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - **[SofaHelper]** Utils::getPluginDirectory() [#518]( https://github.com/sofa-framework/sofa/pull/518) - Use PluginRepository.getFirstPath( ) instead; - [SofaMisc] ParallelCGLinearSolver [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscForceField] ForceMaskOff [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscForceField] LineBendingSprings [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscForceField] WashingMachineForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - ~~[SofaMiscForceField] LennardJonesForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 )~~; - [SofaMiscMapping] Catmul",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:274721,log,log,274721,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,"ion to the Sofa python module; - Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name.; - object and type names are now both optional when calling BaseContext_getObjects(); - search direction can now optionally be passed to BaseContext_getObjects(); - at object creation failure, print additional error messages from BaseObjectDescription; - adding special Data types in the PythonFactory, so more specific cases can be added outside of the plugin SofaPython.; - adding Node::addObject_noWarning not to print a warning when adding an object to an already initialized node; - add of a method which compute quaternion from a line define by a director vector; - add of few new features to save and load the current state of simulation. - [Flexible]; - adding FlexibleCorotationalMeshFEMForceField (meta-forcefield). Not optimized but working; - add of RigidScale mapping in addition to their tests and examples; - HexaFEM comparison: each method has its own solver and uses the same decomposition so the only difference came from the deformation tensor used to find the rotation.; - Flexible: WIP adding a meta-forcefield to compute regular corotational FEM. The idea is to use Flexible's components internally without adding extra computation neither extra memory; - API: add strain offseting option; - API: strainMappings as data members; - API: use branching images for mass computation; - API: make AffineMass, ShapeFunction, Behavior work in more cases; - API: make Behavior work in simple cases with no label image; - materials: removed checking for changed parameters at each step.; - add example showing how to better handle partially filled elements using fine volumes; - optimizing FlexibleCorotationalMeshFEMForceField by preassembling constant sub-graph; - refactoring of MassFromDensity; - adding a warning when creating a UniformMass on Affine/Quadratic frames.; - add FEMDof class to python API; - DeformationMapping: print a warnin",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:350729,test,tests,350729,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"ion; - fix Jacobian reserved size; - fix contacts and associated test. - [image]; - python tools: fix bug in mhd parsing; - MeshToImage: fix bresenham, be sure dmax>=1; - fix resampling of projection images, and marching cubes default parameter; - fix bug in mhd file loader; - fix rasterization when using vertex colors. ### Cleanings. - warnings were removed; - dead branches were removed; - the ‘using’ directives were removed in header files; - the repository sofa_root/modules/sofa/components has been cleaned (deprecated components removed); - clean many SOFA examples; - removing ""using helper::vector"" from VecTypes.h; - SofaQtGui: Remove qt3 remnants in ui files. - Minor clean; - clean SofaBaseCollision of OpenGL dependency; - cleaning Material::setColor; - Base: write sout as info (rather than warnings); - clean and fix RestShapeSpringsForceField draw functions; - Remove useless tests, optimize and fix potential bugs; - cleanup, precompute barycenters for tetra and hexa; - SofaBaseVisual: clean up and make consistent BaseCamera's code: clean QtViewer projection (remove OpenGL functions); - SofaBaseVisual: clean and fix BaseCamera Z clipping; - SofaOpenGLVisual: cleanup Lights (remove Glu calls and set matrices as data) + Fix typo in Camera; - quaternion to euler: not need for the hack since atan2 is used. - [SofaPython]; - clean examples; - clean the hard-binding example; - clean noPicking visitor. - [Flexible]; - remove unecessary data for Gauss points visualization; - some clean regarding openmp parallelisation; - clean metaFF; - remove unecessary apply in reinit; - clean FlexibleCorotationalMeshFEMForceField. - [Compliant]; - clean RigidJoint{Multi}Mapping. ____________________________________________________________. ## [v15.12]( https://github.com/sofa-framework/sofa/tree/v15.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v15.09...v15.12 ). ____________________________________________________________. ## [v15.09]( https://github.com/sofa-fra",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:360704,test,tests,360704,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"ion]; - add tests for ConstantForceField, some of them are OpenIssue demonstrating existing problem, as crashing sofa when using negative or too large values in indices [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [CI]; - improvement of all test scripts. **Plugins / Projects**; - [GUI]; - mouse events are now transmitted to the scene with QtGLViewer [#132]( https://github.com/sofa-framework/sofa/pull/132 ); - [SceneCreator]; - Cosmetic changes and remove un-needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pull/202 ); - change the way createObject() handle its arguments to simplify scene writing + batch of tests [#286]( https://github.com/sofa-framework/sofa/pull/286 ); - [SofaTest]; - add Backtrace::autodump to all tests to ease debugging [#191]( https://github.com/sofa-framework/sofa/pull/191 ); - add automatic tests for updateForceMask [#209]( https://github.com/sofa-framework/sofa/pull/209 ); - add tests on PluginManager [#240]( https://github.com/sofa-framework/sofa/pull/240 ); - TestMessageHandler : new and robust implementation to connect msg_* message to test failure [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - update to use the new TestMessageHandler where msg_error generates test failures [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - add tests for TestMessageHandler [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - [SofaCUDA]; - FIX NVCC flags for debug build on Windows [#300]( https://github.com/sofa-framework/sofa/pull/300 ). ### Bug Fixes. **Modules**; - Warnings have been fixed [#229]( https://github.com/sofa-framework/sofa/pull/229 ); - [All]; - check that SofaPython is found before lauching the cmake sofa_set_python_direct",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:330125,test,tests,330125,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,ithub.com/sofa-framework/sofa/pull/1175 ); - [CMake] FIX unknown compiler option on VS2015 [#1192]( https://github.com/sofa-framework/sofa/pull/1192 ); - [SofaMacros] FIX default module version [#1123]( https://github.com/sofa-framework/sofa/pull/1123 ); - [SofaMacros] FIX sofa_set_install_relocatable escaped chars [#1154]( https://github.com/sofa-framework/sofa/pull/1154 ). **Modules**; - [All] Fix warnings [#1206]( https://github.com/sofa-framework/sofa/pull/1206 ); - [All] Fix warnings [#1167]( https://github.com/sofa-framework/sofa/pull/1167 ); - [All] Fix some warnings and OglAttribute handleTopologyChange [#1159]( https://github.com/sofa-framework/sofa/pull/1159 ); - [SofaBoundaryCondition] Fix FixedRotationConstraint when using more than one locked axis [#1119]( https://github.com/sofa-framework/sofa/pull/1119 ); - **[SofaBaseMechanics]** Make Uniform and DiagonalMass compatible with topo change [#1212]( https://github.com/sofa-framework/sofa/pull/1212 ); - **[SofaBaseTopology]** Fix SparseGrid obj loading + tests [#1231]( https://github.com/sofa-framework/sofa/pull/1231 ); - [SofaComponentAll] FIX SofaAllCommonComponents backward compatibility [#1204]( https://github.com/sofa-framework/sofa/pull/1204 ); - [SofaConstraint] Fix UncoupledConstraintCorrection topology change handling [#1115]( https://github.com/sofa-framework/sofa/pull/1115 ); - [SofaConstraint] Fix crash with PrecomputedConstraintCorrection [#1230]( https://github.com/sofa-framework/sofa/pull/1230 ); - **[SofaCore]** FIX decode functions in BaseClass [#1222]( https://github.com/sofa-framework/sofa/pull/1222 ); - **[SofaDefaulttype]** FIX too many ExtVec warnings with GCC [#1140]( https://github.com/sofa-framework/sofa/pull/1140 ); - [SofaExporter] Move bindings from SofaPython [#1095]( https://github.com/sofa-framework/sofa/pull/1095 ); - **[SofaFramework]** Add other orders for fromEuler() for Quaternions. [#1221]( https://github.com/sofa-framework/sofa/pull/1221 ); - **[SofaFramework]** Instal,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:249358,test,tests,249358,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"ithub.com/sofa-framework/sofa/pull/2921 ). **Examples / Scenes**; - [examples] Optimal RequiredPlugin [#2836]( https://github.com/sofa-framework/sofa/pull/2836 ); - [examples] Remove misplaced example file [#2726]( https://github.com/sofa-framework/sofa/pull/2726 ); - [examples] Remove missing files from the scene list [#2809]( https://github.com/sofa-framework/sofa/pull/2809 ); - [examples] Remove scene which should be in LMConstraint [#2834]( https://github.com/sofa-framework/sofa/pull/2834 ); - [examples] Run PluginFinder [#2950]( https://github.com/sofa-framework/sofa/pull/2950 ); - [examples] Run PluginFinder after some module changes [#2860]( https://github.com/sofa-framework/sofa/pull/2860 ); - [examples] Remove all uses of DefaultCollisionGroupManager [#3104]( https://github.com/sofa-framework/sofa/pull/3104 ). **Scripts / Tools**. ____________________________________________________________. ## [v21.12.00]( https://github.com/sofa-framework/sofa/tree/v21.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.03...v21.12.00 ). ### SOFA-NG. **Modules**; - [All] Remove more GeometryAlgorithms usage [#2465]( https://github.com/sofa-framework/sofa/pull/2465 ); - [All] Remove some trivial dependencies on SofaBaseTopology [#2449]( https://github.com/sofa-framework/sofa/pull/2449 ); - [Sofa.Core][SofaBaseTopology] Move TopologyData* from SofaBaseTopology to Sofa.Core [#2423]( https://github.com/sofa-framework/sofa/pull/2423 ); - [Sofa.Core][SofaBaseTopology] Refactor TopologyContainer [#2387]( https://github.com/sofa-framework/sofa/pull/2387 ); - [Sofa.LinearAlgebra] Dispatch *Matrix from BTDLinearSolver, and BlockDiagonalMatrix [#2334]( https://github.com/sofa-framework/sofa/pull/2334 ); - [Sofa.LinearAlgebra] Dispatch EigenMatrix and EigenVector from Eigen2Solver [#2339]( https://github.com/sofa-framework/sofa/pull/2339 ); - [Sofa.LinearAlgebra] Gather tests [#2383]( https://github.com/sofa-framework/sofa/pull/2383 ); - [SofaBaseMechanics] Bar",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:133991,log,log,133991,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,"k/sofa/pull/3573) ; - [Cmake] Update warning replacement message for deprecated macro sofa_add_XX [#3611](https://github.com/sofa-framework/sofa/pull/3611) ; - [Sofa] Remove warnings [#3627](https://github.com/sofa-framework/sofa/pull/3627) ; - [Sofa.framework] Compile and run tests when SReal is float [#3628](https://github.com/sofa-framework/sofa/pull/3628) ; - [Type] Fix massive warning due to Mat.h [#3633](https://github.com/sofa-framework/sofa/pull/3633) ; - [Core] TLink: Fix warnings about comparisons between unnamed enums [#3714](https://github.com/sofa-framework/sofa/pull/3714) ; - [Helper] Deprecate constructor of OptionsGroup [#3741](https://github.com/sofa-framework/sofa/pull/3741) ; - [Config] Remove suspicious Eigen macro preventing vectorization [#3780](https://github.com/sofa-framework/sofa/pull/3780) . **Modules**; - [StateContainer] Avoid code duplication in MechanicalObject [#3541](https://github.com/sofa-framework/sofa/pull/3541) ; - [FEM.Elastic] Fix unit tests warnings [#3545](https://github.com/sofa-framework/sofa/pull/3545) ; - [GUI] GUI libraries as plugins [#3550](https://github.com/sofa-framework/sofa/pull/3550) ; - [LinearAlgebra, LinearSolver.Direct] make getSubMatrixDim() compile-time constant [#3556](https://github.com/sofa-framework/sofa/pull/3556) ; - [FEM.Elastic] Consistent default values for poisson's ratio and Young's modulus [#3563](https://github.com/sofa-framework/sofa/pull/3563) ; - [FEM.Elastic] Minor refactoring and optimization in draw [#3564](https://github.com/sofa-framework/sofa/pull/3564) ; - [all] Fix some warnings further v22.12 [#3570](https://github.com/sofa-framework/sofa/pull/3570) ; - [LinearAlgebra] Remove wrong comment [#3582](https://github.com/sofa-framework/sofa/pull/3582) ; - [LinearAlgebra] Factorize rotateMatrix in RotationMatrix [#3586](https://github.com/sofa-framework/sofa/pull/3586) ; - [Mass] Remove empty loop in addForce [#3593](https://github.com/sofa-framework/sofa/pull/3593) ; - [Spring] Remove d",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:62559,test,tests,62559,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,le [#1356]( https://github.com/sofa-framework/sofa/pull/1356 ); - [Regression] Update hash [#1321]( https://github.com/sofa-framework/sofa/pull/1321 ); - [SofaSphFluid] Clean SofaFluid plugin compilation warning. [#1296]( https://github.com/sofa-framework/sofa/pull/1296 ). **Examples / Scenes**; - [examples] Fix and remove 3 scenes with deprecated component [#1355]( https://github.com/sofa-framework/sofa/pull/1355 ); - [examples] Remove useless files and add MeshMatrixMass example [#1257]( https://github.com/sofa-framework/sofa/pull/1257 ); - [scenes] Fix scenes from alias [#1292]( https://github.com/sofa-framework/sofa/pull/1292 ); - [scenes] Remove scene warnings due to Rigid template [#1295]( https://github.com/sofa-framework/sofa/pull/1295 ); - [scenes] Fix alias warnings in scenes [#1279]( https://github.com/sofa-framework/sofa/pull/1279 ). ____________________________________________________________. ## [v19.12]( https://github.com/sofa-framework/sofa/tree/v19.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v19.06...v19.12 ). ### Breaking. **Architecture**; - [All] Improve extlibs integration [#1137]( https://github.com/sofa-framework/sofa/pull/1137 ); - [packages] Move all SofaComponent* + rename SofaAllCommonComponents [#1155]( https://github.com/sofa-framework/sofa/pull/1155 ). **Modules**; - [All] Add SingleLink to Topology to reveal all hidden GetMeshTopology [#1183]( https://github.com/sofa-framework/sofa/pull/1183 ); - [All] Remove ExtVecType [#1055]( https://github.com/sofa-framework/sofa/pull/1055 ); - [All] up change on GetMeshTopology [#1223]( https://github.com/sofa-framework/sofa/pull/1223 ); - [SofaBoundaryConditions] Apply doInternalUpdate API to ConstantForceField [#1145]( https://github.com/sofa-framework/sofa/pull/1145 ); - **[SofaKernel]** Replacing const char* with strings for group / help / widget etc. [#1152]( https://github.com/sofa-framework/sofa/pull/1152 ); - **[SofaKernel]** ADD: static method in events to retrieve t,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:243325,log,log,243325,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,lement empty buildDampingMatrix [#3948](https://github.com/sofa-framework/sofa/pull/3948); - [IO.Mesh] More debug info in the error message in MeshSTLLoader [#3949](https://github.com/sofa-framework/sofa/pull/3949); - [Sofa.Simulation] Remove Node::bwdInit [#3954](https://github.com/sofa-framework/sofa/pull/3954); - [Mapping/tests] Remove dependency on SceneCreator [#3955](https://github.com/sofa-framework/sofa/pull/3955); - [Simulation.Core] Deprecate unused classes *VisitorScheduler [#3957](https://github.com/sofa-framework/sofa/pull/3957); - [Helper.System] Introduce function append for paths [#3961](https://github.com/sofa-framework/sofa/pull/3961); - [Project] Start dev phase v23.12 [#3963](https://github.com/sofa-framework/sofa/pull/3963); - [all] Minor clean on indentation and warning [#3975](https://github.com/sofa-framework/sofa/pull/3975); - [MechanicalLoad] Remove empty draw function in LinearForceField [#3979](https://github.com/sofa-framework/sofa/pull/3979); - [tests] Restore commented unit tests [#3982](https://github.com/sofa-framework/sofa/pull/3982); - [CHANGELOG] Update further to latest changes in v23.06 [#3998](https://github.com/sofa-framework/sofa/pull/3998); - [Component] Follow changes from SOFA #3889 [#4013](https://github.com/sofa-framework/sofa/pull/4013); - [LinearAlgebra] CompressedRowSparseMatrix: add virtual destructor [#4020](https://github.com/sofa-framework/sofa/pull/4020); - [GuiQt] Remove some unactivated code [#4025](https://github.com/sofa-framework/sofa/pull/4025); - [constraint] Update PrecomputedConstraintCorrection logs when loading compliance file [#4026](https://github.com/sofa-framework/sofa/pull/4026); - [all] Lifecycle v23.12 2/n [#4040](https://github.com/sofa-framework/sofa/pull/4040); - [GUI.Qt] Remove unused recorder feature [#4041](https://github.com/sofa-framework/sofa/pull/4041); - [MechanicalLoad] Use prefix d_ in DiagonalVelocityDampingForceField [#4046](https://github.com/sofa-framework/sofa/pull/4046); - [al,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:43444,test,tests,43444,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['test'],['tests']
Testability,ll/1753 ); - **[SofaCore]** Minor cleaning in constraints [#2138]( https://github.com/sofa-framework/sofa/pull/2138 ); - **[SofaCore]** Move Link::CheckPath() method to PathResolver::CheckPath() [#1717]( https://github.com/sofa-framework/sofa/pull/1717 ); - **[SofaCore]** Move definition Link::read() method to BaseLink::read() [#1736]( https://github.com/sofa-framework/sofa/pull/1736 ); - **[SofaCore]** Move function definition in cpp files [#2041]( https://github.com/sofa-framework/sofa/pull/2041 ); - **[SofaCore]** Move the streaming operator from .h to .cpp [#1751]( https://github.com/sofa-framework/sofa/pull/1751 ); - **[SofaCore]** Reduce the needs for include in Node.h [#1744]( https://github.com/sofa-framework/sofa/pull/1744 ); - **[SofaCore]** Remove empty file [#2204]( https://github.com/sofa-framework/sofa/pull/2204 ); - **[SofaCore_simutest]** Add tests for Link::CheckPath [#1714]( https://github.com/sofa-framework/sofa/pull/1714 ); - **[SofaCore_test]** Update the two failling tests so they match the new convention for TypeInfo [#1709]( https://github.com/sofa-framework/sofa/pull/1709 ); - **[SofaExplicitOdeSolver]** Mark Data as disabled [#2218]( https://github.com/sofa-framework/sofa/pull/2218 ); - [SofaExporter] Remove SofaBaseVisual dependency [#2039]( https://github.com/sofa-framework/sofa/pull/2039 ); - [SofaExporter] Removed duplicated header guard [#1954]( https://github.com/sofa-framework/sofa/pull/1954 ); - [SofaExporter] Update OBJExporter example [#1782]( https://github.com/sofa-framework/sofa/pull/1782 ); - **[SofaFramework/Sofa.Testing]** remove macro and move testing resources from SofaFramework [#2000]( https://github.com/sofa-framework/sofa/pull/2000 ); - **[SofaFramework]** Remove warnings (a lot) [#1876]( https://github.com/sofa-framework/sofa/pull/1876 ); - [SofaGeneralEngine] Add option in NearestPointROI to use restPosition or position [#1978]( https://github.com/sofa-framework/sofa/pull/1978 ); - [SofaGeneralEngine] Remove dep on Id,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:201770,test,tests,201770,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,ll/4522); - [GUI] Remove the New/Save/SaveAs menu options [#4523](https://github.com/sofa-framework/sofa/pull/4523); - [all] Additional fixes further to v24.06 lifecycle [#4540](https://github.com/sofa-framework/sofa/pull/4540); - [Core] Update NarrowPhaseDetection.cpp use prefix [#4557](https://github.com/sofa-framework/sofa/pull/4557); - [Geomagic] Update GeomagicDriver.cpp to fire error when hd.h is not found [#4576](https://github.com/sofa-framework/sofa/pull/4576); - [CMake] Upgrade cmake_minimum_required to 3.22 [#4586](https://github.com/sofa-framework/sofa/pull/4586); - [Core] Remove unused debug trace [#4590](https://github.com/sofa-framework/sofa/pull/4590); - [Core] cmake: Remove last traces of Sofa.Component.Compat [#4596](https://github.com/sofa-framework/sofa/pull/4596); - [LinearAlgebra] Remove empty source file [#4599](https://github.com/sofa-framework/sofa/pull/4599); - [Type] Clean and test MatSym [#4600](https://github.com/sofa-framework/sofa/pull/4600); - [tests] Use appropriate gtest macro [#4607](https://github.com/sofa-framework/sofa/pull/4607); - [LinearSystem] Remove development artifact [#4620](https://github.com/sofa-framework/sofa/pull/4620); - [all] Minor last fixes using SimpleApi [#4627](https://github.com/sofa-framework/sofa/pull/4627); - [SolidMechanics.FEM] Small update on container access to avoid unecessary check [#4639](https://github.com/sofa-framework/sofa/pull/4639); - [AnimationLoop] Rename Data [#4664](https://github.com/sofa-framework/sofa/pull/4664); - [Guidelines] Format cpp code [#4695](https://github.com/sofa-framework/sofa/pull/4695); - [all] Remove some warnings [#4698](https://github.com/sofa-framework/sofa/pull/4698); - [examples] Run PluginFinder on examples [#4707](https://github.com/sofa-framework/sofa/pull/4707); - [examples] Remove examples using DefaultCollisionGroupManager [#4708](https://github.com/sofa-framework/sofa/pull/4708); - [Core] Warn when module name is empty [#4725](https://github.com/sofa-framewor,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:16460,test,tests,16460,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"logy type on the python side; - fix OBJ loader; - fix loading a scene from a .py in a Node independently from the awful Simulation singleton.; - fix SofaPython.Tools.localPath in some situations; - fix BaseContext_getObjects so it can select objects from a base class name (and adding an example); - quaternion: fix singularity in from_line function. - [Flexible]; - fix case sensitive issues; - API: fix a bug with colors when reloading a scene; - fix the bulk factor in NeoHookean material; - fix NeoHookean traction test; - testing detachFromGraph; - BaseDeformationMapping: remove debug message, fix usage of sout (no need for testing f_printLog); - fix test compilation w/o image plugin; - fix loadVisual; - fix bug in topologygausspointsampler (computation of volume integrals for irregular hexa). - [Compliant]; - CompliantImplicitSolver: fix Lagrange multipliers clear when reseting the simulation; - auto-fix init errors in RigidMass; - Frame.py: adding tolist() conversion; - fix Jacobian reserved size; - fix contacts and associated test. - [image]; - python tools: fix bug in mhd parsing; - MeshToImage: fix bresenham, be sure dmax>=1; - fix resampling of projection images, and marching cubes default parameter; - fix bug in mhd file loader; - fix rasterization when using vertex colors. ### Cleanings. - warnings were removed; - dead branches were removed; - the ‘using’ directives were removed in header files; - the repository sofa_root/modules/sofa/components has been cleaned (deprecated components removed); - clean many SOFA examples; - removing ""using helper::vector"" from VecTypes.h; - SofaQtGui: Remove qt3 remnants in ui files. - Minor clean; - clean SofaBaseCollision of OpenGL dependency; - cleaning Material::setColor; - Base: write sout as info (rather than warnings); - clean and fix RestShapeSpringsForceField draw functions; - Remove useless tests, optimize and fix potential bugs; - cleanup, precompute barycenters for tetra and hexa; - SofaBaseVisual: clean up and mak",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:359875,test,test,359875,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,mapped mass matrix [#4625](https://github.com/sofa-framework/sofa/pull/4625); - [Constraint.Lagrangian] Add fixed lagrangian constraint [#4646](https://github.com/sofa-framework/sofa/pull/4646). ### Breaking. - [Type] RGBAColor: remove inheritance from type::fixed_array and use std::array to store its components [#4263](https://github.com/sofa-framework/sofa/pull/4263); - [All] ColorMap uses RGBAColor [#4270](https://github.com/sofa-framework/sofa/pull/4270); - [Type] Refactor Vec [#4296](https://github.com/sofa-framework/sofa/pull/4296); - [SolidMechanics.Springs] Cleaning of QuadularBendingSprings [#4304](https://github.com/sofa-framework/sofa/pull/4304); - [Topology.Container.Dynamic] GeometryAlgorithms: support generic State [#4362](https://github.com/sofa-framework/sofa/pull/4362); - [LinearSolver.Direct] Introduce other ordering methods in SparseLDL through Eigen [#4370](https://github.com/sofa-framework/sofa/pull/4370); - [Constraint.Lagrangian.Solver] Fix assert in GenericConstraintSolver [#4389](https://github.com/sofa-framework/sofa/pull/4389); - [Type] Refactor Mat [#4396](https://github.com/sofa-framework/sofa/pull/4396); - [LinearSystem] Detect changes in sparsity pattern when using ConstantSparsityPatternSystem [#4428](https://github.com/sofa-framework/sofa/pull/4428); - [Core][LinearSolver] Introduction of ordering method components [#4477](https://github.com/sofa-framework/sofa/pull/4477); - [Simulation.Graph] Move SimpleApi into its own library [#4495](https://github.com/sofa-framework/sofa/pull/4495); - [all] Lifecycle for v24.06 (2): remove Compat [#4533](https://github.com/sofa-framework/sofa/pull/4533); - [all] Add PenalityContact vector Data display [#4637](https://github.com/sofa-framework/sofa/pull/4637); - [GUI.Component] Add virtualization for attachment performer [#4638](https://github.com/sofa-framework/sofa/pull/4638); - [GUI.Qt] Some cleaning in qt RealGui [#4641](https://github.com/sofa-framework/sofa/pull/4641); - [FEM.HyperElastic] Co,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:1890,assert,assert,1890,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['assert'],['assert']
Testability,"messages into each sofa component.; - Implements new methods to write on-liner's conditional message:; msg_info_when(level<3) << ""This is a conditional info message""; - Implement an implicit version of each of the msg_* API allowing to write; msg_info() << ""Hello"" in place for msg_info(this) << Hello""; - CImgPlugin : creation of a dedicated plugin for image loading based on CImg [#185]( https://github.com/sofa-framework/sofa/pull/185 ); - Remove deprecated miniBoost dependency [#273]( https://github.com/sofa-framework/sofa/pull/273 ). ### Improvements. **Modules**; - [All]; - update containers to support c++x11 features [#113]( https://github.com/sofa-framework/sofa/pull/113 ); - speed up spheres rendering + code cleaning [#170]( https://github.com/sofa-framework/sofa/pull/170 ); - updates externs/gtest to a fresh checkout [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - auto-init/cleanup libraries [#168]( https://github.com/sofa-framework/sofa/pull/168 ); - Improve and clean msg_api and logging of message (#190, #255, #275). See [documentation](https://www.sofa-framework.org/community/doc/programming-with-sofa/logger/) for more information.; - Add CMake option to limit cores used to build specific targets [#254]( https://github.com/sofa-framework/sofa/pull/254 ); - Fix rgbacolor parsing [#305]( https://github.com/sofa-framework/sofa/pull/305 ); - CMake: installing gtest headers for separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - [SofaKernel]; - Update the RichConsoleStyleMessageFormatter [#126]( https://github.com/sofa-framework/sofa/pull/126 ); - creation of a defaulttype::RGBAColor [#119]( https://github.com/sofa-framework/sofa/pull/119 ); - add a new method in BaseObjectDescription [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - adding listener mechanism to SceneLoader [#205]( https://github.com/sofa-framework/sofa/pull/205 ); - common usage for DiagonalMass and tests [#230]( https://github.com/sofa-fr",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:326014,log,logging,326014,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['logging']
Testability,"mework/sofa/pull/2816 ); - [SofaGuiQt] Modernize the 'qt::connect' to use the c++ syntax [#2943]( https://github.com/sofa-framework/sofa/pull/2943 ); - [SofaGuiQt] Remove sec unit from GUI [#2742]( https://github.com/sofa-framework/sofa/pull/2742 ); - [SofaGuiQt] Rename attributes to follow SOFA guidelines. [#2944]( https://github.com/sofa-framework/sofa/pull/2944 ); - [SofaKernel] fix shadow variable [#2791]( https://github.com/sofa-framework/sofa/pull/2791 ); - [SofaMiscCollision] Extract OBB/Capsule code into its own plugin [#2820]( https://github.com/sofa-framework/sofa/pull/2820 ); - [SofaMiscFEM] Clean FastTetrahedralCorotationalForceField and add extraData [#2569]( https://github.com/sofa-framework/sofa/pull/2569 ); - [SofaMiscForceField] Fix type conversion in tests [#2714]( https://github.com/sofa-framework/sofa/pull/2714 ); - [SofaRigid][SofaGeneralSimpleFem] Fix typos [#2947]( https://github.com/sofa-framework/sofa/pull/2947 ); - [SofaSimpleFEM_test] Add tests on Tetrahedron, CorotationalTetrahedral and FastTetrahedral FEM ForceField [#2842]( https://github.com/sofa-framework/sofa/pull/2842 ); - [SofaSimpleFem] Prefer usage of accessor in HexahedronFEMForceField [#2778]( https://github.com/sofa-framework/sofa/pull/2778 ); - [SofaSimulation] Remove DAGNodeMultiMappingElement [#2694]( https://github.com/sofa-framework/sofa/pull/2694 ); - [SofaSparseSolver] Disable matrix export in SparseLDLSolver [#2725]( https://github.com/sofa-framework/sofa/pull/2725 ); - [SofaSparseSolver] SparseLUSolver and SparseCholeskySolver support fill reducing permutation [#2788]( https://github.com/sofa-framework/sofa/pull/2788 ); - [SofaTest] Move last tests to Sofa.Component [#2996]( https://github.com/sofa-framework/sofa/pull/2996 ); - [SofaTest] Remove last usages and make it optional [#3000]( https://github.com/sofa-framework/sofa/pull/3000 ); - [SofaUserInteraction] remove shadow variable [#2795]( https://github.com/sofa-framework/sofa/pull/2795 ); - [SolidMechanics.FEM.Hyp",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:128781,test,tests,128781,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,mework/sofa/pull/4676); - [Controller+Engine] Rename Data [#4678](https://github.com/sofa-framework/sofa/pull/4678); - [IO] Rename Data [#4679](https://github.com/sofa-framework/sofa/pull/4679); - [ODESolver] Rename Data [#4680](https://github.com/sofa-framework/sofa/pull/4680); - [Playback] Rename Data [#4681](https://github.com/sofa-framework/sofa/pull/4681); - [Setting] Rename Data [#4682](https://github.com/sofa-framework/sofa/pull/4682); - [Topology] Rename Data [#4683](https://github.com/sofa-framework/sofa/pull/4683); - [Visual] Rename Data [#4684](https://github.com/sofa-framework/sofa/pull/4684); - [Constraint] Rename Data [#4696](https://github.com/sofa-framework/sofa/pull/4696); - [all] Rename depreciation macros in config.h.in for unique module id… [#4755](https://github.com/sofa-framework/sofa/pull/4755); - [examples] Rename FixedConstraint example [#4764](https://github.com/sofa-framework/sofa/pull/4764). ### Others. - [Helper] PluginManager: testing loading a plugin with a dependency on an other plugin [#4464](https://github.com/sofa-framework/sofa/pull/4464); - [Simulation] Tests: introduce multiple parallel simulations [#4580](https://github.com/sofa-framework/sofa/pull/4580); - [Simulation.Core] Remove useless and annoying timers [#4631](https://github.com/sofa-framework/sofa/pull/4631); - [image] Fix module name [#4720](https://github.com/sofa-framework/sofa/pull/4720); - [tools] Add metis relocation in post install fixup [#4767](https://github.com/sofa-framework/sofa/pull/4767). ## [v23.12.00]( https://github.com/sofa-framework/sofa/tree/v23.12.00 ). [Full log](https://github.com/sofa-framework/sofa/compare/v23.06..v23.12). ### Highlighted contributions; - [Mass] Remove DiagonalMass and replace with MeshMatrixMass (with lumping) [#3001](https://github.com/sofa-framework/sofa/pull/3001); - [LinearAlgebra] Pull Insimo's CompressedRowSparseMatrix into the main branch [#3515](https://github.com/sofa-framework/sofa/pull/3515); - [plugins] Add fetchabl,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:20521,test,testing,20521,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['testing']
Testability,mming-with-sofa/logger/) for more information.; - Add CMake option to limit cores used to build specific targets [#254]( https://github.com/sofa-framework/sofa/pull/254 ); - Fix rgbacolor parsing [#305]( https://github.com/sofa-framework/sofa/pull/305 ); - CMake: installing gtest headers for separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - [SofaKernel]; - Update the RichConsoleStyleMessageFormatter [#126]( https://github.com/sofa-framework/sofa/pull/126 ); - creation of a defaulttype::RGBAColor [#119]( https://github.com/sofa-framework/sofa/pull/119 ); - add a new method in BaseObjectDescription [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - adding listener mechanism to SceneLoader [#205]( https://github.com/sofa-framework/sofa/pull/205 ); - common usage for DiagonalMass and tests [#230]( https://github.com/sofa-framework/sofa/pull/230 ); - add tests for DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - add tests for DefaultAnimationLoop [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for LocalMinDistance [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add a way to convert message type to string in Message.cpp [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - adding listener mechanism to SceneLoader [#204]( https://github.com/sofa-framework/sofa/pull/204 ); - Grid Topologies cleanup + new SphereGrid [#164]( https://github.com/sofa-framework/sofa/pull/164 ); - Add CMake option SOFA_WITH_EXPERIMENTAL_FEATURES (default OFF) to enable MechanicalObject::buildIdentityBlocksInJacobian [#276]( https://github.com/sofa-framework/sofa/pull/276 ); - [SofaGraphComponents]; - add tests for RequiredPlugin [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaHelper]; - GLSL: load shader source code from ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:327118,test,tests,327118,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"models/ScalarTypeInfo.h; ${SRC_ROOT}/typeinfo/models/TextTypeInfo.h; ${SRC_ROOT}/typeinfo/models/VectorTypeInfo.h; ). set(SOURCE_FILES; ${SRC_ROOT}/AbstractTypeInfo.cpp; ${SRC_ROOT}/MatrixExporter.cpp; ${SRC_ROOT}/SolidTypes.cpp; ${SRC_ROOT}/TemplatesAliases.cpp; ${SRC_ROOT}/TypeInfoID.cpp; ${SRC_ROOT}/TypeInfoRegistry.cpp; ${SRC_ROOT}/TypeInfoRegistryTools.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/typeinfo/TypeInfo_Bool.cpp; ${SRC_ROOT}/typeinfo/TypeInfo_BoundingBox.cpp; ${SRC_ROOT}/typeinfo/TypeInfo_FixedArray.cpp; ${SRC_ROOT}/typeinfo/TypeInfo_Integer.cpp; ${SRC_ROOT}/typeinfo/TypeInfo_Mat.cpp; ${SRC_ROOT}/typeinfo/TypeInfo_Quat.cpp; ${SRC_ROOT}/typeinfo/TypeInfo_RGBAColor.cpp; ${SRC_ROOT}/typeinfo/TypeInfo_RigidTypes.cpp; ${SRC_ROOT}/typeinfo/TypeInfo_Set.cpp; ${SRC_ROOT}/typeinfo/TypeInfo_Scalar.cpp; ${SRC_ROOT}/typeinfo/TypeInfo_Text.cpp; ${SRC_ROOT}/typeinfo/TypeInfo_Vector.cpp; ${SRC_ROOT}/typeinfo/TypeInfo_Vec.cpp; ${SRC_ROOT}/typeinfo/TypeInfo_VecTypes.cpp; ${SRC_ROOT}/typeinfo/TypeInfo_Topology.cpp; ). sofa_find_package(Sofa.Helper REQUIRED); sofa_find_package(Sofa.LinearAlgebra REQUIRED); sofa_find_package(Eigen3 REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.Type Sofa.LinearAlgebra); target_link_libraries(${PROJECT_NAME} PUBLIC Eigen3::Eigen). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_DEFAULTTYPE_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_DEFAULTTYPE_BUILD_TESTS); add_subdirectory(test); add_subdirectory(simutest); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/DefaultType/CMakeLists.txt:3439,Test,Tests,3439,Sofa/framework/DefaultType/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/DefaultType/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,n MechanicalGetNonDiagonalMassesCountVisitor and MechanicalVDotVisitor [#4328](https://github.com/sofa-framework/sofa/pull/4328); - [Simulation.Core] BaseMechanicalVisitor: Deprecate rootData [#4350](https://github.com/sofa-framework/sofa/pull/4350); - [LinearAlgebra] Use class template argument deduction with MatrixExpr [#4351](https://github.com/sofa-framework/sofa/pull/4351); - [LinearAlgebra] constexpr if statement when possible [#4352](https://github.com/sofa-framework/sofa/pull/4352); - [LinearAlgebra] Factorize template specializations of filterValues in CRS matrix [#4355](https://github.com/sofa-framework/sofa/pull/4355); - [CImgPlugin] Add fetchable CImg and remove embedded cimg [#4357](https://github.com/sofa-framework/sofa/pull/4357); - [Mapping.Linear] Replace a few beginEdit by accessors [#4363](https://github.com/sofa-framework/sofa/pull/4363); - [SofaSimpleGUI] Fix calls to deprecated functions [#4390](https://github.com/sofa-framework/sofa/pull/4390); - [Type] Remove test of a deprecated constructor [#4391](https://github.com/sofa-framework/sofa/pull/4391); - [Core] Remove pragma directive in cpp file [#4393](https://github.com/sofa-framework/sofa/pull/4393); - [All] Rename license file into LICENSE-LGPL.md to follow github repository rules [#4410](https://github.com/sofa-framework/sofa/pull/4410); - [SofaCUDA] Generalize the use of MessageDispatcher in SofaCUDA [#4430](https://github.com/sofa-framework/sofa/pull/4430); - [Core] Add documentation for the method BaseMapping::buildGeometricStiffnessMatrix [#4431](https://github.com/sofa-framework/sofa/pull/4431); - [LinearAlgebra] Factorize value filtering [#4442](https://github.com/sofa-framework/sofa/pull/4442); - [GitHub] Clean existing actions [#4444](https://github.com/sofa-framework/sofa/pull/4444); - [SofaCUDA] Initialize module from another module [#4453](https://github.com/sofa-framework/sofa/pull/4453); - [SofaDistanceGrid] remove shadow variable [#4455](https://github.com/sofa-framework/sofa,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:13115,test,test,13115,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,"n.inl; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/Vertex2Frame.h; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/Vertex2Frame.inl. ). set(SOURCE_FILES; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/DifferenceEngine.cpp; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/DilateEngine.cpp; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/DisplacementMatrixEngine.cpp ; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/IndexValueMapper.cpp; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/Indices2ValuesMapper.cpp; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/MapIndices.cpp; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/MathOp.cpp; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/ProjectiveTransformEngine.cpp; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/QuatToRigidEngine.cpp; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/ROIValueMapper.cpp; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/RigidToQuatEngine.cpp; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/SmoothMeshEngine.cpp; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/TransformEngine.cpp; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/TransformMatrixEngine.cpp; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/TransformPosition.cpp; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/Vertex2Frame.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_ENGINE_TRANSFORM_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_ENGINE_TRANSFORM_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Transform/CMakeLists.txt:3751,Test,Tests,3751,Sofa/Component/Engine/Transform/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Transform/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"nGLVisual: Fix Spotlight source drawing + add some log for ShaderElement; - OmniDriverEmu plugin and examples; - scene test: ICPRegistration_ShapeMatching.scn is ignored; - Vec: 'normalized' function constness; - SpotLight: direction normalization; - ProjectionTo{Plane,Line}MultiMapping Jacobian insertion order; - SofaGeneralRigid: bug in ArticulatedSystemMapping; - SofaEngine: BoxROI instantiation; - SofaBaseCollision: Fix computeBBox in SPhereModel; - bug in MechanicalPickParticlesWithTagsVisitor input tags were not respected; - SofaOpenGLVisual: fix light's modelview matrix computation (lookat data was not checked); - StateMask method clean needs to resize m_size to 0. - [Test-CI]; - fix crash UncoupledConstraintCorrection_test; - fix SofaComponentBase_test on windows; - fix Mapping and MultiMapping tests; - fix MultiMapping::applyDJT test; - fix {Difference,Addition}Mapping when a pair is composed of the same index.; - fix tested scenes selection; - removed OptiTrackNatNet from ""options"" configurations; - ignore some OptiTrackNatNet scenes testing. - [SofaPython]; - fix GridTopology type on the python side; - fix OBJ loader; - fix loading a scene from a .py in a Node independently from the awful Simulation singleton.; - fix SofaPython.Tools.localPath in some situations; - fix BaseContext_getObjects so it can select objects from a base class name (and adding an example); - quaternion: fix singularity in from_line function. - [Flexible]; - fix case sensitive issues; - API: fix a bug with colors when reloading a scene; - fix the bulk factor in NeoHookean material; - fix NeoHookean traction test; - testing detachFromGraph; - BaseDeformationMapping: remove debug message, fix usage of sout (no need for testing f_printLog); - fix test compilation w/o image plugin; - fix loadVisual; - fix bug in topologygausspointsampler (computation of volume integrals for irregular hexa). - [Compliant]; - CompliantImplicitSolver: fix Lagrange multipliers clear when reseting the simulat",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:358673,test,tested,358673,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['test'],"['tested', 'testing']"
Testability,"nagerSecondaryPass.h; ). set(SOURCE_FILES; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/init.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/CompositingVisualLoop.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/Light.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/LightManager.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OrderIndependentTransparencyManager.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglOITShader.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglAttribute.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglShader.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglShaderMacro.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglShaderVisualModel.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglShadowShader.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglTexture.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglTexturePointer.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglVariable.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglRenderingSRGB.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/PostProcessManager.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/VisualManagerPass.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/VisualManagerSecondaryPass.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.GL REQUIRED); sofa_find_package(Sofa.GL.Component.Rendering3D REQUIRED) # for OglModel. add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core Sofa.GL Sofa.GL.Component.Rendering3D). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_GL_COMPONENT_SHADER_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_GL_COMPONENT_SHADER_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Shader/CMakeLists.txt:3015,Test,Tests,3015,Sofa/GL/Component/Shader/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Shader/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"nding axis, and associated examples [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - add tests for RegularGridTopology [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - [SofaEngine]; - BREAKING: Add oriented box feature to BoxROI [#108]( https://github.com/sofa-framework/sofa/pull/108 ); - [SofaConstraint]; - add instantiation of constraint corrections with Vec2f [#157]( https://github.com/sofa-framework/sofa/pull/157 ); - [SofaOpenglVisual]; - add tests for ClipPlane [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaVolumetricData]; - add tests for DistanceGrid [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for Light [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaBoundaryCondition]; - add tests for ConstantForceField, some of them are OpenIssue demonstrating existing problem, as crashing sofa when using negative or too large values in indices [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [CI]; - improvement of all test scripts. **Plugins / Projects**; - [GUI]; - mouse events are now transmitted to the scene with QtGLViewer [#132]( https://github.com/sofa-framework/sofa/pull/132 ); - [SceneCreator]; - Cosmetic changes and remove un-needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pull/202 ); - change the way createObject() handle its arguments to simplify scene writing + batch of tests [#286]( https://github.com/sofa-framework/sofa/pull/286 ); - [SofaTest]; - add Backtrace::autodump to all tests to ease debugging [#191]( https://github.com/sofa-framework/sofa/pull/191 ); - add automatic tests for updateForceMask [#209]( https://github.com/sofa-framework/sofa/pull/209 ); - add tests on PluginManager ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:329364,test,test,329364,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,"needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pull/202 ); - change the way createObject() handle its arguments to simplify scene writing + batch of tests [#286]( https://github.com/sofa-framework/sofa/pull/286 ); - [SofaTest]; - add Backtrace::autodump to all tests to ease debugging [#191]( https://github.com/sofa-framework/sofa/pull/191 ); - add automatic tests for updateForceMask [#209]( https://github.com/sofa-framework/sofa/pull/209 ); - add tests on PluginManager [#240]( https://github.com/sofa-framework/sofa/pull/240 ); - TestMessageHandler : new and robust implementation to connect msg_* message to test failure [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - update to use the new TestMessageHandler where msg_error generates test failures [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - add tests for TestMessageHandler [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - [SofaCUDA]; - FIX NVCC flags for debug build on Windows [#300]( https://github.com/sofa-framework/sofa/pull/300 ). ### Bug Fixes. **Modules**; - Warnings have been fixed [#229]( https://github.com/sofa-framework/sofa/pull/229 ); - [All]; - check that SofaPython is found before lauching the cmake sofa_set_python_directory command [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - use the cmake install DIRECTORY instead of FILES to preserve the files hierarchy when installing [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - fixing issue related to parsing attributes with atof/atoi [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - unify color datafield [#206]( https://github.com/sofa-framework/sofa/pull/206 ); - Fix CMakeLists bug on Sofa.ini and installedS",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:330574,Test,TestMessageHandler,330574,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Test', 'test']","['TestMessageHandler', 'test']"
Testability,"ner folded, and its tool tip is New Tab. Press the button.; This will give us a scene graph with some default components.; Right click on the TreeCollisionGroupManager and select Delete.; We don't need this component for our scene.; Find the OglModel component with the Filter, and drag and drop it onto the root node. Double click the OglModel node to edit its properties.; Rename the model ""Objective"".; Under the Property 2/3 tab, find the fileMesh section. Click on the ... button to bring up the file browser. Select the file /Sofa/share/mesh/dragon.obj, and press OK to return to the Modeler.; We now have a scene with all the components needed to handle collisions in a scene, and a visual model representing our deformable object.; Key points; This is how the collisions are performed in SOFA using these default components.; DefaultPipeline: Launch all the operations to perform the collision detection and response. Collision Detection:. Broad Phase: using ""Axis Aligned Bounding Boxes"" (AABB), we only keep potential colliding pair of objects; Narrow Phase: we use the geometrical primitives (spheres, triangles, lines, points) to test the distance between two objects. ; we use the BruteForceDetection to select which primitives will be used, and the MinProximityIntersection to detect if a collision exists between two geometrical primitives. Collision Response:. With all the colliding primitives, we create an appropriate collision response: the ContactManager gives the information about what response we have to use. ; Components are created dynamically in the graph to create repulsive forces, or constraints. In this tutorial, we will create PenalityContactForceField. . Advanced collision detection and response are implemented in SOFA, so don't hesitate to experiment other examples.; Results; Press the Run in SOFA (or press Ctrl-R), and press Animate; In this scene, we only have a OglModel corresponding to a pure visual representation of an object. ; Nothing happens.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/0_FullObject.html:1589,test,test,1589,examples/Tutorials/StepByStep/FullObject/0_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/0_FullObject.html,1,['test'],['test']
Testability,"nges from upstream often to [**sync your fork**](https://help.github.com/articles/syncing-a-fork/) so that merge conflicts will be less likely in your pull request.; - [**Create a pull request**](https://help.github.com/articles/creating-a-pull-request-from-a-fork/) when you are ready to propose your changes into the main project. ### Start easy and simple. For newcomers in the community, we regularly identify issues easy to tackle and to get started with, using a [label ""*good first issue*""](https://github.com/sofa-framework/sofa/issues?q=label%3A%22good+first+issue%22). Choose one, solve it and create your first pull request!. ### Rules. - Description must explain the **issue solved** or the **feature added**, and this must be reported in the **[CHANGELOG.md](https://github.com/sofa-framework/sofa/blob/master/CHANGELOG.md)** file.; - Code must follow **[our guidelines](https://github.com/sofa-framework/sofa/blob/master/GUIDELINES.md)**.; - Commit must build **successfully** on Jenkins for all steps (compilation + tests + examples).; - **Unit Tests** are required for each new component or if an issue is fixed.; - **Examples** (at least one) must be provided showing the new feature. ### Management of pull requests. Standard pull-requests are reviewed and approved by the ""Reviewers"" team. ; Major pull-requests (BREAKING, major features) are reviewed by the ""Reviewers"" team and approved by the ""STC members"" team through a vote within a maximum period of 2 weeks. Reviewing:. - Make sure the pull request is **labelized** and well assigned.; - Control that it follows **our rules** (defined above).; - Track the **status of each pull request** using the dedicated labels:; - ""pr: wip"" must be set if the PR has been created for a team work or if some fixes are needed (discussed in the comments).; - ""pr: to review"" must be set if the PR is ready to be reviewed. ; - ""pr: ready"" must be set **instead of merge** if another PR merge is being built on the [Dashboard](https://www.so",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:5658,test,tests,5658,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['test'],['tests']
Testability,"nsmitted to the scene with QtGLViewer [#132]( https://github.com/sofa-framework/sofa/pull/132 ); - [SceneCreator]; - Cosmetic changes and remove un-needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pull/202 ); - change the way createObject() handle its arguments to simplify scene writing + batch of tests [#286]( https://github.com/sofa-framework/sofa/pull/286 ); - [SofaTest]; - add Backtrace::autodump to all tests to ease debugging [#191]( https://github.com/sofa-framework/sofa/pull/191 ); - add automatic tests for updateForceMask [#209]( https://github.com/sofa-framework/sofa/pull/209 ); - add tests on PluginManager [#240]( https://github.com/sofa-framework/sofa/pull/240 ); - TestMessageHandler : new and robust implementation to connect msg_* message to test failure [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - update to use the new TestMessageHandler where msg_error generates test failures [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - add tests for TestMessageHandler [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - [SofaCUDA]; - FIX NVCC flags for debug build on Windows [#300]( https://github.com/sofa-framework/sofa/pull/300 ). ### Bug Fixes. **Modules**; - Warnings have been fixed [#229]( https://github.com/sofa-framework/sofa/pull/229 ); - [All]; - check that SofaPython is found before lauching the cmake sofa_set_python_directory command [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - use the cmake install DIRECTORY instead of FILES to preserve the files hierarchy when installing [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - fixing issue related to parsing attributes with atof/atoi [#161]( https://github.com/sofa-framework/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:330399,Test,TestMessageHandler,330399,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Test', 'test']","['TestMessageHandler', 'test']"
Testability,nt buildStiffnessMatrix for FastTetrahedralCorotationalForceField [#3929](https://github.com/sofa-framework/sofa/pull/3929); - [all] Cosmetic: apply nested namespaces style [#3932](https://github.com/sofa-framework/sofa/pull/3932); - [Helper] Properly deprecate an already deprecated function [#3933](https://github.com/sofa-framework/sofa/pull/3933); - [all] Make local variables const [#3937](https://github.com/sofa-framework/sofa/pull/3937); - [Tests] Properly remove exported files [#3942](https://github.com/sofa-framework/sofa/pull/3942); - [all] Remove few lines of code that do nothing [#3946](https://github.com/sofa-framework/sofa/pull/3946); - [all] Implement empty buildDampingMatrix [#3948](https://github.com/sofa-framework/sofa/pull/3948); - [IO.Mesh] More debug info in the error message in MeshSTLLoader [#3949](https://github.com/sofa-framework/sofa/pull/3949); - [Sofa.Simulation] Remove Node::bwdInit [#3954](https://github.com/sofa-framework/sofa/pull/3954); - [Mapping/tests] Remove dependency on SceneCreator [#3955](https://github.com/sofa-framework/sofa/pull/3955); - [Simulation.Core] Deprecate unused classes *VisitorScheduler [#3957](https://github.com/sofa-framework/sofa/pull/3957); - [Helper.System] Introduce function append for paths [#3961](https://github.com/sofa-framework/sofa/pull/3961); - [Project] Start dev phase v23.12 [#3963](https://github.com/sofa-framework/sofa/pull/3963); - [all] Minor clean on indentation and warning [#3975](https://github.com/sofa-framework/sofa/pull/3975); - [MechanicalLoad] Remove empty draw function in LinearForceField [#3979](https://github.com/sofa-framework/sofa/pull/3979); - [tests] Restore commented unit tests [#3982](https://github.com/sofa-framework/sofa/pull/3982); - [CHANGELOG] Update further to latest changes in v23.06 [#3998](https://github.com/sofa-framework/sofa/pull/3998); - [Component] Follow changes from SOFA #3889 [#4013](https://github.com/sofa-framework/sofa/pull/4013); - [LinearAlgebra] CompressedRow,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:42781,test,tests,42781,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,o/FileAccess.cpp; ${SRC_ROOT}/io/File.cpp; ${SRC_ROOT}/io/Image.cpp; ${SRC_ROOT}/io/ImageDDS.cpp; ${SRC_ROOT}/io/ImageRAW.cpp; ${SRC_ROOT}/io/Mesh.cpp; ${SRC_ROOT}/io/MeshOBJ.cpp; ${SRC_ROOT}/io/MeshGmsh.cpp; ${SRC_ROOT}/io/MeshTopologyLoader.cpp; ${SRC_ROOT}/io/SphereLoader.cpp; ${SRC_ROOT}/io/STBImage.cpp; ${SRC_ROOT}/io/TriangleLoader.cpp; ${SRC_ROOT}/io/XspLoader.cpp; ${SRC_ROOT}/kdTree.cpp; ${SRC_ROOT}/system/DynamicLibrary.cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_RO,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:5396,log,logging,5396,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,ofa-framework/sofa/pull/1874 ); - **[SofaSimpleFem]** FIX wrong initialization order [#1938]( https://github.com/sofa-framework/sofa/pull/1938 ); - **[SofaSimulation\*]** Fix confusion between namespaces [#1959]( https://github.com/sofa-framework/sofa/pull/1959 ); - **[SofaSimulationCore]** Clean free motion animation loop [#1930]( https://github.com/sofa-framework/sofa/pull/1930 ); - **[SofaSimulationCore]** Move WorkerThread class into its own file [#2002]( https://github.com/sofa-framework/sofa/pull/2002 ); - **[SofaSimulationCore]** Moves code from TopologyChangeVisitor.h into .cpp [#1905]( https://github.com/sofa-framework/sofa/pull/1905 ); - **[SofaSimulationCore]** Remove ClassSystem.h [#1844]( https://github.com/sofa-framework/sofa/pull/1844 ); - **[SofaSimulationCore]** Add tons of details in Euler solver [#2163]( https://github.com/sofa-framework/sofa/pull/2163 ); - **[SofaSimulationCore]** Clean AnimateVisitor [#2194]( https://github.com/sofa-framework/sofa/pull/2194 ); - **[SofaSimulation]** Convert tests to Sofa.Testing [#2154]( https://github.com/sofa-framework/sofa/pull/2154 ); - [SofaSparseSolver] Clean useless dependencies [#2012]( https://github.com/sofa-framework/sofa/pull/2012 ); - [SofaUserInteraction] Minor cleaning of RayTraceDetection [#2009]( https://github.com/sofa-framework/sofa/pull/2009 ); - [SofaUserInteraction] Remove AddFramePerformer as it is not compiled [#1970]( https://github.com/sofa-framework/sofa/pull/1970 ); - [SofaUserInteraction] Deprecate RayTraceDetection [#2212]( https://github.com/sofa-framework/sofa/pull/2212 ); - [Tests] Move tests in their (new) correct locations [#1998]( https://github.com/sofa-framework/sofa/pull/1998 ); - [Tests] Replace sofa::helper::testing by sofa::testing [#2143]( https://github.com/sofa-framework/sofa/pull/2143 ). **Plugins / Projects**; - [CGAL] Remove #pragma once in .cpp files [#2202]( https://github.com/sofa-framework/sofa/pull/2202 ); - [Geomagic] Add macro HAS_OPENHAPTICS to know if libr,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:205605,test,tests,205605,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,ofa-framework/sofa/pull/4248); - [LinearAlgebra] Support 6x6 matrices accumulation in BaseMatrix [#4253](https://github.com/sofa-framework/sofa/pull/4253); - [example] Speedup TorusFall with parallel inverse product [#4256](https://github.com/sofa-framework/sofa/pull/4256); - [Helper] ADD option to cmake for advanced timer [#4259](https://github.com/sofa-framework/sofa/pull/4259); - [LinearSystem] Speedup computation of Jacobian matrices [#4317](https://github.com/sofa-framework/sofa/pull/4317); - [FEM.Elastic] Reference instead of a copy in TriangularFEMForceField [#4332](https://github.com/sofa-framework/sofa/pull/4332); - [All] Add GIT_REF option for external plugins [#4448](https://github.com/sofa-framework/sofa/pull/4448); - [Testing] Externalize (find_package() or fetch) googletest/gtest [#4471](https://github.com/sofa-framework/sofa/pull/4471). ### Bug Fixes; - [test] Fix unit test on RestShapeSpringsForceField [#3864](https://github.com/sofa-framework/sofa/pull/3864); - [test] Fix failing unit test [#3876](https://github.com/sofa-framework/sofa/pull/3876); - [Constraint.Lagrangian.Solver] LCPConstraintSolver: Fix when mu=0 (no friction) [#3905](https://github.com/sofa-framework/sofa/pull/3905); - [applications] remove unused variable [#3920](https://github.com/sofa-framework/sofa/pull/3920); - [Projective] Fix and test FixedPlaneConstraint [#3925](https://github.com/sofa-framework/sofa/pull/3925); - [MechanicalLoad] Restore addKToMatrix and test SurfacePressureForceField [#3935](https://github.com/sofa-framework/sofa/pull/3935); - [Core.Topology] Restore invalid ids in invalid containers [#3962](https://github.com/sofa-framework/sofa/pull/3962); - [Sofa.Component] FIX default color for TetrahedronFEMForceField [#3971](https://github.com/sofa-framework/sofa/pull/3971); - [image] Fix crash in case no parameters provided to TransferFunction [#3976](https://github.com/sofa-framework/sofa/pull/3976); - [Mapping.NonLinear] Fix assert in RigidMapping [#3978](https:,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:33305,test,test,33305,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['test'],['test']
Testability,om/sofa-framework/sofa/pull/2438 ); - [Sofa.Core] Use links instead of private std::list [#2364]( https://github.com/sofa-framework/sofa/pull/2364 ); - [Sofa.LinearAlgebra] Fix typo 'bloc' -> 'block' [#2404]( https://github.com/sofa-framework/sofa/pull/2404 ); - [SofaBaseLinearSolver] Clean MatrixLinearSolver [#2195]( https://github.com/sofa-framework/sofa/pull/2195 ); - [SofaBaseTopology] Disable method createTopologyHandler with a TopologyHandler* as parameter [#2393]( https://github.com/sofa-framework/sofa/pull/2393 ); - [SofaBaseTopology] Fix Last element index update in TopologyData [#2359]( https://github.com/sofa-framework/sofa/pull/2359 ); - [SofaCore] Clean RotationMatrix [#1995]( https://github.com/sofa-framework/sofa/pull/1995 ); - [SofaGUI] Replace boost's program_options with cxxopts [#2263]( https://github.com/sofa-framework/sofa/pull/2263 ); - [SofaGuiQt] FIX screenshot mechanism [#2507]( https://github.com/sofa-framework/sofa/pull/2507 ); - [SofaGeneralDeformable] Clean class TriangularBendingSpring and add tests [#2363]( https://github.com/sofa-framework/sofa/pull/2363 ); - [SofaKernel] Split the content of DataTracker.h in different headers files. [#2286]( https://github.com/sofa-framework/sofa/pull/2286 ); - [SofaLoader] Rename MeshObjLoader to MeshOBJLoader [#2428]( https://github.com/sofa-framework/sofa/pull/2428 ); - [SofaMiscFem] Quick clean unused parameters in Triangular and TriangleFEMForceField [#2283]( https://github.com/sofa-framework/sofa/pull/2283 ); - [SofaMiscForceField] Fix MeshMatrixMass duplicate Data parameters [#2192]( https://github.com/sofa-framework/sofa/pull/2192 ); - [SofaSimulationCore] Remove unused class VisitorAsync [#1994]( https://github.com/sofa-framework/sofa/pull/1994 ). **Plugins / Projects**; - [CImgPlugin/image] Move file and clean headers [#2307]( https://github.com/sofa-framework/sofa/pull/2307 ); - [MultiThreading] Parallel hexa fem [#2177]( https://github.com/sofa-framework/sofa/pull/2177 ). **Examples / Scen,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:137906,test,tests,137906,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"om/sofa-framework/sofa/pull/2862 ); - [LinearSolver.Direct] Unit tests around SparseLDLSolver [#3050]( https://github.com/sofa-framework/sofa/pull/3050 ); - [LinearSolver] Introduce Eigen solvers [#2926]( https://github.com/sofa-framework/sofa/pull/2926 ); - [Regression] Test linear solvers for regression [#2776]( https://github.com/sofa-framework/sofa/pull/2776 ); - [SceneUtility] Move RequiredPlugin to Sofa.SimulationCore [#2849]( https://github.com/sofa-framework/sofa/pull/2849 ); - [Simulation.Core] Special message if extension is Python [#2998]( https://github.com/sofa-framework/sofa/pull/2998 ); - [Sofa.Config][MSVC] Change SIMD cmake option and flags [#2652]( https://github.com/sofa-framework/sofa/pull/2652 ); - [Sofa.GL] Add method drawScaledTetrahedron [#2586]( https://github.com/sofa-framework/sofa/pull/2586 ); - [Sofa.GUI.Common] Change the current GUI by default choice [#2979]( https://github.com/sofa-framework/sofa/pull/2979 ); - [Sofa.LinearAlgebra] Test CRS product compared to Eigen [#2839]( https://github.com/sofa-framework/sofa/pull/2839 ); - [SofaCore] By default, state accessors get the bbox of their states [#2780]( https://github.com/sofa-framework/sofa/pull/2780 ); - [SofaDefaultType] Speedup MapMapSparseMatrix [#2641]( https://github.com/sofa-framework/sofa/pull/2641 ); - [SofaDeformable] Spring lengths can be a list [#2602]( https://github.com/sofa-framework/sofa/pull/2602 ); - [SofaEngine] BoxROI support for 2d and 1d types [#2600]( https://github.com/sofa-framework/sofa/pull/2600 ); - [SofaGeneralEngine] Extend features of NearestPointROI [#2595]( https://github.com/sofa-framework/sofa/pull/2595 ); - [SofaGeometry] Add geometric methods in class Triangle and Edge [#2587]( https://github.com/sofa-framework/sofa/pull/2587 ); - [SofaGuiQt][WindowProfiler] Add root tree + show overhead [#2643]( https://github.com/sofa-framework/sofa/pull/2643 ); - [SofaHelper] Load image using stb [#2551]( https://github.com/sofa-framework/sofa/pull/2551 ); - [S",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:100013,Test,Test,100013,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Test']
Testability,"omparisons; - adding short name to create a ConstantCompliantPseudoStaticSolver; - using tag on joints in a generic way, set their compliance / isCompliance value; - added machinery to map data to numpy arrays, see example/numpy_data.py; - added easy pure python mappings, see examples/numpy_mapping.py; - added pure python forcefields, see examples/numpy_forcefield.py; - AssembledRigidRigidMapping autoresize; - geometric stiffness in python mappings; - insertMergeRigid is coherent with solid tags usage; - CompliantPseudoStaticSolver: avoiding an unnecessary propagation when the stopping criterion is the nb of iterations.; - visualization in DifferenceFromTargetMapping; - Frame.py: adding a function to force quaternion normalization (to avoid numerical drift); - added SimpleAnimationLoop; - adding RigidRestJointMapping to compute a joint between a rigid body's current position and its rest position.; - large compliances are considered as null stiffnesses; - Offset default to isMechanical=True; - python quaternion log; - added nlnscg acceleration; - pure python constraints; - .inl for python mappings; - adding Addition[Multi]Mapping; - implementing AssembledMultiMapping::applyDJT; - adding DotProduct[Multi]Mapping (with tests); - adding NormalizationMapping to map a 3d vector to its normalization; - adding ConstantAssembled[Multi]Mapping; - adding SafeDistanceMapping: a distance mapping that becomes a difference mapping for too small distances.; - adding SafeDistanceFromTargetMapping; - using the new SofaPython API; - SafeDistanceFromTargetMapping can now be ""safe"" by giving the edge directions when they are known; - adding the SofaCompliant python module (first module created outside of SofaPython!); - adding DotProductFromTargetMapping (with test); - adding RigidJointFromTargetMapping and RigidJointFromWorldFrameMapping; - add of complementary API to create deformable articulated systems; - adding NegativeUnilateralConstraint to guarantee negativeness; - adding Penalt",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:354128,log,log,354128,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,omponentAll] FIX build with disabled dependencies [#1940]( https://github.com/sofa-framework/sofa/pull/1940 ); - [SofaOpenCL] Fix compilation [#1795]( https://github.com/sofa-framework/sofa/pull/1795 ); - [SofaOpenCL] Remove use of deleted functions [#1880]( https://github.com/sofa-framework/sofa/pull/1880 ); - [SofaPardisoSolver] Fix plugin and add example [#1830]( https://github.com/sofa-framework/sofa/pull/1830 ); - [SofaSphFluid] Fix ParticleSink init and refresh all examples. [#2026]( https://github.com/sofa-framework/sofa/pull/2026 ); - [Tutorials] Resurrect tutorials projects [#2024]( https://github.com/sofa-framework/sofa/pull/2024 ); - [VolumetricRendering] Fix compilation due to removal of params [#1869]( https://github.com/sofa-framework/sofa/pull/1869 ); - [examples] Add missing RequiredPlugin [#1895]( https://github.com/sofa-framework/sofa/pull/1895 ); - [examples] FIX scene name for Regression_test [#1881]( https://github.com/sofa-framework/sofa/pull/1881 ); - [examples] Fix or disable scene tests [#1919]( https://github.com/sofa-framework/sofa/pull/1919 ); - [examples] Fix warnings in Pendulum tutorial [#2055]( https://github.com/sofa-framework/sofa/pull/2055 ); - [examples] Scenes with build_lcp [#2110]( https://github.com/sofa-framework/sofa/pull/2110 ); - [image] Fix wrong condition [#2083]( https://github.com/sofa-framework/sofa/pull/2083 ); - [plugins] Disable old python2 examples [#2025]( https://github.com/sofa-framework/sofa/pull/2025 ); - [runSofa/Modules] Fix various problems with Sofa.GL [#1743]( https://github.com/sofa-framework/sofa/pull/1743 ). **Examples / Scenes**; - [scenes] Fix (new?) failing scenes on the CI [#1798]( https://github.com/sofa-framework/sofa/pull/1798 ). ### Cleanings; **Architecture**; - [CMake] CLEAN old metapackage usage [#1883]( https://github.com/sofa-framework/sofa/pull/1883 ); - [CMake] CLEAN option SOFA_BUILD_WITH_PCH_ENABLED [#1755]( https://github.com/sofa-framework/sofa/pull/1755 ); - [CMake] CLEAN/FIX deprec,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:194396,test,tests,194396,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,onsole.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingCubeUtility.cpp; ${SRC_ROOT}/NameDecoder.cpp; ${SRC_ROOT}/OptionsGroup.cpp; ${SRC_ROOT}/ScopedAdvancedTimer.cpp; ${SRC_ROOT}/Polynomial_LD.cpp; ${SRC_ROOT}/RandomGenerator.cpp; ${SRC_ROOT}/StringUtils.cpp; ${SRC_ROOT}/TagFactory.cpp; ${SRC_ROOT}/TriangleOctree.cpp; ${SRC_ROOT}/Utils.cpp; ${SRC_ROOT}/decompose.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/io/BaseFileAccess.cpp; ${SRC_ROOT}/io/FileAccess.cpp; ${SRC_ROOT}/io/File.cpp; ${SRC_ROOT}/io/Image.cpp; ${SRC_ROOT}/io/ImageDDS.cpp; ${SRC_ROOT}/io/Ima,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:3506,log,logging,3506,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,"opying lib [#1347]( https://github.com/sofa-framework/sofa/pull/1347 ); - [extlibs/gtest] Add character test in gtest paramName to allow dash character [#1265]( https://github.com/sofa-framework/sofa/pull/1265 ). **Modules**; - [All] Clean warnings for option config, again [#1339]( https://github.com/sofa-framework/sofa/pull/1339 ); - [All] Fix SOFA_LIBSUFFIX used in Debug by PluginManager [#1313]( https://github.com/sofa-framework/sofa/pull/1313 ); - [All] Overridden 'canCreate' methods should always log an error message when they fail [#1294]( https://github.com/sofa-framework/sofa/pull/1294 ); - **[SofaBaseTopology]** Fix GridTopology edge computation [#1323]( https://github.com/sofa-framework/sofa/pull/1323 ); - **[SofaBaseTopology]**[SofaExporter] Fix failing tests due to changes in topology [#1335]( https://github.com/sofa-framework/sofa/pull/1335 ); - [SofaConstraint] Fix test further to #1369 [#1386]( https://github.com/sofa-framework/sofa/pull/1386 ); - **[SofaEigen2Solver]** Fix CMake test on the version of Eigen [#1416]( https://github.com/sofa-framework/sofa/pull/1416 ); - **[SofaEngine]** Fix engine unit tests [#1280]( https://github.com/sofa-framework/sofa/pull/1280 ); - **[SofaEngine]** Fix Engine_test [#1338]( https://github.com/sofa-framework/sofa/pull/1338 ); - **[SofaFramework]** Windows/VS: Remove warnings flags from definitions [#1368]( https://github.com/sofa-framework/sofa/pull/1368 ); - [SofaGuiQt] Fix compilation for SOFA_DUMP_VISITOR_INFO [#1415]( https://github.com/sofa-framework/sofa/pull/1415 ); - [SofaGuiQt] Fix node graph [#1424]( https://github.com/sofa-framework/sofa/pull/1424 ); - [SofaHeadlessRecorder] Update headless recorder to use the new ffmpeg recorder [#1396]( https://github.com/sofa-framework/sofa/pull/1396 ); - **[SofaHelper]** AdvancedTimer wasn't using the good timer ids for the label assignments [#1244]( https://github.com/sofa-framework/sofa/pull/1244 ); - **[SofaHelper]** Fix unloading with PluginManager [#1274]( https:",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:234657,test,test,234657,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,or types [#3902](https://github.com/sofa-framework/sofa/pull/3902); - [Helper] Improve text message for users in ComponentChange [#3913](https://github.com/sofa-framework/sofa/pull/3913); - [all] Minor clean of types [#3915](https://github.com/sofa-framework/sofa/pull/3915); - [examples] Remove example for MechanicalMatrixMapper [#3919](https://github.com/sofa-framework/sofa/pull/3919); - [MechanicalLoad] Replace doUpdateInternal by callback: ConstantFF [#3924](https://github.com/sofa-framework/sofa/pull/3924); - [FEM.Elastic] Implement buildStiffnessMatrix for FastTetrahedralCorotationalForceField [#3929](https://github.com/sofa-framework/sofa/pull/3929); - [all] Cosmetic: apply nested namespaces style [#3932](https://github.com/sofa-framework/sofa/pull/3932); - [Helper] Properly deprecate an already deprecated function [#3933](https://github.com/sofa-framework/sofa/pull/3933); - [all] Make local variables const [#3937](https://github.com/sofa-framework/sofa/pull/3937); - [Tests] Properly remove exported files [#3942](https://github.com/sofa-framework/sofa/pull/3942); - [all] Remove few lines of code that do nothing [#3946](https://github.com/sofa-framework/sofa/pull/3946); - [all] Implement empty buildDampingMatrix [#3948](https://github.com/sofa-framework/sofa/pull/3948); - [IO.Mesh] More debug info in the error message in MeshSTLLoader [#3949](https://github.com/sofa-framework/sofa/pull/3949); - [Sofa.Simulation] Remove Node::bwdInit [#3954](https://github.com/sofa-framework/sofa/pull/3954); - [Mapping/tests] Remove dependency on SceneCreator [#3955](https://github.com/sofa-framework/sofa/pull/3955); - [Simulation.Core] Deprecate unused classes *VisitorScheduler [#3957](https://github.com/sofa-framework/sofa/pull/3957); - [Helper.System] Introduce function append for paths [#3961](https://github.com/sofa-framework/sofa/pull/3961); - [Project] Start dev phase v23.12 [#3963](https://github.com/sofa-framework/sofa/pull/3963); - [all] Minor clean on indentation and ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:42238,Test,Tests,42238,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Tests']
Testability,ork/sofa/pull/4432); - [Helper] Fix new[]/delete mismatch [#4447](https://github.com/sofa-framework/sofa/pull/4447); - [CMake] Fix SOFA install [#4451](https://github.com/sofa-framework/sofa/pull/4451); - [GitHub] Fix action using github.context [#4456](https://github.com/sofa-framework/sofa/pull/4456); - [Helper] PluginManager: Check symbol (real) location and avoid calling wrong entrypoint (Mac/Linux) [#4466](https://github.com/sofa-framework/sofa/pull/4466); - [GitHUb] Fix actions using cron condition [#4468](https://github.com/sofa-framework/sofa/pull/4468); - [GitHub] Fix PR messages not properly sent [#4475](https://github.com/sofa-framework/sofa/pull/4475); - [GitHub] Use finally pull_request_target [#4476](https://github.com/sofa-framework/sofa/pull/4476); - [SofaCUDA] Fix spatial grid compilation with double [#4478](https://github.com/sofa-framework/sofa/pull/4478); - [image] Fix compilation on Windows [#4484](https://github.com/sofa-framework/sofa/pull/4484); - [Testing] Fix installation of gtest headers [#4489](https://github.com/sofa-framework/sofa/pull/4489); - [Helper] PluginManager Fix test in debug [#4491](https://github.com/sofa-framework/sofa/pull/4491); - [Topology] Fix method isQuadDeulaunayOriented and its use in splitAlongPath [#4494](https://github.com/sofa-framework/sofa/pull/4494); - [GitHub] Fix review request Discord msg [#4502](https://github.com/sofa-framework/sofa/pull/4502); - [Simulation.Core] RequiredPlugin: Avoid calling loadPlugin() twice on start-up [#4509](https://github.com/sofa-framework/sofa/pull/4509); - [Share] Remove DefaultCollisionGroupManager in the default scenes [#4521](https://github.com/sofa-framework/sofa/pull/4521); - [all] Fix some warnings [#4529](https://github.com/sofa-framework/sofa/pull/4529); - [GitHub] Fix GH Discussions Announcements for Discord [#4530](https://github.com/sofa-framework/sofa/pull/4530); - [Simulation.Core] Make TSAN pass for caduceus [#4535](https://github.com/sofa-framework/sofa/pull/4535),MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:7450,Test,Testing,7450,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Testing']
Testability,"ormVelocityDampingForceField.inl; ). set(SOURCE_FILES; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/ConicalForceField.cpp; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/ConstantForceField.cpp; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/DiagonalVelocityDampingForceField.cpp; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/EdgePressureForceField.cpp; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/EllipsoidForceField.cpp; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/InteractionEllipsoidForceField.cpp; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/LinearForceField.cpp; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/OscillatingTorsionPressureForceField.cpp; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/PlaneForceField.cpp; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/QuadPressureForceField.cpp; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/SphereForceField.cpp; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/SurfacePressureForceField.cpp; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/TaitSurfacePressureForceField.cpp; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/TorsionForceField.cpp; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/TrianglePressureForceField.cpp; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/UniformVelocityDampingForceField.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_MECHANICALLOAD_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_MECHANICALLOAD_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/MechanicalLoad/CMakeLists.txt:4170,Test,Tests,4170,Sofa/Component/MechanicalLoad/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/MechanicalLoad/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,ort for BaseData in Link.h [#1503]( https://github.com/sofa-framework/sofa/pull/1503 ); - **[SofaKernel]** Remove un-needed StringUtil.h in Base.h [#1519]( https://github.com/sofa-framework/sofa/pull/1519 ); - **[SofaKernel]** Remove un-needed class reflection system. [#1541]( https://github.com/sofa-framework/sofa/pull/1541 ); - [SofaLoader] Use references in Meshloader [#1627]( https://github.com/sofa-framework/sofa/pull/1627 ); - [modules] Minor fixes [#1441]( https://github.com/sofa-framework/sofa/pull/1441 ). **Plugins / Projects**; - [plugins] Reactivate SofaPython3 [#1574]( https://github.com/sofa-framework/sofa/pull/1574 ); - [Geomagic] Update demo scenes to use direct solvers. [#1533]( https://github.com/sofa-framework/sofa/pull/1533 ); - [InvertibleFVM] Externalize the plugin [#1443]( https://github.com/sofa-framework/sofa/pull/1443 ). ____________________________________________________________. ## [v20.06]( https://github.com/sofa-framework/sofa/tree/v20.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v19.12...v20.06 ). ### Breaking. **Architecture**; - [All] CMake and includes massive clean [#1397]( https://github.com/sofa-framework/sofa/pull/1397 ); - [CMake] Remove the use of an internal Eigen3 version and instead use the one installed on the system. [#1281]( https://github.com/sofa-framework/sofa/pull/1281 ); - [CMake] Remove Collections [#1314]( https://github.com/sofa-framework/sofa/pull/1314 ); - [Modularization] SofaNonUniformFem + SofaAdvanced removal [#1344]( https://github.com/sofa-framework/sofa/pull/1344 ); - [Modularization] SofaValidation [#1302]( https://github.com/sofa-framework/sofa/pull/1302 ). **Modules**; - [All] BaseClass reflection refactoring [#1283]( https://github.com/sofa-framework/sofa/pull/1283 ); - [All] Remove Aspects from Sofa [#1269]( https://github.com/sofa-framework/sofa/pull/1269 ); - [All] Remove compilation warnings related to collision models [#1301]( https://github.com/sofa-framework/sofa/pull/1301,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:229093,log,log,229093,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,ouput every CTRL actions in the console [#1130]( https://github.com/sofa-framework/sofa/pull/1130 ). **Plugins / Projects**; - [CGALPlugin] Some cleanups to CylinderMesh [#1124]( https://github.com/sofa-framework/sofa/pull/1124 ); - [CGal plugin][CImgPlugin] Image data moved from Image/ to CImgPlugin/ [#1104]( https://github.com/sofa-framework/sofa/pull/1104 ); - [Geomagic] Reorder plugin files for better modularization [#1208]( https://github.com/sofa-framework/sofa/pull/1208 ); - [ManifoldTopologies] Undust and clean [#1156]( https://github.com/sofa-framework/sofa/pull/1156 ). **Examples / Scenes**; - [Scenes] Clean some alias warnings [#1098]( https://github.com/sofa-framework/sofa/pull/1098 ); - [scenes] Change OglModel to use a MeshObjLoader instead of loading the mesh internally. [#1096]( https://github.com/sofa-framework/sofa/pull/1096 ). ____________________________________________________________. ## [v19.06]( https://github.com/sofa-framework/sofa/tree/v19.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v18.12...v19.06 ). ### Breaking. **Modules**; - [All] Run clang-tidy and update license headers [#899]( https://github.com/sofa-framework/sofa/pull/899 ); - [All] Refactor the loading of Xsp files. [#918]( https://github.com/sofa-framework/sofa/pull/918 ); - **[SofaBaseTopology]** Change triangles orientation in tetrahedron [#878]( https://github.com/sofa-framework/sofa/pull/878 ); - **[SofaBaseTopology]** Major Change in Topology Containers [#967]( https://github.com/sofa-framework/sofa/pull/967 ); - **[SofaKernel]** Refactor the MutationListener [#917]( https://github.com/sofa-framework/sofa/pull/917 ); - **[SofaKernel]** Some Topology cleaning... [#866]( https://github.com/sofa-framework/sofa/pull/866 ); - [SofaOpenglVisual] Fix ogl perf problem [#1069]( https://github.com/sofa-framework/sofa/pull/1069 ). ### Modularizations. - [SofaExporter] Modularize (+minor dependency cleaning) [#915]( https://github.com/sofa-framework/sofa/pull/915 ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:257326,log,log,257326,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,"parsing; - MeshToImage: fix bresenham, be sure dmax>=1; - fix resampling of projection images, and marching cubes default parameter; - fix bug in mhd file loader; - fix rasterization when using vertex colors. ### Cleanings. - warnings were removed; - dead branches were removed; - the ‘using’ directives were removed in header files; - the repository sofa_root/modules/sofa/components has been cleaned (deprecated components removed); - clean many SOFA examples; - removing ""using helper::vector"" from VecTypes.h; - SofaQtGui: Remove qt3 remnants in ui files. - Minor clean; - clean SofaBaseCollision of OpenGL dependency; - cleaning Material::setColor; - Base: write sout as info (rather than warnings); - clean and fix RestShapeSpringsForceField draw functions; - Remove useless tests, optimize and fix potential bugs; - cleanup, precompute barycenters for tetra and hexa; - SofaBaseVisual: clean up and make consistent BaseCamera's code: clean QtViewer projection (remove OpenGL functions); - SofaBaseVisual: clean and fix BaseCamera Z clipping; - SofaOpenGLVisual: cleanup Lights (remove Glu calls and set matrices as data) + Fix typo in Camera; - quaternion to euler: not need for the hack since atan2 is used. - [SofaPython]; - clean examples; - clean the hard-binding example; - clean noPicking visitor. - [Flexible]; - remove unecessary data for Gauss points visualization; - some clean regarding openmp parallelisation; - clean metaFF; - remove unecessary apply in reinit; - clean FlexibleCorotationalMeshFEMForceField. - [Compliant]; - clean RigidJoint{Multi}Mapping. ____________________________________________________________. ## [v15.12]( https://github.com/sofa-framework/sofa/tree/v15.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v15.09...v15.12 ). ____________________________________________________________. ## [v15.09]( https://github.com/sofa-framework/sofa/tree/v15.09 ). [Full log]( https://github.com/sofa-framework/sofa/compare/release-v15.12...v15.09 ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:361636,log,log,361636,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['log'],['log']
Testability,ples] Use MeshMatrixMass in hyperelastic examples [#4687](https://github.com/sofa-framework/sofa/pull/4687). ### Bug Fixes. - [Geometry] Update method intersectionWithEdge signature and redirect all methods to it in EdgeSetGeometryAlgorithms [#4194](https://github.com/sofa-framework/sofa/pull/4194); - [SofaSPHFluid] Add option in ParticleSource to add/remove random values in the particles generation. Remove noise for CI scenes [#4316](https://github.com/sofa-framework/sofa/pull/4316); - [ODESolver] Fix compilation with SOFA_NO_VMULTIOP [#4325](https://github.com/sofa-framework/sofa/pull/4325); - [Topology.Mapping] Edge2QuadTopologicalMapping: use Links for required QuadSet components [#4361](https://github.com/sofa-framework/sofa/pull/4361); - [MultiThreading] Fix failing test on ParallelImplementationsRegistry [#4392](https://github.com/sofa-framework/sofa/pull/4392); - [Helper] Fix Colormap when using HSV to RGB [#4408](https://github.com/sofa-framework/sofa/pull/4408); - [All] Fix subplugin regression tests [#4420](https://github.com/sofa-framework/sofa/pull/4420); - [sofaInfo] Fix compilation and behavior [#4422](https://github.com/sofa-framework/sofa/pull/4422); - [Core] Call super init() in MultiMapping and Multi2Mapping [#4432](https://github.com/sofa-framework/sofa/pull/4432); - [Helper] Fix new[]/delete mismatch [#4447](https://github.com/sofa-framework/sofa/pull/4447); - [CMake] Fix SOFA install [#4451](https://github.com/sofa-framework/sofa/pull/4451); - [GitHub] Fix action using github.context [#4456](https://github.com/sofa-framework/sofa/pull/4456); - [Helper] PluginManager: Check symbol (real) location and avoid calling wrong entrypoint (Mac/Linux) [#4466](https://github.com/sofa-framework/sofa/pull/4466); - [GitHUb] Fix actions using cron condition [#4468](https://github.com/sofa-framework/sofa/pull/4468); - [GitHub] Fix PR messages not properly sent [#4475](https://github.com/sofa-framework/sofa/pull/4475); - [GitHub] Use finally pull_request_target,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:6198,test,tests,6198,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"plicated registration in the factory [#4709](https://github.com/sofa-framework/sofa/pull/4709); - [Contact] Fix crash if collision models are not provided [#4710](https://github.com/sofa-framework/sofa/pull/4710); - [Engine.Analyze] Fix initialization of distance type [#4711](https://github.com/sofa-framework/sofa/pull/4711); - [SceneUtility] Initialize pointer to nullptr [#4712](https://github.com/sofa-framework/sofa/pull/4712); - [SofaCUDA] extern template instantiations [#4714](https://github.com/sofa-framework/sofa/pull/4714); - [image_gui] Make it a cleaner SOFA module [#4719](https://github.com/sofa-framework/sofa/pull/4719); - [SensableEmulation] Fix module name [#4721](https://github.com/sofa-framework/sofa/pull/4721); - [tests] Adapt code to any Eigen version [#4724](https://github.com/sofa-framework/sofa/pull/4724); - [image,Mapping.NonLinear] Properly includes config.h before ObjectFactory.h [#4726](https://github.com/sofa-framework/sofa/pull/4726); - [tests] Fix and test value type string of topology primitives [#4732](https://github.com/sofa-framework/sofa/pull/4732); - [MultiThreading] Fix module name in BeamLinearMapping_mt [#4740](https://github.com/sofa-framework/sofa/pull/4740); - [image_gui] Fix module name [#4741](https://github.com/sofa-framework/sofa/pull/4741); - [Analyze] Fix typos [#4742](https://github.com/sofa-framework/sofa/pull/4742); - [PlayBack] Add option to set period in the WriteStateCreator visitor [#4744](https://github.com/sofa-framework/sofa/pull/4744); - [Core] Missing closing brace [#4753](https://github.com/sofa-framework/sofa/pull/4753); - [Helper] Fix dl open when path are not canonical [#4754](https://github.com/sofa-framework/sofa/pull/4754). ### Cleaning. - [MechanicalLoad] Add buildStiffnessMatrix to TrianglePressureForceField [#4294](https://github.com/sofa-framework/sofa/pull/4294); - [Simulation.Core] Remove usage of ill-used nodeData in MechanicalGetNonDiagonalMassesCountVisitor and MechanicalVDotVisitor [#4328](http",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:11177,test,tests,11177,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['test'],"['test', 'tests']"
Testability,"pp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/CapsuleContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/OBBContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED) # for performers. add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision Sofa.GUI.Component). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(COLLISIONOBBCAPSULE_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(COLLISIONOBBCAPSULE_BUILD_TESTS); enable_testing(); add_subdirectory(CollisionOBBCapsule_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:4431,Test,Tests,4431,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,3,"['Test', 'test']","['Tests', 'tests']"
Testability,pp; ${SRC_ROOT}/io/SphereLoader.cpp; ${SRC_ROOT}/io/STBImage.cpp; ${SRC_ROOT}/io/TriangleLoader.cpp; ${SRC_ROOT}/io/XspLoader.cpp; ${SRC_ROOT}/kdTree.cpp; ${SRC_ROOT}/system/DynamicLibrary.cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.cpp); endif(). sofa_find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Topology REQUIRED). # LI,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:5640,log,logging,5640,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,ps://github.com/sofa-framework/sofa/pull/1905 ); - **[SofaSimulationCore]** Remove ClassSystem.h [#1844]( https://github.com/sofa-framework/sofa/pull/1844 ); - **[SofaSimulationCore]** Add tons of details in Euler solver [#2163]( https://github.com/sofa-framework/sofa/pull/2163 ); - **[SofaSimulationCore]** Clean AnimateVisitor [#2194]( https://github.com/sofa-framework/sofa/pull/2194 ); - **[SofaSimulation]** Convert tests to Sofa.Testing [#2154]( https://github.com/sofa-framework/sofa/pull/2154 ); - [SofaSparseSolver] Clean useless dependencies [#2012]( https://github.com/sofa-framework/sofa/pull/2012 ); - [SofaUserInteraction] Minor cleaning of RayTraceDetection [#2009]( https://github.com/sofa-framework/sofa/pull/2009 ); - [SofaUserInteraction] Remove AddFramePerformer as it is not compiled [#1970]( https://github.com/sofa-framework/sofa/pull/1970 ); - [SofaUserInteraction] Deprecate RayTraceDetection [#2212]( https://github.com/sofa-framework/sofa/pull/2212 ); - [Tests] Move tests in their (new) correct locations [#1998]( https://github.com/sofa-framework/sofa/pull/1998 ); - [Tests] Replace sofa::helper::testing by sofa::testing [#2143]( https://github.com/sofa-framework/sofa/pull/2143 ). **Plugins / Projects**; - [CGAL] Remove #pragma once in .cpp files [#2202]( https://github.com/sofa-framework/sofa/pull/2202 ); - [Geomagic] Add macro HAS_OPENHAPTICS to know if library is present [#2115]( https://github.com/sofa-framework/sofa/pull/2115 ); - [Geomagic] Duplicated includes #2070 [#2072]( https://github.com/sofa-framework/sofa/pull/2072 ); - [HeadlessRecorder] CLEAN Headless recorder [#2058]( https://github.com/sofa-framework/sofa/pull/2058 ); - [LMConstraint] Move LMConstraint components in a new plugin [#1659]( https://github.com/sofa-framework/sofa/pull/1659 ); - [LMConstraint] Move examples in LMConstraint plugin [#1778]( https://github.com/sofa-framework/sofa/pull/1778 ); - [MultiThreading] Removes useless classid in AnimationLoopParalleleScheduler.cpp [#19,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:206166,Test,Tests,206166,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Test', 'test']","['Tests', 'tests']"
Testability,ps://github.com/sofa-framework/sofa/pull/3063) ; - [git] Add various temporary files to .gitignore [#3344](https://github.com/sofa-framework/sofa/pull/3344) . ### Refactoring. **Architecture**; - [Sofa.Core] Move operator<<(Data&) into operator<<(BaseData). [#3300](https://github.com/sofa-framework/sofa/pull/3300) . **Modules**; - [Lagrangian.Solver] Move GenericConstraintProblem in its own files [#3396](https://github.com/sofa-framework/sofa/pull/3396) . ## [v22.06.00]( https://github.com/sofa-framework/sofa/tree/v22.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.12.00...v22.06.00 ). ### SOFA-NG. **Architecture**; - [SofaNG] Dispatch SofaHaptics and SofaValidation [#3041]( https://github.com/sofa-framework/sofa/pull/3041 ); - [SofaNG] Dispatch useful SofaMiscCollision components into S.C.Collision [#2896]( https://github.com/sofa-framework/sofa/pull/2896 ); - [SofaNG] Re-organize Framework [#2876]( https://github.com/sofa-framework/sofa/pull/2876 ); - [SofaNG] Re-organize unit tests [#2873]( https://github.com/sofa-framework/sofa/pull/2873 ); - [SofaNG] Setup AnimationLoop [#2797]( https://github.com/sofa-framework/sofa/pull/2797 ); - [SofaNG] Setup Collision [#2813]( https://github.com/sofa-framework/sofa/pull/2813 ); - [SofaNG] Setup Constraint [#2790]( https://github.com/sofa-framework/sofa/pull/2790 ); - [SofaNG] Setup Diffusion [#2753]( https://github.com/sofa-framework/sofa/pull/2753 ); - [SofaNG] Setup Engine [#2812]( https://github.com/sofa-framework/sofa/pull/2812 ); - [SofaNG] Setup GUI [#2895]( https://github.com/sofa-framework/sofa/pull/2895 ); - [SofaNG] Setup IO [#2582]( https://github.com/sofa-framework/sofa/pull/2582 ); - [SofaNG] Setup LinearSolver [#2717]( https://github.com/sofa-framework/sofa/pull/2717 ); - [SofaNG] Setup Mapping [#2635]( https://github.com/sofa-framework/sofa/pull/2635 ); - [SofaNG] Setup Mass [#2752]( https://github.com/sofa-framework/sofa/pull/2752 ); - [SofaNG] Setup MechanicalLoad [#2783]( https://gi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:92340,test,tests,92340,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,pull/1788 ); - [SofaDistanceGrid] Regroup miniFlowVR-related things [#1616]( https://github.com/sofa-framework/sofa/pull/1616 ); - [SofaPython] CLEAN PythonEnvironment info messages [#1835]( https://github.com/sofa-framework/sofa/pull/1835 ); - [THMPGSpatialHashing] Add a readme file and basic information [#2007]( https://github.com/sofa-framework/sofa/pull/2007 ); - [projects] remove unused variable [#1747]( https://github.com/sofa-framework/sofa/pull/1747 ). **Examples / Scenes**; - [examples] Clean warning scene examples [#1802]( https://github.com/sofa-framework/sofa/pull/1802 ); - [scenes] Update tetrahedron and tetrahedralCorotational FEM scenes [#2172]( https://github.com/sofa-framework/sofa/pull/2172 ). **Scripts / Tools**; - [tools] CLEAN logs for macos-postinstall-fixup [#2120]( https://github.com/sofa-framework/sofa/pull/2120 ). ____________________________________________________________. ## [v20.12.03]( https://github.com/sofa-framework/sofa/tree/v20.12.03 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.02...v20.12.03 ). ### Bug Fixes; **Architecture**; - [CMake] Set CMake install default component [#2037]( https://github.com/sofa-framework/sofa/pull/2037 ). **Modules**; - [SofaBoundaryCondition] Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - [SofaGuiQt] Fix Expand node [#2069]( https://github.com/sofa-framework/sofa/pull/2069 ); - **[SofaHelper]** Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - [SofaMiscCollision] Fix config.in cmake file for export [#2052]( https://github.com/sofa-framework/sofa/pull/2052 ); - **[SofaSimulationCore]** Broken URL [#2011]( https://github.com/sofa-framework/sofa/pull/2011 ). **Plugins / Projects**; - [Geomagic] Fix Geomagic plugin compilation [#2033]( https://github.com/sofa-framework/sofa/pull/2033 ). ____________________________________________________________. ## [v20.12.02]( https://github.com/sofa-framework/sofa/tree/v20.12.0,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:208350,log,log,208350,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,"pull/714 ); - **[SofaFramework]** Improve external dirs fetching in SofaMacros [#759]( https://github.com/sofa-framework/sofa/pull/759 ); - [SofaGeneralAnimationLoop] Improvement on MMMapper [#772]( https://github.com/sofa-framework/sofa/pull/772 ); - **[SofaHelper]** EDIT FileSystem and FileRepository for regression tests [#830]( https://github.com/sofa-framework/sofa/pull/830 ); - **[SofaKernel]** Improve Displayflags [#671]( https://github.com/sofa-framework/sofa/pull/671 ); - **[SofaKernel]** Add a ""sofa_add_module"" in SofaMacro.cmake [#732]( https://github.com/sofa-framework/sofa/pull/732 ); - **[SofaKernel]** use string in base object description [#862]( https://github.com/sofa-framework/sofa/pull/862 ); - [SofaMeshCollision] TriangleModel optimization when topology changes occur [#839]( https://github.com/sofa-framework/sofa/pull/839 ); - [SofaSparseSolver] ADD saveMatrixToFile to SparseLDLSolver [#845]( https://github.com/sofa-framework/sofa/pull/845 ); - [SofaTest] ADD a PrintTo method so test failure shows human readable informations. [#730]( https://github.com/sofa-framework/sofa/pull/730 ); - [VisualModel] Improve the messages when loading mesh inside VisualModel [#778]( https://github.com/sofa-framework/sofa/pull/778 ); - [WriteState] minor fix with the time attribute, default values [#776]( https://github.com/sofa-framework/sofa/pull/776 ). **Plugins / Projects**; - [Geomagic] ADD an inputForceFeedback data in Geomagic [#648]( https://github.com/sofa-framework/sofa/pull/648 ); - [Geomagic] Fix dll export and some enhancements [#786]( https://github.com/sofa-framework/sofa/pull/786 ); - [MultiThreading] removed the boost thread dependency [#701]( https://github.com/sofa-framework/sofa/pull/701 ); - [MultiThreading] New components and Task scheduler classes refactoring [#745]( https://github.com/sofa-framework/sofa/pull/745 ); - [MultiThreading] Add Image plugin Data types in DataExchange component [#770]( https://github.com/sofa-framework/sofa/pull/770 ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:281268,test,test,281268,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,"python API; - DeformationMapping: print a warning if a child particle has no parent; - adding HEML implementation of St Venant-Kirchhoff materials (for tetrahedra).; - if correct weights are given in mapping as input data, use it (even if a shapefunction is found); - use sout for logging; - compute tangents for VisualModel loaded using loadVisual python function; - transformEngine for Affine frames. - [Compliant]; - sml: export of meshes; - sml: the solids tags to be simulated as rigids are gathered in a set(); - sml: geometricStiffness option; - sml: using logger; - implementing compliance unassembled API; - in the python API, joints can be created in compliance or not; - API: write a addSpring() in GenericRigidJoint, reuse it in children classes where possible; - API: simplify usage of jointCompliance specification by tag; - API: relative offset position is given to the AssembledRigidRigidMapping, and then computed at init into the MO; - API: modifying the API to move an Offset; - API: adding Offset::moveOffset to apply a rigid transformation to an offset (in its local frame); - API: new parameter to add non-mechanical Offsets and MappedPoints; - API: collision mesh and visual model can be added to a Rigid Offset; - adding an automatic execution of a scene based on a sml description; - Constraint: adding a typeid for faster Constraint type comparisons; - adding short name to create a ConstantCompliantPseudoStaticSolver; - using tag on joints in a generic way, set their compliance / isCompliance value; - added machinery to map data to numpy arrays, see example/numpy_data.py; - added easy pure python mappings, see examples/numpy_mapping.py; - added pure python forcefields, see examples/numpy_forcefield.py; - AssembledRigidRigidMapping autoresize; - geometric stiffness in python mappings; - insertMergeRigid is coherent with solid tags usage; - CompliantPseudoStaticSolver: avoiding an unnecessary propagation when the stopping criterion is the nb of iterations.; - visua",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:352300,log,logger,352300,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['logger']
Testability,r more clarity [#2534]( https://github.com/sofa-framework/sofa/pull/2534 ). **Examples / Scenes**; - [examples] Add handleDynamicTopology in OglModel with dynamic texcoords [#2445]( https://github.com/sofa-framework/sofa/pull/2445 ); - [examples] Clean linear solver scenes [#2494]( https://github.com/sofa-framework/sofa/pull/2494 ); - [examples] Limit GlobalSystemMatrixExporter.scn to 1 iteration [#2328]( https://github.com/sofa-framework/sofa/pull/2328 ); - [examples] Make scene resolution independent + doc [#2361]( https://github.com/sofa-framework/sofa/pull/2361 ); - [examples] add a warning comment in the scene header [#2470]( https://github.com/sofa-framework/sofa/pull/2470 ); - [scenes] Replace BruteForceDetection by BruteForceNarrowPhase+BVHNarrowPhase [#2232]( https://github.com/sofa-framework/sofa/pull/2232 ). **Scripts / Tools**. ____________________________________________________________. ## [v21.06.03]( https://github.com/sofa-framework/sofa/tree/v21.06.03 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.02...v21.06.03 ). ### Bug Fixes; **Architecture**; - [CMake][modules] FIX out-of-tree builds [#2453]( https://github.com/sofa-framework/sofa/pull/2453 ); - [All] Update IDE directory for targets [#2239]( https://github.com/sofa-framework/sofa/pull/2239 ). **Modules**; - [SofaGeneralLoader] Make GridMeshCreator work again [#2473]( https://github.com/sofa-framework/sofa/pull/2473 ). ____________________________________________________________. ## [v21.06.02]( https://github.com/sofa-framework/sofa/tree/v21.06.02 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.01...v21.06.02 ). ### Bug Fixes; **Architecture**; - [CMake] Clean Sofa.Core CMakeLists + Add missing headers [#2444]( https://github.com/sofa-framework/sofa/pull/2444 ); - [SofaMeshCollision] Fix cmake generated config file [#2400]( https://github.com/sofa-framework/sofa/pull/2400 ). **Modules**; - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-fr,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:164238,log,log,164238,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,r/LinearSolverAccessor.cpp; ${SRC_ROOT}/behavior/Mass.cpp; ${SRC_ROOT}/behavior/MechanicalMatrix.cpp; ${SRC_ROOT}/behavior/MechanicalState.cpp; ${SRC_ROOT}/behavior/MixedInteractionConstraint.cpp; ${SRC_ROOT}/behavior/MixedInteractionForceField.cpp; ${SRC_ROOT}/behavior/MultiMatrixAccessor.cpp; ${SRC_ROOT}/behavior/OdeSolver.cpp; ${SRC_ROOT}/behavior/PairInteractionConstraint.cpp; ${SRC_ROOT}/behavior/PairInteractionForceField.cpp; ${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.cpp; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.cpp; ${SRC_ROOT}/behavior/SingleMatrixAccessor.cpp; ${SRC_ROOT}/behavior/fwd.cpp; ${SRC_ROOT}/collision/BroadPhaseDetection.cpp; ${SRC_ROOT}/collision/Contact.cpp; ${SRC_ROOT}/collision/Intersection.cpp; ${SRC_ROOT}/collision/NarrowPhaseDetection.cpp; ${SRC_ROOT}/collision/Pipeline.cpp; ${SRC_ROOT}/loader/BaseLoader.cpp; ${SRC_ROOT}/loader/MeshLoader.cpp; ${SRC_ROOT}/loader/SceneLoader.cpp; ${SRC_ROOT}/loader/VoxelLoader.cpp; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.cpp; ${SRC_ROOT}/objectmodel/AbstractDataLink.cpp; ${SRC_ROOT}/objectmodel/AspectPool.cpp; ${SRC_ROOT}/objectmodel/Base.cpp; ${SRC_ROOT}/objectmodel/BaseClass.cpp; ${SRC_ROOT}/objectmodel/BaseContext.cpp; ${SRC_ROOT}/objectmodel/BaseData.cpp; ${SRC_ROOT}/objectmodel/BaseLink.cpp; ${SRC_ROOT}/objectmodel/BaseNode.cpp; ${SRC_ROOT}/objectmodel/BaseObject.cpp; ${SRC_ROOT}/objectmodel/BaseObjectDescription.cpp; ${SRC_ROOT}/objectmodel/ClassInfo.cpp; ${SRC_ROOT}/objectmodel/ComponentState.cpp; ${SRC_ROOT}/objectmodel/ConfigurationSetting.cpp; ${SRC_ROOT}/objectmodel/Context.cpp; ${SRC_ROOT}/objectmodel/ContextObject.cpp; ${SRC_ROOT}/objectmodel/DDGNode.cpp; ${SRC_ROOT}/objectmodel/Data.cpp; ${SRC_ROOT}/objectmodel/DataCallback.cpp; ${SRC_ROOT}/objectmodel/DataContentValue.cpp; ${SRC_ROOT}/objectmodel/DataFileName.cpp; ${SRC_ROOT}/objectmodel/DataFileNameVector.cpp; ${SRC_ROOT}/objectmodel/DataLink.cpp; ${S,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:10146,log,logging,10146,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['log'],['logging']
Testability,"ramework/sofa/pull/2723 ); - [SofaGuiQt] Error handling when exporting graph [#2771]( https://github.com/sofa-framework/sofa/pull/2771 ); - [SofaGuiQt] Fix english spelling: AdvancedTimer instead of AdvanceTimer [#2816]( https://github.com/sofa-framework/sofa/pull/2816 ); - [SofaGuiQt] Modernize the 'qt::connect' to use the c++ syntax [#2943]( https://github.com/sofa-framework/sofa/pull/2943 ); - [SofaGuiQt] Remove sec unit from GUI [#2742]( https://github.com/sofa-framework/sofa/pull/2742 ); - [SofaGuiQt] Rename attributes to follow SOFA guidelines. [#2944]( https://github.com/sofa-framework/sofa/pull/2944 ); - [SofaKernel] fix shadow variable [#2791]( https://github.com/sofa-framework/sofa/pull/2791 ); - [SofaMiscCollision] Extract OBB/Capsule code into its own plugin [#2820]( https://github.com/sofa-framework/sofa/pull/2820 ); - [SofaMiscFEM] Clean FastTetrahedralCorotationalForceField and add extraData [#2569]( https://github.com/sofa-framework/sofa/pull/2569 ); - [SofaMiscForceField] Fix type conversion in tests [#2714]( https://github.com/sofa-framework/sofa/pull/2714 ); - [SofaRigid][SofaGeneralSimpleFem] Fix typos [#2947]( https://github.com/sofa-framework/sofa/pull/2947 ); - [SofaSimpleFEM_test] Add tests on Tetrahedron, CorotationalTetrahedral and FastTetrahedral FEM ForceField [#2842]( https://github.com/sofa-framework/sofa/pull/2842 ); - [SofaSimpleFem] Prefer usage of accessor in HexahedronFEMForceField [#2778]( https://github.com/sofa-framework/sofa/pull/2778 ); - [SofaSimulation] Remove DAGNodeMultiMappingElement [#2694]( https://github.com/sofa-framework/sofa/pull/2694 ); - [SofaSparseSolver] Disable matrix export in SparseLDLSolver [#2725]( https://github.com/sofa-framework/sofa/pull/2725 ); - [SofaSparseSolver] SparseLUSolver and SparseCholeskySolver support fill reducing permutation [#2788]( https://github.com/sofa-framework/sofa/pull/2788 ); - [SofaTest] Move last tests to Sofa.Component [#2996]( https://github.com/sofa-framework/sofa/pull/2996 );",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:128580,test,tests,128580,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"ramework/sofa/pull/457 ); - InterpolationController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - MechanicalStateControllerOmni [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - NodeToggleController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - RemovePrimitivePerformer [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - StartNavigationPerformer [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - SuturePointPerformer [#457]( https://github.com/sofa-framework/sofa/pull/457 ). ### Breaking. **Kernel modules**; - [All]; - issofa_visitors: Changing the way projective constraints are propagated in visitors [#216]( https://github.com/sofa-framework/sofa/pull/216 ); - [SofaDeformable]; - Change how rest shape is given in RestShapeSpringsForceField [#315]( https://github.com/sofa-framework/sofa/pull/315 ). **Other modules**; - [SofaHelper]; - Rewrite ArgumentParser [#513]( https://github.com/sofa-framework/sofa/pull/513 ); - [SofaValidation]; - ADD Monitor test [#312]( https://github.com/sofa-framework/sofa/pull/312 ). ### Improvements. **Kernel modules**; - [All]; - issofa_topology: Improvement, BugFix and Cleaning on Topology [#243]( https://github.com/sofa-framework/sofa/pull/243 ); - issofa_constraintsolving: improve constraints [#484]( https://github.com/sofa-framework/sofa/pull/484 ); - Improve File:line info in error message (for python and xml error reporting) [#314]( https://github.com/sofa-framework/sofa/pull/314 ); - [SofaDeformable]; - issofa_meshspringff [#497]( https://github.com/sofa-framework/sofa/pull/497 ); - issofa_springff [#498]( https://github.com/sofa-framework/sofa/pull/498 ); - [SofaHelper]; - add ability to use NoArgument for BaseCreator and Factory [#385]( https://github.com/sofa-framework/sofa/pull/385 ); - Remove legacy ImageBMP/ImagePNG and ImageQt [#424]( https://github.com/sofa-framework/sofa/pull/424 ); - Improve advanced timer [#468]( https://github.com/sofa-framework/sofa/pull/468 )",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:304771,test,test,304771,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,re]** Add option to call ODE::solve in parallel in SolveVisitor [#2135]( https://github.com/sofa-framework/sofa/pull/2135 ); - **[SofaSimulationCore]** Launch a new event when textures have been initialized. [#1832]( https://github.com/sofa-framework/sofa/pull/1832 ). **Plugins / Projects**; - [MultiThreading] Parallel BVH narrow phase [#2053]( https://github.com/sofa-framework/sofa/pull/2053 ); - [MultiThreading] Parallel brute force broad phase [#2038]( https://github.com/sofa-framework/sofa/pull/2038 ); - [Plugins] Add SofaGLFW GUI [#2062]( https://github.com/sofa-framework/sofa/pull/2062 ); - [SofaCUDA] Add more examples for liver scene and squareTissue [#2016]( https://github.com/sofa-framework/sofa/pull/2016 ). **Examples / Scenes**; - [Benchmark] Introduce benchmark on matrix assembly [#2208]( https://github.com/sofa-framework/sofa/pull/2208 ); - [examples] Improve BeamFEMForceField example [#2092]( https://github.com/sofa-framework/sofa/pull/2092 ); - [scenes] Add scenes to test several components during mesh removal [#2161]( https://github.com/sofa-framework/sofa/pull/2161 ). ### Bug Fixes; **Architecture**; - [CMake] FIX Debug build + more cleaning [#1891]( https://github.com/sofa-framework/sofa/pull/1891 ); - [CMake] FIX SofaFramework aliases [#2175]( https://github.com/sofa-framework/sofa/pull/2175 ); - [CMake] FIX header include tree [#1863]( https://github.com/sofa-framework/sofa/pull/1863 ); - [CMake] FIX resources and translations install on Windows [#1949]( https://github.com/sofa-framework/sofa/pull/1949 ); - [CMake] Set CMake install default component [#2037]( https://github.com/sofa-framework/sofa/pull/2037 ); - [CMake][tools] v20.12.00 changes [#1804]( https://github.com/sofa-framework/sofa/pull/1804 ). **Extlibs**; - [GTest] Fix with GCC11 [#2181]( https://github.com/sofa-framework/sofa/pull/2181 ). **Modules**; - [All] FIX build without SofaPython soft dependencies [#1829]( https://github.com/sofa-framework/sofa/pull/1829 ); - [All] FIX warnin,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:180775,test,test,180775,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,"ression for fallingBeamLagrangianCollision.scn [#4643](https://github.com/sofa-framework/sofa/pull/4643); - [Geomagic] Fix compilation. Replace Vector3 by Vec3 [#4661](https://github.com/sofa-framework/sofa/pull/4661); - [CollisionOBBCapsule] Fix duplicated registration in the factory [#4709](https://github.com/sofa-framework/sofa/pull/4709); - [Contact] Fix crash if collision models are not provided [#4710](https://github.com/sofa-framework/sofa/pull/4710); - [Engine.Analyze] Fix initialization of distance type [#4711](https://github.com/sofa-framework/sofa/pull/4711); - [SceneUtility] Initialize pointer to nullptr [#4712](https://github.com/sofa-framework/sofa/pull/4712); - [SofaCUDA] extern template instantiations [#4714](https://github.com/sofa-framework/sofa/pull/4714); - [image_gui] Make it a cleaner SOFA module [#4719](https://github.com/sofa-framework/sofa/pull/4719); - [SensableEmulation] Fix module name [#4721](https://github.com/sofa-framework/sofa/pull/4721); - [tests] Adapt code to any Eigen version [#4724](https://github.com/sofa-framework/sofa/pull/4724); - [image,Mapping.NonLinear] Properly includes config.h before ObjectFactory.h [#4726](https://github.com/sofa-framework/sofa/pull/4726); - [tests] Fix and test value type string of topology primitives [#4732](https://github.com/sofa-framework/sofa/pull/4732); - [MultiThreading] Fix module name in BeamLinearMapping_mt [#4740](https://github.com/sofa-framework/sofa/pull/4740); - [image_gui] Fix module name [#4741](https://github.com/sofa-framework/sofa/pull/4741); - [Analyze] Fix typos [#4742](https://github.com/sofa-framework/sofa/pull/4742); - [PlayBack] Add option to set period in the WriteStateCreator visitor [#4744](https://github.com/sofa-framework/sofa/pull/4744); - [Core] Missing closing brace [#4753](https://github.com/sofa-framework/sofa/pull/4753); - [Helper] Fix dl open when path are not canonical [#4754](https://github.com/sofa-framework/sofa/pull/4754). ### Cleaning. - [MechanicalLoad] Add",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:10939,test,tests,10939,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"rithms.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/PointSetTopologyContainer.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/PointSetTopologyModifier.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/QuadSetGeometryAlgorithms.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/QuadSetTopologyContainer.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/QuadSetTopologyModifier.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/TetrahedronSetGeometryAlgorithms.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/TetrahedronSetTopologyContainer.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/TetrahedronSetTopologyModifier.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/TriangleSetGeometryAlgorithms.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/TriangleSetTopologyContainer.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/TriangleSetTopologyModifier.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/DynamicSparseGridGeometryAlgorithms.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/DynamicSparseGridTopologyContainer.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/DynamicSparseGridTopologyModifier.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_TOPOLOGY_CONTAINER_DYNAMIC_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_TOPOLOGY_CONTAINER_DYNAMIC_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/Dynamic/CMakeLists.txt:6204,Test,Tests,6204,Sofa/Component/Topology/Container/Dynamic/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/Dynamic/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"rk/sofa/pull/1420 ). ### Bug Fixes. **Architecture**; - [CMake] Add SofaNonUniformFem to the dependencies of SofaMisc [#1384]( https://github.com/sofa-framework/sofa/pull/1384 ); - [SofaFramework/CMake] Create configuration type dir before copying lib [#1347]( https://github.com/sofa-framework/sofa/pull/1347 ); - [extlibs/gtest] Add character test in gtest paramName to allow dash character [#1265]( https://github.com/sofa-framework/sofa/pull/1265 ). **Modules**; - [All] Clean warnings for option config, again [#1339]( https://github.com/sofa-framework/sofa/pull/1339 ); - [All] Fix SOFA_LIBSUFFIX used in Debug by PluginManager [#1313]( https://github.com/sofa-framework/sofa/pull/1313 ); - [All] Overridden 'canCreate' methods should always log an error message when they fail [#1294]( https://github.com/sofa-framework/sofa/pull/1294 ); - **[SofaBaseTopology]** Fix GridTopology edge computation [#1323]( https://github.com/sofa-framework/sofa/pull/1323 ); - **[SofaBaseTopology]**[SofaExporter] Fix failing tests due to changes in topology [#1335]( https://github.com/sofa-framework/sofa/pull/1335 ); - [SofaConstraint] Fix test further to #1369 [#1386]( https://github.com/sofa-framework/sofa/pull/1386 ); - **[SofaEigen2Solver]** Fix CMake test on the version of Eigen [#1416]( https://github.com/sofa-framework/sofa/pull/1416 ); - **[SofaEngine]** Fix engine unit tests [#1280]( https://github.com/sofa-framework/sofa/pull/1280 ); - **[SofaEngine]** Fix Engine_test [#1338]( https://github.com/sofa-framework/sofa/pull/1338 ); - **[SofaFramework]** Windows/VS: Remove warnings flags from definitions [#1368]( https://github.com/sofa-framework/sofa/pull/1368 ); - [SofaGuiQt] Fix compilation for SOFA_DUMP_VISITOR_INFO [#1415]( https://github.com/sofa-framework/sofa/pull/1415 ); - [SofaGuiQt] Fix node graph [#1424]( https://github.com/sofa-framework/sofa/pull/1424 ); - [SofaHeadlessRecorder] Update headless recorder to use the new ffmpeg recorder [#1396]( https://github.com/sofa-framew",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:234422,test,tests,234422,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"rk/sofa/pull/587 ); - **[SofaKernel]** Header include cleanup [#638]( https://github.com/sofa-framework/sofa/pull/638 ); - **[SofaKernel]** Remove unused function ""renumberConstraintId"" [#691]( https://github.com/sofa-framework/sofa/pull/691 ). **Plugins / Projects**; - [CImgPlugin] Less scary config warnings [#607]( https://github.com/sofa-framework/sofa/pull/607 ); - [HeadlessRecorder] Handle errors in target config [#608]( https://github.com/sofa-framework/sofa/pull/608 ); - [SofaGUI] Move GlutGUI to projects and remove all glut references in SofaFramework [#598]( https://github.com/sofa-framework/sofa/pull/598 ); - [SofaGUI] CMake: Remove useless if block in qt CMakelists.txt [#590]( https://github.com/sofa-framework/sofa/pull/590 ); - [SofaPhysicsAPI] FIX: remove the include of glut [#659]( https://github.com/sofa-framework/sofa/pull/659 ). ____________________________________________________________. ## [v17.12]( https://github.com/sofa-framework/sofa/tree/v17.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v17.06...v17.12 ). ### Deprecated. **Kernel modules**; - Will be removed in v17.12; - [All]; - SMP support [#457]( https://github.com/sofa-framework/sofa/pull/457 - no more maintained ); - [SofaDefaultType]; - LaparoscopicRigidType [#457]( https://github.com/sofa-framework/sofa/pull/457 ) - not used/dont compiled for a really long time. - Will be removed in v18.06; - [SofaHelper]; - Utils::getPluginDirectory() [#518]( https://github.com/sofa-framework/sofa/pull/518) - Use PluginRepository.getFirstPath( ) instead. **Other modules**; - Will be removed in v18.12; - [SofaBoundaryCondition]; - BuoyantForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - VaccumSphereForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMisc]; - ParallelCGLinearSolver [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscForceField]; - ForceMaskOff [#457]( https://github.com/sofa-framework/sofa/pull/457 ); -",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:301007,log,log,301007,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,"rmatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.cpp); endif(). sofa_find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Topology REQUIRED). # LIBRARY; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/WinDepPack>""); endif(); # The default binary suffix for libraries/plugins is ""_d"" when using a debug build.; # since this is configuration specific it is a bit more convenient to put it as a debug compile definition for; # PluginManager.cpp, at the expense of being much less visible compare to having it in the generated; # SofaFramework/config.h; set_property(SOURCE ${SRC_ROOT}/system/PluginManager.cpp APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG ""SOFA_LIBSUFFIX=_d"" ). # DEPENDENCY LINKS AND INCLUDE DIRS; target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Config ); target_link_libraries(${PROJECT_NAME} PUBLIC S",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:6475,log,logging,6475,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,"rudeEdgesAndGenerateQuads.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/ExtrudeQuadsAndGenerateHexas.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/ExtrudeSurface.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/GenerateCylinder.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/GenerateGrid.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/GenerateRigidMass.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/GenerateSphere.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/GroupFilterYoungModulus.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/JoinPoints.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/MergeMeshes.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/MergePoints.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/MergeSets.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/MergeVectors.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/MeshBarycentricMapperEngine.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/MeshClosingEngine.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/MeshTetraStuffing.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/NormEngine.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/NormalsFromPoints.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/RandomPointDistributionInSurface.cpp; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/Spiral.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_ENGINE_GENERATE_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_ENGINE_GENERATE_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Generate/CMakeLists.txt:4549,Test,Tests,4549,Sofa/Component/Engine/Generate/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Generate/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"ryCondition] Factorize partial fixedconstraint [#718]( https://github.com/sofa-framework/sofa/pull/718 ); - [SofaConstraint] add a force data field in SlidingConstraint [#780]( https://github.com/sofa-framework/sofa/pull/780 ); - [SofaConstraint] ADD Data to show constraint forces [#840]( https://github.com/sofa-framework/sofa/pull/840 ); - [SofaConstraint] allow call of constraints' storeLambda() [#854]( https://github.com/sofa-framework/sofa/pull/854 ); - **[SofaCore]** Add new (simpler) DataEngine implementation [#760]( https://github.com/sofa-framework/sofa/pull/760 ); - [SofaExporter] ADD in WriteState all required tests on data and clean export with msg API [#714]( https://github.com/sofa-framework/sofa/pull/714 ); - **[SofaFramework]** Improve external dirs fetching in SofaMacros [#759]( https://github.com/sofa-framework/sofa/pull/759 ); - [SofaGeneralAnimationLoop] Improvement on MMMapper [#772]( https://github.com/sofa-framework/sofa/pull/772 ); - **[SofaHelper]** EDIT FileSystem and FileRepository for regression tests [#830]( https://github.com/sofa-framework/sofa/pull/830 ); - **[SofaKernel]** Improve Displayflags [#671]( https://github.com/sofa-framework/sofa/pull/671 ); - **[SofaKernel]** Add a ""sofa_add_module"" in SofaMacro.cmake [#732]( https://github.com/sofa-framework/sofa/pull/732 ); - **[SofaKernel]** use string in base object description [#862]( https://github.com/sofa-framework/sofa/pull/862 ); - [SofaMeshCollision] TriangleModel optimization when topology changes occur [#839]( https://github.com/sofa-framework/sofa/pull/839 ); - [SofaSparseSolver] ADD saveMatrixToFile to SparseLDLSolver [#845]( https://github.com/sofa-framework/sofa/pull/845 ); - [SofaTest] ADD a PrintTo method so test failure shows human readable informations. [#730]( https://github.com/sofa-framework/sofa/pull/730 ); - [VisualModel] Improve the messages when loading mesh inside VisualModel [#778]( https://github.com/sofa-framework/sofa/pull/778 ); - [WriteState] minor fix wit",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:280574,test,tests,280574,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"s a conditional info message""; - Implement an implicit version of each of the msg_* API allowing to write; msg_info() << ""Hello"" in place for msg_info(this) << Hello""; - CImgPlugin : creation of a dedicated plugin for image loading based on CImg [#185]( https://github.com/sofa-framework/sofa/pull/185 ); - Remove deprecated miniBoost dependency [#273]( https://github.com/sofa-framework/sofa/pull/273 ). ### Improvements. **Modules**; - [All]; - update containers to support c++x11 features [#113]( https://github.com/sofa-framework/sofa/pull/113 ); - speed up spheres rendering + code cleaning [#170]( https://github.com/sofa-framework/sofa/pull/170 ); - updates externs/gtest to a fresh checkout [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - auto-init/cleanup libraries [#168]( https://github.com/sofa-framework/sofa/pull/168 ); - Improve and clean msg_api and logging of message (#190, #255, #275). See [documentation](https://www.sofa-framework.org/community/doc/programming-with-sofa/logger/) for more information.; - Add CMake option to limit cores used to build specific targets [#254]( https://github.com/sofa-framework/sofa/pull/254 ); - Fix rgbacolor parsing [#305]( https://github.com/sofa-framework/sofa/pull/305 ); - CMake: installing gtest headers for separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - [SofaKernel]; - Update the RichConsoleStyleMessageFormatter [#126]( https://github.com/sofa-framework/sofa/pull/126 ); - creation of a defaulttype::RGBAColor [#119]( https://github.com/sofa-framework/sofa/pull/119 ); - add a new method in BaseObjectDescription [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - adding listener mechanism to SceneLoader [#205]( https://github.com/sofa-framework/sofa/pull/205 ); - common usage for DiagonalMass and tests [#230]( https://github.com/sofa-framework/sofa/pull/230 ); - add tests for DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - add tests for Default",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:326140,log,logger,326140,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['logger']
Testability,s a plugin) [#2709]( https://github.com/sofa-framework/sofa/pull/2709 ); - [SofaNG] Setup SolidMechanics [#2759]( https://github.com/sofa-framework/sofa/pull/2759 ); - [SofaNG] Setup StateContainer [#2766]( https://github.com/sofa-framework/sofa/pull/2766 ); - [SofaNG] Setup Topology [#2612]( https://github.com/sofa-framework/sofa/pull/2612 ); - [SofaNG] Setup Visual [#2679]( https://github.com/sofa-framework/sofa/pull/2679 ); - [SofaNG] Setup cmake and add ODESolver [#2571]( https://github.com/sofa-framework/sofa/pull/2571 ). **Modules**; - [Sofa] Compilation without Compatibility mode [#2975]( https://github.com/sofa-framework/sofa/pull/2975 ); - [Component.Compat] Remove wrong mappings in compat layer [#2705]( https://github.com/sofa-framework/sofa/pull/2705 ); - [S.C.Engine.Generate] Convert and move MeshTetraStuffing as an engine [#2917]( https://github.com/sofa-framework/sofa/pull/2917 ); - [Sofa.Component.ODESolver] Gather tests + create Sofa.Component.ODESolver.Testing [#2650]( https://github.com/sofa-framework/sofa/pull/2650 ); - [Sofa.Component] Remove empty test projects and move/clean tests from SofaBoundaryCondition [#2991]( https://github.com/sofa-framework/sofa/pull/2991 ); - [Sofa.GUI] Clean CMake variables [#2974]( https://github.com/sofa-framework/sofa/pull/2974 ); - [Sofa.Helper] Refresh ComponentChange info list [#2986]( https://github.com/sofa-framework/sofa/pull/2986 ); - [Sofa.Helper] clean ComponentChange and add new category [#2565]( https://github.com/sofa-framework/sofa/pull/2565 ); - [SofaGraphComponent] Move scene checking ability into its own library [#2960]( https://github.com/sofa-framework/sofa/pull/2960 ). **Plugins / Projects**; - [PluginExample] Move the plugin to an external repository [#2519]( https://github.com/sofa-framework/sofa/pull/2519 ); - [ManifoldTopologies] Move the plugin to an external repository [#2623]( https://github.com/sofa-framework/sofa/pull/2623 ); - [OpenCTMPlugin] Move the plugin to an external repository [,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:94568,Test,Testing,94568,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Testing']
Testability,"s activated; - clean the config.h (SOFAGUI_HAVE_QWT); - remove boost library links (includes still required). boost chrono is not required anymore.; - remove unused POINT_DATA_VECTOR_ACCESS macro; - make miniflowVR build optional (default OFF); - [SofaKernel]; - remove last direct opengl calls in modules; - add deprecation message on MechanicalObject attributes; - [SofaBaseVisual] clean BaseCamera: remove direct opengl calls; - [SofaHaptics] boost-thread is not used any more, clean cmake; - [SofaGeneralLoader] STLLoader: fixing binary loading in debug and cleaning examples; - [SofaPython]; - remove ScriptEnvironment i.e. automatic initialization of Node; - Node::isInitialized(), not used anymore; - [Flexible]; - clean relativeStrainMapping. ### Moved files. - move CImg from extlibs to image plugin extlibs. ### Documentation. - Add the contribution and guidelines : **CONTRIBUTING.md** and **GUIDELINES.md**; - Add the configuration required (ex: C++, compiler versions); - Add a page to use SOFA in Matlab; - Improve Logger documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/sofa-framework/sofa]( https://github.com/sofa-framework/sofa ); - creation of a RigidScale plugin: implementing mappings, especially allowing to get the DOF with Rigid+Scale type, while reusing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing to integrate a Leap in your SOFA simulation; - add the DrawTool: DrawTool is an interface, describing an API to display primitives on screen. For now, only the OpenGL (fixed-pipeline version) implementation has been made.; - add a Logger; - add the diffusion effect in SOFA (heat transfer); - SOFA_USE_MASK compi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:340827,Log,Logger,340827,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Log'],['Logger']
Testability,s.cpp; ${SRC_ROOT}/decompose.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/io/BaseFileAccess.cpp; ${SRC_ROOT}/io/FileAccess.cpp; ${SRC_ROOT}/io/File.cpp; ${SRC_ROOT}/io/Image.cpp; ${SRC_ROOT}/io/ImageDDS.cpp; ${SRC_ROOT}/io/ImageRAW.cpp; ${SRC_ROOT}/io/Mesh.cpp; ${SRC_ROOT}/io/MeshOBJ.cpp; ${SRC_ROOT}/io/MeshGmsh.cpp; ${SRC_ROOT}/io/MeshTopologyLoader.cpp; ${SRC_ROOT}/io/SphereLoader.cpp; ${SRC_ROOT}/io/STBImage.cpp; ${SRC_ROOT}/io/TriangleLoader.cpp; ${SRC_ROOT}/io/XspLoader.cpp; ${SRC_ROOT}/kdTree.cpp; ${SRC_ROOT}/system/DynamicLibrary.cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:5272,log,logging,5272,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,"s://github.com/sofa-framework/sofa/pull/230 ); - add tests for DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - add tests for DefaultAnimationLoop [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for LocalMinDistance [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add a way to convert message type to string in Message.cpp [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - adding listener mechanism to SceneLoader [#204]( https://github.com/sofa-framework/sofa/pull/204 ); - Grid Topologies cleanup + new SphereGrid [#164]( https://github.com/sofa-framework/sofa/pull/164 ); - Add CMake option SOFA_WITH_EXPERIMENTAL_FEATURES (default OFF) to enable MechanicalObject::buildIdentityBlocksInJacobian [#276]( https://github.com/sofa-framework/sofa/pull/276 ); - [SofaGraphComponents]; - add tests for RequiredPlugin [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaHelper]; - GLSL: load shader source code from a standard string [#158]( https://github.com/sofa-framework/sofa/pull/158 ); - [SofaBaseTopology]; - GridTopology : implement ""flat"" grids in 1 or 2 dimension by using setting grid resolution to ""1"" in the corresponding axis, and associated examples [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - add tests for RegularGridTopology [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - [SofaEngine]; - BREAKING: Add oriented box feature to BoxROI [#108]( https://github.com/sofa-framework/sofa/pull/108 ); - [SofaConstraint]; - add instantiation of constraint corrections with Vec2f [#157]( https://github.com/sofa-framework/sofa/pull/157 ); - [SofaOpenglVisual]; - add tests for ClipPlane [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaVolumetricData]; - add tests for DistanceGrid [#258]( https://github.com/sofa-",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:327987,test,tests,327987,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,s] add a warning comment in the scene header [#2470]( https://github.com/sofa-framework/sofa/pull/2470 ); - [scenes] Replace BruteForceDetection by BruteForceNarrowPhase+BVHNarrowPhase [#2232]( https://github.com/sofa-framework/sofa/pull/2232 ). **Scripts / Tools**. ____________________________________________________________. ## [v21.06.03]( https://github.com/sofa-framework/sofa/tree/v21.06.03 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.02...v21.06.03 ). ### Bug Fixes; **Architecture**; - [CMake][modules] FIX out-of-tree builds [#2453]( https://github.com/sofa-framework/sofa/pull/2453 ); - [All] Update IDE directory for targets [#2239]( https://github.com/sofa-framework/sofa/pull/2239 ). **Modules**; - [SofaGeneralLoader] Make GridMeshCreator work again [#2473]( https://github.com/sofa-framework/sofa/pull/2473 ). ____________________________________________________________. ## [v21.06.02]( https://github.com/sofa-framework/sofa/tree/v21.06.02 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.01...v21.06.02 ). ### Bug Fixes; **Architecture**; - [CMake] Clean Sofa.Core CMakeLists + Add missing headers [#2444]( https://github.com/sofa-framework/sofa/pull/2444 ); - [SofaMeshCollision] Fix cmake generated config file [#2400]( https://github.com/sofa-framework/sofa/pull/2400 ). **Modules**; - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-framework/sofa/pull/2360 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framework/sofa/pull/2352 ). ____________________________________________________________. ## [v21.06.01]( https://github.com/sofa-framework/sofa/tree/v21.06.01 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.00...v21.06.01 ). ### Improvements; **Architecture**; - [CMake] CLEAN and reenable old macro for git infos [#2309]( https://github.com/sofa-framework/sofa/pull/2309 ); - [SofaMacros] Improve sofa_install_git_,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:164823,log,log,164823,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,sable compatibility layer [#2216]( https://github.com/sofa-framework/sofa/pull/2216 ). **Modules**; - **[SofaBaseCollision]** BVH narrow phase [#2043]( https://github.com/sofa-framework/sofa/pull/2043 ); - **[SofaBaseCollision]** Introduce brute force broad phase [#2010]( https://github.com/sofa-framework/sofa/pull/2010 ); - **[SofaBaseCollision]** Speedup direct SAP [#1917]( https://github.com/sofa-framework/sofa/pull/1917 ); - **[SofaBaseMechanics_test]** Add TopologicalChanges unit tests for DiagonalMass [#2176]( https://github.com/sofa-framework/sofa/pull/2176 ); - **[SofaBaseTopology]** add intersection methods [#2131]( https://github.com/sofa-framework/sofa/pull/2131 ); - [SofaBoundaryCondition] Add callback in Partial/FixedConstraint [#1806]( https://github.com/sofa-framework/sofa/pull/1806 ); - [SofaBoundaryCondition] Add projectVelocity in FixedConstraint and PartialFixedConstraint [#1558]( https://github.com/sofa-framework/sofa/pull/1558 ); - [SofaBoundaryCondition_test] Add TopologicalChanges unit test for FixedConstraint [#2136]( https://github.com/sofa-framework/sofa/pull/2136 ); - [SofaConstraint] GenericConstraintSolver: compute compliances concurrently [#1862]( https://github.com/sofa-framework/sofa/pull/1862 ); - [SofaConstraint] Parallel free motion and collision detection [#2040]( https://github.com/sofa-framework/sofa/pull/2040 ); - **[SofaCore]** Add PCH support in CMakeLists.txt [#1727]( https://github.com/sofa-framework/sofa/pull/1727 ); - [SofaExporter] Add option for obj export [#1789]( https://github.com/sofa-framework/sofa/pull/1789 ); - [SofaGeneralAnimationLoop] MechanicalMatrixMapper: adds template [#1703]( https://github.com/sofa-framework/sofa/pull/1703 ); - [SofaGeneralLoader] adds translation and rotation to ReadState [#1733]( https://github.com/sofa-framework/sofa/pull/1733 ); - [SofaGeneralMeshCollision] Direct SAP is written as a narrow phase [#2030]( https://github.com/sofa-framework/sofa/pull/2030 ); - [SofaGuiQt] Add new about ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:177488,test,test,177488,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,"seMaterial.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/BoyceAndArruda.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/Costa.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/HyperelasticMaterial.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/MooneyRivlin.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/NeoHookean.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/Ogden.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/PlasticMaterial.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/StableNeoHookean.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/STVenantKirchhoff.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/VerondaWestman.h; ). set(SOURCE_FILES; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/StandardTetrahedralFEMForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/TetrahedronHyperelasticityFEMForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/PlasticMaterial.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_SOLIDMECHANICS_FEM_HYPERELASTIC_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_SOLIDMECHANICS_FEM_HYPERELASTIC_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/FEM/HyperElastic/CMakeLists.txt:2556,Test,Tests,2556,Sofa/Component/SolidMechanics/FEM/HyperElastic/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/FEM/HyperElastic/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,sh.h; ${SRC_ROOT}/io/MeshOBJ.h; ${SRC_ROOT}/io/MeshGmsh.h; ${SRC_ROOT}/io/MeshTopologyLoader.h; ${SRC_ROOT}/io/SphereLoader.h; ${SRC_ROOT}/io/STBImage.h; ${SRC_ROOT}/io/TriangleLoader.h; ${SRC_ROOT}/kdTree.h; ${SRC_ROOT}/kdTree.inl; ${SRC_ROOT}/list.h; ${SRC_ROOT}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentCh,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:2856,log,logging,2856,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,sing find_package in SofaGuiConfig.cmake.in [#1198]( https://github.com/sofa-framework/sofa/pull/1198 ); - [SofaGui] Fix VideoRecorder [#1138]( https://github.com/sofa-framework/sofa/pull/1138 ); - [SofaGui] Prevent the GuiManager to store a pointer for the valid gui name [#1108]( https://github.com/sofa-framework/sofa/pull/1108 ); - [SofaHeadlessRecorder] FIX headlessRecorder_test [#1174]( https://github.com/sofa-framework/sofa/pull/1174 ); - **[SofaHelper]** FIX Eigen install path [#1240]( https://github.com/sofa-framework/sofa/pull/1240 ); - **[SofaKernel]** Add bloc access in basematrix [#1143]( https://github.com/sofa-framework/sofa/pull/1143 ); - **[SofaKernel]** Changes for Visual Studio and c++17 [#1162]( https://github.com/sofa-framework/sofa/pull/1162 ); - **[SofaKernel]** FIX regex in SofaMacros.cmake [#1161]( https://github.com/sofa-framework/sofa/pull/1161 ); - **[SofaKernel]** Fix alloc size [#1142]( https://github.com/sofa-framework/sofa/pull/1142 ); - **[SofaKernel]** Fix some AdvanceTimer log missing [#1158]( https://github.com/sofa-framework/sofa/pull/1158 ); - **[SofaKernel]** Fix useless warnings [#1144]( https://github.com/sofa-framework/sofa/pull/1144 ); - **[SofaKernel]** Several fix in draw methods and topology warnings [#1111]( https://github.com/sofa-framework/sofa/pull/1111 ); - **[SofaKernel]** Small Fix in CollisionModel [#1202]( https://github.com/sofa-framework/sofa/pull/1202 ); - **[SofaKernel]** Use links for input and output topologies of the barycentric mapping [#1125]( https://github.com/sofa-framework/sofa/pull/1125 ); - [SofaMisc] Fix compilation with SOFA_NO_OPENGL [#1193]( https://github.com/sofa-framework/sofa/pull/1193 ); - **[SofaSimulationGraph]** Fix CollisionGroupManager wrong search of deformable object node [#1060]( https://github.com/sofa-framework/sofa/pull/1060 ); - **[SofaSimulationGraph]** Stop DAGNode get parent topology process in BarycentricMapping [#1176]( https://github.com/sofa-framework/sofa/pull/1176 ); - ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:251608,log,log,251608,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,sofa-framework/sofa/compare/v20.12.02...v20.12.03 ). ### Bug Fixes; **Architecture**; - [CMake] Set CMake install default component [#2037]( https://github.com/sofa-framework/sofa/pull/2037 ). **Modules**; - [SofaBoundaryCondition] Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - [SofaGuiQt] Fix Expand node [#2069]( https://github.com/sofa-framework/sofa/pull/2069 ); - **[SofaHelper]** Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - [SofaMiscCollision] Fix config.in cmake file for export [#2052]( https://github.com/sofa-framework/sofa/pull/2052 ); - **[SofaSimulationCore]** Broken URL [#2011]( https://github.com/sofa-framework/sofa/pull/2011 ). **Plugins / Projects**; - [Geomagic] Fix Geomagic plugin compilation [#2033]( https://github.com/sofa-framework/sofa/pull/2033 ). ____________________________________________________________. ## [v20.12.02]( https://github.com/sofa-framework/sofa/tree/v20.12.02 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.01...v20.12.02 ). ### Bug Fixes; **Architecture**; - [CMake] FIX resources and translations install on Windows [#1949]( https://github.com/sofa-framework/sofa/pull/1949 ). **Modules**; - [SofaGeneralExplicitOdeSolver] Fix typo in CentralDifferenceSolver description [#1894]( https://github.com/sofa-framework/sofa/pull/1894 ); - [SofaGuiQt] Fix RealGUI: QDesktopWidget header missing for Qt < 5.11 [#1904]( https://github.com/sofa-framework/sofa/pull/1904 ); - [SofaGuiQt] FIX segfault due to qFatal in GenGraphForm [#1948]( https://github.com/sofa-framework/sofa/pull/1948 ); - **[SofaHelper]** Fix out of bounds error [#1868]( https://github.com/sofa-framework/sofa/pull/1868 ). **Plugins / Projects**; - [SofaCUDA] change the setTopology method signature [#1843]( https://github.com/sofa-framework/sofa/pull/1843 ). **Examples / Scenes**; - [examples] Add missing RequiredPlugin [#1895]( https://github.com/sofa-framework/sofa/pull/1895 ). ____,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:209368,log,log,209368,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['log']
Testability,sofa-framework/sofa/pull/2377 ); - [SofaBaseMechanics] Fix compilation in BarycentricMapping [#2443]( https://github.com/sofa-framework/sofa/pull/2443 ); - [SofaBaseMechanics] Update MechanicalObject resize method to exit if not necessary [#1977]( https://github.com/sofa-framework/sofa/pull/1977 ); - [SofaBaseTopology] Add missing export symbol keyword for TopologySubsetData [#2247]( https://github.com/sofa-framework/sofa/pull/2247 ); - [SofaBaseTopology] Fix TopologySubsetData: call to creation/desctruction callback was missing [#2374]( https://github.com/sofa-framework/sofa/pull/2374 ); - [SofaBaseTopology] use WriteOnlyAccessor in TopologyData [#2414]( https://github.com/sofa-framework/sofa/pull/2414 ); - [SofaBaseVisual] ADD Update callbacks in VisualModelImpl (#1483) [#2245]( https://github.com/sofa-framework/sofa/pull/2245 ); - [SofaBaseVisual] Fix VisualModelImpl updateTextures callback to not call init method [#2298]( https://github.com/sofa-framework/sofa/pull/2298 ); - [SofaBaseVisual] Fix assert [#2417]( https://github.com/sofa-framework/sofa/pull/2417 ); - [SofaBoundaryCondition] Fix ProjectToLineConstraint_RemovingMeshTest.scn [#2241]( https://github.com/sofa-framework/sofa/pull/2241 ); - [SofaBoundaryCondition] Fix constraints in assembled systems [#2269]( https://github.com/sofa-framework/sofa/pull/2269 ); - [SofaConstraint] Fix BilateralInteractionConstraint's draw() [#2530]( https://github.com/sofa-framework/sofa/pull/2530 ); - [SofaConstraint] Fix crash when constraint correction is missing [#2222]( https://github.com/sofa-framework/sofa/pull/2222 ); - [SofaConstraint] fix segfault in GenericConstraintSolver [#2265]( https://github.com/sofa-framework/sofa/pull/2265 ); - [SofaCore] Fix potential memory failure on TopologyData Add method [#2459]( https://github.com/sofa-framework/sofa/pull/2459 ); - [SofaCore] FIX BaseData::getLinkPath() [#2354]( https://github.com/sofa-framework/sofa/pull/2354 ); - [SofaCore] Link: case where Data parent is invalid [,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:148687,assert,assert,148687,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['assert'],['assert']
Testability,"sofa/pull/395 ); - [SofaKernel]; - Update the RichConsoleStyleMessageFormatter [#126]( https://github.com/sofa-framework/sofa/pull/126 ); - creation of a defaulttype::RGBAColor [#119]( https://github.com/sofa-framework/sofa/pull/119 ); - add a new method in BaseObjectDescription [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - adding listener mechanism to SceneLoader [#205]( https://github.com/sofa-framework/sofa/pull/205 ); - common usage for DiagonalMass and tests [#230]( https://github.com/sofa-framework/sofa/pull/230 ); - add tests for DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - add tests for DefaultAnimationLoop [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for LocalMinDistance [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add a way to convert message type to string in Message.cpp [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - adding listener mechanism to SceneLoader [#204]( https://github.com/sofa-framework/sofa/pull/204 ); - Grid Topologies cleanup + new SphereGrid [#164]( https://github.com/sofa-framework/sofa/pull/164 ); - Add CMake option SOFA_WITH_EXPERIMENTAL_FEATURES (default OFF) to enable MechanicalObject::buildIdentityBlocksInJacobian [#276]( https://github.com/sofa-framework/sofa/pull/276 ); - [SofaGraphComponents]; - add tests for RequiredPlugin [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaHelper]; - GLSL: load shader source code from a standard string [#158]( https://github.com/sofa-framework/sofa/pull/158 ); - [SofaBaseTopology]; - GridTopology : implement ""flat"" grids in 1 or 2 dimension by using setting grid resolution to ""1"" in the corresponding axis, and associated examples [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - add tests for RegularGridTopology [#270]( https",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:327506,test,test,327506,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,"stall(DIRECTORY ${googletest_SOURCE_DIR}/googletest/include/gtest DESTINATION include/extlibs/GTest/ COMPONENT headers); target_include_directories(gtest PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/GTest/>""); ; include(SofaMacros); sofa_create_package_with_targets(; PACKAGE_NAME GTest; PACKAGE_VERSION 1.14.0; TARGETS gtest AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""include""; INCLUDE_INSTALL_DIR ""extlibs/GTest""; ). set_target_properties(gtest PROPERTIES FOLDER Testing); set_target_properties(gtest_main PROPERTIES FOLDER Testing); endif(); elseif (NOT GTest_FOUND); message(FATAL_ERROR ""${PROJECT_NAME}: DEPENDENCY googletest NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install googletest, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # add custom googletest main; add_subdirectory(SofaGTestMain). set(SOFATESTINGSRC_ROOT ""src/sofa/testing""). set(HEADER_FILES; ${SOFATESTINGSRC_ROOT}/config.h.in; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.h; ${SOFATESTINGSRC_ROOT}/BaseTest.h; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.h; ${SOFATESTINGSRC_ROOT}/NumericTest.h; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.h; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.h; ). set(SOURCE_FILES; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.cpp; ${SOFATESTINGSRC_ROOT}/BaseTest.cpp; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.cpp; ${SOFATESTINGSRC_ROOT}/NumericTest.cpp; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.cpp; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.cpp; ). sofa_find_package(Sofa.Helper REQUIRED); sofa_find_package(Sofa.DefaultType REQUIRED); sofa_find_package(Sofa.Core REQUIRED); sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.DefaultType Sofa.Core Sofa.Simulation.Graph Sofa.SimpleApi GTest::gtest SofaGTestMain ); target_compile_options(${PR",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt:2233,Test,Testing,2233,Sofa/framework/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt,1,['Test'],['Testing']
Testability,"std:cerr by a msg_error so that FIX the corresponding failing test [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - adding listener mechanism to SceneLoader [#204]( https://github.com/sofa-framework/sofa/pull/204 ); - Grid Topologies cleanup + new SphereGrid [#164]( https://github.com/sofa-framework/sofa/pull/164 ); - Add CMake option SOFA_WITH_EXPERIMENTAL_FEATURES (default OFF) to enable MechanicalObject::buildIdentityBlocksInJacobian [#276]( https://github.com/sofa-framework/sofa/pull/276 ); - [SofaGraphComponents]; - add tests for RequiredPlugin [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaHelper]; - GLSL: load shader source code from a standard string [#158]( https://github.com/sofa-framework/sofa/pull/158 ); - [SofaBaseTopology]; - GridTopology : implement ""flat"" grids in 1 or 2 dimension by using setting grid resolution to ""1"" in the corresponding axis, and associated examples [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - add tests for RegularGridTopology [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - [SofaEngine]; - BREAKING: Add oriented box feature to BoxROI [#108]( https://github.com/sofa-framework/sofa/pull/108 ); - [SofaConstraint]; - add instantiation of constraint corrections with Vec2f [#157]( https://github.com/sofa-framework/sofa/pull/157 ); - [SofaOpenglVisual]; - add tests for ClipPlane [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaVolumetricData]; - add tests for DistanceGrid [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for Light [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaBoundaryCondition]; - add tests for ConstantForceField, some of them are OpenIssue demonstrating existing problem, as crashing sofa when using negative or too large values in indices [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [CI]; - improvement of all test scripts. **Plugins / Projects**; - [GUI]; - mouse events are now transmitted",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:328439,test,tests,328439,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,stead of Sofa_Test [#2144]( https://github.com/sofa-framework/sofa/pull/2144 ); - **[SofaBaseTopology]** Improve TopologyDataHandler message [#2152]( https://github.com/sofa-framework/sofa/pull/2152 ); - **[SofaBaseTopology]** Remove definition of real [#1955]( https://github.com/sofa-framework/sofa/pull/1955 ); - **[SofaBaseTopology]** Remove warning when a Data is directly linked to a topoogy Data container [#1971]( https://github.com/sofa-framework/sofa/pull/1971 ); - **[SofaBaseTopology]** Remove warnings [#2046]( https://github.com/sofa-framework/sofa/pull/2046 ); - **[SofaBaseTopology]** Single definition of global variables [#1950]( https://github.com/sofa-framework/sofa/pull/1950 ); - **[SofaBaseUtils]** Clean RequiredPlugin [#1899]( https://github.com/sofa-framework/sofa/pull/1899 ); - **[SofaBaseVisual]** Move #include<Mat.h> from BaseCamera.h to BaseCamera.cpp [#1846]( https://github.com/sofa-framework/sofa/pull/1846 ); - **[SofaBase]** Convert tests to Sofa.Testing [#2146]( https://github.com/sofa-framework/sofa/pull/2146 ); - [SofaBoundaryCondition] Avoid ambiguity [#1958]( https://github.com/sofa-framework/sofa/pull/1958 ); - [SofaCommon] Convert tests to Sofa.Testing [#2153]( https://github.com/sofa-framework/sofa/pull/2153 ); - [SofaConstraint] Small cleaning [#2174]( https://github.com/sofa-framework/sofa/pull/2174 ); - **[SofaCore]** Deprecate operator= [#2167]( https://github.com/sofa-framework/sofa/pull/2167 ); - **[SofaCore]** Factoring code in Link.h [#1704]( https://github.com/sofa-framework/sofa/pull/1704 ); - **[SofaCore]** Merge TData in Data. [#1753]( https://github.com/sofa-framework/sofa/pull/1753 ); - **[SofaCore]** Minor cleaning in constraints [#2138]( https://github.com/sofa-framework/sofa/pull/2138 ); - **[SofaCore]** Move Link::CheckPath() method to PathResolver::CheckPath() [#1717]( https://github.com/sofa-framework/sofa/pull/1717 ); - **[SofaCore]** Move definition Link::read() method to BaseLink::read() [#1736]( https://github.c,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:200104,Test,Testing,200104,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Testing']
Testability,"t implemented in the python side; - Add color attribute support (and default color if not present in the node); - Reactivate color map in TetraFEM, as it does not depend on SofaOpenGLVisual anymore; - indices data field for UniformMass; - analyze matrix only if number of non-zeroes has changed and no iterative refinement; - update the applyConstraint methods according to the actual API; - Adding ProjectionTo{Plane|Line}MultiMapping where the plane (origin,normal) and the line (origin,direction) are dofs; - add MeshBoundaryROI with an example. - [Tests]; - for (multi)Mapping test, check the size of the mapping output is correct; - adding TestMessageHandler that raises a gtest failure each time an error message is processed; - test for node removal; - test for removal of a node containing an UncoupledConstraintCorrection (for now the test fails because there is a problem with the removal of that component); - add of Multi2Mapping_test; - add DistanceMapping_test. - [SofaPython]; - logger: cleaning emitter; - sml.Mesh: adding load function; - sml: python set for tags is created by objects themselves; - sml: add tag to JointGeneric; - sml: add the printLog flag; - sml: setup units in BaseScene for all sml Scene class; - sml: mesh has a clear id; - sml:insertVisual: bug fix for solid with multiple meshes (just impacting the Display scene); - sml: handy constructor for Dof creation; - sml: like <mesh> <image> can be defined in <solid>; - sml: add a utility function: look into the valueByTag dictionary for a tag contained in tags; - sml: adding a warning if a vertex group is empty; - sml: can have offsets under solids; - sml: remove deprecated setTagFromTag() method; - API: add subsetFromDeformables function; - binding Node::isInitialized; - binding loadPythonSceneWithArguments; - adding a binding to get the pointer of a Data (with its dimensions and type); - adding binding of BaseMapping::getJs (as dense matrices for now); - adding python functions to convert a Data in a n",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:347420,log,logger,347420,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['log'],['logger']
Testability,tem/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingCubeUtility.cpp; ${SRC_ROOT}/NameDecoder.cpp; ${SRC_ROOT}/OptionsGroup.cpp; ${SRC_ROOT}/ScopedAdvancedTimer.cpp; ${SRC_ROOT}/Polynomial_LD.cpp; ${SRC_ROOT}/RandomGenerator.cpp; ${SRC_ROOT}/StringUtils.cpp; ${SRC_ROOT}/TagFactory.cpp; ${SRC_ROOT}/TriangleOctree.cpp; ${SRC_ROOT}/Utils.cpp; ${SRC_ROOT}/decompose.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/io/BaseFileAc,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:3373,log,logging,3373,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,thub.com/sofa-framework/sofa/pull/2574 ); - [SofaBoundaryCondition] Sanitize [#2559]( https://github.com/sofa-framework/sofa/pull/2559 ); - [SofaConstraint] Clean timers in GenericConstraintSolver [#2769]( https://github.com/sofa-framework/sofa/pull/2769 ); - [SofaConstraint] Clean timers in LCPConstraintSolver [#2640]( https://github.com/sofa-framework/sofa/pull/2640 ); - [SofaConstraint] Replace raw pointer to Link [#2770]( https://github.com/sofa-framework/sofa/pull/2770 ); - [SofaConstraint] Sanitize [#2577]( https://github.com/sofa-framework/sofa/pull/2577 ); - [SofaCore] Add ObjectFactory_test.cpp [#2696]( https://github.com/sofa-framework/sofa/pull/2696 ); - [SofaCore] Check link to mstate if specified [#2553]( https://github.com/sofa-framework/sofa/pull/2553 ); - [SofaCore] Fix type conversion [#2639]( https://github.com/sofa-framework/sofa/pull/2639 ); - [SofaCore] Name dynamically allocated vec ids [#2811]( https://github.com/sofa-framework/sofa/pull/2811 ); - [SofaCore_test] Minor clean of few unit tests [#2573]( https://github.com/sofa-framework/sofa/pull/2573 ); - [SofaEulerianFluid] Move examples into plugin [#2833]( https://github.com/sofa-framework/sofa/pull/2833 ); - [SofaGeneralEngine] Fix some warnings [#2723]( https://github.com/sofa-framework/sofa/pull/2723 ); - [SofaGuiQt] Error handling when exporting graph [#2771]( https://github.com/sofa-framework/sofa/pull/2771 ); - [SofaGuiQt] Fix english spelling: AdvancedTimer instead of AdvanceTimer [#2816]( https://github.com/sofa-framework/sofa/pull/2816 ); - [SofaGuiQt] Modernize the 'qt::connect' to use the c++ syntax [#2943]( https://github.com/sofa-framework/sofa/pull/2943 ); - [SofaGuiQt] Remove sec unit from GUI [#2742]( https://github.com/sofa-framework/sofa/pull/2742 ); - [SofaGuiQt] Rename attributes to follow SOFA guidelines. [#2944]( https://github.com/sofa-framework/sofa/pull/2944 ); - [SofaKernel] fix shadow variable [#2791]( https://github.com/sofa-framework/sofa/pull/2791 ); - [SofaMiscC,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:127303,test,tests,127303,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"thub.com/sofa-framework/sofa/pull/258 ); - add tests for Light [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaBoundaryCondition]; - add tests for ConstantForceField, some of them are OpenIssue demonstrating existing problem, as crashing sofa when using negative or too large values in indices [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [CI]; - improvement of all test scripts. **Plugins / Projects**; - [GUI]; - mouse events are now transmitted to the scene with QtGLViewer [#132]( https://github.com/sofa-framework/sofa/pull/132 ); - [SceneCreator]; - Cosmetic changes and remove un-needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pull/202 ); - change the way createObject() handle its arguments to simplify scene writing + batch of tests [#286]( https://github.com/sofa-framework/sofa/pull/286 ); - [SofaTest]; - add Backtrace::autodump to all tests to ease debugging [#191]( https://github.com/sofa-framework/sofa/pull/191 ); - add automatic tests for updateForceMask [#209]( https://github.com/sofa-framework/sofa/pull/209 ); - add tests on PluginManager [#240]( https://github.com/sofa-framework/sofa/pull/240 ); - TestMessageHandler : new and robust implementation to connect msg_* message to test failure [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - update to use the new TestMessageHandler where msg_error generates test failures [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - add tests for TestMessageHandler [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - [SofaCUDA]; - FIX NVCC flags for debug build on Windows [#300]( https://github.com/sofa-framework/sofa/pull/300 ). ### Bug Fixes. **Modules**; - Warnings have been fixed [#229](",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:330013,test,tests,330013,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,thub.com/sofa-framework/sofa/pull/2939 ); - [LinearSolver] SparseLDLSolver: template warning to info message [#2969]( https://github.com/sofa-framework/sofa/pull/2969 ); - [Mapping.Linear] Fix some warnings [#2933]( https://github.com/sofa-framework/sofa/pull/2933 ); - [Mass] fix some warnings [#2931]( https://github.com/sofa-framework/sofa/pull/2931 ); - [Mass] Make warnings become info_msg in masses [#3116]( https://github.com/sofa-framework/sofa/pull/3116 ) ; - [Metis] Add header files to the project [#2581]( https://github.com/sofa-framework/sofa/pull/2581 ); - [Metis] Disable compilation warnings [#2874]( https://github.com/sofa-framework/sofa/pull/2874 ); - [S.C.LinearSolver] Restore specialized functions in SSORPreconditioner [#2885]( https://github.com/sofa-framework/sofa/pull/2885 ); - [Sofa.Component.Collision] Remove un-needed msg_warning in LocalMinDistance.cpp [#2976]( https://github.com/sofa-framework/sofa/pull/2976 ); - [Sofa.Component.ODESolver] Rewrite tests without SceneCreator [#2733]( https://github.com/sofa-framework/sofa/pull/2733 ); - [Sofa.Core] Use forward declaration for BoundingBox in Base [#2728]( https://github.com/sofa-framework/sofa/pull/2728 ); - [Sofa.DefaultType] Name() should be compile-time evaluable [#3174]( https://github.com/sofa-framework/sofa/pull/3174 ); - [Sofa.GL.Component] OglModel: Uniformize floating point type [#2856]( https://github.com/sofa-framework/sofa/pull/2856 ); - [Sofa.GUI.Component] Add module version [#3038]( https://github.com/sofa-framework/sofa/pull/3038 ); - [Sofa.Geometry][SofaMeshCollision] Deprecate RayTriangleIntersection class [#2763]( https://github.com/sofa-framework/sofa/pull/2763 ); - [Sofa.Helper] Introduce narrow_cast [#2590]( https://github.com/sofa-framework/sofa/pull/2590 ); - [Sofa.Helper] Remove some compilation warnings [#2619]( https://github.com/sofa-framework/sofa/pull/2619 ); - [Sofa.LinearAlgebra] Deprecate unused EigenMatrixManipulator [#2793]( https://github.com/sofa-framework/sof,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:124151,test,tests,124151,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,thub.com/sofa-framework/sofa/pull/4317); - [FEM.Elastic] Reference instead of a copy in TriangularFEMForceField [#4332](https://github.com/sofa-framework/sofa/pull/4332); - [All] Add GIT_REF option for external plugins [#4448](https://github.com/sofa-framework/sofa/pull/4448); - [Testing] Externalize (find_package() or fetch) googletest/gtest [#4471](https://github.com/sofa-framework/sofa/pull/4471). ### Bug Fixes; - [test] Fix unit test on RestShapeSpringsForceField [#3864](https://github.com/sofa-framework/sofa/pull/3864); - [test] Fix failing unit test [#3876](https://github.com/sofa-framework/sofa/pull/3876); - [Constraint.Lagrangian.Solver] LCPConstraintSolver: Fix when mu=0 (no friction) [#3905](https://github.com/sofa-framework/sofa/pull/3905); - [applications] remove unused variable [#3920](https://github.com/sofa-framework/sofa/pull/3920); - [Projective] Fix and test FixedPlaneConstraint [#3925](https://github.com/sofa-framework/sofa/pull/3925); - [MechanicalLoad] Restore addKToMatrix and test SurfacePressureForceField [#3935](https://github.com/sofa-framework/sofa/pull/3935); - [Core.Topology] Restore invalid ids in invalid containers [#3962](https://github.com/sofa-framework/sofa/pull/3962); - [Sofa.Component] FIX default color for TetrahedronFEMForceField [#3971](https://github.com/sofa-framework/sofa/pull/3971); - [image] Fix crash in case no parameters provided to TransferFunction [#3976](https://github.com/sofa-framework/sofa/pull/3976); - [Mapping.NonLinear] Fix assert in RigidMapping [#3978](https://github.com/sofa-framework/sofa/pull/3978); - [Diffusion] Fix buildStiffnessMatrix in TetrahedronDiffusionFEMForceField [#4012](https://github.com/sofa-framework/sofa/pull/4012); - [Core] Fix drawing of Objects when hiding Visual Models [#4044](https://github.com/sofa-framework/sofa/pull/4044); - [FEM.Elastic] Compute BBox in triangle FEM [#4061](https://github.com/sofa-framework/sofa/pull/4061); - [FEM.Elastic] Fix typo in error message [#4062](https://g,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:33784,test,test,33784,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,tic variable belongs to the class [#1951]( https://github.com/sofa-framework/sofa/pull/1951 ); - **[Sofa.Topology]** remove unnecessary pragma [#1969]( https://github.com/sofa-framework/sofa/pull/1969 ); - **[Sofa.Type & DefaultType]** Adds forward declaration for Vec and StdRigidTypes. [#1907]( https://github.com/sofa-framework/sofa/pull/1907 ); - **[Sofa.Type]** Modernize fixed_array [#1985]( https://github.com/sofa-framework/sofa/pull/1985 ); - **[Sofa.Type]** Remove MIN_DETERMINANT preprocessor value [#1932]( https://github.com/sofa-framework/sofa/pull/1932 ); - **[Sofa.Type]** add operator* for RGBAColor [#1952]( https://github.com/sofa-framework/sofa/pull/1952 ); - **[SofaBaseCollision]** Broad phase and narrow phase separation [#2118]( https://github.com/sofa-framework/sofa/pull/2118 ); - **[SofaBaseCollision]** Fix simulation dependency [#1768]( https://github.com/sofa-framework/sofa/pull/1768 ); - **[SofaBaseMechanics_test]** Update tests to use Sofa.Testing instead of Sofa_Test [#2144]( https://github.com/sofa-framework/sofa/pull/2144 ); - **[SofaBaseTopology]** Improve TopologyDataHandler message [#2152]( https://github.com/sofa-framework/sofa/pull/2152 ); - **[SofaBaseTopology]** Remove definition of real [#1955]( https://github.com/sofa-framework/sofa/pull/1955 ); - **[SofaBaseTopology]** Remove warning when a Data is directly linked to a topoogy Data container [#1971]( https://github.com/sofa-framework/sofa/pull/1971 ); - **[SofaBaseTopology]** Remove warnings [#2046]( https://github.com/sofa-framework/sofa/pull/2046 ); - **[SofaBaseTopology]** Single definition of global variables [#1950]( https://github.com/sofa-framework/sofa/pull/1950 ); - **[SofaBaseUtils]** Clean RequiredPlugin [#1899]( https://github.com/sofa-framework/sofa/pull/1899 ); - **[SofaBaseVisual]** Move #include<Mat.h> from BaseCamera.h to BaseCamera.cpp [#1846]( https://github.com/sofa-framework/sofa/pull/1846 ); - **[SofaBase]** Convert tests to Sofa.Testing [#2146]( https://github.c,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:199110,Test,Testing,199110,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Testing']
Testability,"tionProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/HermiteSplineProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearMovementProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearVelocityProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/OscillatorProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ParabolicProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialFixedProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialLinearMovementProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PatchTestMovementProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PositionBasedDynamicsProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/SkeletalMotionProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LineProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PlaneProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PointProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/DirectionProjectiveConstraint.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Projective/CMakeLists.txt:8909,Test,Tests,8909,Sofa/Component/Constraint/Projective/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Projective/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'tests']"
Testability,"to 0. - [Test-CI]; - fix crash UncoupledConstraintCorrection_test; - fix SofaComponentBase_test on windows; - fix Mapping and MultiMapping tests; - fix MultiMapping::applyDJT test; - fix {Difference,Addition}Mapping when a pair is composed of the same index.; - fix tested scenes selection; - removed OptiTrackNatNet from ""options"" configurations; - ignore some OptiTrackNatNet scenes testing. - [SofaPython]; - fix GridTopology type on the python side; - fix OBJ loader; - fix loading a scene from a .py in a Node independently from the awful Simulation singleton.; - fix SofaPython.Tools.localPath in some situations; - fix BaseContext_getObjects so it can select objects from a base class name (and adding an example); - quaternion: fix singularity in from_line function. - [Flexible]; - fix case sensitive issues; - API: fix a bug with colors when reloading a scene; - fix the bulk factor in NeoHookean material; - fix NeoHookean traction test; - testing detachFromGraph; - BaseDeformationMapping: remove debug message, fix usage of sout (no need for testing f_printLog); - fix test compilation w/o image plugin; - fix loadVisual; - fix bug in topologygausspointsampler (computation of volume integrals for irregular hexa). - [Compliant]; - CompliantImplicitSolver: fix Lagrange multipliers clear when reseting the simulation; - auto-fix init errors in RigidMass; - Frame.py: adding tolist() conversion; - fix Jacobian reserved size; - fix contacts and associated test. - [image]; - python tools: fix bug in mhd parsing; - MeshToImage: fix bresenham, be sure dmax>=1; - fix resampling of projection images, and marching cubes default parameter; - fix bug in mhd file loader; - fix rasterization when using vertex colors. ### Cleanings. - warnings were removed; - dead branches were removed; - the ‘using’ directives were removed in header files; - the repository sofa_root/modules/sofa/components has been cleaned (deprecated components removed); - clean many SOFA examples; - removing ""using help",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:359350,test,test,359350,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,4,['test'],"['test', 'testing']"
Testability,tps://github.com/sofa-framework/sofa/pull/1704 ); - **[SofaCore]** Merge TData in Data. [#1753]( https://github.com/sofa-framework/sofa/pull/1753 ); - **[SofaCore]** Minor cleaning in constraints [#2138]( https://github.com/sofa-framework/sofa/pull/2138 ); - **[SofaCore]** Move Link::CheckPath() method to PathResolver::CheckPath() [#1717]( https://github.com/sofa-framework/sofa/pull/1717 ); - **[SofaCore]** Move definition Link::read() method to BaseLink::read() [#1736]( https://github.com/sofa-framework/sofa/pull/1736 ); - **[SofaCore]** Move function definition in cpp files [#2041]( https://github.com/sofa-framework/sofa/pull/2041 ); - **[SofaCore]** Move the streaming operator from .h to .cpp [#1751]( https://github.com/sofa-framework/sofa/pull/1751 ); - **[SofaCore]** Reduce the needs for include in Node.h [#1744]( https://github.com/sofa-framework/sofa/pull/1744 ); - **[SofaCore]** Remove empty file [#2204]( https://github.com/sofa-framework/sofa/pull/2204 ); - **[SofaCore_simutest]** Add tests for Link::CheckPath [#1714]( https://github.com/sofa-framework/sofa/pull/1714 ); - **[SofaCore_test]** Update the two failling tests so they match the new convention for TypeInfo [#1709]( https://github.com/sofa-framework/sofa/pull/1709 ); - **[SofaExplicitOdeSolver]** Mark Data as disabled [#2218]( https://github.com/sofa-framework/sofa/pull/2218 ); - [SofaExporter] Remove SofaBaseVisual dependency [#2039]( https://github.com/sofa-framework/sofa/pull/2039 ); - [SofaExporter] Removed duplicated header guard [#1954]( https://github.com/sofa-framework/sofa/pull/1954 ); - [SofaExporter] Update OBJExporter example [#1782]( https://github.com/sofa-framework/sofa/pull/1782 ); - **[SofaFramework/Sofa.Testing]** remove macro and move testing resources from SofaFramework [#2000]( https://github.com/sofa-framework/sofa/pull/2000 ); - **[SofaFramework]** Remove warnings (a lot) [#1876]( https://github.com/sofa-framework/sofa/pull/1876 ); - [SofaGeneralEngine] Add option in NearestPo,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:201637,test,tests,201637,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,tps://github.com/sofa-framework/sofa/pull/2759 ); - [SofaNG] Setup StateContainer [#2766]( https://github.com/sofa-framework/sofa/pull/2766 ); - [SofaNG] Setup Topology [#2612]( https://github.com/sofa-framework/sofa/pull/2612 ); - [SofaNG] Setup Visual [#2679]( https://github.com/sofa-framework/sofa/pull/2679 ); - [SofaNG] Setup cmake and add ODESolver [#2571]( https://github.com/sofa-framework/sofa/pull/2571 ). **Modules**; - [Sofa] Compilation without Compatibility mode [#2975]( https://github.com/sofa-framework/sofa/pull/2975 ); - [Component.Compat] Remove wrong mappings in compat layer [#2705]( https://github.com/sofa-framework/sofa/pull/2705 ); - [S.C.Engine.Generate] Convert and move MeshTetraStuffing as an engine [#2917]( https://github.com/sofa-framework/sofa/pull/2917 ); - [Sofa.Component.ODESolver] Gather tests + create Sofa.Component.ODESolver.Testing [#2650]( https://github.com/sofa-framework/sofa/pull/2650 ); - [Sofa.Component] Remove empty test projects and move/clean tests from SofaBoundaryCondition [#2991]( https://github.com/sofa-framework/sofa/pull/2991 ); - [Sofa.GUI] Clean CMake variables [#2974]( https://github.com/sofa-framework/sofa/pull/2974 ); - [Sofa.Helper] Refresh ComponentChange info list [#2986]( https://github.com/sofa-framework/sofa/pull/2986 ); - [Sofa.Helper] clean ComponentChange and add new category [#2565]( https://github.com/sofa-framework/sofa/pull/2565 ); - [SofaGraphComponent] Move scene checking ability into its own library [#2960]( https://github.com/sofa-framework/sofa/pull/2960 ). **Plugins / Projects**; - [PluginExample] Move the plugin to an external repository [#2519]( https://github.com/sofa-framework/sofa/pull/2519 ); - [ManifoldTopologies] Move the plugin to an external repository [#2623]( https://github.com/sofa-framework/sofa/pull/2623 ); - [OpenCTMPlugin] Move the plugin to an external repository [#2564]( https://github.com/sofa-framework/sofa/pull/2564 ); - [OptitrackNatNet] Move the plugin to an external repos,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:94669,test,test,94669,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['test'],"['test', 'tests']"
Testability,tps://github.com/sofa-framework/sofa/pull/3505) . **Modules**; - [MappedMatrix] MechanicalMatrixMapper: adds option [#3173](https://github.com/sofa-framework/sofa/pull/3173) ; - [Constraint.Lagrangian.Correction] LinearSolverCC: use FullVector API if detected [#3231](https://github.com/sofa-framework/sofa/pull/3231) ; - [Topology_test] Add tests in EdgeSetTopology_test to check topological changes [#3245](https://github.com/sofa-framework/sofa/pull/3245) ; - [SolidMechanics][Spring] Implement applyRemovedEdges for SpringForceField [#3269](https://github.com/sofa-framework/sofa/pull/3269) ; - [StateContainer] Optimize vector operations [#3284](https://github.com/sofa-framework/sofa/pull/3284) ; - [Mapping.Linear] Add support for 2d in SubsetMultiMapping [#3321](https://github.com/sofa-framework/sofa/pull/3321) ; - [Constraint.Lagrangian] Update BilateralInteractionConstraint to support topological changes [#3329](https://github.com/sofa-framework/sofa/pull/3329) ; - [all] Unit tests for getTemplateName in some components [#3380](https://github.com/sofa-framework/sofa/pull/3380) ; - [all] Implement getModuleComponentList for most modules [#3386](https://github.com/sofa-framework/sofa/pull/3386) ; - [Constraint.Lagrangian.Solver] Add events in the constraint solver pipeline [#3418](https://github.com/sofa-framework/sofa/pull/3418) ; - [FEM.Elastic] Speedup hexa drawing in force field [#3420](https://github.com/sofa-framework/sofa/pull/3420) ; - [Visual] Introduce TrailRenderer [#3471](https://github.com/sofa-framework/sofa/pull/3471) ; - [Solver.Direct] Unit tests on empty system [#3500](https://github.com/sofa-framework/sofa/pull/3500) ; - [MechanicalLoad] Move getValue call out of the loops [#3503](https://github.com/sofa-framework/sofa/pull/3503) . **Plugins / Projects**; - [SofaCUDA] Add ConstraintCorrection instantiation in CudaVec3f/CudaVec3f1 [#3004](https://github.com/sofa-framework/sofa/pull/3004) ; - [SofaCUDA] Make CudaConstantForceField compatible with Cuda,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:74803,test,tests,74803,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,tps://github.com/sofa-framework/sofa/pull/4245); - [MatrixAccumulator] adds 6x6 matrix handling [#4247](https://github.com/sofa-framework/sofa/pull/4247); - [LinearAlgebra] Speedup accumulation on BTDMatrix [#4248](https://github.com/sofa-framework/sofa/pull/4248); - [LinearAlgebra] Support 6x6 matrices accumulation in BaseMatrix [#4253](https://github.com/sofa-framework/sofa/pull/4253); - [example] Speedup TorusFall with parallel inverse product [#4256](https://github.com/sofa-framework/sofa/pull/4256); - [Helper] ADD option to cmake for advanced timer [#4259](https://github.com/sofa-framework/sofa/pull/4259); - [LinearSystem] Speedup computation of Jacobian matrices [#4317](https://github.com/sofa-framework/sofa/pull/4317); - [FEM.Elastic] Reference instead of a copy in TriangularFEMForceField [#4332](https://github.com/sofa-framework/sofa/pull/4332); - [All] Add GIT_REF option for external plugins [#4448](https://github.com/sofa-framework/sofa/pull/4448); - [Testing] Externalize (find_package() or fetch) googletest/gtest [#4471](https://github.com/sofa-framework/sofa/pull/4471). ### Bug Fixes; - [test] Fix unit test on RestShapeSpringsForceField [#3864](https://github.com/sofa-framework/sofa/pull/3864); - [test] Fix failing unit test [#3876](https://github.com/sofa-framework/sofa/pull/3876); - [Constraint.Lagrangian.Solver] LCPConstraintSolver: Fix when mu=0 (no friction) [#3905](https://github.com/sofa-framework/sofa/pull/3905); - [applications] remove unused variable [#3920](https://github.com/sofa-framework/sofa/pull/3920); - [Projective] Fix and test FixedPlaneConstraint [#3925](https://github.com/sofa-framework/sofa/pull/3925); - [MechanicalLoad] Restore addKToMatrix and test SurfacePressureForceField [#3935](https://github.com/sofa-framework/sofa/pull/3935); - [Core.Topology] Restore invalid ids in invalid containers [#3962](https://github.com/sofa-framework/sofa/pull/3962); - [Sofa.Component] FIX default color for TetrahedronFEMForceField [#3971](https://g,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:33052,Test,Testing,33052,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Testing']
Testability,"types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pull/202 ); - change the way createObject() handle its arguments to simplify scene writing + batch of tests [#286]( https://github.com/sofa-framework/sofa/pull/286 ); - [SofaTest]; - add Backtrace::autodump to all tests to ease debugging [#191]( https://github.com/sofa-framework/sofa/pull/191 ); - add automatic tests for updateForceMask [#209]( https://github.com/sofa-framework/sofa/pull/209 ); - add tests on PluginManager [#240]( https://github.com/sofa-framework/sofa/pull/240 ); - TestMessageHandler : new and robust implementation to connect msg_* message to test failure [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - update to use the new TestMessageHandler where msg_error generates test failures [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - add tests for TestMessageHandler [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - [SofaCUDA]; - FIX NVCC flags for debug build on Windows [#300]( https://github.com/sofa-framework/sofa/pull/300 ). ### Bug Fixes. **Modules**; - Warnings have been fixed [#229]( https://github.com/sofa-framework/sofa/pull/229 ); - [All]; - check that SofaPython is found before lauching the cmake sofa_set_python_directory command [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - use the cmake install DIRECTORY instead of FILES to preserve the files hierarchy when installing [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - fixing issue related to parsing attributes with atof/atoi [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - unify color datafield [#206]( https://github.com/sofa-framework/sofa/pull/206 ); - Fix CMakeLists bug on Sofa.ini and installedSofa.ini creation [#291]( https://github.com/sofa-framework/sofa/pull/291 ); - Fix a lot of failing tests (#271, #279);",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:330698,test,tests,330698,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Test', 'test']","['TestMessageHandler', 'tests']"
Testability,"ual/VisualLoop.cpp; ${SRC_ROOT}/visual/VisualManager.cpp; ${SRC_ROOT}/visual/VisualModel.cpp; ${SRC_ROOT}/visual/VisualParams.cpp; ${SRC_ROOT}/visual/VisualState.cpp; ). sofa_find_package(Sofa.Topology REQUIRED); sofa_find_package(Sofa.Helper REQUIRED); sofa_find_package(Sofa.DefaultType REQUIRED). # to move to core ?; option(SOFA_CORE_ENABLE_CRSMULTIMATRIXACCESSOR ""Use CompressedRowSparseMatrix to store global matrix (caution: it will lead to compile CRSMultiMatrixAcessor, which takes a considerable time to compile)"" OFF); mark_as_advanced(FORCE SOFA_CORE_ENABLE_CRSMULTIMATRIXACCESSOR); if(SOFA_CORE_ENABLE_CRSMULTIMATRIXACCESSOR); list(APPEND HEADER_FILES ${SRC_ROOT}/behavior/CRSMultiMatrixAccessor.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/behavior/CRSMultiMatrixAccessor.cpp); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.Topology Sofa.DefaultType). if(SOFA_BUILD_WITH_PCH_ENABLED); message(""Adding precompiled header for Sofa.Core""); target_precompile_headers(${PROJECT_NAME} PUBLIC ${SRC_ROOT}/objectmodel/BaseObject.h ${SRC_ROOT}/objectmodel/Data.h); endif(). if (NOT ""${CMAKE_CXX_COMPILER_ID}"" STREQUAL ""MSVC""); # Silence attribute warnings (for example, ignored already defined external template); target_compile_options(${PROJECT_NAME} PRIVATE -Wno-attributes); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_CORE_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_CORE_BUILD_TESTS); add_subdirectory(test); add_subdirectory(simutest); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:13917,Test,Tests,13917,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,4,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,ub.com/sofa-framework/sofa/pull/2300 ); - [SofaCore] Add const version of getMSState to Mass [#2293]( https://github.com/sofa-framework/sofa/pull/2293 ); - [SofaCore] Clearer message when template parameter is not compatible with current context [#2262]( https://github.com/sofa-framework/sofa/pull/2262 ); - [SofaCore] Required data msg now depends on existing default value [#2527]( https://github.com/sofa-framework/sofa/pull/2527 ); - [SofaDefaultType] Introduce test interface for BaseMatrix [#2280]( https://github.com/sofa-framework/sofa/pull/2280 ); - [SofaGeneralAnimationLoop] More optimization on MechanicalMatrixMapper [#2411]( https://github.com/sofa-framework/sofa/pull/2411 ); - [SofaGeneralAnimationLoop] Remove matrix compression [#2367]( https://github.com/sofa-framework/sofa/pull/2367 ); - [SofaGeneralDeformable] Add option to enable/disable spring display in TriangularBendingSprings [#2297]( https://github.com/sofa-framework/sofa/pull/2297 ); - [SofaGeneralSimpleFem] Update BeamFEMForceField topologyHander and add tests [#2382]( https://github.com/sofa-framework/sofa/pull/2382 ); - [SofaGraphComponent] Restore check of deprecated components [#2267]( https://github.com/sofa-framework/sofa/pull/2267 ); - [SofaGuiQt] Introduce expand/collapse buttons [#2322]( https://github.com/sofa-framework/sofa/pull/2322 ); - [SofaGuiQt] Introduce expand/collapse buttons in profiler [#2351]( https://github.com/sofa-framework/sofa/pull/2351 ); - [SofaGuiQt] Multiple selection of timers in the profiler [#2141]( https://github.com/sofa-framework/sofa/pull/2141 ); - [SofaGuiQt] UX: graph is easier to read [#2356]( https://github.com/sofa-framework/sofa/pull/2356 ); - [SofaHelper] Add a method getTrace() to BackTrace class. [#2341]( https://github.com/sofa-framework/sofa/pull/2341 ); - [SofaHelper] Factory key type can be other than std::string [#2259]( https://github.com/sofa-framework/sofa/pull/2259 ); - [SofaMiscFEM_test] Add class to test and compare TriangleFEM and Triangu,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:141696,test,tests,141696,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"ugin; Open a command line tool in the MyPlugin directory and use the; script utils/changeClassName.sh  in Unix and utils\changeClassName.bat  in Windows ; to replace TestPlugin; with MyPlugin in all; the file; names and their content:; On Unix:; utils/changeClassName.bash TestPlugin MyPlugin. On Windows:; utils\changeClassName.bat TestPlugin MyPlugin; cd examples; ..\utils\changeClassName.bat TestPlugin MyPlugin; cd ../doc/; ..\utils\changeClassName.bat TestPlugin MyPlugin  This can take some time !. At this point, you may want to add the plugin directory to svn.; You can also reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_TestPlugin ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_TestPlugin); {; usePlugin(TestPlugin) } . if your plugin depends on other plugins, edit file TestPlugin-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. TestPlugin.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initTestPlugin.h. a template of user documentation is found in TestPlugin.tex. Is should; be filled in for every component in the plugin, then compiled with your; favourite Latex distribution. The filename should match the name of the; component. ; the examples are in examples/; . The first one is TestPlugin.scn, and when; runSOFA; opens it, an html page pops; up, with a link to the plugin documentation. Intellectual; property and rights. Autho",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html:1513,Test,TestPlugin,1513,applications/plugins/SofaTest/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html,1,['Test'],['TestPlugin']
Testability,ulationCore]** Revert changes in #1927 [#2017]( https://github.com/sofa-framework/sofa/pull/2017 ); - [SofaSimulationGraph] Restore tests [#1988]( https://github.com/sofa-framework/sofa/pull/1988 ); - [SofaSimulationGraph] Reading links fail when owner is invalid [#2166]( https://github.com/sofa-framework/sofa/pull/2166 ); - [SofaSparseSolver] SparseLDLSolver optimizations [#1996]( https://github.com/sofa-framework/sofa/pull/1996 ); - [SofaTopologyMapping] Fix Edge2Quad condition [#2126]( https://github.com/sofa-framework/sofa/pull/2126 ); - [SofaUserInteraction] Fix Bug of removing topological element when a Hexa2TetraTopologicalMapping is in the scene [#1973]( https://github.com/sofa-framework/sofa/pull/1973 ). **Plugins / Projects**; - [CGALPlugin] Fix cgal drawings [#2206]( https://github.com/sofa-framework/sofa/pull/2206 ); - [CGALPlugin] Fix compilation errors related to SOFA.GL and types converted to DataTypes [#2065]( https://github.com/sofa-framework/sofa/pull/2065 ); - [CImgPlugin] Fix unit test [#2147]( https://github.com/sofa-framework/sofa/pull/2147 ); - [Geomagic] Fix Geomagic plugin compilation [#2033]( https://github.com/sofa-framework/sofa/pull/2033 ); - [Geomagic] Fix GeomagicVisualModel compilation [#1776]( https://github.com/sofa-framework/sofa/pull/1776 ); - [Geomagic] Fix compilation of GeomagicVisualModel due to change in MechanicalVisitor [#2113]( https://github.com/sofa-framework/sofa/pull/2113 ); - [LMConstraint] Fix collision model [#1819]( https://github.com/sofa-framework/sofa/pull/1819 ); - [LMConstraint] Fix unload [#1831]( https://github.com/sofa-framework/sofa/pull/1831 ); - [PreassembledMass] FIX typo in PreassembledMass.inl [#1833]( https://github.com/sofa-framework/sofa/pull/1833 ); - [SofaCUDA] Fix CudaFixedConstraint when indices are not contiguous [#1780]( https://github.com/sofa-framework/sofa/pull/1780 ); - [SofaCUDA] Ignore example scenes using SofaCUDA on CI [#2042]( https://github.com/sofa-framework/sofa/pull/2042 ); - [So,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:192129,test,test,192129,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,"ull/1266 ); - **[SofaSimulationCore]** Add a way to fill a multi vector from a base vector with a MechanicalOperations (mops). [#1248]( https://github.com/sofa-framework/sofa/pull/1248 ). **Plugins / Projects**; - [plugins] Fix warnings for option compilation [#1316]( https://github.com/sofa-framework/sofa/pull/1316 ); - [sofa-launcher] Change doc on sofa-launcher to markdown [#1311]( https://github.com/sofa-framework/sofa/pull/1311 ); - [SofaCUDA] Compilation without OpenGL [#1242]( https://github.com/sofa-framework/sofa/pull/1242 ). **Examples / Scenes**; - [examples] Add a scene illustrating ShewchukPCG [#1420]( https://github.com/sofa-framework/sofa/pull/1420 ). ### Bug Fixes. **Architecture**; - [CMake] Add SofaNonUniformFem to the dependencies of SofaMisc [#1384]( https://github.com/sofa-framework/sofa/pull/1384 ); - [SofaFramework/CMake] Create configuration type dir before copying lib [#1347]( https://github.com/sofa-framework/sofa/pull/1347 ); - [extlibs/gtest] Add character test in gtest paramName to allow dash character [#1265]( https://github.com/sofa-framework/sofa/pull/1265 ). **Modules**; - [All] Clean warnings for option config, again [#1339]( https://github.com/sofa-framework/sofa/pull/1339 ); - [All] Fix SOFA_LIBSUFFIX used in Debug by PluginManager [#1313]( https://github.com/sofa-framework/sofa/pull/1313 ); - [All] Overridden 'canCreate' methods should always log an error message when they fail [#1294]( https://github.com/sofa-framework/sofa/pull/1294 ); - **[SofaBaseTopology]** Fix GridTopology edge computation [#1323]( https://github.com/sofa-framework/sofa/pull/1323 ); - **[SofaBaseTopology]**[SofaExporter] Fix failing tests due to changes in topology [#1335]( https://github.com/sofa-framework/sofa/pull/1335 ); - [SofaConstraint] Fix test further to #1369 [#1386]( https://github.com/sofa-framework/sofa/pull/1386 ); - **[SofaEigen2Solver]** Fix CMake test on the version of Eigen [#1416]( https://github.com/sofa-framework/sofa/pull/1416 ); - **[S",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:233751,test,test,233751,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['test']
Testability,"ull/3546) ; - [GUI.Common] Cmake: Fix message when searching for Sofa.GL [#3549](https://github.com/sofa-framework/sofa/pull/3549) ; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid3D [#3557](https://github.com/sofa-framework/sofa/pull/3557); - [CollisionOBBCapsule] Fix generation of configuration file for installation [#3576](https://github.com/sofa-framework/sofa/pull/3576). **Examples / Scenes**; - [Examples] Fix & Clean ProjectToPlaneConstraint and RegularGridTopology_dimension scenes [#3453](https://github.com/sofa-framework/sofa/pull/3453) . ### Cleaning. **Architecture**; - [Core] Minor cleaning [#3176](https://github.com/sofa-framework/sofa/pull/3176) ; - [objectmodel] Remove redefinition of initData [#3190](https://github.com/sofa-framework/sofa/pull/3190) ; - [Sofa.Core] Remove shadow variables [#3212](https://github.com/sofa-framework/sofa/pull/3212) ; - [Sofa.Type] Constexpr Quaternion [#3221](https://github.com/sofa-framework/sofa/pull/3221) ; - [Helper] Reorganize accessors files and add tests [#3234](https://github.com/sofa-framework/sofa/pull/3234) ; - [Sofa.DefaultType] Constexpr VecTypes and RigidTypes [#3237](https://github.com/sofa-framework/sofa/pull/3237) ; - [Sofa.Core] Remove compilation warning because of un-used argument in BaseClass.h [#3243](https://github.com/sofa-framework/sofa/pull/3243) ; - [Topology] Remove Disabled and Deprecated method <= 22.06 [#3250](https://github.com/sofa-framework/sofa/pull/3250) ; - [Core][Type] Minor warning fixes [#3283](https://github.com/sofa-framework/sofa/pull/3283) ; - [Sofa.Defaulttype] Move Rigid{Coord, Deriv, Mass} from RigidTypes into their own headers [#3282](https://github.com/sofa-framework/sofa/pull/3282) ; - [Sofa.Core] Add missing #include [#3297](https://github.com/sofa-framework/sofa/pull/3297) ; - [Sofa.Core] Use pragma, single line namespaces and move forward declarations in fwd.h [#3303](https://github.com/sofa-framework/sofa/pull/3303) ; - [Sofa.Core] Remove the use of Link in",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:84044,test,tests,84044,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,ull/4247); - [LinearAlgebra] Speedup accumulation on BTDMatrix [#4248](https://github.com/sofa-framework/sofa/pull/4248); - [LinearAlgebra] Support 6x6 matrices accumulation in BaseMatrix [#4253](https://github.com/sofa-framework/sofa/pull/4253); - [example] Speedup TorusFall with parallel inverse product [#4256](https://github.com/sofa-framework/sofa/pull/4256); - [Helper] ADD option to cmake for advanced timer [#4259](https://github.com/sofa-framework/sofa/pull/4259); - [LinearSystem] Speedup computation of Jacobian matrices [#4317](https://github.com/sofa-framework/sofa/pull/4317); - [FEM.Elastic] Reference instead of a copy in TriangularFEMForceField [#4332](https://github.com/sofa-framework/sofa/pull/4332); - [All] Add GIT_REF option for external plugins [#4448](https://github.com/sofa-framework/sofa/pull/4448); - [Testing] Externalize (find_package() or fetch) googletest/gtest [#4471](https://github.com/sofa-framework/sofa/pull/4471). ### Bug Fixes; - [test] Fix unit test on RestShapeSpringsForceField [#3864](https://github.com/sofa-framework/sofa/pull/3864); - [test] Fix failing unit test [#3876](https://github.com/sofa-framework/sofa/pull/3876); - [Constraint.Lagrangian.Solver] LCPConstraintSolver: Fix when mu=0 (no friction) [#3905](https://github.com/sofa-framework/sofa/pull/3905); - [applications] remove unused variable [#3920](https://github.com/sofa-framework/sofa/pull/3920); - [Projective] Fix and test FixedPlaneConstraint [#3925](https://github.com/sofa-framework/sofa/pull/3925); - [MechanicalLoad] Restore addKToMatrix and test SurfacePressureForceField [#3935](https://github.com/sofa-framework/sofa/pull/3935); - [Core.Topology] Restore invalid ids in invalid containers [#3962](https://github.com/sofa-framework/sofa/pull/3962); - [Sofa.Component] FIX default color for TetrahedronFEMForceField [#3971](https://github.com/sofa-framework/sofa/pull/3971); - [image] Fix crash in case no parameters provided to TransferFunction [#3976](https://github.com/sofa,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:33193,test,test,33193,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['test'],['test']
Testability,v21.06.00]( https://github.com/sofa-framework/sofa/tree/v21.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.03...v21.06.00 ). ### SOFA-NG; **Architecture**; - [CMake] Macro replace dot with underscore for preprocessor defines [#1701]( https://github.com/sofa-framework/sofa/pull/1701 ). **Modules**; - **[Sofa.Type]** Remove stdtype subdirectory [#1946]( https://github.com/sofa-framework/sofa/pull/1946 ); - **[SofaBaseCollision]** Move OBB/Capsule-related intersections/detections/contacts to SofaMiscCollision [#2073]( https://github.com/sofa-framework/sofa/pull/2073 ); - **[SofaBaseCollision]** Remove dependencies on BaseIntTool [#2081]( https://github.com/sofa-framework/sofa/pull/2081 ); - **[SofaCore]** Clean dependencies to SimulationCore [#1928]( https://github.com/sofa-framework/sofa/pull/1928 ); - **[SofaFramework]** Create Sofa.Config module [#1674]( https://github.com/sofa-framework/sofa/pull/1674 ); - **[SofaFramework]** Create Sofa.Testing module [#1834]( https://github.com/sofa-framework/sofa/pull/1834 ); - **[SofaFramework]** Isolate OpenGL code into a single module (Sofa.GL) [#1649]( https://github.com/sofa-framework/sofa/pull/1649 ); - **[SofaFramework]** Rename modules (cmake) [#2001]( https://github.com/sofa-framework/sofa/pull/2001 ); - [SofaGui] Package SofaGui [#1719]( https://github.com/sofa-framework/sofa/pull/1719 ); - **[SofaHelper]** Clean dependencies to defaulttype [#1915]( https://github.com/sofa-framework/sofa/pull/1915 ); - **[SofaHelper]** Remove some SofaCore dependencies [#1810]( https://github.com/sofa-framework/sofa/pull/1810 ); - **[SofaKernel]** Create Sofa.Geometry and Sofa.Topology modules [#1912]( https://github.com/sofa-framework/sofa/pull/1912 ); - **[SofaKernel]** Create Sofa.Type module [#1555]( https://github.com/sofa-framework/sofa/pull/1555 ); - **[SofaKernel]** Package all modules of SofaFramework [#1990]( https://github.com/sofa-framework/sofa/pull/1990 ); - **[SofaKernel]** Port Mat from Defaul,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:168003,Test,Testing,168003,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Test'],['Testing']
Testability,veConstraintSet.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.inl; ${SRC_ROOT}/behavior/RotationFinder.h; ${SRC_ROOT}/behavior/StateAccessor.h; ${SRC_ROOT}/behavior/SingleMatrixAccessor.h; ${SRC_ROOT}/behavior/SingleStateAccessor.h; ${SRC_ROOT}/behavior/fwd.h; ${SRC_ROOT}/collision/BroadPhaseDetection.h; ${SRC_ROOT}/collision/CollisionAlgorithm.h; ${SRC_ROOT}/collision/CollisionGroupManager.h; ${SRC_ROOT}/collision/Contact.h; ${SRC_ROOT}/collision/ContactManager.h; ${SRC_ROOT}/collision/Detection.h; ${SRC_ROOT}/collision/DetectionOutput.h; ${SRC_ROOT}/collision/Intersection.h; ${SRC_ROOT}/collision/Intersection.inl; ${SRC_ROOT}/collision/IntersectorFactory.h; ${SRC_ROOT}/collision/NarrowPhaseDetection.h; ${SRC_ROOT}/collision/Pipeline.h; ${SRC_ROOT}/loader/BaseLoader.h; ${SRC_ROOT}/loader/ImageLoader.h; ${SRC_ROOT}/loader/MeshLoader.h; ${SRC_ROOT}/loader/SceneLoader.h; ${SRC_ROOT}/loader/VoxelLoader.h; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.h; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.h; ${SRC_ROOT}/objectmodel/AbstractDataLink.h; ${SRC_ROOT}/objectmodel/AspectPool.h; ${SRC_ROOT}/objectmodel/Base.h; ${SRC_ROOT}/objectmodel/BaseClass.h; ${SRC_ROOT}/objectmodel/BaseClassNameHelper.h; ${SRC_ROOT}/objectmodel/BaseContext.h; ${SRC_ROOT}/objectmodel/BaseData.h; ${SRC_ROOT}/objectmodel/BaseLink.h; ${SRC_ROOT}/objectmodel/BaseNode.h; ${SRC_ROOT}/objectmodel/BaseObject.h; ${SRC_ROOT}/objectmodel/BaseObjectDescription.h; ${SRC_ROOT}/objectmodel/ClassInfo.h; ${SRC_ROOT}/objectmodel/ComponentState.h; ${SRC_ROOT}/objectmodel/ConfigurationSetting.h; ${SRC_ROOT}/objectmodel/Context.h; ${SRC_ROOT}/objectmodel/ContextObject.h; ${SRC_ROOT}/objectmodel/DDGNode.h; ${SRC_ROOT}/objectmodel/Data.h; ${SRC_ROOT}/objectmodel/DataCallback.h; ${SRC_ROOT}/objectmodel/DataContentValue.h; ${SRC_ROOT}/objectmodel/DataFileName.h; ${SRC_ROOT}/objectmodel/DataFileNameVector.h; ${SRC_ROOT}/objectmodel/DataLink.h; ${SRC_ROOT}/objectmodel/DeprecatedData.h; ${SRC_ROOT}/objectm,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:4716,log,logging,4716,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['log'],['logging']
Testability,"work/sofa/compare/v20.12.00...v20.12.01 ). ### Improvements; **Modules**; - [SofaGui] Improve background v20.12 [#1758]( https://github.com/sofa-framework/sofa/pull/1758 ); - **[SofaHelper]** ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). **Plugins / Projects**; - [SofaPython] ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). ### Bug Fixes; **Architecture**; - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ). **Modules**; - [All] FIX build without SofaPython soft dependencies [#1829]( https://github.com/sofa-framework/sofa/pull/1829 ); - [All] Fix invalid Memory access in MechanicalObject and Compliant_test [#1849]( https://github.com/sofa-framework/sofa/pull/1849 ); - [All] Almost green dashboard [#1669]( https://github.com/sofa-framework/sofa/pull/1669 ); - **[SofaCore_test]** Update the two failling tests so they match the new convention for TypeInfo [#1709]( https://github.com/sofa-framework/sofa/pull/1709 ); - **[SofaDefaultType]** FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - **[SofaBaseMechanics]** fixes reinit of BarycentricMapping [#1815]( https://github.com/sofa-framework/sofa/pull/1815 ); - [SofaGuiCommon] Fix computationTimeSampling [#1698]( https://github.com/sofa-framework/sofa/pull/1698 ); - [SofaGuiCommon] fix BackgroundSetting [#1826]( https://github.com/sofa-framework/sofa/pull/1826 ); - [SofaGuiQt] ADD qt.conf.h for custom qt.conf loading at runtime [#1820]( https://github.com/sofa-framework/sofa/pull/1820 ); - [SofaGuiQt] Fix Export Graph option [#1785]( https://github.com/sofa-framework/sofa/pull/1785 ); - [SofaGuiQt] Clean QtGLViewer with key events [#1850]( https://github.com/sofa-framework/sofa/pull/1850 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test [#1823]( https://github.co",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:211551,test,tests,211551,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,"xamples/numpy_mapping.py; - added pure python forcefields, see examples/numpy_forcefield.py; - AssembledRigidRigidMapping autoresize; - geometric stiffness in python mappings; - insertMergeRigid is coherent with solid tags usage; - CompliantPseudoStaticSolver: avoiding an unnecessary propagation when the stopping criterion is the nb of iterations.; - visualization in DifferenceFromTargetMapping; - Frame.py: adding a function to force quaternion normalization (to avoid numerical drift); - added SimpleAnimationLoop; - adding RigidRestJointMapping to compute a joint between a rigid body's current position and its rest position.; - large compliances are considered as null stiffnesses; - Offset default to isMechanical=True; - python quaternion log; - added nlnscg acceleration; - pure python constraints; - .inl for python mappings; - adding Addition[Multi]Mapping; - implementing AssembledMultiMapping::applyDJT; - adding DotProduct[Multi]Mapping (with tests); - adding NormalizationMapping to map a 3d vector to its normalization; - adding ConstantAssembled[Multi]Mapping; - adding SafeDistanceMapping: a distance mapping that becomes a difference mapping for too small distances.; - adding SafeDistanceFromTargetMapping; - using the new SofaPython API; - SafeDistanceFromTargetMapping can now be ""safe"" by giving the edge directions when they are known; - adding the SofaCompliant python module (first module created outside of SofaPython!); - adding DotProductFromTargetMapping (with test); - adding RigidJointFromTargetMapping and RigidJointFromWorldFrameMapping; - add of complementary API to create deformable articulated systems; - adding NegativeUnilateralConstraint to guarantee negativeness; - adding PenaltyForceField and using it in penalty contact response; - add of two file from the SohusimDev plugin. - [image]; - API: Sampler.addMechanicalObject() more versatile; - API: refactor python API; - API: add addClosingVisual(); - add function in python API to retrieve perspective p",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:354338,test,tests,354338,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['test'],['tests']
Testability,y.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingCubeUtility.cpp; ${SRC_ROOT}/NameDecoder.cpp; ${SRC_ROOT}/OptionsGroup.cpp; ${SRC_ROOT}/ScopedAdvancedTimer.cpp; ${SRC_ROOT}/Polynomial_LD.cpp; ${SRC_ROOT}/RandomGenerator.cpp; ${SRC_ROOT}/StringUtils.cpp; ${SRC_R,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:3199,log,logging,3199,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,}/TriangleOctree.cpp; ${SRC_ROOT}/Utils.cpp; ${SRC_ROOT}/decompose.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/io/BaseFileAccess.cpp; ${SRC_ROOT}/io/FileAccess.cpp; ${SRC_ROOT}/io/File.cpp; ${SRC_ROOT}/io/Image.cpp; ${SRC_ROOT}/io/ImageDDS.cpp; ${SRC_ROOT}/io/ImageRAW.cpp; ${SRC_ROOT}/io/Mesh.cpp; ${SRC_ROOT}/io/MeshOBJ.cpp; ${SRC_ROOT}/io/MeshGmsh.cpp; ${SRC_ROOT}/io/MeshTopologyLoader.cpp; ${SRC_ROOT}/io/SphereLoader.cpp; ${SRC_ROOT}/io/STBImage.cpp; ${SRC_ROOT}/io/TriangleLoader.cpp; ${SRC_ROOT}/io/XspLoader.cpp; ${SRC_ROOT}/kdTree.cpp; ${SRC_ROOT}/system/DynamicLibrary.cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMA,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:5239,log,logging,5239,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,}/io/STBImage.h; ${SRC_ROOT}/io/TriangleLoader.h; ${SRC_ROOT}/kdTree.h; ${SRC_ROOT}/kdTree.inl; ${SRC_ROOT}/list.h; ${SRC_ROOT}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingC,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:2989,log,logging,2989,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Testability,}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingCubeUtility.cpp; ${SRC_ROOT}/NameDecoder.cpp; ${SRC_ROOT}/OptionsGroup.cpp; ${SRC_ROOT}/ScopedAdvancedTimer.cpp; ${SRC_ROOT}/P,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:3113,log,logging,3113,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['log'],['logging']
Usability," ### Cleanings. **Modules**; - [All]; - clean the consistency issues related to the readOnly flag [#115]( https://github.com/sofa-framework/sofa/pull/115 ); - Clean licenses [#139]( https://github.com/sofa-framework/sofa/pull/139 ); - [SofaKernel]; - clean DefaultPipeline.cpp/h (API BREAKING); - clean the attributes names in BoxROI (API BREAKING); - TetrahedronFEMForceField clean code [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - GridTopology : clean the code & factor the constructor [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - RegularGridTopology : clean the constructor's code & remove NDEBUG code [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - MechanicalObject : removal of code specific to the grid [#270]( https://github.com/sofa-framework/sofa/pull/270 ). - [SofaVolumetricData]; - Light: clean and strenghening the interface [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - DistanceGrid; - [SofaBoundaryCondition]; - ConstantForceField: clean to follow sofa guideline & fix the ""visible dependencies"" [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - ConstantForceField: replace the ""points"" attribute by ""indices"" with backward compatibility & deprecation message [#258]( https://github.com/sofa-framework/sofa/pull/258 ). **Plugins / Projects**; - [SceneCreator]; - clean with cosmetic changes and removed un-needed includes; - [SofaPython]; - cleaning data binding [#166]( https://github.com/sofa-framework/sofa/pull/166 ). ### Moved files. - The module handling HighOrderTopologies moved into a [separate repository]( https://github.com/sofa-framework/plugin.HighOrder) [#222](https://github.com/sofa-framework/sofa/pull/222 ). ____________________________________________________________. ## [v16.12]( https://github.com/sofa-framework/sofa/tree/v16.12 ). **Last commit: on Jan 08, 2017** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v16.08...v16.12 ). ### Environment; - **C++11 is now mandatory**",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:335720,guid,guideline,335720,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['guid'],['guideline']
Usability, ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/CholeskySolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/CholeskySolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenDirectSparseSolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenDirectSparseSolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSolverFactory.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSimplicialLDLT.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSimplicialLLT.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSparseLU.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSparseQR.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/MatrixLinearSystem[BTDMatrix].h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/PrecomputedLinearSolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/PrecomputedLinearSolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SVDLinearSolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SVDLinearSolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SimplicialLDLTTraits.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SimplicialLLTTraits.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseCholeskySolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseCholeskySolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseCommon.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseLDLSolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseLDLSolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseLDLSolverImpl.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseLUSolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseLUSolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseLUTraits.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseQRTraits.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/TypedMatrixLinearSystem[BTDMatrix].h; ). set(SOURCE_FILES; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/AsyncSparseLDLSolver.c,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/Direct/CMakeLists.txt:1606,Simpl,SimplicialLDLTTraits,1606,Sofa/Component/LinearSolver/Direct/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/Direct/CMakeLists.txt,1,['Simpl'],['SimplicialLDLTTraits']
Usability, ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/CenterOfMassMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/CenterOfMassMulti2Mapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/CenterOfMassMultiMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/DeformableOnRigidFrameMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMultiMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LineSetSkinningMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointTopologicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedHexaTopologicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraTopologicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SkinningMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMultiMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/TubularMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/VoidMapping.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Grid REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Dynamic); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Grid). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROP,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt:7741,Simpl,SimpleTesselatedTetraTopologicalMapping,7741,Sofa/Component/Mapping/Linear/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt,1,['Simpl'],['SimpleTesselatedTetraTopologicalMapping']
Usability," - [Compliant]; - clean python. ### Cleanings. - clean the compilation when SOFA_NO_OPENGL flag is activated; - clean the config.h (SOFAGUI_HAVE_QWT); - remove boost library links (includes still required). boost chrono is not required anymore.; - remove unused POINT_DATA_VECTOR_ACCESS macro; - make miniflowVR build optional (default OFF); - [SofaKernel]; - remove last direct opengl calls in modules; - add deprecation message on MechanicalObject attributes; - [SofaBaseVisual] clean BaseCamera: remove direct opengl calls; - [SofaHaptics] boost-thread is not used any more, clean cmake; - [SofaGeneralLoader] STLLoader: fixing binary loading in debug and cleaning examples; - [SofaPython]; - remove ScriptEnvironment i.e. automatic initialization of Node; - Node::isInitialized(), not used anymore; - [Flexible]; - clean relativeStrainMapping. ### Moved files. - move CImg from extlibs to image plugin extlibs. ### Documentation. - Add the contribution and guidelines : **CONTRIBUTING.md** and **GUIDELINES.md**; - Add the configuration required (ex: C++, compiler versions); - Add a page to use SOFA in Matlab; - Improve Logger documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/sofa-framework/sofa]( https://github.com/sofa-framework/sofa ); - creation of a RigidScale plugin: implementing mappings, especially allowing to get the DOF with Rigid+Scale type, while reusing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing to integrate a Leap in your SOFA simulation; - add the DrawTool: DrawTool is an interface, describing an API to display primitives on screen. For now, only the OpenGL (fixed-pipeline version) implementation has been",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:340701,GUID,GUIDELINES,340701,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['GUID'],['GUIDELINES']
Usability," OglTexture: fix possible memory leaks; - [Compliant]; - clean python. ### Cleanings. - clean the compilation when SOFA_NO_OPENGL flag is activated; - clean the config.h (SOFAGUI_HAVE_QWT); - remove boost library links (includes still required). boost chrono is not required anymore.; - remove unused POINT_DATA_VECTOR_ACCESS macro; - make miniflowVR build optional (default OFF); - [SofaKernel]; - remove last direct opengl calls in modules; - add deprecation message on MechanicalObject attributes; - [SofaBaseVisual] clean BaseCamera: remove direct opengl calls; - [SofaHaptics] boost-thread is not used any more, clean cmake; - [SofaGeneralLoader] STLLoader: fixing binary loading in debug and cleaning examples; - [SofaPython]; - remove ScriptEnvironment i.e. automatic initialization of Node; - Node::isInitialized(), not used anymore; - [Flexible]; - clean relativeStrainMapping. ### Moved files. - move CImg from extlibs to image plugin extlibs. ### Documentation. - Add the contribution and guidelines : **CONTRIBUTING.md** and **GUIDELINES.md**; - Add the configuration required (ex: C++, compiler versions); - Add a page to use SOFA in Matlab; - Improve Logger documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/sofa-framework/sofa]( https://github.com/sofa-framework/sofa ); - creation of a RigidScale plugin: implementing mappings, especially allowing to get the DOF with Rigid+Scale type, while reusing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing to integrate a Leap in your SOFA simulation; - add the DrawTool: DrawTool is an interface, describing an API to display primitives on screen. For now, only the OpenGL (fixed-pi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:340662,guid,guidelines,340662,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['guid'],['guidelines']
Usability," cleaning of CompliantImplicitSolver. ### Improvements. - test examples are now running (on Jenkins for the Continuous Integration); - Add unit test for quaternions; - Improving default mouse manipulation while picking a dof; - MouseWheel events now propagated. - Minor improvements; - runSofa: force loading the SofaPython plugin if existing; - runSofa: adding clang-style formatting (option '-z clang'); - MechanicalObject: adding more visualisation colors for Rigids; - SofaPluginManager: Clear description and components when removing last plugin; - CMake: removing ""-Wno-deprecated-register"" compiler option that is only known by a few compilers; - Collision: add function setConstraintId in BaseConstraintSet; - SPtr: up to 10 parameters in constructor; - Add function in EigenBaseSparseMatrix in order to use eigen matrices with async solvers; - Add CUSPARSESolver in SofaCudaSolversPlugin, this solver uses cusparse library to solve a sparse triangular system on the GPU; - MeshBoundaryROI: allows specifying an input subset; - ColorMap: with face culling enabled; - ColorMap: adding a scale for the legend range values; - ImageViewer: adding new boolean data field displaying meshes directly on the slices; - ProjectionToPlaneMultiMapping: adding a projection factor to perform tricky stuff such as planar symmetry; - ProjectionToTargetPlaneMapping: adding a factor to perform planar symmetry for example; - DataDisplay: can now be displayed in wireframe; - DataDisplay: display used topology; - DataDisplay: fix and improving shading a bit; - SofaEngine: add selectLabelROI engine; - SofaEngine: add SelectConnectedLabelsROI; - SofaBoundaryCondition: it is now possible to hide fixedconstraint (default to shown as before); - Mat.h: adding tensor product between vectors; - ForceField: adding const getMState(); - VolumetricRendering: Initialize tetra/hexa Data<> (to be able to link them as data in scenes); - SofaBaseVisual: Add modelview and projection matrices as data output; - FrameBuf",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:343352,Clear,Clear,343352,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Clear'],['Clear']
Usability," documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/sofa-framework/sofa]( https://github.com/sofa-framework/sofa ); - creation of a RigidScale plugin: implementing mappings, especially allowing to get the DOF with Rigid+Scale type, while reusing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing to integrate a Leap in your SOFA simulation; - add the DrawTool: DrawTool is an interface, describing an API to display primitives on screen. For now, only the OpenGL (fixed-pipeline version) implementation has been made.; - add a Logger; - add the diffusion effect in SOFA (heat transfer); - SOFA_USE_MASK compilation variable to activate or de-activate the masks in SOFA; - DataTracker: simple and elegant way to track Data in Engine; - extlibs: update cimg to version 1.7.3; - Add guidelines for contributions in CONTRIBUTING.md. ### Moved files. - Kernel modules of SOFA (SofaFramework, SofaBase, SofaCommon and SofaSimulation) have been moved to one common module SofaKernel, located at _sofa_root/SofaKernel_. SofaKernel is a pure LGPL module.; - code in _sofa_root/modules/sofa/simulation/_ has been splitted into three modules of SofaKernel: SofaSimulationCommon, SofaSimulationTree, SofaSimulationGraph; - MOVE the SofaPardiso module as a plugin; - Move OglTetrahedralModel into a new plugin called VolumetricRendering. - Minor moves; - Move ColorMap code to helper and let (Ogl)ColorMap from SofaOpenGLVisual doing OpenGL stuff; - Move TorsionForceField and ComplementaryROI into SOFA (those two components where in a deprecated repository _sofa_root/modules/sofa/components/_). - [Compliant]; - moving propagate_constraint_force_visitor",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:341875,simpl,simple,341875,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['simpl'],['simple']
Usability," instead [#1918]( https://github.com/sofa-framework/sofa/pull/1918 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test [#1823]( https://github.com/sofa-framework/sofa/pull/1823 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test (2) [#1825]( https://github.com/sofa-framework/sofa/pull/1825 ); - **[SofaHelper]** Fix AdvandedTimer test with end() [#1781]( https://github.com/sofa-framework/sofa/pull/1781 ); - **[SofaHelper]** Fix compilation in kdtree [#1942]( https://github.com/sofa-framework/sofa/pull/1942 ); - **[SofaHelper]** Fix out of bounds error [#1868]( https://github.com/sofa-framework/sofa/pull/1868 ); - **[SofaHelper]** Fix the use of Read/WriteAccessorVector that is too permisive (in accessor.h) [#1900]( https://github.com/sofa-framework/sofa/pull/1900 ); - **[SofaHelper][SofaBoundaryCondition]** Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - **[SofaKernel]** Fix SimpleApi forward declaration of BaseObject and relocatable of Sofa.GL [#1760]( https://github.com/sofa-framework/sofa/pull/1760 ); - **[SofaKernel]** Removing double load() in Loaders [#2094]( https://github.com/sofa-framework/sofa/pull/2094 ); - [SofaLoader] Fix MeshObjLoader material parsing by using the proper locale. [#2200]( https://github.com/sofa-framework/sofa/pull/2200 ); - [SofaLoader] FIX Circular dependency in the update of MeshObjLoader [#2201]( https://github.com/sofa-framework/sofa/pull/2201 ); - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ); - [SofaMeshCollision] Fix: windows debug linkage of class EmptyFilter [#1839]( https://github.com/sofa-framework/sofa/pull/1839 ); - [SofaMiscCollision] Contact response order [#2134]( https://github.com/sofa-framework/sofa/pull/2134 ); - [SofaMiscCollision] Fix config.in cmake file for export [#2052]( https://github.com/sofa-framework/sofa/pull/2052 ); - [SofaMiscFEM] Min",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:188366,Simpl,SimpleApi,188366,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Simpl'],['SimpleApi']
Usability, of Multi2Mapping_test; - add DistanceMapping_test. - [SofaPython]; - logger: cleaning emitter; - sml.Mesh: adding load function; - sml: python set for tags is created by objects themselves; - sml: add tag to JointGeneric; - sml: add the printLog flag; - sml: setup units in BaseScene for all sml Scene class; - sml: mesh has a clear id; - sml:insertVisual: bug fix for solid with multiple meshes (just impacting the Display scene); - sml: handy constructor for Dof creation; - sml: like <mesh> <image> can be defined in <solid>; - sml: add a utility function: look into the valueByTag dictionary for a tag contained in tags; - sml: adding a warning if a vertex group is empty; - sml: can have offsets under solids; - sml: remove deprecated setTagFromTag() method; - API: add subsetFromDeformables function; - binding Node::isInitialized; - binding loadPythonSceneWithArguments; - adding a binding to get the pointer of a Data (with its dimensions and type); - adding binding of BaseMapping::getJs (as dense matrices for now); - adding python functions to convert a Data in a numpy array with shared memory; - adding a visitor to set all mstates as non pickable (such as picking will only be performed with collision models); - add tags to mesh groups; - add a groupsByTag dict to easily iterate over groups knowing a tag; - add of SceneDataIO to save and load the current state of a simulation; - add of the method getDataFields; - adding automatically tested examples; - add tags to MeshAttributes; - add a helper PythonScriptFunction_call and PythonScriptFunction_callNoResult to call a python controller function from c++ code; - PythonScriptHelper -> PythonScriptControllerHelper: PythonScriptHelper: add convertion for float and std::string; - Add the timingEnabled attribute to the PythonScriptController to control if the script is gather timing statistics; - adding python module to load .obj files; - adding BaseContext_getObject_noWarning that returns None w/o warning if the object is not,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:347678,clear,clear,347678,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['clear'],['clear']
Usability," the PythonFactory, so more specific cases can be added outside of the plugin SofaPython.; - adding Node::addObject_noWarning not to print a warning when adding an object to an already initialized node; - add of a method which compute quaternion from a line define by a director vector; - add of few new features to save and load the current state of simulation. - [Flexible]; - adding FlexibleCorotationalMeshFEMForceField (meta-forcefield). Not optimized but working; - add of RigidScale mapping in addition to their tests and examples; - HexaFEM comparison: each method has its own solver and uses the same decomposition so the only difference came from the deformation tensor used to find the rotation.; - Flexible: WIP adding a meta-forcefield to compute regular corotational FEM. The idea is to use Flexible's components internally without adding extra computation neither extra memory; - API: add strain offseting option; - API: strainMappings as data members; - API: use branching images for mass computation; - API: make AffineMass, ShapeFunction, Behavior work in more cases; - API: make Behavior work in simple cases with no label image; - materials: removed checking for changed parameters at each step.; - add example showing how to better handle partially filled elements using fine volumes; - optimizing FlexibleCorotationalMeshFEMForceField by preassembling constant sub-graph; - refactoring of MassFromDensity; - adding a warning when creating a UniformMass on Affine/Quadratic frames.; - add FEMDof class to python API; - DeformationMapping: print a warning if a child particle has no parent; - adding HEML implementation of St Venant-Kirchhoff materials (for tetrahedra).; - if correct weights are given in mapping as input data, use it (even if a shapefunction is found); - use sout for logging; - compute tangents for VisualModel loaded using loadVisual python function; - transformEngine for Affine frames. - [Compliant]; - sml: export of meshes; - sml: the solids tags to be si",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:351325,simpl,simple,351325,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['simpl'],['simple']
Usability,"# Code style guide. ## General rules. ### Base rules; The base rules are in Google C++ Style Guide: https://google.github.io/styleguide/cppguide.html ; All rules below **replace** the corresponding base rules. ; For any subject not mentionned below, please refer to the base. ### Commit message; A correct commit message must therefore be structured as: ; `[NAME_OF_MODULE_OR_PLUGIN] ACTION message` ; where ACTION includes ADD, REMOVE, FIX, CLEAN, REVERT. ; Example: `[SofaKernel] ADD test for the mass conservation in UniformMass` . ### Naming; Identifiers must respect the following conventions:. - [N1] Class names are in UpperCamelCase; - [N2] Function names are in lowerCamelCase(); - [N3] Namespaces names are in lowercase; - [N4] Variables names are in lowerCamelCase and must express their use more than their type. **Exceptions**: mathematical objects like `Matrix M`, local iterators variables like `i`, `j`, `k` and usual symbols like `x` for positions or `v` for velocities.; - [N5] Data member variables names must begin with `d_`; - [N6] Link member variables names (e.g. SingleLink) must begin with `l_`; - [N7] Other member variables names must begin with `m_ `(exception: this is not mandatory for PODs as well as public attributes); - [N8] Names for booleans variables must answer a question: `m_isRed`, `m_hasName`; - [N9] C++ files must must have the extension .h, .cpp, or .inl; - [N10] Files that define a class should have the same name as the class and should contain only one class.; - [N11] Each library name should be prefixed with `Sofa`. ### Formatting; - Special characters like TAB and page break must be avoided.; - Indentation must use **4 spaces** everywhere (C++ and Python), but there must be no indentation for namespaces; - Braces use the **Allman style**: the opening brace associated with a control statement is on the next line, indented to the same level as the control statement, and statements within the braces are indented to the next level. ```cpp; whil",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:13,guid,guide,13,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/DeformableOnRigidFrameMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMultiMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMultiMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LinearMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LineSetSkinningMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LineSetSkinningMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedHexaTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SkinningMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SkinningMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMultiMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMultiMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/TubularMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/TubularMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/VoidMap,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt:4383,Simpl,SimpleTesselatedHexaTopologicalMapping,4383,Sofa/Component/Mapping/Linear/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt,1,['Simpl'],['SimpleTesselatedHexaTopologicalMapping']
Usability,); - **[SofaFramework]** CLEAN: removing unused PS3 files [#851]( https://github.com/sofa-framework/sofa/pull/851 ); - [SofaGeneralSimpleFEM] Clean BeamFemForceField [#846]( https://github.com/sofa-framework/sofa/pull/846 ); - **[SofaHelper]** Change drawTriangle and drawQuad with internal functions [#813]( https://github.com/sofa-framework/sofa/pull/813 ); - **[SofaHelper]** Update ComponentChange with removed Components [#905]( https://github.com/sofa-framework/sofa/pull/905 ); - **[SofaKernel]** Remove commented code since years in SofaBaseMechanics [#733]( https://github.com/sofa-framework/sofa/pull/733 ); - **[SofaKernel]** Move ScriptEvent class from SofaPython to core/objectModel [#764]( https://github.com/sofa-framework/sofa/pull/764 ); - [SofaMiscFem] Clean BaseMaterial::handleTopologyChange [#817]( https://github.com/sofa-framework/sofa/pull/817 ); - [SofaMiscMapping] Clean DeformableOnRigidFrameMapping [#848]( https://github.com/sofa-framework/sofa/pull/848 ); - **[SofaSimpleFem]** Stc clean simplefem [#826]( https://github.com/sofa-framework/sofa/pull/826 ). **Plugins / Projects**; - [Multithreading] Move TaskScheduler files from MultiThreading plugin to SofaKernel [#805]( https://github.com/sofa-framework/sofa/pull/805 ). **Examples / Scenes**; - [examples] Remove scenes about deprecated components [#922]( https://github.com/sofa-framework/sofa/pull/922 ). ____________________________________________________________. ## [v18.06]( https://github.com/sofa-framework/sofa/tree/v18.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v17.12...v18.06 ). ### Deprecated. **Will be removed in v18.06**; - **[SofaHelper]** Utils::getPluginDirectory() [#518]( https://github.com/sofa-framework/sofa/pull/518) - Use PluginRepository.getFirstPath( ) instead. **Will be removed in v18.12**; - [SofaBoundaryCondition] BuoyantForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaBoundaryCondition] VaccumSphereForceField [#457]( https://gith,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:289804,simpl,simplefem,289804,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['simpl'],['simplefem']
Usability,- **[SofaHelper]** Remove SofaSimulationCore dependency from AdvancedTimer [#1770]( https://github.com/sofa-framework/sofa/pull/1770 ); - **[SofaHelper]** Replace boost::shared_ptr for std::shared_ptr [#1901]( https://github.com/sofa-framework/sofa/pull/1901 ); - **[SofaHelper]** remove stream operator<< in accessor [#1808]( https://github.com/sofa-framework/sofa/pull/1808 ); - [SofaMiscCollision] Clean options [#2170]( https://github.com/sofa-framework/sofa/pull/2170 ); - [SofaMiscCollision] Fix multiple bugs in group manager [#2076]( https://github.com/sofa-framework/sofa/pull/2076 ); - [SofaMiscCollision] Move OBB/Capsule (and related Intr* Code) [#2168]( https://github.com/sofa-framework/sofa/pull/2168 ); - [SofaMiscMapping] Factorize code to remove duplicated struct [#1957]( https://github.com/sofa-framework/sofa/pull/1957 ); - **[SofaSimulationCore]** Move CpuTask class into its own file [#1993]( https://github.com/sofa-framework/sofa/pull/1993 ); - **[SofaSimulationCore]** Simplify repetitive code in BaseMechanicalVisitor [#2125]( https://github.com/sofa-framework/sofa/pull/2125 ); - **[SofaSimulationGraph]** Remove dead-end experiment in SimpleApi.h [#1845]( https://github.com/sofa-framework/sofa/pull/1845 ); - [SofaTopologyMapping] adds ellipse feature to Edge2QuadTopologyMapping [#1861]( https://github.com/sofa-framework/sofa/pull/1861 ). **Plugins / Projects**; - [CGALPlugin] new features [#2124]( https://github.com/sofa-framework/sofa/pull/2124 ). ### Improvements; **Architecture**; - [CMake] Speedup configure step [#1837]( https://github.com/sofa-framework/sofa/pull/1837 ); - [CMake] ADD option to fetch pull-request commits in ExternalProject [#1961]( https://github.com/sofa-framework/sofa/pull/1961 ); - [CMake] ADD option to enable/disable compatibility layer [#2216]( https://github.com/sofa-framework/sofa/pull/2216 ). **Modules**; - **[SofaBaseCollision]** BVH narrow phase [#2043]( https://github.com/sofa-framework/sofa/pull/2043 ); - **[SofaBaseColli,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:175681,Simpl,Simplify,175681,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Simpl'],['Simplify']
Usability,"- [examples] Introduce examples for DistanceMapping and SquareDistanceMapping [#3756](https://github.com/sofa-framework/sofa/pull/3756). ### Bug Fixes. **Architecture**; - [Simulation.Graph] SimpleAPI: Remove reference to Node argument in createChild() [#3620](https://github.com/sofa-framework/sofa/pull/3620) ; - [defaulttype] Fix cuda template instantiation [#3646](https://github.com/sofa-framework/sofa/pull/3646); - [Core] Fix UB (misaligned address) when comparing string [#3664](https://github.com/sofa-framework/sofa/pull/3664) ; - [Helper, GL] Fix various memleaks [#3671](https://github.com/sofa-framework/sofa/pull/3671) ; - [Helper] ArgumentParser: Fix map insertion when parsing more than once [#3672](https://github.com/sofa-framework/sofa/pull/3672) ; - [Defaulttype] Add generic precision aliases for Mat templates [#3675](https://github.com/sofa-framework/sofa/pull/3675) ; - [Config] Disable SOFA_EXTERN_TEMPLATE [#3678](https://github.com/sofa-framework/sofa/pull/3678) ; - [all] Simple robustification [#3685](https://github.com/sofa-framework/sofa/pull/3685) ; - [Helper] Fix FileRepository::relativeToPath [#3693](https://github.com/sofa-framework/sofa/pull/3693) ; - [Core] Fix MSVC warning in Link [#3763](https://github.com/sofa-framework/sofa/pull/3763) ; - [Core] Access cumulative sum of VecIds through proxy class [#3918](https://github.com/sofa-framework/sofa/pull/3918) . **Modules**; - [GUI] Fix CMake Packaging [#3595](https://github.com/sofa-framework/sofa/pull/3595) ; - [Component.Engine] Replace some explicit instanciations on double with SReal [#3629](https://github.com/sofa-framework/sofa/pull/3629) ; - [Topology.Container.Grid] RegularGrid: Fix rounding errors with SReal=float [#3636](https://github.com/sofa-framework/sofa/pull/3636); - [Collision.Geometry] Fix transparency while displaying the Bounding Collision Cubemodel [#3658](https://github.com/sofa-framework/sofa/pull/3658) ; - [MechanicalLoad] Fix ConstantForceField when no force given [#3670](",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:55992,Simpl,Simple,55992,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Simpl'],['Simple']
Usability,-framework/sofa/pull/1082 ); - **[SofaSimulationCore]** FIX CollisionVisitor::processCollisionPipeline [#962]( https://github.com/sofa-framework/sofa/pull/962 ); - [SofaTests] Fix small bugs in the Multi2Mapping_test [#1078]( https://github.com/sofa-framework/sofa/pull/1078 ). **Plugins / Projects**; - [CImgPlugin] FIX: messed up package prefix in CImg [#921]( https://github.com/sofa-framework/sofa/pull/921 ); - [Geomagic] FIX compilation error in Geomagic plugin with removal of SOFA_FLOAT/DOUBLE [#898]( https://github.com/sofa-framework/sofa/pull/898 ); - [image] Fix image_gui plugin loading [#1015]( https://github.com/sofa-framework/sofa/pull/1015 ); - [image] Message API is needed even if no python [#1068]( https://github.com/sofa-framework/sofa/pull/1068 ); - [runSofa] FIX the opening of ModifyObject view. [#1010]( https://github.com/sofa-framework/sofa/pull/1010 ); - [runSofa] Fix runSofa -a option with a gui. [#1058]( https://github.com/sofa-framework/sofa/pull/1058 ); - [runSofa] User experience fixes in the ModifyData view. [#1011]( https://github.com/sofa-framework/sofa/pull/1011 ); - [Sensable] Fix the compilation of the Sensable plugin [#1019]( https://github.com/sofa-framework/sofa/pull/1019 ); - [SofaCUDA] Compilation error fix (CudaStandardTetrahedralFEMForceField.cu) [#991]( https://github.com/sofa-framework/sofa/pull/991 ); - [SofaCUDA] Fix several Cuda example scenes [#1000]( https://github.com/sofa-framework/sofa/pull/1000 ); - [SofaCUDA] Fix windows compilation. [#966]( https://github.com/sofa-framework/sofa/pull/966 ); - [SofaPython] FIX allow the derivTypeFromParentValue to work with node. [#984]( https://github.com/sofa-framework/sofa/pull/984 ); - [SofaPython] FIX example broken by PR#459 [#1020]( https://github.com/sofa-framework/sofa/pull/1020 ); - [SofaPython] FIX the broken Binding_Data::setValue() [#1006]( https://github.com/sofa-framework/sofa/pull/1006 ); - [SofaPython] Fix duplicate symbol [#1036]( https://github.com/sofa-framework/sof,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:269761,User experience,User experience,269761,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['User experience'],['User experience']
Usability,". Collision model of the Tongue; Description:. 			A node ""TongueCollisionModel"" is added to take the collision with the tongue into account.; 			We could use a different mesh (less detailed for example) of the tongue for the collision model, or (like here) we can use only the surface of the volumetric mesh used in the deformable model. ; 			This is done via a topological mapping (see Topological mapping tutorial to learn more).; 		. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_08.html:419,learn,learn,419,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_08.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_08.html,1,['learn'],['learn']
Usability,". Deformable model of the Tongue; Description:. 		We add a deformable model to the tongue. It means the tongue will move and deform depending on the forces applied on it.; 		To do this, we use the component TetrahedralCorotanionalFEMForceField. It uses finite element methods to compute the internal forces.; 		; Key points:. 			To add a deformable model in the scene, we need to create a MechanicalObject. All the forces and displacement are computed using an Euler implicit solver (EulerImplicitSolver) for time integration and a Conjugate Gradient linear solver (CGLinearSolver) to solve a linear system. ; 			We also need a container to store the tetrahedra (TetrahedronSetTopologyContainer). With all these components, we can add a force field to compute internal forces (TetrahedralCorotanionalFEMForceField).; 		. 			The visual model of the tongue is updated because of a mapping (BarycentricMapping) between the deformable model and the visual.; 		; Note:. 			In the current scene, the visual model of the tongue is not displayed, but the deformable model is displayed with the blue tetrahedra.; 		. 			The tetrahedric mesh of the tongue has been generated using the CGAL plugin in SOFA. Read this annex to learn more about mesh generation using CGAL plugin.; 		. 			The mass choosen for the deformable model of the tongue is a DiagonalMass. It has been choosen to show the diversity of masses available in SOFA. This kind of mass computes the mass matrix with non uniform diagonal values, depending on the tetrahedra size.; 		. Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_07.html:1215,learn,learn,1215,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_07.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_07.html,1,['learn'],['learn']
Usability,". ForceField FEM on Tetrahedra. Description:; 		; 			The TetrahedronFEMForceField component is used to model an object by the Finite Element Method on a mesh composed tetrahedron.; 			There are three main methods of computation: ; 			; small : the simplest method using linear formulation in case of small displacement; large : the corotational formulation allowing large displacement; polar : the polar decomposition formulation allowing large displacement. 				Trivial user can use at least two main parameters related to the linear elasticity property of the modeled object; 			. Young's modulus; Poisson's ratio. 				By adjusting these coefficients, one can understand its relation with the mechanical behavior of objects and then ; 				can choose the appropriated parameters. There are also other parameters for advanced users :; 			. localStiffnessFactor; updateStiffnessMatrix; computeGlobalMatrix; etc. 				By double-clicking on the component, users can see all the parameters of the component. ; 			; Key Points:. TetrahedronFEMForceField works only with a tetrahedra mesh; Technical documentation [Nesme, Matthieu and Payan, Yohan and Faure, Francois] , Efficient Physically Plausible Finite Elements .2005. Results:. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/ForceFields/TutorialTetrahedronFEMForceField.html:248,simpl,simplest,248,examples/Tutorials/ForceFields/TutorialTetrahedronFEMForceField.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/ForceFields/TutorialTetrahedronFEMForceField.html,1,['simpl'],['simplest']
Usability,". Get your bearings in SOFA; Description:. 		To get an idea of the size of the objects in the scene, we can add a simple visual grid.; 		. 		In this tutorial, we added the component OglGrid. It display a simple grid on a choosen plane. By default, the grid is displayed on the plane xy.; 		If we know the size of the grid (10 units in the example), we can have a visual hint on the size of the liver.; 		It also gives the orientation of the liver compared to the grid.; 		. Previous; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Getyourbearings/1_getyourbearings.html:114,simpl,simple,114,examples/Tutorials/StepByStep/Getyourbearings/1_getyourbearings.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Getyourbearings/1_getyourbearings.html,2,['simpl'],['simple']
Usability,". Instrument visual model; Description:. 		In this scene, we build the basics for a moving object. . 		; Key points:. First, we put a gravity in the whole scene with the Gravity component.; We set the instrument as a MechanicalObject. It describes the state of the particles of the object.; To compute the states at each time step, we need a time integrator, like the EulerImplicitSolver.; We need a linear solver, like CGLinearSolver, to solve the linear system generated with our implicit solver.; We finally add a mass to the object with the UniformMass component. Note:; The gravity can be set in a node with the vec3d argument gravity instead of with a component.; See other tutorials to learn more about time integration.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_03.html:693,learn,learn,693,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_03.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_03.html,1,['learn'],['learn']
Usability,". Lighting (4/7). Description; Next, we will see how to manage lights.; Key points. Clear the scene graph.; Add a GNode to the root node and name it ""Dragon"".; Add an OglModel to the Dragon node, and set the Path to the model to /Sofa/share/mesh/dragon.obj.; By default, a (positional) light is present in the OpenGL Viewer, for those who do not want to mess with it.; 		But if you want to tweak your scene, you may want to modify this light or add other lights.; In order to do that, first you need to add a LightManager, without any kind of parameters; 		(We will see later why we need it). After that, you can add up to the maximum number of lights permitted by OpenGL,; 		which is 8 on most common systems.; Add a LightManager component to the root node. Rename it ""lightManager"".; There are 3 kinds of lights in SOFA. They are basically the same as in OpenGL :; 		. PositionalLight (main parameter : position) ;; DirectionalLight (main parameter : direction) ;; SpotLight (main parameters : position and direction) . color is a common parameter for all these 3 lights.; SpotLight has other non-essential parameters : cutoff and exponent (default value may suffice).; Add three Spotlight components to the root node. Name one ""redLight"", one ""greenLight"", and one ""blueLight"".; In the redLight, set the color of the light to (1 0 0) and the position to (-5 -2.5 20).; In the greenLight, set the color of the light to (0 1 0) and the position to (0 2.5 20).; In the blueLight, set the color of the light to (0 0 1) and the position to (5 -2.5 20).; Run in SOFA; Note:; LightManager and *Light must be in the root node if you want your whole scene to be lighted.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/3_Visual.html:84,Clear,Clear,84,examples/Tutorials/StepByStep/Visual/3_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/3_Visual.html,1,['Clear'],['Clear']
Usability,". Mesh Loading and Rendering 1 (1/7). Description; The objective of this first tutorial about visualization is to load an obj file and render it in the viewer.; Key points; OglModel is the main component for rendering file. This is where all geometrical information (vertices, faces ...) are given to OpenGL, which render it afterwards. Vertex Buffer Object is used (if supported) to enhance speed.; Just put an OglModel in the scene and fill the field filename with the path to your OBJ file.; Create a new scene. Clear it of the default components by selecting File > Clear.; Add an OglModel component to the root node. Change the Path to the model (found in the Property 2/3 tab) to /Sofa/share/mesh/dragon.obj; Run in SOFA and Animate.; Nothing happens, but you can see the object.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/0_Visual.html:515,Clear,Clear,515,examples/Tutorials/StepByStep/Visual/0_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/0_Visual.html,2,['Clear'],['Clear']
Usability,". Mesh Loading and Rendering 2 (2/7). Description; This step shows how to load mesh files which are not in OBJ format.; Key points; As we saw in the last step, OglModel can render simply OBJ file. This was done directly in this component because OBJ is widely used.; 		But if you have less common format files, there is a different method to render them.; MeshLoader is used to load several kinds of files. Its loaded data is connected to OglModel, which will used it to visualize.; 		In this example, we render an OFF file, using MeshOffLoader.; Clear the scene to start with just a root node again.; Add a MeshVTKLoader component and rename it ""loader"". Change the Filename of the object to /Sofa/share/mesh/aneurysm3d_2_small.off.; Add a OglModel. ; Save your scene file by selecting File > Save. We will refer to this file as myTutorial.scn.; In your favorite XML editor, open myTutorial.scn. Look for the line:; OglModel template=""ExtVec3f"" name=""oglModel8""; After the name property, add src=""@loader"". The line should now look like: ; OglModel template=""ExtVec3f"" name=""oglModel8"" src=""@loader""; Save the file. Re-open myTutorial.scn in the Modeler.; Run in SOFA.; You can now see the model of an aneurysm. If it is dark and difficult to see, don't be alarmed. That is simply because of the default colors specified for this model.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/1_Visual.html:180,simpl,simply,180,examples/Tutorials/StepByStep/Visual/1_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/1_Visual.html,3,"['Clear', 'simpl']","['Clear', 'simply']"
Usability,". Mesh Loading and Rendering 3 (3/7). Description; Now we will go into more detail on how to use OglModel.; Key points; Clear the scene graph.; We will start by setting up a simple scene.; Add two GNodes to the root node. Name one ""DragonVisu"" and the other ""TexturedSofaVisu"".; Add an OglModel to each of the two new nodes. Name them ""dragon"" and ""sofa"".; Change the Path to the model in dragon to /Sofa/share/mesh/dragon.obj and the Path to the model in sofa to /Sofa/share/mesh/canapVM.obj.; Run in SOFA; The model is now correctly loaded and rendered; but we want to customize it.; Different kinds of parameters are offered through OglModel :. Transformation : rotation, translation and scale, each as a vector of 3 floats; Materials : describes ambient, diffuse, specular, emissive and shininess components. ; 		This is loaded either in a .MTL file attached to the OBJ; or as a string with the field material. You can also; 		use the color field, which will fill the material fields accordingly.; Texture : basic texture mapping with texturename field. In the properties for dragon, change the Initial Translation of the object to (0 10 2), the Initial Rotation of the object to (90 0 0) and the Initial Scale of the object to (0.5 0.5 0.5).; In the Property 2/3 tab, change the Ambient property to (0 191 0 255) and the Diffuse property to (51 51 0 229). Check the Specular and the Shininess checkboxes. Set Specular to (204 204 204 255) and Shininess to 25.; Run in SOFA.; Now we have a green dragon lying on the sofa.; In the Property 2/3 tab of the sofa, set the Name of the Texture to /Sofa/share/textures/snakeskin.png using the file browser.; Run in SOFA.; Now our sofa has been customized as well.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/2_Visual.html:120,Clear,Clear,120,examples/Tutorials/StepByStep/Visual/2_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/2_Visual.html,2,"['Clear', 'simpl']","['Clear', 'simple']"
Usability,". Modeler for SOFA. Tool designed to help you create new scenes, and understand how SOFA works. ; . Watch this VIDEO for more information. Complete documentation HERE. Creating a Scene:; The scene graph is fully modifiable. ; To add new components to the scene graph, DRAG from the Sofa Library located on the left of the application, and DROP it inside a Node of the graph.; You can try your scene under construction at any time by using the RunSofa menu, or pressing CTRL+R. Some preset objects are available to quickly add in your scene obstacles, rigid and deformable objects. Right click on a Node and select your preset. Learning SOFA:; * Almost all the components have an example scene to demonstrate how they behave in SOFA. Click on one of them in the Sofa Library, a small description with a clickable link should appear; * A Tutorial application is provided in the menu Tutorials. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/Modeler/Modeler.html:627,Learn,Learning,627,applications/projects/Modeler/Modeler.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/Modeler/Modeler.html,1,['Learn'],['Learning']
Usability,". Plugin Image; PluginImage Load. Load simply an image with ImageContainer component, the main tool in the plugin image. It can load many types of image, video, etc... And the ImageViewer second main tool allow to display image 2D/3D, vector, tensor, video, etc... Refer to other loadXXX.scn for more examples. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/loadHDR.html:39,simpl,simply,39,applications/plugins/image/examples/loadHDR.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/loadHDR.html,1,['simpl'],['simply']
Usability,". Plugin example; Plugin Example; This example shows a simple pendulum, as shown in the following image.; More documentation can be found in doc/index.html. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/ColladaSceneLoader.html:55,simpl,simple,55,applications/plugins/SofaAssimp/ColladaSceneLoader.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/ColladaSceneLoader.html,1,['simpl'],['simple']
Usability,". Shadowing (5/7). Description; Casting shadows in SOFA.; Key points; With SpotLight, it is possible to cast shadows simply in SOFA.; 		All we have to do is to put the component OglShadowShader (Shaders in general will be seen later), preferably ; 		in the same Node as the LightManager, i.e. root node of the scene.; First, add a floor by adding a new OglModel to the Dragon node and setting the Path to the model to /Sofa/share/mesh/floor.obj. Set its position to (0 -7 0).; Add a new Spotlight to the Root node. Set its position to (0 60 0) and its direction to (0 -1 0.01).; Add a OglShadowShader component to the Root node.; ; 		Then, you just have to either type the CONTROL+'L' key combination, or set the parameter Enable Shadow in the scene to true in the LightManager.; The only remarkable parameter is shadowTextureSize. The higher this parameter is, the nicer the shadow will be. Be careful with this, because if it is too high it can slow down your computer or even freeze it. It can be considered that 4096 is the maximum reasonable value.; Note:; For now, shadows are rendered ""hardly"" (contours are raw).; 		Don't forget that it uses GPU quite badly, so try to activate shadows only when necessary. ; 		; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/4_Visual.html:117,simpl,simply,117,examples/Tutorials/StepByStep/Visual/4_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/4_Visual.html,1,['simpl'],['simply']
Usability,". Simple Shader (6/7). Description:; The final tweak we will explore in visualizing is the use of Shaders, and other ways to replace OpenGL standard operations. We will add our own operation, using three different parts in the rendering pipeline.; Key points; Clear the scene graph. Add a dragon OglModel as we did in the previous steps.; Shaders are applied in SOFA with the OglShader component. It will apply shading to all the Visual Models (OglModels) in its node, and all its child nodes. That way, you can have several Shaders in your scene.; Add an OlgShader component.; The mandatory parameters are vertFilename and fragFilename where you give the path to the vertex and fragment GLSL code.; Using the file browser, set the vertFilename to /Sofa/share/shaders/phong.vert, and the fragFilename to /Sofa/share/shaders/phong.frag.; Run in SOFA.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/5_Visual.html:2,Simpl,Simple,2,examples/Tutorials/StepByStep/Visual/5_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/5_Visual.html,2,"['Clear', 'Simpl']","['Clear', 'Simple']"
Usability,". SimpleGUI. SimpleGUI. SimpleGUI helps inserting a Sofa simulation in graphics applications, such as this simple Glut program. Introduction; Compilation. Examples; Intellectual property; and; rights; Howto. doxygen code documentation; \( \LaTeX \) formulas in this document. Introduction; This is a simpler alternative to the standard Sofa GUI. See the code documentation (*) for more detail. Compilation; One subproject uses qtquick. On Ubuntu 14.04, it requires package qtdeclarative5-dev. Examples. glutOnePick: a glut application with a Sofa simulation. The user can interact by clicking and dragging particles.; ; qtSofa: a qt application with a Sofa simulation. The user can interact by shift-clicking and dragging particles.; . Intellectual; property and rights. Authors. Francois Faure. Contact. Francois.Faure@inria.fr. License. This plugin is distributed under; the same license as the core of SOFA.; . Patents. APP registration. Sponsors. HowTo; Code documentation . can be generated using doxygen. In Unix; systems, simply type doxygen; Doxyfile in the doc directory. LaTeX formulas. can be directly copy-pasted from .tex to this html document thanks to the mathjax config and; script included in the header. Equation numbering and cross-referencing works, as well a newcommand. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaSimpleGUI/doc/index.html:2,Simpl,SimpleGUI,2,applications/plugins/SofaSimpleGUI/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaSimpleGUI/doc/index.html,6,"['Simpl', 'simpl']","['SimpleGUI', 'simple', 'simpler', 'simply']"
Usability,". TutorialBasicCube.scn; Description:. In this tutorial, a deformable cube undergoes internal and external forces. This is one of the simplest scenes we can simulate using Sofa. We use it to introduce the component structure. The shape is modeled using a MechanicalObject which desribes the particle states, and a Topology which describes how the particles are connected. The forces are the MeshSpringForceField, which defines springs according to the edges of the mesh (the Topology), and the PlaneForceField which try to prevent the particles to cross planes. The EulerImplicitSolver contains the algorithm used to update particle positions and velocities at each time step. It uses an auxiliary component, the CGLinearSolver, to solve equation systems. . See Also:. TutorialCollisionCubeObstacleSphere. TutorialMappingDragonRigid. TutorialForceFieldLiverSprings. TutorialBasicPendulum. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Basic/TutorialBasicCube.html:134,simpl,simplest,134,examples/Tutorials/Basic/TutorialBasicCube.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Basic/TutorialBasicCube.html,1,['simpl'],['simplest']
Usability,". runSofa 1.0. . Welcome in runSofa, a simple way to execute and debug Sofa scene. This tool is part of the Sofa framework ; for simulation. . You can try the following examples:. Caduceus. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/runSofa/resources/docs/runsofa.html:39,simpl,simple,39,applications/projects/runSofa/resources/docs/runsofa.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/runSofa/resources/docs/runsofa.html,1,['simpl'],['simple']
Usability,". simpleBoundaryConditions.html. simpleBoundaryConditions.scn; Description:; An FEM cube is stretched using a pressure field applied on one face, while the opposite face is maintained on a plane.; This scene contains typical boundary conditions involved in mechanical validations:; Surface pressure. Constraining particles to a plane, or to a line, or to a point. Interesting Point:. 		The constraints allow the constrained particles to freely slide on the plane without global translation or rotation.; The pressure applies uniform forces.; As a result, the object keeps a box shape with plane, orthogonal faces. See Also:. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Demos/chainHybridNoGroup.html:2,simpl,simpleBoundaryConditions,2,examples/Demos/chainHybridNoGroup.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Demos/chainHybridNoGroup.html,4,['simpl'],['simpleBoundaryConditions']
Usability,"//github.com/sofa-framework/sofa/pull/3172 ); - [Constraint.Lagrangian.Solver] Convert double to SReal [#2922]( https://github.com/sofa-framework/sofa/pull/2922 ); - [Core.Topology] Fix info message when Topology given to topologyHandler is not dynamic [#3142]( https://github.com/sofa-framework/sofa/pull/3142 ); - [Core.Topology] Remove array quadsInHexahedronArray, QuadsOrientationInHexahedronArray should be used [#2995]( https://github.com/sofa-framework/sofa/pull/2995 ); - [Core] Extract BaseLinearSolver class into its own files [#2938]( https://github.com/sofa-framework/sofa/pull/2938 ); - [DefaultType] Prevent division by zero [#2929]( https://github.com/sofa-framework/sofa/pull/2929 ); - [FEM.Elastic] Fix typo on Poisson's ratio [#2911]( https://github.com/sofa-framework/sofa/pull/2911 ); - [FEM.Elastic] Minor changes in TetraXX FEM at init and to be able to access Data [#2845]( https://github.com/sofa-framework/sofa/pull/2845 ); - [FEM.Elastic] Simplify addkToMatrix in TriangularFEMForceFieldOptim [#2861]( https://github.com/sofa-framework/sofa/pull/2861 ); - [FEM.HyperElastic] Remove optimization based on type of matrix in StandardTetrahedralFEMForceField [#2858]( https://github.com/sofa-framework/sofa/pull/2858 ); - [LMConstraint] Remove LMConstraint folder as it is an external plugin [#2828]( https://github.com/sofa-framework/sofa/pull/2828 ); - [LinearSolver.Direct] Minor clean up in SparseCholeskySolver [#2881]( https://github.com/sofa-framework/sofa/pull/2881 ); - [LinearSolver.Direct] Move advice message into parse method [#3029]( https://github.com/sofa-framework/sofa/pull/3029 ); - [LinearSolver.Iterative] Clean floating point types in CG [#2808]( https://github.com/sofa-framework/sofa/pull/2808 ); - [LinearSolver] Remove explicit template instantiation for floating point types different from SReal [#2939]( https://github.com/sofa-framework/sofa/pull/2939 ); - [LinearSolver] SparseLDLSolver: template warning to info message [#2969]( https://github.com",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:122268,Simpl,Simplify,122268,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Simpl'],['Simplify']
Usability,"/img.shields.io/badge/contact-on_website-brightgreen.svg)](https://www.sofa-framework.org/consortium/contact/); [![we're hiring](https://img.shields.io/badge/we're%20hiring!-join%20us-orange)](https://www.sofa-framework.org/about/jobs/). ## What is SOFA. SOFA is an open source framework targeted at interactive physics simulation based on the Finite Element Method (FEM), with an emphasis on medical simulation and robotics. ; It is mainly intended for the research community to help foster newer algorithms, but can also be used as an efficient prototyping tool. ; SOFA's advanced software architecture allows: ; - the creation of complex and evolving simulations by combining new algorithms with existing algorithms ; - the modification of key parameters of the simulation such as deformable behavior, ; surface representation, solvers, constraints, collision algorithm, etc. ; - the synthesis of complex models from simpler ones using a graph description; - the efficient simulation of the dynamics of interacting objects using abstract equation solvers; - the comparison of various algorithms and mathematical models. SOFA is often presented as a standalone software (runSofa) and a simulation tool, but the project is most importantly a bundle of libraries and thus can be used/integrated in any project. . SOFA provides a plugin system allowing the coupling of additional codes to add functionalities. A lot of plugins are already referenced in the [source code](https://github.com/sofa-framework/sofa/tree/master/applications/plugins), under [sofa-framework organisation](https://github.com/orgs/sofa-framework/repositories?q=plugin&sort=name), and on the [Marketplace](https://www.sofa-framework.org/applications/marketplace/). Feel free to contact us to get your own plugins referenced!. ## How to download and install. Please refer to SOFA download page: https://www.sofa-framework.org/download/. ## How to contribute. The SOFA community will be pleased to welcome you! ; Find all the ways",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md:1888,simpl,simpler,1888,README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md,1,['simpl'],['simpler']
Usability,"/pull/704 ); - [All] Sofa add mechanical matrix mapper [#721]( https://github.com/sofa-framework/sofa/pull/721 ); - **[SofaBaseTopology]** Add battery of tests on topology containers [#708]( https://github.com/sofa-framework/sofa/pull/708 ); - **[SofaBaseTopology]** Topology change propagation to Mechanical State [#838]( https://github.com/sofa-framework/sofa/pull/838 ); - **[SofaBaseMechanics]** Optimize barycentric mapping initialization [#798]( https://github.com/sofa-framework/sofa/pull/798 ); - [SofaBoundaryCondition] Factorize partial fixedconstraint [#718]( https://github.com/sofa-framework/sofa/pull/718 ); - [SofaConstraint] add a force data field in SlidingConstraint [#780]( https://github.com/sofa-framework/sofa/pull/780 ); - [SofaConstraint] ADD Data to show constraint forces [#840]( https://github.com/sofa-framework/sofa/pull/840 ); - [SofaConstraint] allow call of constraints' storeLambda() [#854]( https://github.com/sofa-framework/sofa/pull/854 ); - **[SofaCore]** Add new (simpler) DataEngine implementation [#760]( https://github.com/sofa-framework/sofa/pull/760 ); - [SofaExporter] ADD in WriteState all required tests on data and clean export with msg API [#714]( https://github.com/sofa-framework/sofa/pull/714 ); - **[SofaFramework]** Improve external dirs fetching in SofaMacros [#759]( https://github.com/sofa-framework/sofa/pull/759 ); - [SofaGeneralAnimationLoop] Improvement on MMMapper [#772]( https://github.com/sofa-framework/sofa/pull/772 ); - **[SofaHelper]** EDIT FileSystem and FileRepository for regression tests [#830]( https://github.com/sofa-framework/sofa/pull/830 ); - **[SofaKernel]** Improve Displayflags [#671]( https://github.com/sofa-framework/sofa/pull/671 ); - **[SofaKernel]** Add a ""sofa_add_module"" in SofaMacro.cmake [#732]( https://github.com/sofa-framework/sofa/pull/732 ); - **[SofaKernel]** use string in base object description [#862]( https://github.com/sofa-framework/sofa/pull/862 ); - [SofaMeshCollision] TriangleModel optimizat",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:280022,simpl,simpler,280022,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['simpl'],['simpler']
Usability,"/sofa-framework/sofa/pull/3572) ; - [MultiThreading] Parallel springs [#3596](https://github.com/sofa-framework/sofa/pull/3596) ; - [MultiThreading] Prepare data for rendering in parallel [#3599](https://github.com/sofa-framework/sofa/pull/3599) ; - [MultiThreading] Implement addDForce in ParallelStiffSpringForceField [#3668](https://github.com/sofa-framework/sofa/pull/3668) ; - [SofaCUDA] Add missing templates for Cuda MechanicalObject [#3688](https://github.com/sofa-framework/sofa/pull/3688) ; - [SceneChecking] Add check when setting contactStiffness uselessly [#3843](https://github.com/sofa-framework/sofa/pull/3843) . **Examples / Scenes**; - [example] Introduce an example for DistanceMultiMapping [#3742](https://github.com/sofa-framework/sofa/pull/3742) ; - [examples] Introduce examples for DistanceMapping and SquareDistanceMapping [#3756](https://github.com/sofa-framework/sofa/pull/3756). ### Bug Fixes. **Architecture**; - [Simulation.Graph] SimpleAPI: Remove reference to Node argument in createChild() [#3620](https://github.com/sofa-framework/sofa/pull/3620) ; - [defaulttype] Fix cuda template instantiation [#3646](https://github.com/sofa-framework/sofa/pull/3646); - [Core] Fix UB (misaligned address) when comparing string [#3664](https://github.com/sofa-framework/sofa/pull/3664) ; - [Helper, GL] Fix various memleaks [#3671](https://github.com/sofa-framework/sofa/pull/3671) ; - [Helper] ArgumentParser: Fix map insertion when parsing more than once [#3672](https://github.com/sofa-framework/sofa/pull/3672) ; - [Defaulttype] Add generic precision aliases for Mat templates [#3675](https://github.com/sofa-framework/sofa/pull/3675) ; - [Config] Disable SOFA_EXTERN_TEMPLATE [#3678](https://github.com/sofa-framework/sofa/pull/3678) ; - [all] Simple robustification [#3685](https://github.com/sofa-framework/sofa/pull/3685) ; - [Helper] Fix FileRepository::relativeToPath [#3693](https://github.com/sofa-framework/sofa/pull/3693) ; - [Core] Fix MSVC warning in Link [#3763]",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:55183,Simpl,SimpleAPI,55183,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Simpl'],['SimpleAPI']
Usability,/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] EdgeSetController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] GraspingManager [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] InterpolationController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] MechanicalStateControllerOmni [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] NodeToggleController [#457]( https://github.com/sofa-framework/sofa/pull/457 ). ### Breaking. **Modules**; - **[SofaBaseMechanics]**[SofaMiscForceField] Homogeneization of mass components in SOFA [#637]( https://github.com/sofa-framework/sofa/pull/637 ); - **[SofaBaseMechanics]** Clean barycentric mapping [#797]( https://github.com/sofa-framework/sofa/pull/797 ); - [SofaBoundaryCondition] Refactor FixedPlaneConstraint (breaking) [#803]( https://github.com/sofa-framework/sofa/pull/803 ); - **[SofaFramework]** [BREAKING] Replacing DataEngine with SimpleDataEngine [#814]( https://github.com/sofa-framework/sofa/pull/814 ); - **[SofaFramework]** [BREAKING] Rename: data tracker has changed [#822]( https://github.com/sofa-framework/sofa/pull/822 ); - [SofaPreconditioner] modularization [#668]( https://github.com/sofa-framework/sofa/pull/668 ); - [SofaSparseSolver] modularization [#668]( https://github.com/sofa-framework/sofa/pull/668 ). ### Improvements. **Architecture**; - [CMake] use ccache if available [#692]( https://github.com/sofa-framework/sofa/pull/692 ); - [Cmake] Add a findCython.cmake [#734]( https://github.com/sofa-framework/sofa/pull/734 ); - [CMake] ADD QtIFW generator + improvements [#796]( https://github.com/sofa-framework/sofa/pull/796 ); - [SofaMacros] ADD CMake macro to create pybind11 & cython targets and modules #859( https://github.com/sofa-framework/sofa/pull/859 ). **Modules**; - [All] Use drawtool everywhere [#704]( https://github.com/sofa-framework/sofa/pull/704 ); - [All] Sofa ad,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:278075,Simpl,SimpleDataEngine,278075,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Simpl'],['SimpleDataEngine']
Usability,0]( https://github.com/sofa-framework/sofa/pull/2450 ); - [Sofa2EigenSolver] move SVDLinearSolver to SofaDenseSolver and deprecate the module [#2368]( https://github.com/sofa-framework/sofa/pull/2368 ); - [SofaBaseLinearSolver] Extract and uncomment CRSMultiMatrixAccessor [#2220]( https://github.com/sofa-framework/sofa/pull/2220 ); - [SofaBaseLinearSolver] Fix typo [#2256]( https://github.com/sofa-framework/sofa/pull/2256 ); - [SofaBaseLinearSolver] Make CRSMultiMatrixAccessor optional (compilation and usage) [#2372]( https://github.com/sofa-framework/sofa/pull/2372 ); - [SofaBaseLinearSolver] Remove FullMatrix<bool> and FullVector<bool> [#2313]( https://github.com/sofa-framework/sofa/pull/2313 ); - [SofaBaseMechanics] Remove TopologyHandler in masses to use TopologyData callbacks (part 5) [#2391]( https://github.com/sofa-framework/sofa/pull/2391 ); - [SofaBaseMechanics] Remove unused handleEvent in UniformMass [#2521]( https://github.com/sofa-framework/sofa/pull/2521 ); - [SofaBaseMechanics] Simplify expression [#2468]( https://github.com/sofa-framework/sofa/pull/2468 ); - [SofaBaseMechanics] Use directly clear() when resetting force in MechanicalObject [#2518]( https://github.com/sofa-framework/sofa/pull/2518 ); - [SofaBaseTopology] 'createTopologyHandler' overrides a member function but is not marked 'override' [#2260]( https://github.com/sofa-framework/sofa/pull/2260 ); - [SofaBaseVisual] Split VisualModelImpl init method in several methods for more clarity [#2299]( https://github.com/sofa-framework/sofa/pull/2299 ); - [SofaConstraint] Better includes [#2266]( https://github.com/sofa-framework/sofa/pull/2266 ); - [SofaConstraint] Divide a timer in 2 [#2469]( https://github.com/sofa-framework/sofa/pull/2469 ); - [SofaConstraint] Remove dependency on TetrahedronFEMForcefield [#2250]( https://github.com/sofa-framework/sofa/pull/2250 ); - [SofaCore] Clean force fields [#2243]( https://github.com/sofa-framework/sofa/pull/2243 ); - [SofaCore] Fix two determiners in a r,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:157581,Simpl,Simplify,157581,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Simpl'],['Simplify']
Usability,86](https://github.com/sofa-framework/sofa/pull/4586); - [Core] Remove unused debug trace [#4590](https://github.com/sofa-framework/sofa/pull/4590); - [Core] cmake: Remove last traces of Sofa.Component.Compat [#4596](https://github.com/sofa-framework/sofa/pull/4596); - [LinearAlgebra] Remove empty source file [#4599](https://github.com/sofa-framework/sofa/pull/4599); - [Type] Clean and test MatSym [#4600](https://github.com/sofa-framework/sofa/pull/4600); - [tests] Use appropriate gtest macro [#4607](https://github.com/sofa-framework/sofa/pull/4607); - [LinearSystem] Remove development artifact [#4620](https://github.com/sofa-framework/sofa/pull/4620); - [all] Minor last fixes using SimpleApi [#4627](https://github.com/sofa-framework/sofa/pull/4627); - [SolidMechanics.FEM] Small update on container access to avoid unecessary check [#4639](https://github.com/sofa-framework/sofa/pull/4639); - [AnimationLoop] Rename Data [#4664](https://github.com/sofa-framework/sofa/pull/4664); - [Guidelines] Format cpp code [#4695](https://github.com/sofa-framework/sofa/pull/4695); - [all] Remove some warnings [#4698](https://github.com/sofa-framework/sofa/pull/4698); - [examples] Run PluginFinder on examples [#4707](https://github.com/sofa-framework/sofa/pull/4707); - [examples] Remove examples using DefaultCollisionGroupManager [#4708](https://github.com/sofa-framework/sofa/pull/4708); - [Core] Warn when module name is empty [#4725](https://github.com/sofa-framework/sofa/pull/4725); - ﻿[PlayBack] Update playback scenes to write/read and compare a beam under gravity motion [#4745](https://github.com/sofa-framework/sofa/pull/4745); - [tools] Factorize and clean plugin list filtering [#4748](https://github.com/sofa-framework/sofa/pull/4748); - [tools] Add new dependency to fix in MacOS post-install-fixup [#4749](https://github.com/sofa-framework/sofa/pull/4749); - [all] Fix typos in comments [#4759](https://github.com/sofa-framework/sofa/pull/4759); - [All] Delete v23.06 disabled head,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:16991,Guid,Guidelines,16991,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Guid'],['Guidelines']
Usability,://github.com/sofa-framework/sofa/pull/1464 ); - [SofaMacros] Handle COMPONENTS (needed by SofaPython3) [#1671]( https://github.com/sofa-framework/sofa/pull/1671 ). **Modules**; - [All] Replace last use of Qwt by QtCharts and remove internal library [#1512]( https://github.com/sofa-framework/sofa/pull/1512 ); - [SofaBaseCollision] Add option to use of normal orientation in triangle and self-colliding cube [#1559]( https://github.com/sofa-framework/sofa/pull/1559 ); - **[SofaCore]** Add virtual getPathName function in Base [#1455]( https://github.com/sofa-framework/sofa/pull/1455 ); - [SofaGeneralLoader] Add option for transform in SphereLoader to match other loaders API [#1495]( https://github.com/sofa-framework/sofa/pull/1495 ); - [SofaGeneralLoader] allow ReadState at init [#1654]( https://github.com/sofa-framework/sofa/pull/1654 ); - [SofaHaptics] Add multithread test on LCPForceFeedback component [#1581]( https://github.com/sofa-framework/sofa/pull/1581 ); - [SofaHaptics] Add simple tests on LCPForceFeedback component [#1576]( https://github.com/sofa-framework/sofa/pull/1576 ); - [SofaImplicitField] Add new ImplicitFields and getHessian to ScalarField [#1510]( https://github.com/sofa-framework/sofa/pull/1510 ); - **[SofaKernel]** ADD: add polynomial springs force fields [#1342]( https://github.com/sofa-framework/sofa/pull/1342 ); - **[SofaKernel]** Add DataLink object & PathResolver. [#1485]( https://github.com/sofa-framework/sofa/pull/1485 ); - **[SofaKernel]** Add setLinkedBase method in BaseLink [#1436]( https://github.com/sofa-framework/sofa/pull/1436 ); - **[SofaKernel]** Add whole program optimization (aka link-time optimization) for msvc [#1468]( https://github.com/sofa-framework/sofa/pull/1468 ); - **[SofaKernel]** Exposing Data in ContactListener. [#1678]( https://github.com/sofa-framework/sofa/pull/1678 ); - **[SofaKernel]** Filerepository gettemppath [#1383]( https://github.com/sofa-framework/sofa/pull/1383 ); - **[SofaKernel]** Set read-only all data,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:218002,simpl,simple,218002,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['simpl'],['simple']
Usability,"; ************************************; * SimpleGUI plugin *; ************************************; A new design for Sofa GUI.; Authors: Francois Faure, Olivier Carre; Documentation: See doc/index.html; License: Same as the core of Sofa; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaSimpleGUI/README.txt:42,Simpl,SimpleGUI,42,applications/plugins/SofaSimpleGUI/README.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaSimpleGUI/README.txt,1,['Simpl'],['SimpleGUI']
Usability,; ************************************; * SofaCarving.txt *; ************************************. AUTHOR :; - Brina Goyette; - Erik Pernod (Version 0.3 - 2018-07-12). . LICENCE :; - LGPL. OTHER COMMENTS :. The plugin include:; - CarvingManager handling carving operations between a tool and an object. ; The CarvingManager class will perform topological resection on a triangle surface (could be on top of tetrahedron topology); The tool performing the carving as well as the object to carved need to be represented by collision models; Detecting the collision is done using the scene Intersection and NarrowPhaseDetection pipeline.; - 2 simples scenes showing a sphere carving a cylinder volume with different parameters; - A scene showing how to use the carving Manager on a tool object model. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCarving/SofaCarving.txt:639,simpl,simples,639,applications/plugins/SofaCarving/SofaCarving.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCarving/SofaCarving.txt,1,['simpl'],['simples']
Usability,"; - **Create a branch** for your changes.; - Make your changes.; - Pull in changes from upstream often to [**sync your fork**](https://help.github.com/articles/syncing-a-fork/) so that merge conflicts will be less likely in your pull request.; - [**Create a pull request**](https://help.github.com/articles/creating-a-pull-request-from-a-fork/) when you are ready to propose your changes into the main project. ### Start easy and simple. For newcomers in the community, we regularly identify issues easy to tackle and to get started with, using a [label ""*good first issue*""](https://github.com/sofa-framework/sofa/issues?q=label%3A%22good+first+issue%22). Choose one, solve it and create your first pull request!. ### Rules. - Description must explain the **issue solved** or the **feature added**, and this must be reported in the **[CHANGELOG.md](https://github.com/sofa-framework/sofa/blob/master/CHANGELOG.md)** file.; - Code must follow **[our guidelines](https://github.com/sofa-framework/sofa/blob/master/GUIDELINES.md)**.; - Commit must build **successfully** on Jenkins for all steps (compilation + tests + examples).; - **Unit Tests** are required for each new component or if an issue is fixed.; - **Examples** (at least one) must be provided showing the new feature. ### Management of pull requests. Standard pull-requests are reviewed and approved by the ""Reviewers"" team. ; Major pull-requests (BREAKING, major features) are reviewed by the ""Reviewers"" team and approved by the ""STC members"" team through a vote within a maximum period of 2 weeks. Reviewing:. - Make sure the pull request is **labelized** and well assigned.; - Control that it follows **our rules** (defined above).; - Track the **status of each pull request** using the dedicated labels:; - ""pr: wip"" must be set if the PR has been created for a team work or if some fixes are needed (discussed in the comments).; - ""pr: to review"" must be set if the PR is ready to be reviewed. ; - ""pr: ready"" must be set **instead o",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:5562,GUID,GUIDELINES,5562,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['GUID'],['GUIDELINES']
Usability,"; l i b Q G L V i e w e r I n s t a l l a t i o n. libQGLViewer requires the Qt library, available from Digia. In order to compile the library from its sources:. - On UNIX platforms, simply type (see doc/installUnix.html for details):. > qmake; > make; > make install [optional]. - For Windows installation, see doc/installWindows.html. See doc/compilation.html for details on compiling programs that use libQGLViewer.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/install.txt:183,simpl,simply,183,Sofa/GUI/Qt/libQGLViewer/install.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/install.txt,1,['simpl'],['simply']
Usability,"; l i b Q G L V i e w e r. 	 	 Version 2.8.0. Packaged on March 13, 2022. Copyright (C) 2002-2014 Gilles Debunne. All rights reserved.; http://www.libqglviewer.com; Send e-mail to contact@libqglviewer.com. libQGLViewer is a C++ library based on Qt that eases the creation of OpenGL 3D viewers. It provides some of the typical 3D viewer functionalities, such as the possibility to; move the camera using the mouse, which lacks in most of the other APIs. Other features; include mouse manipulated frames, interpolated keyFrames, object selection, stereo ; display, screenshot saving and much more. It can be used by OpenGL beginners as well as; to create complex applications, being fully customizable and easy to extend. Based on the Qt toolkit, it compiles on any architecture (Unix-Linux, Mac, Windows). ; Full reference documentation and many examples are provided. libQGLViewer does not ; display 3D scenes in various formats, but it can be the base for the coding of such a ; viewer. libQGLViewer uses dual licensing: it is freely available under the terms of the GNU-GPL; license for open source software development, while commercial applications can apply; for a commercial license. The library's main functionalities are:. - A camera trackball to intuitively move the camera in the scene.; - Screenshot saving in different file formats (JPG, PNG, EPS...).; - Easy scene object selection and manipulation using the mouse.; - Definition and replay of keyFrame paths.; - Stereo display (provided that your hardware supports it).; - Clean, well-designed and easily extendable API.; - Many examples and a complete reference documentation. . See the doc/index.html page for details. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/readMe.txt:1255,intuit,intuitively,1255,Sofa/GUI/Qt/libQGLViewer/readMe.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/readMe.txt,1,['intuit'],['intuitively']
Usability,"? Detail how someone else can recreate the problem.; - **Additional infos**: link to demos, screenshots or code showing the problem. # Issues. For **bug tracking**, **feature proposals** and **task management**, create a [SOFA issue](https://github.com/sofa-framework/sofa/issues)! There is nothing to it and whatever issue you are having, you are likely not the only one, so others will find your issue helpful, too. Issues labeled ""discussion"" are also used for larger topics: architecture, future of SOFA, long term dev, etc. Please **DO NOT create an issue for questions or support**. Use [the GitHub Discussions](https://github.com/sofa-framework/sofa/discussions) instead. When creating an issue, pay attention to the following tips:. - **Check existing issues**. What you are running into may have been addressed already.; - **Set the right label** to your issue among our label list or propose them in the description.; - **Be clear** about what your problem is: what was the expected outcome, what happened instead? Detail how someone else can recreate the problem.; - If your issue reports a bug or any abnormal behavior in SOFA, a **test highlighting the issue** should be written and pull requested. For more information on issues, check out [this GitHub guide](https://guides.github.com/features/issues/). . # Pull requests. If you are able to patch the bug or add the feature yourself – fantastic, make a pull request with the code! Be sure you have read any documents on contributing and you understand [the SOFA license](https://github.com/sofa-framework/sofa/blob/master/LICENCE.txt). Once you have submitted a pull request the maintainer(s) can compare your branch to the existing one and decide whether or not to incorporate (pull in) your changes. ### Reminder - How to pull request (from GitHub documentation). - **[Fork](http://guides.github.com/activities/forking/)** the repository and clone it locally.; - [Connect your clone](https://help.github.com/articles/configuring-a-r",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:3357,clear,clear,3357,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['clear'],['clear']
Usability,"A simple qt application featuring a Sofa simulation, using the SofaSimpleGUI API. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/qtSofa/README.txt:2,simpl,simple,2,applications/projects/qtSofa/README.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/qtSofa/README.txt,1,['simpl'],['simple']
Usability,ACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/CholeskySolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenDirectSparseSolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenDirectSparseSolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSolverFactory.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSimplicialLDLT.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSimplicialLLT.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSparseLU.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSparseQR.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/MatrixLinearSystem[BTDMatrix].h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/PrecomputedLinearSolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/PrecomputedLinearSolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SVDLinearSolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SVDLinearSolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SimplicialLDLTTraits.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SimplicialLLTTraits.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseCholeskySolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseCholeskySolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseCommon.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseLDLSolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseLDLSolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseLDLSolverImpl.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseLUSolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseLUSolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseLUTraits.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseQRTraits.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/TypedMatrixLinearSystem[BTDMatrix].h; ). set(SOURCE_FILES; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/AsyncSparseLDLSolver.cpp; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/BTDLinearSolver.cpp; ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/Direct/CMakeLists.txt:1676,Simpl,SimplicialLLTTraits,1676,Sofa/Component/LinearSolver/Direct/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/Direct/CMakeLists.txt,1,['Simpl'],['SimplicialLLTTraits']
Usability,CE_DIR}/BarycentricMappers/TopologyBarycentricMapper.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappingRigid.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BeamLinearMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/CenterOfMassMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/CenterOfMassMulti2Mapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/CenterOfMassMultiMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/DeformableOnRigidFrameMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMultiMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LineSetSkinningMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointTopologicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedHexaTopologicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraTopologicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SkinningMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMultiMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/TubularMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/VoidMapping.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Grid REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.To,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt:7486,Simpl,SimpleTesselatedHexaTopologicalMapping,7486,Sofa/Component/Mapping/Linear/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt,1,['Simpl'],['SimpleTesselatedHexaTopologicalMapping']
Usability,C_ROOT}/BehaviorUpdatePositionVisitor.h; ${SRC_ROOT}/CactusStackStorage.h; ${SRC_ROOT}/CleanupVisitor.h; ${SRC_ROOT}/CollisionAnimationLoop.h; ${SRC_ROOT}/CollisionBeginEvent.h; ${SRC_ROOT}/CollisionEndEvent.h; ${SRC_ROOT}/CollisionVisitor.h; ${SRC_ROOT}/Colors.h; ${SRC_ROOT}/CpuTask.h; ${SRC_ROOT}/CpuTaskStatus.h; ${SRC_ROOT}/DeactivatedNodeVisitor.h; ${SRC_ROOT}/DefaultAnimationLoop.h; ${SRC_ROOT}/DefaultVisualManagerLoop.h; ${SRC_ROOT}/DeleteVisitor.h; ${SRC_ROOT}/ExportDotVisitor.h; ${SRC_ROOT}/ExportGnuplotVisitor.h; ${SRC_ROOT}/ExportVisualModelOBJVisitor.h; ${SRC_ROOT}/InitVisitor.h; ${SRC_ROOT}/IntegrateBeginEvent.h; ${SRC_ROOT}/IntegrateEndEvent.h; ${SRC_ROOT}/LocalStorage.h; ${SRC_ROOT}/MechanicalOperations.h; ${SRC_ROOT}/MechanicalVPrintVisitor.h; ${SRC_ROOT}/MechanicalVisitor.h; ${SRC_ROOT}/MutationListener.h; ${SRC_ROOT}/Node.h; ${SRC_ROOT}/Node.inl; ${SRC_ROOT}/ParallelForEach.h; ${SRC_ROOT}/ParallelSparseMatrixProduct.h; ${SRC_ROOT}/ParallelVisitorScheduler.h; ${SRC_ROOT}/PauseEvent.h; ${SRC_ROOT}/PipelineImpl.h; ${SRC_ROOT}/PositionEvent.h; ${SRC_ROOT}/PrintVisitor.h; ${SRC_ROOT}/PropagateEventVisitor.h; ${SRC_ROOT}/RequiredPlugin.h; ${SRC_ROOT}/ResetVisitor.h; ${SRC_ROOT}/SceneLoaderFactory.h; ${SRC_ROOT}/Simulation.h; ${SRC_ROOT}/SimulationLoop.h; ${SRC_ROOT}/SolveVisitor.h; ${SRC_ROOT}/StateChangeVisitor.h; ${SRC_ROOT}/TopologyChangeVisitor.h; ${SRC_ROOT}/UpdateBoundingBoxVisitor.h; ${SRC_ROOT}/UpdateContextVisitor.h; ${SRC_ROOT}/UpdateInternalDataVisitor.h; ${SRC_ROOT}/UpdateLinksVisitor.h; ${SRC_ROOT}/UpdateMappingEndEvent.h; ${SRC_ROOT}/UpdateMappingVisitor.h; ${SRC_ROOT}/VectorOperations.h; ${SRC_ROOT}/VelocityThresholdVisitor.h; ${SRC_ROOT}/Visitor.h; ${SRC_ROOT}/VisitorExecuteFunc.h; ${SRC_ROOT}/VisitorScheduler.h; ${SRC_ROOT}/VisualVisitor.h; ${SRC_ROOT}/WriteStateVisitor.h; ${SRC_ROOT}/XMLPrintVisitor.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/BaseSimulationExporter.h; ${SRC_ROOT}/TaskScheduler.h; ${SRC_ROOT}/TaskSchedulerFactory.h; ${SRC_ROOT}/Ta,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:1305,Pause,PauseEvent,1305,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Pause'],['PauseEvent']
Usability,"ENEUTILITY_SOURCE_DIR ""src/sofa/component/sceneutility""). set(HEADER_FILES; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/init.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/AddResourceRepository.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/APIVersion.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/InfoComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeAliasComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeDataAliasComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MessageHandlerComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimation.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimationOnEvent.h; ). set(SOURCE_FILES; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/AddResourceRepository.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/APIVersion.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/InfoComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeAliasComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeDataAliasComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MessageHandlerComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimation.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimationOnEvent.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_SCENEUTILITY_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_SCENEUTILITY_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SceneUtility/CMakeLists.txt:1274,Pause,PauseAnimation,1274,Sofa/Component/SceneUtility/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SceneUtility/CMakeLists.txt,2,['Pause'],"['PauseAnimation', 'PauseAnimationOnEvent']"
Usability,ES; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/AboutSOFADialog.cpp; ${SRC_ROOT}/DataFilenameWidget.cpp; ${SRC_ROOT}/DataWidget.cpp; ${SRC_ROOT}/DisplayFlagsDataWidget.cpp; ${SRC_ROOT}/FileManagement.cpp; ${SRC_ROOT}/GenGraphForm.cpp; ${SRC_ROOT}/GraphListenerQListView.cpp; ${SRC_ROOT}/LinkWidget.cpp; ${SRC_ROOT}/MaterialDataWidget.cpp; ${SRC_ROOT}/RGBAColorDataWidget.cpp; ${SRC_ROOT}/ModifyObject.cpp; ${SRC_ROOT}/PickHandlerCallBacks.cpp; ${SRC_ROOT}/QDataDescriptionWidget.cpp; ${SRC_ROOT}/QDisplayDataWidget.cpp; ${SRC_ROOT}/QDisplayLinkWidget.cpp; ${SRC_ROOT}/QDisplayPropertyWidget.cpp; ${SRC_ROOT}/QRGBAColorPicker.cpp; ${SRC_ROOT}/QMenuFilesRecentlyOpened.cpp; ${SRC_ROOT}/QModelViewTableUpdater.cpp; ${SRC_ROOT}/QMouseOperations.cpp; ${SRC_ROOT}/QMouseWheelAdjustementGuard.cpp; ${SRC_ROOT}/QSofaListView.cpp; ${SRC_ROOT}/QSofaStatWidget.cpp; ${SRC_ROOT}/QTabulationModifyObject.cpp; ${SRC_ROOT}/QtMessageRedirection.cpp; ${SRC_ROOT}/QTransformationWidget.cpp; ${SRC_ROOT}/RealGUI.cpp; ${SRC_ROOT}/SimpleDataWidget.cpp; ${SRC_ROOT}/SofaMouseManager.cpp; ${SRC_ROOT}/SofaPluginManager.cpp; ${SRC_ROOT}/SofaVideoRecorderManager.cpp ; ${SRC_ROOT}/StructDataWidget.cpp; ${SRC_ROOT}/TableDataWidget.cpp; ${SRC_ROOT}/WDoubleLineEdit.cpp; ${SRC_ROOT}/viewer/SofaViewer.cpp; ${SRC_ROOT}/SofaSceneGraphWidget.cpp; ${SRC_ROOT}/viewer/VisualModelPolicy.cpp ; ); set(UI_FILES; ${SRC_ROOT}/AboutDialog.ui; ${SRC_ROOT}/BaseGenGraphForm.ui; ${SRC_ROOT}/DialogAddObject.ui; ${SRC_ROOT}/GUI.ui; ${SRC_ROOT}/MouseManager.ui; ${SRC_ROOT}/PluginManager.ui; ${SRC_ROOT}/VideoRecorderManager.ui; ); set(QRC_FILES; ${SRC_ROOT}/resources/RealGUI.qrc; ). if(SOFA_DUMP_VISITOR_INFO); list(APPEND MOC_HEADER_FILES; ${SRC_ROOT}/WindowVisitor.h; ${SRC_ROOT}/QVisitorControlPanel.h; ${SRC_ROOT}/PieWidget.h; ); list(APPEND HEADER_FILES; ${SRC_ROOT}/GraphVisitor.h; ); list(APPEND SOURCE_FILES; ${SRC_ROOT}/GraphVisitor.cpp; ${SRC_ROOT}/WindowVisitor.cpp; ${SRC_ROOT}/QVisitorControlPanel.cpp; ${SRC_ROOT}/PieWidget.cpp; ); list(,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt:6459,Simpl,SimpleDataWidget,6459,Sofa/GUI/Qt/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt,1,['Simpl'],['SimpleDataWidget']
Usability,"I place no restrictions on the use of newmat except that I take; no liability for any problems that may arise from its use,; distribution or other dealings with it. You can use it in your commercial projects. You can make and distribute modified or merged versions. You can; include parts of it in your own software. If you distribute modified or merged versions, please make it; clear which parts are mine and which parts are modified. For a substantially modified version, simply note that it is,; in part, derived from my software. A comment in the code will; be sufficient. The software is provided ""as is"", without warranty of any kind. Please understand that there may still be bugs and errors. Use at your own risk. I (Robert Davies) take no responsibility; for any errors or omissions in this package or for any misfortune; that may befall you or others as a result of your use,; distribution or other dealings with it.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaNewmat/extlibs/newmat/COPYING.txt:380,clear,clear,380,applications/plugins/SofaNewmat/extlibs/newmat/COPYING.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaNewmat/extlibs/newmat/COPYING.txt,2,"['clear', 'simpl']","['clear', 'simply']"
Usability,OFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LinearMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LineSetSkinningMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LineSetSkinningMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedHexaTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SkinningMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SkinningMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMultiMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMultiMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/TubularMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/TubularMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/VoidMapping.h; ). set(SOURCE_FILES; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapper.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperEdgeSetTopology.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricM,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt:4717,Simpl,SimpleTesselatedTetraMechanicalMapping,4717,Sofa/Component/Mapping/Linear/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt,1,['Simpl'],['SimpleTesselatedTetraMechanicalMapping']
Usability,OMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMultiMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMultiMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LinearMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LineSetSkinningMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LineSetSkinningMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedHexaTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SkinningMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SkinningMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMultiMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMultiMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/TubularMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/TubularMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/VoidMapping.h; ). set(SOURCE_FILES; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/init.cpp; ${S,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt:4466,Simpl,SimpleTesselatedTetraMechanicalMapping,4466,Sofa/Component/Mapping/Linear/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt,1,['Simpl'],['SimpleTesselatedTetraMechanicalMapping']
Usability,OURCE_DIR}/IdentityMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMultiMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMultiMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LinearMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LineSetSkinningMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LineSetSkinningMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedHexaTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SkinningMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SkinningMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMultiMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMultiMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/TubularMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/TubularMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/VoidMapping.h; ). set(SOURCE_FILES; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapper.cpp; ${S,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt:4549,Simpl,SimpleTesselatedTetraMechanicalMapping,4549,Sofa/Component/Mapping/Linear/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt,1,['Simpl'],['SimpleTesselatedTetraMechanicalMapping']
Usability,"OptiTrackNatNet from ""options"" configurations; - ignore some OptiTrackNatNet scenes testing. - [SofaPython]; - fix GridTopology type on the python side; - fix OBJ loader; - fix loading a scene from a .py in a Node independently from the awful Simulation singleton.; - fix SofaPython.Tools.localPath in some situations; - fix BaseContext_getObjects so it can select objects from a base class name (and adding an example); - quaternion: fix singularity in from_line function. - [Flexible]; - fix case sensitive issues; - API: fix a bug with colors when reloading a scene; - fix the bulk factor in NeoHookean material; - fix NeoHookean traction test; - testing detachFromGraph; - BaseDeformationMapping: remove debug message, fix usage of sout (no need for testing f_printLog); - fix test compilation w/o image plugin; - fix loadVisual; - fix bug in topologygausspointsampler (computation of volume integrals for irregular hexa). - [Compliant]; - CompliantImplicitSolver: fix Lagrange multipliers clear when reseting the simulation; - auto-fix init errors in RigidMass; - Frame.py: adding tolist() conversion; - fix Jacobian reserved size; - fix contacts and associated test. - [image]; - python tools: fix bug in mhd parsing; - MeshToImage: fix bresenham, be sure dmax>=1; - fix resampling of projection images, and marching cubes default parameter; - fix bug in mhd file loader; - fix rasterization when using vertex colors. ### Cleanings. - warnings were removed; - dead branches were removed; - the ‘using’ directives were removed in header files; - the repository sofa_root/modules/sofa/components has been cleaned (deprecated components removed); - clean many SOFA examples; - removing ""using helper::vector"" from VecTypes.h; - SofaQtGui: Remove qt3 remnants in ui files. - Minor clean; - clean SofaBaseCollision of OpenGL dependency; - cleaning Material::setColor; - Base: write sout as info (rather than warnings); - clean and fix RestShapeSpringsForceField draw functions; - Remove useless tests",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:359702,clear,clear,359702,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['clear'],['clear']
Usability,"PI_SRC_DIR ""src/SofaPhysicsAPI""); set(HEADER_FILES; ${SOFAPHYSICSAPI_SRC_DIR}/config.h.in; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsAPI.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsOutputMesh_impl.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsSimulation.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsBindings.h; ${SOFAPHYSICSAPI_SRC_DIR}/fakegui.h; ). set(SOURCE_FILES; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsOutputMesh.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsSimulation.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsBindings.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/fakegui.cpp; ). find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED); sofa_find_package(Sofa.Component REQUIRED); sofa_find_package(Sofa.GUI.Common REQUIRED); sofa_find_package(SofaValidation QUIET). if(SofaValidation_FOUND); message(""SofaPhysicsAPI: SofaValidation has been found; enabling DataController and DataMonitor support.""); list(APPEND HEADER_FILES ; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataController_impl.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataMonitor_impl.h; ); list(APPEND HEADER_FILES ; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataController.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataMonitor.cpp; ); else(); message(""SofaPhysicsAPI: SofaValidation has not been found; DataController and DataMonitor will not be supported.""); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Graph Sofa.GUI.Common Sofa.SimpleApi); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component). if(SofaValidation_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC SofaValidation); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${Sofa_VERSION}). ## Install rules and CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SofaPhysicsAPI/CMakeLists.txt:1574,Simpl,SimpleApi,1574,applications/projects/SofaPhysicsAPI/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SofaPhysicsAPI/CMakeLists.txt,1,['Simpl'],['SimpleApi']
Usability,Plugin: Avoid calling loadPlugin() twice on start-up [#4509](https://github.com/sofa-framework/sofa/pull/4509); - [Share] Remove DefaultCollisionGroupManager in the default scenes [#4521](https://github.com/sofa-framework/sofa/pull/4521); - [all] Fix some warnings [#4529](https://github.com/sofa-framework/sofa/pull/4529); - [GitHub] Fix GH Discussions Announcements for Discord [#4530](https://github.com/sofa-framework/sofa/pull/4530); - [Simulation.Core] Make TSAN pass for caduceus [#4535](https://github.com/sofa-framework/sofa/pull/4535); - [Config] Add cxxopts cmake find module [#4538](https://github.com/sofa-framework/sofa/pull/4538); - [Sofa.Testing] Add SimpleApi in Config.cmake.in [#4542](https://github.com/sofa-framework/sofa/pull/4542); - [script] Stale action: remove temporary layer and activate closing [#4560](https://github.com/sofa-framework/sofa/pull/4560); - [README] Update link to Discord [#4562](https://github.com/sofa-framework/sofa/pull/4562); - [plugins] Add SimpleApi as a dependency in SofaCarving_test [#4572](https://github.com/sofa-framework/sofa/pull/4572); - [Constraint.Lagrangian.Solver] Make problemId counter id atomic [#4581](https://github.com/sofa-framework/sofa/pull/4581); - [Collision.Response.Contact] Make contactId thread-safe [#4582](https://github.com/sofa-framework/sofa/pull/4582); - [Collision.Detection] Give current intersection methods as parameter to intersection functions [#4583](https://github.com/sofa-framework/sofa/pull/4583); - [LinearAlgebra] Fix compilation of assert [#4598](https://github.com/sofa-framework/sofa/pull/4598); - [Multithreading] fix multithread packaging [#4619](https://github.com/sofa-framework/sofa/pull/4619); - [GitHub] Add timezone info on cron Actions [#4626](https://github.com/sofa-framework/sofa/pull/4626); - [LinearAlgebra] Trigger error on the Eigen version [#4630](https://github.com/sofa-framework/sofa/pull/4630); - [Core] Missing call to super init [#4634](https://github.com/sofa-framework/sofa/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:8912,Simpl,SimpleApi,8912,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Simpl'],['SimpleApi']
Usability,R_SOURCE_DIR}/BarycentricMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappingRigid.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BeamLinearMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/CenterOfMassMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/CenterOfMassMulti2Mapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/CenterOfMassMultiMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/DeformableOnRigidFrameMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMultiMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LineSetSkinningMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointTopologicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedHexaTopologicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraTopologicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SkinningMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMultiMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/TubularMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/VoidMapping.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Grid REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Dynamic); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Componen,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt:7571,Simpl,SimpleTesselatedTetraMechanicalMapping,7571,Sofa/Component/Mapping/Linear/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt,1,['Simpl'],['SimpleTesselatedTetraMechanicalMapping']
Usability,S); endif(). # FFMPEG_exec; sofa_find_package(FFMPEG_exec BOTH_SCOPES). # TinyXML; if(SOFA_DUMP_VISITOR_INFO); sofa_find_package(TinyXML2 REQUIRED BOTH_SCOPES); endif(). set(SRC_ROOT src/sofa/gui/qt). set(MOC_HEADER_FILES; ${SRC_ROOT}/AboutSOFADialog.h; ${SRC_ROOT}/DataFilenameWidget.h; ${SRC_ROOT}/DataWidget.h; ${SRC_ROOT}/DisplayFlagsDataWidget.h; ${SRC_ROOT}/GenGraphForm.h; ${SRC_ROOT}/LinkWidget.h; ${SRC_ROOT}/MaterialDataWidget.h; ${SRC_ROOT}/RGBAColorDataWidget.h; ${SRC_ROOT}/ModifyObject.h; ${SRC_ROOT}/QDataDescriptionWidget.h; ${SRC_ROOT}/QDisplayDataWidget.h; ${SRC_ROOT}/QDisplayLinkWidget.h; ${SRC_ROOT}/QDisplayPropertyWidget.h; ${SRC_ROOT}/QRGBAColorPicker.h; ${SRC_ROOT}/QModelViewTableUpdater.h; ${SRC_ROOT}/QMouseOperations.h; ${SRC_ROOT}/QMouseWheelAdjustementGuard.h; ${SRC_ROOT}/QSofaListView.h; ${SRC_ROOT}/QSofaStatWidget.h; ${SRC_ROOT}/QTabulationModifyObject.h; ${SRC_ROOT}/QtMessageRedirection.h; ${SRC_ROOT}/QTransformationWidget.h; ${SRC_ROOT}/RealGUI.h; ${SRC_ROOT}/SimpleDataWidget.h; ${SRC_ROOT}/SofaMouseManager.h ; ${SRC_ROOT}/SofaVideoRecorderManager.h; ${SRC_ROOT}/SofaPluginManager.h; ${SRC_ROOT}/SofaSceneGraphWidget.h; ${SRC_ROOT}/WDoubleLineEdit.h ; ); set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/qt.conf.h; ${SRC_ROOT}/FileManagement.h; ${SRC_ROOT}/GraphListenerQListView.h; ${SRC_ROOT}/PickHandlerCallBacks.h; ${SRC_ROOT}/QMenuFilesRecentlyOpened.h; ${SRC_ROOT}/QModelViewTableDataContainer.h; ${SRC_ROOT}/StructDataWidget.h; ${SRC_ROOT}/TableDataWidget.h; ${SRC_ROOT}/viewer/SofaViewer.h; ${SRC_ROOT}/viewer/EngineBackend.h; ${SRC_ROOT}/viewer/VisualModelPolicy.h; ${SRC_ROOT}/GenericWidget.h; ); set(SOURCE_FILES; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/AboutSOFADialog.cpp; ${SRC_ROOT}/DataFilenameWidget.cpp; ${SRC_ROOT}/DataWidget.cpp; ${SRC_ROOT}/DisplayFlagsDataWidget.cpp; ${SRC_ROOT}/FileManagement.cpp; ${SRC_ROOT}/GenGraphForm.cpp; ${SRC_ROOT}/GraphListenerQListView.cpp; ${SRC_ROOT}/LinkWidget.cpp; ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt:4751,Simpl,SimpleDataWidget,4751,Sofa/GUI/Qt/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt,1,['Simpl'],['SimpleDataWidget']
Usability,"SofaCore] Fix type conversion [#2639]( https://github.com/sofa-framework/sofa/pull/2639 ); - [SofaCore] Name dynamically allocated vec ids [#2811]( https://github.com/sofa-framework/sofa/pull/2811 ); - [SofaCore_test] Minor clean of few unit tests [#2573]( https://github.com/sofa-framework/sofa/pull/2573 ); - [SofaEulerianFluid] Move examples into plugin [#2833]( https://github.com/sofa-framework/sofa/pull/2833 ); - [SofaGeneralEngine] Fix some warnings [#2723]( https://github.com/sofa-framework/sofa/pull/2723 ); - [SofaGuiQt] Error handling when exporting graph [#2771]( https://github.com/sofa-framework/sofa/pull/2771 ); - [SofaGuiQt] Fix english spelling: AdvancedTimer instead of AdvanceTimer [#2816]( https://github.com/sofa-framework/sofa/pull/2816 ); - [SofaGuiQt] Modernize the 'qt::connect' to use the c++ syntax [#2943]( https://github.com/sofa-framework/sofa/pull/2943 ); - [SofaGuiQt] Remove sec unit from GUI [#2742]( https://github.com/sofa-framework/sofa/pull/2742 ); - [SofaGuiQt] Rename attributes to follow SOFA guidelines. [#2944]( https://github.com/sofa-framework/sofa/pull/2944 ); - [SofaKernel] fix shadow variable [#2791]( https://github.com/sofa-framework/sofa/pull/2791 ); - [SofaMiscCollision] Extract OBB/Capsule code into its own plugin [#2820]( https://github.com/sofa-framework/sofa/pull/2820 ); - [SofaMiscFEM] Clean FastTetrahedralCorotationalForceField and add extraData [#2569]( https://github.com/sofa-framework/sofa/pull/2569 ); - [SofaMiscForceField] Fix type conversion in tests [#2714]( https://github.com/sofa-framework/sofa/pull/2714 ); - [SofaRigid][SofaGeneralSimpleFem] Fix typos [#2947]( https://github.com/sofa-framework/sofa/pull/2947 ); - [SofaSimpleFEM_test] Add tests on Tetrahedron, CorotationalTetrahedral and FastTetrahedral FEM ForceField [#2842]( https://github.com/sofa-framework/sofa/pull/2842 ); - [SofaSimpleFem] Prefer usage of accessor in HexahedronFEMForceField [#2778]( https://github.com/sofa-framework/sofa/pull/2778 ); - [SofaS",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:128098,guid,guidelines,128098,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['guid'],['guidelines']
Usability,"SofaGTestMain; *************. The SofaGTestMain library contains only a main function that initializes Sofa; and runs a Google Test test suite. (It replaces the gtest_main library provided; with Google Test, that provides a that contains a minimal main() function.); Each test executable is simply linked against it, unless it also needs to run; its own main() function.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/SofaGTestMain/readme.txt:291,simpl,simply,291,Sofa/framework/Testing/SofaGTestMain/readme.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/SofaGTestMain/readme.txt,1,['simpl'],['simply']
Usability,"Staff: administrators of SOFA and its ecosystem. This group is directed by the Executive Committee (EC). All SOFA Developers are gladly invited to the SOFA-dev meetings. ; They take place remotely every Wednesday at 10 a.m. CET and are animated by the SOFA Reviewers + the Consortium Staff. ; [Subscribe to SOFA-dev mailing-list](https://sympa.inria.fr/sympa/subscribe/sofa-dev) to get the agenda, reports and conference room url. About the steering committees:. - SOFA Scientific and Technical Committee (STC): defines the technical roadmap twice a year, validate the contribution rules, the Reviewers team and discuss every technical point in SOFA.; - SOFA Executive Committee (EC): decides on evolutions of the membership contract, the communication policy and the priorities of the Consortium. A more detailed definition of the committees is available [in the SOFA website](https://www.sofa-framework.org/consortium/presentation/). # Getting started. Please **read carefully** [the GitHub guide on Contributing to Open Source](https://guides.github.com/activities/contributing-to-open-source/). We also recommend you to check this [more detailed documentation on issues and pull requests](https://help.github.com/categories/collaborating-with-issues-and-pull-requests/). # Support - Discussion forum. For any **question** (help needed, problem of understanding SOFA, announcements), create a topic on [the SOFA GitHub Discussions](https://github.com/sofa-framework/sofa/discussions) and benefit from the feedback of the community. When creating a new topic, pay attention to some tips:. - **Check existing topics** using the Search bar. Your question may have been answered already.; - **Be clear** about what your problem is: what was the expected outcome, what happened instead? Detail how someone else can recreate the problem.; - **Additional infos**: link to demos, screenshots or code showing the problem. # Issues. For **bug tracking**, **feature proposals** and **task management**, creat",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:1632,guid,guide,1632,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,2,['guid'],"['guide', 'guides']"
Usability,"UND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install libcxxopts-dev (version>=3.1.0), or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). set(SOFAGUICOMMON_ROOT src/sofa/gui/common). set(HEADER_FILES; ${SOFAGUICOMMON_ROOT}/config.h.in; ${SOFAGUICOMMON_ROOT}/init.h; ${SOFAGUICOMMON_ROOT}/BaseGUI.h; ${SOFAGUICOMMON_ROOT}/BaseViewer.h; ${SOFAGUICOMMON_ROOT}/ColourPickingVisitor.h; ${SOFAGUICOMMON_ROOT}/FilesRecentlyOpenedManager.h; ${SOFAGUICOMMON_ROOT}/GuiDataRepository.h; ${SOFAGUICOMMON_ROOT}/GUIManager.h; ${SOFAGUICOMMON_ROOT}/MouseOperations.h; ${SOFAGUICOMMON_ROOT}/OperationFactory.h; ${SOFAGUICOMMON_ROOT}/PickHandler.h; ${SOFAGUICOMMON_ROOT}/ViewerFactory.h; ${SOFAGUICOMMON_ROOT}/ArgumentParser.h; ). set(SOURCE_FILES; ${SOFAGUICOMMON_ROOT}/init.cpp; ${SOFAGUICOMMON_ROOT}/BaseGUI.cpp; ${SOFAGUICOMMON_ROOT}/BaseViewer.cpp; ${SOFAGUICOMMON_ROOT}/ColourPickingVisitor.cpp; ${SOFAGUICOMMON_ROOT}/FilesRecentlyOpenedManager.cpp; ${SOFAGUICOMMON_ROOT}/GuiDataRepository.cpp; ${SOFAGUICOMMON_ROOT}/GUIManager.cpp; ${SOFAGUICOMMON_ROOT}/MouseOperations.cpp; ${SOFAGUICOMMON_ROOT}/PickHandler.cpp; ${SOFAGUICOMMON_ROOT}/ViewerFactory.cpp; ${SOFAGUICOMMON_ROOT}/ArgumentParser.cpp; ). sofa_find_package(Sofa.Simulation.Common REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED); sofa_find_package(Sofa.GL QUIET) # ColourPickingVisitor. if(Sofa.GL_FOUND); message(STATUS ""-- ${PROJECT_NAME}: Sofa.GL dependent features enabled.""); else(); message(WARNING ""-- ${PROJECT_NAME}: Sofa.GL dependent features disabled.""); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Common); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Setting); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Contact); t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Common/CMakeLists.txt:1893,GuiD,GuiDataRepository,1893,Sofa/GUI/Common/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Common/CMakeLists.txt,1,['GuiD'],['GuiDataRepository']
Usability,URCE_DIR}/LineSetSkinningMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LineSetSkinningMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedHexaTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SkinningMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SkinningMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMultiMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMultiMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/TubularMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/TubularMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/VoidMapping.h; ). set(SOURCE_FILES; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapper.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperEdgeSetTopology.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperHexahedronSetTopology.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricM,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt:4802,Simpl,SimpleTesselatedTetraTopologicalMapping,4802,Sofa/Component/Mapping/Linear/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt,1,['Simpl'],['SimpleTesselatedTetraTopologicalMapping']
Usability,a/pull/1770 ); - **[SofaHelper]** Replace boost::shared_ptr for std::shared_ptr [#1901]( https://github.com/sofa-framework/sofa/pull/1901 ); - **[SofaHelper]** remove stream operator<< in accessor [#1808]( https://github.com/sofa-framework/sofa/pull/1808 ); - [SofaMiscCollision] Clean options [#2170]( https://github.com/sofa-framework/sofa/pull/2170 ); - [SofaMiscCollision] Fix multiple bugs in group manager [#2076]( https://github.com/sofa-framework/sofa/pull/2076 ); - [SofaMiscCollision] Move OBB/Capsule (and related Intr* Code) [#2168]( https://github.com/sofa-framework/sofa/pull/2168 ); - [SofaMiscMapping] Factorize code to remove duplicated struct [#1957]( https://github.com/sofa-framework/sofa/pull/1957 ); - **[SofaSimulationCore]** Move CpuTask class into its own file [#1993]( https://github.com/sofa-framework/sofa/pull/1993 ); - **[SofaSimulationCore]** Simplify repetitive code in BaseMechanicalVisitor [#2125]( https://github.com/sofa-framework/sofa/pull/2125 ); - **[SofaSimulationGraph]** Remove dead-end experiment in SimpleApi.h [#1845]( https://github.com/sofa-framework/sofa/pull/1845 ); - [SofaTopologyMapping] adds ellipse feature to Edge2QuadTopologyMapping [#1861]( https://github.com/sofa-framework/sofa/pull/1861 ). **Plugins / Projects**; - [CGALPlugin] new features [#2124]( https://github.com/sofa-framework/sofa/pull/2124 ). ### Improvements; **Architecture**; - [CMake] Speedup configure step [#1837]( https://github.com/sofa-framework/sofa/pull/1837 ); - [CMake] ADD option to fetch pull-request commits in ExternalProject [#1961]( https://github.com/sofa-framework/sofa/pull/1961 ); - [CMake] ADD option to enable/disable compatibility layer [#2216]( https://github.com/sofa-framework/sofa/pull/2216 ). **Modules**; - **[SofaBaseCollision]** BVH narrow phase [#2043]( https://github.com/sofa-framework/sofa/pull/2043 ); - **[SofaBaseCollision]** Introduce brute force broad phase [#2010]( https://github.com/sofa-framework/sofa/pull/2010 ); - **[SofaBaseCollis,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:175850,Simpl,SimpleApi,175850,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Simpl'],['SimpleApi']
Usability,"aBaseTopology]** Remove getter to some Data in Topology container and put them public [#1947]( https://github.com/sofa-framework/sofa/pull/1947 ); - **[SofaBaseTopology]** Remove public access to propagateTopologyChanges [#1860]( https://github.com/sofa-framework/sofa/pull/1860 ); - **[SofaBaseTopology]** Rename TopologyEngine and TopologyData classes to match file names [#1872]( https://github.com/sofa-framework/sofa/pull/1872 ); - **[SofaBaseTopology]** Secure All Topology modifiers API [#1859]( https://github.com/sofa-framework/sofa/pull/1859 ); - **[SofaBaseTopology]** Secure PointSetTopologyModifier API [#1858]( https://github.com/sofa-framework/sofa/pull/1858 ); - **[SofaBaseTopology]** Totally remove topologyEngine and move mechanism only in TopologyData and TopologyHandler [#1898]( https://github.com/sofa-framework/sofa/pull/1898 ); - **[SofaCore]** Base::findLinkDest returns Base* instead of void* [#1700]( https://github.com/sofa-framework/sofa/pull/1700 ); - **[SofaCore]** FIX SingleLink clear/set behavior [#1749]( https://github.com/sofa-framework/sofa/pull/1749 ); - **[SofaCore]** Move definition of Link::updateLinks to BaseLink.h [#1735]( https://github.com/sofa-framework/sofa/pull/1735 ); - **[SofaCore]** Moves MechanicaMatrix out of MultiMatrix.h [#1870]( https://github.com/sofa-framework/sofa/pull/1870 ); - **[SofaCore]** Remove ""depend"" from Node [#1763]( https://github.com/sofa-framework/sofa/pull/1763 ); - **[SofaCore]** isDiagonal is const [#1903]( https://github.com/sofa-framework/sofa/pull/1903 ); - [SofaExplicitOdeSolver] Introduce visitor to know the number of non-diagonal mass matrices [#2165]( https://github.com/sofa-framework/sofa/pull/2165 ); - [SofaGeneralSimpleFem] Remove \*Containers [#2099]( https://github.com/sofa-framework/sofa/pull/2099 ); - **[SofaHelper]** Add two search paths for every prefixes of the plugin manager [#1824]( https://github.com/sofa-framework/sofa/pull/1824 ); - **[SofaHelper]** Move polygon cube intersection ad-",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:173604,clear,clear,173604,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['clear'],['clear']
Usability,actor Vec [#4296](https://github.com/sofa-framework/sofa/pull/4296); - [SolidMechanics.Springs] Cleaning of QuadularBendingSprings [#4304](https://github.com/sofa-framework/sofa/pull/4304); - [Topology.Container.Dynamic] GeometryAlgorithms: support generic State [#4362](https://github.com/sofa-framework/sofa/pull/4362); - [LinearSolver.Direct] Introduce other ordering methods in SparseLDL through Eigen [#4370](https://github.com/sofa-framework/sofa/pull/4370); - [Constraint.Lagrangian.Solver] Fix assert in GenericConstraintSolver [#4389](https://github.com/sofa-framework/sofa/pull/4389); - [Type] Refactor Mat [#4396](https://github.com/sofa-framework/sofa/pull/4396); - [LinearSystem] Detect changes in sparsity pattern when using ConstantSparsityPatternSystem [#4428](https://github.com/sofa-framework/sofa/pull/4428); - [Core][LinearSolver] Introduction of ordering method components [#4477](https://github.com/sofa-framework/sofa/pull/4477); - [Simulation.Graph] Move SimpleApi into its own library [#4495](https://github.com/sofa-framework/sofa/pull/4495); - [all] Lifecycle for v24.06 (2): remove Compat [#4533](https://github.com/sofa-framework/sofa/pull/4533); - [all] Add PenalityContact vector Data display [#4637](https://github.com/sofa-framework/sofa/pull/4637); - [GUI.Component] Add virtualization for attachment performer [#4638](https://github.com/sofa-framework/sofa/pull/4638); - [GUI.Qt] Some cleaning in qt RealGui [#4641](https://github.com/sofa-framework/sofa/pull/4641); - [FEM.HyperElastic] Convert string Data to OptionsGroup [#4651](https://github.com/sofa-framework/sofa/pull/4651); - [AnimationLoop] Remove duplicated Constraint Visitors [#4715](https://github.com/sofa-framework/sofa/pull/4715). ### Improvements. - [Lagrangian.Correction] Add callbacks to check zero compliance [#4205](https://github.com/sofa-framework/sofa/pull/4205); - [SolidMechanics.Spring] Implement buildStiffnessMatrix for TriangularBendingSprings [#4295](https://github.com/sofa-framewo,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:2367,Simpl,SimpleApi,2367,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Simpl'],['SimpleApi']
Usability,"age, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_TestPlugin ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_TestPlugin); {; usePlugin(TestPlugin) } . if your plugin depends on other plugins, edit file TestPlugin-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. TestPlugin.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initTestPlugin.h. a template of user documentation is found in TestPlugin.tex. Is should; be filled in for every component in the plugin, then compiled with your; favourite Latex distribution. The filename should match the name of the; component. ; the examples are in examples/; . The first one is TestPlugin.scn, and when; runSOFA; opens it, an html page pops; up, with a link to the plugin documentation. Intellectual; property and rights. Authors. You. Contact. You@your.institute. License. Your can distribute this plugin; under; the same license as the core of SOFA, or any other license of your; choice. Patents. APP registration. Sponsors. Do not forget to thank your; sponsors, they love it !. HowTo; Code documentation . can be generated using doxygen. In Unix; systems, simply type doxygen; Doxyfile in the doc directory. LaTeX formulas. can be directly copy-pasted from .tex to this html document thanks to the mathjax config and; script included in the header. Equation numbering and cross-referencing works, as well a newcommand. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html:2821,simpl,simply,2821,applications/plugins/SofaTest/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html,1,['simpl'],['simply']
Usability,"al Committee (STC): defines the technical roadmap twice a year, validate the contribution rules, the Reviewers team and discuss every technical point in SOFA.; - SOFA Executive Committee (EC): decides on evolutions of the membership contract, the communication policy and the priorities of the Consortium. A more detailed definition of the committees is available [in the SOFA website](https://www.sofa-framework.org/consortium/presentation/). # Getting started. Please **read carefully** [the GitHub guide on Contributing to Open Source](https://guides.github.com/activities/contributing-to-open-source/). We also recommend you to check this [more detailed documentation on issues and pull requests](https://help.github.com/categories/collaborating-with-issues-and-pull-requests/). # Support - Discussion forum. For any **question** (help needed, problem of understanding SOFA, announcements), create a topic on [the SOFA GitHub Discussions](https://github.com/sofa-framework/sofa/discussions) and benefit from the feedback of the community. When creating a new topic, pay attention to some tips:. - **Check existing topics** using the Search bar. Your question may have been answered already.; - **Be clear** about what your problem is: what was the expected outcome, what happened instead? Detail how someone else can recreate the problem.; - **Additional infos**: link to demos, screenshots or code showing the problem. # Issues. For **bug tracking**, **feature proposals** and **task management**, create a [SOFA issue](https://github.com/sofa-framework/sofa/issues)! There is nothing to it and whatever issue you are having, you are likely not the only one, so others will find your issue helpful, too. Issues labeled ""discussion"" are also used for larger topics: architecture, future of SOFA, long term dev, etc. Please **DO NOT create an issue for questions or support**. Use [the GitHub Discussions](https://github.com/sofa-framework/sofa/discussions) instead. When creating an issue, pay at",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:2147,feedback,feedback,2147,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['feedback'],['feedback']
Usability,"all cleaning on sout and serr [#1234]( https://github.com/sofa-framework/sofa/pull/1234 ); - [All] Standardize epsilons in SOFA [#1049]( https://github.com/sofa-framework/sofa/pull/1049 ); - [All] Code cleaning of multiple classes [#1116]( https://github.com/sofa-framework/sofa/pull/1116 ); - [All] Remove deprecated macro SOFA_TRANGLEFEM [#1233]( https://github.com/sofa-framework/sofa/pull/1233 ); - [All] Remove references to ""isToPrint"" because it's broken [#1197]( https://github.com/sofa-framework/sofa/pull/1197 ); - [All] Replace NULL by nullptr [#1179]( https://github.com/sofa-framework/sofa/pull/1179 ); - [All] Try to reduce the number of compilation warnings [#1196]( https://github.com/sofa-framework/sofa/pull/1196 ); - [SceneCreator] Pluginizing... [#1109]( https://github.com/sofa-framework/sofa/pull/1109 ); - **[SofaBaseLinearSolver]** Remove virtual function BaseLinearSolver::isMultiGroup [#1063]( https://github.com/sofa-framework/sofa/pull/1063 ); - **[SofaBaseLinearSolver][FullMatrix]** Restore fast clear function [#1128]( https://github.com/sofa-framework/sofa/pull/1128 ); - **[SofaFramework]** Remove (painful) check/warning with Rigids [#1229]( https://github.com/sofa-framework/sofa/pull/1229 ); - [SofaGUI] Split OpenGL and Qt dependency [#1121]( https://github.com/sofa-framework/sofa/pull/1121 ); - [SofaGeneralObjectInteraction] Create delegate functions in AttachConstraint [#1185]( https://github.com/sofa-framework/sofa/pull/1185 ); - [SofaGraphComponent] Update sceneCheckerAPI and deprecate MatrixMass [#1107]( https://github.com/sofa-framework/sofa/pull/1107 ); - [SofaHAPI] Fixes for HAPI [#1189]( https://github.com/sofa-framework/sofa/pull/1189 ); - **[SofaKernel]** ADD const specifier on notify methods in Node [#1169]( https://github.com/sofa-framework/sofa/pull/1169 ); - **[SofaKernel]** Remove deprecated SOFA_DEBUG macro [#1232]( https://github.com/sofa-framework/sofa/pull/1232 ); - **[SofaMeshCollision]** Clean deprecated code [#1201]( https://g",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:254576,clear,clear,254576,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['clear'],['clear']
Usability,"and the priorities of the Consortium. A more detailed definition of the committees is available [in the SOFA website](https://www.sofa-framework.org/consortium/presentation/). # Getting started. Please **read carefully** [the GitHub guide on Contributing to Open Source](https://guides.github.com/activities/contributing-to-open-source/). We also recommend you to check this [more detailed documentation on issues and pull requests](https://help.github.com/categories/collaborating-with-issues-and-pull-requests/). # Support - Discussion forum. For any **question** (help needed, problem of understanding SOFA, announcements), create a topic on [the SOFA GitHub Discussions](https://github.com/sofa-framework/sofa/discussions) and benefit from the feedback of the community. When creating a new topic, pay attention to some tips:. - **Check existing topics** using the Search bar. Your question may have been answered already.; - **Be clear** about what your problem is: what was the expected outcome, what happened instead? Detail how someone else can recreate the problem.; - **Additional infos**: link to demos, screenshots or code showing the problem. # Issues. For **bug tracking**, **feature proposals** and **task management**, create a [SOFA issue](https://github.com/sofa-framework/sofa/issues)! There is nothing to it and whatever issue you are having, you are likely not the only one, so others will find your issue helpful, too. Issues labeled ""discussion"" are also used for larger topics: architecture, future of SOFA, long term dev, etc. Please **DO NOT create an issue for questions or support**. Use [the GitHub Discussions](https://github.com/sofa-framework/sofa/discussions) instead. When creating an issue, pay attention to the following tips:. - **Check existing issues**. What you are running into may have been addressed already.; - **Set the right label** to your issue among our label list or propose them in the description.; - **Be clear** about what your problem is: what w",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:2334,clear,clear,2334,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['clear'],['clear']
Usability,"b.com/sofa-framework/sofa/blob/master/LICENCE.txt). Once you have submitted a pull request the maintainer(s) can compare your branch to the existing one and decide whether or not to incorporate (pull in) your changes. ### Reminder - How to pull request (from GitHub documentation). - **[Fork](http://guides.github.com/activities/forking/)** the repository and clone it locally.; - [Connect your clone](https://help.github.com/articles/configuring-a-remote-for-a-fork/) to [the original **upstream** repository](https://github.com/sofa-framework/sofa/) by adding it as a remote.; - **Create a branch** for your changes.; - Make your changes.; - Pull in changes from upstream often to [**sync your fork**](https://help.github.com/articles/syncing-a-fork/) so that merge conflicts will be less likely in your pull request.; - [**Create a pull request**](https://help.github.com/articles/creating-a-pull-request-from-a-fork/) when you are ready to propose your changes into the main project. ### Start easy and simple. For newcomers in the community, we regularly identify issues easy to tackle and to get started with, using a [label ""*good first issue*""](https://github.com/sofa-framework/sofa/issues?q=label%3A%22good+first+issue%22). Choose one, solve it and create your first pull request!. ### Rules. - Description must explain the **issue solved** or the **feature added**, and this must be reported in the **[CHANGELOG.md](https://github.com/sofa-framework/sofa/blob/master/CHANGELOG.md)** file.; - Code must follow **[our guidelines](https://github.com/sofa-framework/sofa/blob/master/GUIDELINES.md)**.; - Commit must build **successfully** on Jenkins for all steps (compilation + tests + examples).; - **Unit Tests** are required for each new component or if an issue is fixed.; - **Examples** (at least one) must be provided showing the new feature. ### Management of pull requests. Standard pull-requests are reviewed and approved by the ""Reviewers"" team. ; Major pull-requests (BREAKING, majo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:4979,simpl,simple,4979,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['simpl'],['simple']
Usability,"backs. An FE model connected to two; rigid objects. The yellow squares highlight FE nodes embedded in the; rigid objects using a mapping. The white points are independent FE; nodes. Our approach is to distribute the FE vertices in two separate groups:; the mapped vertices at the ends, and the independent vertices in the; central part. This requires separate State components and graph nodes.; Unfortunately, the FEM force fields are internal, therefore they can; not be used to connect vertices of different objects. More generally,; FE models are typically defined as a whole and it is not easy to split; them. To overcome this limitation, we define the whole FE model as a common; child of the independent and the mapped particles, using a; MultiMapping, as illustrated in the next figure. The complete FEM,; including elements and masses, is defined at the bottom, while the; independent DOFs are the independent particles and the frames near the; top. The SubsetMultiMapping simply copies values from and to the two; subsets of particles. This way, there is no need to constrain FE vertices on the rigid; objects. They are perfectly attached using a mapping, without; introducing stiffness or hard constraints. The only additional cost is; due to the copies of state vectors through the SubsetMultiMapping. The kinematic hierarchy used to; create the composite object. The implementation in SOFA requires to address some issues:. Multimappings (mappings with several parents) can not generally; match tree structures. A directed acyclic graph (DAG) is required,; therefore the sofa::simulation::Simulation must be an instance of; DAGSimulation. This requires to uncheck the following line in you; sofa-local.prf file:    DEFINES += SOFA_HAVE_DAG; DAG structures can not currently be parsed from xml files. Such a; simulation must be created in C++, as given in this directory, or in; Python (no example available yet). The initialization of the scene is made bottom-up, because the; FEM is given",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/tutorials/compositeObject/doc.html:1954,simpl,simply,1954,applications/tutorials/compositeObject/doc.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/tutorials/compositeObject/doc.html,1,['simpl'],['simply']
Usability,"ces.; - adding SafeDistanceFromTargetMapping; - using the new SofaPython API; - SafeDistanceFromTargetMapping can now be ""safe"" by giving the edge directions when they are known; - adding the SofaCompliant python module (first module created outside of SofaPython!); - adding DotProductFromTargetMapping (with test); - adding RigidJointFromTargetMapping and RigidJointFromWorldFrameMapping; - add of complementary API to create deformable articulated systems; - adding NegativeUnilateralConstraint to guarantee negativeness; - adding PenaltyForceField and using it in penalty contact response; - add of two file from the SohusimDev plugin. - [image]; - API: Sampler.addMechanicalObject() more versatile; - API: refactor python API; - API: add addClosingVisual(); - add function in python API to retrieve perspective property; - MeshToImageEngine: move getValue out of for loops; - add a python ImagePlaneController; - Data<Image<T>> are now specifically bound in python; - remove pthread and X11 dependencies; - add metaimage tags that may be used to define orientation; - add python function to retrieve image type; - simpler imagePlane python controller; - add a createTransferFunction method; - improved cutplane texture resolution; - half perspective, half orthographic image transforms; - add imageCoordValuesFromPositions engine. ### Bug Fixes. - [PluginManager] crashed when a plugin was removed; - [SofaCUDA] fix the compilation using SofaCUDA on Windows; - unstable behavior of masks - USE-MASK variable added; - fix DAGNode traversal when a visitor is run from a node with a not up-to-date descendancy; - fix flaws in glText (memory leak and an other bug); - EigenBaseSparseMatrix: fix parallel matrix-vector product; - XML export. - Minor fix; - Sofa helper: leak when drawing 3d text; - compilation with SofaDumpVisitor flag enabled; - compilation of BezierTriangleSetGeometryAlgorithms (color changed from Vec3f to Vec4f); - runSofa: viewport aspect issue and loss of interaction in QtGLV",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:355681,simpl,simpler,355681,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['simpl'],['simpler']
Usability,cmake_minimum_required(VERSION 3.22). # framework libraries; if(NOT TARGET Sofa.Config); # add Config only if it was not loaded before; sofa_add_subdirectory(library Config Sofa.Config ON); endif(); sofa_add_subdirectory(library Type Sofa.Type ON); sofa_add_subdirectory(library Geometry Sofa.Geometry ON); sofa_add_subdirectory(library Topology Sofa.Topology ON); sofa_add_subdirectory(library Helper Sofa.Helper ON); sofa_add_subdirectory(library LinearAlgebra Sofa.LinearAlgebra ON); sofa_add_subdirectory(library DefaultType Sofa.DefaultType ON); sofa_add_subdirectory(library Core Sofa.Core ON); sofa_add_subdirectory(library Simulation Sofa.Simulation ON); sofa_add_subdirectory(library SimpleApi Sofa.SimpleApi ON); sofa_add_subdirectory(library Testing Sofa.Testing ON). # Library gathering all framework libraries; sofa_add_subdirectory(library Framework Sofa.Framework ON); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/CMakeLists.txt:693,Simpl,SimpleApi,693,Sofa/framework/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/CMakeLists.txt,2,['Simpl'],['SimpleApi']
Usability,"cmake_minimum_required(VERSION 3.22); project(SceneCreator VERSION 0.1). sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Eigen3 REQUIRED). set(HEADER_FILES; src/SceneCreator/config.h.in; src/SceneCreator/GetAssembledSizeVisitor.h; src/SceneCreator/GetVectorVisitor.h; src/SceneCreator/SceneCreator.h; src/SceneCreator/SceneUtils.h; ); set(SOURCE_FILES; src/SceneCreator/GetAssembledSizeVisitor.cpp; src/SceneCreator/GetVectorVisitor.cpp; src/SceneCreator/SceneCreator.cpp; src/SceneCreator/SceneUtils.cpp; src/SceneCreator/initSceneCreator.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Graph Sofa.SimpleApi Sofa.Component.StateContainer); target_link_libraries(${PROJECT_NAME} PUBLIC Eigen3::Eigen); target_compile_definitions(${PROJECT_NAME} PRIVATE ""-DSOFA_BUILD_SCENECREATOR""). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SceneCreator""; RELOCATABLE ""plugins""; ). ## Add example project to use sceneCreator; sofa_find_package(Sofa.GUI.Common QUIET); if(Sofa.GUI.Common_FOUND); add_subdirectory(sceneCreatorExamples); else(); message(STATUS ""${PROJECT_NAME}: Sofa.GUI.Common not found, sceneCreatorExamples will not be built.""); endif(). ## Add test project; if(SOFA_BUILD_TESTS); add_subdirectory(SceneCreator_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SceneCreator/CMakeLists.txt:147,Simpl,SimpleApi,147,applications/plugins/SceneCreator/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SceneCreator/CMakeLists.txt,2,['Simpl'],['SimpleApi']
Usability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.SceneUtility LANGUAGES CXX). set(SOFACOMPONENTSCENEUTILITY_SOURCE_DIR ""src/sofa/component/sceneutility""). set(HEADER_FILES; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/init.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/AddResourceRepository.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/APIVersion.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/InfoComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeAliasComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeDataAliasComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MessageHandlerComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimation.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimationOnEvent.h; ). set(SOURCE_FILES; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/AddResourceRepository.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/APIVersion.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/InfoComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeAliasComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeDataAliasComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MessageHandlerComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimation.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimationOnEvent.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_SCENEUTILITY_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TE",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SceneUtility/CMakeLists.txt:697,Pause,PauseAnimation,697,Sofa/Component/SceneUtility/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SceneUtility/CMakeLists.txt,2,['Pause'],"['PauseAnimation', 'PauseAnimationOnEvent']"
Usability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Config LANGUAGES CXX). list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules""); list(APPEND CMAKE_PREFIX_PATH ""${CMAKE_BINARY_DIR}/lib/cmake""). include(SofaMacros). # Clear internal target list (set by the macro sofa_add_generic() ); set_property(GLOBAL PROPERTY __GlobalTargetList__ """"); set_property(GLOBAL PROPERTY __GlobalTargetNameList__ """"). # Help RELOCATABLE plugins to resolve their dependencies.; # See SofaMacrosInstall.cmake for usage of this property.; define_property(TARGET; PROPERTY ""RELOCATABLE_INSTALL_DIR""; BRIEF_DOCS ""Install directory of RELOCATABLE target""; FULL_DOCS ""Install directory of RELOCATABLE target""; ). # Enable the organisation in folders for generators that support; # it. (E.g. some versions of Visual Studio have 'solution folders'); set_property(GLOBAL PROPERTY USE_FOLDERS ON). ### Sofa using type double or float; set(SOFA_FLOATING_POINT_TYPE double CACHE STRING; ""Type used for floating point values in SOFA. It actually determines:; - what template instanciations will be compiled (via the definition of the; SOFA_FLOAT and SOFA_DOUBLE macros); - what is the type behind the 'SReal' typedef used throughout SOFA.""); set_property(CACHE SOFA_FLOATING_POINT_TYPE PROPERTY STRINGS float double). if(${SOFA_FLOATING_POINT_TYPE} STREQUAL double); set(SOFA_DOUBLE 1); set(SOFA_FLOAT 0); elseif(${SOFA_FLOATING_POINT_TYPE} STREQUAL float); set(SOFA_DOUBLE 0); set(SOFA_FLOAT 1); endif(). # If you really don't understand the negated logics of SOFA_DOUBLE and; # SOFA_FLOAT please consider using SOFA_WITH_FLOAT and SOFA_WITH_DOUBLE.; # Eg: SOFA_WITH_FLOAT indicate that you need to generate the; # float code and SOFA_WITH_DOUBLE indicates that you; # need to generate the double related code.; if(${SOFA_FLOATING_POINT_TYPE} STREQUAL float); set(SOFA_WITH_FLOAT 1); set(SOFA_WITH_DOUBLE 0); endif(); if(${SOFA_FLOATING_POINT_TYP",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:305,Clear,Clear,305,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['Clear'],['Clear']
Usability,"cmake_minimum_required(VERSION 3.22); project(Sofa.SimpleApi LANGUAGES CXX). set(SOFASIMPLEAPI_SRC ""src/sofa/simpleapi""). set(HEADER_FILES; ${SOFASIMPLEAPI_SRC}/config.h.in; ${SOFASIMPLEAPI_SRC}/init.h; ${SOFASIMPLEAPI_SRC}/SimpleApi.h; ). set(SOURCE_FILES; ${SOFASIMPLEAPI_SRC}/init.cpp; ${SOFASIMPLEAPI_SRC}/SimpleApi.cpp; ). sofa_find_package(Sofa.Simulation.Graph REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Graph). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_SIMPLEAPI_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_SIMPLEAPI_BUILD_TESTS); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/SimpleApi/CMakeLists.txt:51,Simpl,SimpleApi,51,Sofa/framework/SimpleApi/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/SimpleApi/CMakeLists.txt,4,"['Simpl', 'simpl']","['SimpleApi', 'simpleapi']"
Usability,"cmake_minimum_required(VERSION 3.22); project(SofaGuiGlut). find_package(Sofa.Config REQUIRED); sofa_find_package(SofaSimulation REQUIRED); sofa_find_package(GLUT REQUIRED); sofa_find_package(Sofa.GL REQUIRED); sofa_find_package(SofaBase REQUIRED). set(HEADER_FILES; SimpleGUI.h). set(SOURCE_FILES; SimpleGUI.cpp). list(APPEND SOURCE_FILES Main.cpp). if(NOT APPLE); 	set(GLUT_ACTUAL_LIBRARIES ${GLUT_glut_LIBRARY} ); else(); # Workaround: on OS X, ""${GLUT_glut_LIBRARY}"" is not a target (it is; # actually ""-framework GLUT""), so we use find_library to find; # something better (like /System/Library/Frameworks/GLUT.framework.); # (Fun fact: FindGLUT.cmake litterally reads ""These values for Apple; # could probably do with improvement.)""; 	find_library(ACTUAL_GLUT_LIBRARIES ""GLUT""); 	set(GLUT_ACTUAL_LIBRARIES ${ACTUAL_GLUT_LIBRARIES} ); endif(). set(_configPluginFileName plugin_list.conf); set(_defaultConfigPluginFileName ""${_configPluginFileName}.default""); set(_defaultConfigPluginFilePath ""${CMAKE_BINARY_DIR}/${_pluginLocation}/${_defaultConfigPluginFileName}""). add_executable(${PROJECT_NAME} ${HEADER_FILES} ${SOURCE_FILES} ). target_link_libraries(${PROJECT_NAME} SofaGuiCommon SofaSimulationGraph SofaBase ${GLUT_ACTUAL_LIBRARIES} ); if(Boost_FOUND); target_link_libraries(${PROJECT_NAME} ${Boost_LIBRARIES}); endif(); if(Sofa.GL_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.GL); endif(). sofa_add_targets_to_package(; PACKAGE_NAME SofaGui; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""${CMAKE_CURRENT_SOURCE_DIR}""; INCLUDE_INSTALL_DIR ""SofaGui/SofaGuiGlut""; ). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SofaGuiGlut/CMakeLists.txt:267,Simpl,SimpleGUI,267,applications/projects/SofaGuiGlut/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SofaGuiGlut/CMakeLists.txt,2,['Simpl'],['SimpleGUI']
Usability,"cmake_minimum_required(VERSION 3.22); project(SofaPhysicsAPI LANGUAGES CXX). set(SOFAPHYSICSAPI_SRC_DIR ""src/SofaPhysicsAPI""); set(HEADER_FILES; ${SOFAPHYSICSAPI_SRC_DIR}/config.h.in; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsAPI.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsOutputMesh_impl.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsSimulation.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsBindings.h; ${SOFAPHYSICSAPI_SRC_DIR}/fakegui.h; ). set(SOURCE_FILES; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsOutputMesh.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsSimulation.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsBindings.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/fakegui.cpp; ). find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED); sofa_find_package(Sofa.Component REQUIRED); sofa_find_package(Sofa.GUI.Common REQUIRED); sofa_find_package(SofaValidation QUIET). if(SofaValidation_FOUND); message(""SofaPhysicsAPI: SofaValidation has been found; enabling DataController and DataMonitor support.""); list(APPEND HEADER_FILES ; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataController_impl.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataMonitor_impl.h; ); list(APPEND HEADER_FILES ; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataController.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataMonitor.cpp; ); else(); message(""SofaPhysicsAPI: SofaValidation has not been found; DataController and DataMonitor will not be supported.""); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Graph Sofa.GUI.Common Sofa.SimpleApi); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component). if(SofaValidation_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC SofaValidation); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${Sofa_VERSION}). ## Install rules and CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AU",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SofaPhysicsAPI/CMakeLists.txt:710,Simpl,SimpleApi,710,applications/projects/SofaPhysicsAPI/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SofaPhysicsAPI/CMakeLists.txt,1,['Simpl'],['SimpleApi']
Usability,"com/sofa-framework/sofa/) by adding it as a remote.; - **Create a branch** for your changes.; - Make your changes.; - Pull in changes from upstream often to [**sync your fork**](https://help.github.com/articles/syncing-a-fork/) so that merge conflicts will be less likely in your pull request.; - [**Create a pull request**](https://help.github.com/articles/creating-a-pull-request-from-a-fork/) when you are ready to propose your changes into the main project. ### Start easy and simple. For newcomers in the community, we regularly identify issues easy to tackle and to get started with, using a [label ""*good first issue*""](https://github.com/sofa-framework/sofa/issues?q=label%3A%22good+first+issue%22). Choose one, solve it and create your first pull request!. ### Rules. - Description must explain the **issue solved** or the **feature added**, and this must be reported in the **[CHANGELOG.md](https://github.com/sofa-framework/sofa/blob/master/CHANGELOG.md)** file.; - Code must follow **[our guidelines](https://github.com/sofa-framework/sofa/blob/master/GUIDELINES.md)**.; - Commit must build **successfully** on Jenkins for all steps (compilation + tests + examples).; - **Unit Tests** are required for each new component or if an issue is fixed.; - **Examples** (at least one) must be provided showing the new feature. ### Management of pull requests. Standard pull-requests are reviewed and approved by the ""Reviewers"" team. ; Major pull-requests (BREAKING, major features) are reviewed by the ""Reviewers"" team and approved by the ""STC members"" team through a vote within a maximum period of 2 weeks. Reviewing:. - Make sure the pull request is **labelized** and well assigned.; - Control that it follows **our rules** (defined above).; - Track the **status of each pull request** using the dedicated labels:; - ""pr: wip"" must be set if the PR has been created for a team work or if some fixes are needed (discussed in the comments).; - ""pr: to review"" must be set if the PR is ready to b",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:5499,guid,guidelines,5499,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['guid'],['guidelines']
Usability,e [#2856]( https://github.com/sofa-framework/sofa/pull/2856 ); - [Sofa.GUI.Component] Add module version [#3038]( https://github.com/sofa-framework/sofa/pull/3038 ); - [Sofa.Geometry][SofaMeshCollision] Deprecate RayTriangleIntersection class [#2763]( https://github.com/sofa-framework/sofa/pull/2763 ); - [Sofa.Helper] Introduce narrow_cast [#2590]( https://github.com/sofa-framework/sofa/pull/2590 ); - [Sofa.Helper] Remove some compilation warnings [#2619]( https://github.com/sofa-framework/sofa/pull/2619 ); - [Sofa.LinearAlgebra] Deprecate unused EigenMatrixManipulator [#2793]( https://github.com/sofa-framework/sofa/pull/2793 ); - [Sofa.Type] Quat: Optimize rotate() (and inverseRotate()) [#3138]( https://github.com/sofa-framework/sofa/pull/3138 ); - [Sofa.Type] Fix some compilation warnings [#2589]( https://github.com/sofa-framework/sofa/pull/2589 ); - [Sofa.Type] Make RGBAColor constexpr [#2630]( https://github.com/sofa-framework/sofa/pull/2630 ); - [Sofa.Type] Simplify template rebinding [#2570]( https://github.com/sofa-framework/sofa/pull/2570 ); - [SofaBaseMechanics] Clean AddMToMatrixFunctor [#2755]( https://github.com/sofa-framework/sofa/pull/2755 ); - [SofaBaseMechanics][SofaMiscForcefield] Auto-detect MassType [#2644]( https://github.com/sofa-framework/sofa/pull/2644 ); - [SofaBaseTopology] Clearer error message [#2638]( https://github.com/sofa-framework/sofa/pull/2638 ); - [SofaBaseVisual] Remove unused background setting in BaseCamera [#2637]( https://github.com/sofa-framework/sofa/pull/2637 ); - [SofaBoundaryCondition] Remove optimization based on type of matrix [#2859]( https://github.com/sofa-framework/sofa/pull/2859 ); - [SofaBoundaryCondition] Replace deprecated headers [#2574]( https://github.com/sofa-framework/sofa/pull/2574 ); - [SofaBoundaryCondition] Sanitize [#2559]( https://github.com/sofa-framework/sofa/pull/2559 ); - [SofaConstraint] Clean timers in GenericConstraintSolver [#2769]( https://github.com/sofa-framework/sofa/pull/2769 ); - [SofaCo,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:125522,Simpl,Simplify,125522,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Simpl'],['Simplify']
Usability,eEndEvent.cpp; ${SRC_ROOT}/AnimateVisitor.cpp; ${SRC_ROOT}/BaseMechanicalVisitor.cpp; ${SRC_ROOT}/BehaviorUpdatePositionVisitor.cpp; ${SRC_ROOT}/CleanupVisitor.cpp; ${SRC_ROOT}/CollisionAnimationLoop.cpp; ${SRC_ROOT}/CollisionBeginEvent.cpp; ${SRC_ROOT}/CollisionEndEvent.cpp; ${SRC_ROOT}/CollisionVisitor.cpp; ${SRC_ROOT}/CpuTask.cpp; ${SRC_ROOT}/CpuTaskStatus.cpp; ${SRC_ROOT}/DeactivatedNodeVisitor.cpp; ${SRC_ROOT}/DefaultAnimationLoop.cpp; ${SRC_ROOT}/DefaultVisualManagerLoop.cpp; ${SRC_ROOT}/DeleteVisitor.cpp; ${SRC_ROOT}/ExportDotVisitor.cpp; ${SRC_ROOT}/ExportGnuplotVisitor.cpp; ${SRC_ROOT}/ExportVisualModelOBJVisitor.cpp; ${SRC_ROOT}/InitVisitor.cpp; ${SRC_ROOT}/IntegrateBeginEvent.cpp; ${SRC_ROOT}/IntegrateEndEvent.cpp; ${SRC_ROOT}/MainTaskSchedulerRegistry.cpp; ${SRC_ROOT}/MainTaskSchedulerFactory.cpp; ${SRC_ROOT}/MechanicalOperations.cpp; ${SRC_ROOT}/MechanicalVPrintVisitor.cpp; ${SRC_ROOT}/MechanicalVisitor.cpp; ${SRC_ROOT}/MutationListener.cpp; ${SRC_ROOT}/Node.cpp; ${SRC_ROOT}/PauseEvent.cpp; ${SRC_ROOT}/PipelineImpl.cpp; ${SRC_ROOT}/PositionEvent.cpp; ${SRC_ROOT}/PrintVisitor.cpp; ${SRC_ROOT}/PropagateEventVisitor.cpp; ${SRC_ROOT}/RequiredPlugin.cpp; ${SRC_ROOT}/ResetVisitor.cpp; ${SRC_ROOT}/SceneLoaderFactory.cpp; ${SRC_ROOT}/SceneCheck.cpp; ${SRC_ROOT}/SceneCheckRegistry.cpp; ${SRC_ROOT}/SceneCheckMainRegistry.cpp; ${SRC_ROOT}/Simulation.cpp; ${SRC_ROOT}/SolveVisitor.cpp; ${SRC_ROOT}/StateChangeVisitor.cpp; ${SRC_ROOT}/TopologyChangeVisitor.cpp; ${SRC_ROOT}/UpdateBoundingBoxVisitor.cpp; ${SRC_ROOT}/UpdateContextVisitor.cpp; ${SRC_ROOT}/UpdateInternalDataVisitor.cpp; ${SRC_ROOT}/UpdateLinksVisitor.cpp; ${SRC_ROOT}/UpdateMappingEndEvent.cpp; ${SRC_ROOT}/UpdateMappingVisitor.cpp; ${SRC_ROOT}/VectorOperations.cpp; ${SRC_ROOT}/VelocityThresholdVisitor.cpp; ${SRC_ROOT}/Visitor.cpp; ${SRC_ROOT}/VisualVisitor.cpp; ${SRC_ROOT}/WriteStateVisitor.cpp; ${SRC_ROOT}/XMLPrintVisitor.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/BaseSimulationExporter.cp,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:7632,Pause,PauseEvent,7632,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Pause'],['PauseEvent']
Usability,ebug [#4491](https://github.com/sofa-framework/sofa/pull/4491); - [Topology] Fix method isQuadDeulaunayOriented and its use in splitAlongPath [#4494](https://github.com/sofa-framework/sofa/pull/4494); - [GitHub] Fix review request Discord msg [#4502](https://github.com/sofa-framework/sofa/pull/4502); - [Simulation.Core] RequiredPlugin: Avoid calling loadPlugin() twice on start-up [#4509](https://github.com/sofa-framework/sofa/pull/4509); - [Share] Remove DefaultCollisionGroupManager in the default scenes [#4521](https://github.com/sofa-framework/sofa/pull/4521); - [all] Fix some warnings [#4529](https://github.com/sofa-framework/sofa/pull/4529); - [GitHub] Fix GH Discussions Announcements for Discord [#4530](https://github.com/sofa-framework/sofa/pull/4530); - [Simulation.Core] Make TSAN pass for caduceus [#4535](https://github.com/sofa-framework/sofa/pull/4535); - [Config] Add cxxopts cmake find module [#4538](https://github.com/sofa-framework/sofa/pull/4538); - [Sofa.Testing] Add SimpleApi in Config.cmake.in [#4542](https://github.com/sofa-framework/sofa/pull/4542); - [script] Stale action: remove temporary layer and activate closing [#4560](https://github.com/sofa-framework/sofa/pull/4560); - [README] Update link to Discord [#4562](https://github.com/sofa-framework/sofa/pull/4562); - [plugins] Add SimpleApi as a dependency in SofaCarving_test [#4572](https://github.com/sofa-framework/sofa/pull/4572); - [Constraint.Lagrangian.Solver] Make problemId counter id atomic [#4581](https://github.com/sofa-framework/sofa/pull/4581); - [Collision.Response.Contact] Make contactId thread-safe [#4582](https://github.com/sofa-framework/sofa/pull/4582); - [Collision.Detection] Give current intersection methods as parameter to intersection functions [#4583](https://github.com/sofa-framework/sofa/pull/4583); - [LinearAlgebra] Fix compilation of assert [#4598](https://github.com/sofa-framework/sofa/pull/4598); - [Multithreading] fix multithread packaging [#4619](https://github.com/s,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:8587,Simpl,SimpleApi,8587,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Simpl'],['SimpleApi']
Usability,"est, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # add custom googletest main; add_subdirectory(SofaGTestMain). set(SOFATESTINGSRC_ROOT ""src/sofa/testing""). set(HEADER_FILES; ${SOFATESTINGSRC_ROOT}/config.h.in; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.h; ${SOFATESTINGSRC_ROOT}/BaseTest.h; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.h; ${SOFATESTINGSRC_ROOT}/NumericTest.h; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.h; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.h; ). set(SOURCE_FILES; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.cpp; ${SOFATESTINGSRC_ROOT}/BaseTest.cpp; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.cpp; ${SOFATESTINGSRC_ROOT}/NumericTest.cpp; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.cpp; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.cpp; ). sofa_find_package(Sofa.Helper REQUIRED); sofa_find_package(Sofa.DefaultType REQUIRED); sofa_find_package(Sofa.Core REQUIRED); sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.DefaultType Sofa.Core Sofa.Simulation.Graph Sofa.SimpleApi GTest::gtest SofaGTestMain ); target_compile_options(${PROJECT_NAME} PUBLIC ""-DGTEST_LINKED_AS_SHARED_LIBRARY=1""). set(SOFA_TESTING_RESOURCES_DIR ""${CMAKE_CURRENT_SOURCE_DIR}/resources""). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_TESTING_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_TESTING_BUILD_TESTS); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt:2969,Simpl,SimpleApi,2969,Sofa/framework/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt,2,['Simpl'],['SimpleApi']
Usability,ework/sofa/pull/1152 ); - **[SofaKernel]** ADD: static method in events to retrieve the classname [#1118]( https://github.com/sofa-framework/sofa/pull/1118 ); - **[SofaKernel]** Set BaseData to non-persistant by default [#1191]( https://github.com/sofa-framework/sofa/pull/1191 ); - **[SofaKernel]** fix root's getPathName [#1146]( https://github.com/sofa-framework/sofa/pull/1146 ). ### Improvements. **Architecture**; - [CMake] v19.06 changes [#1114]( https://github.com/sofa-framework/sofa/pull/1114 ); - [extlibs] Set Eigen as external project + upgrade to 3.2.10 [#1101]( https://github.com/sofa-framework/sofa/pull/1101 ); - [extlibs] Upgrade Qwt extlib from 6.1.2 to 6.1.4 [#1136]( https://github.com/sofa-framework/sofa/pull/1136 ). **Modules**; - [All] Add SingleLink to Topology to reveal hidden GetMeshTopology Part 2 [#1199]( https://github.com/sofa-framework/sofa/pull/1199 ); - [All] Add update internal mechanism [#1131]( https://github.com/sofa-framework/sofa/pull/1131 ); - [All] Update the SOFA Guidelines [#1135]( https://github.com/sofa-framework/sofa/pull/1135 ); - **[SofaBaseMechanics]** Add topological change in barycentric mapping [#1203]( https://github.com/sofa-framework/sofa/pull/1203 ); - **[SofaBaseMechanics]** Use doUpdateInternal API in DiagonalMass [#1150]( https://github.com/sofa-framework/sofa/pull/1150 ); - **[SofaBaseMechanics]** Use doUpdateInternal API in UniformMass [#1149]( https://github.com/sofa-framework/sofa/pull/1149 ); - **[SofaBaseTopology]** Add new geometric methods in TetrahedronSetGeometryAlgorythms [#1160]( https://github.com/sofa-framework/sofa/pull/1160 ); - **[SofaCore]** Remove thread specific declaration [#1129]( https://github.com/sofa-framework/sofa/pull/1129 ); - [SofaGeneralEngine] Added Rigid to Euler orientation export [#1141]( https://github.com/sofa-framework/sofa/pull/1141 ); - [SofaHaptics] Add mutex and option to lock the ForceFeedback computation [#1157]( https://github.com/sofa-framework/sofa/pull/1157 ); - **[So,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:245260,Guid,Guidelines,245260,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Guid'],['Guidelines']
Usability,"ework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/sofa-framework/sofa]( https://github.com/sofa-framework/sofa ); - creation of a RigidScale plugin: implementing mappings, especially allowing to get the DOF with Rigid+Scale type, while reusing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing to integrate a Leap in your SOFA simulation; - add the DrawTool: DrawTool is an interface, describing an API to display primitives on screen. For now, only the OpenGL (fixed-pipeline version) implementation has been made.; - add a Logger; - add the diffusion effect in SOFA (heat transfer); - SOFA_USE_MASK compilation variable to activate or de-activate the masks in SOFA; - DataTracker: simple and elegant way to track Data in Engine; - extlibs: update cimg to version 1.7.3; - Add guidelines for contributions in CONTRIBUTING.md. ### Moved files. - Kernel modules of SOFA (SofaFramework, SofaBase, SofaCommon and SofaSimulation) have been moved to one common module SofaKernel, located at _sofa_root/SofaKernel_. SofaKernel is a pure LGPL module.; - code in _sofa_root/modules/sofa/simulation/_ has been splitted into three modules of SofaKernel: SofaSimulationCommon, SofaSimulationTree, SofaSimulationGraph; - MOVE the SofaPardiso module as a plugin; - Move OglTetrahedralModel into a new plugin called VolumetricRendering. - Minor moves; - Move ColorMap code to helper and let (Ogl)ColorMap from SofaOpenGLVisual doing OpenGL stuff; - Move TorsionForceField and ComplementaryROI into SOFA (those two components where in a deprecated repository _sofa_root/modules/sofa/components/_). - [Compliant]; - moving propagate_constraint_force_visitor in a helper file and minor cleaning of CompliantImplicitSolver. ### Improvements. - test examples are now running (on Jenkins for the Continuous Integrati",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:341970,guid,guidelines,341970,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['guid'],['guidelines']
Usability,"example.dae"" illustrate pretty well how works the plugin.; Its XML description contains a line with the new SceneColladaLoader component with its filename data filled as below :. <SceneColladaLoader name=""sceneColladaLoader"" filename=""example.dae"" />. The collada file example.dae contains a very basic scene with a mesh skinned with two bones representing an arm which is animated in two step as shown in the following screenshots [took from Blender (software)] :.       . Animation step 1 : Arm is raised. Animation step 2 : Arm is bent. And now the same scene loaded into Sofa :. Animation step 1 : Arm is raised; Animation step 1-2 : Arm animation interpolated by Sofa(animation speed depends of the animation time step); Animation step 2 : Arm is bent. Another example with a scene containing two meshes, one with the same bones as in the previous example and a sphere without skinning.       . The scene in the Sofa Modeler. The same scene in runSofa.       As you can see in Sofa Modeler, the scene to load a collada file is very simple. We have the SceneColladaLoader to load it and, important thing, we also have an EulerSolver ; which will be used by the potential SkeletalMotionProjectiveConstraints to ""play"" the animation updating positions and velocities.; When you launch runSofa with this scene, a new node will be added which contains the whole collada scene. The name of this node is the name you gave to the ; SceneColladaLoader plus the string ""_scene"". On the right picture, the loader generated two child nodes call ""mesh 0"" which contains a mesh without skinning (the sphere), and ; ""mesh 1"" which contains a mesh with skinning and bones animation directly from the collada file.; The SkeletalMotionProjectiveConstraint automatically interpolates between animation frames, play with the animation time step to slown down or speed up the animation. As you can see on the other example below, the woman's hair does not fit her head very well because its coordinates system belongs",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:3876,simpl,simple,3876,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,1,['simpl'],['simple']
Usability,f a plugin is init at the load stage [#2425]( https://github.com/sofa-framework/sofa/pull/2425 ); - [Sofa.LinearAlgebra] Introduce fast sparse matrix product and use it in MechanicalMatrixMapper [#2394]( https://github.com/sofa-framework/sofa/pull/2394 ); - [SofaBaseLinearSolver] Introduce GlobalSystemMatrixExporter [#2303]( https://github.com/sofa-framework/sofa/pull/2303 ); - [SofaBaseTopology] Add method to register callbacks directly using the topologyData [#2375]( https://github.com/sofa-framework/sofa/pull/2375 ); - [SofaBaseTopology] Ensure to add a topology EndingEvent before propagating to all topologyData [#2376]( https://github.com/sofa-framework/sofa/pull/2376 ); - [SofaBaseVisual] Fix VisualModelImpl to use topologyData and callback to handle topological changes [#2300]( https://github.com/sofa-framework/sofa/pull/2300 ); - [SofaCore] Add const version of getMSState to Mass [#2293]( https://github.com/sofa-framework/sofa/pull/2293 ); - [SofaCore] Clearer message when template parameter is not compatible with current context [#2262]( https://github.com/sofa-framework/sofa/pull/2262 ); - [SofaCore] Required data msg now depends on existing default value [#2527]( https://github.com/sofa-framework/sofa/pull/2527 ); - [SofaDefaultType] Introduce test interface for BaseMatrix [#2280]( https://github.com/sofa-framework/sofa/pull/2280 ); - [SofaGeneralAnimationLoop] More optimization on MechanicalMatrixMapper [#2411]( https://github.com/sofa-framework/sofa/pull/2411 ); - [SofaGeneralAnimationLoop] Remove matrix compression [#2367]( https://github.com/sofa-framework/sofa/pull/2367 ); - [SofaGeneralDeformable] Add option to enable/disable spring display in TriangularBendingSprings [#2297]( https://github.com/sofa-framework/sofa/pull/2297 ); - [SofaGeneralSimpleFem] Update BeamFEMForceField topologyHander and add tests [#2382]( https://github.com/sofa-framework/sofa/pull/2382 ); - [SofaGraphComponent] Restore check of deprecated components [#2267]( https://github.c,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:140823,Clear,Clearer,140823,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Clear'],['Clearer']
Usability,ffnessMatrix for PlaneForceField [#3972](https://github.com/sofa-framework/sofa/pull/3972); - [AnimationLoop] Change the default constraint solver in FreeMotionAnimationLoop [#3994](https://github.com/sofa-framework/sofa/pull/3994); - [Spring] Implement buildStiffnessMatrix in PolynomialRestShapeSpringsForceField [#4009](https://github.com/sofa-framework/sofa/pull/4009); - [MechanicalLoad] Remove the data force in ConstantFF and solves circular dependency [#4019](https://github.com/sofa-framework/sofa/pull/4019); - [all] Lifecycle v23.12 1/n [#4034](https://github.com/sofa-framework/sofa/pull/4034); - [Core] Make doDrawVisual final [#4045](https://github.com/sofa-framework/sofa/pull/4045); - [Visual] ADD a visualization flag and draw method for NarrowPhaseDetection [#4048](https://github.com/sofa-framework/sofa/pull/4048); - [SolidMechanics.TensorMass] Implement buildStiffnessMatrix for TetrahedralTensorMassForceField [#4127](https://github.com/sofa-framework/sofa/pull/4127); - [BatchGUI] Show progress bar [#4168](https://github.com/sofa-framework/sofa/pull/4168); - [Constraint.Lagrangian.Solver] Another step to factorize both constraint solvers [#4213](https://github.com/sofa-framework/sofa/pull/4213); - [all] Replace tinyxml by external tinyxml2 [#4240](https://github.com/sofa-framework/sofa/pull/4240). ### Improvements; - [all] Add namespaces in the factory and a python-like import mechanism [#2512](https://github.com/sofa-framework/sofa/pull/2512); - [IO][Tests] Add basic test for the MeshSTLLoader [#2999](https://github.com/sofa-framework/sofa/pull/2999); - [SofaCarving] Add an example written in python [#3457](https://github.com/sofa-framework/sofa/pull/3457); - [MultiThreading] Implement domain decomposition for a lock-free parallelism [#3566](https://github.com/sofa-framework/sofa/pull/3566); - [Components] Add functions to visualization of TetrahedronFemForceField [#3821](https://github.com/sofa-framework/sofa/pull/3821); - [LinearAlgebra] Change access spe,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:24244,progress bar,progress bar,24244,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['progress bar'],['progress bar']
Usability,getDeprecatedComponents; ************************. getDeprecatedComponents is a simple executable that reads the map sofa::helper::deprecated::components and outputs all components.; It is used by SOFA CI scripts to avoid testing scenes that contain deprecated components.; WARNING: the map needs to be up-to-date!; ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/getDeprecatedComponents/README.txt:80,simpl,simple,80,applications/projects/getDeprecatedComponents/README.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/getDeprecatedComponents/README.txt,1,['simpl'],['simple']
Usability,"ght label** to your issue among our label list or propose them in the description.; - **Be clear** about what your problem is: what was the expected outcome, what happened instead? Detail how someone else can recreate the problem.; - If your issue reports a bug or any abnormal behavior in SOFA, a **test highlighting the issue** should be written and pull requested. For more information on issues, check out [this GitHub guide](https://guides.github.com/features/issues/). . # Pull requests. If you are able to patch the bug or add the feature yourself – fantastic, make a pull request with the code! Be sure you have read any documents on contributing and you understand [the SOFA license](https://github.com/sofa-framework/sofa/blob/master/LICENCE.txt). Once you have submitted a pull request the maintainer(s) can compare your branch to the existing one and decide whether or not to incorporate (pull in) your changes. ### Reminder - How to pull request (from GitHub documentation). - **[Fork](http://guides.github.com/activities/forking/)** the repository and clone it locally.; - [Connect your clone](https://help.github.com/articles/configuring-a-remote-for-a-fork/) to [the original **upstream** repository](https://github.com/sofa-framework/sofa/) by adding it as a remote.; - **Create a branch** for your changes.; - Make your changes.; - Pull in changes from upstream often to [**sync your fork**](https://help.github.com/articles/syncing-a-fork/) so that merge conflicts will be less likely in your pull request.; - [**Create a pull request**](https://help.github.com/articles/creating-a-pull-request-from-a-fork/) when you are ready to propose your changes into the main project. ### Start easy and simple. For newcomers in the community, we regularly identify issues easy to tackle and to get started with, using a [label ""*good first issue*""](https://github.com/sofa-framework/sofa/issues?q=label%3A%22good+first+issue%22). Choose one, solve it and create your first pull request!. ##",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:4272,guid,guides,4272,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['guid'],['guides']
Usability,"ights that; you have. You must make sure that they, too, receive or can get the; source code. And you must show them these terms so they know their; rights. We protect your rights with two steps: (1) copyright the software, and; (2) offer you this license which gives you legal permission to copy,; distribute and/or modify the software. Also, for each author's protection and ours, we want to make certain; that everyone understands that there is no warranty for this free; software. If the software is modified by someone else and passed on, we; want its recipients to know that what they have is not the original, so; that any problems introduced by others will not reflect on the original; authors' reputations. Finally, any free program is threatened constantly by software; patents. We wish to avoid the danger that redistributors of a free; program will individually obtain patent licenses, in effect making the; program proprietary. To prevent this, we have made it clear that any; patent must be licensed for everyone's free use or not licensed at all. The precise terms and conditions for copying, distribution and; modification follow. 		 GNU GENERAL PUBLIC LICENSE; TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION. 0. This License applies to any program or other work which contains; a notice placed by the copyright holder saying it may be distributed; under the terms of this General Public License. The ""Program"", below,; refers to any such program or work, and a ""work based on the Program""; means either the Program or any derivative work under copyright law:; that is to say, a work containing the Program or a portion of it,; either verbatim or with modifications and/or translated into another; language. (Hereinafter, translation is included without limitation in; the term ""modification"".) Each licensee is addressed as ""you"". Activities other than copying, distribution and modification are not; covered by this License; they are outside its scope. The act of; r",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:3635,clear,clear,3635,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['clear'],['clear']
Usability,"ights that; you have. You must make sure that they, too, receive or can get the; source code. And you must show them these terms so they know their; rights. We protect your rights with two steps: (1) copyright the software, and; (2) offer you this license which gives you legal permission to copy,; distribute and/or modify the software. Also, for each author's protection and ours, we want to make certain; that everyone understands that there is no warranty for this free; software. If the software is modified by someone else and passed on, we; want its recipients to know that what they have is not the original, so; that any problems introduced by others will not reflect on the original; authors' reputations. Finally, any free program is threatened constantly by software; patents. We wish to avoid the danger that redistributors of a free; program will individually obtain patent licenses, in effect making the; program proprietary. To prevent this, we have made it clear that any; patent must be licensed for everyone's free use or not licensed at all. The precise terms and conditions for copying, distribution and; modification follow. GNU GENERAL PUBLIC LICENSE; TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION. 0. This License applies to any program or other work which contains; a notice placed by the copyright holder saying it may be distributed; under the terms of this General Public License. The ""Program"", below,; refers to any such program or work, and a ""work based on the Program""; means either the Program or any derivative work under copyright law:; that is to say, a work containing the Program or a portion of it,; either verbatim or with modifications and/or translated into another; language. (Hereinafter, translation is included without limitation in; the term ""modification"".) Each licensee is addressed as ""you"". Activities other than copying, distribution and modification are not; covered by this License; they are outside its scope. The act of; runn",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:2664,clear,clear,2664,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,5,['clear'],['clear']
Usability,"ime to time. Such new versions will; be similar in spirit to the present version, but may differ in detail to; address new problems or concerns. Each version is given a distinguishing version number. If the Program; specifies a version number of this License which applies to it and ""any; later version"", you have the option of following the terms and conditions; either of that version or of any later version published by the Free; Software Foundation. If the Program does not specify a version number of; this License, you may choose any version ever published by the Free Software; Foundation. 10. If you wish to incorporate parts of the Program into other free; programs whose distribution conditions are different, write to the author; to ask for permission. For software which is copyrighted by the Free; Software Foundation, write to the Free Software Foundation; we sometimes; make exceptions for this. Our decision will be guided by the two goals; of preserving the free status of all derivatives of our free software and; of promoting the sharing and reuse of software generally. 			 NO WARRANTY. 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY; FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN; OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES; PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED; OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF; MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS; TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE; PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,; REPAIR OR CORRECTION. 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING; WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR; REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,; INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:14600,guid,guided,14600,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['guid'],['guided']
Usability,"ime to time. Such new versions will; be similar in spirit to the present version, but may differ in detail to; address new problems or concerns. Each version is given a distinguishing version number. If the Program; specifies a version number of this License which applies to it and ""any; later version"", you have the option of following the terms and conditions; either of that version or of any later version published by the Free; Software Foundation. If the Program does not specify a version number of; this License, you may choose any version ever published by the Free Software; Foundation. 10. If you wish to incorporate parts of the Program into other free; programs whose distribution conditions are different, write to the author; to ask for permission. For software which is copyrighted by the Free; Software Foundation, write to the Free Software Foundation; we sometimes; make exceptions for this. Our decision will be guided by the two goals; of preserving the free status of all derivatives of our free software and; of promoting the sharing and reuse of software generally. NO WARRANTY. 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY; FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN; OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES; PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED; OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF; MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS; TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE; PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,; REPAIR OR CORRECTION. 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING; WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR; REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,; INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARI",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:13626,guid,guided,13626,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,5,['guid'],['guided']
Usability,"isfy both it and this License would be to; refrain entirely from distribution of the Program. If any portion of this section is held invalid or unenforceable under; any particular circumstance, the balance of the section is intended to; apply and the section as a whole is intended to apply in other; circumstances. It is not the purpose of this section to induce you to infringe any; patents or other property right claims or to contest validity of any; such claims; this section has the sole purpose of protecting the; integrity of the free software distribution system, which is; implemented by public license practices. Many people have made; generous contributions to the wide range of software distributed; through that system in reliance on consistent application of that; system; it is up to the author/donor to decide if he or she is willing; to distribute software through any other system and a licensee cannot; impose that choice. This section is intended to make thoroughly clear what is believed to; be a consequence of the rest of this License. 8. If the distribution and/or use of the Program is restricted in; certain countries either by patents or by copyrighted interfaces, the; original copyright holder who places the Program under this License; may add an explicit geographical distribution limitation excluding; those countries, so that distribution is permitted only in or among; countries not thus excluded. In such case, this License incorporates; the limitation as if written in the body of this License. 9. The Free Software Foundation may publish revised and/or new versions; of the General Public License from time to time. Such new versions will; be similar in spirit to the present version, but may differ in detail to; address new problems or concerns. Each version is given a distinguishing version number. If the Program; specifies a version number of this License which applies to it and ""any; later version"", you have the option of following the terms and conditio",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:12039,clear,clear,12039,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,6,['clear'],['clear']
Usability,l/2341 ); - [SofaHelper] Factory key type can be other than std::string [#2259]( https://github.com/sofa-framework/sofa/pull/2259 ); - [SofaMiscFEM_test] Add class to test and compare TriangleFEM and TriangularFEMForceField [#2249]( https://github.com/sofa-framework/sofa/pull/2249 ); - [SofaMiscForceField_test] Add TopologicalChanges unit tests for MeshMatrixMass [#2215]( https://github.com/sofa-framework/sofa/pull/2215 ); - [SofaMiscTopology] Add a component TopologyBoundingTrasher to remove mesh going outside from scene bounding box [#2288]( https://github.com/sofa-framework/sofa/pull/2288 ); - [SofaSimpleFem] Add callback on VonMises in TetrahedronFEMForceField [#2407]( https://github.com/sofa-framework/sofa/pull/2407 ); - [SofaSimpleFem] Hexa FEM optimization when assembling by bloc [#2240]( https://github.com/sofa-framework/sofa/pull/2240 ); - [SofaSimpleFem] Simplify bloc-based optimization [#2281]( https://github.com/sofa-framework/sofa/pull/2281 ); - [SofaSimulationCore] Clearer message when a linear solver is missing [#2221]( https://github.com/sofa-framework/sofa/pull/2221 ); - [SofaSparseSolver] Fix msg readibility in SparseLDL [#2294]( https://github.com/sofa-framework/sofa/pull/2294 ); - [SofaSparseSolver] Introduce FillReducingOrdering [#2501]( https://github.com/sofa-framework/sofa/pull/2501 ). **Plugins / Projects**; - [image] Restore ability to select a subset of instanciations [#2340]( https://github.com/sofa-framework/sofa/pull/2340 ). **Examples / Scenes**; - [examples] Add a new example how to create heterogeneous tet FEM [#2289]( https://github.com/sofa-framework/sofa/pull/2289 ); - [examples] Speedup the caduceus [#2471]( https://github.com/sofa-framework/sofa/pull/2471 ); - [Scenes] Update TriangleSurfaceCutting scene to use a bigger mesh with texture [#2381]( https://github.com/sofa-framework/sofa/pull/2381 ). **Scripts / Tools**. ### Bug Fixes. **Architecture**; - [CMake] Clean Sofa.Core CMakeLists + Add missing headers [#2444]( https://git,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:143443,Clear,Clearer,143443,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Clear'],['Clearer']
Usability,lper] Introduce narrow_cast [#2590]( https://github.com/sofa-framework/sofa/pull/2590 ); - [Sofa.Helper] Remove some compilation warnings [#2619]( https://github.com/sofa-framework/sofa/pull/2619 ); - [Sofa.LinearAlgebra] Deprecate unused EigenMatrixManipulator [#2793]( https://github.com/sofa-framework/sofa/pull/2793 ); - [Sofa.Type] Quat: Optimize rotate() (and inverseRotate()) [#3138]( https://github.com/sofa-framework/sofa/pull/3138 ); - [Sofa.Type] Fix some compilation warnings [#2589]( https://github.com/sofa-framework/sofa/pull/2589 ); - [Sofa.Type] Make RGBAColor constexpr [#2630]( https://github.com/sofa-framework/sofa/pull/2630 ); - [Sofa.Type] Simplify template rebinding [#2570]( https://github.com/sofa-framework/sofa/pull/2570 ); - [SofaBaseMechanics] Clean AddMToMatrixFunctor [#2755]( https://github.com/sofa-framework/sofa/pull/2755 ); - [SofaBaseMechanics][SofaMiscForcefield] Auto-detect MassType [#2644]( https://github.com/sofa-framework/sofa/pull/2644 ); - [SofaBaseTopology] Clearer error message [#2638]( https://github.com/sofa-framework/sofa/pull/2638 ); - [SofaBaseVisual] Remove unused background setting in BaseCamera [#2637]( https://github.com/sofa-framework/sofa/pull/2637 ); - [SofaBoundaryCondition] Remove optimization based on type of matrix [#2859]( https://github.com/sofa-framework/sofa/pull/2859 ); - [SofaBoundaryCondition] Replace deprecated headers [#2574]( https://github.com/sofa-framework/sofa/pull/2574 ); - [SofaBoundaryCondition] Sanitize [#2559]( https://github.com/sofa-framework/sofa/pull/2559 ); - [SofaConstraint] Clean timers in GenericConstraintSolver [#2769]( https://github.com/sofa-framework/sofa/pull/2769 ); - [SofaConstraint] Clean timers in LCPConstraintSolver [#2640]( https://github.com/sofa-framework/sofa/pull/2640 ); - [SofaConstraint] Replace raw pointer to Link [#2770]( https://github.com/sofa-framework/sofa/pull/2770 ); - [SofaConstraint] Sanitize [#2577]( https://github.com/sofa-framework/sofa/pull/2577 ); - [SofaCor,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:125865,Clear,Clearer,125865,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Clear'],['Clearer']
Usability,ltiMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMultiMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LinearMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LineSetSkinningMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LineSetSkinningMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedHexaTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraTopologicalMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SkinningMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SkinningMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMultiMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMultiMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/TubularMapping.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/TubularMapping.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/VoidMapping.h; ). set(SOURCE_FILES; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapper.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperEdgeSetTo,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt:4632,Simpl,SimpleTesselatedTetraMechanicalMapping,4632,Sofa/Component/Mapping/Linear/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt,1,['Simpl'],['SimpleTesselatedTetraMechanicalMapping']
Usability,"nges and removed un-needed includes; - [SofaPython]; - cleaning data binding [#166]( https://github.com/sofa-framework/sofa/pull/166 ). ### Moved files. - The module handling HighOrderTopologies moved into a [separate repository]( https://github.com/sofa-framework/plugin.HighOrder) [#222](https://github.com/sofa-framework/sofa/pull/222 ). ____________________________________________________________. ## [v16.12]( https://github.com/sofa-framework/sofa/tree/v16.12 ). **Last commit: on Jan 08, 2017** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v16.08...v16.12 ). ### Environment; - **C++11 is now mandatory**. This implies some changes in building tools.; - Generator: CMake 3.1 or higher.; - Compiler: GCC 4.8 or higher, Clang 3.4 or higher, Microsoft Visual C++ 2013 or higher. ### New features for users. - new Geomagic plugin: supporting latest versions of force feedback interfaces from Geomagic; - add ForceMaskOff, a component to locally (in a branch of the scene graph) cancel the force mask; - live-coding for python; - live-coding for GLSL; - new component MakeAlias; - new component MakeDataAlias; - improved error message & console rendering. ### New features for developpers. - Preliminary Markdown support in the msg_* API. You can now write much better formatting & alignement as well as adding URL to documentations related to the error.; - class RichStyleConsoleFormatter which interprete the markdowns in the message and format this to a resizable console with nice alignement.; - class CountingMessageHandler (count the number of message for each message type); - class RoutingMessageHandler (to implement context specific routing of the messages to different handler); - class ExpectMessage and MessageAsATestFailure can be used to check that a component did or didn't send a message and generate a test failure.; - FileMonitor is now implemented on MacOS & Windows (for live-coding features, for example); - RequiredPlugin: modified API to take a list of plugi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:336951,feedback,feedback,336951,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['feedback'],['feedback']
Usability,ntricMappingRigid.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BeamLinearMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/CenterOfMassMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/CenterOfMassMulti2Mapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/CenterOfMassMultiMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/DeformableOnRigidFrameMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/IdentityMultiMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/LineSetSkinningMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/Mesh2PointTopologicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedHexaTopologicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraMechanicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SimpleTesselatedTetraTopologicalMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SkinningMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/SubsetMultiMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/TubularMapping.cpp; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/VoidMapping.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Grid REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Dynamic); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Grid). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt:7656,Simpl,SimpleTesselatedTetraMechanicalMapping,7656,Sofa/Component/Mapping/Linear/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt,1,['Simpl'],['SimpleTesselatedTetraMechanicalMapping']
Usability,ofa-framework/sofa/pull/4026); - [all] Lifecycle v23.12 2/n [#4040](https://github.com/sofa-framework/sofa/pull/4040); - [GUI.Qt] Remove unused recorder feature [#4041](https://github.com/sofa-framework/sofa/pull/4041); - [MechanicalLoad] Use prefix d_ in DiagonalVelocityDampingForceField [#4046](https://github.com/sofa-framework/sofa/pull/4046); - [all] Lifecycle v23.12 3/n [#4056](https://github.com/sofa-framework/sofa/pull/4056); - [all] Clean unused warnings in SOFA [#4057](https://github.com/sofa-framework/sofa/pull/4057); - [all] Lifecycle v23.12 4/n [#4058](https://github.com/sofa-framework/sofa/pull/4058); - [plugins] Fix OptionGroup deprecated constructor in image and SofaCUDA plugin [#4064](https://github.com/sofa-framework/sofa/pull/4064); - [all] Update code regarding lifecycle in Topology.h [#4065](https://github.com/sofa-framework/sofa/pull/4065); - [all] Fix warnings related to Vec and unused var [#4067](https://github.com/sofa-framework/sofa/pull/4067); - [all] Remove some simple uses of bwdInit() [#4075](https://github.com/sofa-framework/sofa/pull/4075); - [SofaMatrix] Remove CImgPlugin dependency [#4112](https://github.com/sofa-framework/sofa/pull/4112); - [all] Replace deprecated wbloc function by its new function name [#4118](https://github.com/sofa-framework/sofa/pull/4118); - [Core] VecId: set correct message for the deleted function holonomicC [#4120](https://github.com/sofa-framework/sofa/pull/4120); - [IO.Mesh.Tests] Reduce number of logs by unactivating printlog [#4148](https://github.com/sofa-framework/sofa/pull/4148); - [Constraint.Lagrangian.Solver] LCPConstraintSolver: remove useless computation if printLog is enabled [#4170](https://github.com/sofa-framework/sofa/pull/4170); - [Scene] Eigen3-SVD.scn: disable printLog [#4184](https://github.com/sofa-framework/sofa/pull/4184); - [Constraint.Lagrangian.Solver] Clean both constraint solvers [#4185](https://github.com/sofa-framework/sofa/pull/4185); - [Topology.Container] Update and rename ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:45104,simpl,simple,45104,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['simpl'],['simple']
Usability,"ofaKernel]** Remove boost::locale dependency [#1033]( https://github.com/sofa-framework/sofa/pull/1033 ); - **[SofaKernel]** Remove usage of helper::system::atomic<int> (replaced by STL's) [#1035]( https://github.com/sofa-framework/sofa/pull/1035 ); - **[SofaKernel]** Several changes in Topology components [#999]( https://github.com/sofa-framework/sofa/pull/999 ); - **[SofaKernel]** minor cleaning in mesh loader [#1025]( https://github.com/sofa-framework/sofa/pull/1025 ); - **[SofaKernel]** Remove multigroup option in MatrixLinearSolver [#901]( https://github.com/sofa-framework/sofa/pull/901 ); - [SofaRigid] Clean JointSpringFF [#850]( https://github.com/sofa-framework/sofa/pull/850 ); - [SofaRigid] Cosmetic clean in RigidRigidMapping & msg_* update. [#1005]( https://github.com/sofa-framework/sofa/pull/1005 ); - **[SofaSimpleFem]** Use msg and size_t in TetraDiff [#1016]( https://github.com/sofa-framework/sofa/pull/1016 ). **Plugins / Projects**; - [image] Add warning guiding users regarding pluginization of DiffusionSolver [#1067]( https://github.com/sofa-framework/sofa/pull/1067 ); - [Modeler] Deactivate Modeler by default, since it is deprecated [#972]( https://github.com/sofa-framework/sofa/pull/972 ). **Examples / Scenes**; - [Scenes] Apply script on all scenes using VisualModel/OglModel [#1081]( https://github.com/sofa-framework/sofa/pull/1081 ). ____________________________________________________________. ## [v18.12]( https://github.com/sofa-framework/sofa/tree/v18.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v18.06...v18.12 ). ### Deprecated. **Removed in v18.12**; - [SofaBoundaryCondition] BuoyantForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaBoundaryCondition] VaccumSphereForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - **[SofaHelper]** Utils::getPluginDirectory() [#518]( https://github.com/sofa-framework/sofa/pull/518) - Use PluginRepository.getFirstPath( ) instead; - [SofaMisc] Par",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:274194,guid,guiding,274194,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['guid'],['guiding']
Usability,"om/sofa-framework/sofa/issues)! There is nothing to it and whatever issue you are having, you are likely not the only one, so others will find your issue helpful, too. Issues labeled ""discussion"" are also used for larger topics: architecture, future of SOFA, long term dev, etc. Please **DO NOT create an issue for questions or support**. Use [the GitHub Discussions](https://github.com/sofa-framework/sofa/discussions) instead. When creating an issue, pay attention to the following tips:. - **Check existing issues**. What you are running into may have been addressed already.; - **Set the right label** to your issue among our label list or propose them in the description.; - **Be clear** about what your problem is: what was the expected outcome, what happened instead? Detail how someone else can recreate the problem.; - If your issue reports a bug or any abnormal behavior in SOFA, a **test highlighting the issue** should be written and pull requested. For more information on issues, check out [this GitHub guide](https://guides.github.com/features/issues/). . # Pull requests. If you are able to patch the bug or add the feature yourself – fantastic, make a pull request with the code! Be sure you have read any documents on contributing and you understand [the SOFA license](https://github.com/sofa-framework/sofa/blob/master/LICENCE.txt). Once you have submitted a pull request the maintainer(s) can compare your branch to the existing one and decide whether or not to incorporate (pull in) your changes. ### Reminder - How to pull request (from GitHub documentation). - **[Fork](http://guides.github.com/activities/forking/)** the repository and clone it locally.; - [Connect your clone](https://help.github.com/articles/configuring-a-remote-for-a-fork/) to [the original **upstream** repository](https://github.com/sofa-framework/sofa/) by adding it as a remote.; - **Create a branch** for your changes.; - Make your changes.; - Pull in changes from upstream often to [**sync your fork",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:3689,guid,guide,3689,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,2,['guid'],"['guide', 'guides']"
Usability,"otect your rights, we need to make restrictions that forbid; distributors to deny you these rights or to ask you to surrender these; rights. These restrictions translate to certain responsibilities for; you if you distribute copies of the library or if you modify it. For example, if you distribute copies of the library, whether gratis; or for a fee, you must give the recipients all the rights that we gave; you. You must make sure that they, too, receive or can get the source; code. If you link other code with the library, you must provide; complete object files to the recipients, so that they can relink them; with the library after making changes to the library and recompiling; it. And you must show them these terms so they know their rights. We protect your rights with a two-step method: (1) we copyright the; library, and (2) we offer you this license, which gives you legal; permission to copy, distribute and/or modify the library. To protect each distributor, we want to make it very clear that; there is no warranty for the free library. Also, if the library is; modified by someone else and passed on, the recipients should know; that what they have is not the original version, so that the original; author's reputation will not be affected by problems that might be; introduced by others. Finally, software patents pose a constant threat to the existence of; any free program. We wish to make sure that a company cannot; effectively restrict the users of a free program by obtaining a; restrictive license from a patent holder. Therefore, we insist that; any patent license obtained for a version of the library must be; consistent with the full freedom of use specified in this license. Most GNU software, including some libraries, is covered by the; ordinary GNU General Public License. This license, the GNU Lesser; General Public License, applies to certain designated libraries, and; is quite different from the ordinary General Public License. We use; this license for certa",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:2606,clear,clear,2606,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['clear'],['clear']
Usability,"python API; - DeformationMapping: print a warning if a child particle has no parent; - adding HEML implementation of St Venant-Kirchhoff materials (for tetrahedra).; - if correct weights are given in mapping as input data, use it (even if a shapefunction is found); - use sout for logging; - compute tangents for VisualModel loaded using loadVisual python function; - transformEngine for Affine frames. - [Compliant]; - sml: export of meshes; - sml: the solids tags to be simulated as rigids are gathered in a set(); - sml: geometricStiffness option; - sml: using logger; - implementing compliance unassembled API; - in the python API, joints can be created in compliance or not; - API: write a addSpring() in GenericRigidJoint, reuse it in children classes where possible; - API: simplify usage of jointCompliance specification by tag; - API: relative offset position is given to the AssembledRigidRigidMapping, and then computed at init into the MO; - API: modifying the API to move an Offset; - API: adding Offset::moveOffset to apply a rigid transformation to an offset (in its local frame); - API: new parameter to add non-mechanical Offsets and MappedPoints; - API: collision mesh and visual model can be added to a Rigid Offset; - adding an automatic execution of a scene based on a sml description; - Constraint: adding a typeid for faster Constraint type comparisons; - adding short name to create a ConstantCompliantPseudoStaticSolver; - using tag on joints in a generic way, set their compliance / isCompliance value; - added machinery to map data to numpy arrays, see example/numpy_data.py; - added easy pure python mappings, see examples/numpy_mapping.py; - added pure python forcefields, see examples/numpy_forcefield.py; - AssembledRigidRigidMapping autoresize; - geometric stiffness in python mappings; - insertMergeRigid is coherent with solid tags usage; - CompliantPseudoStaticSolver: avoiding an unnecessary propagation when the stopping criterion is the nb of iterations.; - visua",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:352517,simpl,simplify,352517,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['simpl'],['simplify']
Usability,ramework/sofa/pull/4540); - [Core] Update NarrowPhaseDetection.cpp use prefix [#4557](https://github.com/sofa-framework/sofa/pull/4557); - [Geomagic] Update GeomagicDriver.cpp to fire error when hd.h is not found [#4576](https://github.com/sofa-framework/sofa/pull/4576); - [CMake] Upgrade cmake_minimum_required to 3.22 [#4586](https://github.com/sofa-framework/sofa/pull/4586); - [Core] Remove unused debug trace [#4590](https://github.com/sofa-framework/sofa/pull/4590); - [Core] cmake: Remove last traces of Sofa.Component.Compat [#4596](https://github.com/sofa-framework/sofa/pull/4596); - [LinearAlgebra] Remove empty source file [#4599](https://github.com/sofa-framework/sofa/pull/4599); - [Type] Clean and test MatSym [#4600](https://github.com/sofa-framework/sofa/pull/4600); - [tests] Use appropriate gtest macro [#4607](https://github.com/sofa-framework/sofa/pull/4607); - [LinearSystem] Remove development artifact [#4620](https://github.com/sofa-framework/sofa/pull/4620); - [all] Minor last fixes using SimpleApi [#4627](https://github.com/sofa-framework/sofa/pull/4627); - [SolidMechanics.FEM] Small update on container access to avoid unecessary check [#4639](https://github.com/sofa-framework/sofa/pull/4639); - [AnimationLoop] Rename Data [#4664](https://github.com/sofa-framework/sofa/pull/4664); - [Guidelines] Format cpp code [#4695](https://github.com/sofa-framework/sofa/pull/4695); - [all] Remove some warnings [#4698](https://github.com/sofa-framework/sofa/pull/4698); - [examples] Run PluginFinder on examples [#4707](https://github.com/sofa-framework/sofa/pull/4707); - [examples] Remove examples using DefaultCollisionGroupManager [#4708](https://github.com/sofa-framework/sofa/pull/4708); - [Core] Warn when module name is empty [#4725](https://github.com/sofa-framework/sofa/pull/4725); - ﻿[PlayBack] Update playback scenes to write/read and compare a beam under gravity motion [#4745](https://github.com/sofa-framework/sofa/pull/4745); - [tools] Factorize and clean plu,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:16689,Simpl,SimpleApi,16689,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Simpl'],['SimpleApi']
Usability,recate the module [#2368]( https://github.com/sofa-framework/sofa/pull/2368 ); - [SofaBaseLinearSolver] Extract and uncomment CRSMultiMatrixAccessor [#2220]( https://github.com/sofa-framework/sofa/pull/2220 ); - [SofaBaseLinearSolver] Fix typo [#2256]( https://github.com/sofa-framework/sofa/pull/2256 ); - [SofaBaseLinearSolver] Make CRSMultiMatrixAccessor optional (compilation and usage) [#2372]( https://github.com/sofa-framework/sofa/pull/2372 ); - [SofaBaseLinearSolver] Remove FullMatrix<bool> and FullVector<bool> [#2313]( https://github.com/sofa-framework/sofa/pull/2313 ); - [SofaBaseMechanics] Remove TopologyHandler in masses to use TopologyData callbacks (part 5) [#2391]( https://github.com/sofa-framework/sofa/pull/2391 ); - [SofaBaseMechanics] Remove unused handleEvent in UniformMass [#2521]( https://github.com/sofa-framework/sofa/pull/2521 ); - [SofaBaseMechanics] Simplify expression [#2468]( https://github.com/sofa-framework/sofa/pull/2468 ); - [SofaBaseMechanics] Use directly clear() when resetting force in MechanicalObject [#2518]( https://github.com/sofa-framework/sofa/pull/2518 ); - [SofaBaseTopology] 'createTopologyHandler' overrides a member function but is not marked 'override' [#2260]( https://github.com/sofa-framework/sofa/pull/2260 ); - [SofaBaseVisual] Split VisualModelImpl init method in several methods for more clarity [#2299]( https://github.com/sofa-framework/sofa/pull/2299 ); - [SofaConstraint] Better includes [#2266]( https://github.com/sofa-framework/sofa/pull/2266 ); - [SofaConstraint] Divide a timer in 2 [#2469]( https://github.com/sofa-framework/sofa/pull/2469 ); - [SofaConstraint] Remove dependency on TetrahedronFEMForcefield [#2250]( https://github.com/sofa-framework/sofa/pull/2250 ); - [SofaCore] Clean force fields [#2243]( https://github.com/sofa-framework/sofa/pull/2243 ); - [SofaCore] Fix two determiners in a row [#2271]( https://github.com/sofa-framework/sofa/pull/2271 ); - [SofaCore] Remove unused addSubMBKToMatrix in force fields,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:157697,clear,clear,157697,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['clear'],['clear']
Usability,"s; - API: collision mesh and visual model can be added to a Rigid Offset; - adding an automatic execution of a scene based on a sml description; - Constraint: adding a typeid for faster Constraint type comparisons; - adding short name to create a ConstantCompliantPseudoStaticSolver; - using tag on joints in a generic way, set their compliance / isCompliance value; - added machinery to map data to numpy arrays, see example/numpy_data.py; - added easy pure python mappings, see examples/numpy_mapping.py; - added pure python forcefields, see examples/numpy_forcefield.py; - AssembledRigidRigidMapping autoresize; - geometric stiffness in python mappings; - insertMergeRigid is coherent with solid tags usage; - CompliantPseudoStaticSolver: avoiding an unnecessary propagation when the stopping criterion is the nb of iterations.; - visualization in DifferenceFromTargetMapping; - Frame.py: adding a function to force quaternion normalization (to avoid numerical drift); - added SimpleAnimationLoop; - adding RigidRestJointMapping to compute a joint between a rigid body's current position and its rest position.; - large compliances are considered as null stiffnesses; - Offset default to isMechanical=True; - python quaternion log; - added nlnscg acceleration; - pure python constraints; - .inl for python mappings; - adding Addition[Multi]Mapping; - implementing AssembledMultiMapping::applyDJT; - adding DotProduct[Multi]Mapping (with tests); - adding NormalizationMapping to map a 3d vector to its normalization; - adding ConstantAssembled[Multi]Mapping; - adding SafeDistanceMapping: a distance mapping that becomes a difference mapping for too small distances.; - adding SafeDistanceFromTargetMapping; - using the new SofaPython API; - SafeDistanceFromTargetMapping can now be ""safe"" by giving the edge directions when they are known; - adding the SofaCompliant python module (first module created outside of SofaPython!); - adding DotProductFromTargetMapping (with test); - adding RigidJointF",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:353878,Simpl,SimpleAnimationLoop,353878,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Simpl'],['SimpleAnimationLoop']
Usability,"se, on a durable physical; medium customarily used for software interchange, for a price no; more than your reasonable cost of physically performing this; conveying of source, or (2) access to copy the; Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the; written offer to provide the Corresponding Source. This; alternative is allowed only occasionally and noncommercially, and; only if you received the object code with such an offer, in accord; with subsection 6b. d) Convey the object code by offering access from a designated; place (gratis or for a charge), and offer equivalent access to the; Corresponding Source in the same way through the same place at no; further charge. You need not require recipients to copy the; Corresponding Source along with the object code. If the place to; copy the object code is a network server, the Corresponding Source; may be on a different server (operated by you or a third party); that supports equivalent copying facilities, provided you maintain; clear directions next to the object code saying where to find the; Corresponding Source. Regardless of what server hosts the; Corresponding Source, you remain obligated to ensure that it is; available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided; you inform other peers where the object code and Corresponding; Source of the work are being offered to the general public at no; charge under subsection 6d. A separable portion of the object code, whose source code is excluded; from the Corresponding Source as a System Library, need not be; included in conveying the object code work. A ""User Product"" is either (1) a ""consumer product"", which means any; tangible personal property which is normally used for personal, family,; or household purposes, or (2) anything designed or sold for incorporation; into a dwelling. In determining whether a product is a co",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:33026,clear,clear,33026,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['clear'],['clear']
Usability,"so reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_SofaHAPI ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_SofaHAPI); {; usePlugin(SofaHAPI) } . if your plugin depends on other plugins, edit file SofaHAPI-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. SofaHAPI.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initSofaHAPI.h. a template of user documentation is found in SofaHAPI.tex. Is should; be filled in for every component in the plugin, then compiled with your; favourite Latex distribution. The filename should match the name of the; component. ; the examples are in examples/; . The first one is SofaHAPI.scn, and when; runSOFA; opens it, an html page pops; up, with a link to the plugin documentation. Intellectual; property and rights. Authors. You. Contact. You@your.institute. License. Your can distribute this plugin; under; the same license as the core of SOFA, or any other license of your; choice. Patents. APP registration. Sponsors. Do not forget to thank your; sponsors, they love it !. HowTo; Code documentation . can be generated using doxygen. In Unix; systems, simply type doxygen; Doxyfile in the doc directory. LaTeX formulas. can be directly copy-pasted from .tex to this html document thanks to the mathjax config and; script included in the header. Equation numbering and cross-referencing works, as well a newcommand. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/doc/index.html:2637,simpl,simply,2637,applications/plugins/SofaHAPI/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/doc/index.html,1,['simpl'],['simply']
Usability,"t can be placed into a SOFA scene:. ### GlobalSystemMatrixExporter. GlobalSystemMatrixExporter is a component to export the matrix of a linear system as a file. #### Filename. A Data ""filename"" is available to specify the name of the exported file.; If ""filename"" is not set, it gets the name of the component. ""filename"" can be an absolute path, or relative to the SOFA executable.; Directories are created if necessary. The extension in ""filename"" defines the file format. A number is added after the filename.; It corresponds to the number of elapsed time steps when the file is exported. Depending on the Data ""exportEveryNumberOfSteps"", the matrix can be export only at specified number of time steps. #### Supported File Format. GlobalSystemMatrixExporter supports the following file formats:; * **txt**: exports a Python-like list of lists, containing all the matrix values including the zeros.; It uses the `operator<<` in `BaseMatrix`.; * **csv**: exports a simple comma-separated values file, containing all the matrix values including the zeros.; * **jpg**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero.; * **png**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero.; * **bmp**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero. #### Link to Linear Solver. GlobalSystemMatrixExporter must have a link to a linear solver (a component inheriting from `sofa::core::behavior::LinearSolver`). The link can be explicit. Example:; ```xml; <GlobalSystemMatrixExporter linearSolver=""@pathToLinearSolver""/>; ```. The link can be implicit. I.e the component will search for a linear solver in the current Node. Example:; ```xml; <SparseLDLSolver/>; <GlobalSystemMatrixExporter/>; ```. A use case is available in the examples folder. ### GlobalSystemMatrixImage. GlobalSystemMatrixImage is a component to visuali",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/SofaMatrix.md:1129,simpl,simple,1129,applications/plugins/SofaMatrix/SofaMatrix.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/SofaMatrix.md,1,['simpl'],['simple']
Usability,"thub.com/sofa-framework/sofa/pull/258 ); - add tests for Light [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaBoundaryCondition]; - add tests for ConstantForceField, some of them are OpenIssue demonstrating existing problem, as crashing sofa when using negative or too large values in indices [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [CI]; - improvement of all test scripts. **Plugins / Projects**; - [GUI]; - mouse events are now transmitted to the scene with QtGLViewer [#132]( https://github.com/sofa-framework/sofa/pull/132 ); - [SceneCreator]; - Cosmetic changes and remove un-needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pull/202 ); - change the way createObject() handle its arguments to simplify scene writing + batch of tests [#286]( https://github.com/sofa-framework/sofa/pull/286 ); - [SofaTest]; - add Backtrace::autodump to all tests to ease debugging [#191]( https://github.com/sofa-framework/sofa/pull/191 ); - add automatic tests for updateForceMask [#209]( https://github.com/sofa-framework/sofa/pull/209 ); - add tests on PluginManager [#240]( https://github.com/sofa-framework/sofa/pull/240 ); - TestMessageHandler : new and robust implementation to connect msg_* message to test failure [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - update to use the new TestMessageHandler where msg_error generates test failures [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - add tests for TestMessageHandler [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - [SofaCUDA]; - FIX NVCC flags for debug build on Windows [#300]( https://github.com/sofa-framework/sofa/pull/300 ). ### Bug Fixes. **Modules**; - Warnings have been fixed [#229](",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:329979,simpl,simplify,329979,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['simpl'],['simplify']
Usability,"time.; Such new versions will be similar in spirit to the present version,; but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Library; specifies a version number of this License which applies to it and; ""any later version"", you have the option of following the terms and; conditions either of that version or of any later version published by; the Free Software Foundation. If the Library does not specify a; license version number, you may choose any version ever published by; the Free Software Foundation. 14. If you wish to incorporate parts of the Library into other free; programs whose distribution conditions are incompatible with these,; write to the author to ask for permission. For software which is; copyrighted by the Free Software Foundation, write to the Free; Software Foundation; we sometimes make exceptions for this. Our; decision will be guided by the two goals of preserving the free status; of all derivatives of our free software and of promoting the sharing; and reuse of software generally. NO WARRANTY. 15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO; WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.; EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR; OTHER PARTIES PROVIDE THE LIBRARY ""AS IS"" WITHOUT WARRANTY OF ANY; KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR; PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE; LIBRARY IS WITH YOU. SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME; THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN; WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY; AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU; FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR; CONSEQUENTIAL DAMAGES A",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:22792,guid,guided,22792,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['guid'],['guided']
Usability,timization on MechanicalMatrixMapper [#2411]( https://github.com/sofa-framework/sofa/pull/2411 ); - [SofaGeneralAnimationLoop] Remove matrix compression [#2367]( https://github.com/sofa-framework/sofa/pull/2367 ); - [SofaGeneralDeformable] Add option to enable/disable spring display in TriangularBendingSprings [#2297]( https://github.com/sofa-framework/sofa/pull/2297 ); - [SofaGeneralSimpleFem] Update BeamFEMForceField topologyHander and add tests [#2382]( https://github.com/sofa-framework/sofa/pull/2382 ); - [SofaGraphComponent] Restore check of deprecated components [#2267]( https://github.com/sofa-framework/sofa/pull/2267 ); - [SofaGuiQt] Introduce expand/collapse buttons [#2322]( https://github.com/sofa-framework/sofa/pull/2322 ); - [SofaGuiQt] Introduce expand/collapse buttons in profiler [#2351]( https://github.com/sofa-framework/sofa/pull/2351 ); - [SofaGuiQt] Multiple selection of timers in the profiler [#2141]( https://github.com/sofa-framework/sofa/pull/2141 ); - [SofaGuiQt] UX: graph is easier to read [#2356]( https://github.com/sofa-framework/sofa/pull/2356 ); - [SofaHelper] Add a method getTrace() to BackTrace class. [#2341]( https://github.com/sofa-framework/sofa/pull/2341 ); - [SofaHelper] Factory key type can be other than std::string [#2259]( https://github.com/sofa-framework/sofa/pull/2259 ); - [SofaMiscFEM_test] Add class to test and compare TriangleFEM and TriangularFEMForceField [#2249]( https://github.com/sofa-framework/sofa/pull/2249 ); - [SofaMiscForceField_test] Add TopologicalChanges unit tests for MeshMatrixMass [#2215]( https://github.com/sofa-framework/sofa/pull/2215 ); - [SofaMiscTopology] Add a component TopologyBoundingTrasher to remove mesh going outside from scene bounding box [#2288]( https://github.com/sofa-framework/sofa/pull/2288 ); - [SofaSimpleFem] Add callback on VonMises in TetrahedronFEMForceField [#2407]( https://github.com/sofa-framework/sofa/pull/2407 ); - [SofaSimpleFem] Hexa FEM optimization when assembling by bloc [#22,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:142250,UX,UX,142250,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['UX'],['UX']
Usability,"tisfy both it and this License would be to; refrain entirely from distribution of the Library. If any portion of this section is held invalid or unenforceable under any; particular circumstance, the balance of the section is intended to apply,; and the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any; patents or other property right claims or to contest validity of any; such claims; this section has the sole purpose of protecting the; integrity of the free software distribution system which is; implemented by public license practices. Many people have made; generous contributions to the wide range of software distributed; through that system in reliance on consistent application of that; system; it is up to the author/donor to decide if he or she is willing; to distribute software through any other system and a licensee cannot; impose that choice. This section is intended to make thoroughly clear what is believed to; be a consequence of the rest of this License. 12. If the distribution and/or use of the Library is restricted in; certain countries either by patents or by copyrighted interfaces, the; original copyright holder who places the Library under this License may add; an explicit geographical distribution limitation excluding those countries,; so that distribution is permitted only in or among countries not thus; excluded. In such case, this License incorporates the limitation as if; written in the body of this License. 13. The Free Software Foundation may publish revised and/or new; versions of the Lesser General Public License from time to time.; Such new versions will be similar in spirit to the present version,; but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Library; specifies a version number of this License which applies to it and; ""any later version"", you have the option of following the terms and",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:21189,clear,clear,21189,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['clear'],['clear']
Usability,"ttps://github.com/sofa-framework/sofa/pull/4210); - [SofaCUDA] Move cuda GUI dependent code [#4227](https://github.com/sofa-framework/sofa/pull/4227); - [all] Forgotten scoped timers [#4237](https://github.com/sofa-framework/sofa/pull/4237); - [all] Fix warnings [#4238](https://github.com/sofa-framework/sofa/pull/4238); - [all] Remove TODO.md [#4244](https://github.com/sofa-framework/sofa/pull/4244); - [Type, Helper] Remove unused __STL_MEMBER_TEMPLATES parts [#4251](https://github.com/sofa-framework/sofa/pull/4251); - [GL] Remove deprecated (and incomplete) Color class [#4264](https://github.com/sofa-framework/sofa/pull/4264); - [FEM, Mapping] dont mix type::fixed_array and type::Vec [#4269](https://github.com/sofa-framework/sofa/pull/4269); - [all] Fix headeronly extlibs licenses [#4272](https://github.com/sofa-framework/sofa/pull/4272); - [all] Externalize cxxopts [#4273](https://github.com/sofa-framework/sofa/pull/4273); - [Topology.Mapping] SimpleTesselatedHexaTopologicalMapping: use correct type for Index [#4279](https://github.com/sofa-framework/sofa/pull/4279); - [GUI.Qt] Minor single-line cleaning [#4308](https://github.com/sofa-framework/sofa/pull/4308); - [Core] Minor clean of DefaultAnimationLoop [#4314](https://github.com/sofa-framework/sofa/pull/4314); - [Collections] Remove reference to non-existing SofaSimulation [#4320](https://github.com/sofa-framework/sofa/pull/4320); - [All] Changed default plugins [#4322](https://github.com/sofa-framework/sofa/pull/4322); - [ODESolver.Backward] Convert double to SReal in NewmarkImplicitSolver [#4341](https://github.com/sofa-framework/sofa/pull/4341); - [Sofa.Testing] Do not build Sofa.Testing if SOFA_BUILD_TESTS is OFF [#4459](https://github.com/sofa-framework/sofa/pull/4459); - [Simulation.Common] Fix downstream project compilation with tinyXML2 [#4506](https://github.com/sofa-framework/sofa/pull/4506). ### Refactoring; - [Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code [#327",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:47399,Simpl,SimpleTesselatedHexaTopologicalMapping,47399,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Simpl'],['SimpleTesselatedHexaTopologicalMapping']
Usability,ull/2356 ); - [SofaHelper] Add a method getTrace() to BackTrace class. [#2341]( https://github.com/sofa-framework/sofa/pull/2341 ); - [SofaHelper] Factory key type can be other than std::string [#2259]( https://github.com/sofa-framework/sofa/pull/2259 ); - [SofaMiscFEM_test] Add class to test and compare TriangleFEM and TriangularFEMForceField [#2249]( https://github.com/sofa-framework/sofa/pull/2249 ); - [SofaMiscForceField_test] Add TopologicalChanges unit tests for MeshMatrixMass [#2215]( https://github.com/sofa-framework/sofa/pull/2215 ); - [SofaMiscTopology] Add a component TopologyBoundingTrasher to remove mesh going outside from scene bounding box [#2288]( https://github.com/sofa-framework/sofa/pull/2288 ); - [SofaSimpleFem] Add callback on VonMises in TetrahedronFEMForceField [#2407]( https://github.com/sofa-framework/sofa/pull/2407 ); - [SofaSimpleFem] Hexa FEM optimization when assembling by bloc [#2240]( https://github.com/sofa-framework/sofa/pull/2240 ); - [SofaSimpleFem] Simplify bloc-based optimization [#2281]( https://github.com/sofa-framework/sofa/pull/2281 ); - [SofaSimulationCore] Clearer message when a linear solver is missing [#2221]( https://github.com/sofa-framework/sofa/pull/2221 ); - [SofaSparseSolver] Fix msg readibility in SparseLDL [#2294]( https://github.com/sofa-framework/sofa/pull/2294 ); - [SofaSparseSolver] Introduce FillReducingOrdering [#2501]( https://github.com/sofa-framework/sofa/pull/2501 ). **Plugins / Projects**; - [image] Restore ability to select a subset of instanciations [#2340]( https://github.com/sofa-framework/sofa/pull/2340 ). **Examples / Scenes**; - [examples] Add a new example how to create heterogeneous tet FEM [#2289]( https://github.com/sofa-framework/sofa/pull/2289 ); - [examples] Speedup the caduceus [#2471]( https://github.com/sofa-framework/sofa/pull/2471 ); - [Scenes] Update TriangleSurfaceCutting scene to use a bigger mesh with texture [#2381]( https://github.com/sofa-framework/sofa/pull/2381 ). **Scripts /,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:143326,Simpl,Simplify,143326,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Simpl'],['Simplify']
Usability,"urce code or can get it if you; want it, that you can change the software or use pieces of it in new; free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you; these rights or asking you to surrender the rights. Therefore, you have; certain responsibilities if you distribute copies of the software, or if; you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether; gratis or for a fee, you must pass on to the recipients the same; freedoms that you received. You must make sure that they, too, receive; or can get the source code. And you must show them these terms so they; know their rights. Developers that use the GNU GPL protect your rights with two steps:; (1) assert copyright on the software, and (2) offer you this License; giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains; that there is no warranty for this free software. For both users' and; authors' sake, the GPL requires that modified versions be marked as; changed, so that their problems will not be attributed erroneously to; authors of previous versions. Some devices are designed to deny users access to install or run; modified versions of the software inside them, although the manufacturer; can do so. This is fundamentally incompatible with the aim of; protecting users' freedom to change the software. The systematic; pattern of such abuse occurs in the area of products for individuals to; use, which is precisely where it is most unacceptable. Therefore, we; have designed this version of the GPL to prohibit the practice for those; products. If such problems arise substantially in other domains, we; stand ready to extend this provision to those domains in future versions; of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software pate",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:21016,clear,clearly,21016,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['clear'],['clearly']
Usability,"ust be set if the PR is ready to be reviewed. ; - ""pr: ready"" must be set **instead of merge** if another PR merge is being built on the [Dashboard](https://www.sofa-framework.org/dash/?branch=origin/master). It is used to delay the merge and avoid CI overflow.; - **Control the builds**: Dashboard > Details in the pull request checks.; - Merge method: **prefer ""merge""** or ""squash"" over ""rebase"". Remember that:. - You can **add commits** in a pull request: see [GitHub documentation](https://help.github.com/articles/committing-changes-to-a-pull-request-branch-created-from-a-fork/).; - If the pull request contains out of scope commits (from a previous merge with master), **consider rebasing it**. <center><figure><img src=""https://www.sofa-framework.org/wp-content/uploads/2022/06/GitHub-PR-review-workflow.png"" alt=""PullRequestProcess"" style=""width:75%""><figcaption align = ""center""><b>Workflow of a PR review</b></figcaption></figure></center>. For more information on forks and pull request, check out [this GitHub guide](https://guides.github.com/activities/forking/). ### SOFA Developer Certificate Of Origin (DCO). SOFA is using the [mechanism of the linux project](https://www.kernel.org/doc/html/latest/process/submitting-patches.html#sign-your-work-the-developer-s-certificate-of-origin) to track and secure all issues related to copyrights: the Developper Certificate of Origin (DCO). If you are contributing code or documentation to the SOFA project, and using the git signed-off-by mechanism, you are agreeing to this certificate. This DCO essentially means that:. - you offer the changes under the same license agreement as the project, and; - you have the right to do that,; - you did not steal somebody else’s work. The original DCO is available online : [http://developercertificate.org](http://developercertificate.org). ```; Developer Certificate of Origin; Version 1.1. Copyright (C) 2004, 2006 The Linux Foundation and its contributors.; 1 Letterman Drive; Suite D4700; San",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:7490,guid,guide,7490,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,2,['guid'],"['guide', 'guides']"
Usability,"xopts; GIT_TAG v3.1.1; ). FetchContent_GetProperties(cxxopts); if(NOT cxxopts_POPULATED); FetchContent_Populate(cxxopts). set(CXXOPTS_BUILD_EXAMPLES OFF CACHE INTERNAL """"); set(CXXOPTS_BUILD_TESTS OFF CACHE INTERNAL """"); set(CXXOPTS_ENABLE_INSTALL ON CACHE INTERNAL """"); message(""Sofa.GUI.Common: adding subdirectory ${cxxopts_SOURCE_DIR}""). add_subdirectory(${cxxopts_SOURCE_DIR} ${cxxopts_BINARY_DIR}); endif(); elseif (NOT cxxopts_FOUND); message(FATAL_ERROR ""Sofa.GUI.Common: DEPENDENCY cxxopts NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install libcxxopts-dev (version>=3.1.0), or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). set(SOFAGUICOMMON_ROOT src/sofa/gui/common). set(HEADER_FILES; ${SOFAGUICOMMON_ROOT}/config.h.in; ${SOFAGUICOMMON_ROOT}/init.h; ${SOFAGUICOMMON_ROOT}/BaseGUI.h; ${SOFAGUICOMMON_ROOT}/BaseViewer.h; ${SOFAGUICOMMON_ROOT}/ColourPickingVisitor.h; ${SOFAGUICOMMON_ROOT}/FilesRecentlyOpenedManager.h; ${SOFAGUICOMMON_ROOT}/GuiDataRepository.h; ${SOFAGUICOMMON_ROOT}/GUIManager.h; ${SOFAGUICOMMON_ROOT}/MouseOperations.h; ${SOFAGUICOMMON_ROOT}/OperationFactory.h; ${SOFAGUICOMMON_ROOT}/PickHandler.h; ${SOFAGUICOMMON_ROOT}/ViewerFactory.h; ${SOFAGUICOMMON_ROOT}/ArgumentParser.h; ). set(SOURCE_FILES; ${SOFAGUICOMMON_ROOT}/init.cpp; ${SOFAGUICOMMON_ROOT}/BaseGUI.cpp; ${SOFAGUICOMMON_ROOT}/BaseViewer.cpp; ${SOFAGUICOMMON_ROOT}/ColourPickingVisitor.cpp; ${SOFAGUICOMMON_ROOT}/FilesRecentlyOpenedManager.cpp; ${SOFAGUICOMMON_ROOT}/GuiDataRepository.cpp; ${SOFAGUICOMMON_ROOT}/GUIManager.cpp; ${SOFAGUICOMMON_ROOT}/MouseOperations.cpp; ${SOFAGUICOMMON_ROOT}/PickHandler.cpp; ${SOFAGUICOMMON_ROOT}/ViewerFactory.cpp; ${SOFAGUICOMMON_ROOT}/ArgumentParser.cpp; ). sofa_find_package(Sofa.Simulation.Common REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED); sofa_find_package(Sofa.GL QUIET) # Colo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Common/CMakeLists.txt:1387,GuiD,GuiDataRepository,1387,Sofa/GUI/Common/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Common/CMakeLists.txt,1,['GuiD'],['GuiDataRepository']
Usability,"y); sofa_find_package(Eigen3 REQUIRED); # Json (header only) needed by AdvancedTimer; sofa_find_package(Json 3.1.2 REQUIRED); # STB (header only); sofa_find_package(STB REQUIRED); # DiffLib (header only); sofa_find_package(DiffLib REQUIRED). set(SRC_ROOT ""src/sofa/helper""). # HEADERS + SOURCES; set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/AdvancedTimer.h; ${SRC_ROOT}/BackTrace.h; ${SRC_ROOT}/cast.h; ${SRC_ROOT}/ColorMap.h; ${SRC_ROOT}/ComponentChange.h; ${SRC_ROOT}/DiffLib.h; ${SRC_ROOT}/Factory.h; ${SRC_ROOT}/Factory.inl; ${SRC_ROOT}/TypeInfo.h; ${SRC_ROOT}/FnDispatcher.h; ${SRC_ROOT}/FnDispatcher.inl; ${SRC_ROOT}/GenerateRigid.h; ${SRC_ROOT}/IndexOpenMP.h; ${SRC_ROOT}/LCPcalc.h; ${SRC_ROOT}/MarchingCubeUtility.h; ${SRC_ROOT}/MatEigen.h; ${SRC_ROOT}/MemoryManager.h; ${SRC_ROOT}/NameDecoder.h; ${SRC_ROOT}/narrow_cast.h; ${SRC_ROOT}/OptionsGroup.h; ${SRC_ROOT}/OwnershipSPtr.h; ${SRC_ROOT}/Polynomial_LD.h; ${SRC_ROOT}/Polynomial_LD.inl; ${SRC_ROOT}/RandomGenerator.h; ${SRC_ROOT}/SimpleTimer.h; ${SRC_ROOT}/ScopedAdvancedTimer.h; ${SRC_ROOT}/SortedPermutation.h; ${SRC_ROOT}/StringUtils.h; ${SRC_ROOT}/TagFactory.h; ${SRC_ROOT}/TriangleOctree.h; ${SRC_ROOT}/Utils.h; ${SRC_ROOT}/accessor.h; ${SRC_ROOT}/decompose.h; ${SRC_ROOT}/decompose.inl; ${SRC_ROOT}/deque.h; ${SRC_ROOT}/hash.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/integer_id.h; ${SRC_ROOT}/accessor/ReadAccessor.h; ${SRC_ROOT}/accessor/ReadAccessorVector.h; ${SRC_ROOT}/accessor/WriteAccessor.h; ${SRC_ROOT}/accessor/WriteAccessorVector.h; ${SRC_ROOT}/accessor/WriteOnlyAccessor.h; ${SRC_ROOT}/io/BaseFileAccess.h; ${SRC_ROOT}/io/FileAccess.h; ${SRC_ROOT}/io/File.h; ${SRC_ROOT}/io/Image.h; ${SRC_ROOT}/io/ImageDDS.h; ${SRC_ROOT}/io/ImageRAW.h; ${SRC_ROOT}/io/XspLoader.h; ${SRC_ROOT}/io/Mesh.h; ${SRC_ROOT}/io/MeshOBJ.h; ${SRC_ROOT}/io/MeshGmsh.h; ${SRC_ROOT}/io/MeshTopologyLoader.h; ${SRC_ROOT}/io/SphereLoader.h; ${SRC_ROOT}/io/STBImage.h; ${SRC_ROOT}/io/TriangleLoader.h; ${SRC_ROOT}/kdTree.h; ${SRC_ROOT}/kdTree.inl; ${SR",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:1095,Simpl,SimpleTimer,1095,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['Simpl'],['SimpleTimer']
