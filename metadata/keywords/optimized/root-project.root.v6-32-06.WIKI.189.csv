quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Usability,", const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; RooArgSetcomponents(); virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode); virtual voidTNamed::Copy(TObject& named) const; static voidRooAbsArg::copyList(TList& dest, const TList& source); static UInt_tRooAbsArg::crc32(const char* data); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooProduct.html:3384,clear,clearEvalErrorLog,3384,root/html530/RooProduct.html,https://root.cern,https://root.cern/root/html530/RooProduct.html,1,['clear'],['clearEvalErrorLog']
Usability,", const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode); virtual voidTNamed::Copy(TObject& named) const; static voidRooAbsArg::copyList(TList& dest, const TList& source); static UInt_tRooAbsArg::crc32(const char* data); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/PiecewiseInterpolation.html:3519,clear,clearEvalErrorLog,3519,root/html528/PiecewiseInterpolation.html,https://root.cern,https://root.cern/root/html528/PiecewiseInterpolation.html,60,['clear'],['clearEvalErrorLog']
Usability,", const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidTNamed::Copy(TObject& named) const; static voidRooAbsArg::copyList(TList& dest, const TList& source); static UInt_tRooAbsArg::crc32(const char* data); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::no",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooRealMPFE.html:4276,clear,clearEvalErrorLog,4276,root/html528/RooRealMPFE.html,https://root.cern,https://root.cern/root/html528/RooRealMPFE.html,2,['clear'],['clearEvalErrorLog']
Usability,", const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; static voidTEveShape::CheckAndFixBoxOrientationEv(TEveVector* box); static voidTEveShape::CheckAndFixBoxOrientationFv(Float_t** box); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElementList*TEveElementList::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveShape::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveBox.html:2731,Clear,ClearProjectedList,2731,root/html528/TEveBox.html,https://root.cern,https://root.cern/root/html528/TEveBox.html,23,['Clear'],['ClearProjectedList']
Usability,", const TVectorF& vexl, const TVectorF& vexh, const TVectorF& veyl, const TVectorF& veyh); TGraphAsymmErrors(const TVectorD& vx, const TVectorD& vy, const TVectorD& vexl, const TVectorD& vexh, const TVectorD& veyl, const TVectorD& veyh); TGraphAsymmErrors(Int_t n, const Float_t* x, const Float_t* y, const Float_t* exl = 0, const Float_t* exh = 0, const Float_t* eyl = 0, const Float_t* eyh = 0); TGraphAsymmErrors(Int_t n, const Double_t* x, const Double_t* y, const Double_t* exl = 0, const Double_t* exh = 0, const Double_t* eyl = 0, const Double_t* eyh = 0); virtual~TGraphAsymmErrors(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidApply(TF1* f); virtual voidBayesDivide(const TH1* pass, const TH1* total, Option_t* opt = """"); virtual voidTGraph::Browse(TBrowser* b); virtual Double_tTGraph::Chisquare(const TF1* f1) const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; static Bool_tTGraph::CompareArg(const TGraph* gr, Int_t left, Int_t right); static Bool_tTGraph::CompareRadius(const TGraph* gr, Int_t left, Int_t right); static Bool_tTGraph::CompareX(const TGraph* gr, Int_t left, Int_t right); static Bool_tTGraph::CompareY(const TGraph* gr, Int_t left, Int_t right); virtual voidComputeRange(Double_t& xmin, Double_t& ymin, Double_t& xmax, Double_t& ymax) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTGraph::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDivide(const TH1* pass, const TH1* total, Option_t* opt = ""cp""); virtual voidTGraph::Draw(Option_t* chopt = """"); virtual voidTObject::DrawClass() constMENU ; virtual TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraphAsymmErrors.html:2646,Clear,Clear,2646,root/html528/TGraphAsymmErrors.html,https://root.cern,https://root.cern/root/html528/TGraphAsymmErrors.html,3,['Clear'],['Clear']
Usability,", const char *text)Draw this TLatex with new coordinates in NDC.Definition TLatex.cxx:1957; TLegendThis class displays a legend box (TPaveText) containing several legend entries.Definition TLegend.h:23; TObject::SaveAsvirtual void SaveAs(const char *filename="""", Option_t *option="""") constSave this object in the file specified by filename.Definition TObject.cxx:692; ptTPaveText * ptDefinition entrylist_figure1.C:7; ROOT::VecOps::ReverseRVec< T > Reverse(const RVec< T > &v)Return copy of reversed vector.Definition RVec.hxx:2481; ROOT::VecOps::CombinationsRVec< RVec< std::size_t > > Combinations(const std::size_t size1, const std::size_t size2)Return the indices that represent all combinations of the elements of two RVecs.Definition RVec.hxx:2606; ROOT::Math::VectorUtil::DeltaRVector1::Scalar DeltaR(const Vector1 &v1, const Vector2 &v2)Find difference in pseudorapidity (Eta) and Phi between two generic vectors The only requirements on ...Definition VectorUtil.h:112; ROOT::RDF::RNodeRInterface<::ROOT::Detail::RDF::RNodeBase, void > RNodeDefinition InterfaceUtils.hxx:57; ROOT::RDF::RunGraphsunsigned int RunGraphs(std::vector< RResultHandle > handles)Trigger the event loop of multiple RDataFrames concurrently.Definition RDFHelpers.cxx:66; ROOT::VecOpsDefinition TCollectionProxyInfo.h:42; ROOT::EnableImplicitMTvoid EnableImplicitMT(UInt_t numthreads=0)Enable ROOT's implicit multi-threading for all objects and methods that provide an internal paralleli...Definition TROOT.cxx:539; TMath::Sortvoid Sort(Index n, const Element *a, Index *index, Bool_t down=kTRUE)Sort the n elements of the array a of generic templated type Element.Definition TMathBase.h:431; df103_NanoAODHiggsAnalysisDefinition df103_NanoAODHiggsAnalysis.py:1; ; DateOctober 2018 ; AuthorStefan Wunsch (KIT, CERN) ; Definition in file df103_NanoAODHiggsAnalysis.C. tutorialsdataframedf103_NanoAODHiggsAnalysis.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df103__NanoAODHiggsAnalysis_8C.html:25757,Guid,Guide,25757,doc/master/df103__NanoAODHiggsAnalysis_8C.html,https://root.cern,https://root.cern/doc/master/df103__NanoAODHiggsAnalysis_8C.html,1,['Guid'],['Guide']
Usability,", const char *version=nullptr);  check that first node is xml processing instruction with correct xml version number ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *err",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLEngine.html:8833,Clear,Clear,8833,doc/master/classTXMLEngine.html,https://root.cern,https://root.cern/doc/master/classTXMLEngine.html,1,['Clear'],['Clear']
Usability,", const char* dsName, TFileCollection* dataset). Gets quota information from this dataset. void ShowQuota(const char* opt); Display quota information. void PrintUsedSpace(). Prints the quota. void MonitorUsedSpace(TVirtualMonitoringWriter* monitoring). Log info to the monitoring server. Long64_t GetGroupUsed(const char* group). Returns the used space of that group. Long64_t GetGroupQuota(const char* group). returns the quota a group is allowed to have. void UpdateUsedSpace(); updates the used space maps. Int_t RegisterDataSet(const char* uri, TFileCollection* dataSet, const char* opt); Register a dataset, perfoming quota checkings, if needed.; Returns 0 on success, -1 on failure. Int_t NotifyUpdate(const char* group = 0, const char* user = 0, const char* dspath = 0, Long_t mtime = 0, const char* checksum = 0); Save into the <datasetdir>/dataset.list file the name of the last updated; or created or modified dataset; Returns 0 on success, -1 on error. Int_t ClearCache(const char* uri); Clear cached information matching uri. Int_t ShowCache(const char* uri); Show cached information matching uri. TString CreateUri(const char* dsGroup = 0, const char* dsUser = 0, const char* dsName = 0, const char* dsTree = 0); Creates URI for the dataset manger in the form '[[/dsGroup/]dsUser/]dsName[#dsObjPath]',; The optional dsObjPath can be in the form [subdir/]objname]'. Bool_t ParseUri(const char* uri, TString* dsGroup = 0, TString* dsUser = 0, TString* dsName = 0, TString* dsTree = 0, Bool_t onlyCurrent = kFALSE, Bool_t wildcards = kFALSE); Parses a (relative) URI that describes a DataSet on the cluster.; The input 'uri' should be in the form '[[/group/]user/]dsname[#[subdir/]objname]',; where 'objname' is the name of the object (e.g. the tree name) and the 'subdir'; is the directory in the file wher it should be looked for.; After resolving against a base URI consisting of proof://masterhost/group/user; - meaning masterhost, group and user of the current session -; the path is c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDataSetManager.html:14117,Clear,ClearCache,14117,root/html528/TDataSetManager.html,https://root.cern,https://root.cern/root/html528/TDataSetManager.html,12,['Clear'],"['Clear', 'ClearCache']"
Usability,", const std::string &method)Initialize with Unuran string API interface.Definition TUnuran.cxx:62; TUnuran::operator=TUnuran & operator=(const TUnuran &rhs)=delete; TUnuran::fGenUNUR_GEN * fGenDefinition TUnuran.h:305; TUnuran::SetRandomGeneratorbool SetRandomGenerator()Definition TUnuran.cxx:139; TUnuran::SetLogLevelbool SetLogLevel(unsigned int iflag=1)set log levelDefinition TUnuran.cxx:433; TUnuran::fUrngUNUR_URNG * fUrngDefinition TUnuran.h:307; TUnuran::fRngTRandom * fRngDefinition TUnuran.h:309; TUnuran::SetMultiDistributionbool SetMultiDistribution(const TUnuranMultiContDist &dist)Definition TUnuran.cxx:202; TUnuran::IsDistEmpiricalbool IsDistEmpirical() constReturn true for an empirical distribution.Definition TUnuran.cxx:402; TUnuran::Sampledouble Sample()Sample 1D distribution.Definition TUnuran.cxx:414; TUnuran::SetEmpiricalDistributionbool SetEmpiricalDistribution(const TUnuranEmpDist &dist)Definition TUnuran.cxx:246; TUnuran::GetRandomTRandom * GetRandom()Return instance of the random engine used.Definition TUnuran.h:223; TUnuran::TUnuranTUnuran(const TUnuran &)=delete; TUnuran::~TUnuran~TUnuran()Destructor.Definition TUnuran.cxx:53; TUnuran::InitPoissonbool InitPoisson(double mu, const std::string &method=""dstd"")Initialize method for the Poisson distribution.Definition TUnuran.cxx:448; TUnuran::fMethodstd::string fMethodDefinition TUnuran.h:310; TUnuran::GetDimensionint GetDimension() constReturn the dimension of unuran generator method.Definition TUnuran.cxx:376; TUnuran::SetSeedvoid SetSeed(unsigned int seed)set the seed for the random number generatorDefinition TUnuran.cxx:429; TUnuran::SetRandomvoid SetRandom(TRandom *r)Set the random engine.Definition TUnuran.h:216; TUnuran::IsDistDiscretebool IsDistDiscrete() constReturn true for a discrete distribution.Definition TUnuran.cxx:398; xDouble_t x[n]Definition legend1.C:17. mathunuranincTUnuran.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:45 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnuran_8h_source.html:16802,Guid,Guide,16802,doc/master/TUnuran_8h_source.html,https://root.cern,https://root.cern/doc/master/TUnuran_8h_source.html,1,['Guid'],['Guide']
Usability,", double x) { sumSqs[slot] += x*x; ns[slot] += 1; }, {""x""});; double sumSq = std::accumulate(sumSqs.begin(), sumSqs.end(), 0.); // sum all squares; unsigned int n = std::accumulate(ns.begin(), ns.end(), 0); // sum all counts; std::cout << ""rms of x: "" << std::sqrt(sumSq / n) << std::endl;; Notice how we created one double variable for each processing slot and later merged their results via std::accumulate. Dataset joins with friend trees; Vertically concatenating multiple trees that have the same columns (creating a logical dataset with the same columns and more rows) is trivial in RDataFrame: just pass the tree name and a list of file names to RDataFrame's constructor, or create a TChain out of the desired trees and pass that to RDataFrame.; Horizontal concatenations of trees or chains (creating a logical dataset with the same number of rows and the union of the columns of multiple trees) leverages TTree's ""friend"" mechanism.; Simple joins of trees that do not have the same number of rows are also possible with indexed friend trees (see below).; To use friend trees in RDataFrame, set up trees with the appropriate relationships and then instantiate an RDataFrame with the main tree:; TTree main([...]);; TTree friend([...]);; main.AddFriend(&friend, ""myFriend"");; ; RDataFrame df(main);; auto df2 = df.Filter(""myFriend.MyCol == 42"");; The same applies for TChains. Columns coming from the friend trees can be referred to by their full name, like in the example above, or the friend tree name can be omitted in case the column name is not ambiguous (e.g. ""MyCol"" could be used instead of ""myFriend.MyCol"" in the example above if there is no column ""MyCol"" in the main tree).; NoteA common source of confusion is that trees that are written out from a multi-thread Snapshot() call will have their entries (block-wise) shuffled with respect to the original tree. Such trees cannot be used as friends of the original one: rows will be mismatched.; Indexed friend trees provide a way to p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html:70261,Simpl,Simple,70261,doc/v632/classROOT_1_1RDataFrame.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html,2,['Simpl'],['Simple']
Usability,", false);; ig.SetRelTolerance(0.001);. cout << ig.Integral(0, TMath::PiOver2()) << endl;. return 0;; }; 13.8.2.2 ROOT::Math::GaussLegendreIntegrator; This class implementes the Gauss-Legendre quadrature formulas. This sort of numerical methods requieres that the user specifies the number of intermediate function points used in the calculation of the integral. It will automatically determine the coordinates and weights of such points before performing the integration. We can use the example above, but replacing the creation of a ROOT::Math::GaussIntegrator object with ROOT::Math::GaussLegendreIntegrator.; 13.8.2.3 ROOT::Math::GSLIntegrator; This is a wrapper for the QUADPACK integrator implemented in the GSL library. It supports several integration methods that can be chosen in construction time. The default type is adaptive integration with singularity applying a Gauss-Kronrod 21-point integration rule. For a detail description of the GSL methods visit the GSL user guide This class implements the best algorithms for numerical integration for one dimensional functions. We encourage the use it as the main option, bearing in mind that it uses code from the GSL library, wich is provided in the MathMore library of ROOT.; The interface to use is the same as above. We have now the possibility to specify a different integration algorithm in the constructor of the ROOT::Math::GSLIntegrator class.; // create the adaptive integrator with the 51 point rule; ROOT::Math::GSLIntegrator ig(ROOT::Math::Integration::kADAPTIVE, ROOT::Math::Integration::kGAUSS51);; ig.SetRelTolerance(1.E-6); // set relative tolerance; ig.SetAbsTolerance(1.E-6); // set absoulte tolerance; The algorithm is controlled by the given absolute and relative tolerance. The iterations are continued until the following condition is satisfied \[; absErr <= max ( epsAbs, epsRel * Integral); \] Where absErr is an estimate of the absolute error (it can be retrieved with GSLIntegrator::Error()) and Integral is the est",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:706096,guid,guide,706096,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['guid'],['guide']
Usability,", i.e. calling CreateHn() on; a TH2F will create a THnF. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~THn(); voidTObject::AbstractMethod(const char* method) const; voidTHnBase::Add(const THnBase* h, Double_t c = 1.); voidTHnBase::Add(const TH1* hist, Double_t c = 1.); voidAddBinContent(const Int_t* idx, Double_t v = 1.); virtual voidAddBinContent(Long64_t bin, Double_t v = 1.); virtual voidAddBinError2(Long64_t bin, Double_t e2); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTHnBase::Browse(TBrowser* b); voidTHnBase::CalculateErrors(Bool_t calc = kTRUE); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; Double_tTHnBase::ComputeIntegral(); virtual voidTNamed::Copy(TObject& named) const; static THn*CreateHn(const char* name, const char* title, const TH1* h1); static THn*CreateHn(const char* name, const char* title, const THnBase* hn); virtual ROOT::THnBaseBinIter*CreateIter(Bool_t respectAxisRange) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); voidTHnBase::Divide(const THnBase* h); voidTHnBase::Divide(const THnBase* h1, const THnBase* h2, Double_t c1 = 1., Double_t c2 = 1., Option_t* option = """"); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THn.html:3088,Clear,Clear,3088,root/html534/THn.html,https://root.cern,https://root.cern/root/html534/THn.html,3,['Clear'],['Clear']
Usability,", jl);; 7563 goto L68;; 7564L67:; 7565 mnrazz(ystst, fPstst, fSIMPy, jh, jl);; 7566L68:; 7567 ++ncycl;; 7568 if (fISW[4] < 2) goto L50;; 7569 if (fISW[4] >= 3 || ncycl % 10 == 0) {; 7570 mnprin(5, fAmin);; 7571 }; 7572 goto L50;; 7573// point * is not as good as jl; 7574L70:; 7575 if (ystar >= fSIMPy[jh-1]) goto L73;; 7576 jhold = jh;; 7577 mnrazz(ystar, fPstar, fSIMPy, jh, jl);; 7578 if (jhold != jh) goto L50;; 7579// calculate new point **; 7580L73:; 7581 for (i = 1; i <= fNpar; ++i) {; 7582 fPstst[i-1] = beta*fP[i + jh*fMaxpar - fMaxpar-1] + (1 - beta)*fPbar[i-1];; 7583 }; 7584 mninex(fPstst);; 7585 Eval(nparx, fGin, ystst, fU, 4); ++fNfcn;; 7586 if (ystst > fSIMPy[jh-1]) goto L1;; 7587// point ** is better than jh; 7588 if (ystst < fAmin) goto L67;; 7589 mnrazz(ystst, fPstst, fSIMPy, jh, jl);; 7590 goto L50;; 7591// end main loop; 7592L76:; 7593 if (fISW[4] >= 0) {; 7594 Printf("" SIMPLEX MINIMIZATION HAS CONVERGED."");; 7595 }; 7596 fISW[3] = 1;; 7597 goto L80;; 7598L78:; 7599 if (fISW[4] >= 0) {; 7600 Printf("" SIMPLEX TERMINATES WITHOUT CONVERGENCE."");; 7601 }; 7602 fCstatu = ""CALL LIMIT"";; 7603 fISW[3] = -1;; 7604 fISW[0] = 1;; 7605L80:; 7606 for (i = 1; i <= fNpar; ++i) {; 7607 pb = 0;; 7608 for (j = 1; j <= nparp1; ++j) { pb += wg*fP[i + j*fMaxpar - fMaxpar-1]; }; 7609 fPbar[i-1] = pb - wg*fP[i + jh*fMaxpar - fMaxpar-1];; 7610 }; 7611 mninex(fPbar);; 7612 Eval(nparx, fGin, ypbar, fU, 4); ++fNfcn;; 7613 if (ypbar < fAmin) mnrazz(ypbar, fPbar, fSIMPy, jh, jl);; 7614 mninex(fX);; 7615 if (fNfcnmx + npfn - fNfcn < fNpar*3) goto L90;; 7616 if (fEDM > fEpsi*2) goto L1;; 7617L90:; 7618 if (fISW[4] >= 0) mnprin(5, fAmin);; 7619}; 7620 ; 7621////////////////////////////////////////////////////////////////////////////////; 7622/// Returns concerning the current status of the minimization; 7623///; 7624/// User-called; 7625/// Namely, it returns:; 7626/// - FMIN: the best function value found so far; 7627/// - FEDM: the estimated vertical distance remaining to minimum; 7",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:243053,SIMPL,SIMPLEX,243053,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['SIMPL'],['SIMPLEX']
Usability,", kCINT_cpp; , kROOT_Load; , kSYS_FileName; , ;   kCXX_NewProto; , kCXX_ConstructorProto; , kCXX_ScopeProto; , kCXX_DirectProto; , ;   kCXX_IndirectProto; , kCXX_ScopeMember; , kCXX_DirectMember; , kCXX_IndirectMember; , ;   kCXX_Global; , kCXX_GlobalProto; , kNUM_PAT. };  ; typedef TList TContainer;  ; typedef TListIter TContIter;  . Public Member Functions;  TTabCom ();  Default constructor. ;  ; virtual ~TTabCom ();  ; void ClearAll ();  clears all lists except for user names and system include files. ;  ; void ClearClasses ();  Clear classes and namespace collections. ;  ; void ClearCppDirectives ();  Forget all Cpp directives seen so far. ;  ; void ClearEnvVars ();  Forget all environment variables seen so far. ;  ; void ClearFiles ();  Close all files. ;  ; void ClearGlobalFunctions ();  Forget all global functions seen so far. ;  ; void ClearGlobals ();  Forget all global variables seen so far. ;  ; void ClearPragmas ();  Forget all pragmas seen so far. ;  ; void ClearSysIncFiles ();  Close system files. ;  ; void ClearUsers ();  Forget all user seen so far. ;  ; const TSeqCollection * GetListOfClasses ();  Return the list of classes. ;  ; const TSeqCollection * GetListOfCppDirectives ();  Return the list of CPP directives. ;  ; const TSeqCollection * GetListOfEnvVars ();  Uses ""env"" (Unix) or ""set"" (Windows) to get list of environment variables. ;  ; const TSeqCollection * GetListOfFilesInPath (const char path[]);  ""path"" should be initialized with a colon separated list of system directories ;  ; TCollection * GetListOfGlobalFunctions ();  Return the list of global functions. ;  ; const TSeqCollection * GetListOfGlobals ();  Return the list of globals. ;  ; const TSeqCollection * GetListOfPragmas ();  Return the list of pragmas. ;  ; const TSeqCollection * GetListOfSysIncFiles ();  Return the list of system include files. ;  ; const TSeqCollection * GetListOfUsers ();  reads from ""/etc/passwd"" ;  ; Int_t Hook (char *buf, int *pLoc, std::ostream &out);  [pri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTabCom.html:1628,Clear,ClearSysIncFiles,1628,doc/master/classTTabCom.html,https://root.cern,https://root.cern/doc/master/classTTabCom.html,1,['Clear'],['ClearSysIncFiles']
Usability,", kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *err",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObject.html:2383,Clear,Clear,2383,doc/master/classTObject.html,https://root.cern,https://root.cern/doc/master/classTObject.html,2,['Clear'],['Clear']
Usability,", kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; virtual ~TVirtualPerfStats ();  ; virtual void FileEvent (const char *slave, const char *slavename, const char *nodename, const char *filename, Bool_t isStart)=0;  ; virtual void FileOpenEvent (TFile *file, const char *filename, Double_t start)=0;  ; virtual void FileReadEvent (TFile *file, Int_t len, Double_t start)=0;  ; virtual Long64_t GetBytesRead () const =0;  ; virtual Long64_t GetNumEvents () const =0;  ; TClass * IsA () const override;  ; virtual void PacketEvent (const char *slave, const char *slavename, const char *filename, Long64_t eventsprocessed, Double_t latency, Double_t proctime, Double_t cputime, Long64_t bytesRead)=0;  ; virtual void PrintBasketInfo (Option_t *option="""") const =0;  ; virtual void RateEvent (Double_t proctime, Double_t deltatime, Long64_t eventsprocessed, Long64_t bytesRead)=0;  ; virtual void SetBytesRead (Long64_t num)=0;  ; virtual void SetLoaded (size_t bi, size_t basketNumber)=0;  ; virtual void SetLoaded (TBranch *b, size_t basketNumber)=0;  ; virtual void SetLoadedMiss (size_t bi, size_t basketNumber)=0;  ; virtual void SetLoadedMiss (TBranch *b, size_t basketNumber)=0;  ; virtual void SetMissed (size_t bi, size_t basketNumber)=0;  ; virtual void SetMissed (TBranch *b, size_t basketNumber)=0;  ; virtual void SetNumEvents (Long64_t num)=0;  ; virtual void SetUsed (size_t bi, size_t basketNumber)=0;  ; virtual void SetUsed (TBranch *b, size_t basketNumber)=0;  ; virtual void SimpleEvent (EEventType type)=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UnzipEvent (TObject *tree, Long64_t pos, Double_t start, Int_t complen, Int_t objlen)=0;  ; virtual void UpdateBranchIndices (TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPerfStats.html:2765,Simpl,SimpleEvent,2765,doc/master/classTVirtualPerfStats.html,https://root.cern,https://root.cern/doc/master/classTVirtualPerfStats.html,1,['Simpl'],['SimpleEvent']
Usability,", optionZ);; 2382 gPad->PaintPolyMarker(npt,gxworkl.data(),gyworkl.data());; 2383 }; 2384 } else {; 2385 wminstep = wmin + 0.5*delta;; 2386 for (i=first; i<=last;i++) {; 2387 if (!optionBins) ym = wminstep+(i-first)*delta+0.5*delta;; 2388 else ym = y[i-1] + 0.5*(y[i]-y[i-1]);; 2389 xm = x[i-1];; 2390 if (optionMark != 10) {; 2391 if (xm<rwxmax && xm > rwxmin) {; 2392 npt++;; 2393 gxwork[npt-1] = xm;; 2394 gywork[npt-1] = ym;; 2395 }; 2396 } else {; 2397 if (xm<rwxmax && xm >= rwxmin) {; 2398 npt++;; 2399 gxwork[npt-1] = xm;; 2400 gywork[npt-1] = ym;; 2401 }; 2402 }; 2403 if (npt >= fgMaxPointsPerLine) {; 2404 ComputeLogs(npt, optionZ);; 2405 gPad->PaintPolyMarker(npt,gxworkl.data(),gyworkl.data());; 2406 npt = 0;; 2407 }; 2408 }; 2409 if (npt > 0) {; 2410 ComputeLogs(npt, optionZ);; 2411 gPad->PaintPolyMarker(npt,gxworkl.data(),gyworkl.data());; 2412 }; 2413 }; 2414 }; 2415 ; 2416 gPad->ResetBit(TGraph::kClipFrame);; 2417 ; 2418do_cleanup:; 2419 gxwork.clear();; 2420 gywork.clear();; 2421 gxworkl.clear();; 2422 gyworkl.clear();; 2423}; 2424 ; 2425 ; 2426////////////////////////////////////////////////////////////////////////////////; 2427/// [Paint this TGraphAsymmErrors with its current attributes.](\ref GrP3); 2428 ; 2429void TGraphPainter::PaintGraphAsymmErrors(TGraph *theGraph, Option_t *option); 2430{; 2431 ; 2432 std::vector<Double_t> xline, yline;; 2433 Int_t if1 = 0;; 2434 Int_t if2 = 0;; 2435 Double_t xb[4], yb[4];; 2436 ; 2437 const Int_t kBASEMARKER=8;; 2438 static Float_t cxx[30] = {1.0,1.0,0.5,0.5,1.0,1.0,0.5,0.6,1.0,0.5,0.5,1.0,0.5,0.6,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,1.0,1.0,1.0,1.0,0.5,0.5,0.5,1.0};; 2439 static Float_t cyy[30] = {1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.5,0.5,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,1.0,1.0,1.0,1.0,0.5,0.5,0.5,1.0};; 2440 Int_t theNpoints = theGraph->GetN();; 2441 Double_t *theX = theGraph->GetX();; 2442 Double_t *theY = theGraph->GetY();; 2443 Double_t *theEXlow = theGraph->GetEXlow(); if (!theEXlow) return;; 2444 Do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPainter_8cxx_source.html:86299,clear,clear,86299,doc/master/TGraphPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPainter_8cxx_source.html,1,['clear'],['clear']
Usability,",""demo bin labels"",10,10,900,500);; c1->SetGrid();; c1->SetBottomMargin(0.15);; TH1F *h = new TH1F(""h"",""test"",nx,0,nx);; h->SetFillColor(38);; for (i=0;i<5000;i++) h->Fill(gRandom->Gaus(0.5*nx,0.2*nx));; h->SetStats(0);; for (i=1;i<=nx;i++) h->GetXaxis()->SetBinLabel(i,people[i-1]);; h->Draw();; TPaveText *pt = new TPaveText(0.6,0.7,0.98,0.98,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Use the axis Context Menu LabelsOption"");; pt->AddText("" \""a\"" to sort by alphabetic order"");; pt->AddText("" \"">\"" to sort by decreasing values"");; pt->AddText("" \""<\"" to sort by increasing values"");; pt->Draw();; }; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttText::SetTextAlignvirtual void SetTextAlign(Short_t align=11)Set the text alignment.Definition TAttText.h:42; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TPaveTextA Pave (see TPave) with text, lines or/and boxes inside.Definition TPaveText.h:21; TPaveText::AddTextvirtual TText * AddText(Double_t x1, Double_t y1, const char *label)Add a new Text line to this pavetext at given coordinates.Definition TPaveText.cxx:191; TPaveText::Drawvoid Draw(Option_t *option="""") overrideDraw this pavetext with its current attributes.Definition TPaveText.cxx:242; TRandom::Gausvirtual Double_t Gaus(Double_t mean=0, Double_t sigma=1)Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigm...Definition TRandom.cxx:275; ptTPaveText * ptDefinition entrylist_figure1.C:7; c1return c1Definition legend1.C:41; AuthorRene Brun ; Definition in file labels1.C. tutorialsgraphslabels1.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/labels1_8C.html:2464,Guid,Guide,2464,doc/master/labels1_8C.html,https://root.cern,https://root.cern/doc/master/labels1_8C.html,1,['Guid'],['Guide']
Usability,",0.2,0.3),v2=c(3,2,1))"";; r[""df2""]>>df2;; ; TVectorD v(3);; df2[""v1""]>>v;; v.Print();; ; df2[""v2""]>>v;; v.Print();; ROOT::R::TRDataFrame::Printvoid Print(const Char_t *label="""")Method to print the dataframe in stdout or a column given the label.Definition TRDataFrame.h:427; v@ vDefinition rootcling_impl.cxx:3699; Output Vector (3) is as follows; ; | 1 |; ------------------; 0 |0.1; 1 |0.2; 2 |0.3; ; Vector (3) is as follows; ; | 1 |; ------------------; 0 |3; 1 |2; 2 |1; Working with colunms between dataframes. df2[""v3""]<<df1[""strings""];; ; //updating df2 in R's environment; r[""df2""]<<df2;; r<<""print(df2)"";; Output v1 v2 v3; 1 0.1 3 v1; 2 0.2 2 v2; 3 0.3 1 v3; Working with colunms between dataframes. //passing values from colunm v3 of df2 to var1 of df1; df2[""v3""]>>df1[""var1""];; //updating df1 in R's environment; r[""df1""]<<df1;; r<<""print(df1)"";; Output var1 var2 var3 strings var4; 1 v1 0.101 1 v1 -1; 2 v2 0.202 2 v2 -2; 3 v3 0.303 3 v3 -3; Users Guide ; https://oproject.org/pages/ROOT R Users Guide. Definition at line 176 of file TRDataFrame.h. Classes; class  Binding;  . Public Member Functions;  TRDataFrame ();  Default TDataFrame constructor. ;  ;  TRDataFrame (const Rcpp::DataFrame &_df);  TDataFrame constructor for Rcpp::DataFrame. ;  ;  TRDataFrame (const TRDataFrame &_df);  TDataFrame copy constructor. ;  ;  TRDataFrame (SEXP obj);  TDataFrame constructor. ;  ; template<class T > ; TMatrixT< T > AsMatrix ();  Method to get dataframe as matrix. ;  ; TVectorString GetColNames ();  Method to get labels of dataframe. ;  ; Int_t GetNcols ();  Method to get the number of columns. ;  ; Int_t GetNrows ();  Method to get the number of rows. ;  ; virtual TClass * IsA () const;  ;  operator SEXP ();  ;  operator SEXP () const;  ; TRDataFrame & operator= (SEXP obj);  ; TRDataFrame & operator= (TRDataFrame &obj);  ; TRDataFrame & operator= (TRDataFrame obj);  ; Binding operator[] (const TString &name);  ; void Print (const Char_t *label="""");  Method to print the dataframe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1R_1_1TRDataFrame.html:4079,Guid,Guide,4079,doc/master/classROOT_1_1R_1_1TRDataFrame.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1R_1_1TRDataFrame.html,1,['Guid'],['Guide']
Usability,",120);; if (i>700) {; noise += 1000*sin((i-700)*6.28/30)*exp((double)(700-i)/300);; }; ht->SetBinContent(i,noise);; }; ct->cd(1);; ht->SetLineColor(2);; ht->GetXaxis()->SetLabelSize(0.05);; ht->Draw();; // Sets time on the X axis; // The time used is the one set as time offset added to the value; // of the axis. This is converted into day/month/year hour:min:sec and; // a reasonable tick interval value is chosen.; ht->GetXaxis()->SetTimeDisplay(1);; ; //### Build a simple graph beginning at a different time; // Time interval: 5 seconds; ; float x[100], t[100];; for (i=0;i<100;i++) {; x[i] = sin(i*4*3.1415926/50)*exp(-(double)i/20);; t[i] = 6000+(double)i/20;; }; auto gt = new TGraph(100,t,x);; gt->SetTitle(""Politics"");; ct->cd(2);; gt->SetLineColor(5);; gt->SetLineWidth(2);; gt->Draw(""AL"");; gt->GetXaxis()->SetLabelSize(0.05);; // Sets time on the X axis; gt->GetXaxis()->SetTimeDisplay(1);; gPad->Modified();; ; //### Build a second simple graph for a very long time interval; // Time interval: a few years; ; auto gt2 = new TGraph();; TDatime dateBegin(2000,1,1,0,0,0);; for (i=0;i<10;i++) {; TDatime datePnt(2000 + i,1,1,0,0,0);; gt2->AddPoint(datePnt.Convert() - dateBegin.Convert(), 100 + gRandom->Gaus(500,100)*i);; }; gt2->SetTitle(""Number of monkeys on the moon"");; ct->cd(3);; gt2->SetMarkerColor(4);; gt2->SetMarkerStyle(29);; gt2->SetMarkerSize(1.3);; gt2->Draw(""AP"");; gt2->GetXaxis()->SetLabelSize(0.04);; gt2->GetXaxis()->SetNdivisions(10);; // Sets time on the X axis; gt2->GetXaxis()->SetTimeDisplay(1);; ; // One can choose a different time format than the one chosen by default; // The time format is the same as the one of the C strftime() function; // It's a string containing the following formats :; //; // for date :; // %a abbreviated weekday name; // %b abbreviated month name; // %d day of the month (01-31); // %m month (01-12); // %y year without century; // %Y year with century; //; // for time :; // %H hour (24-hour clock); // %I hour (12-hour clock); // %p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/timeonaxis_8C.html:2490,simpl,simple,2490,doc/master/timeonaxis_8C.html,https://root.cern,https://root.cern/doc/master/timeonaxis_8C.html,2,['simpl'],['simple']
Usability,",16000,99);; t4.Branch(""event_not_split"", &event,16000,0);; ; // a local variable for the event type; char etype[20];; ; // Fill the tree; for (Int_t ev = 0; ev <100; ev++) {; Float_t sigmat, sigmas;; gRandom->Rannor(sigmat,sigmas);; Int_t ntrack = Int_t(600 + 600 *sigmat/120.);; Float_t random = gRandom->Rndm(1);; sprintf(etype,""type%d"",ev%5);; event->SetType(etype);; event->SetHeader(ev, 200, 960312, random);; event->SetNseg(Int_t(10*ntrack+20*sigmas));; event->SetNvertex(Int_t(1+20*gRandom->Rndm()));; event->SetFlag(UInt_t(random+0.5));; event->SetTemperature(random+20.);; ; for(UChar_t m = 0; m < 10; m++) {; event->SetMeasure(m, Int_t(gRandom->Gaus(m,m+1)));; }; ; // fill the matrix; for(UChar_t i0 = 0; i0 < 4; i0++) {; for(UChar_t i1 = 0; i1 < 4; i1++) {; event->SetMatrix(i0,i1,gRandom->Gaus(i0*i1,1));; }; }; ; // Create and fill the Track objects; for (Int_t t = 0; t < ntrack; t++) event->AddTrack(random);; ; // Fill the tree; t4.Fill();; ; // Clear the event before reloading it; event->Clear();; }; ; // Write the file header; f.Write();; ; // Print the tree contents; t4.Print();; }; ; ; void tree4r(); {; // read the tree generated with tree4w; ; //note that we use ""new"" to create the TFile and TTree objects !; //because we want to keep these objects alive when we leave this function.; TFile *f = new TFile(""tree4.root"");; TTree *t4 = (TTree*)f->Get(""t4"");; ; // create a pointer to an event object. This will be used; // to read the branch values.; Event *event = new Event();; ; // get two branches and set the branch address; TBranch *bntrack = t4->GetBranch(""fNtrack"");; TBranch *branch = t4->GetBranch(""event_split"");; branch->SetAddress(&event);; ; Long64_t nevent = t4->GetEntries();; Int_t nselected = 0;; Int_t nb = 0;; for (Long64_t i=0;i<nevent;i++) {; //read branch ""fNtrack""only; bntrack->GetEntry(i);; ; //reject events with more than 587 tracks; if (event->GetNtrack() > 587)continue;; ; //read complete accepted event in memory; nb += t4->GetEntry(i);; nsele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tree4_8C.html:3112,Clear,Clear,3112,doc/master/tree4_8C.html,https://root.cern,https://root.cern/doc/master/tree4_8C.html,2,['Clear'],['Clear']
Usability,",3 and 4 dimensions with their transformations) is not anymore part of MathCore, but is built as a separate library. MathCore contains instead now classes which were originally part of libCore. These include:. TMath : namespace with mathematical functions and basic function algorithms.; TComplex: class for complex numbers.; Random classes: base class TRandom and the derived classes TRandom1, TRandom2 and TRandom3, implementing the pseudo-random number generators.; Other classes, such as; TKDTree for partitioning the data using a kd-Tree and TKDTreeBinning for binning data using a kdTree; ROOT::Math::GoFTest for goodness of fit tests . Modules;  Fitting and Parameter Estimation;  Classes used for fitting (regression analysis) and estimation of parameter values given a data sample. ;  ;  Interface classes for Random number generation;  Pseudo-random numbers generator classes and for generation of random number distributions. ;  ;  Goodness of Fit Tests;  Classical one-dimensional goodness of git tests for unbinned data. ;  ;  Function Classes and Interfaces;  Interfaces (abstract classes) and Base classes used in MathCore and MathMore numerical methods for describing function classes. ;  ;  Numerical Algorithms;  Numerical Algorithm classes from the MathCore and MathMore libraries. ;  ;  Statistical functions;  Probability density functions, cumulative distribution functions and their inverses (quantiles) for various statistical distributions (continuous and discrete). ;  ;  Special functions;  Special mathematical functions. ;  . Files; file  RFit.hxx;  . Classes; class  ROOT::Math::Delaunay2D;  Class to generate a Delaunay triangulation of a 2D set of points. More...;  ; class  TKDTreeBinning;  <- TKDTreeBinning - A class providing multidimensional binning -> More...;  ; class  TStatistic;  Statistical variable, defined by its mean and variance (RMS). More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__MathCore.html:3380,Guid,Guide,3380,doc/master/group__MathCore.html,https://root.cern,https://root.cern/doc/master/group__MathCore.html,1,['Guid'],['Guide']
Usability,",700);; h->Draw(""L"");; TSpectrum *s = new TSpectrum();; for (i = 0; i < nbins; i++) source[i]=h->GetBinContent(i + 1);; s->Background(source,nbins,10,kBackDecreasingWindow,kBackOrder8,kTRUE,; kBackSmoothing5,,kTRUE);; for (i = 0; i < nbins; i++) d1->SetBinContent(i + 1,source[i]);; d1->SetLineColor(kRed);; d1->Draw(""SAME L"");; }. . const char* SmoothMarkov(float* source, Int_t ssize, Int_t averWindow). One-dimensional markov spectrum smoothing function. This function calculates smoothed spectrum from source spectrum based on; Markov chain method. The result is placed in the array pointed by source; pointer. On successful completion it returns 0. On error it returns pointer; to the string describing error.; ; Function parameters:; ; source: pointer to the array of source spectrum; ssize: length of source array; averWindow: width of averaging smoothing window; ; The goal of this function is the suppression of the statistical fluctuations.; The algorithm is based on discrete Markov chain, which has very simple; invariant distribution:; . being defined; from the normalization condition; .; n is the length of the smoothed spectrum and; . Reference:; ; Z.K. Silagadze, A new algorithm for automatic photopeak searches.; NIM A 376 (1996), 451.; . Example 14 - script Smoothing.c; . Fig. 23 Original noisy spectrum; . Fig. 24 Smoothed spectrum m=3; . Fig. 25 Smoothed spectrum; . Fig.26 Smoothed spectrum m=10; ; Script:; ; // Example to illustrate smoothing using Markov algorithm (class TSpectrum).; // To execute this example, do; // root > .x Smoothing.C; void Smoothing() {; Int_t i;; Double_t nbins = 1024;; Double_t xmin = 0;; Double_t xmax = (Double_t)nbins;; Float_t * source = new float[nbins];; TH1F *h = new TH1F(""h"",""Smoothed spectrum for m=3"",nbins,xmin,xmax);; TFile *f = new TFile(""spectra\\TSpectrum.root"");; h=(TH1F*) f->Get(""smooth1;1"");; for (i = 0; i < nbins; i++) source[i]=h->GetBinContent(i + 1);; TCanvas *Smooth1 = gROOT->GetListOfCanvases()->FindObject(""Smooth1"")",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpectrum.html:29612,simpl,simple,29612,root/html528/TSpectrum.html,https://root.cern,https://root.cern/root/html528/TSpectrum.html,4,['simpl'],['simple']
Usability,",; 32 kSTLdeque = 3,; 33 kSTLmap = 4,; 34 kSTLmultimap = 5,; 35 kSTLset = 6,; 36 kSTLmultiset = 7,; 37 kSTLbitset = 8,; 38 // Here the c++11 containers start. Order counts. For example,; 39 // tstreamerelements in written rootfiles carry a value and we cannot; 40 // introduce shifts.; 41 kSTLforwardlist = 9,; 42 kSTLunorderedset = 10,; 43 kSTLunorderedmultiset = 11,; 44 kSTLunorderedmap = 12,; 45 kSTLunorderedmultimap = 13,; 46 kROOTRVec = 14, /* ROOT type with STL container interface */; 47 kSTLend = 15,; 48 kSTLany = 300 /* TVirtualStreamerInfo::kSTL */,; 49 kSTLstring = 365 /* TVirtualStreamerInfo::kSTLstring */,; 50 };; 51 ; 52}; 53 ; 54#endif; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; ROOT::ESTLTypeESTLTypeDefinition ESTLType.h:28; ROOT::kSTLbitset@ kSTLbitsetDefinition ESTLType.h:37; ROOT::kSTLmap@ kSTLmapDefinition ESTLType.h:33; ROOT::kSTLunorderedmultiset@ kSTLunorderedmultisetDefinition ESTLType.h:43; ROOT::kROOTRVec@ kROOTRVecDefinition ESTLType.h:46; ROOT::kSTLend@ kSTLendDefinition ESTLType.h:47; ROOT::kSTLstring@ kSTLstringDefinition ESTLType.h:49; ROOT::kSTLset@ kSTLsetDefinition ESTLType.h:35; ROOT::kSTLmultiset@ kSTLmultisetDefinition ESTLType.h:36; ROOT::kSTLdeque@ kSTLdequeDefinition ESTLType.h:32; ROOT::kSTLvector@ kSTLvectorDefinition ESTLType.h:30; ROOT::kSTLany@ kSTLanyDefinition ESTLType.h:48; ROOT::kSTLunorderedmultimap@ kSTLunorderedmultimapDefinition ESTLType.h:45; ROOT::kSTLunorderedset@ kSTLunorderedsetDefinition ESTLType.h:42; ROOT::kSTLlist@ kSTLlistDefinition ESTLType.h:31; ROOT::kSTLforwardlist@ kSTLforwardlistDefinition ESTLType.h:41; ROOT::kSTLunorderedmap@ kSTLunorderedmapDefinition ESTLType.h:44; ROOT::kNotSTL@ kNotSTLDefinition ESTLType.h:29; ROOT::kSTLmultimap@ kSTLmultimapDefinition ESTLType.h:34. corefoundationincESTLType.h. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:06:59 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/ESTLType_8h_source.html:3075,Guid,Guide,3075,doc/v632/ESTLType_8h_source.html,https://root.cern,https://root.cern/doc/v632/ESTLType_8h_source.html,1,['Guid'],['Guide']
Usability,",yp1;; 142 Int_t dx, dy;; 143 ; 144 Bool_t opaque = gPad->OpaqueMoving();; 145 ; 146 if (!gPad->IsEditable()) return;; 147 ; 148 switch (event) {; 149 ; 150 case kArrowKeyPress:; 151 case kButton1Down:; 152 oldX1 = GetX1();; 153 oldY1 = GetY1();; 154 oldX2 = GetX2();; 155 oldY2 = GetY2();; 156 ndcsav = TestBit(kLineNDC);; 157 if (!opaque) {; 158 gVirtualX->SetLineColor(-1);; 159 TAttLine::Modify(); //Change line attributes only if necessary; 160 }; 161 ; 162 // No break !!!; 163 ; 164 case kMouseMotion:; 165 ; 166 if (TestBit(kLineNDC)) {; 167 px1 = gPad->UtoPixel(GetX1());; 168 py1 = gPad->VtoPixel(GetY1());; 169 px2 = gPad->UtoPixel(GetX2());; 170 py2 = gPad->VtoPixel(GetY2());; 171 } else {; 172 px1 = gPad->XtoAbsPixel(gPad->XtoPad(GetX1()));; 173 py1 = gPad->YtoAbsPixel(gPad->YtoPad(GetY1()));; 174 px2 = gPad->XtoAbsPixel(gPad->XtoPad(GetX2()));; 175 py2 = gPad->YtoAbsPixel(gPad->YtoPad(GetY2()));; 176 }; 177 p1 = p2 = pL = kFALSE;; 178 ; 179 d1 = abs(px1 - px) + abs(py1-py); //simply take sum of pixels differences; 180 if (d1 < kMaxDiff) { //*-*================>OK take point number 1; 181 px1old = px1; py1old = py1;; 182 p1 = kTRUE;; 183 gPad->SetCursor(kPointer);; 184 return;; 185 }; 186 d2 = abs(px2 - px) + abs(py2-py); //simply take sum of pixels differences; 187 if (d2 < kMaxDiff) { //*-*================>OK take point number 2; 188 px2old = px2; py2old = py2;; 189 p2 = kTRUE;; 190 gPad->SetCursor(kPointer);; 191 return;; 192 }; 193 ; 194 pL = kTRUE;; 195 pxold = px; pyold = py;; 196 gPad->SetCursor(kMove);; 197 ; 198 break;; 199 ; 200 case kArrowKeyRelease:; 201 case kButton1Motion:; 202 ; 203 if (p1) {; 204 if (!opaque) {; 205 gVirtualX->DrawLine(px1old, py1old, px2, py2);; 206 gVirtualX->DrawLine(px, py, px2, py2);; 207 } else {; 208 if (ndcsav) {; 209 SetNDC(kFALSE);; 210 SetX2(gPad->GetX1() + oldX2*(gPad->GetX2()-gPad->GetX1()));; 211 SetY2(gPad->GetY1() + oldY2*(gPad->GetY2()-gPad->GetY1()));; 212 }; 213 SetX1(gPad->AbsPixeltoX(px));; 214 SetY1(gPad->Ab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLine_8cxx_source.html:5621,simpl,simply,5621,doc/master/TLine_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLine_8cxx_source.html,1,['simpl'],['simply']
Usability,"- - . Surface - X X X . Triangles X X X X . Function: void TSpectrum2Painter::SetDisplayMode (Int_t modeGroup, Int_t displayMode); This function controls the display mode group and display mode of the histogram drawing. To illustrate the possible effects of the various display modes we introduce a set of examples. Default values:. modeGroup = kModeGroupLightHeight; displayMode = kDisplayModeSurface. Simple modes group, display mode = points, 256 x 256 channels. . Simple modes group, display mode = grid, 64 x 64 channels. . Simple modes group, display mode = contours, 64 x 64 channels. . Simple modes group, display mode = bars, 64 x 64 channels. . Simple modes group, display mode = linesX, 64 x 64 channels. . Simple modes group, display mode = linesY, 64 x 64 channels. . Simple modes group, display mode = barsX, 64 x 64 channels. . Simple modes group, display mode = barsY, 64 x 64 channels. . Simple modes group, display mode = needles, 64 x 64 channels. . Simple modes group, display mode = triangles, 64 x 64 channels. . Light modes group, display mode = points, 256 x 256 channels. . Light modes group, display mode = grid, 256 x 256 channels. . Light modes group, display mode = surface, 64 x 64 channels. . Light modes group, display mode = triangles, 64 x 64 channels. . Height modes group, display mode = points, 256 x 256 channels. . Height modes group, display mode = grid, 256 x 256 channels. . Height modes group, display mode = contours, 64 x 64 channels. . Height modes group, display mode = bars, 64 x 64 channels. . Height modes group, display mode = surface, 64 x 64 channels. . Height modes group, display mode = triangles, 64 x 64 channels. . Light - height modes group, display mode = surface, 64 x 64 channels. The weight between both shading algorithms is set to 0.5. One can observe the influence of both shadings.; Function: TSpectrum2Painter::SetPenAttr(Int_t color,Int_t style,Int_t width); Using this function one can change pen color, pen style and pen width. P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Painter.html:33446,Simpl,Simple,33446,doc/master/classTSpectrum2Painter.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Painter.html,1,['Simpl'],['Simple']
Usability,"- Malfunctioning panels -------------------; if (th2p->IsInsideBin(4, r1, r2)) val = rok - rbad1;; if (th2p->IsInsideBin(20, r1, r2)) val = rok - rbad2;; if (th2p->IsInsideBin(13, r1, r2)) val = rok + rbad1;; if (th2p->IsInsideBin(37, r1, r2)) val = rok + rbad2;; ; // -------------------- Fill histograms ------------------------; th2p->Fill(r1, r2, val);; avg->Fill(r1, r2, val);; err->Fill(r1, r2, val);; }; ; // -------------------- Display end state ------------------------; c1->cd(1);; th2p->SetStats(0);; th2p->SetTitle(""total hits"");; th2p->Draw(""COLZ"");; ; c1->cd(2);; avg->SetStats(0);; avg->SetTitle(""average charge"");; avg->Draw(""COLZ"");; ; c1->cd(3);; err->SetStats(0);; err->SetContentToError();; err->SetTitle(""error"");; err->Draw(""COLZ"");; }; b#define b(i)Definition RSha256.hxx:100; a#define a(i)Definition RSha256.hxx:99; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; gROOT#define gROOTDefinition TROOT.h:406; TCanvasThe Canvas class.Definition TCanvas.h:23; TH2Poly2D Histogram with Polygonal BinsDefinition TH2Poly.h:66; TProfile2Poly2D Profile Histogram with Polygonal Bins.Definition TProfile2Poly.h:58; TRandomThis is the base class for the ROOT Random number generators.Definition TRandom.h:27; TRandom::Gausvirtual Double_t Gaus(Double_t mean=0, Double_t sigma=1)Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigm...Definition TRandom.cxx:275; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; TString::AppendTString & Append(const char *cs)Definition TString.h:572; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; AuthorFilip Ilic ; Definition in file tprofile2polyRealisticModuleError.C. tutorialshisttprofile2polyRealisticModuleError.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tprofile2polyRealisticModuleError_8C.html:3907,Guid,Guide,3907,doc/master/tprofile2polyRealisticModuleError_8C.html,https://root.cern,https://root.cern/doc/master/tprofile2polyRealisticModuleError_8C.html,1,['Guid'],['Guide']
Usability,"- P. Ward Date - 3.10.1973; This method draws a smooth tangentially continuous curve through the sequence of data points P(I) I=1,N where P(I)=(X(I),Y(I)). The curve is approximated by a polygonal arc of short vectors. The data points can represent open curves, P(1) != P(N) or closed curves P(2) == P(N). If a tangential discontinuity at P(I) is required, then set P(I)=P(I+1). Loops are also allowed.; Reference Marlow and Powell, Harwell report No.R.7092.1972 MCCONALOGUE, Computer Journal VOL.13, NO4, NOV1970P p392 6. npoints : Number of data points.; x : Abscissa; y : Ordinate . Definition at line 4938 of file TGraphPainter.cxx. ◆ Streamer(). void TGraphPainter::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGraphPainter::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 71 of file TGraphPainter.h. Member Data Documentation. ◆ fgMaxPointsPerLine. Int_t TGraphPainter::fgMaxPointsPerLine = 50. staticprotected . Number of points per chunks' line when drawing a graph. ; Definition at line 67 of file TGraphPainter.h. ◆ gxwork. std::vector<Double_t> TGraphPainter::gxwork. protected . Definition at line 69 of file TGraphPainter.h. ◆ gxworkl. std::vector<Double_t> TGraphPainter::gxworkl. protected . Definition at line 69 of file TGraphPainter.h. ◆ gywork. std::vector<Double_t> TGraphPainter::gywork. protected . Definition at line 69 of file TGraphPainter.h. ◆ gyworkl. std::vector<Double_t> TGraphPainter::gyworkl. protected . Internal buffers for coordinates. Used for graphs painting. ; Definition at line 69 of file TGraphPainter.h. Libraries for TGraphPainter:. [legend]; The documentation for this class was generated from the following files:; hist/histpainter/inc/TGraphPainter.h; hist/histpainter/src/TGraphPainter.cxx. TGraphPainter. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:32 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphPainter.html:53332,Guid,Guide,53332,doc/master/classTGraphPainter.html,https://root.cern,https://root.cern/doc/master/classTGraphPainter.html,1,['Guid'],['Guide']
Usability,"- in version 3.05/06, a new static function TProfile::Approximate; is introduced to enable or disable (default) the approximation. Ideas for improvements of this algorithm are welcome. No suggestions; received since our call for advice to roottalk in Jul 2002.; see for instance: http://root.cern.ch/root/roottalk/roottalk02/2916.html. Option_t * GetErrorOption() const; -*Return option to compute profile errors; *-* =======================================. char* GetObjectInfo(Int_t px, Int_t py) const; Redefines TObject::GetObjectInfo.; Displays the profile info (bin number, contents, eroor, entries per bin; corresponding to cursor position px,py. void GetStats(Double_t* stats) const; fill the array stats from the contents of this profile; The array stats must be correctly dimensionned in the calling program.; stats[0] = sumw; stats[1] = sumw2; stats[2] = sumwx; stats[3] = sumwx2; stats[4] = sumwy; stats[5] = sumwy2. If no axis-subrange is specified (via TAxis::SetRange), the array stats; is simply a copy of the statistics quantities computed at filling time.; If a sub-range is specified, the function recomputes these quantities; from the bin contents in the current axis range. void LabelsDeflate(Option_t* axis = ""X""); Reduce the number of bins for this axis to the number of bins having a label. void LabelsInflate(Option_t* axis = ""X""); Double the number of bins for axis.; Refill histogram; This function is called by TAxis::FindBin(const char *label). void LabelsOption(Option_t* option = ""h"", Option_t* axis = ""X""); Set option(s) to draw axis with labels; option = ""a"" sort by alphabetic order; = "">"" sort by decreasing values; = ""<"" sort by increasing values; = ""h"" draw labels horizonthal; = ""v"" draw labels vertical; = ""u"" draw labels up (end of label right adjusted); = ""d"" draw labels down (start of label left adjusted). Long64_t Merge(TCollection* list); Merge all histograms in the collection in this histogram.; This function computes the min/max for the x axis,; compu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProfile.html:36392,simpl,simply,36392,root/html528/TProfile.html,https://root.cern,https://root.cern/root/html528/TProfile.html,4,['simpl'],['simply']
Usability,"- several images converted into JSON before all together provided to headless browser to produce image files. ; Let significantly increase performance. Important - disable batch mode for flushing remaining images; ; void save_batch(); {; // 37 canvases will be collected together for conversion; TWebCanvas::BatchImageMode(37);; ; auto c = new TCanvas(""canvas"", ""Canvas with histogram"");; ; auto h1 = new TH1I(""hist"", ""Histogram with random data"", 100, -5., 5);; h1->SetDirectory(nullptr);; h1->FillRandom(""gaus"", 10000);; h1->Draw();; ; for(int n = 0; n < 100; ++n) {; h1->FillRandom(""gaus"", 10000);; c->SaveAs(TString::Format(""batch_image_%03d.png"", n));; }; ; // Important - disabling batch mode also flush remaining images; TWebCanvas::BatchImageMode(0);; }; c#define c(i)Definition RSha256.hxx:101; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1I1-D histogram with an int per channel (see TH1 documentation)Definition TH1.h:540; TH1::SetDirectoryvirtual void SetDirectory(TDirectory *dir)By default, when a histogram is created, it is added to the list of histogram objects in the current ...Definition TH1.cxx:8937; TH1::FillRandomvirtual void FillRandom(const char *fname, Int_t ntimes=5000, TRandom *rng=nullptr)Fill histogram following distribution in function fname.Definition TH1.cxx:3519; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; TString::Formatstatic TString Format(const char *fmt,...)Static method which formats a string using a printf style format descriptor and return a TString.Definition TString.cxx:2378; TWebCanvas::BatchImageModestatic void BatchImageMode(UInt_t n=100)Configure batch image mode for web graphics.Definition TWebCanvas.cxx:156; nconst Int_t nDefinition legend1.C:16; h1TH1F * h1Definition legend1.C:5; AuthorSergey Linev ; Definition in file save_batch.C. tutorialsgraphicssave_batch.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/save__batch_8C.html:2206,Guid,Guide,2206,doc/master/save__batch_8C.html,https://root.cern,https://root.cern/doc/master/save__batch_8C.html,1,['Guid'],['Guide']
Usability,"- testing events : 9000; : Regression -- training and testing events: 10000; : ; DataSetInfo : Correlation matrix (Regression):; : ------------------------; : var1 var2; : var1: +1.000 +0.006; : var2: +0.006 +1.000; : ------------------------; DataSetFactory : [datasetreg] : ; : ; Factory : Booking method: ␛[1mKNN␛[0m; : ; Factory : Booking method: ␛[1mLD␛[0m; : ; Factory : Booking method: ␛[1mDNN_CPU␛[0m; : ; : Parsing option string: ; : ... ""!H:V:ErrorStrategy=SUMOFSQUARES:VarTransform=G:WeightInitialization=XAVIERUNIFORM:Architecture=CPU:Layout=TANH|50,TANH|50,TANH|50,LINEAR:TrainingStrategy=LearningRate=1e-3,Momentum=0.3,ConvergenceSteps=20,BatchSize=50,TestRepetitions=1,WeightDecay=0.0,Regularization=None,Optimizer=Adam""; : The following options are set:; : - By User:; : <none>; : - Default:; : Boost_num: ""0"" [Number of times the classifier will be boosted]; : Parsing option string: ; : ... ""!H:V:ErrorStrategy=SUMOFSQUARES:VarTransform=G:WeightInitialization=XAVIERUNIFORM:Architecture=CPU:Layout=TANH|50,TANH|50,TANH|50,LINEAR:TrainingStrategy=LearningRate=1e-3,Momentum=0.3,ConvergenceSteps=20,BatchSize=50,TestRepetitions=1,WeightDecay=0.0,Regularization=None,Optimizer=Adam""; : The following options are set:; : - By User:; : V: ""True"" [Verbose output (short form of ""VerbosityLevel"" below - overrides the latter one)]; : VarTransform: ""G"" [List of variable transformations performed before training, e.g., ""D_Background,P_Signal,G,N_AllClasses"" for: ""Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed)""]; : H: ""False"" [Print method-specific help message]; : Layout: ""TANH|50,TANH|50,TANH|50,LINEAR"" [Layout of the network.]; : ErrorStrategy: ""SUMOFSQUARES"" [Loss function: Mean squared error (regression) or cross entropy (binary classification).]; : WeightInitialization: ""XAVIERUNIFORM"" [Weight initialization strategy]; : A",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:2764,Learn,LearningRate,2764,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Learn'],['LearningRate']
Usability,"-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*. #include ""TFile.h""; #include ""TH1.h""; #include ""TH2.h""; #include ""TProfile.h""; #include ""TRandom.h""; #include ""TTree.h"". //______________________________________________________________________________; main(int argc, char **argv); {; // Create a new ROOT binary machine independent file.; // Note that this file may contain any kind of ROOT objects, histograms,trees; // pictures, graphics objects, detector geometries, tracks, events, etc..; // This file is now becoming the current directory.; TFile hfile(""htree.root"",""RECREATE"",""Demo ROOT file with histograms & trees"");. // Create some histograms and a profile histogram; TH1F *hpx = new TH1F(""hpx"",""This is the px distribution"",100,-4,4);; TH2F *hpxpy = new TH2F(""hpxpy"",""py ps px"",40,-4,4,40,-4,4);; TProfile *hprof = new TProfile(""hprof"",""Profile of pz versus px"",100,-4,4,0,20);. // Define some simple structures; typedef struct {Float_t x,y,z;} POINT;; typedef struct {; Int_t ntrack,nseg,nvertex;; UInt_t flag;; Float_t temperature;; } EVENTN;; static POINT point;; static EVENTN eventn;. // Create a ROOT Tree; TTree *tree = new TTree(""T"",""An example of ROOT tree with a few branches"");; tree->Branch(""point"",&point,""x:y:z"");; tree->Branch(""eventn"",&eventn,""ntrack/I:nseg:nvertex:flag/i:temperature/F"");; tree->Branch(""hpx"",""TH1F"",&hpx,128000,0);. Float_t px,py,pz;; static Float_t p[3];. //--------------------Here we start a loop on 1000 events; for ( Int_t i=0; i<1000; i++) {; gRandom->Rannor(px,py);; pz = px*px + py*py;; Float_t random = gRandom->::Rndm(1);. // Fill histograms; hpx->Fill(px);; hpxpy->Fill(px,py,1);; hprof->Fill(px,pz,1);. // Fill structures; p[0] = px;; p[1] = py;; p[2] = pz;; point.x = 10*(random-1);;; point.y = 5*random;; point.z = 20*random;; eventn.ntrack = Int_t(100*random);; eventn.nseg = Int_t(2*eventn.ntrack);; eventn.nvertex = 1;; eventn.flag = Int_t(random+0.5);; eventn.temperature = 20+random;. // Fill the tree. For each event, save the 2 s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:9678,simpl,simple,9678,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,7,['simpl'],['simple']
Usability,"-*-*-*-*-*-*-*-*-*-*-*-*-*. Int_t DefinedVariable(TString& variable, Int_t& action); -*Check if expression is in the list of defined variables; *-* =======================================================; -; *-* This member function can be overloaded in derived classes; -; *-* If you overload this member function, you also HAVE TO; *-* never call the constructor:; -; *-* TFormula::TFormula(const char *name,const char *expression); -; *-* and write your own constructor; -; *-* MyClass::MyClass(const char *name,const char *expression) : TFormula(); -; *-* which has to call the TFormula default constructor and whose implementation; *-* should be similar to the implementation of the normal TFormula constructor; -; *-* This is necessary because the normal TFormula constructor call indirectly; *-* the virtual member functions Analyze, DefaultString, DefaultValue; *-* and DefaultVariable.; -; *-* The expected returns values are; *-* -2 : the name has been recognized but won't be usable; *-* -1 : the name has not been recognized; *-* >=0 : the name has been recognized, return the action parameter.; -; -. Double_t Eval(Double_t x, Double_t y = 0, Double_t z = 0, Double_t t = 0) const; Evaluate this formula*-*-*-*-*-*-; *-* =====================; -; *-* The current value of variables x,y,z,t is passed through x, y, z and t.; *-* The parameters used will be the ones in the array params if params is given; *-* otherwise parameters will be taken from the stored data members fParams; -; -. Double_t EvalParOld(const Double_t* x, const Double_t* params = 0); Evaluate this formula*-*-*-*-*-*-; *-* =====================; -; *-* The current value of variables x,y,z,t is passed through the pointer x.; *-* The parameters used will be the ones in the array params if params is given; *-* otherwise parameters will be taken from the stored data members fParams. /*. */. -; -; -. TString GetExpFormula(Option_t* option = """") const; Reconstruct the formula expression from*-*-; *-* the internal ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFormula.html:25650,usab,usable,25650,root/html528/TFormula.html,https://root.cern,https://root.cern/root/html528/TFormula.html,3,['usab'],['usable']
Usability,"------------+; | 2 | 3 | 6 | ; +-----+-------------+-------------+; | 3 | 4 | 8 | ; +-----+-------------+-------------+; | 4 | 5 | 10 | ; +-----+-------------+-------------+; | 5 | -2147483648 | 3 | ; +-----+-------------+-------------+; | 6 | -2147483648 | 6 | ; +-----+-------------+-------------+; | 7 | -2147483648 | 9 | ; +-----+-------------+-------------+; | 8 | -2147483648 | 12 | ; +-----+-------------+-------------+; | 9 | -2147483648 | 15 | ; +-----+-------------+-------------+; | 10 | 4 | -2147483648 | ; +-----+-------------+-------------+; | 11 | 8 | -2147483648 | ; +-----+-------------+-------------+; | 12 | 12 | -2147483648 | ; +-----+-------------+-------------+; | 13 | 16 | -2147483648 | ; +-----+-------------+-------------+; | 14 | 20 | -2147483648 | ; +-----+-------------+-------------+; Example 2: provide a default value for branch y, but skip events where branch x is missing; +-----+----+-------------+; | Row | x | y | ; +-----+----+-------------+; | 0 | 1 | 2 | ; +-----+----+-------------+; | 1 | 2 | 4 | ; +-----+----+-------------+; | 2 | 3 | 6 | ; +-----+----+-------------+; | 3 | 4 | 8 | ; +-----+----+-------------+; | 4 | 5 | 10 | ; +-----+----+-------------+; | 10 | 4 | -2147483648 | ; +-----+----+-------------+; | 11 | 8 | -2147483648 | ; +-----+----+-------------+; | 12 | 12 | -2147483648 | ; +-----+----+-------------+; | 13 | 16 | -2147483648 | ; +-----+----+-------------+; | 14 | 20 | -2147483648 | ; +-----+----+-------------+; Example 3: only keep events where branch y is missing and display values for branch x; +-----+----+; | Row | x | ; +-----+----+; | 10 | 4 | ; +-----+----+; | 11 | 8 | ; +-----+----+; | 12 | 12 | ; +-----+----+; | 13 | 16 | ; +-----+----+; | 14 | 20 | ; +-----+----+; DateSeptember 2024 ; AuthorVincenzo Eduardo Padulano (CERN) ; Definition in file df036_missingBranches.C. tutorialsdataframedf036_missingBranches.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df036__missingBranches_8C.html:6390,Guid,Guide,6390,doc/master/df036__missingBranches_8C.html,https://root.cern,https://root.cern/doc/master/df036__missingBranches_8C.html,1,['Guid'],['Guide']
Usability,"----------------- --------------------------; a1 8.9483e-03 +/- 2.70e-02; a2 1.0177e-01 +/- 1.69e-02; ; ; RooFitResult: minimized FCN value: 118892, estimated distance to minimum: 0.000206627; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a1 -1.2106e-03 +/- 4.02e-03; a2 9.7573e-02 +/- 2.37e-03; ; ; RooFitResult: minimized FCN value: 119682, estimated distance to minimum: 1.25398e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a1 -4.8713e-03 +/- 4.03e-03; a2 9.8645e-02 +/- 2.41e-03; ; ; RooFitResult: minimized FCN value: 119682, estimated distance to minimum: 79498.5; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a1 -4.8565e-03 +/- 3.00e-02; a2 9.8652e-02 +/- 2.99e-02; ; ; RooFitResult: minimized FCN value: 31.3747, estimated distance to minimum: 4.135e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MIGRAD=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a1 -9.9890e-03 +/- 2.63e-02; a2 1.0637e-01 +/- 1.02e-02; ; ==> ML Fit results on 1K unweighted events; ==> ML Fit results on 43K unweighted events; ==> ML Fit results on 1K weighted events with a summed weight of 43K; ==> Corrected ML Fit results on 1K weighted events with a summed weight of 43K; ==> Chi2 Fit results on 1K weighted events with a summed weight of 43K; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf403_weightedevts.py. tutorialsroofitrf403_weightedevts.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf403__weightedevts_8py.html:11650,Guid,Guide,11650,doc/master/rf403__weightedevts_8py.html,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html,1,['Guid'],['Guide']
Usability,"------------------------------------------------------------------------; ; # Fit conditional efficiency pdf to data; effPdf.fitTo(data, ConditionalObservables={x}, PrintLevel=-1); ; # Plot fitted, data efficiency; # --------------------------------------------------------; ; # Plot distribution of all events and accepted fraction of events on frame; frame1 = x.frame(Bins=20, Title=""Data (all, accepted)""); data.plotOn(frame1); data.plotOn(frame1, Cut=""cut==cut::accept"", MarkerColor=""r"", LineColor=""r""); ; # Plot accept/reject efficiency on data overlay fitted efficiency curve; frame2 = x.frame(Bins=20, Title=""Fitted efficiency""); data.plotOn(frame2, Efficiency=cut) # needs ROOT version >= 5.21; effFunc.plotOn(frame2, LineColor=""r""); ; # Draw all frames on a canvas; ca = ROOT.TCanvas(""rf701_efficiency"", ""rf701_efficiency"", 800, 400); ca.Divide(2); ca.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); ca.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; ca.SaveAs(""rf701_efficiencyfit.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(effPdf_over_effPdf_Int[cut]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_effPdf_over_effPdf_Int[cut]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 8176 events out of 10000 total events; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf701_efficiencyfit.py. tutorialsroofitrf701_efficiencyfit.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf701__efficiencyfit_8py.html:3801,Guid,Guide,3801,doc/master/rf701__efficiencyfit_8py.html,https://root.cern,https://root.cern/doc/master/rf701__efficiencyfit_8py.html,1,['Guid'],['Guide']
Usability,"-----------------------------------------------------------; : Start of deep neural network training on CPU using MT, nthreads = 1; : ; TFHandler_DNN_CPU : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : m_jj: 0.0043655 0.99836 [ -3.2801 5.7307 ]; : m_jjj: 0.0044371 0.99827 [ -3.2805 5.7307 ]; : m_lv: 0.0054053 1.0003 [ -3.2810 5.7307 ]; : m_jlv: 0.0044637 0.99837 [ -3.2803 5.7307 ]; : m_bb: 0.0043676 0.99847 [ -3.2797 5.7307 ]; : m_wbb: 0.0042343 0.99744 [ -3.2803 5.7307 ]; : m_wwbb: 0.0046014 0.99948 [ -3.2802 5.7307 ]; : -----------------------------------------------------------; : ***** Deep Learning Network *****; DEEP NEURAL NETWORK: Depth = 5 Input = ( 1, 1, 7 ) Batch size = 128 Loss function = C; Layer 0 DENSE Layer: ( Input = 7 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 1 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 2 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 4 DENSE Layer: ( Input = 64 , Width = 1 ) Output = ( 1 , 128 , 1 ) Activation Function = Identity; : Using 11200 events for training and 2800 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.868652; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.659892 0.620582 0.589558 0.0469541 20523.3 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.604286 0.594787 0.586926 0.0471912 20632.4 0; : 3 | 0.58117 0.603906",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html:23138,Learn,Learning,23138,doc/master/TMVA__Higgs__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html,1,['Learn'],['Learning']
Usability,"-----------------------------------------------------------; : Start of deep neural network training on CPU using MT, nthreads = 1; : ; TFHandler_DNN_CPU : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : m_jj: 0.0043655 0.99836 [ -3.2801 5.7307 ]; : m_jjj: 0.0044371 0.99827 [ -3.2805 5.7307 ]; : m_lv: 0.0054053 1.0003 [ -3.2810 5.7307 ]; : m_jlv: 0.0044637 0.99837 [ -3.2803 5.7307 ]; : m_bb: 0.0043676 0.99847 [ -3.2797 5.7307 ]; : m_wbb: 0.0042343 0.99744 [ -3.2803 5.7307 ]; : m_wwbb: 0.0046014 0.99948 [ -3.2802 5.7307 ]; : -----------------------------------------------------------; : ***** Deep Learning Network *****; DEEP NEURAL NETWORK: Depth = 5 Input = ( 1, 1, 7 ) Batch size = 128 Loss function = C; Layer 0 DENSE Layer: ( Input = 7 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 1 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 2 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 4 DENSE Layer: ( Input = 64 , Width = 1 ) Output = ( 1 , 128 , 1 ) Activation Function = Identity; : Using 11200 events for training and 2800 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 1.171; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.66619 0.628056 0.587341 0.0468945 20605.2 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.605139 0.593298 0.586597 0.0468674 20632.5 0; : 3 Minimum Test error fou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html:23201,Learn,Learning,23201,doc/master/TMVA__Higgs__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html,1,['Learn'],['Learning']
Usability,"-----------------------------------------------------------; ; # Plot x distribution of data and projection of model x = 1/Ndata; # sum(data(y_i)) model(x;y_i); xframe = x.frame(); expDataXY.plotOn(xframe); model.plotOn(xframe, ProjWData=expDataY); ; # Speed up (and approximate) projection by using binned clone of data for; # projection; binnedDataY = expDataY.binnedClone(); model.plotOn(xframe, ProjWData=binnedDataY, LineColor=""c"", LineStyle="":""); ; # Show effect of projection with too coarse binning; (expDataY.get().find(""y"")).setBins(5); binnedDataY2 = expDataY.binnedClone(); model.plotOn(xframe, ProjWData=binnedDataY2, LineColor=""r""); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf303_conditional"", ""rf303_conditional"", 600, 460); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.2); xframe.Draw(); ; c.SaveAs(""rf303_conditional.png""); RooDataSet::modelData[x,y] = 6850 entries; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x]_d) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf303_conditional.py. tutorialsroofitrf303_conditional.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf303__conditional_8py.html:4099,Guid,Guide,4099,doc/master/rf303__conditional_8py.html,https://root.cern,https://root.cern/doc/master/rf303__conditional_8py.html,1,['Guid'],['Guide']
Usability,"-----------------------------------------------------; 7419// ILLEGAL COMMAND; 7420L3000:; 7421 Printf("" ABOVE COMMAND IS ILLEGAL. IGNORED"");; 7422 ; 7423}; 7424 ; 7425////////////////////////////////////////////////////////////////////////////////; 7426/// Minimization using the simplex method of Nelder and Mead; 7427///; 7428/// Performs a minimization using the simplex method of Nelder; 7429/// and Mead (ref. -- Comp. J. 7,308 (1965)).; 7430 ; 7431void TMinuit::mnsimp(); 7432{; 7433 /* Initialized data */; 7434 ; 7435 static constexpr Double_t alpha = 1;; 7436 static constexpr Double_t beta = .5;; 7437 static constexpr Double_t gamma = 2;; 7438 static constexpr Double_t rhomin = 4;; 7439 static constexpr Double_t rhomax = 8;; 7440 ; 7441 /* Local variables */; 7442 Double_t dmin_, dxdi, yrho, f, ynpp1, aming, ypbar;; 7443 Double_t bestx, ystar, y1, y2, ystst, pb, wg;; 7444 Double_t absmin, rho, sig2, rho1, rho2;; 7445 Int_t npfn, i, j, k, jhold, ncycl, nparx;; 7446 Int_t nparp1, kg, jh, nf, jl, ns;; 7447 ; 7448 if (fNpar <= 0) return;; 7449 if (fAmin == fUndefi) mnamin();; 7450 fCfrom = ""SIMPLEX "";; 7451 fNfcnfr = fNfcn;; 7452 fCstatu = ""UNCHANGED "";; 7453 npfn = fNfcn;; 7454 nparp1 = fNpar + 1;; 7455 nparx = fNpar;; 7456 rho1 = alpha + 1;; 7457 rho2 = rho1 + alpha*gamma;; 7458 wg = 1 / Double_t(fNpar);; 7459 if (fISW[4] >= 0) {; 7460 Printf("" START SIMPLEX MINIMIZATION. CONVERGENCE WHEN EDM .LT. %g"",fEpsi);; 7461 }; 7462 for (i = 1; i <= fNpar; ++i) {; 7463 fDirin[i-1] = fWerr[i-1];; 7464 mndxdi(fX[i-1], i-1, dxdi);; 7465 if (dxdi != 0) fDirin[i-1] = fWerr[i-1] / dxdi;; 7466 dmin_ = fEpsma2*TMath::Abs(fX[i-1]);; 7467 if (fDirin[i-1] < dmin_) fDirin[i-1] = dmin_;; 7468 }; 7469// choose the initial simplex using single-parameter searches; 7470L1:; 7471 ynpp1 = fAmin;; 7472 jl = nparp1;; 7473 fSIMPy[nparp1-1] = fAmin;; 7474 absmin = fAmin;; 7475 for (i = 1; i <= fNpar; ++i) {; 7476 aming = fAmin;; 7477 fPbar[i-1] = fX[i-1];; 7478 bestx = fX[i-1];; 7479 kg = 0;; 748",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:238463,SIMPL,SIMPLEX,238463,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,2,['SIMPL'],['SIMPLEX']
Usability,"---------------------------------------------------; ; # Derivative of normalized gauss(x) w.r.t. observable x; dgdx = gauss.derivative(x, 1); ; # Second and third derivative of normalized gauss(x) w.r.t. observable x; d2gdx2 = gauss.derivative(x, 2); d3gdx3 = gauss.derivative(x, 3); ; # Construct plot frame in 'x'; xframe = x.frame(Title=""d(Gauss)/dx""); ; # Plot gauss in frame (i.e. in x); gauss.plotOn(xframe); ; # Plot derivatives in same frame; dgdx.plotOn(xframe, LineColor=""m""); d2gdx2.plotOn(xframe, LineColor=""r""); d3gdx3.plotOn(xframe, LineColor=""kOrange""); ; # Create and plot derivatives w.r.t. sigma; # ------------------------------------------------------------------------------; ; # Derivative of normalized gauss(x) w.r.t. parameter sigma; dgds = gauss.derivative(sigma, 1); ; # Second and third derivative of normalized gauss(x) w.r.t. parameter sigma; d2gds2 = gauss.derivative(sigma, 2); d3gds3 = gauss.derivative(sigma, 3); ; # Construct plot frame in 'sigma'; sframe = sigma.frame(Title=""d(Gauss)/d(sigma)"", Range=(0.0, 2.0)); ; # Plot gauss in frame (i.e. in x); gauss.plotOn(sframe); ; # Plot derivatives in same frame; dgds.plotOn(sframe, LineColor=""m""); d2gds2.plotOn(sframe, LineColor=""r""); d3gds3.plotOn(sframe, LineColor=""kOrange""); ; # Draw all frames on a canvas; c = ROOT.TCanvas(""rf111_derivatives"", ""rf111_derivatives"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.6); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); sframe.GetYaxis().SetTitleOffset(1.6); sframe.Draw(); ; c.SaveAs(""rf111_derivatives.png""); [#1] INFO:NumericIntegration -- RooRealIntegral::init(gauss_Int[sigma]) using numeric integrator RooIntegrator1D to calculate Int(sigma); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf111_derivatives.py. tutorialsroofitrf111_derivatives.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf111__derivatives_8py.html:2777,Guid,Guide,2777,doc/master/rf111__derivatives_8py.html,https://root.cern,https://root.cern/doc/master/rf111__derivatives_8py.html,1,['Guid'],['Guide']
Usability,"---------------------------------------------; ; # Return 'raw' unnormalized value of gx; print(""gx = "", gx.getVal()); ; # Return value of gx normalized over x in range [-10,10]; nset = {x}; print(""gx_Norm[x] = "", gx.getVal(nset)); ; # Create object representing integral over gx; # which is used to calculate gx_Norm[x] == gx / gx_Int[x]; igx = gx.createIntegral({x}); print(""gx_Int[x] = "", igx.getVal()); ; # Integrate normalized pdf over subrange; # ----------------------------------------------------------------------------; ; # Define a range named ""signal"" in x from -5,5; x.setRange(""signal"", -5, 5); ; # Create an integral of gx_Norm[x] over x in range ""signal""; # ROOT.This is the fraction of of pdf gx_Norm[x] which is in the; # range named ""signal""; xset = {x}; igx_sig = gx.createIntegral(xset, NormSet=xset, Range=""signal""); print(""gx_Int[x|signal]_Norm[x] = "", igx_sig.getVal()); ; # Construct cumulative distribution function from pdf; # -----------------------------------------------------------------------------------------------------; ; # Create the cumulative distribution function of gx; # i.e. calculate Int[-10,x] gx(x') dx'; gx_cdf = gx.createCdf({x}); ; # Plot cdf of gx versus x; frame = x.frame(Title=""cdf of Gaussian pdf""); gx_cdf.plotOn(frame); ; # Draw plot on canvas; c = ROOT.TCanvas(""rf110_normintegration"", ""rf110_normintegration"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf110_normintegration.png""); [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signal' created with bounds [-5,5]; gx = 0.8007374029168081; gx_Norm[x] = 0.1068955044839622; gx_Int[x] = 7.490842639102233; gx_Int[x|signal]_Norm[x] = 0.8347532778470285; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf110_normintegration.py. tutorialsroofitrf110_normintegration.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf110__normintegration_8py.html:2670,Guid,Guide,2670,doc/master/rf110__normintegration_8py.html,https://root.cern,https://root.cern/doc/master/rf110__normintegration_8py.html,1,['Guid'],['Guide']
Usability,"-------------------------------------------; 118 // If the first symbol does not end is not followed by equal then it; 119 // defaults to being the sourceClass.; 120 //////////////////////////////////////////////////////////////////////////; 121 ; 122 {; 123 std::string::size_type endsymbol = FindEndSymbol( command );; 124 if ( endsymbol == command.length() || command[endsymbol] == ' ' || command[endsymbol] == '\t' ) {; 125 ; 126// std::string::size_type space_pos = command.find( ' ' );; 127// std::string::size_type equal_pos = command.find( '=' );; 128// if ( space_pos < equal_pos) {; 129 std::string value = TSchemaRuleProcessor::Trim( command.substr( 0, endsymbol ) );; 130 result[""sourceClass""] = value;; 131 result[""targetClass""] = value;; 132 if (endsymbol < command.length()) {; 133 command = TSchemaRuleProcessor::Trim( command.substr( endsymbol+1 ) );; 134 } else {; 135 command.clear();; 136 }; 137 ; 138 //-----------------------------------------------------------------------; 139 // If the first symbol is the targetClass then the 2nd symbol can be; 140 // the source data member name.; 141 //-----------------------------------------------------------------------; 142// space_pos = command.find( ' ' );; 143// equal_pos = command.find( '=' );; 144// if ( space_pos < equal_pos ) {; 145 endsymbol = FindEndSymbol( command );; 146 if ( endsymbol == command.length() || command[endsymbol] == ' ' || command[endsymbol] == '\t' ) {; 147 std::string membervalue = TSchemaRuleProcessor::Trim( command.substr( 0, endsymbol ) );; 148 result[""source""] = membervalue;; 149 result[""target""] = membervalue;; 150 command = TSchemaRuleProcessor::Trim( command.substr( endsymbol+1 ) );; 151 }; 152 }; 153 }; 154 ; 155 //-----------------------------------------------------------------------; 156 // Process the input until there are no characters left; 157 //////////////////////////////////////////////////////////////////////////; 158 ; 159 while( !command.empty() ) {; 160 //---------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RConversionRuleParser_8cxx_source.html:4597,clear,clear,4597,doc/master/RConversionRuleParser_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RConversionRuleParser_8cxx_source.html,2,['clear'],['clear']
Usability,"-------------------------------------; : var1: 0.070769 0.28960 [ -1.0000 1.0000 ]; : var2: 0.074130 0.28477 [ -1.0000 1.0000 ]; : var3: 0.026106 0.24582 [ -1.0000 1.0000 ]; : var4: -0.034951 0.25587 [ -1.0000 1.0000 ]; : -----------------------------------------------------------; : ***** Deep Learning Network *****; DEEP NEURAL NETWORK: Depth = 4 Input = ( 1, 1, 4 ) Batch size = 100 Loss function = C; Layer 0 DENSE Layer: ( Input = 4 , Width = 100 ) Output = ( 1 , 100 , 100 ) Activation Function = Tanh; Layer 1 DENSE Layer: ( Input = 100 , Width = 50 ) Output = ( 1 , 100 , 50 ) Activation Function = Tanh; Layer 2 DENSE Layer: ( Input = 50 , Width = 10 ) Output = ( 1 , 100 , 10 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 10 , Width = 4 ) Output = ( 1 , 100 , 4 ) Activation Function = Identity; : Using 3200 events for training and 800 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.691476; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.605916 0.542204 0.0761789 0.00657979 45977.6 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.512732 0.499825 0.0771995 0.00657724 45311.5 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.477495 0.458718 0.0776312 0.00665553 45085.9 0; : 4 Minimum Test error found - save the configuration ; : 4 | 0.438338 0.418147 0.0780597 0.00669006 44837 0; : 5 Minimum Test error found - save the configuration ; : 5 | 0.407569 0.391703 0.0786075 0.00678976 44557.2 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.387736 0.373696 0.0792581 0.00678916 44156.9 0; : 7 Minimum Test error found - ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:14496,Learn,Learning,14496,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['Learn'],['Learning']
Usability,"------------------------; 147 ; 148 std::cout << std::endl;; 149 std::cout << ""==> Start TMVAClassification"" << std::endl;; 150 ; 151 // Select methods (don't look at this code - not of interest); 152 if (myMethodList != """") {; 153 for (std::map<std::string,int>::iterator it = Use.begin(); it != Use.end(); it++) it->second = 0;; 154 ; 155 std::vector<TString> mlist = TMVA::gTools().SplitString( myMethodList, ',' );; 156 for (UInt_t i=0; i<mlist.size(); i++) {; 157 std::string regMethod(mlist[i]);; 158 ; 159 if (Use.find(regMethod) == Use.end()) {; 160 std::cout << ""Method \"""" << regMethod << ""\"" not known in TMVA under this name. Choose among the following:"" << std::endl;; 161 for (std::map<std::string,int>::iterator it = Use.begin(); it != Use.end(); it++) std::cout << it->first << "" "";; 162 std::cout << std::endl;; 163 return 1;; 164 }; 165 Use[regMethod] = 1;; 166 }; 167 }; 168 ; 169 // --------------------------------------------------------------------------------------------------; 170 ; 171 // Here the preparation phase begins; 172 ; 173 // Read training and test data; 174 // (it is also possible to use ASCII format as input -> see TMVA Users Guide); 175 // Set the cache directory for the TFile to the current directory. The input; 176 // data file will be downloaded here if not present yet, then it will be read; 177 // from the cache path directly.; 178 TFile::SetCacheFileDir(""."");; 179 std::unique_ptr<TFile> input{TFile::Open(""http://root.cern/files/tmva_class_example.root"", ""CACHEREAD"")};; 180 if (!input || input->IsZombie()) {; 181 throw std::runtime_error(""ERROR: could not open data file"");; 182 }; 183 std::cout << ""--- TMVAClassification : Using input file: "" << input->GetName() << std::endl;; 184 ; 185 // Register the training and test trees; 186 ; 187 TTree *signalTree = (TTree*)input->Get(""TreeS"");; 188 TTree *background = (TTree*)input->Get(""TreeB"");; 189 ; 190 // Create a ROOT output file where TMVA will store ntuples, histograms, etc.; 191 TString o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C_source.html:6442,Guid,Guide,6442,doc/master/TMVAClassification_8C_source.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C_source.html,1,['Guid'],['Guide']
Usability,"-----------------; : var1 var2 var3 var4; : var1: +1.000 +0.407 +0.610 +0.834; : var2: +0.407 +1.000 +0.710 +0.741; : var3: +0.610 +0.710 +1.000 +0.851; : var4: +0.834 +0.741 +0.851 +1.000; : ----------------------------------------; DataSetInfo : Correlation matrix (bg2):; : ----------------------------------------; : var1 var2 var3 var4; : var1: +1.000 -0.647 -0.016 -0.013; : var2: -0.647 +1.000 +0.015 +0.002; : var3: -0.016 +0.015 +1.000 -0.024; : var4: -0.013 +0.002 -0.024 +1.000; : ----------------------------------------; DataSetFactory : [dataset] : ; : ; Factory : Booking method: ␛[1mMLP␛[0m; : ; MLP : Building Network. ; : Initializing weights; Factory : Booking method: ␛[1mPDEFoam␛[0m; : ; Factory : Booking method: ␛[1mDL_CPU␛[0m; : ; : Parsing option string: ; : ... ""!H:V:ErrorStrategy=CROSSENTROPY:VarTransform=N:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|100,TANH|50,TANH|10,LINEAR:TrainingStrategy=Optimizer=ADAM,LearningRate=1e-3,TestRepetitions=1,ConvergenceSteps=10,BatchSize=100,MaxEpochs=20""; : The following options are set:; : - By User:; : <none>; : - Default:; : Boost_num: ""0"" [Number of times the classifier will be boosted]; : Parsing option string: ; : ... ""!H:V:ErrorStrategy=CROSSENTROPY:VarTransform=N:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|100,TANH|50,TANH|10,LINEAR:TrainingStrategy=Optimizer=ADAM,LearningRate=1e-3,TestRepetitions=1,ConvergenceSteps=10,BatchSize=100,MaxEpochs=20""; : The following options are set:; : - By User:; : V: ""True"" [Verbose output (short form of ""VerbosityLevel"" below - overrides the latter one)]; : VarTransform: ""N"" [List of variable transformations performed before training, e.g., ""D_Background,P_Signal,G,N_AllClasses"" for: ""Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed)""]; : H: ""False"" [Print method-specific help messag",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:4023,Learn,LearningRate,4023,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['Learn'],['LearningRate']
Usability,"------------; : var1: 0.070769 0.28960 [ -1.0000 1.0000 ]; : var2: 0.074130 0.28477 [ -1.0000 1.0000 ]; : var3: 0.026106 0.24582 [ -1.0000 1.0000 ]; : var4: -0.034951 0.25587 [ -1.0000 1.0000 ]; : -----------------------------------------------------------; : Start of deep neural network training on CPU using MT, nthreads = 1; : ; TFHandler_DL_CPU : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 0.070769 0.28960 [ -1.0000 1.0000 ]; : var2: 0.074130 0.28477 [ -1.0000 1.0000 ]; : var3: 0.026106 0.24582 [ -1.0000 1.0000 ]; : var4: -0.034951 0.25587 [ -1.0000 1.0000 ]; : -----------------------------------------------------------; : ***** Deep Learning Network *****; DEEP NEURAL NETWORK: Depth = 4 Input = ( 1, 1, 4 ) Batch size = 100 Loss function = C; Layer 0 DENSE Layer: ( Input = 4 , Width = 100 ) Output = ( 1 , 100 , 100 ) Activation Function = Tanh; Layer 1 DENSE Layer: ( Input = 100 , Width = 50 ) Output = ( 1 , 100 , 50 ) Activation Function = Tanh; Layer 2 DENSE Layer: ( Input = 50 , Width = 10 ) Output = ( 1 , 100 , 10 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 10 , Width = 4 ) Output = ( 1 , 100 , 4 ) Activation Function = Identity; : Using 3200 events for training and 800 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.691476; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.605916 0.542204 0.0761789 0.00657979 45977.6 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.512732 0.499825 0.0771995 0.00657724 45311.5 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.47749",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:13793,Learn,Learning,13793,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['Learn'],['Learning']
Usability,"------------; ; # Make plain projection of data and pdf on x observable; frame = x.frame(Title=""Projection of 3D data and pdf on X"", Bins=40); data.plotOn(frame); model.plotOn(frame); ; # Project pdf and data on x in signal range; # ----------------------------------------------------------------------------------; ; # Define signal region in y and z observables; y.setRange(""sigRegion"", -1, 1); z.setRange(""sigRegion"", -1, 1); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X in signal range of (Y,Z)"", Bins=40); ; # Plot subset of data in which all observables are inside ""sigRegion""; # For observables that do not have an explicit ""sigRegion"" range defined (e.g. observable); # an implicit definition is used that is identical to the full range (i.e.; # [-5,5] for x); data.plotOn(frame2, CutRange=""sigRegion""); ; # Project model on x, projected observables (y,z) only in ""sigRegion""; model.plotOn(frame2, ProjectionRange=""sigRegion""); ; c = ROOT.TCanvas(""rf311_rangeplot"", ""rf310_rangeplot"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf311_rangeplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (z,y); [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Eval -- RooRealVar::setRange(z) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1692 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (z,y) in range sigRegion; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf311_rangeplot.py. tutorialsroofitrf311_rangeplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf311__rangeplot_8py.html:3243,Guid,Guide,3243,doc/master/rf311__rangeplot_8py.html,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8py.html,1,['Guid'],['Guide']
Usability,"----------; ; r = model.fitTo(dacc, Save=True, PrintLevel=-1); ; # Plot fitted pdf on full and accepted data; # ---------------------------------------------------------------------------------; ; # Make plot frame, datasets and overlay model; frame = t.frame(Title=""Fit to data with per-event acceptance""); dall.plotOn(frame, MarkerColor=""r"", LineColor=""r""); model.plotOn(frame); dacc.plotOn(frame); ; # Print fit results to demonstrate absence of bias; r.Print(""v""); ; c = ROOT.TCanvas(""rf314_paramranges"", ""rf314_paramranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf314_paramranges.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[t]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 5000 will supersede previous event count of 10000 for normalization of PDF projections; ; RooFitResult: minimized FCN value: 2823.97, estimated distance to minimum: 3.17108e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter InitialValue FinalValue +/- Error GblCorr.; -------------------- ------------ -------------------------- --------; tau -1.5400e+00 -1.5335e+00 +/- 2.22e-02 <none>; ; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf314_paramfitrange.py. tutorialsroofitrf314_paramfitrange.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf314__paramfitrange_8py.html:3372,Guid,Guide,3372,doc/master/rf314__paramfitrange_8py.html,https://root.cern,https://root.cern/doc/master/rf314__paramfitrange_8py.html,1,['Guid'],['Guide']
Usability,"-00-patches@v6-10-00-25-g9f78c3a, Jul 03 2017, 11:39:44 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; -------------------------------------------------------------------------. root [0] .x hsimple.C; Now execute demos.C, which brings up the button bar shown on the left. You can click on any button to execute another example. To see the source, open the corresponding source file (for example fit1.C). Once you are done, and want to quit the ROOT session, you can do so by typing .q.; root[] .x demos.C; root[] .q; 20.2 $ROOTSYS/test; The test directory contains a set of examples that represent all areas of the framework. When a new release is cut, the examples in this directory are compiled and run to test the new release’s backward compatibility.; We see these source files:. Makefile; Makefile to build all test programs. hsimple.cxx; Simple test program that creates and saves some histograms. MainEvent.cxx; Simple test program that creates a ROOT Tree object and fills it with some simple structures but also with complete histograms. This program uses the files Event.cxx, EventCint.cxx and Event.h. An example of a procedure to link this program is in bind_Event. Note that the Makefile invokes the rootcling utility to generate the Cling interface EventCint.cxx. Event.cxx; Implementation for classes Event and Track. minexam.cxx; Simple test program for data fitting. tcollex.cxx; Example usage of the ROOT collection classes. tcollbm.cxx; Benchmarks of ROOT collection classes. ctorture.cxx; Test program for the class TComplex. tstring.cxx; Example usage of the ROOT string class. vmatrix.cxx; Verification program for the TMatrix class. vvector.cxx; Verification program for the TVectorclass. vlazy.cxx; Verification program for lazy matrices. hworld.cxx; Small program showing basic graphics. guitest.cxx; Example usage of the ROOT GUI classes. gui viewer .cxx; Another ROOT GUI example program. Hello.cxx; Dancing text example. Aclock.cxx; Analog clock (a la ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1075554,Simpl,Simple,1075554,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,"['Simpl', 'simpl']","['Simple', 'simple']"
Usability,"-1). Int_t SetInput(const TH1* hist_y, Double_t scaleBias = 0., Double_t oneOverZeroError = 0., const TH2* hist_vyy = 0, const TH2* hist_vyy_inv = 0); Define the input data for subsequent calls to DoUnfold(Double_t); input: input distribution with errors; scaleBias: scale factor applied to the bias; oneOverZeroError: for bins with zero error, this number defines 1/error.; Return value: number of bins with bad error; +10000*number of unconstrained output bins; Note: return values>=10000 are fatal errors,; for the given input, the unfolding can not be done!; Calls the SetInput method of the base class, then renames the input; vectors fY and fVyy, then performs the background subtraction; Data members modified:; fYData,fY,fVyyData,fVyy,fVyyinvData,fVyyinv; and those modified by TUnfold::SetInput(); and those modified by DoBackgroundSubtraction(). void InitTUnfoldSys(void); initialize pointers and TMaps. ~TUnfoldSys(void); delete all data members. void ClearResults(void); clear all data members which depend on the unfolding results. void PrepareSysError(void); calculations required for syst.error; data members modified; fEmatUncorrX, fEmatUncorrAx, fDeltaCorrX, fDeltaCorrAx. void SetTauError(Double_t delta_tau); set uncertainty on tau. Bool_t GetDeltaSysSource(TH1* hist_delta, const char* source, const Int_t* binMap = 0); calculate systematic shift from a given source; ematrix: output; source: name of the error source; binMap: see method GetEmatrix(). Bool_t GetDeltaSysTau(TH1* delta, const Int_t* binMap = 0); calculate systematic shift from tau variation; ematrix: output; binMap: see method GetEmatrix(). void GetEmatrixTotal(TH2* ematrix, const Int_t* binMap = 0); get total error including statistical error; ematrix: output; binMap: see method GetEmatrix(). TMatrixDSparse * GetSummedErrorMatrixYY(void). TMatrixDSparse * GetSummedErrorMatrixXX(void). Double_t GetChi2Sys(void); calculate total chi**2 including systematic errors. void GetRhoItotal(TH1* rhoi, const Int_t* b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TUnfoldSys.html:18816,Clear,ClearResults,18816,root/html602/TUnfoldSys.html,https://root.cern,https://root.cern/root/html602/TUnfoldSys.html,4,"['Clear', 'clear']","['ClearResults', 'clear']"
Usability,"->Draw(""x:a:y:b:z:u:c:v:w"","""",""PARA"");. Cluttered output produced when all the tree events are plotted. If the 24000 events are plotted as solid lines and no special techniques are used to clarify the picture, the result is the previous picture which is very cluttered and useless. To improve the readability of the Parallel Coordinates output and to explore interactively the data set, many techniques are available. We have implemented a few in ROOT. First of all, in order to show better where the clusters on the various axes are, a 1D histogram is associated to each axis. These histograms (one per axis) are filled according to the number of lines passing through the bins. The histogram’s axis can be represented with colors or as bar charts. These histograms can be represented which colors (get from a palette according to the bin contents) or as bar charts. Both representations can be cumulated on the same plot. This technique allows seeing clearly where the clusters are on an individual axis but it does not give any hints about the correlations between the axes.; Avery simple technique allows to make the clusters appearing: Instead of painting solid lines we paint dotted lines. The cluttering of each individual line is reduced and the clusters show clearly as we can see on the next figure. The spacing between the dots is a parameter which can be adjusted in order to get the best results. Using dotted lines is a very simple method to reduce the cluttering. Interactivity is a very important aspect of the Parallel Coordinates plots. To really explore the data set it is essential to act directly with the events and the axes. For instance, changing the axes order may show clusters which were not visible in a different order. On the next figure the axes order has been changed interactively. We can see that many more clusters appear and all the “random spheres” we put in the data set are now clearly visible. Having moved the variables u,v,w after the variables x,y,z the cor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:613466,clear,clearly,613466,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['clear'],['clearly']
Usability,"->DrawLine(12,8,6,8);; ar1->DrawArrow(3,5,4.4,5,0.02,""|>"");; ar1->DrawArrow(7.8,5,8.9,5,0.02,""|>"");; }; ; TArrowDraw all kinds of Arrows.Definition TArrow.h:29; TArrow::DrawArrowvirtual TArrow * DrawArrow(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Float_t arrowsize=0, Option_t *option="""")Draw this arrow with new coordinates.Definition TArrow.cxx:135; TArrow::Drawvoid Draw(Option_t *option="""") overrideDraw this arrow with its current attributes.Definition TArrow.cxx:120; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttText::SetTextAlignvirtual void SetTextAlign(Short_t align=11)Set the text alignment.Definition TAttText.h:42; TAttText::SetTextColorvirtual void SetTextColor(Color_t tcolor=1)Set the text color.Definition TAttText.h:44; TAttText::SetTextSizevirtual void SetTextSize(Float_t tsize=1)Set the text size.Definition TAttText.h:47; TCanvasThe Canvas class.Definition TCanvas.h:23; TLineUse the TLine constructor to create a simple line.Definition TLine.h:22; TLine::DrawLinevirtual TLine * DrawLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2)Draw this line with new coordinates.Definition TLine.cxx:103; TObject::Drawvirtual void Draw(Option_t *option="""")Default Draw method for all objects.Definition TObject.cxx:280; TPaveLabelA Pave (see TPave) with a text centered in the Pave.Definition TPaveLabel.h:20; TPaveLabel::Drawvoid Draw(Option_t *option="""") overrideDraw this pavelabel with its current attributes.Definition TPaveLabel.cxx:88; TPaveTextA Pave (see TPave) with text, lines or/and boxes inside.Definition TPaveText.h:21; TPaveText::AddTextvirtual TText * AddText(Double_t x1, Double_t y1, const char *label)Add a new Text line to this pavetext at given coordinates.Definition TPaveText.cxx:191; TPaveText::Drawvoid Draw(Option_t *option="""") overrideDraw this pavetext with its current attributes.Definition TPaveText.cxx:242; TTextBase class for several text objects.Definition TText.h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/eval_8C.html:2311,simpl,simple,2311,doc/master/eval_8C.html,https://root.cern,https://root.cern/doc/master/eval_8C.html,1,['simpl'],['simple']
Usability,"->GetFirst();; 11207 Int_t lastX = xaxis->GetLast();; 11208 Int_t binx = firstX + Int_t((lastX-firstX)*(px-pxmin)/(pxmax-pxmin));; 11209 Int_t binx2 = TMath::Min(binx+nbins-1,xaxis->GetNbins() );; 11210 xaxis->SetRange(binx,binx2);; 11211 Int_t firstZ = zaxis->GetFirst();; 11212 Int_t lastZ = zaxis->GetLast();; 11213 Int_t binz = firstZ + Int_t((lastZ-firstZ)*(py-pymin)/(pymax-pymin));; 11214 Int_t binz2 = TMath::Min(binz+nbins-1,zaxis->GetNbins() );; 11215 zaxis->SetRange(binz,binz2);; 11216 if (line1[0].GetX()) gVirtualX->DrawPolyLine(2,line1);; 11217 if (nbins>1 && line1[0].GetX()) {; 11218 gVirtualX->DrawPolyLine(2,line2);; 11219 gVirtualX->DrawPolyLine(2,line3);; 11220 gVirtualX->DrawPolyLine(2,line4);; 11221 gVirtualX->DrawPolyLine(5,endface1);; 11222 gVirtualX->DrawPolyLine(5,endface2);; 11223 }; 11224 xx[0]=xaxis->GetBinCenter(binx);; 11225 xx[2] = zaxis->GetBinCenter(binz);; 11226 xx[1] = yaxis->GetXmin();; 11227 view->WCtoNDC(xx,u);; 11228 line1[0].SetX(pxmin + Int_t((u[0]-uxmin)*cx));; 11229 line1[0].SetY(pymin + Int_t((u[1]-uymin)*cy));; 11230 xx[1] = yaxis->GetXmax();; 11231 view->WCtoNDC(xx,u);; 11232 line1[1].SetX(pxmin + Int_t((u[0]-uxmin)*cx));; 11233 line1[1].SetY(pymin + Int_t((u[1]-uymin)*cy));; 11234 gVirtualX->DrawPolyLine(2,line1);; 11235 if (nbins>1) {; 11236 xx[1] = yaxis->GetXmin();; 11237 xx[2] = zaxis->GetBinCenter(binz+nbins-1);; 11238 xx[0] = xaxis->GetBinCenter(binx);; 11239 view->WCtoNDC(xx,u);; 11240 line2[0].SetX(pxmin + Int_t((u[0]-uxmin)*cx));; 11241 line2[0].SetY(pymin + Int_t((u[1]-uymin)*cy));; 11242 xx[1] = yaxis->GetXmax();; 11243 view->WCtoNDC(xx,u);; 11244 line2[1].SetX(pxmin + Int_t((u[0]-uxmin)*cx));; 11245 line2[1].SetY(pymin + Int_t((u[1]-uymin)*cy));; 11246 ; 11247 xx[1] = yaxis->GetXmin();; 11248 xx[2] = zaxis->GetBinCenter(binz+nbins-1);; 11249 xx[0] = xaxis->GetBinCenter(binx+nbins-1);; 11250 view->WCtoNDC(xx,u);; 11251 line3[0].SetX(pxmin + Int_t((u[0]-uxmin)*cx));; 11252 line3[0].SetY(pymin + Int_t((u[1]-uymin)*cy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8cxx_source.html:406687,ux,uxmin,406687,doc/master/THistPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8cxx_source.html,1,['ux'],['uxmin']
Usability,"->GetUxmax(),; gPad->GetUymin(),; gPad->GetUxmin(),; gPad->GetUymin(),; h->GetXaxis()->GetXmin(),; h->GetXaxis()->GetXmax(),; 510,""-"");; newaxis->SetLabelOffset(-0.03);; newaxis->Draw();; }; ; void ReverseYAxis(TH1 *h); {; // Remove the current axis; h->GetYaxis()->SetLabelOffset(999);; h->GetYaxis()->SetTickLength(0);; ; // Redraw the new axis; gPad->Update();; TGaxis *newaxis = new TGaxis(gPad->GetUxmin(),; gPad->GetUymax(),; gPad->GetUxmin()-0.001,; gPad->GetUymin(),; h->GetYaxis()->GetXmin(),; h->GetYaxis()->GetXmax(),; 510,""+"");; newaxis->SetLabelOffset(-0.03);; newaxis->Draw();; }; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefinition RtypesCore.h:57; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; gPad#define gPadDefinition TVirtualPad.h:308; TCanvasThe Canvas class.Definition TCanvas.h:23; TGaxisThe axis painter class.Definition TGaxis.h:24; TGaxis::SetLabelOffsetvoid SetLabelOffset(Float_t labeloffset)Definition TGaxis.h:106; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:307; TH2::FillInt_t Fill(Double_t) overrideInvalid Fill method.Definition TH2.cxx:393; TObject::Drawvirtual void Draw(Option_t *option="""")Default Draw method for all objects.Definition TObject.cxx:280; TRandomThis is the base class for the ROOT Random number generators.Definition TRandom.h:27; c1return c1Definition legend1.C:41; AuthorOlivier Couet ; Definition in file reverseaxis.C. tutorialshistreverseaxis.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/reverseaxis_8C.html:2752,Guid,Guide,2752,doc/master/reverseaxis_8C.html,https://root.cern,https://root.cern/doc/master/reverseaxis_8C.html,1,['Guid'],['Guide']
Usability,"->SetLineColor(kRed);; l2->SetLineStyle(2);; l2->SetLineWidth(1);; l2->Draw();; ; // Draw text Annotations; TAnnotation *txt = new TAnnotation(-0.45, -0.2, 0.3, ""f(y,x_{0})"");; txt->SetTextFont(42);; txt->SetTextColor(kRed);; txt->Draw();; ; TAnnotation *txt1 = new TAnnotation(0.5, 0.5, 0.3, ""f(x,y)"");; txt1->SetTextColor(kBlue);; txt1->SetTextFont(42);; txt1->Draw();; }; f#define f(i)Definition RSha256.hxx:104; c#define c(i)Definition RSha256.hxx:101; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; kRed@ kRedDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; kAzure@ kAzureDefinition Rtypes.h:67; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TAnnotationAn annotation is a TLatex which can be drawn in a 2D or 3D space.Definition TAnnotation.h:18; TAttText::SetTextColorvirtual void SetTextColor(Color_t tcolor=1)Set the text color.Definition TAttText.h:44; TAttText::SetTextFontvirtual void SetTextFont(Font_t tfont=62)Set the text font.Definition TAttText.h:46; TCanvasThe Canvas class.Definition TCanvas.h:23; TF2A 2-Dim function with parameters.Definition TF2.h:29; TObject::Drawvirtual void Draw(Option_t *option="""")Default Draw method for all objects.Definition TObject.cxx:280; TPolyLine3DA 3-dimensional polyline.Definition TPolyLine3D.h:33; TStyle::SetOptTitlevoid SetOptTitle(Int_t tit=1)Definition TStyle.h:334; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640; TStyle::SetHistTopMarginvoid SetHistTopMargin(Double_t hmax=0.05)Definition TStyle.h:385; ROOT::VecOps::cosRVec< PromoteType< T > > cos(const RVec< T > &v)Definition RVec.hxx:1852; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; AuthorLuca Lista, Olivier Couet ; Definition in file annotation3d.C. tutorialsgraphsannotation3d.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/annotation3d_8C.html:4162,Guid,Guide,4162,doc/master/annotation3d_8C.html,https://root.cern,https://root.cern/doc/master/annotation3d_8C.html,1,['Guid'],['Guide']
Usability,"->Write();; h1f->Write();; ; // Produce a plot if requested; if (plot) {; TCanvas *c1 = new TCanvas(""c1"",""The FillRandom example"",200,10,700,900);; ; auto pad1 = new TPad(""pad1"",""The pad with the function"",0.05,0.50,0.95,0.95);; auto pad2 = new TPad(""pad2"",""The pad with the histogram"",0.05,0.05,0.95,0.45);; pad1->Draw();; pad2->Draw();; pad1->cd();; ; pad1->SetGridx();; pad1->SetGridy();; pad1->GetFrame()->SetBorderMode(-1);; pad1->GetFrame()->SetBorderSize(5);; ; sqroot->Draw();; auto lfunction = new TPaveLabel(5,39,9.8,46,""The sqroot function"");; lfunction->Draw();; c1->Update();; ; pad2->cd();; pad2->GetFrame()->SetBorderMode(-1);; pad2->GetFrame()->SetBorderSize(5);; ; h1f->SetFillColor(45);; h1f->Draw();; c1->Update();; }; ; gBenchmark->Show(""fillrandom"");; }; gBenchmarkR__EXTERN TBenchmark * gBenchmarkDefinition TBenchmark.h:59; plotwinID h TVirtualViewer3D TVirtualGLPainter char TVirtualGLPainter plotDefinition TGWin32VirtualGLProxy.cxx:53; TBenchmark::Startvirtual void Start(const char *name)Starts Benchmark with the specified name.Definition TBenchmark.cxx:172; TBenchmark::Showvirtual void Show(const char *name)Stops Benchmark name and Prints results.Definition TBenchmark.cxx:155; TCanvasThe Canvas class.Definition TCanvas.h:23; TF11-Dim function classDefinition TF1.h:233; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TFormulaThe Formula class.Definition TFormula.h:89; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TPadThe most important graphics class in the ROOT system.Definition TPad.h:28; TPaveLabelA Pave (see TPave) with a text centered in the Pave.Definition TPaveLabel.h:20; c1return c1Definition legend1.C:41; fillrandomDefinition fillrandom.py:1; AuthorRene Brun ; Definition in file fillrandom.C. tutorialshistfillrandom.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fillrandom_8C.html:2902,Guid,Guide,2902,doc/master/fillrandom_8C.html,https://root.cern,https://root.cern/doc/master/fillrandom_8C.html,1,['Guid'],['Guide']
Usability,"->cd(1);; gPad->SetFillColor(41);; gPad->SetFrameFillColor(33);; ht->SetLineColor(2);; ht->GetXaxis()->SetLabelSize(0.05);; ht->Draw();; // Sets time on the X axis; // The time used is the one set as time offset added to the value; // of the axis. This is converted into day/month/year hour:min:sec and; // a reasonnable tick interval value is chosen.; ht->GetXaxis()->SetTimeDisplay(1);. //======= Build a simple graph beginning at a different time ======; // Time interval : 5 seconds. float x[100], t[100];; for (i=0;i<100;i++) {; x[i] = sin(i*4*3.1415926/50)*exp(-(double)i/20);; t[i] = 6000+(double)i/20;; }; TGraph *gt = new TGraph(100,t,x);; gt->SetTitle(""Politics"");; ct->cd(2);; gPad->SetFillColor(41);; gPad->SetFrameFillColor(33);; gt->SetFillColor(19);; gt->SetLineColor(5);; gt->SetLineWidth(2);; gt->Draw(""AL"");; gt->GetXaxis()->SetLabelSize(0.05);; // Sets time on the X axis; gt->GetXaxis()->SetTimeDisplay(1);; gPad->Modified();. //======= Build a second simple graph for a very long time interval ======; // Time interval : a few years. float x2[10], t2[10];; for (i=0;i<10;i++) {; x2[i] = gRandom->Gaus(500,100)*i;; t2[i] = i*365*86400;; }; TGraph *gt2 = new TGraph(10,t2,x2);; gt2->SetTitle(""Number of monkeys on the moon"");; ct->cd(3);; gPad->SetFillColor(41);; gPad->SetFrameFillColor(33);; gt2->SetFillColor(19);; gt2->SetMarkerColor(4);; gt2->SetMarkerStyle(29);; gt2->SetMarkerSize(1.3);; gt2->Draw(""AP"");; gt2->GetXaxis()->SetLabelSize(0.05);; // Sets time on the X axis; gt2->GetXaxis()->SetTimeDisplay(1);; //; // One can choose a different time format than the one chosen by default; // The time format is the same as the one of the C strftime() function; // It's a string containing the following formats :; // for date :; // %a abbreviated weekday name; // %b abbreviated month name; // %d day of the month (01-31); // %m month (01-12); // %y year without century; // %Y year with century; //; // for time :; // %H hour (24-hour clock); // %I hour (12-hour clock); // %",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGaxis.html:19621,simpl,simple,19621,root/html604/TGaxis.html,https://root.cern,https://root.cern/root/html604/TGaxis.html,1,['simpl'],['simple']
Usability,"-Origin ""*""; Header set Access-Control-Allow-Headers ""range""; Header set Access-Control-Expose-Headers ""content-range,content-length,accept-ranges""; Header set Access-Control-Allow-Methods ""GET""; </FilesMatch>; </IfModule>; More details about configuring of CORS headers can be found here.; Alternative - enable CORS requests in the browser. It can be easily done with CORS Everywhere plugin for the Firefox browser or Allow CORS plugin for the Chrome browser.; Next solution - install JSROOT on the server hosting ROOT files. In such configuration JSROOT does not issue CORS requests, therefore server and browsers can be used with their default settings. A simplified variant of such solution - copy only the top index.htm file from JSROOT package and specify the full path to modules/gui.mjs script like:; <script type=""module"">; import { openFile, draw } from 'https://root.cern/js/latest/modules/gui.mjs';; // ...; </script>; In the main <div> element one can specify many custom parameters like one do it in URL string:; <div id=""simpleGUI"" path=""files/path"" files=""userfile1.root;subdir/usefile2.root"">; loading scripts ...; </div>; 1.8 Reading local ROOT files; JSROOT can read files from local file system using HTML5 FileReader functionality. Main limitation here - user should interactively select files for reading. There is button “…” on the main JSROOT page, which starts file selection dialog. If valid ROOT file is selected, JSROOT will be able to normally read content of such file.; 1.9 JSROOT with THttpServer; THttpServer provides http access to objects from running ROOT application. JSROOT is used to implement the user interface in the web browsers.; The layout of the main page coming from THttpServer is very similar to normal JSROOT page. One could browse existing items and display them. A snapshot of running server can be seen on the demo page.; One could also specify similar URL parameters to configure the displayed items and drawing options.; It is also possible to d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html:18183,simpl,simpleGUI,18183,root/htmldoc/guides/JSROOT/JSROOT.html,https://root.cern,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html,1,['simpl'],['simpleGUI']
Usability,"-aligned splitting planes, there are many different ways; to construct kd-trees. The canonical method of kd-tree construction has the following constraints:. * As one moves down the tree, one cycles through the axes used to select the splitting planes.; (For example, the root would have an x-aligned plane, the root's children would both have y-aligned; planes, the root's grandchildren would all have z-aligned planes, and so on.); * At each step, the point selected to create the splitting plane is the median of the points being; put into the kd-tree, with respect to their coordinates in the axis being used. (Note the assumption; that we feed the entire set of points into the algorithm up-front.). This method leads to a balanced kd-tree, in which each leaf node is about the same distance from the root.; However, balanced trees are not necessarily optimal for all applications.; The following pseudo-code illustrates this canonical construction procedure (NOTE, that the procedure used; by the TKDTree class is a bit different, the following pseudo-code is given as a simple illustration of the; concept):. function kdtree (list of points pointList, int depth); {; if pointList is empty; return nil;; else; {; // Select axis based on depth so that axis cycles through all valid values; var int axis := depth mod k;. // Sort point list and choose median as pivot element; select median from pointList;. // Create node and construct subtrees; var tree_node node;; node.location := median;; node.leftChild := kdtree(points in pointList before median, depth+1);; node.rightChild := kdtree(points in pointList after median, depth+1);; return node;; }; }. Our construction method is optimized to save memory, and differs a bit from the constraints above.; In particular, the division axis is chosen as the one with the biggest spread, and the point to create the; splitting plane is chosen so, that one of the two subtrees contains exactly 2^k terminal nodes and is a; perfectly balanced binary tre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TKDTree_int_double_.html:2864,simpl,simple,2864,root/html528/TKDTree_int_double_.html,https://root.cern,https://root.cern/root/html528/TKDTree_int_double_.html,12,['simpl'],['simple']
Usability,"-bold-r-normal ""Arial"" 0 8; *-* 7 : helvetica-bold-o-normal ""Arial"" 1 8; *-* 8 : courier-medium-r-normal ""Courier New"" 0 5; *-* 9 : courier-medium-o-normal ""Courier New"" 1 5; *-* 10 : courier-bold-r-normal ""Courier New"" 0 8; *-* 11 : courier-bold-o-normal ""Courier New"" 1 8; *-* 12 : symbol-medium-r-normal ""Symbol"" 0 6; *-* 13 : times-medium-r-normal ""Times New Roman"" 0 5; *-* 14 : ""Wingdings"" 0 5. void SetTextSize(Float_t textsize); Set current text size*-*-; *-* =====================. void SetTitle(const char* title); Set title of the object*-; *-* =======================. void UpdateWindow(Int_t mode); Update display.; mode : (1) update; (0) sync. Int_t WriteGIF(char* name). Writes the current active window into pixmap file.; The format is defined by the file name extension; like ""png"",""jpg"",""bmp"" . . .; If no extension is provided the ""png"" format is used by default. Returns 1 in case of success,; 0 otherwise; Note: this method may not produce the expected result been called; ---- from the ROOT prompt by simple reason:; The active window will be console window; rather the last selected ROOT canvas. void WritePixmap(Int_t wid, UInt_t w, UInt_t h, char* pxname); Write the pixmap wd in the bitmap file pxname in JPEG.; wd : Pixmap address; w,h : Width and height of the pixmap.; if w = h = -1 the size of the pimxap is equal the size the wd size; pxname : pixmap file name; The format is defined by the file name extension; like ""png"",""jpg"",""bmp"" . . .; If no or some unknown extension is provided then; the ""png"" format is used by default; --; Take in account the special ROOT filename syntax 26.12.2006 vf; ""gif+NN"" - an animated GIF file is produced, where NN is delay in 10ms units. TVirtualX * GetVirtualX(); { return fgTQt;}. Int_t LoadQt(const char* shareLibFileName); Make sure we load the GUI DLL from the gui thread. Int_t processQtEvents(Int_t maxtime = 300); Force processing the Qt events only without entering the ROOT event loop. void operator=(const TGQt& ). TGQt()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGQt.html:41433,simpl,simple,41433,root/html602/TGQt.html,https://root.cern,https://root.cern/root/html602/TGQt.html,2,['simpl'],['simple']
Usability,-d peak finder (class TSpectrum2) ;  SearchHR1.C Example to illustrate high resolution peak searching function (class TSpectrum) ;  SearchHR3.C Example to illustrate the influence of number of iterations in deconvolution in high resolution peak searching function (class TSpectrum) ;  Smoothing.C Example to illustrate smoothing using Markov algorithm (class TSpectrum) ;  spectrumpainter.C Examples showing how to use TSpectrum2Painter (the SPEC option) ;  ► splot;  TestSPlot.CThis tutorial illustrates the use of class TSPlot and of the sPlots method ;  ► sql;  sqlcanvas.CThis is slight modification of ntuple1.C example ;  sqlcreatedb.CCreate a runcatalog table in a MySQL test database ;  sqlfilldb.CFill run catalog with nfiles entries ;  sqlselect.C;  sqltables.CThis is an example illustrating how the TSQLFile class can be used ;  ► thread;  stressThreadPool.CUsage: ;  threadPool.CUsage: ;  threads.CExample of a simple script creating 3 threads ;  threadsh1.CExample of a simple script creating 3 threads ;  threadsh2.CExample of a simple script creating 2 threads each with one canvas ;  ► tmva;  ► envelope;  classification.C;  ► keras;  ApplicationClassificationKeras.py;  ApplicationRegressionKeras.py;  ClassificationKeras.py;  GenerateModel.py;  LaunchClasGUI.C;  LaunchMultiGUI.C;  LaunchRegGUI.C;  MulticlassKeras.py;  RegressionKeras.py;  createData.CPlot the variables ;  TMVAClassification.C This macro provides examples for the training and testing of the TMVA classifiers ;  TMVAClassificationApplication.C This macro provides a simple example on how to use the trained classifiers within an analysis module ;  TMVAClassificationCategory.C This macro provides examples for the training and testing of the TMVA classifiers in categorisation mode ;  TMVAClassificationCategoryApplication.C This macro provides a simple example on how to use the trained classifiers (with categories) within an analysis module ;  TMVACrossValidation.C This example explains how to use the cross-,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v612/files.html:155199,simpl,simple,155199,doc/v612/files.html,https://root.cern,https://root.cern/doc/v612/files.html,1,['simpl'],['simple']
Usability,-d peak finder (class TSpectrum2) ;  SearchHR1.C Example to illustrate high resolution peak searching function (class TSpectrum) ;  SearchHR3.C Example to illustrate the influence of number of iterations in deconvolution in high resolution peak searching function (class TSpectrum) ;  Smoothing.C Example to illustrate smoothing using Markov algorithm (class TSpectrum) ;  spectrumpainter.C Examples showing how to use TSpectrum2Painter (the SPEC option) ;  ► splot;  TestSPlot.CThis tutorial illustrates the use of class TSPlot and of the sPlots method ;  ► sql;  sqlcanvas.CThis is slight modification of ntuple1.C example ;  sqlcreatedb.CCreate a runcatalog table in a MySQL test database ;  sqlfilldb.CFill run catalog with nfiles entries ;  sqlselect.C;  sqltables.CThis is an example illustrating how the TSQLFile class can be used ;  ► thread;  stressThreadPool.CUsage: ;  threadPool.CUsage: ;  threads.CExample of a simple script creating 3 threads ;  threadsh1.CExample of a simple script creating 3 threads ;  threadsh2.CExample of a simple script creating 2 threads each with one canvas ;  ► tmva;  ► keras;  ApplicationClassificationKeras.py;  ApplicationRegressionKeras.py;  ClassificationKeras.py;  GenerateModel.py;  LaunchClasGUI.C;  LaunchMultiGUI.C;  LaunchRegGUI.C;  MulticlassKeras.py;  RegressionKeras.py;  createData.CPlot the variables ;  TMVAClassification.C This macro provides examples for the training and testing of the TMVA classifiers ;  TMVAClassificationApplication.C This macro provides a simple example on how to use the trained classifiers within an analysis module ;  TMVAClassificationCategory.C This macro provides examples for the training and testing of the TMVA classifiers in categorisation mode ;  TMVAClassificationCategoryApplication.C This macro provides a simple example on how to use the trained classifiers (with categories) within an analysis module ;  TMVACrossValidation.C This example explains how to use the cross-validation feature of TMVA ;  TM,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/files.html:154405,simpl,simple,154405,doc/v610/files.html,https://root.cern,https://root.cern/doc/v610/files.html,1,['simpl'],['simple']
Usability,"-fNColumns>, hmode is the x text alignmode (ETextJustification) for the header text and cmode is the x text alignmode for the item text. ;  ; virtual void SetHeaders (Int_t ncolumns);  Set number of headers, i.e. ;  ; virtual void SetIncrements (Int_t hInc, Int_t vInc);  Set horizontal and vertical scrollbar increments. ;  ; virtual void SetViewMode (EListViewMode viewMode);  Set list view mode. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCanvas;  TGCanvas (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kSunkenFrame|kDoubleBorder, Pixel_t back=GetDefaultFrameBackground());  Create a canvas object. ;  ;  ~TGCanvas () override;  Delete canvas. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Adding a frame to a canvas is actually adding the frame to the viewport container. ;  ; virtual void ClearViewPort ();  Clear view port and redraw content. ;  ; void DrawBorder () override;  Draw canvas border. ;  ; TGFrame * GetContainer () const;  ; TGDimension GetDefaultSize () const override;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; virtual Int_t GetHsbPosition () const;  Get position of horizontal scrollbar. ;  ; TGHScrollBar * GetHScrollbar () const;  ; Int_t GetScrolling () const;  ; TGViewPort * GetViewPort () const;  ; virtual Int_t GetVsbPosition () const;  Get position of vertical scrollbar. ;  ; TGVScrollBar * GetVScrollbar () const;  ; void MapSubwindows () override;  Map all canvas sub windows. ;  ; virtual void SetHsbPosition (Int_t newPos);  Set position of horizontal scrollbar. ;  ; void SetScrolling (Int_t scrolling);  Set scrolling policy. ;  ; virtual void SetVsbPosition (Int_t newPos);  Set position of vertical scrollbar. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGListView.html:3970,Clear,ClearViewPort,3970,doc/master/classTGListView.html,https://root.cern,https://root.cern/doc/master/classTGListView.html,2,['Clear'],"['Clear', 'ClearViewPort']"
Usability,"-level p.d.f evaluates to NaN @ numerator=wrap_pdf=59.1285, denominator=wrap_pdf_Int[pTV]=200921; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (86348.3) to force MIGRAD to back out of this region. Error log follows.; Parameter values: cHDD=0.338546 cHl3=0.879879 cHq3=-1.35856; RooAbsPdf::wrap_pdf_over_wrap_pdf_Int[pTV][ numerator=wrap_pdf denominator=wrap_pdf_Int[pTV] ]; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=14.3535, denominator=wrap_pdf_Int[pTV]=34082.1; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=14.3535, denominator=wrap_pdf_Int[pTV]=34082.1; getLogVal() top-level p.d.f evaluates to NaN @ numerator=wrap_pdf=14.3535, denominator=wrap_pdf_Int[pTV]=34082.1; getLogVal() top-level p.d.f evaluates to NaN @ numerator=wrap_pdf=14.3535, denominator=wrap_pdf_Int[pTV]=34082.1; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (86348.3) to force MIGRAD to back out of this region. Error log follows.; Parameter values: cHDD=0.372361 cHl3=0.491134 cHq3=-0.886807; RooAbsPdf::wrap_pdf_over_wrap_pdf_Int[pTV][ numerator=wrap_pdf denominator=wrap_pdf_Int[pTV] ]; getLogVal() top-level p.d.f evaluates to NaN @ numerator=wrap_pdf=5.8312, denominator=wrap_pdf_Int[pTV]=12183.6; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(wrap_pdf) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:InputArguments -- RooAbsData::plotOn(pseudo_dh) INFO: dataset has non-integer weights, auto-selecting SumW2 errors instead of Poisson errors; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 7389.24 will supersede previous event count of 9313.81 for normalization of PDF projections; DateJanuary 2022 ; AuthorRahul Balasubramanian ; Definition in file rf712_lagrangianmorphfit.C. tutorialsroofitrf712_lagrangianmorphfit.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf712__lagrangianmorphfit_8C.html:17107,Guid,Guide,17107,doc/master/rf712__lagrangianmorphfit_8C.html,https://root.cern,https://root.cern/doc/master/rf712__lagrangianmorphfit_8C.html,1,['Guid'],['Guide']
Usability,"-process the internal Hbook tables to speed-up the search at the next entries. ;  ; TClass * IsA () const override;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; virtual Bool_t IsOpen () const;  Returns kTRUE in case file is open and kFALSE if file is not open. ;  ; void ls (const char *path="""") const override;  List contents of Hbook directory. ;  ; virtual void SetBranchAddress (Int_t id, const char *bname, void *add);  Set branch address. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHbookFile.html:3929,Clear,Clear,3929,doc/master/classTHbookFile.html,https://root.cern,https://root.cern/doc/master/classTHbookFile.html,1,['Clear'],['Clear']
Usability,"-rebase option is used).; Push: transfer the state of the current branch to a remote tracking branch. This must be a fast-forward operation (see merge).; Rebase: a merge-like operation in which the change tree is rewritten (see Rebasing below). Used to turn non-trivial merges into fast-forward operations.; Ref: a 40-byte hex representation of a SHA1 or a name that denotes a particular object.; Remote: another repository known to this one. If the local repository was created with ""clone"" then there is at least one remote, usually called, ""origin.""; Stage: to add a file or selected changes therefrom to the index in preparation for a commit.; Stash: a stack onto which the current set of uncommitted changes can be put (eg in order to switch to or synchronize with another branch) as a patch for retrieval later. Also the act of putting changes onto this stack.; Tag: human-readable label for a particular state of the tree. Tags may be simple (in which case they are actually branches) or annotated (analogous to a CVS tag), with an associated SHA1 hash and message. Annotated tags are preferable in general.; Tracking branch: a branch on a remote which is the default source / sink for pull / push operations respectively for the current branch. For instance, origin/master is the tracking branch for the local master in a local repository.; Tree-ish: a ref pointing to either a commit object, a tree object, or a tag object pointing to a tag or commit or tree object.; Un-tracked: not known currently to git. Initializing a repository; git clone <repository-spec> <local-dir>. or; mkdir <local-dir>; cd <local-dir>; git init. or (FNAL Redmine-specific); rclone [-r <repo>] <project> <local-name>. where rclone is defined in cet-chg:export:unix-admin/profile.d/rclone.sh ; Basic log information.>; git log []. Important tip: log messages have an optional structure, since many git commands only look at the first line. Get into the habit of putting only a short synopsis on the first line of a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/git-tips-and-tricks.html:6060,simpl,simple,6060,d/git-tips-and-tricks.html,https://root.cern,https://root.cern/d/git-tips-and-tricks.html,1,['simpl'],['simple']
Usability,-system-li...Definition TFile.h:53; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; int; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; TMVA_SOFIE_GNN_Parser.datasetlist datasetDefinition TMVA_SOFIE_GNN_Parser.py:190; df037_TTreeEventMatchingDefinition df037_TTreeEventMatching.py:1; ; Example 1: provide default values for all columns; +-----+-----+---------------+---------------+---+-------------+-------------+; | Row | idx | auxdata_1.idx | auxdata_2.idx | x | auxdata_1.y | auxdata_2.z | ; +-----+-----+---------------+---------------+---+-------------+-------------+; | 0 | 1 | 1 | 1 | 1 | 4 | 6 | ; +-----+-----+---------------+---------------+---+-------------+-------------+; | 1 | 2 | 2 | -2147483648 | 2 | 5 | -2147483648 | ; +-----+-----+---------------+---------------+---+-------------+-------------+; | 2 | 3 | -2147483648 | 3 | 3 | -2147483648 | 7 | ; +-----+-----+---------------+---------------+---+-------------+-------------+; Example 2: skip the entry only when the first auxiliary tree does not match; +-----+-----+---------------+---------------+---+-------------+-------------+; | Row | idx | auxdata_1.idx | auxdata_2.idx | x | auxdata_1.y | auxdata_2.z | ; +-----+-----+---------------+---------------+---+-------------+-------------+; | 0 | 1 | 1 | 1 | 1 | 4 | 6 | ; +-----+-----+---------------+---------------+---+-------------+-------------+; | 1 | 2 | 2 | -2147483648 | 2 | 5 | -2147483648 | ; +-----+-----+---------------+---------------+---+-------------+-------------+; Example 3: keep entries from the main tree for which there is no match in the auxiliary tree; +-----+-----+---+; | Row | idx | x | ; +-----+-----+---+; | 2 | 3 | 3 | ; +-----+-----+---+; DateSeptember 2024 ; AuthorVincenzo Eduardo Padulano (CERN) ; Definition in file df037_TTreeEventMatching.C. tutorialsdataframedf037_TTreeEventMatching.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df037__TTreeEventMatching_8C.html:7602,Guid,Guide,7602,doc/master/df037__TTreeEventMatching_8C.html,https://root.cern,https://root.cern/doc/master/df037__TTreeEventMatching_8C.html,1,['Guid'],['Guide']
Usability,"-up HDFS file. Long64_t CopyTo(void* to, Long64_t maxsize) const; Copy the binary representation of the TMemFile into; the memory area starting at 'to' and of length at most 'maxsize'; returns the number of bytes actually copied. void CopyTo(TBuffer& tobuf) const; Copy the binary representation of the TMemFile into; the TBuffer tobuf. Long64_t GetSize() const; Return the current size of the memory file. void Print(Option_t* option = """") const. void ResetAfterMerge(TFileMergeInfo* ); Wipe all the data from the permanent buffer but keep, the in-memory object; alive. void ResetObjects(TDirectoryFile* , TFileMergeInfo* ) const; Wipe all the data from the permanent buffer but keep, the in-memory object; alive. Int_t SysRead(Int_t fd, void* buf, Int_t len); Read specified number of bytes from current offset into the buffer.; See documentation for TFile::SysRead(). Long64_t SysSeek(Int_t fd, Long64_t offset, Int_t whence); Seek to a specified position in the file. See TFile::SysSeek().; Note that TMemFile does not support seeks when the file is open for write. Int_t SysOpen(const char* pathname, Int_t flags, UInt_t mode); Open a file in 'MemFile'. Int_t SysClose(Int_t fd); Close the mem file. Int_t SysWrite(Int_t fd, const void* buf, Int_t len); Write a buffer into the file;. Int_t SysStat(Int_t fd, Long_t* id, Long64_t* size, Long_t* flags, Long_t* modtime); Perform a stat on the HDFS file; see TFile::SysStat(). Int_t SysSync(Int_t fd); Sync remaining data to disk;; Nothing to do here. void ResetErrno() const; ResetErrno; simply calls TSystem::ResetErrno(). Long64_t MemRead(Int_t fd, void* buf, Long64_t len) const. » Author: Philippe Canal, May 2011 » Copyright (C) 1995-2009, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id: TMemFile.h 41423 2011-10-17 17:30:33Z pcanal $ » Last generated: 2011-12-02 14:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMemFile.html:24913,simpl,simply,24913,root/html532/TMemFile.html,https://root.cern,https://root.cern/root/html532/TMemFile.html,1,['simpl'],['simply']
Usability,"-up considerably the performance, in particular; when the Tree is accessed remotely via a high latency network. The default cache size (10 Mbytes) may be changed via the function; TTreeCache::SetCacheSize. Only the baskets for the requested entry range are put in the cache. For each Tree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted. -Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. -Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning period is started or restarted when:; - TTree::SetCacheSize is called for the first time.; - TTree::SetCacheSize is called a second time with a different size.; - TTreeCache::StartLearningPhase is called.; - TTree[Cache]::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is actually started) when:; - TTree[Cache]::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries (default to 100).; - A 'cached' TChain switches over to a new file. WHY DO WE NEED the TreeCache when doing data analysis?. When writing a TTree, the branch buffers are kept in memory.; A typical branch buffersize (before compression) is typically 32 KBytes.; After compression, the zipped buffer may be just a few Kbytes.; The branch buffers cannot be much larger in case of Trees with several; hundred or thousand branches.; When writing, this does not generate a performance problem because branch; buffers are always written sequentially and the OS is in general clever enough; to flush the data to the output file when a few MBytes of data have to be writ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreeCache.html:1631,learn,learning,1631,root/html528/TTreeCache.html,https://root.cern,https://root.cern/root/html528/TTreeCache.html,3,['learn'],['learning']
Usability,"-with-issues/creating-an-issue#creating-an-issue-from-a-url-query; 1066 ; 1067 if (type == ""bug"") {; 1068 OpenInBrowser(; 1069 ""\""https://github.com/root-project/root/issues/new?labels=bug&template=bug_report.yml&root-version="" +; 1070 FormatHttpUrl(GetSetup()) + ""\"""");; 1071 } else if (type == ""improvement"") {; 1072 OpenInBrowser(""\""https://github.com/root-project/root/issues/""; 1073 ""new?labels=improvement&template=improvement_report.yml&root-version="" +; 1074 FormatHttpUrl(GetSetup()) + ""\"""");; 1075 } else if (type == ""feature"") {; 1076 OpenInBrowser(; 1077 ""\""https://github.com/root-project/root/issues/new?labels=new+feature&template=feature_request.yml\"""");; 1078 } else {; 1079 Warning(""OpenGitHubIssue"",; 1080 ""Cannot find GitHub issue type \""%s\"".\n""; 1081 ""Available types are 'bug', 'feature' and 'improvement'."",; 1082 type.Data());; 1083 }; 1084}; 1085 ; 1086////////////////////////////////////////////////////////////////////////////////; 1087/// It opens the online reference guide, generated with Doxygen, for the; 1088/// chosen scope (class/namespace/struct) or member (method/function/; 1089/// data member/enumeration/enumerator. If the user types incorrect value,; 1090/// it will return an error or warning.; 1091///; 1092/// \param[in] strippedClass the scope or scope::member; 1093 ; 1094void TApplication::OpenReferenceGuideFor(const TString &strippedClass); 1095{; 1096 // We check if the user is searching for a scope and if the scope exists.; 1097 if (TClass *clas = TClass::GetClass(strippedClass)) {; 1098 // We check what scope he is searching for (class/namespace/struct).; 1099 // Enumerators will switch between the possible cases.; 1100 EUrl scopeType;; 1101 if (clas->Property() & kIsNamespace) {; 1102 scopeType = kURLforNameSpace;; 1103 } else if (clas->Property() & kIsStruct) {; 1104 scopeType = kURLforStruct;; 1105 } else {; 1106 scopeType = kURLforClass;; 1107 }; 1108 // If the user search directly for a scope we open the URL for him with OpenInBr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TApplication_8cxx_source.html:41626,guid,guide,41626,doc/master/TApplication_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TApplication_8cxx_source.html,1,['guid'],['guide']
Usability,. #include <ROOT/TRWSpinLock.hxx>; Constructor & Destructor Documentation. ◆ TRWSpinLock(). ROOT::TRWSpinLock::TRWSpinLock ; (; ). inline . Regular constructor. ; Definition at line 34 of file TRWSpinLock.hxx. Member Function Documentation. ◆ ReadLock(). void TRWSpinLock::ReadLock ; (; ). Acquire the lock in read mode. ; Definition at line 35 of file TRWSpinLock.cxx. ◆ ReadUnLock(). void TRWSpinLock::ReadUnLock ; (; ). Release the lock in read mode. ; Definition at line 61 of file TRWSpinLock.cxx. ◆ WriteLock(). void TRWSpinLock::WriteLock ; (; ). Acquire the lock in write mode. ; Definition at line 77 of file TRWSpinLock.cxx. ◆ WriteUnLock(). void TRWSpinLock::WriteUnLock ; (; ). Release the lock in write mode. ; Definition at line 102 of file TRWSpinLock.cxx. Member Data Documentation. ◆ fCond. std::condition_variable_any ROOT::TRWSpinLock::fCond. private . ! RWlock internal condition variable ; Definition at line 29 of file TRWSpinLock.hxx. ◆ fMutex. ROOT::TSpinMutex ROOT::TRWSpinLock::fMutex. private . ! RWlock internal mutex ; Definition at line 28 of file TRWSpinLock.hxx. ◆ fReaderReservation. std::atomic<int> ROOT::TRWSpinLock::fReaderReservation. private . ! A reader wants access ; Definition at line 25 of file TRWSpinLock.hxx. ◆ fReaders. std::atomic<int> ROOT::TRWSpinLock::fReaders. private . ! Number of readers ; Definition at line 24 of file TRWSpinLock.hxx. ◆ fWriter. std::atomic<bool> ROOT::TRWSpinLock::fWriter. private . ! Is there a writer? ; Definition at line 27 of file TRWSpinLock.hxx. ◆ fWriterReservation. std::atomic<int> ROOT::TRWSpinLock::fWriterReservation. private . ! A writer wants access ; Definition at line 26 of file TRWSpinLock.hxx. Libraries for ROOT::TRWSpinLock:. [legend]; The documentation for this class was generated from the following files:; core/thread/inc/ROOT/TRWSpinLock.hxx; core/thread/src/TRWSpinLock.cxx. ROOTTRWSpinLock. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:37 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TRWSpinLock.html:2918,Guid,Guide,2918,doc/v632/classROOT_1_1TRWSpinLock.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TRWSpinLock.html,1,['Guid'],['Guide']
Usability,. ). Constructor. ; Definition at line 41 of file TKeyMapFile.cxx. ◆ ~TKeyMapFile(). TKeyMapFile::~TKeyMapFile ; (; ). inlineoverride . Definition at line 31 of file TKeyMapFile.h. Member Function Documentation. ◆ Browse(). void TKeyMapFile::Browse ; (; TBrowser * ; b). overridevirtual . Browse the contained objects. ; Reimplemented from TObject.; Definition at line 50 of file TKeyMapFile.cxx. ◆ Class(). static TClass * TKeyMapFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TKeyMapFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TKeyMapFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 34 of file TKeyMapFile.h. ◆ DeclFileName(). static const char * TKeyMapFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 34 of file TKeyMapFile.h. ◆ IsA(). TClass * TKeyMapFile::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 34 of file TKeyMapFile.h. ◆ operator=(). TKeyMapFile & TKeyMapFile::operator= ; (; const TKeyMapFile & ; ). privatedelete . ◆ Streamer(). void TKeyMapFile::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TKeyMapFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 34 of file TKeyMapFile.h. Member Data Documentation. ◆ fMapFile. TMapFile* TKeyMapFile::fMapFile. private . Pointer to map file. ; Definition at line 26 of file TKeyMapFile.h. Libraries for TKeyMapFile:. [legend]; The documentation for this class was generated from the following files:; io/io/inc/TKeyMapFile.h; io/io/src/TKeyMapFile.cxx. TKeyMapFile. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:53 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKeyMapFile.html:14196,Guid,Guide,14196,doc/master/classTKeyMapFile.html,https://root.cern,https://root.cern/doc/master/classTKeyMapFile.html,1,['Guid'],['Guide']
Usability,". ). Definition at line 63 of file gifencode.c. ◆ output() [1/2]. static void output ; (; ). static . ◆ output() [2/2]. static void output ; (; int ; code). static . Definition at line 226 of file gifencode.c. ◆ put_short() [1/2]. static void put_short ; (; ). static . ◆ put_short() [2/2]. static void put_short ; (; int ; word). static . Definition at line 301 of file gifencode.c. Variable Documentation. ◆ a_count. int a_count. static . Definition at line 209 of file gifencode.c. ◆ accum. char accum[256]. static . Definition at line 210 of file gifencode.c. ◆ BitsPixel. int BitsPixel. static . Definition at line 25 of file gifencode.c. ◆ ClearCode. int ClearCode. static . Definition at line 29 of file gifencode.c. ◆ CodeTab. int CodeTab[5003]. static . Definition at line 23 of file gifencode.c. ◆ cur_accum. unsigned long cur_accum. static . Definition at line 207 of file gifencode.c. ◆ cur_bits. int cur_bits. static . Definition at line 208 of file gifencode.c. ◆ CurCodeSize. int CurCodeSize. static . Definition at line 27 of file gifencode.c. ◆ CurMaxCode. int CurMaxCode. static . Definition at line 28 of file gifencode.c. ◆ EOFCode. int EOFCode. static . Definition at line 30 of file gifencode.c. ◆ FreeCode. int FreeCode. static . Definition at line 31 of file gifencode.c. ◆ HashTab. long HashTab[5003]. static . Definition at line 22 of file gifencode.c. ◆ IniCodeSize. int IniCodeSize. static . Definition at line 26 of file gifencode.c. ◆ masks. unsigned long masks[]. static . Initial value:= { 0x0000,; 0x0001, 0x0003, 0x0007, 0x000F,; 0x001F, 0x003F, 0x007F, 0x00FF,; 0x01FF, 0x03FF, 0x07FF, 0x0FFF,; 0x1FFF, 0x3FFF, 0x7FFF, 0xFFFF }. Definition at line 211 of file gifencode.c. ◆ Nbyte. long Nbyte. static . Definition at line 33 of file gifencode.c. ◆ put_b. void(* put_b) () ; (; ). static . Definition at line 34 of file gifencode.c. graf2dwin32gdksrcgifencode.c. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:09:48 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/win32gdk_2src_2gifencode_8c.html:4701,Guid,Guide,4701,doc/v632/win32gdk_2src_2gifencode_8c.html,https://root.cern,https://root.cern/doc/v632/win32gdk_2src_2gifencode_8c.html,1,['Guid'],['Guide']
Usability,". ). inline . Definition at line 194 of file TFormula.h. ◆ AddVariable(). void TFormula::AddVariable ; (; const TString & ; name, . Double_t ; value = 0 . ). Adds variable to known variables, and reprocess formula. ; Definition at line 2569 of file TFormula.cxx. ◆ AddVariables(). void TFormula::AddVariables ; (; const TString * ; vars, . const Int_t ; size . ). Adds multiple variables. ; First argument is an array of pairs<TString,Double>, where first argument is name of variable, second argument represents value. size - number of variables passed in first argument ; Definition at line 2602 of file TFormula.cxx. ◆ Class(). static TClass * TFormula::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFormula::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFormula::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 289 of file TFormula.h. ◆ Clear(). void TFormula::Clear ; (; Option_t * ; option = """"). overridevirtual . Clear the formula setting expression to empty and reset the variables and parameters containers. ; Reimplemented from TObject.; Definition at line 767 of file TFormula.cxx. ◆ Compile(). Int_t TFormula::Compile ; (; const char * ; expression = """"). Compile the given expression with Cling backward compatibility method to be used in combination with the empty constructor if no expression is given , the current stored formula (retrieved with GetExpFormula()) or the title is used. ; return 0 if the formula compilation is successful ; Definition at line 650 of file TFormula.cxx. ◆ Copy(). void TFormula::Copy ; (; TObject & ; object); const. overridevirtual . Copy this to obj. ; Reimplemented from TObject.; Definition at line 684 of file TFormula.cxx. ◆ DeclFileName(). static const char * TFormula::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 289 of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:31728,Clear,Clear,31728,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['Clear'],['Clear']
Usability,". );    ROTL16(v, 16 - (n)). Definition at line 56 of file RSha256.hxx. ◆ ROTR32. #define ROTR32; (;  ; v, .  ; n . );    ROTL32(v, 32 - (n)). Definition at line 46 of file RSha256.hxx. ◆ ROTR64. #define ROTR64; (;  ; v, .  ; n . );    ROTL64(v, 64 - (n)). Definition at line 47 of file RSha256.hxx. ◆ ROTR8. #define ROTR8; (;  ; v, .  ; n . );    ROTL8(v, 8 - (n)). Definition at line 55 of file RSha256.hxx. ◆ RX_8. #define RX_8; (;  ; i). Value: R(a, b, c, d, e, f, g, h, i); \; R(h, a, b, c, d, e, f, g, (i + 1)); \; R(g, h, a, b, c, d, e, f, (i + 2)); \; R(f, g, h, a, b, c, d, e, (i + 3)); \; R(e, f, g, h, a, b, c, d, (i + 4)); \; R(d, e, f, g, h, a, b, c, (i + 5)); \; R(c, d, e, f, g, h, a, b, (i + 6)); \; R(b, c, d, e, f, g, h, a, (i + 7)); R#define R(a, b, c, d, e, f, g, h, i)Definition RSha256.hxx:110. Definition at line 115 of file RSha256.hxx. ◆ S0. #define S0; (;  ; x);    (ROTR32(x, 2) ^ ROTR32(x, 13) ^ ROTR32(x, 22)). Definition at line 88 of file RSha256.hxx. ◆ s0. #define s0; (;  ; x);    (ROTR32(x, 7) ^ ROTR32(x, 18) ^ (x >> 3)). Definition at line 90 of file RSha256.hxx. ◆ S1. #define S1; (;  ; x);    (ROTR32(x, 6) ^ ROTR32(x, 11) ^ ROTR32(x, 25)). Definition at line 89 of file RSha256.hxx. ◆ s1. #define s1; (;  ; x);    (ROTR32(x, 17) ^ ROTR32(x, 19) ^ (x >> 10)). Definition at line 91 of file RSha256.hxx. ◆ SHA256_DIGEST_SIZE. #define SHA256_DIGEST_SIZE   32. Definition at line 58 of file RSha256.hxx. ◆ U16V. #define U16V; (;  ; v);    ((uint16_t)(v)&0xFFFFU). Definition at line 37 of file RSha256.hxx. ◆ U32V. #define U32V; (;  ; v);    ((uint32_t)(v)&0xFFFFFFFFU). Definition at line 38 of file RSha256.hxx. ◆ U64V. #define U64V; (;  ; v);    ((uint64_t)(v)&0xFFFFFFFFFFFFFFFFU). Definition at line 39 of file RSha256.hxx. ◆ U8V. #define U8V; (;  ; v);    ((uint8_t)(v)&0xFFU). Definition at line 36 of file RSha256.hxx. corefoundationresROOTRSha256.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:14 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RSha256_8hxx.html:8227,Guid,Guide,8227,doc/master/RSha256_8hxx.html,https://root.cern,https://root.cern/doc/master/RSha256_8hxx.html,1,['Guid'],['Guide']
Usability,". . Files; file  buttonChangelabel.C;  This macro gives an example for changing text button labels anytime the Start or Pause buttons are clicked. ;  ; file  buttongroupState.C;  A simple example that shows the enabled and disabled state of a button group with radio and check buttons. ;  ; file  buttonsLayout.C;  This macro gives an example of different buttons' layout. ;  ; file  buttonTest.C;  This macro gives an example of how to set/change text button attributes. ;  ; file  calendar.C;  This macro gives an example of how to use html widget to display tabular data. ;  ; file  CPUMeter.C;  Simple macro showing capabilities of the TGSpeedo widget. ;  ; file  customContextMenu.C;  Example showing how to add a function to the class context menu. ;  ; file  customTH1Fmenu.C;  Example showing how to customize a context menu for a class. ;  ; file  drag_and_drop.C;  This tutorial illustrates how to use drag and drop within ROOT. ;  ; file  exec3.C;  Example of using signal/slot in TCanvas/TPad to get feedback about processed events. ;  ; file  exec_macro.C;  This utility macro executes the macro ""macro"" given as first argument and save a capture in a png file. ;  ; file  games.C;  This macro runs three ""games"" that each nicely illustrate the graphics capabilities of ROOT. ;  ; file  gtreeTableTest.C;  This TableTest class is a simple example of how to use a TGTreeTable. ;  ; file  guilabels.C;  This macro gives an example of how to create different kind of labels and the possibility to enable/disable them. ;  ; file  guitest.C;  Test program for ROOT native GUI classes Exactly like $ROOTSYS/test/guitest.cxx but using the new signal and slots communication mechanism. ;  ; file  guitest_playback.C;  This macro plays a recorded ROOT session showing how to perform various interactive GUI operations with the guitest.C macro While replaying the session, several temporary macros (guitest0xx.C) macros will be saved. ;  ; file  guiWithCLING.C;  A simple example of entering CLING",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__gui.html:1204,feedback,feedback,1204,doc/master/group__tutorial__gui.html,https://root.cern,https://root.cern/doc/master/group__tutorial__gui.html,1,['feedback'],['feedback']
Usability,". //select PostScript output type; Int_t type = 111; //portrait ps; // Int_t type = 112; //landscape ps; // Int_t type = 113; //eps. //create a PostScript file and set the paper size; TPostScript ps(""test.ps"",type);; ps.Range(16,24); //set x,y of printed page. //draw 3 histograms from file hsimple.root on separate pages; hpx->Draw();; c1.Update(); //force drawing in a script; hprof->Draw();; c1.Update();; hpx->Draw(""lego1"");; c1.Update();; ps.Close();; }; The next example does the same:; {; TFile f(""hsimple.root"");; TCanvas c1(""c1"",""canvas"",800,600);. //set x,y of printed page; gStyle->SetPaperSize(16,24);. //draw 3 histograms from file hsimple.root on separate pages; hpx->Draw();; c1->Print(""test1.ps("", ""Portrait"");; hprof->Draw();; c1->Print(""test1.ps"");; hpx->Draw(""lego1"");; c1->Print(""test1.ps)"");; }; This following example shows two pages. The canvas is divided. TPostScript::NewPage must be called before starting a new picture. object->Draw does not clear the canvas in this case because we clear only the pads and not the main canvas. Note that c1->Update must be called at the end of the first picture.; {; TFile *f1 = new TFile(""hsimple.root"");; TCanvas *c1 = new TCanvas(""c1"");; TPostScript *ps = new TPostScript(""file.ps"",112);. // picture 1; c1->Divide(2,1);; ps->NewPage();; c1->cd(1);; hpx->Draw();; c1->cd(2);; hprof->Draw();. // picture 2; c1->Update();; ps->NewPage();; c1->cd(1);; hpxpy->Draw();; c1->cd(2);; ntuple->Draw(""px"");; c1->Update();; ps->Close();. // invoke PostScript viewer; gSystem->Exec(""gs file.ps"");; }; The next one does the same:; {; TFile *f1 = new TFile(""hsimple.root"");; TCanvas *c1 = new TCanvas(""c1"");; c1->Divide(2,1);. // picture 1; c1->cd(1);; hpx->Draw();; c1->cd(2);; hprof->Draw();; c1->Print(""test2.ps("", ""Landscape"");. // picture 2; c1->cd(1);; hpxpy->Draw();; c1->cd(2);; ntuple->Draw(""px"");; c1->Print(""test2.ps)"");; gSystem->Exec(""gs file.ps""); // invoke PostScript viewer; }; 9.10.3 The Color Models; TPostScript (and TPDF) support t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:378863,clear,clear,378863,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['clear'],['clear']
Usability,". 0. Setting up ROOT | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » ROOT 6 Analysis Workshop 0. Setting up ROOT. Downloading; If you don't have ROOT yet, download it! We have binaries but you can also build it your",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/0-setting-root.html:136,Guid,Guides,136,d/0-setting-root.html,https://root.cern,https://root.cern/d/0-setting-root.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". 1. Extracting an object from a TFile | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » ROOT 6 Analysis Workshop 1. Extracting an object from a TFile. File can be local on your disk or remote accessible for instance ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/1-extracting-object-tfile.html:154,Guid,Guides,154,d/1-extracting-object-tfile.html,https://root.cern,https://root.cern/d/1-extracting-object-tfile.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". 10. Go Parallel! | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » ROOT 6 Analysis Workshop 10. Go Parallel!. Why you care; Number crunching takes time. If you look at top (open a terminal, type top) in Linux or you",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/10-go-parallel.html:134,Guid,Guides,134,d/10-go-parallel.html,https://root.cern,https://root.cern/d/10-go-parallel.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". 11. Done! | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » ROOT 6 Analysis Workshop 11. Done!. Congratulations for finishing the tutorials! Here are a few relevant pointers on where to go from here:; The forum; Bug",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/11-done.html:127,Guid,Guides,127,d/11-done.html,https://root.cern,https://root.cern/d/11-done.html,3,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". 2. Running code in ROOT | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » ROOT 6 Analysis Workshop 2. Running code in ROOT. Interpreting; ROOT executes your C++ code. There are two ways: loading it into the interpre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/2-running-code-root.html:141,Guid,Guides,141,d/2-running-code-root.html,https://root.cern,https://root.cern/d/2-running-code-root.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". 3. Examining a TTree's data | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » ROOT 6 Analysis Workshop 3. Examining a TTree's data. The TTree; A TTree is a collection of similar data. It is the collection used by ba",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/3-examining-ttrees-data.html:145,Guid,Guides,145,d/3-examining-ttrees-data.html,https://root.cern,https://root.cern/d/3-examining-ttrees-data.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". 4. Histogramming | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » ROOT 6 Analysis Workshop 4. Histogramming. What is a histogram?; Our TTree contains for instance the energy of all electrons. What we usually care a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/4-histogramming.html:134,Guid,Guides,134,d/4-histogramming.html,https://root.cern,https://root.cern/d/4-histogramming.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". 5. Fitting | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » ROOT 6 Analysis Workshop 5. Fitting. Distributions; Some analyses want to check theory predictions that exist as a function definition. Others want to use",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/5-fitting.html:128,Guid,Guides,128,d/5-fitting.html,https://root.cern,https://root.cern/d/5-fitting.html,3,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". 6. Multivariate Analysis | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » ROOT 6 Analysis Workshop 6. Multivariate Analysis. Multiple Variables; The muon trigger should fire more likely for higher muon momenta - le",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/6-multivariate-analysis.html:142,Guid,Guides,142,d/6-multivariate-analysis.html,https://root.cern,https://root.cern/d/6-multivariate-analysis.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". 7. Using the TTreeReader | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » ROOT 6 Analysis Workshop 7. Using the TTreeReader. Accessing Value from a TTree; Up to now we have used TTree's ability to parse TTree::Draw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/7-using-ttreereader.html:142,Guid,Guides,142,d/7-using-ttreereader.html,https://root.cern,https://root.cern/d/7-using-ttreereader.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". 77 (1993) 219-228). It takes into account both data and Monte Carlo statistical uncertainties through a likelihood fit using Poisson statistics. However, the template (MC) predictions are also varied within statistics, leading to additional contributions to the overall likelihood. This leads to many more fit parameters (one per bin per template), but the minimization with respect to these additional parameters is done analytically rather than introducing them as formal fit parameters. Some special care needs to be taken in the case of bins with zero content.; TMultiDimFit implements multi-dimensional function parametrization for multi-dimensional data by fitting them to multi-dimensional data using polynomial or Chebyshev or Legendre polynomial; TSpectrum contains advanced spectra processing functions for 1- and 2-dimensional background estimation, smoothing, deconvolution, peak search and fitting, and orthogonal transformations.; RooFit is a complete toolkit for fitting and data analysis modeling (see the RooFit User Guide at ftp://root.cern.ch/root/doc/RooFit_Users_Manual_2.07-29.pdf); TSplot to disentangle signal from background via an extended maximum likelihood fit and with a tool to access the quality and validity of the fit producing distributions for the control variables. (see M. Pivk and F.R. Le Diberder, Nucl. Inst. Meth.A 555, 356-369, 2005).; 13.14.3 Multi-variate Analysis Classes; TMultiLayerPerceptron is a Neural Network class (see for more details the chapter “Neural Networks”).; TPrincipal provides the Principal Component Analysis.; TRobustEstimator is a robust method for minimum covariance determinant estimator (MCD).; TMVA is a package for multivariate data analysis (see https://github.com/root-project/root/blob/master/documentation/tmva/UsersGuide/TMVAUsersGuide.pdf the User’s Guide).; 14 Linear Algebra in ROOT; The linear algebra package is supposed to give a complete environment in ROOT to perform calculations like equation solving and eigenva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:767250,Guid,Guide,767250,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['Guid'],['Guide']
Usability,". 8. Efficiency Calculation | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » ROOT 6 Analysis Workshop 8. Efficiency Calculation. Efficiency; Basically all analyses involve selections on parameters - as an example we ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/8-efficiency-calculation.html:143,Guid,Guides,143,d/8-efficiency-calculation.html,https://root.cern,https://root.cern/d/8-efficiency-calculation.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". 9. Fitting By Coding | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » ROOT 6 Analysis Workshop 9. Fitting By Coding. TF1; In ROOT you can fit histograms (or TEfficiency objects) using formulas that you provide, and",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/9-fitting-coding.html:138,Guid,Guides,138,d/9-fitting-coding.html,https://root.cern,https://root.cern/d/9-fitting-coding.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation » Courses » Introductory Tutorials Accessing a TTree With a TSelector. What is a Selector?; To benefit from many ROOT features (e.g. PROOF and PROOF-lite) you should use a class deriving from the TSelector to analyze a TTree. The selector's code will be used by calling TTree::Process().; We provide a TSelector derived class in a simple source file. So please download the following source file and save it where you can find it: EventSelector.C. This is a skeleton of our selector.; N.B. If you are using ROOT via ssh, you have to download the file with wget from your remote directory. E.g.:; wget http://root-mirror.github.io/training/intro/EventSelector.C; Preparation; Now quit and restart ROOT (to make sure everybody starts from the same point). Then open the file again:; root[0] TFile::Open(""http://root.cern/files/introtutorials/eventdata.root"");. Processing a Selector on a Tree; To apply this selector on the tree you do not call the selector directly; instead, the selector is passed to the tree which then runs it (see the documentation of TTree::Process()):; root[1] EventTree->Process(""EventSelector.C""). As you can see, nothing happens because our selector is empty. So lets see what we can do with this selector.; Editing the Selector Skeleton; Open the downloaded selector file (EventSelector.C) in ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/accessing-ttree-tselector.html:2216,simpl,simple,2216,d/accessing-ttree-tselector.html,https://root.cern,https://root.cern/d/accessing-ttree-tselector.html,1,['simpl'],['simple']
Usability,". ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome First Steps With ROOT. The ROOT framework provides a number of classes, grouped into several class cathegories. To start using ROOT, you may find useful to browse the following documents:. Processing data with ROOT (to learn about the interactive and batch use of ROOT); Analyzing data with ROOT (about histograms and trees; mathematical and statistical tools); Showing results with ROOT (explaining pads, 2D and 3D graphics, and the GUI editor); Simulation in ROOT (about the virtual Monte Carlo and the geometry packages); ROOT I/O (explaining how to use ROOT files and trees, and how to access data from d/b or other nodes). . Processing data with ROOT ›. Navigate through this book; Processing data with ROOT; Showing results with ROOT; Simulation in ROOT; ROOT I/O. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. © Copyright CERN 2014-18. All rights reserved. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/first-steps-root-1.html:2711,Guid,Guides,2711,d/first-steps-root-1.html,https://root.cern,https://root.cern/d/first-steps-root-1.html,4,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". ; Definition at line 148 of file TROOT.h. ◆ fSpecials. TSeqCollection* TROOT::fSpecials. protected . List of special objects. ; Definition at line 156 of file TROOT.h. ◆ fStreamerInfo. TSeqCollection* TROOT::fStreamerInfo. protected . List of active StreamerInfo classes. ; Definition at line 159 of file TROOT.h. ◆ fStyles. TSeqCollection* TROOT::fStyles. protected . List of styles. ; Definition at line 150 of file TROOT.h. ◆ fTasks. TSeqCollection* TROOT::fTasks. protected . List of tasks. ; Definition at line 152 of file TROOT.h. ◆ fTimer. Int_t TROOT::fTimer. protected . Timer flag. ; Definition at line 123 of file TROOT.h. ◆ fTypes. TCollection* TROOT::fTypes. protected . List of data types definition. ; Definition at line 141 of file TROOT.h. ◆ fUUIDs. TProcessUUID* TROOT::fUUIDs. protected . Pointer to TProcessID managing TUUIDs. ; Definition at line 166 of file TROOT.h. ◆ fVersion. TString TROOT::fVersion. protected . ROOT version (from CMZ VERSQQ) ex 0.05/01. ; Definition at line 113 of file TROOT.h. ◆ fVersionCode. Int_t TROOT::fVersionCode. protected . ROOT version code as used in RVersion.h. ; Definition at line 115 of file TROOT.h. ◆ fVersionDate. Int_t TROOT::fVersionDate. protected . Date of ROOT version (ex 951226) ; Definition at line 116 of file TROOT.h. ◆ fVersionInt. Int_t TROOT::fVersionInt. protected . ROOT version in integer format (501) ; Definition at line 114 of file TROOT.h. ◆ fVersionTime. Int_t TROOT::fVersionTime. protected . Time of ROOT version (ex 1152) ; Definition at line 117 of file TROOT.h. ◆ fWebDisplay. TString TROOT::fWebDisplay. protected . If not empty it defines where web graphics should be rendered (cef, qt5, browser...) ; Definition at line 127 of file TROOT.h. Libraries for TROOT:. [legend]; The documentation for this class was generated from the following files:; core/base/inc/TROOT.h; core/base/src/TROOT.cxx. TROOT. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTROOT.html:88769,Guid,Guide,88769,doc/master/classTROOT.html,https://root.cern,https://root.cern/doc/master/classTROOT.html,1,['Guid'],['Guide']
Usability,. ; Definition at line 199 of file MethodDL.h. ◆ fOutputFunction. DNN::EOutputFunction TMVA::MethodDL::fOutputFunction. private . The output function for making the predictions. ; Definition at line 189 of file MethodDL.h. ◆ fRandomSeed. size_t TMVA::MethodDL::fRandomSeed. private . The random seed used to initialize the weights and shuffling batches (default is zero) ; Definition at line 186 of file MethodDL.h. ◆ fResume. bool TMVA::MethodDL::fResume. private . Definition at line 200 of file MethodDL.h. ◆ fSettings. KeyValueVector_t TMVA::MethodDL::fSettings. private . Map for the training strategy. ; Definition at line 203 of file MethodDL.h. ◆ fTrainingSettings. std::vector<TTrainingSettings> TMVA::MethodDL::fTrainingSettings. private . The vector defining each training strategy. ; Definition at line 204 of file MethodDL.h. ◆ fTrainingStrategyString. TString TMVA::MethodDL::fTrainingStrategyString. private . The string defining the training strategy. ; Definition at line 196 of file MethodDL.h. ◆ fWeightInitialization. DNN::EInitialization TMVA::MethodDL::fWeightInitialization. private . The initialization method. ; Definition at line 188 of file MethodDL.h. ◆ fWeightInitializationString. TString TMVA::MethodDL::fWeightInitializationString. private . The string defining the weight initialization method. ; Definition at line 197 of file MethodDL.h. ◆ fXInput. TensorImpl_t TMVA::MethodDL::fXInput. private . Definition at line 206 of file MethodDL.h. ◆ fXInputBuffer. HostBufferImpl_t TMVA::MethodDL::fXInputBuffer. private . Definition at line 207 of file MethodDL.h. ◆ fYHat. std::unique_ptr<MatrixImpl_t> TMVA::MethodDL::fYHat. private . Definition at line 208 of file MethodDL.h. Libraries for TMVA::MethodDL:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/MethodDL.h; tmva/tmva/src/MethodDL.cxx. TMVAMethodDL. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:35 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodDL.html:56014,Guid,Guide,56014,doc/master/classTMVA_1_1MethodDL.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodDL.html,1,['Guid'],['Guide']
Usability,". ; Definition at line 1993 of file TSVG.cxx. ◆ TextNDC() [2/2]. void TSVG::TextNDC ; (; Double_t ; , . Double_t ; , . const wchar_t * ;  . ). inline . Definition at line 74 of file TSVG.h. ◆ UtoSVG(). Double_t TSVG::UtoSVG ; (; Double_t ; u). Convert U from NDC coordinate to SVG. ; Definition at line 2003 of file TSVG.cxx. ◆ VtoSVG(). Double_t TSVG::VtoSVG ; (; Double_t ; v). Convert V from NDC coordinate to SVG. ; Definition at line 2012 of file TSVG.cxx. ◆ XtoSVG(). Double_t TSVG::XtoSVG ; (; Double_t ; x). Convert X from world coordinate to SVG. ; Definition at line 2021 of file TSVG.cxx. ◆ YtoSVG(). Double_t TSVG::YtoSVG ; (; Double_t ; y). Convert Y from world coordinate to SVG. ; Definition at line 2030 of file TSVG.cxx. Member Data Documentation. ◆ fBoundingBox. Bool_t TSVG::fBoundingBox. protected . True when the SVG header is printed. ; Definition at line 26 of file TSVG.h. ◆ fgLineCap. Int_t TSVG::fgLineCap = 0. staticprotected . Appearance of line caps. ; Definition at line 31 of file TSVG.h. ◆ fgLineJoin. Int_t TSVG::fgLineJoin = 0. staticprotected . Appearance of joining lines. ; Definition at line 30 of file TSVG.h. ◆ fRange. Bool_t TSVG::fRange. protected . True when a range has been defined. ; Definition at line 27 of file TSVG.h. ◆ fType. Int_t TSVG::fType. protected . Workstation type used to know if the SVG is open. ; Definition at line 25 of file TSVG.h. ◆ fXsize. Float_t TSVG::fXsize. protected . Page size along X. ; Definition at line 23 of file TSVG.h. ◆ fYsize. Float_t TSVG::fYsize. protected . Page size along Y. ; Definition at line 24 of file TSVG.h. ◆ fYsizeSVG. Double_t TSVG::fYsizeSVG. protected . Page's Y size in SVG units. ; Definition at line 28 of file TSVG.h. Libraries for TSVG:. [legend]; The documentation for this class was generated from the following files:; graf2d/postscript/inc/TSVG.h; graf2d/postscript/src/TSVG.cxx. TSVG. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:36 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSVG.html:38165,Guid,Guide,38165,doc/master/classTSVG.html,https://root.cern,https://root.cern/doc/master/classTSVG.html,1,['Guid'],['Guide']
Usability,. ; Definition at line 40 of file TPie.h. ◆ fHeight. Double_t TPie::fHeight. protected . Height of the slice in pixel. ; Definition at line 45 of file TPie.h. ◆ fIs3D. Bool_t TPie::fIs3D. protected . ! true if the pseudo-3d is enabled ; Definition at line 44 of file TPie.h. ◆ fLabelFormat. TString TPie::fLabelFormat. protected . Format format of the slices' label. ; Definition at line 38 of file TPie.h. ◆ fLabelsOffset. Float_t TPie::fLabelsOffset. protected . LabelsOffset offset of label. ; Definition at line 37 of file TPie.h. ◆ fLegend. TLegend* TPie::fLegend {nullptr}. private . !Legend for this piechart ; Definition at line 30 of file TPie.h. ◆ fNvals. Int_t TPie::fNvals. protected . Number of elements. ; Definition at line 42 of file TPie.h. ◆ fPercentFormat. TString TPie::fPercentFormat. protected . Pfrom numeric format for the percent of a slice. ; Definition at line 41 of file TPie.h. ◆ fPieSlices. TPieSlice** TPie::fPieSlices {nullptr}. protected . [fNvals] Slice array of this pie-chart ; Definition at line 43 of file TPie.h. ◆ fRadius. Double_t TPie::fRadius. protected . Radius Pie radius. ; Definition at line 35 of file TPie.h. ◆ fSlices. Float_t* TPie::fSlices {nullptr}. private . !Subdivisions of the slices ; Definition at line 29 of file TPie.h. ◆ fSum. Float_t TPie::fSum. private . !Sum for the slice values ; Definition at line 28 of file TPie.h. ◆ fValueFormat. TString TPie::fValueFormat. protected . Vform numeric format for the value. ; Definition at line 39 of file TPie.h. ◆ fX. Double_t TPie::fX. protected . X coordinate of the pie centre. ; Definition at line 33 of file TPie.h. ◆ fY. Double_t TPie::fY. protected . Y coordinate of the pie centre. ; Definition at line 34 of file TPie.h. Libraries for TPie:. [legend]; The documentation for this class was generated from the following files:; graf2d/graf/inc/TPie.h; graf2d/graf/src/TPie.cxx. TPie. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:09 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPie.html:39677,Guid,Guide,39677,doc/master/classTPie.html,https://root.cern,https://root.cern/doc/master/classTPie.html,1,['Guid'],['Guide']
Usability,. ; Definition at line 85 of file SimpleInterval.cxx. Member Function Documentation. ◆ CheckParameters(). bool SimpleInterval::CheckParameters ; (; const RooArgSet & ; parameterPoint); const. overridevirtual . check if parameters are correct (i.e. they are the POI of this interval) ; Implements RooStats::ConfInterval.; Definition at line 122 of file SimpleInterval.cxx. ◆ Class(). static TClass * RooStats::SimpleInterval::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooStats::SimpleInterval::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooStats::SimpleInterval::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 60 of file SimpleInterval.h. ◆ ConfidenceLevel(). double RooStats::SimpleInterval::ConfidenceLevel ; (; ); const. inlineoverridevirtual . return the confidence interval ; Implements RooStats::ConfInterval.; Definition at line 43 of file SimpleInterval.h. ◆ DeclFileName(). static const char * RooStats::SimpleInterval::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 60 of file SimpleInterval.h. ◆ GetParameters(). RooArgSet * SimpleInterval::GetParameters ; (; ); const. overridevirtual . return a cloned list with the parameter of interest ; return cloned list of parameters ; Implements RooStats::ConfInterval.; Definition at line 115 of file SimpleInterval.cxx. ◆ IsA(). TClass * RooStats::SimpleInterval::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooStats::ConfInterval.; Definition at line 60 of file SimpleInterval.h. ◆ IsInInterval(). bool SimpleInterval::IsInInterval ; (; const RooArgSet & ; parameterPoint); const. overridevirtual . check if parameter is in the interval ; Method to determine if a parameter point is in the interval. ; Implements RooStats::ConfInterval.; Definition at line,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SimpleInterval.html:14984,Simpl,SimpleInterval,14984,doc/master/classRooStats_1_1SimpleInterval.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SimpleInterval.html,1,['Simpl'],['SimpleInterval']
Usability,". ; Definition at line 94 of file THttpWSHandler.h. ◆ Streamer(). void THttpWSHandler::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void THttpWSHandler::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 114 of file THttpWSHandler.h. ◆ VerifyDefaultPageContent(). virtual void THttpWSHandler::VerifyDefaultPageContent ; (; std::shared_ptr< THttpCallArg > & ; arg). inlineprotectedvirtual . Method called when default page content is prepared for use By default no-cache header is provided. ; Reimplemented in ROOT::RWebWindowWSHandler.; Definition at line 60 of file THttpWSHandler.h. Friends And Related Symbol Documentation. ◆ THttpServer. friend class THttpServer. friend . Definition at line 27 of file THttpWSHandler.h. Member Data Documentation. ◆ fDisabled. Bool_t THttpWSHandler::fDisabled {kFALSE}. private . ! when true, all further operations will be ignored ; Definition at line 31 of file THttpWSHandler.h. ◆ fEngines. std::vector<std::shared_ptr<THttpWSEngine> > THttpWSHandler::fEngines. private . ! list of active WS engines (connections) ; Definition at line 34 of file THttpWSHandler.h. ◆ fMutex. std::mutex THttpWSHandler::fMutex. private . ! protect list of engines ; Definition at line 33 of file THttpWSHandler.h. ◆ fSendCnt. Int_t THttpWSHandler::fSendCnt {0}. private . ! counter for completed send operations ; Definition at line 32 of file THttpWSHandler.h. ◆ fSyncMode. Bool_t THttpWSHandler::fSyncMode {kTRUE}. private . ! is handler runs in synchronous mode (default, no multi-threading) ; Definition at line 30 of file THttpWSHandler.h. Libraries for THttpWSHandler:. [legend]; The documentation for this class was generated from the following files:; net/http/inc/THttpWSHandler.h; net/http/src/THttpWSHandler.cxx. THttpWSHandler. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:51 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHttpWSHandler.html:26378,Guid,Guide,26378,doc/master/classTHttpWSHandler.html,https://root.cern,https://root.cern/doc/master/classTHttpWSHandler.html,1,['Guid'],['Guide']
Usability,". ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome Support. Top level support is what makes ROOT a success. We do our utmost to solve any issues as soon as possible. To make this task as efficient as possible for us follow these few simple rules. In case you think you have found a bug, please first search the forum and roottalk digests to see if the issue has already been discussed. If not then please file a bug report. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. © Copyright CERN 2014-18. All rights reserved. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/support.html:2024,simpl,simple,2024,d/support.html,https://root.cern,https://root.cern/d/support.html,3,"['Guid', 'guid', 'simpl']","['Guides', 'guidelines', 'simple']"
Usability,". ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; TProofProgressLog Class ReferenceGUI » Session Viewer. ; Dialog used to display Proof session logs from the Proof progress dialog. ; It uses TProofMgr::GetSessionLogs() mechanism internally ; Definition at line 31 of file TProofProgressLog.h. Public Member Functions;  TProofProgressLog (const char *url=nullptr, Int_t sessionidx=0, Int_t w=700, Int_t h=600);  Create a window frame for log messages. ;  ;  TProofProgressLog (TProofProgressDialog *d, Int_t w=700, Int_t h=600);  Create a window frame for log messages. ;  ;  ~TProofProgressLog () override;  Destructor. ;  ; void AddBuffer (const char *buffer);  Add text to the window. ;  ; void BuildLogList (Bool_t create=kFALSE);  Build the list of workers. ;  ; void Clear (Option_t *=nullptr) override;  Clear log window. ;  ; void CloseWindow () override;  Handle close button or when closed via window manager action. ;  ; void DoLog (Bool_t grep=kFALSE);  Display logs. ;  ; TClass * IsA () const override;  ; void LoadBuffer (const char *buffer);  Load a text buffer in the window. ;  ; void LoadFile (const char *file);  Load a file in the window. ;  ; void LogMessage (const char *msg, Bool_t all);  Load/append a log msg in the log frame, if open. ;  ; void NoLineEntry ();  Enable/disable the line number entry. ;  ; void Popup ();  Show log window. ;  ; void Rebuild ();  Rebuild the log info for a new entered session. ;  ; void SaveToFile ();  Save the logs to a file Only the name of the file is taken, no expansion. ;  ; void Select (Int_t id, Bool_t all=kTRUE);  actions of select all/clear all button ;  ; void SetGrepView ();  Sets the view of grep filters according to the value of checkboxes. ;  ; void SetUrl (const char *url);  ; void Streamer (TBuffer &) override;  S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofProgressLog.html:1019,Clear,Clear,1019,doc/master/classTProofProgressLog.html,https://root.cern,https://root.cern/doc/master/classTProofProgressLog.html,2,['Clear'],['Clear']
Usability,". ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TView3D Class ReferenceGraphics » 3D Graphics » Basic 3D graphics. ; The 3D view class. ; This package was originally written by Evgueni Tcherniaev from IHEP/Protvino.; The original Fortran implementation was adapted to HIGZ/PAW by Olivier Couet and Evgueni Tcherniaev.; This View class is a subset of the original system. It has been converted to a C++ class by Rene Brun.; TView3D creates a 3-D view in the current pad. In this 3D view Lego and Surface plots can be drawn and also 3D polyline and markers. Most of the time a TView3D is created automatically when a 3D object needs to be painted in a pad (for instance a Lego or a Surface plot).; In some case a TView3D should be explicitly. For instance to paint a 3D simple scene composed of simple objects like polylines and polymarkers. The following macro gives an example:; {; auto cV3D = new TCanvas(""cV3D"",""PolyLine3D & PolyMarker3D Window"",200,10,500,500);; ; // Creating a view; TView3D *view = (TView3D*) TView::CreateView(1);; view->SetRange(5,5,5,25,25,25);; ; // Create a first PolyLine3D; TPolyLine3D *pl3d1 = new TPolyLine3D(6);; pl3d1->SetPoint(0, 10, 20, 10);; pl3d1->SetPoint(1, 15, 15, 15);; pl3d1->SetPoint(2, 20, 20, 20);; pl3d1->SetPoint(3, 20, 10, 20);; pl3d1->SetPoint(4, 10, 10, 20);; pl3d1->SetPoint(5, 10, 10, 10);; ; // Create a first PolyMarker3D; TPolyMarker3D *pm3d1 = new TPolyMarker3D(9);; pm3d1->SetPoint( 0, 10, 10, 10);; pm3d1->SetPoint( 1, 20, 20, 20);; pm3d1->SetPoint( 2, 10, 20, 20);; pm3d1->SetPoint( 3, 10, 10, 20);; pm3d1->SetPoint( 4, 20, 20, 10);; pm3d1->SetPoint( 5, 20, 10, 10);; pm3d1->SetPoint( 6, 20, 10, 20);; pm3d1->SetPoint( 7, 10, 20, 10);; pm3d1->SetPoint( 8, 15, 15, 15);; pm3d1->SetMarkerSize(2);; pm3d1->SetMarkerColor(4);; pm3d1->S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTView3D.html:1010,simpl,simple,1010,doc/master/classTView3D.html,https://root.cern,https://root.cern/doc/master/classTView3D.html,2,['simpl'],['simple']
Usability,". ; Reimplemented from RooAbsReal.; Definition at line 40 of file RooConstraintSum.h. ◆ setData() [2/2]. bool RooConstraintSum::setData ; (; RooAbsData const & ; data, . bool ; cloneData = true . ). Replace the variables in this RooConstraintSum with the global observables in the dataset if they match by name. ; This function will do nothing if this RooConstraintSum is configured to not use the global observables stored in datasets. ; Definition at line 117 of file RooConstraintSum.cxx. ◆ Streamer(). void RooConstraintSum::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsReal. ◆ StreamerNVirtual(). void RooConstraintSum::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 57 of file RooConstraintSum.h. ◆ translate(). void RooConstraintSum::translate ; (; RooFit::Detail::CodeSquashContext & ; ctx); const. overridevirtual . This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ; The function adds the code represented by each class as an std::string (that is later concatenated with code strings from translate calls) to form the C++ code that AD tools can understand. Any class that wants to support AD, has to implement this function.; Parameters. [in]ctxAn object to manage auxiliary information for code-squashing. Also takes the code string that this class outputs into the squashed code through the 'addToCodeBody' function. . Reimplemented from RooAbsArg.; Definition at line 82 of file RooConstraintSum.cxx. Member Data Documentation. ◆ _paramSet. RooArgSet RooConstraintSum::_paramSet. protected . Set of parameters to which constraints apply. ; Definition at line 52 of file RooConstraintSum.h. ◆ _set1. RooListProxy RooConstraintSum::_set1. protected . Set of constraint terms. ; Definition at line 51 of file RooConstraintSum.h. ◆ _takeGlobalObservablesFromData. const bool RooConstraintSum::_takeGlob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConstraintSum.html:64766,simpl,simple,64766,doc/master/classRooConstraintSum.html,https://root.cern,https://root.cern/doc/master/classRooConstraintSum.html,1,['simpl'],['simple']
Usability,". ; Reimplemented from TF2.; Definition at line 701 of file TF3.cxx. ◆ Streamer(). void TF3::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TF3. ; Reimplemented from TF2.; Definition at line 715 of file TF3.cxx. ◆ StreamerNVirtual(). void TF3::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 136 of file TF3.h. ◆ Variance3X(). virtual Double_t TF3::Variance3X ; (; Double_t ; ax, . Double_t ; bx, . Double_t ; ay, . Double_t ; by, . Double_t ; az, . Double_t ; bz, . Double_t ; epsilon = 0.000001 . ). inlinevirtual . Definition at line 124 of file TF3.h. ◆ Variance3Y(). virtual Double_t TF3::Variance3Y ; (; Double_t ; ax, . Double_t ; bx, . Double_t ; ay, . Double_t ; by, . Double_t ; az, . Double_t ; bz, . Double_t ; epsilon = 0.000001 . ). inlinevirtual . Definition at line 125 of file TF3.h. ◆ Variance3Z(). virtual Double_t TF3::Variance3Z ; (; Double_t ; ax, . Double_t ; bx, . Double_t ; ay, . Double_t ; by, . Double_t ; az, . Double_t ; bz, . Double_t ; epsilon = 0.000001 . ). inlinevirtual . Definition at line 126 of file TF3.h. Member Data Documentation. ◆ fClipBox. Double_t TF3::fClipBox[3]. protected . ! Coordinates of clipbox ; Definition at line 35 of file TF3.h. ◆ fClipBoxOn. Bool_t TF3::fClipBoxOn {kFALSE}. protected . ! Is clip box on ; Definition at line 34 of file TF3.h. ◆ fNpz. Int_t TF3::fNpz. protected . Number of points along z used for the graphical representation. ; Definition at line 33 of file TF3.h. ◆ fZmax. Double_t TF3::fZmax. protected . Upper bound for the range in z. ; Definition at line 32 of file TF3.h. ◆ fZmin. Double_t TF3::fZmin. protected . Lower bound for the range in z. ; Definition at line 31 of file TF3.h. Libraries for TF3:. [legend]; The documentation for this class was generated from the following files:; hist/hist/inc/TF3.h; hist/hist/src/TF3.cxx. TF3. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:49 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF3.html:72857,Guid,Guide,72857,doc/master/classTF3.html,https://root.cern,https://root.cern/doc/master/classTF3.html,1,['Guid'],['Guide']
Usability,". ; Reimplemented from TTUBE.; Definition at line 125 of file TTUBS.cxx. ◆ GetBuffer3D(). const TBuffer3D & TTUBS::GetBuffer3D ; (; Int_t ; reqSections); const. overridevirtual . Get buffer 3d. ; Reimplemented from TTUBE.; Definition at line 181 of file TTUBS.cxx. ◆ GetPhi1(). virtual Float_t TTUBS::GetPhi1 ; (; ); const. inlinevirtual . Definition at line 47 of file TTUBS.h. ◆ GetPhi2(). virtual Float_t TTUBS::GetPhi2 ; (; ); const. inlinevirtual . Definition at line 48 of file TTUBS.h. ◆ IsA(). TClass * TTUBS::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TTUBE.; Definition at line 51 of file TTUBS.h. ◆ MakeTableOfCoSin(). void TTUBS::MakeTableOfCoSin ; (; ); const. overrideprotectedvirtual . Make table of sine and cosine. ; Reimplemented from TTUBE.; Definition at line 79 of file TTUBS.cxx. ◆ SetPoints(). void TTUBS::SetPoints ; (; Double_t * ; points); const. overrideprotectedvirtual . Create TUBS points. ; Reimplemented from TTUBE.; Definition at line 135 of file TTUBS.cxx. ◆ Sizeof3D(). void TTUBS::Sizeof3D ; (; ); const. overridevirtual . Return total X3D needed by TNode::ls (when called with option ""x"") ; Reimplemented from TTUBE.; Definition at line 169 of file TTUBS.cxx. ◆ Streamer(). void TTUBS::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TTUBE. ; Reimplemented from TTUBE. ◆ StreamerNVirtual(). void TTUBS::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 51 of file TTUBS.h. Member Data Documentation. ◆ fPhi1. Float_t TTUBS::fPhi1. protected . Definition at line 31 of file TTUBS.h. ◆ fPhi2. Float_t TTUBS::fPhi2. protected . Definition at line 32 of file TTUBS.h. Libraries for TTUBS:. [legend]; The documentation for this class was generated from the following files:; graf3d/g3d/inc/TTUBS.h; graf3d/g3d/src/TTUBS.cxx. TTUBS. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:41 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTUBS.html:22784,Guid,Guide,22784,doc/master/classTTUBS.html,https://root.cern,https://root.cern/doc/master/classTTUBS.html,1,['Guid'],['Guide']
Usability,". ; [in]xhiEnd of range. . ReturnsThe caller owns the returned std::list. ; Reimplemented from RooAbsReal.; Definition at line 7195 of file xRooNode.cxx. ◆ clone(). TObject * PdfWrapper::clone ; (; const char * ; newname); const. inlineoverridevirtual . Implements RooAbsArg.; Definition at line 7193 of file xRooNode.cxx. ◆ evaluate(). double PdfWrapper::evaluate ; (; ); const. inlineoverridevirtual . Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 7200 of file xRooNode.cxx. ◆ getSimplePropagatedError(). double PdfWrapper::getSimplePropagatedError ; (; const RooFitResult & ; fr, . const RooArgSet & ; nset_in . ); const. inline . Definition at line 7213 of file xRooNode.cxx. ◆ isBinnedDistribution(). bool PdfWrapper::isBinnedDistribution ; (; const RooArgSet & ; ); const. inlineoverridevirtual . Tests if the distribution is binned. Unless overridden by derived classes, this always returns false. ; Reimplemented from RooAbsReal.; Definition at line 7194 of file xRooNode.cxx. ◆ selfNormalized(). bool PdfWrapper::selfNormalized ; (; ); const. inlineoverridevirtual . Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ; Always returns false, unless a PDF overrides this function. ; Reimplemented from RooAbsPdf.; Definition at line 7207 of file xRooNode.cxx. Member Data Documentation. ◆ fCoef. RooRealProxy PdfWrapper::fCoef. private . Definition at line 7425 of file xRooNode.cxx. ◆ fExpectedEventsMode. bool PdfWrapper::fExpectedEventsMode = false. private . Definition at line 7427 of file xRooNode.cxx. ◆ fExpPdf. RooRealProxy PdfWrapper::fExpPdf. private . Definition at line 7426 of file xRooNode.cxx. ◆ fFunc. RooRealProxy PdfWrapper::fFunc. private . Definition at line 7424 of file xRooNode.cxx. roofit/xroofit/src/xRooNode.cxx. PdfWrapper. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:37 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classPdfWrapper.html:75921,Guid,Guide,75921,doc/master/classPdfWrapper.html,https://root.cern,https://root.cern/doc/master/classPdfWrapper.html,1,['Guid'],['Guide']
Usability,". ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TStopTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStopTimer(). TStopTimer::TStopTimer ; (; TProofPlayer * ; p, . Bool_t ; abort, . Int_t ; to . ). Constructor for the timer to stop/abort processing. ; The 'timeout' is in seconds. Make sure that 'to' make sense, i.e. not larger than 10 days; the minimum value is 10 ms (0 does not seem to start the timer ...). ; Definition at line 186 of file TProofPlayer.cxx. Member Function Documentation. ◆ Notify(). Bool_t TStopTimer::Notify ; (; ). overridevirtual . Handle the signal coming from the expiration of the timer associated with an abort or stop request. ; We raise an exception which will be processed in the event loop. ; Implements TSysEvtHandler.; Definition at line 205 of file TProofPlayer.cxx. Member Data Documentation. ◆ fAbort. Bool_t TStopTimer::fAbort. private . Definition at line 171 of file TProofPlayer.cxx. ◆ fPlayer. TProofPlayer* TStopTimer::fPlayer. private . Definition at line 172 of file TProofPlayer.cxx. proof/proofplayer/src/TProofPlayer.cxx. TStopTimer. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStopTimer.html:18421,Guid,Guide,18421,doc/master/classTStopTimer.html,https://root.cern,https://root.cern/doc/master/classTStopTimer.html,1,['Guid'],['Guide']
Usability,". ;  ; virtual void Popup (Int_t x, Int_t y, TObject *obj, TVirtualPad *c=nullptr, TVirtualPad *p=nullptr);  Popup context menu at given location in canvas c and pad p for selected object. ;  ; virtual void SetBrowser (TBrowser *b);  ; virtual void SetCalledObject (TObject *o);  ; virtual void SetCanvas (TVirtualPad *c);  ; virtual void SetMethod (TFunction *m);  ; void SetNameTitle (const char *name, const char *title) override;  Set all the TNamed parameters (name and title). ;  ; virtual void SetObject (TObject *o);  ; virtual void SetPad (TVirtualPad *p);  ; virtual void SetSelectedMenuItem (TClassMenuItem *mi);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveContextMenu.html:4052,Clear,Clear,4052,doc/master/classTEveContextMenu.html,https://root.cern,https://root.cern/doc/master/classTEveContextMenu.html,1,['Clear'],['Clear']
Usability,". ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TEveProjectable;  TEveProjectable ();  Constructor. ;  ; virtual ~TEveProjectable ();  Destructor. ;  ; virtual void AddProjected (TEveProjected *p);  ; virtual void AddProjectedsToSet (std::set< TEveElement * > &set);  Add the projected elements to the set, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (TEveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; virtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TEveWindowSlot * CreateDefaultWindowSlot ();  Create a default window slot. ;  ; static TEveWindowSlot * CreateWindowInTab (TGTab *tab, TEveWindow *eve_parent=nullptr);  Create a new tab in a given ta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveWindow.html:27994,Clear,ClearProjectedList,27994,doc/master/classTEveWindow.html,https://root.cern,https://root.cern/doc/master/classTEveWindow.html,1,['Clear'],['ClearProjectedList']
Usability,". ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TEveProjectable;  TEveProjectable ();  Constructor. ;  ; virtual ~TEveProjectable ();  Destructor. ;  ; virtual void AddProjected (TEveProjected *p);  ; virtual void AddProjectedsToSet (std::set< TEveElement * > &set);  Add the projected elements to the set, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (TEveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; virtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveElementList.html:26243,Clear,ClearProjectedList,26243,doc/master/classTEveElementList.html,https://root.cern,https://root.cern/doc/master/classTEveElementList.html,1,['Clear'],['ClearProjectedList']
Usability,". ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TEveProjectable;  TEveProjectable ();  Constructor. ;  ; virtual ~TEveProjectable ();  Destructor. ;  ; virtual void AddProjected (TEveProjected *p);  ; virtual void AddProjectedsToSet (std::set< TEveElement * > &set);  Add the projected elements to the set, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (TEveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; virtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElementList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Ver",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompound.html:26665,Clear,ClearProjectedList,26665,doc/master/classTEveCompound.html,https://root.cern,https://root.cern/doc/master/classTEveCompound.html,6,['Clear'],['ClearProjectedList']
Usability,". ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TEveProjectable;  TEveProjectable ();  Constructor. ;  ; virtual ~TEveProjectable ();  Destructor. ;  ; virtual void AddProjected (TEveProjected *p);  ; virtual void AddProjectedsToSet (std::set< TEveElement * > &set);  Add the projected elements to the set, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (TEveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; virtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveWindowFrame.html:28289,Clear,ClearProjectedList,28289,doc/master/classTEveWindowFrame.html,https://root.cern,https://root.cern/doc/master/classTEveWindowFrame.html,4,['Clear'],['ClearProjectedList']
Usability,". ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TEveProjectable;  TEveProjectable ();  Constructor. ;  ; virtual ~TEveProjectable ();  Destructor. ;  ; virtual void AddProjected (TEveProjected *p);  ; virtual void AddProjectedsToSet (std::set< TEveElement * > &set);  Add the projected elements to the set, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (TEveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; virtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveWindowFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Ver",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveViewer.html:29910,Clear,ClearProjectedList,29910,doc/master/classTEveViewer.html,https://root.cern,https://root.cern/doc/master/classTEveViewer.html,1,['Clear'],['ClearProjectedList']
Usability,". ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TEveProjectable;  TEveProjectable ();  Constructor. ;  ; virtual ~TEveProjectable ();  Destructor. ;  ; virtual void AddProjected (TEveProjected *p);  ; virtual void AddProjectedsToSet (std::set< TEveElement * > &set);  Add the projected elements to the set, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (TEveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; virtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * Asser",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveBox.html:27896,Clear,ClearProjectedList,27896,doc/master/classTEveBox.html,https://root.cern,https://root.cern/doc/master/classTEveBox.html,9,['Clear'],['ClearProjectedList']
Usability,". ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TEveProjectable;  TEveProjectable ();  Constructor. ;  ; virtual ~TEveProjectable ();  Destructor. ;  ; virtual void AddProjected (TEveProjected *p);  ; virtual void AddProjectedsToSet (std::set< TEveElement * > &set);  Add the projected elements to the set, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (TEveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; virtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveProjectionManager.html:28342,Clear,ClearProjectedList,28342,doc/master/classTEveProjectionManager.html,https://root.cern,https://root.cern/doc/master/classTEveProjectionManager.html,1,['Clear'],['ClearProjectedList']
Usability,". ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TEveProjectable;  TEveProjectable ();  Constructor. ;  ; virtual ~TEveProjectable ();  Destructor. ;  ; virtual void AddProjected (TEveProjected *p);  ; virtual void AddProjectedsToSet (std::set< TEveElement * > &set);  Add the projected elements to the set, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (TEveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; virtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttMarker;  TAttMarker ();  TAttMarker default constructor. ;  ;  TAttMarker (Color_t color, Style_t style, Size_t msize);  TAttMarker normal constructor. ;  ; virtual ~TAttMarker ();  TAttMarker destructor. ;  ; void Copy (TAttMarker &attmarker) const;  Copy this marker attributes to a new TAttMarker. ;  ; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackList.html:29367,Clear,ClearProjectedList,29367,doc/master/classTEveTrackList.html,https://root.cern,https://root.cern/doc/master/classTEveTrackList.html,2,['Clear'],['ClearProjectedList']
Usability,". ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TEveProjectable;  TEveProjectable ();  Constructor. ;  ; virtual ~TEveProjectable ();  Destructor. ;  ; virtual void AddProjected (TEveProjected *p);  ; virtual void AddProjectedsToSet (std::set< TEveElement * > &set);  Add the projected elements to the set, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (TEveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; virtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveProjected;  TEveProjected ();  Constructor. ;  ; virtual ~TEveProjected ();  Destructor. ;  ; Float_t GetDepth () const;  ; TEveProjectionManager * GetManager () const;  ; TEveProjectable * GetProjectable () const;  ; virtual void SetDepth (Float_t d);  Set depth coordinate for the element. ;  ; virtual void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompoundProjected.html:27057,Clear,ClearProjectedList,27057,doc/master/classTEveCompoundProjected.html,https://root.cern,https://root.cern/doc/master/classTEveCompoundProjected.html,2,['Clear'],['ClearProjectedList']
Usability,". ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TEveProjectable;  TEveProjectable ();  Constructor. ;  ; virtual ~TEveProjectable ();  Destructor. ;  ; virtual void AddProjected (TEveProjected *p);  ; virtual void AddProjectedsToSet (std::set< TEveElement * > &set);  Add the projected elements to the set, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (TEveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; virtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveRefBackPtr;  TEveRefBackPtr ();  Default constructor. ;  ;  TEveRefBackPtr (const TEveRefBackPtr &);  Copy constructor. ;  ;  ~TEveRefBackPtr () override;  Destructor. Noop, should complain if back-ref list is not empty. ;  ; void DecRefCount ();  ; virtual void DecRefCount (TEveElement *re);  Decrease refere",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackPropagator.html:33181,Clear,ClearProjectedList,33181,doc/master/classTEveTrackPropagator.html,https://root.cern,https://root.cern/doc/master/classTEveTrackPropagator.html,1,['Clear'],['ClearProjectedList']
Usability,". ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TEveProjectable;  TEveProjectable ();  Constructor. ;  ; virtual ~TEveProjectable ();  Destructor. ;  ; virtual void AddProjected (TEveProjected *p);  ; virtual void AddProjectedsToSet (std::set< TEveElement * > &set);  Add the projected elements to the set, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (TEveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; virtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveSelection.html:29542,Clear,ClearProjectedList,29542,doc/master/classTEveSelection.html,https://root.cern,https://root.cern/doc/master/classTEveSelection.html,2,['Clear'],['ClearProjectedList']
Usability,". ;  ; void AddAfter (TObjLink *after, TObject *obj) override;  AddAfter is not allowed in this class. ;  ; void AddAt (TObject *obj, Int_t idx) override;  AddAt is not allowed in this class. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  AddBefore is not allowed in this class. ;  ; void AddBefore (TObjLink *before, TObject *obj) override;  AddBefore is not allowed in this class. ;  ; void AddFirst (TObject *obj) override;  AddFirst is not allowed in this class. ;  ; void AddFirst (TObject *obj, Option_t *opt) override;  AddFirst is not allowed in this class. ;  ; void AddLast (TObject *obj) override;  AddLast is not allowed in this class. ;  ; void AddLast (TObject *obj, Option_t *opt) override;  AddLast is not allowed in this class. ;  ; TObject * After (const TObject *obj) const override;  After is not allowed in this class. ;  ; TObject * Before (const TObject *obj) const override;  Before is not allowed in this class. ;  ; void Clear (Option_t *option="""") override;  Clear is not allowed in this class. ;  ; void Delete (Option_t *option="""") override;  Delete is not allowed in this class. ;  ; TObject * First () const override;  First is not allowed in this class. ;  ; TObjLink * FirstLink () const override;  FirstLink is not allowed in this class. ;  ; TObject ** GetObjectRef (const TObject *obj) const override;  GetObjectRef is not allowed in this class. ;  ; TObject * Last () const override;  Last is not allowed in this class. ;  ; TObjLink * LastLink () const override;  LastLink is not allowed in this class. ;  ; void RecursiveRemove (TObject *obj) override;  RecursiveRemove is not allowed in this class. ;  ; TObject * Remove (TObject *obj) override;  Remove is not allowed in this class. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove is not allowed in this class. ;  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTViewPubDataMembers.html:13449,Clear,Clear,13449,doc/master/classTViewPubDataMembers.html,https://root.cern,https://root.cern/doc/master/classTViewPubDataMembers.html,4,['Clear'],['Clear']
Usability,". ;  ; void PaintGraphBentErrors (TGraph *theGraph, Option_t *option);  Paint this TGraphBentErrors with its current attributes. ;  ; void PaintGraphErrors (TGraph *theGraph, Option_t *option);  Paint this TGraphErrors with its current attributes. ;  ; void PaintGrapHist (TGraph *theGraph, Int_t npoints, const Double_t *x, const Double_t *y, Option_t *chopt) override;  This is a service method used by THistPainter to paint 1D histograms. ;  ; void PaintGraphMultiErrors (TGraph *theGraph, Option_t *option);  Paint this TGraphMultiErrors with its current attributes. ;  ; void PaintGraphPolar (TGraph *theGraph, Option_t *option);  Paint this TGraphPolar with its current attributes. ;  ; void PaintGraphQQ (TGraph *theGraph, Option_t *option);  Paint this graphQQ. No options for the time being. ;  ; void PaintGraphReverse (TGraph *theGraph, Option_t *option);  Paint theGraph reverting values along X and/or Y axis. a new graph is created. ;  ; void PaintGraphSimple (TGraph *theGraph, Option_t *option);  Paint a simple graph, without errors bars. ;  ; void PaintHelper (TGraph *theGraph, Option_t *option) override;  Paint a any kind of TGraph. ;  ; virtual void PaintHighlightPoint (TGraph *theGraph, Option_t *option);  Paint highlight point as TMarker object (open circle) ;  ; void PaintPolyLineHatches (TGraph *theGraph, Int_t n, const Double_t *x, const Double_t *y);  Paint a polyline with hatches on one side showing an exclusion zone. ;  ; void PaintScatter (TScatter *theScatter, Option_t *option) override;  Paint a scatter plot. ;  ; void PaintStats (TGraph *theGraph, TF1 *fit) override;  Paint the statistics box with the fit info. ;  ; void SetHighlight (TGraph *theGraph) override;  Set highlight (enable/disable) mode for theGraph. ;  ; void Smooth (TGraph *theGraph, Int_t npoints, Double_t *x, Double_t *y, Int_t drawtype);  Smooth a curve given by N points. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphPainter.html:29395,simpl,simple,29395,doc/master/classTGraphPainter.html,https://root.cern,https://root.cern/doc/master/classTGraphPainter.html,1,['simpl'],['simple']
Usability,". ;  ; void Progress (Long64_t total, Long64_t processed) override;  Progress signal. ;  ; void Progress (Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti) override;  Progress signal. ;  ; void Progress (TProofProgressInfo *pi) override;  Progress signal. ;  ; void Progress (TSlave *, Long64_t total, Long64_t processed) override;  ; void Progress (TSlave *, Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti) override;  ; void Progress (TSlave *, TProofProgressInfo *pi) override;  ; void RedirectOutput (Bool_t on=kTRUE);  Control output redirection to TProof::fLogFileW. ;  ; void SetInitTime () override;  Set init time. ;  ; void SetMerging (Bool_t on=kTRUE) override;  Switch on/off merge timer. ;  ; void StopProcess (Bool_t abort, Int_t timeout=-1) override;  Stop process after this event. ;  ; void StoreFeedback (TObject *slave, TList *out) override;  Store feedback results from the specified slave. ;  ; void StoreOutput (TList *out) override;  Store received output list. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TProofPlayer;  TProofPlayer (TProof *proof=0);  Default ctor. ;  ;  ~TProofPlayer () override;  Destructor. ;  ; void AddEventsProcessed (Long64_t ev) override;  ; void AddInput (TObject *inp) override;  Add object to input list. ;  ; void AddQueryResult (TQueryResult *q) override;  Add query result to the list, making sure that there are no duplicates. ;  ; void ClearInput () override;  Clear input list. ;  ; TDrawFeedback * CreateDrawFeedback (TProof *p) override;  Draw feedback creation proxy. ;  ; void DeleteDrawFeedback (TDrawFeedback *f) override;  Delete draw feedback object. ;  ; void FeedBackCanvas (const char *name, Bool_t create);  Create/destroy a named canvas f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPlayerLite.html:4559,feedback,feedback,4559,doc/master/classTProofPlayerLite.html,https://root.cern,https://root.cern/doc/master/classTProofPlayerLite.html,2,['feedback'],['feedback']
Usability,". A linear combination of sigmoids can approximate any; continuous function.; Trained with output = 1 for the signal and 0 for the; background, the approximated function of inputs X is the probability; of signal, knowing X. Learning; methods. The aim of all learning methods is to minimize the total error on; a set of weighted examples. The error is defined as the sum in; quadrature, devided by two, of the error on each individual output; neuron.; In all methods implemented, one needs to compute; the first derivative of that error with respect to the weights.; Exploiting the well-known properties of the derivative, especialy the; derivative of compound functions, one can write:. for a neuton: product of the local derivative with the; weighted sum on the outputs of the derivatives.; for a synapse: product of the input with the local derivative; of the output neuron. This computation is called back-propagation of the errors. A; loop over all examples is called an epoch.; Six learning methods are implemented.; Stochastic minimization: This; is the most trivial learning method. This is the Robbins-Monro; stochastic approximation applied to multilayer perceptrons. The; weights are updated after each example according to the formula:; $w_{ij}(t+1) = w_{ij}(t) + \Delta w_{ij}(t)$. with. $\Delta w_{ij}(t) = - \eta(\d e_p / \d w_{ij} +; \delta) + \epsilon \Deltaw_{ij}(t-1)$; The parameters for this method are Eta, EtaDecay, Delta and; Epsilon.; Steepest descent with fixed step size; (batch learning): It is the same as the stochastic; minimization, but the weights are updated after considering all the; examples, with the total derivative dEdw. The parameters for this; method are Eta, EtaDecay, Delta and Epsilon.; Steepest descent algorithm: Weights; are set to the minimum along the line defined by the gradient. The; only parameter for this method is Tau. Lower tau = higher precision =; slower search. A value Tau = 3 seems reasonable.; Conjugate gradients with the; Polak-Ribiere",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiLayerPerceptron.html:4275,learn,learning,4275,root/html528/TMultiLayerPerceptron.html,https://root.cern,https://root.cern/root/html528/TMultiLayerPerceptron.html,6,['learn'],['learning']
Usability,". A suggested work flow for distributed projects: NoSY | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development » Git Primer A suggested work flow for distributed projects: NoSY. Overview; Building on the tips an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/suggested-work-flow-distributed-projects-nosy.html:170,Guid,Guides,170,d/suggested-work-flow-distributed-projects-nosy.html,https://root.cern,https://root.cern/d/suggested-work-flow-distributed-projects-nosy.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". About ROOT | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome About ROOT. ROOT is a framework for data processing, born at CERN, at the heart of the research on high-energy physics. Every day, thousands of physicists u",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/about-root.html:128,Guid,Guides,128,d/about-root.html,https://root.cern,https://root.cern/d/about-root.html,3,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". AbstractMethod(const char *method) constTObject; AbsValue(Bool_t reject=kTRUE)TF1static; AddParameter(const TString &name, Double_t value)TF1inlinevirtual; AddToGlobalList(Bool_t on=kTRUE)TF1virtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTF1virtual; CalcGaussLegendreSamplingPoints(Int_t num, Double_t *x, Double_t *w, Double_t eps=3.0e-11)TF1static; CentralMoment(Double_t n, Double_t a, Double_t b, const Double_t *params=nullptr, Double_t epsilon=0.000001)TF1virtual; CentralMoment2(Double_t nx, Double_t ax, Double_t bx, Double_t ny, Double_t ay, Double_t by, Double_t epsilon=0.000001)TF2virtual; CheckedHash()TObjectinline; Class()TF2static; Class_Name()TF2static; Class_Version()TF2inlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname=nullptr) const overrideTF1virtual; Compare(const TObject *obj) const overrideTNamedvirtual; ComputeCdfTable(Option_t *opt)TF1protected; Copy(TObject &f2) const overrideTF2virtual; TF1::TAttLine::Copy(TAttLine &attline) constTAttLine; TF1::TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; Covariance2XY(Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t epsilon=0.000001)TF2inlinevirtual; CreateHistogram() overrideTF2virtual; DeclFileName()TF2inlinestatic; DefaultAddToGlobalList(Bool_t on=kTRUE)TF1static; DefineNSUMTerm(TObjArray *newFuncs, TObjArray *coeffNames, TString &fullFormula, TString &formula, int termStart, int termEnd, Double_t xmin, Double_t xmax)TF1private; Delete(Option_t *option="""")TObjectvirtual; Derivative(Double_t x, Double_t *params=nullptr, Double_t epsilon=0.001) constTF1virtual; Derivative2(Double_t x, Double_t *params=nullptr, Double_t epsilon=0.001) constTF1virtual; Derivative3(Double_t x, Double_t *params=nullptr, Double_t epsilon=0.001) constTF1virtual; DerivativeError()TF1static; DistancetoLine(I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF2-members.html:1020,Clear,Clear,1020,doc/master/classTF2-members.html,https://root.cern,https://root.cern/doc/master/classTF2-members.html,1,['Clear'],['Clear']
Usability,". Accessing a TTree With a TBrowser | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation » Courses » Introductory Tutorials Accessing a TTree With a TBrowser. Now, with the TFile still open, let's do some i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/accessing-ttree-tbrowser.html:151,Guid,Guides,151,d/accessing-ttree-tbrowser.html,https://root.cern,https://root.cern/d/accessing-ttree-tbrowser.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Accessing a TTree With a TSelector | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation » Courses » Introductory Tutorials Accessing a TTree With a TSelector. What is a Selector?; To benefit from many ROO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/accessing-ttree-tselector.html:152,Guid,Guides,152,d/accessing-ttree-tselector.html,https://root.cern,https://root.cern/d/accessing-ttree-tselector.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Blog | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » News Blog. ROOT::RWhy! ; ## Background. ROOT is implementing new interfaces following new interface styles. We follow [C++ Core Guidelines](https://github.com/i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/blog.html:122,Guid,Guides,122,d/blog.html,https://root.cern,https://root.cern/d/blog.html,3,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,. Bool_t TGPopupMenu::fHasGrab. protected . true if menu has grabbed pointer ; Definition at line 120 of file TGMenu.h. ◆ fHifontStruct. FontStruct_t TGPopupMenu::fHifontStruct. protected . font to draw highlighted entries ; Definition at line 130 of file TGMenu.h. ◆ fMenuBar. TGMenuBar* TGPopupMenu::fMenuBar. protected . menu bar (if any) ; Definition at line 133 of file TGMenu.h. ◆ fMenuHeight. UInt_t TGPopupMenu::fMenuHeight. protected . height of popup menu ; Definition at line 124 of file TGMenu.h. ◆ fMenuWidth. UInt_t TGPopupMenu::fMenuWidth. protected . width of popup menu ; Definition at line 123 of file TGMenu.h. ◆ fMsgWindow. const TGWindow* TGPopupMenu::fMsgWindow. protected . window which handles menu events ; Definition at line 132 of file TGMenu.h. ◆ fNormGC. GContext_t TGPopupMenu::fNormGC. protected . normal drawing graphics context ; Definition at line 126 of file TGMenu.h. ◆ fPoppedUp. Bool_t TGPopupMenu::fPoppedUp. protected . true if menu is currently popped up ; Definition at line 121 of file TGMenu.h. ◆ fSelbackGC. GContext_t TGPopupMenu::fSelbackGC. protected . graphics context for drawing selection background ; Definition at line 128 of file TGMenu.h. ◆ fSelGC. GContext_t TGPopupMenu::fSelGC. protected . graphics context for drawing selections ; Definition at line 127 of file TGMenu.h. ◆ fSplitButton. TGSplitButton* TGPopupMenu::fSplitButton. protected . split button (if any) ; Definition at line 134 of file TGMenu.h. ◆ fStick. Bool_t TGPopupMenu::fStick. protected . stick mode (popup menu stays sticked on screen) ; Definition at line 119 of file TGMenu.h. ◆ fXl. UInt_t TGPopupMenu::fXl. protected . Max width of all menu entries. ; Definition at line 122 of file TGMenu.h. Libraries for TGPopupMenu:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGMenu.h; gui/gui/src/TGMenu.cxx. TGPopupMenu. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:29 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGPopupMenu.html:52031,Guid,Guide,52031,doc/master/classTGPopupMenu.html,https://root.cern,https://root.cern/doc/master/classTGPopupMenu.html,1,['Guid'],['Guide']
Usability,". Bool_t TStreamerSTL::IsBase ; (; ); const. overridevirtual . Return kTRUE if the element represent a base class. ; Reimplemented from TStreamerElement.; Definition at line 1839 of file TStreamerElement.cxx. ◆ ls(). void TStreamerSTL::ls ; (; Option_t * ; option = """"); const. overridevirtual . Print the content of the element. ; Reimplemented from TStreamerElement.; Definition at line 1874 of file TStreamerElement.cxx. ◆ operator=(). TStreamerSTL & TStreamerSTL::operator= ; (; const TStreamerSTL & ; ). privatedelete . ◆ SetCtype(). void TStreamerSTL::SetCtype ; (; Int_t ; t). inline . Definition at line 418 of file TStreamerElement.h. ◆ SetSTLtype(). void TStreamerSTL::SetSTLtype ; (; Int_t ; t). inline . Definition at line 417 of file TStreamerElement.h. ◆ SetStreamer(). void TStreamerSTL::SetStreamer ; (; TMemberStreamer * ; streamer). overridevirtual . Set pointer to Streamer function for this element NOTE: we do not take ownership. ; Reimplemented from TStreamerElement.; Definition at line 1922 of file TStreamerElement.cxx. ◆ Streamer(). void TStreamerSTL::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TStreamerSTL. ; Reimplemented from TStreamerElement.; Reimplemented in TStreamerSTLstring.; Definition at line 1930 of file TStreamerElement.cxx. ◆ StreamerNVirtual(). void TStreamerSTL::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 421 of file TStreamerElement.h. Member Data Documentation. ◆ fCtype. Int_t TStreamerSTL::fCtype. protected . Definition at line 399 of file TStreamerElement.h. ◆ fSTLtype. Int_t TStreamerSTL::fSTLtype. protected . Definition at line 398 of file TStreamerElement.h. Libraries for TStreamerSTL:. [legend]; The documentation for this class was generated from the following files:; core/meta/inc/TStreamerElement.h; core/meta/src/TStreamerElement.cxx. TStreamerSTL. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:34 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerSTL.html:22354,Guid,Guide,22354,doc/master/classTStreamerSTL.html,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html,1,['Guid'],['Guide']
Usability,". Bool_t ; validate = kTRUE . ). Set valid font size. ; Definition at line 60 of file TEveText.cxx. ◆ SetLighting(). void TEveText::SetLighting ; (; Bool_t ; isOn). inline . Definition at line 61 of file TEveText.h. ◆ SetPolygonOffset(). void TEveText::SetPolygonOffset ; (; Float_t ; factor, . Float_t ; units . ). Set the scale and units used to calculate depth values. ; See glPolygonOffset manual page. ; Definition at line 107 of file TEveText.cxx. ◆ SetText(). void TEveText::SetText ; (; const char * ; t). inline . Definition at line 58 of file TEveText.h. ◆ Streamer(). void TEveText::Streamer ; (; TBuffer & ; ). overridevirtual . Reimplemented from TEveElement. ◆ StreamerNVirtual(). void TEveText::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 77 of file TEveText.h. Member Data Documentation. ◆ fAutoLighting. Bool_t TEveText::fAutoLighting. protected . Definition at line 40 of file TEveText.h. ◆ fExtrude. Float_t TEveText::fExtrude. protected . Definition at line 38 of file TEveText.h. ◆ fFontFile. Int_t TEveText::fFontFile. protected . Definition at line 35 of file TEveText.h. ◆ fFontMode. Int_t TEveText::fFontMode. protected . Definition at line 36 of file TEveText.h. ◆ fFontSize. Int_t TEveText::fFontSize. protected . Definition at line 34 of file TEveText.h. ◆ fLighting. Bool_t TEveText::fLighting. protected . Definition at line 41 of file TEveText.h. ◆ fPolygonOffset. Float_t TEveText::fPolygonOffset[2]. protected . Definition at line 43 of file TEveText.h. ◆ fText. TString TEveText::fText. protected . Definition at line 31 of file TEveText.h. ◆ fTextColor. Color_t TEveText::fTextColor. protected . Definition at line 32 of file TEveText.h. Libraries for TEveText:. [legend]; The documentation for this class was generated from the following files:; graf3d/eve/inc/TEveText.h; graf3d/eve/src/TEveText.cxx. TEveText. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:44 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveText.html:38741,Guid,Guide,38741,doc/master/classTEveText.html,https://root.cern,https://root.cern/doc/master/classTEveText.html,1,['Guid'],['Guide']
Usability,". Building ROOT | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation Building ROOT. Introduction; ROOT uses the CMake cross-platform build-generator tool as a primary build system. CMake does not build the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/building-root.html:131,Guid,Guides,131,d/building-root.html,https://root.cern,https://root.cern/d/building-root.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Building a complete geometry in this style is virtually possible but highly not recommended.; 18.3.3.1 The Structure of Composite Shapes; A composite shape can always be looked as the result of a Boolean operation between only two shape components. All information identifying these two components as well as their positions with respect to the frame of the composite is represented by an object called Boolean node. A composite shape has a pointer to such a Boolean node. Since the shape components may also be composites, they will also contain binary Boolean nodes branching out other two shapes in the hierarchy. Any such branch ends-up when the final leaves are no longer composite shapes, but basic primitives. The figure shows the composite shapes structure. The composite shapes structure. Suppose that A, B, C and D represent basic shapes, we will illustrate how the internal representation of few combinations look like. We do this only for understanding how to create them in a proper way, since the user interface for this purpose is in fact very simple. We will ignore for the time being the positioning of components. The definition of a composite shape takes an expression where the identifiers are shape names. The expression is parsed and decomposed in 2 sub-expressions and the top-level Boolean operator. Union: A+B+C. Just to illustrate the Boolean expression parsing and the composite shape structure, let’s take a simple example. We will describe the union of A, B and C. Both union operators are at the same level. Since:; A+B+C = (A+B)+C = A+(B+C); The first(+) is taken as separator, hence the expression split in: A and (B+C). A Boolean node of type TGeoUnion(""A"",""B+C"") is created. This tries to replace the 2 expressions by actual pointers to corresponding shapes. The first expression (A) contains no operators therefore is interpreted as representing a shape. The shape named “A” is searched into the list of shapes handled by the manager class and stored as the “left",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:916189,simpl,simple,916189,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['simpl'],['simple']
Usability,". Check if there is for window ""id"" an event of type ""type"". ; If there is fill in the event structure and return true. If no such event return false. ; Reimplemented from TVirtualX.; Definition at line 1753 of file GX11Gui.cxx. ◆ Class(). static TClass * TGX11::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGX11::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGX11::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 401 of file TGX11.h. ◆ ClearArea(). void TGX11::ClearArea ; (; Window_t ; id, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Clear a window area to the background color. ; Reimplemented from TVirtualX.; Definition at line 1741 of file GX11Gui.cxx. ◆ ClearPixmap(). void TGX11::ClearPixmap ; (; Drawable * ; pix). private . Clear the pixmap pix. ; Definition at line 407 of file TGX11.cxx. ◆ ClearWindow() [1/2]. void TGX11::ClearWindow ; (; ). overridevirtual . Clear current window. ; Reimplemented from TVirtualX.; Definition at line 422 of file TGX11.cxx. ◆ ClearWindow() [2/2]. void TGX11::ClearWindow ; (; Window_t ; id). overridevirtual . Clear window. ; Reimplemented from TVirtualX.; Definition at line 2142 of file GX11Gui.cxx. ◆ CloseDisplay(). void TGX11::CloseDisplay ; (; ). overridevirtual . Close connection to display server. ; Reimplemented from TVirtualX.; Definition at line 840 of file GX11Gui.cxx. ◆ ClosePixmap(). void TGX11::ClosePixmap ; (; ). overridevirtual . Delete current pixmap. ; Reimplemented from TVirtualX.; Definition at line 439 of file TGX11.cxx. ◆ CloseWindow(). void TGX11::CloseWindow ; (; ). overridevirtual . Delete current window. ; Reimplemented from TVirtualX.; Definition at line 447 of file TGX11.cxx. ◆ CloseWindow1(). void TGX11::CloseWindow1 ; (; ). private . Delete current window. ; Definition at line 461 of file TGX11.cxx. ◆ CollectImageColors().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGX11.html:58249,Clear,ClearWindow,58249,doc/master/classTGX11.html,https://root.cern,https://root.cern/doc/master/classTGX11.html,1,['Clear'],['ClearWindow']
Usability,". Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLeafF(); Default constructor for LeafF*-*-*-*-*-*-*-*-; *-* ============================. TLeafF(TBranch* parent, const char* name, const char* type); Create a LeafF*-*-; *-* ==============; -. ~TLeafF(); Default destructor for a LeafF*-*-*-*-*-*-; *-* ===============================. void Export(TClonesArray* list, Int_t n); -*Export element from local leaf buffer to ClonesArray; *-* ====================================================. void FillBasket(TBuffer& b); -*-*-*-*Pack leaf elements in Basket output buffer; *-* ==========================================. void Import(TClonesArray* list, Int_t n); -*Import element from ClonesArray into local leaf buffer; *-* ======================================================. void PrintValue(Int_t i = 0) const; Prints leaf value. void ReadBasket(TBuffer& b); -*-*-*-*-*Read leaf elements from Basket input buffer; *-* ===========================================. void ReadBasketExport(TBuffer& b, TClonesArray* list, Int_t n); -*-*-*-*-*Read leaf elements from Basket input buffer; and export buffer to TClonesArray objects. void ReadValue(istream& s, Char_t delim = ' '); read a float from std::istream s and store it into the branch buffer. void SetAddress(void* add = 0); -*-*-*-*-*Set leaf buffer data address; *-* ============================. Double_t GetValue(Int_t i = 0) const; if leaf is a simple type, i must be set to 0; if leaf is an array, i is the array element number to be returned. { return fValue[i]; }. TLeafF(). const char * GetTypeName() const; {return ""Float_t"";}. void * GetValuePointer() const; {return fValue;}. » Author: Rene Brun 12/01/96 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/tree:$Id$ » Last generated: 2015-06-02 16:14; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TLeafF.html:9730,simpl,simple,9730,root/html604/TLeafF.html,https://root.cern,https://root.cern/root/html604/TLeafF.html,1,['simpl'],['simple']
Usability,". Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLeafF(); Default constructor for LeafF*-*-*-*-*-*-*-*-; *-* ============================. TLeafF(TBranch* parent, const char* name, const char* type); Create a LeafF*-*-; *-* ==============; -. ~TLeafF(); Default destructor for a LeafF*-*-*-*-*-*-; *-* ===============================. void Export(TClonesArray* list, Int_t n); -*Export element from local leaf buffer to ClonesArray; *-* ====================================================. void FillBasket(TBuffer& b); -*-*-*-*Pack leaf elements in Basket output buffer; *-* ==========================================. void Import(TClonesArray* list, Int_t n); -*Import element from ClonesArray into local leaf buffer; *-* ======================================================. void PrintValue(Int_t i = 0) const; Prints leaf value. void ReadBasket(TBuffer& b); -*-*-*-*-*Read leaf elements from Basket input buffer; *-* ===========================================. void ReadBasketExport(TBuffer& b, TClonesArray* list, Int_t n); -*-*-*-*-*Read leaf elements from Basket input buffer; and export buffer to TClonesArray objects. void ReadValue(istream& s, Char_t delim = ' '); read a float from std::istream s and store it into the branch buffer. void SetAddress(void* add = 0); -*-*-*-*-*Set leaf buffer data address; *-* ============================. Double_t GetValue(Int_t i = 0) const; if leaf is a simple type, i must be set to 0; if leaf is an array, i is the array element number to be returned. { return fValue[i]; }. TLeafF(). const char * GetTypeName() const; {return ""Float_t"";}. void * GetValuePointer() const; {return fValue;}. » Author: Rene Brun 12/01/96 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/tree:$Id$ » Last generated: 2015-06-30 15:14; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLeafF.html:9730,simpl,simple,9730,root/html602/TLeafF.html,https://root.cern,https://root.cern/root/html602/TLeafF.html,1,['simpl'],['simple']
Usability,". Code Owners | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development Code Owners. ROOT consists of several loosely coupled but consistently designed parts. The ""code owners"" of these parts are experts that rev",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/code-owners.html:1001,Guid,Guides,1001,d/code-owners.html,https://root.cern,https://root.cern/d/code-owners.html,1,['Guid'],['Guides']
Usability,". Code Owners | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development Code Owners. ROOT consists of several loosely coupled but consistently designed parts. The ""code owners"" of these parts are experts that revi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/code-owners.html:129,Guid,Guides,129,d/code-owners.html,https://root.cern,https://root.cern/d/code-owners.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Coding Conventions | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development Coding Conventions. Naming conventions; Class definition conventions. Inline; Declaration Order. Avoid raw C types; Exception handling",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/coding-conventions.html:136,Guid,Guides,136,d/coding-conventions.html,https://root.cern,https://root.cern/d/coding-conventions.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Collaborate With Us | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Contribute Collaborate With Us. We warmly welcome external contributions to the ROOT! By providing code, you agree to transfer your copyright on ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/collaborate-with-us.html:137,Guid,Guides,137,d/collaborate-with-us.html,https://root.cern,https://root.cern/d/collaborate-with-us.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Compiling Your Code (also known as ACLiC) | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation » Courses » Introductory Tutorials Compiling Your Code (also known as ACLiC). You can run your code as compil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/compiling-your-code-also-known-aclic.html:159,Guid,Guides,159,d/compiling-your-code-also-known-aclic.html,https://root.cern,https://root.cern/d/compiling-your-code-also-known-aclic.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Contact Us | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » About Contact Us. You can contact the ROOT developers in the following ways, in order of preference:. Via the RootTalk web forum. Use this forum to post y",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/contact-us.html:128,Guid,Guides,128,d/contact-us.html,https://root.cern,https://root.cern/d/contact-us.html,3,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Courses | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation Courses. This page lists a number of ROOT tutorials and courses. Some are made by third parties others by the ROOT team.; Basic. ROOT Basic Cou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/courses.html:125,Guid,Guides,125,d/courses.html,https://root.cern,https://root.cern/d/courses.html,3,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". CpuInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » CpuInfo_t. class CpuInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es. Function Members (Methods); public:. virtual~CpuInfo_t(); static TClass*Class(); CpuInfo_t(); CpuInfo_t(const CpuInfo_t&); virtual TClass*IsA() const; CpuInfo_t&operator=(const CpuInfo_t&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfIdlecpu idle percentage; Float_tfLoad15mcpu load average over 15 m; Float_tfLoad1mcpu load average over 1 m; Float_tfLoad5mcpu load average over 5 m; Float_tfSyscpu sys load in percentage; Float_tfTotalcpu user+sys load in percentage; Float_tfUsercpu user load in percentage. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CpuInfo_t(); { }. virtual ~CpuInfo_t(); { }. TSystem& operator=(const CpuInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/CpuInfo_t.html:634,simpl,simple,634,root/html602/CpuInfo_t.html,https://root.cern,https://root.cern/root/html602/CpuInfo_t.html,1,['simpl'],['simple']
Usability,". CpuInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » CpuInfo_t. class CpuInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es. Function Members (Methods); public:. virtual~CpuInfo_t(); static TClass*Class(); CpuInfo_t(); CpuInfo_t(const CpuInfo_t&); virtual TClass*IsA() const; CpuInfo_t&operator=(const CpuInfo_t&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfIdlecpu idle percentage; Float_tfLoad15mcpu load average over 15 m; Float_tfLoad1mcpu load average over 1 m; Float_tfLoad5mcpu load average over 5 m; Float_tfSyscpu sys load in percentage; Float_tfTotalcpu user+sys load in percentage; Float_tfUsercpu user load in percentage. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CpuInfo_t(); { }. virtual ~CpuInfo_t(); { }. TSystem& operator=(const CpuInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 17:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/CpuInfo_t.html:634,simpl,simple,634,root/html604/CpuInfo_t.html,https://root.cern,https://root.cern/root/html604/CpuInfo_t.html,1,['simpl'],['simple']
Usability,". Creating a Pull Request | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development » Git Primer Creating a Pull Request. Prerequisites. You have set up git on our system; You have registered a GitHub account and ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/creating-pull-request.html:141,Guid,Guides,141,d/creating-pull-request.html,https://root.cern,https://root.cern/d/creating-pull-request.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Definition at line 111 of file RGeomData.cxx. ◆ Navigate() [1/3]. bool ROOT::RGeomBrowserIter::Navigate ; (; const std::string & ; path). inline . Navigate to specified path - path specified as string and should start with ""/"". ; Definition at line 177 of file RGeomData.cxx. ◆ Navigate() [2/3]. bool ROOT::RGeomBrowserIter::Navigate ; (; const std::vector< std::string > & ; path). inline . Navigate to specified path . Definition at line 212 of file RGeomData.cxx. ◆ Navigate() [3/3]. bool ROOT::RGeomBrowserIter::Navigate ; (; TGeoVolume * ; vol). inline . Navigate to specified volume - find first occurrence. ; Definition at line 235 of file RGeomData.cxx. ◆ Next(). bool ROOT::RGeomBrowserIter::Next ; (; ). inline . Definition at line 131 of file RGeomData.cxx. ◆ NextNode(). bool ROOT::RGeomBrowserIter::NextNode ; (; ). inline . Definition at line 160 of file RGeomData.cxx. ◆ NumChilds(). int ROOT::RGeomBrowserIter::NumChilds ; (; ); const. inline . Definition at line 87 of file RGeomData.cxx. ◆ Reset(). bool ROOT::RGeomBrowserIter::Reset ; (; ). inline . Definition at line 149 of file RGeomData.cxx. Member Data Documentation. ◆ fChild. unsigned ROOT::RGeomBrowserIter::fChild {0}. private . Definition at line 64 of file RGeomData.cxx. ◆ fDesc. RGeomDescription& ROOT::RGeomBrowserIter::fDesc. private . Definition at line 62 of file RGeomData.cxx. ◆ fNodeId. int ROOT::RGeomBrowserIter::fNodeId {0}. private . Definition at line 65 of file RGeomData.cxx. ◆ fParentId. int ROOT::RGeomBrowserIter::fParentId {-1}. private . Definition at line 63 of file RGeomData.cxx. ◆ fStackChilds. std::vector<int> ROOT::RGeomBrowserIter::fStackChilds. private . Definition at line 68 of file RGeomData.cxx. ◆ fStackParents. std::vector<int> ROOT::RGeomBrowserIter::fStackParents. private . Definition at line 67 of file RGeomData.cxx. geom/webviewer/src/RGeomData.cxx. ROOTRGeomBrowserIter. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:59 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomBrowserIter.html:4781,Guid,Guide,4781,doc/master/classROOT_1_1RGeomBrowserIter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomBrowserIter.html,1,['Guid'],['Guide']
Usability,". Definition at line 175 of file TTreeReader.h. ◆ fLoadTreeStatus. ELoadTreeStatus TTreeReader::fLoadTreeStatus = kNoTree. private . Indicator on how LoadTree was called 'last' time. ; Definition at line 321 of file TTreeReader.h. ◆ fMissingProxies. std::vector<std::string> TTreeReader::fMissingProxies {}. private . Definition at line 351 of file TTreeReader.h. ◆ fNotify. TNotifyLink<TTreeReader> TTreeReader::fNotify. private . TTree and TChain will notify this object upon LoadTree, leading to a call to TTreeReader::Notify(). ; Definition at line 323 of file TTreeReader.h. ◆ fProxies. NamedProxies_t TTreeReader::fProxies. private . attached ROOT::TNamedBranchProxies; owned ; Definition at line 328 of file TTreeReader.h. ◆ fProxiesSet. bool TTreeReader::fProxiesSet = false. private . True if the proxies have been set, false otherwise. ; Definition at line 337 of file TTreeReader.h. ◆ fSetEntryBaseCallingLoadTree. bool TTreeReader::fSetEntryBaseCallingLoadTree = false. private . True if during the LoadTree execution triggered by SetEntryBase. ; Definition at line 338 of file TTreeReader.h. ◆ fSuppressErrorsForMissingBranches. std::vector<std::string> TTreeReader::fSuppressErrorsForMissingBranches {}. private . Definition at line 350 of file TTreeReader.h. ◆ fTree. TTree* TTreeReader::fTree = nullptr. private . tree that's read ; Definition at line 318 of file TTreeReader.h. ◆ fValues. std::deque<ROOT::Internal::TTreeReaderValueBase*> TTreeReader::fValues. private . readers that use our director ; Definition at line 327 of file TTreeReader.h. ◆ fWarnAboutLongerFriends. bool TTreeReader::fWarnAboutLongerFriends {true}. private . Definition at line 345 of file TTreeReader.h. Libraries for TTreeReader:. [legend]; The documentation for this class was generated from the following files:; tree/treeplayer/inc/TTreeReader.h; tree/treeplayer/src/TTreeReader.cxx. TTreeReader. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:40 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeReader.html:39415,Guid,Guide,39415,doc/master/classTTreeReader.html,https://root.cern,https://root.cern/doc/master/classTTreeReader.html,1,['Guid'],['Guide']
Usability,. Definition at line 253 of file TCollection.h. ◆ IsA(). virtual TClass * TIter::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Definition at line 277 of file TCollection.h. ◆ Next(). TObject * TIter::Next ; (; ). inline . Definition at line 251 of file TCollection.h. ◆ operator!=(). Bool_t TIter::operator!= ; (; const TIter & ; aIter); const. inline . Definition at line 263 of file TCollection.h. ◆ operator()(). TObject * TIter::operator() ; (; ). inline . Definition at line 250 of file TCollection.h. ◆ operator*(). TObject * TIter::operator* ; (; ); const. inline . Definition at line 273 of file TCollection.h. ◆ operator++(). TIter & TIter::operator++ ; (; ). inline . Definition at line 255 of file TCollection.h. ◆ operator=() [1/2]. TIter & TIter::operator= ; (; const TIter & ; rhs). Assigning an TIter to another. ; This involves allocating a new TIterator of the right sub class and assigning it with the original. ; Definition at line 789 of file TCollection.cxx. ◆ operator=() [2/2]. TIter & TIter::operator= ; (; TIterator * ; iter). inline . Definition at line 266 of file TCollection.h. ◆ operator==(). Bool_t TIter::operator== ; (; const TIter & ; aIter); const. inline . Definition at line 256 of file TCollection.h. ◆ Reset(). void TIter::Reset ; (; ). inline . Definition at line 254 of file TCollection.h. ◆ Streamer(). virtual void TIter::Streamer ; (; TBuffer & ; ). virtual . ◆ StreamerNVirtual(). void TIter::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 277 of file TCollection.h. Member Data Documentation. ◆ fIterator. TIterator* TIter::fIterator {nullptr}. private . Definition at line 238 of file TCollection.h. Libraries for TIter:. [legend]; The documentation for this class was generated from the following files:; core/cont/inc/TCollection.h; core/cont/src/TCollection.cxx. TIter. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:52 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTIter.html:5430,Guid,Guide,5430,doc/master/classTIter.html,https://root.cern,https://root.cern/doc/master/classTIter.html,1,['Guid'],['Guide']
Usability,". Definition at line 908 of file QuartzMarker.mm. ◆ DrawTextLineNoKerning(). void ROOT::Quartz::DrawTextLineNoKerning ; (; CGContextRef ; ctx, . CTFontRef ; font, . const std::vector< UniChar > & ; text, . Int_t ; x, . Int_t ; y . ). Definition at line 319 of file QuartzText.mm. ◆ SetFillAreaParameters(). bool ROOT::Quartz::SetFillAreaParameters ; (; CGContextRef ; ctx, . unsigned * ; patternIndex . ). Definition at line 391 of file QuartzFillArea.mm. ◆ SetFillColor(). Bool_t ROOT::Quartz::SetFillColor ; (; CGContextRef ; ctx, . Color_t ; colorIndex . ). Definition at line 304 of file QuartzFillArea.mm. ◆ SetFillPattern(). bool ROOT::Quartz::SetFillPattern ; (; CGContextRef ; ctx, . const unsigned * ; patternIndex . ). Definition at line 350 of file QuartzFillArea.mm. ◆ SetLineColor(). Bool_t ROOT::Quartz::SetLineColor ; (; CGContextRef ; ctx, . Color_t ; colorIndex . ). Definition at line 29 of file QuartzLine.mm. ◆ SetLineStyle(). void ROOT::Quartz::SetLineStyle ; (; CGContextRef ; ctx, . Int_t ; lstyle . ). Definition at line 74 of file QuartzLine.mm. ◆ SetLineType(). void ROOT::Quartz::SetLineType ; (; CGContextRef ; ctx, . Int_t ; n, . Int_t * ; dash . ). Definition at line 50 of file QuartzLine.mm. ◆ SetLineWidth(). void ROOT::Quartz::SetLineWidth ; (; CGContextRef ; ctx, . Int_t ; width . ). Definition at line 108 of file QuartzLine.mm. Variable Documentation. ◆ defaultFontOrientation. const CTFontOrientation ROOT::Quartz::defaultFontOrientation = kCTFontDefaultOrientation. Definition at line 38 of file QuartzText.mm. ◆ horizontalFontOrientation. const CTFontOrientation ROOT::Quartz::horizontalFontOrientation = kCTFontHorizontalOrientation. Definition at line 39 of file QuartzText.mm. ◆ verticalFontOrientation. const CTFontOrientation ROOT::Quartz::verticalFontOrientation = kCTFontVerticalOrientation. Definition at line 40 of file QuartzText.mm. ROOTQuartz. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:14:04 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Quartz.html:16161,Guid,Guide,16161,doc/v632/namespaceROOT_1_1Quartz.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Quartz.html,1,['Guid'],['Guide']
Usability,". Destructor. ; Definition at line 376 of file TEveWindow.cxx. Member Function Documentation. ◆ Class(). static TClass * TEveCompositeFrameInMainFrame::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TEveCompositeFrameInMainFrame::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TEveCompositeFrameInMainFrame::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 139 of file TEveWindow.h. ◆ DeclFileName(). static const char * TEveCompositeFrameInMainFrame::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 139 of file TEveWindow.h. ◆ Destroy(). void TEveCompositeFrameInMainFrame::Destroy ; (; ). overridevirtual . Virtual function called from eve side when the frame should be destroyed. ; This means we expect that fEveWindow is null.; We simply call CloseWindow() on the main-frame which will in turn generate the ""CloseWindow()"" signal. This is then handled in MainFrameClosed(). ; Implements TEveCompositeFrame.; Definition at line 411 of file TEveWindow.cxx. ◆ GetOriginalContainer(). TEveWindow * TEveCompositeFrameInMainFrame::GetOriginalContainer ; (; ); const. inline . Definition at line 137 of file TEveWindow.h. ◆ GetOriginalSlot(). TEveWindow * TEveCompositeFrameInMainFrame::GetOriginalSlot ; (; ); const. inline . Definition at line 136 of file TEveWindow.h. ◆ IsA(). TClass * TEveCompositeFrameInMainFrame::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TEveCompositeFrame.; Definition at line 139 of file TEveWindow.h. ◆ MainFrameClosed(). void TEveCompositeFrameInMainFrame::MainFrameClosed ; (; ). Slot for main-frame's ""CloseWindow()"" signal. ; If an eve window is still present, it will be put into:; original-container, if it is set; . Definition at line 456 of file TEveWindow.cxx. ◆ operator=(). TEveCompos",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompositeFrameInMainFrame.html:35734,simpl,simply,35734,doc/master/classTEveCompositeFrameInMainFrame.html,https://root.cern,https://root.cern/doc/master/classTEveCompositeFrameInMainFrame.html,1,['simpl'],['simply']
Usability,". Development | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome Development. The links in this menu and in the block on your right are intended for the ROOT developers and for people who want to contribute to the ROOT ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/development.html:1001,Guid,Guides,1001,d/development.html,https://root.cern,https://root.cern/d/development.html,1,['Guid'],['Guides']
Usability,". Development | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome Development. The links in this menu and in the block on your right are intended for the ROOT developers and for people who want to contribute to the ROOT s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/development.html:129,Guid,Guides,129,d/development.html,https://root.cern,https://root.cern/d/development.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Do we need yet another custom C++ interpreter? | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Blogs » Axel Naumann's blog Do we need yet another custom C++ interpreter?. Axel Naumann on Thu, 12/22/2011 - 22:13 . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/blog/do-we-need-yet-another-custom-c-interpreter.html:164,Guid,Guides,164,d/blog/do-we-need-yet-another-custom-c-interpreter.html,https://root.cern,https://root.cern/d/blog/do-we-need-yet-another-custom-c-interpreter.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Documentation | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome Documentation. ROOT provides different types of documentation:. The Reference Guide, which is generated by doxygen provides an up-to-date full code docum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/documentation.html:131,Guid,Guides,131,d/documentation.html,https://root.cern,https://root.cern/d/documentation.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,. Double_t TGLAxis::fAngle3. private . Definition at line 47 of file TGLAxis.h. ◆ fAxisLength. Double_t TGLAxis::fAxisLength. private . Definition at line 36 of file TGLAxis.h. ◆ fGridLength. Double_t TGLAxis::fGridLength. private . Definition at line 43 of file TGLAxis.h. ◆ fLabels. TString* TGLAxis::fLabels. private . Definition at line 35 of file TGLAxis.h. ◆ fLabelsOffset. Double_t TGLAxis::fLabelsOffset. private . Definition at line 41 of file TGLAxis.h. ◆ fLabelsSize. Double_t TGLAxis::fLabelsSize. private . Definition at line 42 of file TGLAxis.h. ◆ fNDiv. Int_t TGLAxis::fNDiv. private . Definition at line 27 of file TGLAxis.h. ◆ fNDiv1. Int_t TGLAxis::fNDiv1. private . Definition at line 28 of file TGLAxis.h. ◆ fNDiv2. Int_t TGLAxis::fNDiv2. private . Definition at line 29 of file TGLAxis.h. ◆ fNDiv3. Int_t TGLAxis::fNDiv3. private . Definition at line 30 of file TGLAxis.h. ◆ fNTicks1. Int_t TGLAxis::fNTicks1. private . Definition at line 31 of file TGLAxis.h. ◆ fNTicks2. Int_t TGLAxis::fNTicks2. private . Definition at line 32 of file TGLAxis.h. ◆ fText. TGLText* TGLAxis::fText. private . Definition at line 44 of file TGLAxis.h. ◆ fTickMarksLength. Double_t TGLAxis::fTickMarksLength. private . Definition at line 39 of file TGLAxis.h. ◆ fTickMarksOrientation. Int_t TGLAxis::fTickMarksOrientation. private . Definition at line 40 of file TGLAxis.h. ◆ fTicks1. Double_t* TGLAxis::fTicks1. private . Definition at line 33 of file TGLAxis.h. ◆ fTicks2. Double_t* TGLAxis::fTicks2. private . Definition at line 34 of file TGLAxis.h. ◆ fWmax. Double_t TGLAxis::fWmax. private . Definition at line 38 of file TGLAxis.h. ◆ fWmin. Double_t TGLAxis::fWmin. private . Definition at line 37 of file TGLAxis.h. Libraries for TGLAxis:. [legend]; The documentation for this class was generated from the following files:; graf3d/gl/inc/TGLAxis.h; graf3d/gl/src/TGLAxis.cxx. TGLAxis. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:19 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLAxis.html:13054,Guid,Guide,13054,doc/master/classTGLAxis.html,https://root.cern,https://root.cern/doc/master/classTGLAxis.html,1,['Guid'],['Guide']
Usability,". Double_t ; y, . Double_t ; xcl1, . Double_t ; ycl1, . Double_t ; xcl2, . Double_t ; ycl2 . ). virtual . Compute the endpoint codes for TPad::Clip. ; Definition at line 901 of file TPad.cxx. ◆ ClipPolygon(). Int_t TPad::ClipPolygon ; (; Int_t ; n, . Double_t * ; x, . Double_t * ; y, . Int_t ; nn, . Double_t * ; xc, . Double_t * ; yc, . Double_t ; xclipl, . Double_t ; yclipb, . Double_t ; xclipr, . Double_t ; yclipt . ). virtual . Clip polygon using the Sutherland-Hodgman algorithm. ; Parameters. [in]nNumber of points in the polygon to be clipped ; [in]x,yPolygon x[n], y[n] do be clipped vertices ; [in]xclipl,yclipb,xclipr,ycliptClipping boundary ; [out]nnNumber of points in xc and yc ; [out]xc,ycClipped polygon vertices. The Int_t returned by this function is the number of points in the clipped polygon. These vectors must be allocated by the calling function. A size of 2*n for each is enough. Sutherland and Hodgman's polygon-clipping algorithm uses a divide-and-conquer strategy: It solves a series of simple and identical problems that, when combined, solve the overall problem. The simple problem is to clip a polygon against a single infinite clip edge. Four clip edges, each defining one boundary of the clip rectangle, successively clip a polygon against a clip rectangle.; Steps of Sutherland-Hodgman's polygon-clipping algorithm:. Polygons can be clipped against each edge of the window one at a time. Windows/edge intersections, if any, are easy to find since the X or Y coordinates are already known.; Vertices which are kept after clipping against one window edge are saved for clipping against the remaining edges.; Note that the number of vertices usually changes and will often increases. The clip boundary determines a visible and invisible region. The edges from vertex i to vertex i+1 can be one of four types:. Case 1 : Wholly inside visible region - save endpoint; Case 2 : Exit visible region - save the intersection; Case 3 : Wholly outside visible region - save no",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPad.html:63400,simpl,simple,63400,doc/master/classTPad.html,https://root.cern,https://root.cern/doc/master/classTPad.html,1,['simpl'],['simple']
Usability,". Downloading ROOT | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Download Downloading ROOT. We are developing ROOT according to the principle of Release early and release often. However, since a very large portion",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/downloading-root.html:134,Guid,Guides,134,d/downloading-root.html,https://root.cern,https://root.cern/d/downloading-root.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". EEnvLevel ; level = kEnvChange, . const char * ; type = nullptr . ). virtual . Set the value of a resource or create a new resource. ; Definition at line 736 of file TEnv.cxx. ◆ SetValue() [2/4]. void TEnv::SetValue ; (; const char * ; name, . Double_t ; value . ). virtual . Set or create a double resource value. ; Definition at line 784 of file TEnv.cxx. ◆ SetValue() [3/4]. void TEnv::SetValue ; (; const char * ; name, . EEnvLevel ; level = kEnvChange . ). virtual . Set the value of a resource or create a new resource. ; Use this method to set a resource like, ""name=val"". If just ""name"" is given it will be interpreted as ""name=1"". ; Definition at line 761 of file TEnv.cxx. ◆ SetValue() [4/4]. void TEnv::SetValue ; (; const char * ; name, . Int_t ; value . ). virtual . Set or create an integer resource value. ; Definition at line 776 of file TEnv.cxx. ◆ Streamer(). void TEnv::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TEnv::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 167 of file TEnv.h. ◆ WriteFile(). Int_t TEnv::WriteFile ; (; const char * ; fname, . EEnvLevel ; level = kEnvAll . ). virtual . Write resource records to file fname for a certain level. ; Use level kEnvAll to write all resources. Returns -1 on case of error, 0 in case of success. ; Definition at line 617 of file TEnv.cxx. Member Data Documentation. ◆ fIgnoreDup. Bool_t TEnv::fIgnoreDup. private . Definition at line 129 of file TEnv.h. ◆ fRcName. TString TEnv::fRcName. private . Definition at line 128 of file TEnv.h. ◆ fTable. THashList* TEnv::fTable. private . Definition at line 127 of file TEnv.h. Libraries for TEnv:. [legend]; The documentation for this class was generated from the following files:; core/base/inc/TEnv.h; core/base/src/TEnv.cxx. TEnv. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:32 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEnv.html:22274,Guid,Guide,22274,doc/master/classTEnv.html,https://root.cern,https://root.cern/doc/master/classTEnv.html,1,['Guid'],['Guide']
Usability,". Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 56 of file RooBreitWigner.cxx. ◆ getAnalyticalIntegral(). Int_t RooBreitWigner::getAnalyticalIntegral ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const char * ; rangeName = nullptr . ); const. overridevirtual . Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ; 'integSet' is the set of dependents for which integration is requested. The function should copy the subset of dependents it can analytically integrate to anaIntSet and return a unique identification code for this integration configuration. If no integration can be performed, zero should be returned. ; Reimplemented from RooAbsReal.; Definition at line 71 of file RooBreitWigner.cxx. ◆ IsA(). TClass * RooBreitWigner::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 51 of file RooBreitWigner.h. ◆ Streamer(). void RooBreitWigner::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsPdf. ◆ StreamerNVirtual(). void RooBreitWigner::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 51 of file RooBreitWigner.h. Member Data Documentation. ◆ mean. RooRealProxy RooBreitWigner::mean. protected . Definition at line 39 of file RooBreitWigner.h. ◆ width. RooRealProxy RooBreitWigner::width. protected . Definition at line 40 of file RooBreitWigner.h. ◆ x. RooRealProxy RooBreitWigner::x. protected . Definition at line 38 of file RooBreitWigner.h. Libraries for RooBreitWigner:. [legend]; The documentation for this class was generated from the following files:; roofit/roofit/inc/RooBreitWigner.h; roofit/roofit/src/RooBreitWigner.cxx. RooBreitWigner. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:45 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBreitWigner.html:77636,Guid,Guide,77636,doc/master/classRooBreitWigner.html,https://root.cern,https://root.cern/doc/master/classRooBreitWigner.html,1,['Guid'],['Guide']
Usability,. Event. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TEST; » Event. class Event: public TObject. Event and Track classes. The Event class is a naive/simple example of an event structure.; public:; char fType[20];; char *fEventName; //run+event number in character format; Int_t fNtrack;; Int_t fNseg;; Int_t fNvertex;; UInt_t fFlag;; Double32_t fTemperature;; Int_t fMeasures[10];; Double32_t fMatrix[4][4];; Double32_t *fClosestDistance; //[fNvertex] indexed array!; EventHeader fEvtHdr;; TClonesArray *fTracks;; TRefArray *fHighPt; //array of High Pt tracks only; TRefArray *fMuons; //array of Muon tracks only; TRef fLastTrack; //pointer to last track; TRef fHistoWeb; //EXEC:GetHistoWeb reference to an histogram in a TWebFile; TH1F *fH;; TBits fTriggerBits; //Bits triggered by this event. The EventHeader class has 3 data members (integers):; public:; Int_t fEvtNum;; Int_t fRun;; Int_t fDate;. The Event data member fTracks is a pointer to a TClonesArray.; It is an array of a variable number of tracks per event.; Each element of the array is an object of class Track with the members:; private:; Float_t fPx; //X component of the momentum; Float_t fPy; //Y component of the momentum; Float_t fPz; //Z component of the momentum; Float_t fRandom; //A random track quantity; Float_t fMass2; //The mass square of this particle; Float_t fBx; //X intercept at the vertex; Float_t fBy; //Y intercept at the vertex; Float_t fMeanCharge; //Mean charge deposition of all hits of this track; Float_t fXfirst; //X coordinate of the first point; Float_t fXlast; //X coordinate of the last point; Float_t fYfirst; //Y coordinate of the first point; Float_t fYlast; //Y coordinate of the last point; Float_t fZfirst; //Z coordinate of the first point; Float_t fZlast; //Z coordinate of the last point; Double32_t fCharge; //Charge of th,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/Event.html:320,simpl,simple,320,root/html528/Event.html,https://root.cern,https://root.cern/root/html528/Event.html,1,['simpl'],['simple']
Usability,. EventHeader. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TEST; » EventHeader. class EventHeader. Event and Track classes. The Event class is a naive/simple example of an event structure.; public:; char fType[20];; char *fEventName; //run+event number in character format; Int_t fNtrack;; Int_t fNseg;; Int_t fNvertex;; UInt_t fFlag;; Double32_t fTemperature;; Int_t fMeasures[10];; Double32_t fMatrix[4][4];; Double32_t *fClosestDistance; //[fNvertex] indexed array!; EventHeader fEvtHdr;; TClonesArray *fTracks;; TRefArray *fHighPt; //array of High Pt tracks only; TRefArray *fMuons; //array of Muon tracks only; TRef fLastTrack; //pointer to last track; TRef fHistoWeb; //EXEC:GetHistoWeb reference to an histogram in a TWebFile; TH1F *fH;; TBits fTriggerBits; //Bits triggered by this event. The EventHeader class has 3 data members (integers):; public:; Int_t fEvtNum;; Int_t fRun;; Int_t fDate;. The Event data member fTracks is a pointer to a TClonesArray.; It is an array of a variable number of tracks per event.; Each element of the array is an object of class Track with the members:; private:; Float_t fPx; //X component of the momentum; Float_t fPy; //Y component of the momentum; Float_t fPz; //Z component of the momentum; Float_t fRandom; //A random track quantity; Float_t fMass2; //The mass square of this particle; Float_t fBx; //X intercept at the vertex; Float_t fBy; //Y intercept at the vertex; Float_t fMeanCharge; //Mean charge deposition of all hits of this track; Float_t fXfirst; //X coordinate of the first point; Float_t fXlast; //X coordinate of the last point; Float_t fYfirst; //Y coordinate of the first point; Float_t fYlast; //Y coordinate of the last point; Float_t fZfirst; //Z coordinate of the first point; Float_t fZlast; //Z coordinate of the last point; Double32_t fCharge; //Charge of ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/EventHeader.html:322,simpl,simple,322,root/html528/EventHeader.html,https://root.cern,https://root.cern/root/html528/EventHeader.html,1,['simpl'],['simple']
Usability,". Execution of TQUndoManager::Undo(), TQUndoManager::Redo() methods only invokes the top level command as a whole.; Merge method is analogous to logical join operation.; Note: Merge method invokes redo action. ; Definition at line 329 of file TQCommand.cxx. ◆ operator=(). TQCommand & TQCommand::operator= ; (; const TQCommand & ; ). private . ◆ PrintCollectionHeader(). void TQCommand::PrintCollectionHeader ; (; Option_t * ; option); const. overrideprotectedvirtual . Print collection header. ; Reimplemented from TCollection.; Definition at line 864 of file TQCommand.cxx. ◆ Redo(). void TQCommand::Redo ; (; Option_t * ; option = """"). virtual . Execute command and then merge commands. ; Reimplemented in TQUndoManager.; Definition at line 588 of file TQCommand.cxx. ◆ SetArgs(). void TQCommand::SetArgs ; (; Int_t ; narg, .  ; ... . ). virtual . Set do/redo and undo parameters. ; The format is SetArgs(number_of_params, redo_params, undo_params); Example: move_command->SetArgs(2, 100, 100, 200, 200);; 2 params, (100,100) - do/redo position, (200,200) - undo position ; Definition at line 465 of file TQCommand.cxx. ◆ SetName(). void TQCommand::SetName ; (; const char * ; name). virtual . Sets name of the command. ; Definition at line 832 of file TQCommand.cxx. ◆ SetRedoArgs(). void TQCommand::SetRedoArgs ; (; Int_t ; narg, .  ; ... . ). virtual . Set redo parameters. ; The format is SetRedoArgs(number_of_params, params); Example: move_command->SetRedoArgs(2, 100, 100);. Definition at line 508 of file TQCommand.cxx. ◆ SetTitle(). void TQCommand::SetTitle ; (; const char * ; title). virtual . Sets description of the command. ; Definition at line 840 of file TQCommand.cxx. ◆ SetUndoArgs(). void TQCommand::SetUndoArgs ; (; Int_t ; narg, .  ; ... . ). virtual . Set undo parameters. ; The format is SetUndoArgs(number_of_params, params); Example: move_command->SetUndoArgs(2, 200, 200);. Definition at line 542 of file TQCommand.cxx. ◆ Streamer(). void TQCommand::Streamer ; (; TBuffer ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQCommand.html:42802,undo,undo,42802,doc/master/classTQCommand.html,https://root.cern,https://root.cern/doc/master/classTQCommand.html,1,['undo'],['undo']
Usability,". Extra space (in %) around interpolated area for fHistogram. ; Definition at line 55 of file TGraph2D.h. ◆ fMaximum. Double_t TGraph2D::fMaximum. protected . Maximum value for plotting along z. ; Definition at line 54 of file TGraph2D.h. ◆ fMaxIter. Int_t TGraph2D::fMaxIter. protected . Maximum number of iterations to find Delaunay triangles. ; Definition at line 48 of file TGraph2D.h. ◆ fMinimum. Double_t TGraph2D::fMinimum. protected . Minimum value for plotting along z. ; Definition at line 53 of file TGraph2D.h. ◆ fNpoints. Int_t TGraph2D::fNpoints. protected . Number of points in the data set. ; Definition at line 45 of file TGraph2D.h. ◆ fNpx. Int_t TGraph2D::fNpx. protected . Number of bins along X in fHistogram. ; Definition at line 46 of file TGraph2D.h. ◆ fNpy. Int_t TGraph2D::fNpy. protected . Number of bins along Y in fHistogram. ; Definition at line 47 of file TGraph2D.h. ◆ fPainter. TVirtualHistPainter* TGraph2D::fPainter. protected . !Pointer to histogram painter ; Definition at line 61 of file TGraph2D.h. ◆ fSize. Int_t TGraph2D::fSize. protected . !Real size of fX, fY and fZ ; Definition at line 49 of file TGraph2D.h. ◆ fUserHisto. Bool_t TGraph2D::fUserHisto. private . Definition at line 67 of file TGraph2D.h. ◆ fX. Double_t* TGraph2D::fX. protected . [fNpoints] ; Definition at line 50 of file TGraph2D.h. ◆ fY. Double_t* TGraph2D::fY. protected . [fNpoints] Data set to be plotted ; Definition at line 51 of file TGraph2D.h. ◆ fZ. Double_t* TGraph2D::fZ. protected . [fNpoints] ; Definition at line 52 of file TGraph2D.h. ◆ fZout. Double_t TGraph2D::fZout. protected . fHistogram bin height for points lying outside the interpolated area ; Definition at line 56 of file TGraph2D.h. Libraries for TGraph2D:. [legend]; The documentation for this class was generated from the following files:; hist/hist/inc/TGraph2D.h; hist/hist/src/TGraph2D.cxx. TGraph2D. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2D.html:59589,Guid,Guide,59589,doc/master/classTGraph2D.html,https://root.cern,https://root.cern/doc/master/classTGraph2D.html,1,['Guid'],['Guide']
Usability,". FileStat_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » FileStat_t. class FileStat_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es. Function Members (Methods); public:. ~FileStat_t(); FileStat_t(); FileStat_t(FileStat_t&&); FileStat_t(const FileStat_t&); FileStat_t&operator=(FileStat_t&&); FileStat_t&operator=(const FileStat_t&). Data Members; public:. Long_tfDevdevice id; Int_tfGidgroup id of owner; Long_tfInoinode; Bool_tfIsLinksymbolic link; Int_tfModeprotection (combination of EFileModeMask bits); Long_tfMtimemodification date; Long64_tfSizetotal size in bytes; Int_tfUiduser id of owner; TStringfUrlend point url of file. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FileStat_t(); { }. TSystem& operator=(const TSystem&). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/FileStat_t.html:637,simpl,simple,637,root/html602/FileStat_t.html,https://root.cern,https://root.cern/root/html602/FileStat_t.html,1,['simpl'],['simple']
Usability,". FileStat_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » FileStat_t. class FileStat_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es. Function Members (Methods); public:. ~FileStat_t(); FileStat_t(); FileStat_t(FileStat_t&&); FileStat_t(const FileStat_t&); FileStat_t&operator=(FileStat_t&&); FileStat_t&operator=(const FileStat_t&). Data Members; public:. Long_tfDevdevice id; Int_tfGidgroup id of owner; Long_tfInoinode; Bool_tfIsLinksymbolic link; Int_tfModeprotection (combination of EFileModeMask bits); Long_tfMtimemodification date; Long64_tfSizetotal size in bytes; Int_tfUiduser id of owner; TStringfUrlend point url of file. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FileStat_t(); { }. TSystem& operator=(const TSystem&). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 17:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/FileStat_t.html:637,simpl,simple,637,root/html604/FileStat_t.html,https://root.cern,https://root.cern/root/html604/FileStat_t.html,1,['simpl'],['simple']
Usability,". First Steps With ROOT | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome First Steps With ROOT. The ROOT framework provides a number of classes, grouped into several class cathegories. To start using ROOT, you may find",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/first-steps-root-1.html:139,Guid,Guides,139,d/first-steps-root-1.html,https://root.cern,https://root.cern/d/first-steps-root-1.html,4,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Fit Panel | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation » Courses » Introductory Tutorials Fit Panel. As you can see, the fit (solid line) doesn't really describe the data: a polynomial is nowhere ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/fit-panel.html:127,Guid,Guides,127,d/fit-panel.html,https://root.cern,https://root.cern/d/fit-panel.html,3,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Formatting Comments for Doxygen | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development Formatting Comments for Doxygen. The ROOT team has adopted Doxygen for generating the reference manual. Here you will fin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/formatting-comments-doxygen.html:149,Guid,Guides,149,d/formatting-comments-doxygen.html,https://root.cern,https://root.cern/d/formatting-comments-doxygen.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Frequently Asked Questions | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation Frequently Asked Questions; [expand all][collapse all]. How to generate a dictionary . A dictionary is a source file that on",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/faq-page.html:144,Guid,Guides,144,d/faq-page.html,https://root.cern,https://root.cern/d/faq-page.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Function documentation; MethodTMlpANN(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""3000:N-1:N-2"", TDirectory* theTargetDir = 0); standard constructor. MethodTMlpANN(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); TMlpANN can handle classification with 2 classes. void Init( void ); default initialisations. ~MethodTMlpANN( void ); destructor. void CreateMLPOptions(TString ); translates options from option string into TMlpANN language. void DeclareOptions(); define the options (their key words) that can be set in the option string; know options:; NCycles <integer> Number of training cycles (too many cycles could overtrain the network); HiddenLayers <string> Layout of the hidden layers (nodes per layer); * specifiactions for each hidden layer are separated by commata; * for each layer the number of nodes can be either absolut (simply a number); or relative to the number of input nodes to the neural net (N); * there is always a single node in the output layer; example: a net with 6 input nodes and ""Hiddenlayers=N-1,N-2"" has 6,5,4,1 nodes in the; layers 1,2,3,4, repectively. void ProcessOptions(); builds the neural network as specified by the user. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); calculate the value of the neural net for the current event. void Train( void ); performs TMlpANN training; available learning methods:. TMultiLayerPerceptron::kStochastic; TMultiLayerPerceptron::kBatch; TMultiLayerPerceptron::kSteepestDescent; TMultiLayerPerceptron::kRibierePolak; TMultiLayerPerceptron::kFletcherReeves; TMultiLayerPerceptron::kBFGS. TMultiLayerPerceptron wants test and training tree at once; so merge the training and testing trees from the MVA factory first:. void AddWeightsXMLTo(void* parent) const; write weigh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodTMlpANN.html:17309,simpl,simply,17309,root/html528/TMVA__MethodTMlpANN.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodTMlpANN.html,4,['simpl'],['simply']
Usability,". Git How Tos | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development » Git Primer Git How Tos. Overview; Building on the tips and other points explained elsewhere, this workflow has the following advantages re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/git-how-tos.html:1001,Guid,Guides,1001,d/git-how-tos.html,https://root.cern,https://root.cern/d/git-how-tos.html,1,['Guid'],['Guides']
Usability,". Git How Tos | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development » Git Primer Git How Tos. Overview; Building on the tips and other points explained elsewhere, this workflow has the following advantages rel",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/git-how-tos.html:129,Guid,Guides,129,d/git-how-tos.html,https://root.cern,https://root.cern/d/git-how-tos.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Git Primer | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development Git Primer. These links collect the minimal amount of knowledge about git a ROOT contributor needs to know:. Git How Tos; NoSY Workflow; Git T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/git-primer.html:128,Guid,Guides,128,d/git-primer.html,https://root.cern,https://root.cern/d/git-primer.html,3,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Git Tips and Tricks | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development » Git Primer Git Tips and Tricks. Overview; This page gives some helpful hints and tricks on using git, along with a suggested work-f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/git-tips-and-tricks.html:137,Guid,Guides,137,d/git-tips-and-tricks.html,https://root.cern,https://root.cern/d/git-tips-and-tricks.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Github ssh key | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development » Git Primer Github ssh key. Using Github with ssh keys is preferred, as it's much easier to use. Here is how to set it up:; 1. Create an ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/github-ssh-key.html:132,Guid,Guides,132,d/github-ssh-key.html,https://root.cern,https://root.cern/d/github-ssh-key.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Guidelines for submitting a bug | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Support Guidelines for submitting a bug. Introduction; The RootTalk mailing list and forum can be used to pass information of general",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/guidelines-submitting-bug.html:2,Guid,Guidelines,2,d/guidelines-submitting-bug.html,https://root.cern,https://root.cern/d/guidelines-submitting-bug.html,3,"['Guid', 'guid']","['Guidelines', 'Guides', 'guidelines']"
Usability,. HistogramManager. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TEST; » HistogramManager. class HistogramManager. Event and Track classes. The Event class is a naive/simple example of an event structure.; public:; char fType[20];; char *fEventName; //run+event number in character format; Int_t fNtrack;; Int_t fNseg;; Int_t fNvertex;; UInt_t fFlag;; Double32_t fTemperature;; Int_t fMeasures[10];; Double32_t fMatrix[4][4];; Double32_t *fClosestDistance; //[fNvertex] indexed array!; EventHeader fEvtHdr;; TClonesArray *fTracks;; TRefArray *fHighPt; //array of High Pt tracks only; TRefArray *fMuons; //array of Muon tracks only; TRef fLastTrack; //pointer to last track; TRef fHistoWeb; //EXEC:GetHistoWeb reference to an histogram in a TWebFile; TH1F *fH;; TBits fTriggerBits; //Bits triggered by this event. The EventHeader class has 3 data members (integers):; public:; Int_t fEvtNum;; Int_t fRun;; Int_t fDate;. The Event data member fTracks is a pointer to a TClonesArray.; It is an array of a variable number of tracks per event.; Each element of the array is an object of class Track with the members:; private:; Float_t fPx; //X component of the momentum; Float_t fPy; //Y component of the momentum; Float_t fPz; //Z component of the momentum; Float_t fRandom; //A random track quantity; Float_t fMass2; //The mass square of this particle; Float_t fBx; //X intercept at the vertex; Float_t fBy; //Y intercept at the vertex; Float_t fMeanCharge; //Mean charge deposition of all hits of this track; Float_t fXfirst; //X coordinate of the first point; Float_t fXlast; //X coordinate of the last point; Float_t fYfirst; //Y coordinate of the first point; Float_t fYlast; //Y coordinate of the last point; Float_t fZfirst; //Z coordinate of the first point; Float_t fZlast; //Z coordinate of the last point; Double32_t fCharg,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/HistogramManager.html:337,simpl,simple,337,root/html528/HistogramManager.html,https://root.cern,https://root.cern/root/html528/HistogramManager.html,1,['simpl'],['simple']
Usability,". Histogramming in a Selector | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation » Courses » Introductory Tutorials Histogramming in a Selector. Preparation; As previously, we provide a ready-made TSelect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/histogramming-selector.html:145,Guid,Guides,145,d/histogramming-selector.html,https://root.cern,https://root.cern/d/histogramming-selector.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Histogramming | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation » Courses » Introductory Tutorials Histogramming. Preparation; Start from the previously used macro (AnalyzeTree.C).; Adding a Variable; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/histogramming.html:131,Guid,Guides,131,d/histogramming.html,https://root.cern,https://root.cern/d/histogramming.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". How To | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation How To. Developer's Tips . Graphics and GUI . Histograms . Input/Output . Jupyter Notebooks . Language Bindings . Legacy . Linear Algebra . Mult",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/howtos.html:124,Guid,Guides,124,d/howtos.html,https://root.cern,https://root.cern/d/howtos.html,3,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". How to create a ROOTbook? | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome How to create a ROOTbook?. ROOT 6.07 Onwards; The minimal version of Jupyter required in this case is 4.0.; Note that the sudo command might ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/how/how-create-rootbook.html:143,Guid,Guides,143,d/how/how-create-rootbook.html,https://root.cern,https://root.cern/d/how/how-create-rootbook.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". How to setup ROOT externals from AFS/CVMFS | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development How to setup ROOT externals from AFS/CVMFS. The following instructions are useful for setting up an environmen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/how-setup-root-externals-afscvmfs.html:160,Guid,Guides,160,d/how-setup-root-externals-afscvmfs.html,https://root.cern,https://root.cern/d/how-setup-root-externals-afscvmfs.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". How to use the ROOT Jenkins | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development How to use the ROOT Jenkins. The ROOT project uses a Jenkins instance to schedule a number of software development procedures",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/how-use-root-jenkins.html:145,Guid,Guides,145,d/how-use-root-jenkins.html,https://root.cern,https://root.cern/d/how-use-root-jenkins.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". If \(\mbox{par}\) is not specified, all variable parameters are scanned in sequence. The number of points \(\mbox{npoints}\) in the scan is 40 by default, and cannot exceed 100. The range of the scan is by default 2 standard deviations on each side of the current best value, but can be specified as from \(\mbox{low}\) to \(\mbox{high}\). After each scan, if a new minimum is found, the best parameter values are retained as start values for future scans or minimizations. The curve resulting from each scan can be plotted on the output terminal using MnPlot [api:plot] in order to show the approximate behaviour of the function.; 5.10.2 ScanMinimizer; Although the \(\mbox{SCAN}\) method is not intended for minimization it can be used as a minimizer in its most primitive form.; 5.11 MnSimplex and SimplexMinimizer; [api:simplex]; \(\mbox{SIMPLEX}\) is a function minimization method using the simplex method of Nelder and Mead. MnSimplex provides minimization of the function by the method of \(\mbox{SIMPLEX}\) and the functionality for parameters interaction. It also retains the result from the last minimization in case the user may want to do subsequent minimization steps with parameter interactions in between the minimization requests. The minimization is done by the SimplexMinimizer. Minimization of the function can be done by directly using the SimplexMinimizer if no parameters interaction is required. As \(\mbox{SIMPLEX}\) is a stepping method it does not produce a covariance matrix.; 5.11.1 MnSimplex(const FCNBase&, const std::vector\(<\)double\(>\)&,. const std::vector\(<\)double\(>\)&, unsigned int) ###; Constructor for the minimal required interface: \(\mbox{FCN}\) and starting values for parameters and uncertainties. Optional the strategy level in MnStrategy can be specified.; 5.11.2 MnSimplex(const FCNBase&, const MnUserParameters&,. unsigned int) ###; Constructor for high level parameters interface. Optional the strategy level in MnStrategy can be specified.; 5.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/minuit2/Minuit2.html:49738,SIMPL,SIMPLEX,49738,root/htmldoc/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/htmldoc/guides/minuit2/Minuit2.html,1,['SIMPL'],['SIMPLEX']
Usability,". If \(\mbox{par}\) is not specified, all variable parameters are scanned in sequence. The number of points \(\mbox{npoints}\) in the scan is 40 by default, and cannot exceed 100. The range of the scan is by default 2 standard deviations on each side of the current best value, but can be specified as from \(\mbox{low}\) to \(\mbox{high}\). After each scan, if a new minimum is found, the best parameter values are retained as start values for future scans or minimizations. The curve resulting from each scan can be plotted on the output terminal using MnPlot [api:plot] in order to show the approximate behaviour of the function.; 5.10.2 ScanMinimizer; Although the \(\mbox{SCAN}\) method is not intended for minimization it can be used as a minimizer in its most primitive form.; 5.11 MnSimplex and SimplexMinimizer; [api:simplex]; \(\mbox{SIMPLEX}\) is a function minimization method using the simplex method of Nelder and Mead. MnSimplex provides minimization of the function by the method of \(\mbox{SIMPLEX}\) and the functionality for parameters interaction. It also retains the result from the last minimization in case the user may want to do subsequent minimization steps with parameter interactions in between the minimization requests. The minimization is done by the SimplexMinimizer. Minimization of the function can be done by directly using the SimplexMinimizer if no parameters interaction is required. As \(\mbox{SIMPLEX}\) is a stepping method it does not produce a covariance matrix.; 5.11.1 MnSimplex(const FCNBase&, const std::vector\(<\)double\(>\)&,; const std::vector\(<\)double\(>\)&, unsigned int); Constructor for the minimal required interface: \(\mbox{FCN}\) and starting values for parameters and uncertainties. Optional the strategy level in MnStrategy can be specified.; 5.11.2 MnSimplex(const FCNBase&, const MnUserParameters&,; unsigned int); Constructor for high level parameters interface. Optional the strategy level in MnStrategy can be specified.; 5.11.3 MnS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:53743,SIMPL,SIMPLEX,53743,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,1,['SIMPL'],['SIMPLEX']
Usability,". Implements ROOT::Detail::RDF::RNodeBase.; Definition at line 140 of file RFilter.hxx. ◆ Report(). template<typename FilterF , typename PrevNodeRaw > . void ROOT::Detail::RDF::RFilter< FilterF, PrevNodeRaw >::Report ; (; ROOT::RDF::RCutFlowReport & ; rep); const. inlinefinalvirtual . Implements ROOT::Detail::RDF::RNodeBase.; Definition at line 138 of file RFilter.hxx. ◆ StopProcessing(). template<typename FilterF , typename PrevNodeRaw > . void ROOT::Detail::RDF::RFilter< FilterF, PrevNodeRaw >::StopProcessing ; (; ). inlinefinalvirtual . Implements ROOT::Detail::RDF::RNodeBase.; Definition at line 146 of file RFilter.hxx. ◆ TriggerChildrenCount(). template<typename FilterF , typename PrevNodeRaw > . void ROOT::Detail::RDF::RFilter< FilterF, PrevNodeRaw >::TriggerChildrenCount ; (; ). inlinefinalvirtual . Implements ROOT::Detail::RDF::RFilterBase.; Definition at line 161 of file RFilter.hxx. Member Data Documentation. ◆ fFilter. template<typename FilterF , typename PrevNodeRaw > . FilterF ROOT::Detail::RDF::RFilter< FilterF, PrevNodeRaw >::fFilter. private . Definition at line 65 of file RFilter.hxx. ◆ fPrevNode. template<typename FilterF , typename PrevNodeRaw > . PrevNode_t& ROOT::Detail::RDF::RFilter< FilterF, PrevNodeRaw >::fPrevNode. private . Definition at line 69 of file RFilter.hxx. ◆ fPrevNodePtr. template<typename FilterF , typename PrevNodeRaw > . const std::shared_ptr<PrevNode_t> ROOT::Detail::RDF::RFilter< FilterF, PrevNodeRaw >::fPrevNodePtr. private . Definition at line 68 of file RFilter.hxx. ◆ fValues. template<typename FilterF , typename PrevNodeRaw > . std::vector<std::array<RColumnReaderBase *, ColumnTypes_t::list_size> > ROOT::Detail::RDF::RFilter< FilterF, PrevNodeRaw >::fValues. private . Column readers per slot and per input column. ; Definition at line 67 of file RFilter.hxx. tree/dataframe/inc/ROOT/RDF/RFilter.hxx. ROOTDetailRDFRFilter. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:02 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RFilter.html:11797,Guid,Guide,11797,doc/master/classROOT_1_1Detail_1_1RDF_1_1RFilter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RFilter.html,1,['Guid'],['Guide']
Usability,. Implements RooAbsArg.; Definition at line 34 of file RooFirstMoment.h. ◆ DeclFileName(). static const char * RooFirstMoment::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 47 of file RooFirstMoment.h. ◆ evaluate(). double RooFirstMoment::evaluate ; (; ); const. overrideprotectedvirtual . Calculate value. ; Implements RooAbsReal.; Definition at line 129 of file RooFirstMoment.cxx. ◆ iF(). const RooAbsReal & RooFirstMoment::iF ; (; ). inline . Definition at line 38 of file RooFirstMoment.h. ◆ IsA(). TClass * RooFirstMoment::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsMoment.; Definition at line 47 of file RooFirstMoment.h. ◆ ixF(). const RooAbsReal & RooFirstMoment::ixF ; (; ). inline . Definition at line 37 of file RooFirstMoment.h. ◆ Streamer(). void RooFirstMoment::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsMoment. ◆ StreamerNVirtual(). void RooFirstMoment::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 47 of file RooFirstMoment.h. ◆ xF(). const RooAbsReal & RooFirstMoment::xF ; (; ). inline . Definition at line 36 of file RooFirstMoment.h. Member Data Documentation. ◆ _if. RooRealProxy RooFirstMoment::_if. protected . Int(F(x))dx ;. ; Definition at line 44 of file RooFirstMoment.h. ◆ _ixf. RooRealProxy RooFirstMoment::_ixf. protected . Int(X*F(X))dx ;. ; Definition at line 43 of file RooFirstMoment.h. ◆ _xf. RooRealProxy RooFirstMoment::_xf. protected . X*F. ; Definition at line 42 of file RooFirstMoment.h. Libraries for RooFirstMoment:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooFirstMoment.h; roofit/roofitcore/src/RooFirstMoment.cxx. RooFirstMoment. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:53 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFirstMoment.html:64114,Guid,Guide,64114,doc/master/classRooFirstMoment.html,https://root.cern,https://root.cern/doc/master/classRooFirstMoment.html,1,['Guid'],['Guide']
Usability,". Index of TMVA. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT; » TMVA. Index of TMVA; This directory contains the TMVA Multi-Variate-Analysis classes.; See:. The full description of the Multi Variate Analysis package; ; The TMVA Users Guide; The TMVA Options Reference. Class Index; Jump to; T; TMVA:; TMVA::I; TMVA::M; TMVA::Me; TMVA::MethodR; TMVA::P; TMVA::S; TMVA::T; TMVA::TN; TMVA::Ti. TMVA ; TMVA::BDTEventWrapper ; TMVA::BinarySearchTree Binary search tree including volume search method ; TMVA::BinarySearchTreeNode Node for the BinarySearchTree; TMVA::BinaryTree Base class for BinarySearch and Decision Trees; TMVA::CCPruner ; TMVA::CCTreeWrapper ; TMVA::Config Singleton class for global configuration settings; TMVA::Config::IONames ; TMVA::Config::VariablePlotting ; TMVA::Configurable Virtual base class for all TMVA method; TMVA::CostComplexityPruneTool ; TMVA::CrossEntropy Implementation of the CrossEntropy as separation criterion; TMVA::DecisionTree implementation of a Decision Tree; TMVA::DecisionTreeNode Node for the Decision Tree ; TMVA::Factory The factory creates all MVA methods, and performs their training and testing; TMVA::FitterBase Baseclass for fitters; TMVA::GeneticAlgorithm Genetic algorithm controller; TMVA::GeneticFitter Fitter using a Genetic Algorithm; TMVA::GeneticGenes Genes definition for genetic algorithm; TMVA::GeneticPopulation Population definition for genetic algorithm; TMVA::GeneticRange Range definition for genetic algorithm; TMVA::GiniIndex Implementation of the GiniIndex as separation criterion; TMVA::GiniIndexWithLaplace Implementation of the GiniIndexWithLaplace as separation criterion; TMVA::IFitterTarget base class for a fitter ""target""; TMVA::IMethod Method Interface; TMVA::Interval Interval definition, continous and discrete; TMVA::KDEKernel Kernel density estimator for PDF smoothing; TMVA::MCFitter Fitter using Monte Carlo sampling of parameters ; TMVA::MethodANNBase Base class for TMVA ANNs; TMVA::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA_Index.html:262,Guid,Guide,262,root/html528/TMVA_Index.html,https://root.cern,https://root.cern/root/html528/TMVA_Index.html,1,['Guid'],['Guide']
Usability,". Index of TMVA. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT; » TMVA. Index of TMVA; This directory contains the TMVA Multi-Variate-Analysis classes.; See:. The full description of the Multi Variate Analysis package; ; The TMVA Users Guide; The TMVA Options Reference. Class Index; Jump to; T; TMVA:; TMVA::I; TMVA::M; TMVA::Me; TMVA::MethodS; TMVA::P; TMVA::PDEFoamK; TMVA::R; TMVA::T; TMVA::TS; TMVA::V. TMVA ; TMVA::BDTEventWrapper ; TMVA::BinarySearchTree Binary search tree including volume search method ; TMVA::BinarySearchTreeNode Node for the BinarySearchTree; TMVA::BinaryTree Base class for BinarySearch and Decision Trees; TMVA::CCPruner ; TMVA::CCTreeWrapper ; TMVA::Config Singleton class for global configuration settings; TMVA::Config::IONames ; TMVA::Config::VariablePlotting ; TMVA::Configurable Virtual base class for all TMVA method; TMVA::CostComplexityPruneTool ; TMVA::CrossEntropy Implementation of the CrossEntropy as separation criterion; TMVA::DecisionTree implementation of a Decision Tree; TMVA::DecisionTreeNode Node for the Decision Tree ; TMVA::Factory The factory creates all MVA methods, and performs their training and testing; TMVA::FitterBase Baseclass for fitters; TMVA::GeneticAlgorithm Genetic algorithm controller; TMVA::GeneticFitter Fitter using a Genetic Algorithm; TMVA::GeneticGenes Genes definition for genetic algorithm; TMVA::GeneticPopulation Population definition for genetic algorithm; TMVA::GeneticRange Range definition for genetic algorithm; TMVA::GiniIndex Implementation of the GiniIndex as separation criterion; TMVA::GiniIndexWithLaplace Implementation of the GiniIndexWithLaplace as separation criterion; TMVA::IFitterTarget base class for a fitter ""target""; TMVA::IMethod Method Interface; TMVA::Interval Interval definition, continous and discrete; TMVA::KDEKernel Kernel density estimator for PDF smoothing; TMVA::LogInterval Interval definition, continous and discrete; TMVA::MCFitter Fitter using Monte Carlo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA_Index.html:262,Guid,Guide,262,root/html534/TMVA_Index.html,https://root.cern,https://root.cern/root/html534/TMVA_Index.html,1,['Guid'],['Guide']
Usability,". Index of TMVA. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT; » TMVA. Index of TMVA; This directory contains the TMVA Multi-Variate-Analysis classes.; See:. The full description of the Multi Variate Analysis package; ; The TMVA Users Guide; The TMVA Options Reference. Class Index; Jump to; T; TMVA:; TMVA::I; TMVA::M; TMVA::Me; TMVA::MethodS; TMVA::P; TMVA::PDEFoamM; TMVA::S; TMVA::T; TMVA::TN; TMVA::Ty. TMVA ; TMVA::BDTEventWrapper ; TMVA::BinarySearchTree Binary search tree including volume search method; TMVA::BinarySearchTreeNode Node for the BinarySearchTree; TMVA::BinaryTree Base class for BinarySearch and Decision Trees; TMVA::CCPruner ; TMVA::CCTreeWrapper ; TMVA::Config Singleton class for global configuration settings; TMVA::Config::IONames ; TMVA::Config::VariablePlotting ; TMVA::Configurable Virtual base class for all TMVA method; TMVA::CostComplexityPruneTool ; TMVA::CrossEntropy Implementation of the CrossEntropy as separation criterion; TMVA::DecisionTree implementation of a Decision Tree; TMVA::DecisionTreeNode Node for the Decision Tree; TMVA::Event ; TMVA::FitterBase Baseclass for fitters; TMVA::GeneticAlgorithm Genetic algorithm controller; TMVA::GeneticFitter Fitter using a Genetic Algorithm; TMVA::GeneticGenes Genes definition for genetic algorithm; TMVA::GeneticPopulation Population definition for genetic algorithm; TMVA::GeneticRange Range definition for genetic algorithm; TMVA::GiniIndex Implementation of the GiniIndex as separation criterion; TMVA::GiniIndexWithLaplace Implementation of the GiniIndexWithLaplace as separation criterion; TMVA::IFitterTarget base class for a fitter ""target""; TMVA::IMethod Method Interface; TMVA::Interval Interval definition, continous and discrete; TMVA::KDEKernel Kernel density estimator for PDF smoothing; TMVA::LogInterval Interval definition, continous and discrete; TMVA::MCFitter Fitter using Monte Carlo sampling of parameters; TMVA::MethodANNBase Base class for TMVA ANNs; TMVA::Me",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA_Index.html:262,Guid,Guide,262,root/html602/TMVA_Index.html,https://root.cern,https://root.cern/root/html602/TMVA_Index.html,1,['Guid'],['Guide']
Usability,". Index of TMVA. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT; » TMVA. Index of TMVA; This directory contains the TMVA Multi-Variate-Analysis classes.; See:. The full description of the Multi Variate Analysis package; ; The TMVA Users Guide; The TMVA Options Reference. Class Index; Jump to; T; TMVA:; TMVA::I; TMVA::M; TMVA::Me; TMVA::MethodS; TMVA::P; TMVA::PDEFoamM; TMVA::S; TMVA::T; TMVA::TS; TMVA::V. TMVA ; TMVA::BDTEventWrapper ; TMVA::BinarySearchTree Binary search tree including volume search method ; TMVA::BinarySearchTreeNode Node for the BinarySearchTree; TMVA::BinaryTree Base class for BinarySearch and Decision Trees; TMVA::CCPruner ; TMVA::CCTreeWrapper ; TMVA::Config Singleton class for global configuration settings; TMVA::Config::IONames ; TMVA::Config::VariablePlotting ; TMVA::Configurable Virtual base class for all TMVA method; TMVA::CostComplexityPruneTool ; TMVA::CrossEntropy Implementation of the CrossEntropy as separation criterion; TMVA::DecisionTree implementation of a Decision Tree; TMVA::DecisionTreeNode Node for the Decision Tree ; TMVA::Factory The factory creates all MVA methods, and performs their training and testing; TMVA::FitterBase Baseclass for fitters; TMVA::GeneticAlgorithm Genetic algorithm controller; TMVA::GeneticFitter Fitter using a Genetic Algorithm; TMVA::GeneticGenes Genes definition for genetic algorithm; TMVA::GeneticPopulation Population definition for genetic algorithm; TMVA::GeneticRange Range definition for genetic algorithm; TMVA::GiniIndex Implementation of the GiniIndex as separation criterion; TMVA::GiniIndexWithLaplace Implementation of the GiniIndexWithLaplace as separation criterion; TMVA::IFitterTarget base class for a fitter ""target""; TMVA::IMethod Method Interface; TMVA::Interval Interval definition, continous and discrete; TMVA::KDEKernel Kernel density estimator for PDF smoothing; TMVA::MCFitter Fitter using Monte Carlo sampling of parameters ; TMVA::MethodANNBase Base class for TM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA_Index.html:262,Guid,Guide,262,root/html530/TMVA_Index.html,https://root.cern,https://root.cern/root/html530/TMVA_Index.html,2,['Guid'],['Guide']
Usability,". Index of TMVA. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT; » TMVA. Index of TMVA; This directory contains the TMVA Multi-Variate-Analysis classes.; See:. The full description of the Multi Variate Analysis package; ; The TMVA Users Guide; The TMVA Options Reference. Class Index; Jump to; T; TMVA:; TMVA::I; TMVA::M; TMVA::Me; TMVA::MethodS; TMVA::P; TMVA::S; TMVA::T; TMVA::TS; TMVA::V. TMVA ; TMVA::BDTEventWrapper ; TMVA::BinarySearchTree Binary search tree including volume search method ; TMVA::BinarySearchTreeNode Node for the BinarySearchTree; TMVA::BinaryTree Base class for BinarySearch and Decision Trees; TMVA::CCPruner ; TMVA::CCTreeWrapper ; TMVA::Config Singleton class for global configuration settings; TMVA::Config::IONames ; TMVA::Config::VariablePlotting ; TMVA::Configurable Virtual base class for all TMVA method; TMVA::CostComplexityPruneTool ; TMVA::CrossEntropy Implementation of the CrossEntropy as separation criterion; TMVA::DecisionTree implementation of a Decision Tree; TMVA::DecisionTreeNode Node for the Decision Tree ; TMVA::Event ; TMVA::Factory The factory creates all MVA methods, and performs their training and testing; TMVA::FitterBase Baseclass for fitters; TMVA::GeneticAlgorithm Genetic algorithm controller; TMVA::GeneticFitter Fitter using a Genetic Algorithm; TMVA::GeneticGenes Genes definition for genetic algorithm; TMVA::GeneticPopulation Population definition for genetic algorithm; TMVA::GeneticRange Range definition for genetic algorithm; TMVA::GiniIndex Implementation of the GiniIndex as separation criterion; TMVA::GiniIndexWithLaplace Implementation of the GiniIndexWithLaplace as separation criterion; TMVA::IFitterTarget base class for a fitter ""target""; TMVA::IMethod Method Interface; TMVA::IMetric calculates the ""distance"" between two points; TMVA::Interval Interval definition, continous and discrete; TMVA::KDEKernel Kernel density estimator for PDF smoothing; TMVA::MCFitter Fitter using Monte Carlo samp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TMVA_Index.html:262,Guid,Guide,262,root/html526/TMVA_Index.html,https://root.cern,https://root.cern/root/html526/TMVA_Index.html,1,['Guid'],['Guide']
Usability,. Index of TMVA. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT; » TMVA. Index of TMVA; This directory contains the TMVA Multi-Variate-Analysis classes.; See:. The full description of the Multi Variate Analysis package; ; The TMVA Users Guide; The TMVA Options Reference. TMVA Modules; TMVA; TMVAGUI. » Last changed: 2015-09-08 17:32 » Last generated: 2015-09-08 17:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA_Index.html:262,Guid,Guide,262,root/html604/TMVA_Index.html,https://root.cern,https://root.cern/root/html604/TMVA_Index.html,1,['Guid'],['Guide']
Usability,". Int_t Incorporate(TObject* obj, TList* out, Bool_t& merged); Incorporate object 'newobj' in the list 'outlist'.; The object is merged with an object of the same name already existing in; the list, or just added.; The boolean merged is set to kFALSE when the object is just added to 'outlist';; this happens if the Merge() method does not exist or if a object named as 'obj'; is not already in the list. If the obj is not 'merged' than it should not be; deleted, unless outlist is not owner of its objects.; Return 0 on success, -1 on error. TObject * HandleHistogram(TObject* obj, Bool_t& merged); Low statistic histograms need a special treatment when using autobin. Bool_t HistoSameAxis(TH1* h0, TH1* h1); Return kTRUE is the histograms 'h0' and 'h1' have the same binning and ranges; on the axis (i.e. if they can be just Add-ed for merging). void StoreOutput(TList* out); Store received output list. TList * MergeFeedback(); Merge feedback lists. void StoreFeedback(TObject* slave, TList* out); Store feedback results from the specified slave. void SetupFeedback(); Setup reporting of feedback objects. void StopFeedback(); Stop reporting of feedback objects. Bool_t HandleTimer(TTimer* timer); Send feedback objects to client. TDSetElement * GetNextPacket(TSlave* slave, TMessage* r); Get next packet for specified slave. Bool_t IsClient() const; Is the player running on the client?. Long64_t DrawSelect(TDSet* set, const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Draw (support for TChain::Draw()).; Returns -1 in case of error or number of selected events in case of success. void SetInitTime(); Set init time. TVirtualPacketizer * GetPacketizer() const; { return 0; }. void Progress(Long64_t total, Long64_t processed). void Progress(TSlave* , Long64_t total, Long64_t processed); { Progress(total, processed); }. void Progress(Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Flo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofPlayerRemote.html:19280,feedback,feedback,19280,root/html532/TProofPlayerRemote.html,https://root.cern,https://root.cern/root/html532/TProofPlayerRemote.html,4,['feedback'],['feedback']
Usability,". Int_t ReadBufferPrefetch(char* buf, Long64_t pos, Int_t len). Int_t ReadBuffer(char* buf, Long64_t pos, Int_t len); Read buffer at position pos.; If pos is in the list of prefetched blocks read from fBuffer.; Otherwise try to fill the cache from the list of selected branches,; and recheck if pos is now in the list.; Returns; -1 in case of read failure,; 0 in case not in cache,; 1 in case read from cache.; This function overloads TFileCacheRead::ReadBuffer. void ResetCache(); This will simply clear the cache. void SetEntryRange(Long64_t emin, Long64_t emax); Set the minimum and maximum entry number to be processed; this information helps to optimize the number of baskets to read; when prefetching the branch buffers. void SetLearnEntries(Int_t n = 10); Static function to set the number of entries to be used in learning mode; The default value for n is 10. n must be >= 1. void StartLearningPhase(); The name should be enough to explain the method.; The only additional comments is that the cache is cleaned before; the new learning phase. void StopLearningPhase(); This is the counterpart of StartLearningPhase() and can be used to stop; the learning phase. It's useful when the user knows exactly what branches; he is going to use.; For the moment it's just a call to FillBuffer() since that method; will create the buffer lists from the specified branches. void UpdateBranches(TTree* tree, Bool_t owner = kFALSE); Update pointer to current Tree and recompute pointers to the branches in the cache. TTreeCache(const TTreeCache& ). TTreeCache& operator=(const TTreeCache& ). Bool_t IsLearning() const; {return fIsLearning;}. » Author: Rene Brun 04/06/2006 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/tree:$Id: TTreeCache.h 39275 2011-05-19 18:17:37Z pcanal $ » Last generated: 2011-07-04 15:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTreeCache.html:22504,learn,learning,22504,root/html530/TTreeCache.html,https://root.cern,https://root.cern/root/html530/TTreeCache.html,2,['learn'],['learning']
Usability,". Int_t TGaxis::fLabelColor. protected . Color for labels. ; Definition at line 37 of file TGaxis.h. ◆ fLabelFont. Int_t TGaxis::fLabelFont. protected . Font for labels. ; Definition at line 38 of file TGaxis.h. ◆ fLabelOffset. Float_t TGaxis::fLabelOffset. protected . Offset of label wrt axis. ; Definition at line 32 of file TGaxis.h. ◆ fLabelSize. Float_t TGaxis::fLabelSize. protected . Size of labels in NDC. ; Definition at line 33 of file TGaxis.h. ◆ fModLabs. TList* TGaxis::fModLabs. protected . List of modified labels. ; Definition at line 47 of file TGaxis.h. ◆ fName. TString TGaxis::fName. protected . Axis name. ; Definition at line 41 of file TGaxis.h. ◆ fNdiv. Int_t TGaxis::fNdiv. protected . Number of divisions. ; Definition at line 36 of file TGaxis.h. ◆ fNModLabs. Int_t TGaxis::fNModLabs. protected . Number of modified labels. ; Definition at line 39 of file TGaxis.h. ◆ fTickSize. Float_t TGaxis::fTickSize. protected . Size of primary tick mark in NDC. ; Definition at line 31 of file TGaxis.h. ◆ fTimeFormat. TString TGaxis::fTimeFormat. protected . Time format, ex: 09/12/99 12:34:00. ; Definition at line 43 of file TGaxis.h. ◆ fTitle. TString TGaxis::fTitle. protected . Axis title. ; Definition at line 42 of file TGaxis.h. ◆ fTitleOffset. Float_t TGaxis::fTitleOffset. protected . Offset of title wrt axis. ; Definition at line 34 of file TGaxis.h. ◆ fTitleSize. Float_t TGaxis::fTitleSize. protected . Size of title in NDC. ; Definition at line 35 of file TGaxis.h. ◆ fWmax. Double_t TGaxis::fWmax. protected . Highest value on the axis. ; Definition at line 29 of file TGaxis.h. ◆ fWmin. Double_t TGaxis::fWmin. protected . Lowest value on the axis. ; Definition at line 28 of file TGaxis.h. Libraries for TGaxis:. [legend]; The documentation for this class was generated from the following files:; graf2d/graf/inc/TGaxis.h; graf2d/graf/src/TGaxis.cxx. TGaxis. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:55 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGaxis.html:79731,Guid,Guide,79731,doc/master/classTGaxis.html,https://root.cern,https://root.cern/doc/master/classTGaxis.html,1,['Guid'],['Guide']
Usability,". Interfacing ROOT and Spark | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation Interfacing ROOT and Spark. Presently two ways are available to exploit the widely adopted Spark technology for carrying out",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/interfacing-root-and-spark.html:144,Guid,Guides,144,d/interfacing-root-and-spark.html,https://root.cern,https://root.cern/d/interfacing-root-and-spark.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Introductory Tutorials | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation » Courses Introductory Tutorials. Overview; The goal of this tutorial session is to learn how to read a tree from a ROOT file, e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/introductory-tutorials-1.html:140,Guid,Guides,140,d/introductory-tutorials-1.html,https://root.cern,https://root.cern/d/introductory-tutorials-1.html,4,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". License | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » About License. The ROOT system is being made available under the LGPL 2.1 or (at your option) any later version, which allows ROOT to be used in a wide range",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/license.html:125,Guid,Guides,125,d/license.html,https://root.cern,https://root.cern/d/license.html,3,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Mailing List mode on Discourse | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Support Mailing List mode on Discourse. Here is how to enable the ""mailing list mode"" feature on our Discourse forum. If you visit you",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/mailing-list-mode-discourse.html:148,Guid,Guides,148,d/mailing-list-mode-discourse.html,https://root.cern,https://root.cern/d/mailing-list-mode-discourse.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Meet a TTree | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation » Courses » Introductory Tutorials Meet a TTree. We have created an example ROOT file containing a TTree: a typical data container used e.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/meet-ttree.html:130,Guid,Guides,130,d/meet-ttree.html,https://root.cern,https://root.cern/d/meet-ttree.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Meetings | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development Meetings. All ROOT-related meetings ca be found in ROOT's Indico category; the upcoming ones can be seen here to the right.; Weekly Developers M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/meetings.html:126,Guid,Guides,126,d/meetings.html,https://root.cern,https://root.cern/d/meetings.html,3,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". MemInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » MemInfo_t. class MemInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es. Function Members (Methods); public:. virtual~MemInfo_t(); static TClass*Class(); virtual TClass*IsA() const; MemInfo_t(); MemInfo_t(const MemInfo_t&); MemInfo_t&operator=(const MemInfo_t&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Int_tfMemFreefree RAM in MB; Int_tfMemTotaltotal RAM in MB; Int_tfMemUsedused RAM in MB; Int_tfSwapFreefree swap in MB; Int_tfSwapTotaltotal swap in MB; Int_tfSwapUsedused swap in MB. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MemInfo_t(); { }. virtual ~MemInfo_t(); { }. TSystem& operator=(const MemInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/MemInfo_t.html:634,simpl,simple,634,root/html602/MemInfo_t.html,https://root.cern,https://root.cern/root/html602/MemInfo_t.html,1,['simpl'],['simple']
Usability,". MemInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » MemInfo_t. class MemInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es. Function Members (Methods); public:. virtual~MemInfo_t(); static TClass*Class(); virtual TClass*IsA() const; MemInfo_t(); MemInfo_t(const MemInfo_t&); MemInfo_t&operator=(const MemInfo_t&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Int_tfMemFreefree RAM in MB; Int_tfMemTotaltotal RAM in MB; Int_tfMemUsedused RAM in MB; Int_tfSwapFreefree swap in MB; Int_tfSwapTotaltotal swap in MB; Int_tfSwapUsedused swap in MB. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MemInfo_t(); { }. virtual ~MemInfo_t(); { }. TSystem& operator=(const MemInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 17:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/MemInfo_t.html:634,simpl,simple,634,root/html604/MemInfo_t.html,https://root.cern,https://root.cern/root/html604/MemInfo_t.html,1,['simpl'],['simple']
Usability,. Member Data Documentation. ◆ fBgndColor. Pixel_t TGButton::fBgndColor. protected . actual background color ; Definition at line 81 of file TGButton.h. ◆ fgDefaultGC. const TGGC * TGButton::fgDefaultGC = nullptr. staticprotected . Definition at line 88 of file TGButton.h. ◆ fgHibckgndGC. const TGGC * TGButton::fgHibckgndGC = nullptr. staticprotected . Definition at line 89 of file TGButton.h. ◆ fgReleaseBtn. Window_t TGButton::fgReleaseBtn = 0. staticprotected . Definition at line 91 of file TGButton.h. ◆ fGroup. TGButtonGroup* TGButton::fGroup. protected . button group this button belongs to ; Definition at line 80 of file TGButton.h. ◆ fHighColor. Pixel_t TGButton::fHighColor. protected . highlight color ; Definition at line 82 of file TGButton.h. ◆ fNormGC. GContext_t TGButton::fNormGC. protected . graphics context used for drawing button ; Definition at line 77 of file TGButton.h. ◆ fState. EButtonState TGButton::fState. protected . button state ; Definition at line 75 of file TGButton.h. ◆ fStayDown. Bool_t TGButton::fStayDown. protected . true if button has to stay down ; Definition at line 76 of file TGButton.h. ◆ fStyle. UInt_t TGButton::fStyle. protected . button style (modern or classic) ; Definition at line 83 of file TGButton.h. ◆ fTHeight. UInt_t TGButton::fTHeight. protected . button height ; Definition at line 74 of file TGButton.h. ◆ fTip. TGToolTip* TGButton::fTip. protected . tool tip associated with button ; Definition at line 79 of file TGButton.h. ◆ fTWidth. UInt_t TGButton::fTWidth. protected . button width ; Definition at line 73 of file TGButton.h. ◆ fUserData. void* TGButton::fUserData. protected . pointer to user data structure ; Definition at line 78 of file TGButton.h. Libraries for TGButton:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGButton.h; gui/gui/src/TGButton.cxx. TGButton. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:55 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGButton.html:40851,Guid,Guide,40851,doc/master/classTGButton.html,https://root.cern,https://root.cern/doc/master/classTGButton.html,1,['Guid'],['Guide']
Usability,". Member Data Documentation. ◆ fEntryList. TEntryList ROOT::TTreeProcessorMT::fEntryList. private . User-defined selection of entry numbers to be processed, empty if none was provided. ; Definition at line 85 of file TTreeProcessorMT.hxx. ◆ fFileNames. const std::vector<std::string> ROOT::TTreeProcessorMT::fFileNames. private . Names of the files. ; Definition at line 82 of file TTreeProcessorMT.hxx. ◆ fFriendInfo. ROOT::TreeUtils::RFriendInfo ROOT::TTreeProcessorMT::fFriendInfo. private . Definition at line 86 of file TTreeProcessorMT.hxx. ◆ fGlobalRange. std::pair<Long64_t, Long64_t> ROOT::TTreeProcessorMT::fGlobalRange {0, std::numeric_limits<Long64_t>::max()}. private . Definition at line 96 of file TTreeProcessorMT.hxx. ◆ fgTasksPerWorkerHint. unsigned int ROOT::TTreeProcessorMT::fgTasksPerWorkerHint = 10U. staticprivate . Definition at line 94 of file TTreeProcessorMT.hxx. ◆ fPool. ROOT::TThreadExecutor ROOT::TTreeProcessorMT::fPool. private . ! Thread pool for processing. ; Definition at line 87 of file TTreeProcessorMT.hxx. ◆ fSuppressErrorsForMissingBranches. std::vector<std::string> ROOT::TTreeProcessorMT::fSuppressErrorsForMissingBranches {}. private . Definition at line 100 of file TTreeProcessorMT.hxx. ◆ fTreeNames. const std::vector<std::string> ROOT::TTreeProcessorMT::fTreeNames. private . TTree names (always same size and ordering as fFileNames) ; Definition at line 83 of file TTreeProcessorMT.hxx. ◆ fTreeView. ROOT::TThreadedObject<ROOT::Internal::TTreeView> ROOT::TTreeProcessorMT::fTreeView {TNumSlots{ROOT::GetThreadPoolSize()}}. private . Thread-local TreeViews. ; Definition at line 91 of file TTreeProcessorMT.hxx. Libraries for ROOT::TTreeProcessorMT:. [legend]; The documentation for this class was generated from the following files:; tree/treeplayer/inc/ROOT/TTreeProcessorMT.hxx; tree/treeplayer/src/TTreeProcessorMT.cxx. ROOTTTreeProcessorMT. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:01 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1TTreeProcessorMT.html:9633,Guid,Guide,9633,doc/master/classROOT_1_1TTreeProcessorMT.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1TTreeProcessorMT.html,1,['Guid'],['Guide']
Usability,". Minuit 2. Minuit 2; Fred JAMES and Matthias WINKLER. Minuit 2; 1 Foreword; 1.1 What M is intended to do; 1.2 What M is not intended to do; 1.3 Further remarks. 2 Introduction: M basic concepts; 2.1 The organization of M; 2.2 Design aspects of M in; 2.3 Internal and external parameters; 2.4 M strategy; 2.5 Parameter errors. 3 M installation; 3.1 M releases; 3.2 Install M using autoconf/make; 3.3 CVS code repository; 3.4 Create a tar.gz from CVS; 3.5 M versions; 3.6 Interference with other packages; 3.7 Floating-point precision. 4 How to use M; 4.1 The \(\mbox{FCN}\) Function; 4.2 M parameters; 4.3 Input to M; 4.4 Running a M minimization; 4.5 The output from minimization. 5 M application programming interface (API); 5.1 FunctionMinimum; 5.2 MnContours; 5.3 MnEigen; 5.4 MnHesse; 5.5 MnMachinePrecision; 5.6 MnMigrad and VariableMetricMinimizer; 5.7 MnMinimize and CombinedMinimizer; 5.8 MnMinos; 5.9 MnPlot; 5.10 MnScan and ScanMinimizer; 5.11 MnSimplex and SimplexMinimizer; 5.12 MnStrategy; 5.13 MnUserCovariance; 5.14 MnUserParameters; 5.15 MnUserParameterState; 5.16 MnPrint.h. 6 How to get the right answer from M; 6.1 Which minimizer to use; 6.2 Floating point precision; 6.3 Parameter limits; 6.4 Fixing and releasing parameters; 6.5 Interpretation of parameter errors; 6.6 Convergence in \(\mbox{MIGRAD}\), and positive–definiteness; 6.7 Additional trouble–shooting. 7 A complete example; 7.1 The user’s \(\mbox{FCN}\); 7.2 The user’s main program. Minuit 2; *** Fred JAMES and Matthias WINKLER CERN, Geneva ***; 1 Foreword; 1.1 What M is intended to do; M is conceived as a tool to find the minimum value of a multi-parameter function (the “\(\mbox{FCN}\)”) and analyze the shape of the function around the minimum. The principal application is foreseen for statistical analysis, working on chisquare or log-likelihood functions, to compute the best-fit parameter values and uncertainties, including correlations between the parameters. It is especially suited to handle difficult ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/minuit2/Minuit2.html:969,Simpl,SimplexMinimizer,969,root/htmldoc/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/htmldoc/guides/minuit2/Minuit2.html,1,['Simpl'],['SimplexMinimizer']
Usability,". More...;  ; class  TNtuple;  A simple TTree restricted to a list of float variables only. More...;  ; class  TNtupleD;  A simple TTree restricted to a list of double variables only. More...;  ; class  TQueryResult;  A container class for query results. More...;  ; class  TreeUtils;  Different standalone functions to work with trees and tuples, not reqiuired to be a member of any class. More...;  ; class  TSelector;  A TSelector object is used by the TTree::Draw, TTree::Scan, TTree::Process to navigate in a TTree and make selections. More...;  ; class  TSelectorList;  A TList derived class that makes sure that objects added to it are not linked to the currently open file (like histograms, eventlists and trees). More...;  ; class  TSelectorScalar;  Named scalar type, based on Long64_t, streamable, storable and mergeable. More...;  ; class  TTree;  A TTree represents a columnar dataset. More...;  ; class  TTreeCache;  A cache to speed-up the reading of ROOT datasets. More...;  ; class  TTreeCacheUnzip;  A TTreeCache which exploits parallelized decompression of its own content. More...;  ; class  TTreeCloner;  Class implementing or helping the various TTree cloning method. More...;  ; class  TTreeResult;  Class defining interface to a TTree query result with the same interface as for SQL databases. More...;  ; class  TTreeRow;  Class defining interface to a row of a TTree query result. More...;  ; class  TTreeSQL;  A TTree object is a list of TBranch. More...;  ; class  TVirtualBranchBrowsable;  TVirtualBranchBrowsable is a base class (not really abstract, but useless by itself) for helper objects that extend TBranch's browsing support. More...;  ; class  TVirtualIndex;  Abstract interface for Tree Index. More...;  ; class  TVirtualTreePlayer;  Abstract base class defining the interface for the plugins that implement Draw, Scan, Process, MakeProxy, etc. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tree.html:6775,Guid,Guide,6775,doc/master/group__tree.html,https://root.cern,https://root.cern/doc/master/group__tree.html,1,['Guid'],['Guide']
Usability,". News | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome News. 02-02-2019 ; Full Totem Analysis based on RDataFrame and distributed on a big Spark cluster with PyRDF! ; Milosz Blaszkiewicz and Aleksandra Mnich (AGH Univ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/news.html:122,Guid,Guides,122,d/news.html,https://root.cern,https://root.cern/d/news.html,3,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". One can rotate the 3-d space around the vertical axis using the “view” parameter. Allowed values are 0, 90, 180 and 270 degrees.; h2->Draw(""SPEC n(40,40) dm(0,1) a(30,30,0)"");; The operator “zs(scale)” changes the scale of the Z-axis. The possible values are:. 0 = Linear (default),; 1 = Log,; 2 = Sqrt. If gPad->SetLogz() has been set, the log scale on Z-axis is set automatically, i.e. there is no need for using the zs() operator. Note that the X and Y axis are always linear.; The operator “ci(r,g,b)” defines the colors increments (r, g and b are floats). For sophisticated shading (Light, Height and LightHeight Display Modes Groups) the color palette starts from the basic pen color (see pa() function). There is a predefined number of color levels (256). Color in every level is calculated by adding the increments of the r , g , b components to the previous level. Using this function one can change the color increments between two neighboring color levels. The function does not apply on the Simple Display Modes Group. The default values are: (1,1,1).; The operator “ca(color_algorithm)” allows to choose the Color Algorithm. To define the colors one can use one of the following color algorithms (RGB, CMY, CIE, YIQ, HVS models). When the level of a component reaches the limit value one can choose either smooth transition (by decreasing the limit value) or a sharp modulo transition (continuing with 0 value). This allows various visual effects. One can choose from the following set of the algorithms:. 0 = RGB Smooth,; 1 = RGB Modulo,; 2 = CMY Smooth,; 3 = CMY Modulo,; 4 = CIE Smooth; 5 = CIE Modulo,; 6 = YIQ Smooth,; 7 = YIQ Modulo,; 8 = HVS Smooth,; 9 = HVS Modulo. This function does not apply on Simple display modes group. Default value is 0. Example choosing CMY Modulo to paint the 2D histogram:; h2->Draw(""SPEC c1(3) dm(0,1) a(30,30,0)"");; The operator “lp(x,y,z)” sets the light position. In Light and LightHeight display modes groups the color palette is calculated acco",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:104612,Simpl,Simple,104612,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['Simpl'],['Simple']
Usability,". Previous Developers | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » About Previous Developers. The following people have been working on ROOT for some time in their career and ROOT would not be what it is without ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/previous-developers.html:137,Guid,Guides,137,d/previous-developers.html,https://root.cern,https://root.cern/d/previous-developers.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". ProcInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » ProcInfo_t. class ProcInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es. Function Members (Methods); public:. virtual~ProcInfo_t(); static TClass*Class(); virtual TClass*IsA() const; ProcInfo_t&operator=(const ProcInfo_t&); ProcInfo_t(); ProcInfo_t(const ProcInfo_t&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfCpuSyssystem time used by this process in seconds; Float_tfCpuUseruser time used by this process in seconds; Long_tfMemResidentresident memory used by this process in KB; Long_tfMemVirtualvirtual memory used by this process in KB. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ProcInfo_t(); { }. virtual ~ProcInfo_t(); { }. TSystem& operator=(const ProcInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ProcInfo_t.html:637,simpl,simple,637,root/html602/ProcInfo_t.html,https://root.cern,https://root.cern/root/html602/ProcInfo_t.html,1,['simpl'],['simple']
Usability,". ProcInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » ProcInfo_t. class ProcInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es. Function Members (Methods); public:. virtual~ProcInfo_t(); static TClass*Class(); virtual TClass*IsA() const; ProcInfo_t&operator=(const ProcInfo_t&); ProcInfo_t(); ProcInfo_t(const ProcInfo_t&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfCpuSyssystem time used by this process in seconds; Float_tfCpuUseruser time used by this process in seconds; Long_tfMemResidentresident memory used by this process in KB; Long_tfMemVirtualvirtual memory used by this process in KB. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ProcInfo_t(); { }. virtual ~ProcInfo_t(); { }. TSystem& operator=(const ProcInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 17:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ProcInfo_t.html:637,simpl,simple,637,root/html604/ProcInfo_t.html,https://root.cern,https://root.cern/root/html604/ProcInfo_t.html,1,['simpl'],['simple']
Usability,". Processing data with ROOT | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » First Steps With ROOT Processing data with ROOT. The ROOT framework consists of many classes, grouped into several categories. Finally, the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/processing-data-root.html:143,Guid,Guides,143,d/processing-data-root.html,https://root.cern,https://root.cern/d/processing-data-root.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Program of Work | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development Program of Work. The program of work is guided by the project vision laid out here, and documented for the relevant years in the followin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/program-work.html:133,Guid,Guides,133,d/program-work.html,https://root.cern,https://root.cern/d/program-work.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Project Founders | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » About Project Founders. Rene Brun ; ; Rene, a lifetime developer of ROOT. He joined CERN in 1973. While working with C. Rubbia at the ISR he develop",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/project-founders.html:134,Guid,Guides,134,d/project-founders.html,https://root.cern,https://root.cern/d/project-founders.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". Publications | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation Publications. In case you want to cite ROOT in your own publications, this is the preferred reference. Rene Brun and Fons Rademakers,; ROO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/publications.html:130,Guid,Guides,130,d/publications.html,https://root.cern,https://root.cern/d/publications.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". ROOT 2002 Program. ROOT 2002 Program. Time slots of 20' or 30' has been reserved for the talks.; Presentations should be aimed at generating discussion on; ROOT, so they should highlight strong points of the system, but also weak; ones and the problems encountered. The workshop will be held at; CERN in and around the; council chamber (building; 503, 1st floor, i.e. the one above the ground floor). All presentations should be available, either in PowerPoint (ppt); or pdf formats at least half a day before the presentation. Send your presentation; to Rene.Brun@cern.ch as a mail attachement or simply a mail indicating; a public area from where we can download it. Please identify your talk; clearly (not talk.ppt or root2002.pdf!!). Monday 14 October; Chair: Rene Brun. 08h30: Registration; Coffee and Croissants; 09h30: Ioana Videau; Welcome ; 09h40: Rene Brun: Workshop overview: Summary of major developments( ppt, pdf); 10h10: Fons Rademakers: Progress with infrastructure classes( ppt, pdf); 10h40: Masa Goto: Progress with CINT( ppt, pdf). 11h00: Break. 11h20: Philippe Canal: Foreign classes( ppt, pdf); 11h50: Victor Perevoztchikov: Automated support for STL containers( ppt, pdf). 12h20: Lunch. Chair: Fons Rademakers. 14h00: Bill Tanenbaum: CMS conversion from Objectivity( ppt, pdf); 14h30: David Chamont: Using Trees with CMS ORCA( ppt, pdf); 15h00: Pete Elmer: Babar( pdf). 15h30: Coffee Break. 16h00: Federico Carminati: ALICE( ppt, pdf); 16h30: George Irwin: MINOS( ppt, pdf); 17h00: Chris Crawford: BLAST( ppt, pdf); 17h20: Hans Essel: Go4 production version 2( ppt, pdf); 17h50: Yves Shutz: ALICE data organisation, Folders & I/O( ppt, pdf). 18h20: Closing. Tuesday 15 October; Chair: Pete Elmer. 09h00: Wouter Verkerke: RooFit package( ppt, pdf); 09h30: Sergey Linev: Go4Fit package( ppt, pdf); 10h00: Andrei Gheata: the new Geometry package( ppt, pdf). 10h30: Coffee Break. 11h00: Ivana Hrivnacova: Virtual MonteCarlo( ppt, pdf); 11h30: Victor Perevoztchikov: General purpose",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/R2002/Program.html:600,simpl,simply,600,root/R2002/Program.html,https://root.cern,https://root.cern/root/R2002/Program.html,2,"['clear', 'simpl']","['clearly', 'simply']"
Usability,". ROOT 2002 Workshop. Committees; Participants; Abstracts; Program; Location; Hotels; Social Event. After the very successful Third; ROOT Users Workshop in June 2001 at Fermilab we are; happy to annouce the Fourth ROOT Users Workshop, to be held at; CERN the 14th, 15th and 16th of October 2002. As the use of ROOT continues to grow at a; rapid pace it remains important to continue meeting at a regular basis; to discuss technical issues, share ideas and plan directions for future; development. To register and submit abstracts go to the; registration page. For any inquiries or comments contact directly the; organizers. The registration; fee is CHF 20,-, which includes the workshop dinner, coffee breaks and; a printed copy the Users Guide. If you cannot attend, but would like to make a presentation,; we will have a VRVS setup in operation (No camera, only voice). Here are; the Virtual Planets where to connect(No password required):. Monday 14th October from 09:00 AM to 05:00 PM: NEPTUNE; Tuesday 15th October from 09:00 AM to 05:00 PM: NEPTUNE; Wednesday 16th October from 09:00 AM to 06:00 PM: VENUS. We are particularly interested by talks in the following categories:. use of Root as a general framework.; experience with I/O, comparing different solutions using Trees; or other mechanisms.; use of the Root/CINT dictionary to implement interfaces with; foreign systems.; Use of the GUI and graphics classes.; use in DAQ, Real time systems and client/servers.; distributed applications on the GRID.; Statistical Analysis tools and classes. We also invite participants to come with questions, comments,; proposals to be discussed in a special Q&A session. Rene Brun,; Federico Carminati and; Fons Rademakers; Last update 07/05/2002 by FR. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/R2002/Welcome.html:739,Guid,Guide,739,root/R2002/Welcome.html,https://root.cern,https://root.cern/root/R2002/Welcome.html,1,['Guid'],['Guide']
Usability,". ROOT 2005 Workshop. Committees; Participants; Abstracts; Program; Posters; Location; Hotels. After the very successful Fifth; ROOT Users Workshop in February 2004 at SLAC we are; happy to annouce the Sixth ROOT Users Workshop, to be held at; CERN the 28th, 29th and 30th of September 2005. As the use of ROOT continues to grow at a; rapid pace it remains important to continue meeting at a regular basis; to discuss technical issues, share ideas and plan directions for future; development. The main workshop topics are the use of ROOT as a general framework, feedback; from experiments, progress with object persistency, merge with SEAL Reflex,; progress with the new version of CINT, progress with the Python interface,; what is new with the Math libraries, distributed Data Analysis with PROOF,; progress with GUIs and graphics, progress with the new GL viewer,; progress with the Geometry classes. And much more. The workshop slides are available at; here. We also invite participants to come with questions, comments,; proposals to be discussed in a special Q&A session. Rene Brun,; Fons Rademakers; Last update 28/08/2005 by FR. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/R2005/Welcome.html:562,feedback,feedback,562,root/R2005/Welcome.html,https://root.cern,https://root.cern/root/R2005/Welcome.html,1,['feedback'],['feedback']
Usability,". ROOT 2007 Workshop. Committees; Participants; Abstracts and Program; Posters shown at the Workshop; Location; Hotels. After the very successful Sixth; ROOT Users Workshop in September 2005 at CERN we are; happy to annouce the Seventh ROOT Users Workshop, to be held at; CERN the 26th, 27th and 28th of March 2007. As the use of ROOT continues to grow at a; rapid pace it remains important to continue meeting at a regular basis; to discuss technical issues, share ideas and plan directions for future; development. The main workshop topics are the use of ROOT as a general framework, feedback; from experiments, progress with object persistency, merge with SEAL Reflex,; progress with the new version of CINT, progress with the Python interface,; what is new with the Math libraries, distributed Data Analysis with PROOF,; progress with GUIs and graphics, progress with the new GL viewer,; progress with the Geometry classes. And much more. Send your presentation (minimum two hours before your talk) to root2007@root.cern.ch.; We accept ppt or pdf formats (ppt being preferred). We also invite participants to come with questions, comments,; proposals to be discussed in a special Q&A session. The list of participants will be communicated to the Reception office in Building 33.; Participants will be guided from the Reception Building or gates A and B towards the Council Chamber. Thanks to Steven Goldfarb and Mitch McLachlan from ATLAS, you can . view or download the video archives of all the talks. Rene Brun,; Fons Rademakers; Last update 29/11/2006 by FR. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/R2007/Welcome.html:586,feedback,feedback,586,root/R2007/Welcome.html,https://root.cern,https://root.cern/root/R2007/Welcome.html,2,"['feedback', 'guid']","['feedback', 'guided']"
Usability,". ROOT 6 Analysis Workshop | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome ROOT 6 Analysis Workshop. Abstract; This tutorial will guide you through an example analysis with ROOT 6. It shows the recommended practices f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/root-6-analysis-workshop-1.html:142,Guid,Guides,142,d/root-6-analysis-workshop-1.html,https://root.cern,https://root.cern/d/root-6-analysis-workshop-1.html,4,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". ROOT 7 | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development ROOT 7. For the first time since 20 year (i.e. ever), the ROOT team plans to break backward compatibility for crucial interfaces - once.; This new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/root-7.html:124,Guid,Guides,124,d/root-7.html,https://root.cern,https://root.cern/d/root-7.html,3,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". ROOT I/O | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » First Steps With ROOT ROOT I/O. The ROOT framework consists of many classes, grouped into several categories. Finally, the latter are grouped into few top-l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/root-io.html:126,Guid,Guides,126,d/root-io.html,https://root.cern,https://root.cern/d/root-io.html,3,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". ROOT Reference Guide. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. ROOT Reference Guide; These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. Modules; BINDINGS; CINT; CORE; GEOM; GRAF2D; GRAF3D; GUI; HIST; HTML; IO; MATH; MISC; MONTECARLO; NET; PROOF; ROOFIT; SQL; TEST; TMVA; TREE. Chapters; Class Index; A complete list of all classes defined in ROOT; Class Hierarchy; A hierarchy graph of all classes, showing each class's base and derived classes; Type Index; A complete list of all types; Library Dependency; A diagram showing all of ROOT's libraries and their dependencies. » Last changed: 2010-12-15 15:10 » Last generated: 2010-12-15 15:10; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/index.html:17,Guid,Guide,17,root/html528/index.html,https://root.cern,https://root.cern/root/html528/index.html,4,"['Guid', 'guid', 'simpl']","['Guide', 'guide', 'simply']"
Usability,". ROOT Reference Guide. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. ROOT Reference Guide; These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. Modules; BINDINGS; CINT; CORE; GEOM; GRAF2D; GRAF3D; GUI; HIST; HTML; IO; MATH; MISC; MONTECARLO; NET; PROOF; ROOFIT; SQL; TEST; TMVA; TREE. Chapters; Class Index; A complete list of all classes defined in ROOT; Class Hierarchy; A hierarchy graph of all classes, showing each class's base and derived classes; Type Index; A complete list of all types; Library Dependency; A diagram showing all of ROOT's libraries and their dependencies. » Last changed: 2011-07-04 15:18 » Last generated: 2011-07-04 15:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/index.html:17,Guid,Guide,17,root/html530/index.html,https://root.cern,https://root.cern/root/html530/index.html,4,"['Guid', 'guid', 'simpl']","['Guide', 'guide', 'simply']"
Usability,". ROOT Reference Guide. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. ROOT Reference Guide; These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. Modules; BINDINGS; CINT; CORE; GEOM; GRAF2D; GRAF3D; GUI; HIST; HTML; IO; MATH; MISC; MONTECARLO; NET; PROOF; ROOFIT; SQL; TEST; TMVA; TREE. Chapters; Class Index; A complete list of all classes defined in ROOT; Class Hierarchy; A hierarchy graph of all classes, showing each class's base and derived classes; Type Index; A complete list of all types; Library Dependency; A diagram showing all of ROOT's libraries and their dependencies. » Last changed: 2011-12-02 14:26 » Last generated: 2011-12-02 14:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/index.html:17,Guid,Guide,17,root/html532/index.html,https://root.cern,https://root.cern/root/html532/index.html,4,"['Guid', 'guid', 'simpl']","['Guide', 'guide', 'simply']"
Usability,". ROOT Reference Guide. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. ROOT Reference Guide; These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. Modules; BINDINGS; CINT; CORE; GEOM; GRAF2D; GRAF3D; GUI; HIST; HTML; IO; MATH; MISC; MONTECARLO; NET; PROOF; ROOFIT; SQL; TEST; TMVA; TREE. Chapters; Class Index; A complete list of all classes defined in ROOT; Class Hierarchy; A hierarchy graph of all classes, showing each class's base and derived classes; Type Index; A complete list of all types; Library Dependency; A diagram showing all of ROOT's libraries and their dependencies. » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/index.html:17,Guid,Guide,17,root/html534/index.html,https://root.cern,https://root.cern/root/html534/index.html,4,"['Guid', 'guid', 'simpl']","['Guide', 'guide', 'simply']"
Usability,". ROOT Reference Guide. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. ROOT Reference Guide; These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. Modules; BINDINGS; CINT; CORE; GEOM; GRAF2D; GRAF3D; GUI; HIST; HTML; IO; MATH; MISC; MONTECARLO; NET; PROOF; ROOFIT; SQL; TMVA; TREE. Chapters; Class Index; A complete list of all classes defined in ROOT; Class Hierarchy; A hierarchy graph of all classes, showing each class's base and derived classes; Type Index; A complete list of all types; Library Dependency; A diagram showing all of ROOT's libraries and their dependencies. » Last changed: 2009-12-14 18:22 » Last generated: 2009-12-14 18:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/index.html:17,Guid,Guide,17,root/html526/index.html,https://root.cern,https://root.cern/root/html526/index.html,4,"['Guid', 'guid', 'simpl']","['Guide', 'guide', 'simply']"
Usability,". ROOT Reference Guide. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. ROOT Reference Guide; These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. Modules; BINDINGS; CORE; GEOM; GRAF2D; GRAF3D; GUI; HIST; HTML; IO; MATH; MISC; MONTECARLO; NET; PROOF; ROOFIT; SQL; TMVA; TREE. Chapters; Class Index; A complete list of all classes defined in ROOT; Class Hierarchy; A hierarchy graph of all classes, showing each class's base and derived classes; Type Index; A complete list of all types; Library Dependency; A diagram showing all of ROOT's libraries and their dependencies. » Last changed: 2015-06-30 14:20 » Last generated: 2015-06-30 14:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/index.html:17,Guid,Guide,17,root/html602/index.html,https://root.cern,https://root.cern/root/html602/index.html,4,"['Guid', 'guid', 'simpl']","['Guide', 'guide', 'simply']"
Usability,". ROOT Reference Guide. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. ROOT Reference Guide; These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. Modules; BINDINGS; CORE; GEOM; GRAF2D; GRAF3D; GUI; HIST; HTML; IO; MATH; MISC; MONTECARLO; NET; PROOF; ROOFIT; SQL; TMVA; TREE. Chapters; Class Index; A complete list of all classes defined in ROOT; Class Hierarchy; A hierarchy graph of all classes, showing each class's base and derived classes; Type Index; A complete list of all types; Library Dependency; A diagram showing all of ROOT's libraries and their dependencies. » Last changed: 2015-09-08 17:32 » Last generated: 2015-09-08 17:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/index.html:17,Guid,Guide,17,root/html604/index.html,https://root.cern,https://root.cern/root/html604/index.html,4,"['Guid', 'guid', 'simpl']","['Guide', 'guide', 'simply']"
Usability,". ROOT User Guides and Manuals | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation ROOT User Guides and Manuals. ROOT Guides. Title; Quick Link; All Links. Reference Guide; head / 6.08; all releases. User'",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/root-user-guides-and-manuals.html:12,Guid,Guides,12,d/root-user-guides-and-manuals.html,https://root.cern,https://root.cern/d/root-user-guides-and-manuals.html,3,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,". ROOT Version 6.06 Release Notes. ROOT Version 6.06 Release Notes; 2015-12-10. Introduction; ROOT reference manual; Core Libraries; Dictionary generation; Thread safety and thread awareness; TDirectory::TContext; Collections; Global resources.; Code Cleanups. Interpreter; I/O Libraries; hadd; Command line utilities; TBufferFile.; I/O New functionalities. TTree Libraries; Improvement of handling of default number of entries; MakeSelector. Histogram Libraries; TH1; TGraph; TGraph2D; Fitting; TFormula. Math Libraries; Random numbers. R Interface; TMVA; RooFit Libraries; 2D Graphics Libraries; THistPainter; TTeXDump; TLatex; TColor; TMultiGraph; TASImage; TCreatePrimitives; TCanvas; Cocoa Backend; freetype library. 3D Graphics Libraries; Geometry Libraries; Database Libraries; Networking Libraries; THttpServer; TNetXNGFileStager; TWebFile. GUI Libraries; Montecarlo Libraries; Multi-processing; Language Bindings; Notebooks. JavaScript ROOT; Class Reference Guide; Tutorials; Build, Configuration and Testing Infrastructure; Patch Releases; Release 6.06/02; Core; Dictionaries; Interpreter; Meta Library; TTree; Histogram Libraries; Math; TColor; PyROOT; Bug Fixes and Tasks. Release 6.06/04; General; Dictionaries; Interpreter Library; I/O; Meta; Core; Minuit; Bug fixes. Release 6.06/06; Cling; Core; Dictionaries; TTree; Bugs fixed in this release. Release 6.06/08; Core; Hist. Bugs fixed in this release; HEAD of the v6-06-00-patches branch. Introduction; ROOT version 6.06/00 was released on December 10, 2015.; For more information, see:; http://root.cern.ch; The following people have contributed to this new version:; David Abdurachmanov, CERN, CMS,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Cristina Cristescu, CERN/SFT,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/SFT,; Enrico Guiraud, CERN/SFT,; Burt Holzman, Fermilab, CMS,; Lukasz Janyst, CERN/IT,; Christopher Jones, Fermilab, CMS,; Wim ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v606/release-notes.html:967,Guid,Guide,967,doc/v606/release-notes.html,https://root.cern,https://root.cern/doc/v606/release-notes.html,1,['Guid'],['Guide']
Usability,". ROOT a Data analysis Framework | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . . Getting Started. . Reference Guide. . Forum. . Gallery.  ; ROOT is ...; A modular scientific software toolkit. It provides all the functionalities need",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/index.html:148,Guid,Guides,148,d/index.html,https://root.cern,https://root.cern/d/index.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability,. ROOT: /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/pyzdoc/_roofit.pyzdoc Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. _roofit.pyzdoc. Go to the documentation of this file. 1/**; 2\defgroup RoofitPythonizations RooFit Pythonizations; 3\ingroup Roofitmain; 4- [RooAbsCollection](\ref _rooabscollection); 5 - [printLatex](\ref _rooabscollection_printlatex); 6- [RooAbsData](\ref _rooabsdata); 7 - [createHistogram](\ref _rooabsdata_createhistogram); 8 - [plotOn](\ref _rooabsdata_ploton); 9 - [reduce](\ref _rooabsdata_reduce); 10 - [statOn](\ref _rooabsdata_staton); 11- [RooAbsPdf](\ref _rooabspdf); 12 - [createCdf](\ref _rooabspdf_createcdf); 13 - [createNLL](\ref _rooabspdf_createnll); 14 - [fitTo](\ref _rooabspdf_fitto); 15 - [generate](\ref _rooabspdf_generate); 16 - [generateBinned](\ref _rooabspdf_generatebinned); 17 - [paramOn](\ref _rooabspdf_paramon); 18 - [plotOn](\ref _rooabspdf_ploton); 19 - [prepareMultiGen](\ref _rooabspdf_preparemultigen); 20- [RooAbsReal](\ref _rooabsreal); 21 - [chi2FitTo](\ref _rooabsreal_chi2fitto); 22 - [createChi2](\ref _rooabsreal_createchi2); 23 - [createHistogram](\ref _rooabsreal_createhistogram); 24 - [createIntegral](\ref _rooabsreal_createintegral); 25 - [createRunningIntegral](\ref _rooabsreal_createrunningintegral); 26 - [plotOn](\ref _rooabsreal_ploton); 27- [RooAbsRealLValue](\ref _rooabsreallvalue); 28 - [createHistogram](\ref _rooabsreallvalue_createhistogram); 29 - [frame](\ref _rooabsreallvalue_frame); 30- [RooArgSet](\ref _rooargset); 31 - [__init__](\ref _rooargset___init__); 32- [RooBCPGenDecay](\ref _roobcpgendecay); 33 - [__init__](\ref _roobcpgendecay___init__); 34- [RooBCPEffDecay](\ref _roobcpeffdecay); 35 - [__init__](\ref _roobcpeffdecay___init__); 36- [RooBDecay](\ref _roobdecay); 37 - [__init__](\ref _roobdecay___init__); 38- [RooBMixDecay](\ref _roobmixdecay); 39 - [__init__](\ref _roobmixdecay___init__); 40- [RooCategory](\ref _r,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/__roofit_8pyzdoc_source.html:148,Guid,Guide,148,doc/master/__roofit_8pyzdoc_source.html,https://root.cern,https://root.cern/doc/master/__roofit_8pyzdoc_source.html,1,['Guid'],['Guide']
Usability,. ROOT: 2D Graphics. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules ; 2D GraphicsGraphics. ; The 2D graphics related classes. . Modules;  libAfterImage interface;  Classes interfacing to libAfterImage. ;  ;  FITS file;  Interface to FITS file. ;  ;  Graphics pad;  The TPad related classes. ;  ;  Basic graphics;  The low level graphics classes. ;  ;  graphviz interface;  Interface to the graphing package graphviz ;  ;  Graphics file output;  Interfaces to various file output formats. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:32 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Graphics2D.html:51,Guid,Guide,51,doc/master/group__Graphics2D.html,https://root.cern,https://root.cern/doc/master/group__Graphics2D.html,2,['Guid'],['Guide']
Usability,. ROOT: 3D Graphics. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules ; 3D GraphicsGraphics. ; The 3D graphics related classes. . Modules;  Event Display;  The Event Display classes. ;  ;  Basic 3D graphics.;  The basic 3D classes. ;  ;  OpenGL rendering;  OpenGL rendering and utility classes. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:32 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Graphics3D.html:51,Guid,Guide,51,doc/master/group__Graphics3D.html,https://root.cern,https://root.cern/doc/master/group__Graphics3D.html,2,['Guid'],['Guide']
Usability,". ROOT: Advanced spectra processing classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Advanced spectra processing classes.Histogram Library. ; Legacy Code The Spectrum package is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using The Spectrum package might still be a valid solution.; AuthorsMiroslav Morhac Institute of Physics Slovak Academy of Sciences, R.Brun (Repackaging for C++). Processing and visualization functions.; Efficient one and two dimensional gold deconvolution and its application to gamma-ray spectra decomposition.; Identification of peaks in multidimensional coincidence gamma-ray spectra.; Background elimination for multidimensional coincidence gamma-ray spectra. . Classes; class  TSpectrum;  Advanced Spectra Processing. More...;  ; class  TSpectrum2;  Advanced 2-dimensional spectra processing. More...;  ; class  TSpectrum2Fit;  Advanced 2-dimensional spectra fitting functions. More...;  ; class  TSpectrum2Transform;  Advanced 2-dimensional orthogonal transform functions. More...;  ; class  TSpectrum3;  Advanced 3-dimensional spectra processing functions. More...;  ; class  TSpectrumFit;  Advanced 1-dimensional spectra fitting functions. More...;  ; class  TSpectrumTransform;  Advanced 1-dimensional orthogonal transform functions. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Spectrum.html:75,Guid,Guide,75,doc/master/group__Spectrum.html,https://root.cern,https://root.cern/doc/master/group__Spectrum.html,2,['Guid'],['Guide']
Usability,". ROOT: Axis2 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; List of all members ; Axis2 Class Reference. . Definition at line 843 of file xRooNode.cxx. Public Member Functions; const RooAbsBinning * binning () const;  ; Int_t FindFixBin (const char *label) const override;  Find bin number with label. ;  ; Int_t FindFixBin (double x) const override;  Find bin number corresponding to abscissa x. ;  ; double GetBinLowEdge (Int_t bin) const override;  Return low edge of bin. ;  ; double GetBinUpEdge (Int_t bin) const override;  Return up edge of bin. ;  ; double GetBinWidth (Int_t bin) const override;  Return bin width. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; void Set (Int_t nbins, const double *xbins) override;  Initialize axis with variable bins. ;  ; void Set (Int_t nbins, const float *xbins) override;  Initialize axis with variable bins. ;  ; void Set (Int_t nbins, double xmin, double xmax) override;  Initialize axis with fix bins. ;  ; void SetTitle (const char *title) override;  Set the title of the TNamed. ;  ;  TAxis ();  Default constructor. ;  ;  TAxis (const TAxis &axis);  Copy constructor. ;  ;  TAxis (Int_t nbins, const Double_t *xbins);  Axis constructor for variable bin size. ;  ;  TAxis (Int_t nbins, Double_t xmin, Double_t xmax);  Axis constructor for axis with fix bin size. ;  ;  Public Member Functions inherited from TAxis;  TAxis ();  Default constructor. ;  ;  TAxis (const TAxis &axis);  Copy constructor. ;  ;  TAxis (Int_t nbins, const Double_t *xbins);  Axis constructor for variable bin size. ;  ;  TAxis (Int_t nbins, Double_t xmin, Double_t xmax);  Axis constructor for axis with fix bin size. ;  ;  ~TAxis () override;  Destructor. ;  ; Bool_t CanBeAlphanumeric ();  ; Bool_t CanExtend () const;  ; void CenterLabels (Bool_t center=kTRUE);  Center axis labels. ;  ; void CenterTitle (Boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classAxis2.html:61,Guid,Guide,61,doc/master/classAxis2.html,https://root.cern,https://root.cern/doc/master/classAxis2.html,1,['Guid'],['Guide']
Usability,". ROOT: B1 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. B1 Class Reference. Inheritance diagram for B1:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this class was generated from the following file:; tree/dataframe/inc/ROOT/RDF/Utils.hxx. B1. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classB1.html:58,Guid,Guide,58,doc/master/classB1.html,https://root.cern,https://root.cern/doc/master/classB1.html,2,['Guid'],['Guide']
Usability,". ROOT: Base ROOT classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files |; Classes ; Base ROOT classesCore ROOT classes. ; The Base classes of ROOT. ; The base classes of the ROOT system provide the core of the system. They are available to all other classes. They range from a set of abstract interfaces (TVirtualXXXXX classes), to a wide range of basic utility classes providing basic services like strings, regular expression, timers, date/time, md5 checksumming, signal/slots event handling, plugin handler, run-config resource processor, etc. etc. . Files; file  RConversionRuleParser.cxx;  ; file  RDirectory.cxx;  ; file  RDirectory.hxx;  ; file  RDirectoryEntry.hxx;  ; file  RError.cxx;  ; file  RError.hxx;  ; file  RFile.cxx;  ; file  RFile.hxx;  ; file  RIndexIter.hxx;  ; file  RLogger.cxx;  ; file  RLogger.hxx;  ; file  RNotFn.hxx;  ; file  RRangeCast.hxx;  ; file  RSpan.hxx;  ; file  span.hxx;  ; file  StringUtils.hxx;  ; file  TClassEdit.cxx;  . Classes; class  ROOT::Experimental::RError;  Captures diagnostics related to a ROOT runtime error. More...;  ; class  ROOT::Experimental::RException;  Base class for all ROOT issued exceptions. More...;  ; class  ROOT::Experimental::RResult< T >;  The class is used as a return type for operations that can fail; wraps a value of type T or an RError. More...;  ; class  ROOT::Experimental::RResultBase;  Common handling of the error case for RResult<T> (T != void) and RResult<void> More...;  ; class  TApplication;  This class creates the ROOT Application Environment that interfaces to the windowing system eventloop and eventhandlers. More...;  ; class  TApplicationImp;  ABC describing GUI independent application implementation protocol. More...;  ; class  TAtt3D;  Use this attribute class when an object should have 3D capabilities. More...;  ; class  TAttAxis;  Manages histogram axis attributes. More...;  ; class  TAttBBox;  Helper for management of bounding-box information. More...;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Base.html:57,Guid,Guide,57,doc/master/group__Base.html,https://root.cern,https://root.cern/doc/master/group__Base.html,1,['Guid'],['Guide']
Usability,. ROOT: Basic 3D graphics. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Basic 3D graphics.Graphics » 3D Graphics. ; The basic 3D classes. . Shapes.; TPolyMarker3D example. . Classes; class  TAxis3D;  The 3D axis painter class. More...;  ; class  TBRIK;  A box with faces perpendicular to the axes. More...;  ; class  TCONE;  A conical tube. More...;  ; class  TCONS;  A segment of a conical tube. More...;  ; class  TCTUB;  A cut tube with 11 parameters. More...;  ; class  TELTU;  A cylinder with an elliptical section. More...;  ; class  TGeometry;  TGeometry description. More...;  ; class  TGTRA;  A general twisted trapezoid. More...;  ; class  THelix;  THelix has two different constructors. More...;  ; class  THYPE;  An hyperboloid (not implemented) More...;  ; class  TMarker3DBox;  A special 3-D marker designed for event display. More...;  ; class  TMaterial;  Manages a detector material. More...;  ; class  TMixture;  Manages a detector mixture. More...;  ; class  TNode;  TNode description. More...;  ; class  TNodeDiv;  Description of parameters to divide a 3-D geometry object. More...;  ; class  TPARA;  A parallelepiped. More...;  ; class  TPCON;  A polycone. More...;  ; class  TPGON;  A polygon. More...;  ; class  TPoints3DABC;  Abstract class to define Arrays of 3D points. More...;  ; class  TPointSet3D;  TPolyMarker3D using TPointSet3DGL for direct OpenGL rendering. More...;  ; class  TPolyLine3D;  A 3-dimensional polyline. More...;  ; class  TPolyMarker3D;  A 3D polymarker. More...;  ; class  TRotMatrix;  Manages a detector rotation matrix. More...;  ; class  TShape;  This is the base class for all geometry shapes. More...;  ; class  TSPHE;  A Sphere. More...;  ; class  TTRAP;  A general trapezoid. More...;  ; class  TTRD1;  A trapezoid with the x dimension varying along z. More...;  ; class  TTRD2;  A trapezoid with both x and y dimensions varying along z. More...;  ; class  TTUBE;  A tube. More...;  ; class  TTUBS; ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__g3d.html:57,Guid,Guide,57,doc/master/group__g3d.html,https://root.cern,https://root.cern/doc/master/group__g3d.html,1,['Guid'],['Guide']
Usability,. ROOT: Basic graphics. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Basic graphicsGraphics » 2D Graphics. ; The low level graphics classes. . Classes; class  TArc;  Create an Arc. More...;  ; class  TArrow;  Draw all kinds of Arrows. More...;  ; class  TAttImage;  TImage attributes. More...;  ; class  TAxisModLab;  TAxis helper class used to store the modified labels. More...;  ; class  TBox;  Create a Box. More...;  ; class  TCandle;  The candle plot painter class. More...;  ; class  TCrown;  To draw a Crown. More...;  ; class  TCurlyArc;  Implements curly or wavy arcs used to draw Feynman diagrams. More...;  ; class  TCurlyLine;  Implements curly or wavy polylines used to draw Feynman diagrams. More...;  ; class  TCutG;  Graphical cut class. More...;  ; class  TDiamond;  Draw a Diamond. More...;  ; class  TEllipse;  Draw Ellipses. More...;  ; class  TFrame;  Define a Frame. More...;  ; class  TGaxis;  The axis painter class. More...;  ; class  TGraphPolar;  To draw a polar graph. More...;  ; class  TGraphPolargram;  To draw polar axis. More...;  ; class  TGraphQQ;  This class allows to draw quantile-quantile plots. More...;  ; class  TImage;  An abstract interface to image processing library. More...;  ; class  TImagePalette;  A class to define a conversion from pixel values to pixel color. More...;  ; class  TLatex;  To draw Mathematical Formula. More...;  ; class  TLegend;  This class displays a legend box (TPaveText) containing several legend entries. More...;  ; class  TLegendEntry;  Storage class for one entry of a TLegend. More...;  ; class  TLine;  Use the TLine constructor to create a simple line. More...;  ; class  TLink;  Special TText object used to show hyperlinks. More...;  ; class  TMarker;  Manages Markers. More...;  ; class  TMathText;  To draw TeX Mathematical Formula. More...;  ; class  TPaletteEditor;  Edit the palette via a GUI. More...;  ; class  TPave;  A TBox with a bordersize and a shadow option,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__BasicGraphics.html:54,Guid,Guide,54,doc/master/group__BasicGraphics.html,https://root.cern,https://root.cern/doc/master/group__BasicGraphics.html,1,['Guid'],['Guide']
Usability,". ROOT: CPyCppyy Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; CPyCppyy Namespace Reference. Namespaces; namespace  PyStrings;  ; namespace  TypeManip;  ; namespace  Utility;  . Classes; struct  CallContext;  ; class  CallContextRAII;  ; class  Converter;  ; class  CPPAbstractClassConstructor;  ; class  CPPAllPrivateClassConstructor;  ; class  CPPClassMethod;  ; class  CPPConstructor;  ; class  CPPDataMember;  ; class  CPPExcInstance;  ; class  CPPFunction;  ; class  CPPGetItem;  ; class  CPPIncompleteClassConstructor;  ; class  CPPInstance;  ; class  CPPMethod;  ; class  CPPMultiConstructor;  ; class  CPPNamespaceConstructor;  ; class  CPPOperator;  ; class  CPPOverload;  ; class  CPPReverseBinary;  ; class  CPPScope;  ; class  CPPSetItem;  ; class  CPPSmartClass;  ; class  Dimensions;  ; class  DispatchPtr;  ; class  Executor;  ; struct  indexiterobject;  ; class  InstancePtrConverter;  ; class  LowLevelView;  ; class  MemoryRegulator;  ; struct  Parameter;  ; struct  proxyobject;  ; class  PyCallable;  ; class  PyCallArgs;  ; class  PyException;  ; class  PyResult;  ; class  RefExecutor;  ; class  StrictInstancePtrConverter;  ; class  TemplateInfo;  ; class  TemplateProxy;  ; struct  typedefpointertoclassobject;  ; struct  vectoriterobject;  ; class  VoidArrayConverter;  . Typedefs; typedef const dims_t & cdims_t;  ; typedef Converter *(* cf_t) (cdims_t d);  ; typedef std::vector< std::pair< ptrdiff_t, PyObject * > > CI_DatamemberCache_t;  ; typedef Converter *(* ConverterFactory_t) (cdims_t);  ; typedef std::map< std::string, cf_t > ConvFactories_t;  ; typedef CPPScope CPPClass;  ; typedef PyObject CPPEnum;  ; typedef std::map< Cppyy::TCppObject_t, PyObject * > CppToPyMap_t;  Type object to hold class reference (this is only semantically a presentation of CPPScope instances, not in a C++ sense) ;  ; typedef Py_ssize_t dim_t;  ; typ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceCPyCppyy.html:68,Guid,Guide,68,doc/master/namespaceCPyCppyy.html,https://root.cern,https://root.cern/doc/master/namespaceCPyCppyy.html,1,['Guid'],['Guide']
Usability,". ROOT: Class List. ; ROOT   6.08/07 Reference Guide ; . Class List . Here are the classes, structs, unions and interfaces with brief descriptions:; [detail level 123456];  ►NBidirMMapPipe_implNamespace for implementation details of BidirMMapPipe ;  CPageChunkClass representing a chunk of pages ;  ►CPagesHandle class for a number of Pages ;  CimplImplementation ;  ►NclingPrint a TSeq at the prompt: ;  ►Nutils;  ►NMemstat;  CSCustomDigest;  CSFind_t;  CTMemStatFAddrContainer;  CTMemStatMng;  CToLower_t;  ►NPyROOT;  ►CMethodProxy;  CMethodInfo_t;  CObjectProxy;  CPropertyProxy;  CPyCallable;  CPyGILRAII;  CPyRootClassType object to hold TClassRef instance (this is only semantically a presentation of PyRootType instances, not in a C++ sense) ;  CTCallContext;  CTClassMethodHolder;  CTConstructorHolder;  CTConverter;  CTCppObjectArrayConverter;  CTCppObjectArrayExecutor;  CTCppObjectBySmartPtrExecutor;  CTCppObjectBySmartPtrPtrExecutor;  CTCppObjectBySmartPtrRefExecutor;  CTCppObjectByValueExecutor;  CTCppObjectConverter;  CTCppObjectExecutor;  CTCppObjectPtrConverter;  CTCppObjectPtrPtrExecutor;  CTCppObjectPtrRefExecutor;  CTCppObjectRefExecutor;  CTCStringConverter;  CTemplateProxyTemplate proxy object to return functions and methods ;  CTExecutor;  CTFunctionHolder;  CTLongLongArrayConverter;  CTMemoryRegulator;  CTMethodHolder;  CTNonConstCStringConverter;  CTNonConstUCStringConverter;  CTNotImplementedConverter;  ►CTParameter;  CValue;  CTPyBufferFactoryFactory for python buffers of non-string type ;  CTPyException;  CTPyROOTApplication;  CTRefCppObjectConverter;  CTRefExecutor;  CTSetItemHolder;  CTSmartPtrCppObjectConverter;  CTSTLIteratorConverter;  CTStrictCppObjectConverter;  CTValueCppObjectConverter;  CTVoidArrayConverter;  CTVoidConverter;  CTVoidPtrPtrConverter;  CTVoidPtrRefConverter;  ►NRgl;  ►NFgt;  CTKDEAdapter;  ►NMc;  CTCell;  CTDefaultSplitter;  CTF3Adapter;  CTF3EdgeSplitter;  CTGridGeometry;  CTH3Adapter;  CTIsoMesh;  CTMeshBuilder;  CTSlice;  CTS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:47,Guid,Guide,47,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,1,['Guid'],['Guide']
Usability,". ROOT: Class List. ; ROOT   6.10/09 Reference Guide ; . Class List . Here are the classes, structs, unions and interfaces with brief descriptions:; [detail level 123456];  ►NBidirMMapPipe_implNamespace for implementation details of BidirMMapPipe ;  CPageChunkClass representing a chunk of pages ;  ►CPagesHandle class for a number of Pages ;  CimplImplementation ;  ►NMemstat;  CSCustomDigest;  CSFind_t;  CTMemStatFAddrContainer;  CTMemStatMng;  CToLower_t;  ►NPyROOT;  ►CMethodProxy;  CMethodInfo_t;  CObjectProxy;  CPropertyProxy;  CPyCallable;  CPyGILRAII;  CPyRootClassType object to hold TClassRef instance (this is only semantically a presentation of PyRootType instances, not in a C++ sense) ;  CTCallContext;  CTClassMethodHolder;  CTConstructorHolder;  CTConverter;  CTCppObjectArrayConverter;  CTCppObjectArrayExecutor;  CTCppObjectBySmartPtrExecutor;  CTCppObjectBySmartPtrPtrExecutor;  CTCppObjectBySmartPtrRefExecutor;  CTCppObjectByValueExecutor;  CTCppObjectConverter;  CTCppObjectExecutor;  CTCppObjectPtrConverter;  CTCppObjectPtrPtrExecutor;  CTCppObjectPtrRefExecutor;  CTCppObjectRefExecutor;  CTCStringConverter;  CTemplateProxyTemplate proxy object to return functions and methods ;  CTExecutor;  CTFunctionHolder;  CTLongLongArrayConverter;  CTMemoryRegulator;  CTMethodHolder;  CTNonConstCStringConverter;  CTNonConstUCStringConverter;  CTNotImplementedConverter;  ►CTParameter;  CValue;  CTPyBufferFactoryFactory for python buffers of non-string type ;  CTPyException;  CTPyROOTApplication;  CTRefCppObjectConverter;  CTRefExecutor;  CTSetItemHolder;  CTSmartPtrCppObjectConverter;  CTSTLIteratorConverter;  CTStrictCppObjectConverter;  CTValueCppObjectConverter;  CTVoidArrayConverter;  CTVoidConverter;  CTVoidPtrPtrConverter;  CTVoidPtrRefConverter;  ►NRcppThis is a class to support deprecated method to pass function to R's Environment, based in Rcpp::InternalFunction ;  ►Ntraits;  CExporter< std::array< T, i > >;  ►NRgl;  ►NFgt;  CTKDEAdapter;  ►NMc;  CTCell;  CTDef",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/annotated.html:47,Guid,Guide,47,doc/v610/annotated.html,https://root.cern,https://root.cern/doc/v610/annotated.html,1,['Guid'],['Guide']
Usability,". ROOT: Class List. ; ROOT   6.12/07 Reference Guide ; . Class List . Here are the classes, structs, unions and interfaces with brief descriptions:; [detail level 123456];  ►NBidirMMapPipe_implNamespace for implementation details of BidirMMapPipe ;  CPageChunkClass representing a chunk of pages ;  ►CPagesHandle class for a number of Pages ;  CimplImplementation ;  ►NMemstat;  CSCustomDigest;  CSFind_t;  CTMemStatFAddrContainer;  CTMemStatMng;  CToLower_t;  ►NPyROOT;  ►CMethodProxy;  CMethodInfo_t;  CObjectProxy;  CPropertyProxy;  CPyCallable;  CPyGILRAII;  CPyRootClassType object to hold TClassRef instance (this is only semantically a presentation of PyRootType instances, not in a C++ sense) ;  CTCallContext;  CTClassMethodHolder;  CTConstructorHolder;  CTConverter;  CTCppObjectArrayConverter;  CTCppObjectArrayExecutor;  CTCppObjectBySmartPtrExecutor;  CTCppObjectBySmartPtrPtrExecutor;  CTCppObjectBySmartPtrRefExecutor;  CTCppObjectByValueExecutor;  CTCppObjectConverter;  CTCppObjectExecutor;  CTCppObjectPtrConverter;  CTCppObjectPtrPtrExecutor;  CTCppObjectPtrRefExecutor;  CTCppObjectRefExecutor;  CTCStringConverter;  CTemplateProxyTemplate proxy object to return functions and methods ;  CTExecutor;  CTFunctionHolder;  CTLongLongArrayConverter;  CTMemoryRegulator;  CTMethodHolder;  CTNonConstCStringConverter;  CTNonConstUCStringConverter;  CTNotImplementedConverter;  ►CTParameter;  CValue;  CTPyBufferFactoryFactory for python buffers of non-string type ;  CTPyException;  CTPyROOTApplication;  CTRefCppObjectConverter;  CTRefExecutor;  CTSetItemHolder;  CTSmartPtrCppObjectConverter;  CTSTLIteratorConverter;  CTStrictCppObjectConverter;  CTValueCppObjectConverter;  CTVoidArrayConverter;  CTVoidConverter;  CTVoidPtrPtrConverter;  CTVoidPtrRefConverter;  ►NRcppThis is a class to support deprecated method to pass function to R's Environment, based in Rcpp::InternalFunction ;  ►Ntraits;  CExporter< std::array< T, i > >;  ►NRgl;  ►NFgt;  CTKDEAdapter;  ►NMc;  CTCell;  CTDef",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v612/annotated.html:47,Guid,Guide,47,doc/v612/annotated.html,https://root.cern,https://root.cern/doc/v612/annotated.html,1,['Guid'],['Guide']
Usability,". ROOT: Class List. ; ROOT   6.14/05 Reference Guide ; . Class List . Here are the classes, structs, unions and interfaces with brief descriptions:; [detail level 123456];  ►NBidirMMapPipe_implNamespace for implementation details of BidirMMapPipe ;  CPageChunkClass representing a chunk of pages ;  ►CPagesHandle class for a number of Pages ;  CimplImplementation ;  ►NMemstat;  CSCustomDigest;  CSFind_t;  CTMemStatFAddrContainer;  CTMemStatMng;  CToLower_t;  ►NnlohmannNamespace for Niels Lohmann ;  ►NdetailUnnamed namespace with internal helper functions ;  Cconjunction;  Cconjunction< B1 >;  Cconjunction< B1, Bn... >;  Cexternal_constructor;  Cexternal_constructor< value_t::array >;  Cexternal_constructor< value_t::boolean >;  Cexternal_constructor< value_t::number_float >;  Cexternal_constructor< value_t::number_integer >;  Cexternal_constructor< value_t::number_unsigned >;  Cexternal_constructor< value_t::object >;  Cexternal_constructor< value_t::string >;  Cfrom_json_fn;  Chas_from_json;  Chas_non_default_from_json;  Chas_to_json;  Cis_basic_json_nested_type;  Cis_compatible_array_type;  Cis_compatible_integer_type;  Cis_compatible_integer_type_impl;  Cis_compatible_integer_type_impl< true, RealIntegerType, CompatibleNumberIntegerType >;  Cis_compatible_object_type;  Cis_compatible_object_type_impl;  Cis_compatible_object_type_impl< true, RealType, CompatibleObjectType >;  Cnegation;  Cpriority_tag;  Cpriority_tag< 0 >;  Cstatic_const;  Cto_json_fn;  Cadl_serializerDefault JSONSerializer template argument ;  ►Cbasic_jsonClass to store JSON values ;  Cinternal_iteratorIterator value ;  Citer_implTemplate for a random access iterator for the basic_json class ;  ►Citeration_proxyProxy class for the iterator_wrapper functions ;  Citeration_proxy_internalHelper class for iteration ;  Cjson_pointerJSON Pointer ;  Cjson_reverse_iteratorTemplate for a reverse iterator class ;  Cjson_valueJSON value ;  ►ClexerLexical analysis ;  CstrtonumParse string into a built-in arithm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v614/annotated.html:47,Guid,Guide,47,doc/v614/annotated.html,https://root.cern,https://root.cern/doc/v614/annotated.html,1,['Guid'],['Guide']
Usability,". ROOT: Class List. ; ROOT   6.16/01 Reference Guide ; . Class List. Here are the classes, structs, unions and interfaces with brief descriptions:; [detail level 123456];  ►NBidirMMapPipe_implNamespace for implementation details of BidirMMapPipe ;  CPageChunkClass representing a chunk of pages ;  ►CPagesHandle class for a number of Pages ;  CimplImplementation ;  ►NMemstat;  CSCustomDigest;  CSFind_t;  CTMemStatFAddrContainer;  CTMemStatMng;  CToLower_t;  ►NnlohmannNamespace for Niels Lohmann ;  ►NdetailUnnamed namespace with internal helper functions ;  Cconjunction;  Cconjunction< B1 >;  Cconjunction< B1, Bn... >;  Cexternal_constructor;  Cexternal_constructor< value_t::array >;  Cexternal_constructor< value_t::boolean >;  Cexternal_constructor< value_t::number_float >;  Cexternal_constructor< value_t::number_integer >;  Cexternal_constructor< value_t::number_unsigned >;  Cexternal_constructor< value_t::object >;  Cexternal_constructor< value_t::string >;  Cfrom_json_fn;  Chas_from_json;  Chas_non_default_from_json;  Chas_to_json;  Cis_basic_json_nested_type;  Cis_compatible_array_type;  Cis_compatible_integer_type;  Cis_compatible_integer_type_impl;  Cis_compatible_integer_type_impl< true, RealIntegerType, CompatibleNumberIntegerType >;  Cis_compatible_object_type;  Cis_compatible_object_type_impl;  Cis_compatible_object_type_impl< true, RealType, CompatibleObjectType >;  Cnegation;  Cpriority_tag;  Cpriority_tag< 0 >;  Cstatic_const;  Cto_json_fn;  Cadl_serializerDefault JSONSerializer template argument ;  ►Cbasic_jsonClass to store JSON values ;  Cinternal_iteratorIterator value ;  Citer_implTemplate for a random access iterator for the basic_json class ;  ►Citeration_proxyProxy class for the iterator_wrapper functions ;  Citeration_proxy_internalHelper class for iteration ;  Cjson_pointerJSON Pointer ;  Cjson_reverse_iteratorTemplate for a reverse iterator class ;  Cjson_valueJSON value ;  ►ClexerLexical analysis ;  CstrtonumParse string into a built-in arithme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v616/annotated.html:47,Guid,Guide,47,doc/v616/annotated.html,https://root.cern,https://root.cern/doc/v616/annotated.html,1,['Guid'],['Guide']
Usability,". ROOT: Class List. ROOT;  6.06/09. Reference Guide. ROOT Home Page; Main Page; Related Pages; User's Classes; Namespaces; All Classes; Files; Release Notes. Class List; Class Index; Class Hierarchy; Class Members. Class List . Here are the classes, structs, unions and interfaces with brief descriptions:; [detail level 123456];  ►NBidirMMapPipe_implNamespace for implementation details of BidirMMapPipe ;  CPageChunkClass representing a chunk of pages ;  ►CPagesHandle class for a number of Pages ;  CimplImplementation ;  ►Ncling;  ►Nutils;  ►Ncppyy;  C_Double;  ►C_global_cpp;  Cstd;  C_ns_meta;  C_stdmeta;  Cdouble;  Clong_int;  Cshort;  CTemplate.  Cunsigned_int;  Cunsigned_long;  Cunsigned_short;  ►NMemstat;  CSCustomDigest;  CSFind_t;  CTMemStatFAddrContainer;  CTMemStatMng;  CToLower_t;  ►NPyROOT;  ►CMethodProxy;  CMethodInfo_t;  CObjectProxy;  CPropertyProxy;  CPyCallable;  CPyRootClassType object to hold TClassRef instance (this is only semantically a presentation of PyRootType instances, not in a C++ sense) ;  CTCallContext;  CTClassMethodHolder;  CTConstructorHolder;  CTConverter;  CTCppObjectArrayConverter;  CTCppObjectArrayExecutor;  CTCppObjectBySmartPtrExecutor;  CTCppObjectBySmartPtrPtrExecutor;  CTCppObjectBySmartPtrRefExecutor;  CTCppObjectByValueExecutor;  CTCppObjectConverter;  CTCppObjectExecutor;  CTCppObjectPtrConverter;  CTCppObjectPtrPtrExecutor;  CTCppObjectPtrRefExecutor;  CTCppObjectRefExecutor;  CTCStringConverter;  CTemplateProxyTemplate proxy object to return functions and methods ;  CTExecutor;  CTFunctionHolder;  CTLongLongArrayConverter;  CTMemoryRegulator;  CTMethodHolder;  CTNonConstCStringConverter;  CTNonConstUCStringConverter;  CTNotImplementedConverter;  ►CTParameter;  CValue;  CTPyBufferFactoryFactory for python buffers of non-string type ;  CTPyException;  CTPyROOTApplication;  CTRefCppObjectConverter;  CTRefExecutor;  CTSetItemHolder;  CTSmartPtrCppObjectConverter;  CTSTLIteratorConverter;  CTStrictCppObjectConverter;  CTValueCpp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/annotated.html:46,Guid,Guide,46,root/html606/annotated.html,https://root.cern,https://root.cern/root/html606/annotated.html,1,['Guid'],['Guide']
Usability,". ROOT: Classification Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classification Class ReferenceTMVA. ; Class to perform two class classification. ; The first step before any analysis is to prepare the data, to do that you need to create an object of TMVA::DataLoader, in this object you need to configure the variables and the number of events to train/test. The class TMVA::Experimental::Classification needs a TMVA::DataLoader object, optional a TFile object to save the results and some extra options in a string like ""V:Color:Transformations=I;D;P;U;G:Silent:DrawProgressBar:ModelPersistence:Jobs=2"" where: V = verbose output Color = coloured screen output Silent = batch mode: boolean silent flag inhibiting any output from TMVA Transformations = list of transformations to test. DrawProgressBar = draw progress bar to display training and testing. ModelPersistence = to save the trained model in xml or serialized files. Jobs = number of ml methods to test/train in parallel using MultiProc, requires to call Evaluate method. Basic example. void classification(UInt_t jobs = 2); {; TMVA::Tools::Instance();; ; TFile *input(0);; TString fname = ""./tmva_class_example.root"";; if (!gSystem->AccessPathName(fname)) {; input = TFile::Open(fname); // check if file in local directory exists; } else {; TFile::SetCacheFileDir(""."");; input = TFile::Open(""http://root.cern/files/tmva_class_example.root"", ""CACHEREAD"");; }; if (!input) {; std::cout << ""ERROR: could not open data file"" << std::endl;; exit(1);; }; ; // Register the training and test trees; ; TTree *signalTree = (TTree *)input->Get(""TreeS"");; TTree *background = (TTree *)input->Get(""TreeB"");; ; TMVA::DataLoader *dataloader = new TMVA::DataLoader(""dataset"");; ; dataloader->AddVariable(""myvar1 := var1+var2"", 'F');; dataloader->AddVariable(""myvar2 := var1-var2"", ""Expression 2"", """", 'F');; dataloader->AddVariable(""var3"", ""Variable 3"", ""units"", 'F');; dataloader->AddVariable(""var4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Classification.html:70,Guid,Guide,70,doc/master/classTMVA_1_1Classification.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Classification.html,2,"['Guid', 'progress bar']","['Guide', 'progress bar']"
Usability,". ROOT: ColorStruct_t Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; ColorStruct_t Struct Reference. . Definition at line 310 of file GuiTypes.h. Public Attributes; UShort_t fBlue;  blue component (0..65535) ;  ; UShort_t fGreen;  green component (0..65535) ;  ; UShort_t fMask;  mask telling which color components are valid ;  ; ULong_t fPixel;  color pixel value (index in color table) ;  ; UShort_t fRed;  red component (0..65535) ;  . #include <GuiTypes.h>; Member Data Documentation. ◆ fBlue. UShort_t ColorStruct_t::fBlue. blue component (0..65535) ; Definition at line 314 of file GuiTypes.h. ◆ fGreen. UShort_t ColorStruct_t::fGreen. green component (0..65535) ; Definition at line 313 of file GuiTypes.h. ◆ fMask. UShort_t ColorStruct_t::fMask. mask telling which color components are valid ; Definition at line 315 of file GuiTypes.h. ◆ fPixel. ULong_t ColorStruct_t::fPixel. color pixel value (index in color table) ; Definition at line 311 of file GuiTypes.h. ◆ fRed. UShort_t ColorStruct_t::fRed. red component (0..65535) ; Definition at line 312 of file GuiTypes.h. Collaboration diagram for ColorStruct_t:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; core/gui/inc/GuiTypes.h. ColorStruct_t. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:35 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structColorStruct__t.html:70,Guid,Guide,70,doc/master/structColorStruct__t.html,https://root.cern,https://root.cern/doc/master/structColorStruct__t.html,2,['Guid'],['Guide']
Usability,. ROOT: Configuration Struct Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; Configuration Struct Reference. . Definition at line 3 of file RooAbsTestStatistic.h. Public Attributes; std::string addCoefRangeName;  ; bool binnedL = false;  ; bool cloneInputData = true;  ; double integrateOverBinsPrecision = -1.;  ; RooFit::MPSplit interleave = RooFit::BulkPartition;  ; int nCPU = 1;  ; std::string rangeName;  Stores the configuration parameters for RooAbsTestStatistic. ;  ; bool splitCutRange = false;  ; bool takeGlobalObservablesFromData = false;  ; bool verbose = true;  . #include <RooAbsTestStatistic.h>; Member Data Documentation. ◆ addCoefRangeName. std::string Configuration::addCoefRangeName. Definition at line 6 of file RooAbsTestStatistic.h. ◆ binnedL. bool Configuration::binnedL = false. Definition at line 13 of file RooAbsTestStatistic.h. ◆ cloneInputData. bool Configuration::cloneInputData = true. Definition at line 11 of file RooAbsTestStatistic.h. ◆ integrateOverBinsPrecision. double Configuration::integrateOverBinsPrecision = -1. Definition at line 12 of file RooAbsTestStatistic.h. ◆ interleave. RooFit::MPSplit Configuration::interleave = RooFit::BulkPartition. Definition at line 8 of file RooAbsTestStatistic.h. ◆ nCPU. int Configuration::nCPU = 1. Definition at line 7 of file RooAbsTestStatistic.h. ◆ rangeName. std::string Configuration::rangeName. Stores the configuration parameters for RooAbsTestStatistic. ; Definition at line 5 of file RooAbsTestStatistic.h. ◆ splitCutRange. bool Configuration::splitCutRange = false. Definition at line 10 of file RooAbsTestStatistic.h. ◆ takeGlobalObservablesFromData. bool Configuration::takeGlobalObservablesFromData = false. Definition at line 14 of file RooAbsTestStatistic.h. ◆ verbose. bool Configuration::verbose = true. Definition at line 9 of file RooAbsTestStatistic.h. Collaboration diagram for Configurati,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/structConfiguration.html:69,Guid,Guide,69,doc/v632/structConfiguration.html,https://root.cern,https://root.cern/doc/v632/structConfiguration.html,1,['Guid'],['Guide']
Usability,". ROOT: Containers tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Containers tutorialsTutorials. ; Examples showing the ""containers' classes"" usage. . Files; file  cnt001_basictseq.C;   Example showing possible usages of the TSeq class. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__cont.html:60,Guid,Guide,60,doc/master/group__tutorial__cont.html,https://root.cern,https://root.cern/doc/master/group__tutorial__cont.html,2,['Guid'],['Guide']
Usability,". ROOT: Containers. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; ContainersCore ROOT classes. ; The containers and generators the ROOT framework offers. ; Collections are a key feature of the ROOT system. Many, if not most, of the applications you write will use collections. If you have used polymorphic C++ collections before, some of this material will be review. However, much of this tutorial covers aspects of collections specific to the ROOT system. In this tutorial the following features will be demonstrated:. Using collections; How to create instances of collections; The difference between lists, ordered collections, hash-tables, maps, etc.; How to add and remove elements of a collection; How to search a collection for a specific element; How to access and modify collection elements; How to iterate over a collection; How to manage memory for collections and collection elements; How collection elements are tested for equality (IsEqual()); How collection elements are compared (Compare()) in case of sorted collections; How collection elements are hashed (Hash()) in hash tables . Classes; class  TArray;  Abstract array base class. More...;  ; class  TArrayC;  Array of chars or bytes (8 bits per element). More...;  ; class  TArrayD;  Array of doubles (64 bits per element). More...;  ; class  TArrayF;  Array of floats (32 bits per element). More...;  ; class  TArrayI;  Array of integers (32 bits per element). More...;  ; class  TArrayL;  Array of longs (32 or 64 bits per element). More...;  ; class  TArrayL64;  Array of long64s (64 bits per element). More...;  ; class  TArrayS;  Array of shorts (16 bits per element). More...;  ; class  TBits;  Container of bits. More...;  ; class  TBtree;  B-tree class. More...;  ; class  TClassTable;  This class registers for all classes their name, id and dictionary function in a hash table. More...;  ; class  TClonesArray;  An array of clone (identical) objects. More...;  ; class  TColl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Containers.html:50,Guid,Guide,50,doc/master/group__Containers.html,https://root.cern,https://root.cern/doc/master/group__Containers.html,1,['Guid'],['Guide']
Usability,. ROOT: Core ROOT classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules ; Core ROOT classes. ; The Core classes of ROOT. . Modules;  Base ROOT classes;  The Base classes of ROOT. ;  ;  Containers;  The containers and generators the ROOT framework offers. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:32 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Core.html:57,Guid,Guide,57,doc/master/group__Core.html,https://root.cern,https://root.cern/doc/master/group__Core.html,2,['Guid'],['Guide']
Usability,. ROOT: CpuInfo_t Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; CpuInfo_t Struct Reference. . Definition at line 163 of file TSystem.h. Public Member Functions;  CpuInfo_t ();  ; virtual ~CpuInfo_t ();  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Public Attributes; Float_t fIdle;  ; Float_t fLoad15m;  ; Float_t fLoad1m;  ; Float_t fLoad5m;  ; Float_t fSys;  ; Float_t fTotal;  ; Float_t fUser;  . #include <TSystem.h>; Constructor & Destructor Documentation. ◆ CpuInfo_t(). CpuInfo_t::CpuInfo_t ; (; ). inline . Definition at line 171 of file TSystem.h. ◆ ~CpuInfo_t(). virtual CpuInfo_t::~CpuInfo_t ; (; ). inlinevirtual . Definition at line 173 of file TSystem.h. Member Function Documentation. ◆ Class(). static TClass * CpuInfo_t::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * CpuInfo_t::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t CpuInfo_t::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 174 of file TSystem.h. ◆ DeclFileName(). static const char * CpuInfo_t::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 174 of file TSystem.h. ◆ IsA(). virtual TClass * CpuInfo_t::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Definition at line 174 of file TSystem.h. ◆ Streamer(). virtual void CpuInfo_t::Streamer ; (; TBuffer & ; ). virtual . ◆ StreamerNVirtual(). void CpuInfo_t::Strea,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structCpuInfo__t.html:66,Guid,Guide,66,doc/master/structCpuInfo__t.html,https://root.cern,https://root.cern/doc/master/structCpuInfo__t.html,1,['Guid'],['Guide']
Usability,". ROOT: Cumulative Distribution Functions (CDF). ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; Cumulative Distribution Functions (CDF)Math » MathCore | Math » MathMore » Statistical functions. ; Cumulative distribution functions of various distributions. ; The functions with the extension _cdf calculate the lower tail integral of the probability density function. \[ D(x) = \int_{-\infty}^{x} p(x') dx' \]. while those with the _cdf_c extension calculate the complement of cumulative distribution function, called in statistics the survival function. It corresponds to the upper tail integral of the probability density function. \[ D(x) = \int_{x}^{+\infty} p(x') dx' \]. NOTE: In the old releases (< 5.14) the _cdf functions were called _quant and the _cdf_c functions were called _prob. These names are currently kept for backward compatibility, but their usage is deprecated.; These functions are defined in the header file Math/ProbFunc.h or in the global one including all statistical functions Math/DistFunc.h . Functions; double ROOT::Math::beta_cdf (double x, double a, double b);  Cumulative distribution function of the beta distribution Upper tail of the integral of the beta_pdf. ;  ; double ROOT::Math::beta_cdf_c (double x, double a, double b);  Complement of the cumulative distribution function of the beta distribution. ;  ; double ROOT::Math::binomial_cdf (unsigned int k, double p, unsigned int n);  Cumulative distribution function of the Binomial distribution Lower tail of the integral of the binomial_pdf. ;  ; double ROOT::Math::binomial_cdf_c (unsigned int k, double p, unsigned int n);  Complement of the cumulative distribution function of the Binomial distribution. ;  ; double ROOT::Math::breitwigner_cdf (double x, double gamma, double x0=0);  Cumulative distribution function (lower tail) of the Breit_Wigner distribution and it is similar (just a different parameter definition) to the Cauchy distribution (see cauchy_c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__ProbFunc.html:79,Guid,Guide,79,doc/master/group__ProbFunc.html,https://root.cern,https://root.cern/doc/master/group__ProbFunc.html,1,['Guid'],['Guide']
Usability,". ROOT: Dataframe tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Dataframe tutorialsTutorials. ; These examples show various features of RDataFrame: ROOT's declarative analysis interface. ; RDataFrame offers a high level interface for the analysis of data stored in TTrees, CSV files and other data formats.; In addition, multi-threading and other low-level optimisations allow users to exploit all the resources available on their machines transparently.; In a nutshell: ROOT::EnableImplicitMT(); // Enable ROOT's implicit multi-threading; ROOT::RDataFrame d(""myTree"", ""file_*.root""); // Interface to TTree and TChain; auto histoA = d.Histo1D(""Branch_A""); // Book the filling of a histogram; auto histoB = d.Histo1D(""Branch_B""); // Book the filling of another histogram; // Data processing is triggered by the next line, which accesses a booked result for the first time; // All booked results are evaluated during the same parallel event loop.; histoA->Draw(); // <-- event loop runs here!; histoB->Draw(); // HistoB has already been filled, no event loop is run here; d#define d(i)Definition RSha256.hxx:102; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; ROOT::EnableImplicitMTvoid EnableImplicitMT(UInt_t numthreads=0)Enable ROOT's implicit multi-threading for all objects and methods that provide an internal paralleli...Definition TROOT.cxx:539; Explore the examples below or go to RDataFrame's user guide. . Files; file  df000_simple.C;   Simple RDataFrame example in C++. ;  ; file  df000_simple.py;   Simple RDataFrame example in Python. ;  ; file  df001_introduction.C;   Basic RDataFrame usage. ;  ; file  df001_introduction.py;   Basic usage of RDataFrame from python. ;  ; file  df002_dataModel.C;   Show how to work with non-flat data models, e.g. ;  ; file  df002_dataModel.py;   Show how to work with non-flat data models, e.g. ;  ; fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__dataframe.html:59,Guid,Guide,59,doc/master/group__tutorial__dataframe.html,https://root.cern,https://root.cern/doc/master/group__tutorial__dataframe.html,1,['Guid'],['Guide']
Usability,". ROOT: Dataframe. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files |; Classes ; Dataframe. ; ROOT's RDataFrame allows to analyse data stored in TTrees with a high level interface. . Files; file  ActionHelpers.hxx;  ; file  RMergeableValue.hxx;  . Classes; class  GraphCreatorHelper;  Helper class that provides the operation graph nodes. More...;  ; class  ROOT::Internal::RDF::GraphDrawing::GraphNode;  Class used to create the operation graph to be printed in the dot representation. More...;  ; class  ROOT::Internal::RDF::RAction< Helper, PrevNode, ColumnTypes_t >;  A RDataFrame node that produces a result. More...;  ; class  ROOT::RDF::RArrowDS;  RDataFrame data source class to interface with Apache Arrow. More...;  ; class  RColumnReaderBase;  Pure virtual base class for all column reader types. More...;  ; class  ROOT::Internal::RDF::RColumnRegister;  A binder for user-defined columns, variations and aliases. More...;  ; class  ROOT::RDF::RCsvDS;  RDataFrame data source class for reading CSV files. More...;  ; class  ROOT::RDataFrame;  ROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree , CSV and other data formats, in C++ or Python. More...;  ; class  ROOT::RDF::Experimental::RDatasetSpec;  The dataset specification for RDataFrame. More...;  ; class  ROOT::RDF::RDataSource;  RDataSource defines an API that RDataFrame can use to read arbitrary data formats. More...;  ; class  ROOT::RDF::RDFDescription;  A DFDescription contains useful information about a given RDataFrame computation graph. More...;  ; class  ROOT::RDF::RDisplay;  This class is the textual representation of the content of a columnar dataset. More...;  ; class  ROOT::Internal::RDF::RDisplayElement;  Helper class to let Display print compact tabular representations of the events. More...;  ; class  ROOT::RDF::RInterface< Proxied, DataSource >;  The public interface to the RDataFrame federation of classes. More...;  ; class ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__dataframe.html:49,Guid,Guide,49,doc/master/group__dataframe.html,https://root.cern,https://root.cern/doc/master/group__dataframe.html,1,['Guid'],['Guide']
Usability,". ROOT: Deprecated List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Deprecated List. Member ClassDefT (name, id); ; Member ClassImp (name); ; Module proof ; We keep PROOF for those who still need it for legacy use cases. PROOF is not developed anymore and receiving only limited support. ROOT has since a few years moved to RDataFrame and related products as multi-core/multi-processing engines. ; Member RooAbsArg::R__DEPRECATED (6, 36, ""Use observableOverlaps()."") inline bool dependentOverlaps(const RooAbsData *dset; Use observableOverlaps() ; Member RooAbsArg::R__DEPRECATED (6, 36, ""Use recursiveCheckObservables()."") inline bool recursiveCheckDependents(const RooArgSet *nset) const; Use recursiveCheckObservables() ; Member RooAbsArg::R__DEPRECATED (6, 36, ""Use checkObservables()."") inline bool checkDependents(const RooArgSet *nset) const; Use checkObservables() ; Member RooAbsArg::R__DEPRECATED (6, 36, ""Use observableOverlaps()."") inline bool dependentOverlaps(const RooArgSet *depList; Use observableOverlaps() ; Member RooAbsCategory::defineType (const char *label); Use defineState(const std::string& label) ; Member RooAbsCategory::defineType (const char *label, int index); Use defineState(const std::string& label, value_type index) ; Member RooAbsCategory::defineTypeUnchecked (const char *label, value_type index); Use defineStateUnchecked(const std::string& label, value_type index) ; Member RooAbsCategory::lookupType (const RooCatType &type, bool printError=false) const; RooCatType is not used, any more. This function will create one and let it leak. Use lookupIndex() (preferred) or lookupName() instead. ; Member RooAbsCategory::lookupType (value_type index, bool printError=false) const; RooCatType is not used, any more. This function will create one and let it leak. Use lookupIndex() (preferred) or lookupName() instead. ; Member RooAbsCategory::lookupType (const char *label, bool printError=false) const; RooCatType is not used, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/deprecated.html:55,Guid,Guide,55,doc/master/deprecated.html,https://root.cern,https://root.cern/doc/master/deprecated.html,1,['Guid'],['Guide']
Usability,". ROOT: DummyObject Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; DummyObject Class Reference. . Definition at line 56 of file rootqt5.cpp. Public Member Functions;  ~DummyObject () override;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classDummyObject.html:67,Guid,Guide,67,doc/master/classDummyObject.html,https://root.cern,https://root.cern/doc/master/classDummyObject.html,1,['Guid'],['Guide']
Usability,. ROOT: Envelope Tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Envelope TutorialsTutorials » TMVA tutorials. . Files; file  classification.C;   ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__tmva__envelope.html:58,Guid,Guide,58,doc/master/group__tutorial__tmva__envelope.html,https://root.cern,https://root.cern/doc/master/group__tutorial__tmva__envelope.html,2,['Guid'],['Guide']
Usability,. ROOT: Event Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; Event Class Reference. . Definition at line 171 of file collection_proxies.C. Public Member Functions;  Event ();  ; void Clear ();  ; void Create ();  ; void MakeJets (int N);  ; void MakeParticles (int N);  ; void MakeRecHits (int N);  . Public Attributes; int eventId {0};  ; REveCaloDataHist * fCaloData {nullptr};  ; std::vector< TList * > fListData;  ; int N_jets {0};  ; int N_tracks {0};  . Constructor & Destructor Documentation. ◆ Event(). Event::Event ; (; ). inline . Definition at line 181 of file collection_proxies.C. Member Function Documentation. ◆ Clear(). void Event::Clear ; (; ). inline . Definition at line 265 of file collection_proxies.C. ◆ Create(). void Event::Create ; (; ). inline . Definition at line 272 of file collection_proxies.C. ◆ MakeJets(). void Event::MakeJets ; (; int ; N). inline . Definition at line 193 of file collection_proxies.C. ◆ MakeParticles(). void Event::MakeParticles ; (; int ; N). inline . Definition at line 217 of file collection_proxies.C. ◆ MakeRecHits(). void Event::MakeRecHits ; (; int ; N). inline . Definition at line 246 of file collection_proxies.C. Member Data Documentation. ◆ eventId. int Event::eventId {0}. Definition at line 174 of file collection_proxies.C. ◆ fCaloData. REveCaloDataHist* Event::fCaloData {nullptr}. Definition at line 179 of file collection_proxies.C. ◆ fListData. std::vector<TList*> Event::fListData. Definition at line 177 of file collection_proxies.C. ◆ N_jets. int Event::N_jets {0}. Definition at line 176 of file collection_proxies.C. ◆ N_tracks. int Event::N_tracks {0}. Definition at line 175 of file collection_proxies.C. tutorials/eve7/collection_proxies.C. Event. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:35 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classEvent.html:61,Guid,Guide,61,doc/master/classEvent.html,https://root.cern,https://root.cern/doc/master/classEvent.html,5,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Event Display. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Event DisplayGraphics » 3D Graphics. ; The Event Display classes. ; Eve is a ROOT module based on experiment-independent part of the ALICE event display developed in cooperation between ALICE offline project and ROOT during the last two years. It has been used in ALICE for more than a year to perform high-level event visualization, debugging of simulation and reconstruction code as well as for raw-data visualization.; Papers describing Eve (older ones still using the old name - Reve):. [EVE - Event Visualization Environment of the ROOT framework] (http://pos.sissa.it//archive/conferences/070/103/ACAT08_103.pdf) presented at ACAT 2008.; [Event Visualization Environment of the ALICE experiment] (http://indico.cern.ch/contributionDisplay.py?contribId=25&confId=13356) presented at ROOT Workshop 2007.; [Raw-data display and visual reconstruction validation in ALICE] (http://indico.cern.ch/contributionDisplay.py?contribId=442&sessionId=23&confId=3580) presented at CHEP 2007. Eve is built on top of ROOT's GUI, GL and GED infrastructure and delivers the following main features:. Base-classes for representation of visual objects that can be presented in list-tree views, object-editors and rendered via OpenGL (TEveElement and sub-classes).; Application manager class TEveManager for top-level management of elements, GUI components, geometries and events;; Classes for presentation of full TGeo geometries (TEveGeoNode and TEveGeoTopNode) as well as of simplifed geometries via extraction of shape-data (TEveGeoShape). CMS geometry. Classes for presentation of trajectories or tracks (TEveTrack, TEveTrackPropagator) and hits or clusters (TEvePointSet, TEvePointSetArray). A simulated ALICE pp@14TeV event in 3D. Base-classes for presentation of raw-data or digits (TEveDigitSet, TEveQuadSet and TEveBoxSet). A collection of objects can be assigned common signal-to-color mappi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__TEve.html:53,Guid,Guide,53,doc/master/group__TEve.html,https://root.cern,https://root.cern/doc/master/group__TEve.html,1,['Guid'],['Guide']
Usability,". ROOT: Event display ROOT7 tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Event display ROOT7 tutorialsTutorials. ; Examples showing the ""Event display classes"" usage with ROOT7. . Files; file  collection_proxies.C;  This is an example of visualization of containers with REveDataCollection and REveDataProxyBuilders. ;  ; file  csgdemo.C;  Combinatorial Solid Geometry example. ;  ; file  event_demo.C;  This example display geometry, tracks and hits in web browser. ;  ; file  jets.C;  This example display only points in web browser. ;  ; file  lego.C;  This example display only points in web browser. ;  ; file  points.C;  This example display only points in web browser. ;  ; file  projection_prescale.C;  This example display projection prescale. ;  ; file  show_extract.C;  Helper script for showing of extracted / simplified geometries. ;  ; file  texts.C;  This example display only texts in web browser. ;  ; file  tracks.C;  This example display only points in web browser. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__eve7.html:69,Guid,Guide,69,doc/master/group__tutorial__eve7.html,https://root.cern,https://root.cern/doc/master/group__tutorial__eve7.html,3,"['Guid', 'simpl']","['Guide', 'simplified']"
Usability,". ROOT: Event display tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Event display tutorialsTutorials. ; Examples showing the ""Event display classes"" usage. . Files; file  alice_esd.C;  Complex example showing ALICE ESD track visualization. ;  ; file  alice_esd_html_summary.C;  Html table and event summary for alice_esd.C. ;  ; file  alice_esd_split.C;  Complex example showing ALICE ESD visualization in several views. ;  ; file  alice_vsd.C;  Complex example showing ALICE VSD visualization. ;  ; file  annotation.C;  Demonstrates usage of TGLAnnotation class. ;  ; file  arrow.C;  Demonstrates usage of TEveArrow class. ;  ; file  arrow_standalone.C;  How to use EVE without the standard window. ;  ; file  assembly.C;  Geometry detector assembly example. ;  ; file  box.C;  Demonstrates usage of TEveBox class. ;  ; file  box.C;  Demonstrates usage of TEveBox class. ;  ; file  boxset.C;  Demonstrates usage of TEveBoxSet class. ;  ; file  boxset.C;  Demonstrates usage of REveBoxSet class. ;  ; file  boxset_cones.C;  Demonstrates usage of 'cone' mode in TEveBoxSet class. ;  ; file  boxset_cones.C;  Demonstrates usage of 'cone' mode in REveBoxSet class. ;  ; file  calo_detail.C;  Calorimeter detailed view by using TEveCaloDataVec as data-source. ;  ; file  calorimeters.C;  Demonstrates usage of EVE calorimetry classes. ;  ; file  camera_restore.C;  ; file  compound.C;  Demonstrates usage of EVE compound objects - class TEveCompound. ;  ; file  csgdemo.C;  Combinatorial Solid Geometry example. ;  ; file  geom_alias.C;  Demonstrates usage of geometry aliases - merge ALICE ITS with ATLAS MUON. ;  ; file  geom_alice_its.C;  Shows geometry of ALICE ITS. ;  ; file  geom_alice_tpc.C;  Shows geometry of ALICE TPC. ;  ; file  geom_atlas.C;  Shows ATLAS geometry. ;  ; file  geom_atlas_playback.C;  Plays back event-recording of a root session running geom_atlas.C tutorial. ;  ; file  geom_cms.C;  Shows CMS geometry. ;  ; file  geom_cm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__eve.html:63,Guid,Guide,63,doc/master/group__tutorial__eve.html,https://root.cern,https://root.cern/doc/master/group__tutorial__eve.html,1,['Guid'],['Guide']
Usability,". ROOT: Event_t Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; Event_t Struct Reference. ; Event structure. ; Definition at line 174 of file GuiTypes.h. Public Attributes; UInt_t fCode;  key or button code ;  ; Int_t fCount;  if non-zero, at least this many more exposes ;  ; Int_t fFormat;  Next fields only used by kClientMessageEvent. ;  ; Handle_t fHandle;  general resource handle (used for atoms or windows) ;  ; UInt_t fHeight;  width and height of exposed area ;  ; Bool_t fSendEvent;  true if event came from SendEvent ;  ; UInt_t fState;  key or button mask ;  ; Time_t fTime;  time event event occurred in ms ;  ; EGEventType fType;  of event (see EGEventType) ;  ; Longptr_t fUser [5];  5 longs can be used by client message events NOTE: only [0], [1] and [2] may be used. ;  ; UInt_t fWidth;  ; Window_t fWindow;  window reported event is relative to ;  ; Int_t fX;  ; Int_t fXRoot;  ; Int_t fY;  pointer x, y coordinates in event window ;  ; Int_t fYRoot;  coordinates relative to root ;  . #include <GuiTypes.h>; Member Data Documentation. ◆ fCode. UInt_t Event_t::fCode. key or button code ; Definition at line 180 of file GuiTypes.h. ◆ fCount. Int_t Event_t::fCount. if non-zero, at least this many more exposes ; Definition at line 183 of file GuiTypes.h. ◆ fFormat. Int_t Event_t::fFormat. Next fields only used by kClientMessageEvent. ; Definition at line 186 of file GuiTypes.h. ◆ fHandle. Handle_t Event_t::fHandle. general resource handle (used for atoms or windows) ; Definition at line 185 of file GuiTypes.h. ◆ fHeight. UInt_t Event_t::fHeight. width and height of exposed area ; Definition at line 182 of file GuiTypes.h. ◆ fSendEvent. Bool_t Event_t::fSendEvent. true if event came from SendEvent ; Definition at line 184 of file GuiTypes.h. ◆ fState. UInt_t Event_t::fState. key or button mask ; Definition at line 181 of file GuiTypes.h. ◆ fTime. Time_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structEvent__t.html:64,Guid,Guide,64,doc/master/structEvent__t.html,https://root.cern,https://root.cern/doc/master/structEvent__t.html,1,['Guid'],['Guide']
Usability,. ROOT: FITS files interface tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; FITS files interface tutorialsTutorials. ; Examples showing the FITS file interface. . Files; file  FITS_tutorial1.C;   Open a FITS file and retrieve the first plane of the image array as a TImage object ;  ; file  FITS_tutorial2.C;   Open a FITS file whose primary array represents a spectrum (flux vs wavelength). ;  ; file  FITS_tutorial3.C;   Open a FITS file and retrieve the first plane of the image array as a TImage object. ;  ; file  FITS_tutorial4.C;   Open a FITS file whose primary array represents a spectrum (flux vs wavelength). ;  ; file  FITS_tutorial5.C;   Open a FITS file whose primary array represents a spectrum (flux vs wavelength) ;  ; file  FITS_tutorial6.C;   Open a FITS file whose primary array represents a spectrum table (flux vs wavelength) and dump its columns ;  ; file  FITS_tutorial7.C;   Open a FITS file that contains a catalog of astronomical objects and dump some of its columns ;  ; file  FITS_tutorial8.C;   Open a FITS file with columns containing variable-length arrays. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__FITS.html:70,Guid,Guide,70,doc/master/group__tutorial__FITS.html,https://root.cern,https://root.cern/doc/master/group__tutorial__FITS.html,2,['Guid'],['Guide']
Usability,". ROOT: FOAM tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; FOAM tutorialsTutorials. ; Examples showing how to use FOAM. . What is FOAM ?; FOAM is simplified version of multi-dimensional general purpose Monte Carlo event generator (integrator) with hyper-cubical ""foam of cells"". Certain features of full version of FOAM are omitted. mFOAM is intended as an easy to use tool for MC simulation/integration in few dimensions. It relies heavily on ROOT package, borrowing persistency of classes from ROOT. mFOAM can be easily used from the ROOT shell. For more difficult problems the full FOAM may be better. How to run application programs ?; The application program can be run in two modes: it can be simply interpreted by CLING or compiled. The first method is simpler but results in slower execution. The second method employs ACLiC - The Automatic Compiler of Libraries, which automatizes the process of compilation and linking.; In /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master.build/tutorials there are 3 demonstration programs:; foam_kanwa.C; is a simple example how to run FOAM in interactive mode. To run this macro issue the following simple command from the Linux shell:; root foam_kanwa.C; or from CLING:; root [0] .x foam_kanwa.C; Simulation will start and graphical canvas with plot of the distribution function appear. In this example we defined the distribution function simply as a global function function Camel2.; foam_demo.C; shows usage of FOAM in compiled mode, which is the preferred method. The integrand function is defined now as a Density method from class TFDISTR inheriting from abstract class TFoamIntegrand. User can modify interface to integrand function according to their needs but they should always remember to define Density method which provides the density distribution. Enter CLING interpreter and type:; root [0] gSystem->Load(""libFoam.so""); root [1] .x foam_demo.C+; to load FOAM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__FOAM.html:54,Guid,Guide,54,doc/master/group__tutorial__FOAM.html,https://root.cern,https://root.cern/doc/master/group__tutorial__FOAM.html,4,"['Guid', 'simpl']","['Guide', 'simpler', 'simplified', 'simply']"
Usability,. ROOT: Factory Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Factory Class Reference. . PyROOT. The documentation for this class was generated from the following file:; /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/pyzdoc/_factory.pyzdoc. Factory. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:35 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classFactory.html:63,Guid,Guide,63,doc/master/classFactory.html,https://root.cern,https://root.cern/doc/master/classFactory.html,2,['Guid'],['Guide']
Usability,. ROOT: Fast Fourier Transforms tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Fast Fourier Transforms tutorialsTutorials. ; Example showing the Fast Fourier Transforms interface in ROOT. . Files; file  FFT.C;   This tutorial illustrates the Fast Fourier Transforms interface in ROOT. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__fft.html:73,Guid,Guide,73,doc/master/group__tutorial__fft.html,https://root.cern,https://root.cern/doc/master/group__tutorial__fft.html,2,['Guid'],['Guide']
Usability,. ROOT: File List. ; ROOT   6.08/07 Reference Guide ; . File List . Here is a list of all files with brief descriptions:; [detail level 12345678];  ► bindings;  ► pyroot;  ► inc;  LinkDef.h;  TPyArg.h;  TPyDispatcher.h;  TPyException.h;  TPyFitFunction.h;  TPyReturn.h;  TPyROOTApplication.h;  TPySelector.h;  TPython.h;  ► JupyROOT;  ► src;  IOHandler.cxx;  ► src;  Converters.cxx;  Converters.h;  Cppyy.cxx;  Cppyy.h;  Executors.cxx;  Executors.h;  MethodProxy.cxx;  MethodProxy.h;  ObjectProxy.cxx;  ObjectProxy.h;  PropertyProxy.cxx;  PropertyProxy.h;  PyCallable.h;  PyROOT.h;  PyRootType.cxx;  PyRootType.h;  PyStrings.cxx;  PyStrings.h;  Pythonize.cxx;  Pythonize.h;  RootModule.cxx;  RootWrapper.cxx;  RootWrapper.h;  TCallContext.cxx;  TCallContext.h;  TClassMethodHolder.cxx;  TClassMethodHolder.h;  TConstructorHolder.cxx;  TConstructorHolder.h;  TCustomPyTypes.cxx;  TCustomPyTypes.h;  TemplateProxy.cxx;  TemplateProxy.h;  TFunctionHolder.cxx;  TFunctionHolder.h;  TMemoryRegulator.cxx;  TMemoryRegulator.h;  TMethodHolder.cxx;  TMethodHolder.h;  TPyArg.cxx;  TPyBufferFactory.cxx;  TPyBufferFactory.h;  TPyClassGenerator.cxx;  TPyClassGenerator.h;  TPyDispatcher.cxx;  TPyException.cxx;  TPyFitFunction.cxx;  TPyReturn.cxx;  TPyROOTApplication.cxx;  TPySelector.cxx;  TPython.cxx;  TSetItemHolder.cxx;  TSetItemHolder.h;  TTupleOfInstances.cxx;  TTupleOfInstances.h;  Utility.cxx;  Utility.h;  ► core;  ► base;  ► doc;  ► macros;  fillpatterns.C;  fonts.C;  textalign.C;  textangle.C;  ► inc;  ► ROOT;  StringConv.hxx;  Bswapcpy.h;  Buttons.h;  Bytes.h;  Byteswap.h;  DllImport.h;  GLConstants.h;  Gtypes.h;  GuiTypes.h;  Htypes.h;  KeySymbols.h;  LinkDef.h;  LinkDef1.h;  LinkDef2.h;  LinkDef3.h;  Match.h;  MessageTypes.h;  RConfig.h;  Riosfwd.h;  Riostream.h;  Rpair.h;  RQ_OBJECT.h;  RStipples.h;  Rstrstream.h;  Rtypeinfo.h;  Rtypes.h;  RtypesCore.h;  RtypesImp.h;  RVersion.h;  Strlen.h;  TApplication.h;  TApplicationImp.h;  TAtt3D.h;  TAttAxis.h;  TAttBBox.h;  TAttBBox2D.h;  TAt,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:46,Guid,Guide,46,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,1,['Guid'],['Guide']
Usability,. ROOT: File List. ; ROOT   6.10/09 Reference Guide ; . File List . Here is a list of all files with brief descriptions:; [detail level 12345678];  ► bindings;  ► pyroot;  ► inc;  TPyArg.h;  TPyDispatcher.h;  TPyException.h;  TPyFitFunction.h;  TPyReturn.h;  TPyROOTApplication.h;  TPySelector.h;  TPython.h;  ► JupyROOT;  ► src;  IOHandler.cxx;  ► src;  Converters.cxx;  Converters.h;  Cppyy.cxx;  Cppyy.h;  Executors.cxx;  Executors.h;  MethodProxy.cxx;  MethodProxy.h;  ObjectProxy.cxx;  ObjectProxy.h;  PropertyProxy.cxx;  PropertyProxy.h;  PyCallable.h;  PyROOT.h;  PyRootType.cxx;  PyRootType.h;  PyStrings.cxx;  PyStrings.h;  Pythonize.cxx;  Pythonize.h;  RootModule.cxx;  RootWrapper.cxx;  RootWrapper.h;  TCallContext.cxx;  TCallContext.h;  TClassMethodHolder.cxx;  TClassMethodHolder.h;  TConstructorHolder.cxx;  TConstructorHolder.h;  TCustomPyTypes.cxx;  TCustomPyTypes.h;  TemplateProxy.cxx;  TemplateProxy.h;  TFunctionHolder.cxx;  TFunctionHolder.h;  TMemoryRegulator.cxx;  TMemoryRegulator.h;  TMethodHolder.cxx;  TMethodHolder.h;  TPyArg.cxx;  TPyBufferFactory.cxx;  TPyBufferFactory.h;  TPyClassGenerator.cxx;  TPyClassGenerator.h;  TPyDispatcher.cxx;  TPyException.cxx;  TPyFitFunction.cxx;  TPyReturn.cxx;  TPyROOTApplication.cxx;  TPySelector.cxx;  TPython.cxx;  TSetItemHolder.cxx;  TSetItemHolder.h;  TTupleOfInstances.cxx;  TTupleOfInstances.h;  Utility.cxx;  Utility.h;  ► r;  ► inc;  RExports.h;  TRDataFrame.h;  TRDataFrame__ctors.h;  TRFunctionExport.h;  TRFunctionImport.h;  TRFunctionImport__oprtr.h;  TRInterface.h;  TRInterface_Binding.h;  TRInternalFunction.h;  TRInternalFunction__ctors.h;  TRObject.h;  ► src;  RExports.cxx;  TRCompletion.cxx;  TRCompletion.h;  TRDataFrame.cxx;  TRFunctionExport.cxx;  TRFunctionImport.cxx;  TRInterface.cxx;  TRObject.cxx;  ► tests;  Binding.C;  Class.C;  DataFrame.C;  Exception.C;  ExpClass.C;  Functions.C;  Functor.C;  FunModule.C;  Object.C;  Proxy.C;  ROOTR.C;  ► core;  ► base;  ► doc;  ► macros;  fillpatterns.C;  fonts.C; ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/files.html:46,Guid,Guide,46,doc/v610/files.html,https://root.cern,https://root.cern/doc/v610/files.html,1,['Guid'],['Guide']
Usability,. ROOT: File List. ; ROOT   6.12/07 Reference Guide ; . File List . Here is a list of all files with brief descriptions:; [detail level 12345678];  ► bindings;  ► pyroot;  ► inc;  TPyArg.h;  TPyDispatcher.h;  TPyException.h;  TPyFitFunction.h;  TPyReturn.h;  TPyROOTApplication.h;  TPySelector.h;  TPython.h;  ► JupyROOT;  ► src;  IOHandler.cxx;  ► src;  Converters.cxx;  Converters.h;  Cppyy.cxx;  Cppyy.h;  Executors.cxx;  Executors.h;  MethodProxy.cxx;  MethodProxy.h;  ObjectProxy.cxx;  ObjectProxy.h;  PropertyProxy.cxx;  PropertyProxy.h;  PyCallable.h;  PyROOT.h;  PyRootType.cxx;  PyRootType.h;  PyStrings.cxx;  PyStrings.h;  Pythonize.cxx;  Pythonize.h;  RootModule.cxx;  RootWrapper.cxx;  RootWrapper.h;  TCallContext.cxx;  TCallContext.h;  TClassMethodHolder.cxx;  TClassMethodHolder.h;  TConstructorHolder.cxx;  TConstructorHolder.h;  TCustomPyTypes.cxx;  TCustomPyTypes.h;  TemplateProxy.cxx;  TemplateProxy.h;  TFunctionHolder.cxx;  TFunctionHolder.h;  TMemoryRegulator.cxx;  TMemoryRegulator.h;  TMethodHolder.cxx;  TMethodHolder.h;  TPyArg.cxx;  TPyBufferFactory.cxx;  TPyBufferFactory.h;  TPyClassGenerator.cxx;  TPyClassGenerator.h;  TPyDispatcher.cxx;  TPyException.cxx;  TPyFitFunction.cxx;  TPyReturn.cxx;  TPyROOTApplication.cxx;  TPySelector.cxx;  TPython.cxx;  TSetItemHolder.cxx;  TSetItemHolder.h;  TTupleOfInstances.cxx;  TTupleOfInstances.h;  Utility.cxx;  Utility.h;  ► r;  ► inc;  RExports.h;  TRDataFrame.h;  TRDataFrame__ctors.h;  TRFunctionExport.h;  TRFunctionImport.h;  TRFunctionImport__oprtr.h;  TRInterface.h;  TRInterface_Binding.h;  TRInternalFunction.h;  TRInternalFunction__ctors.h;  TRObject.h;  ► src;  RExports.cxx;  TRCompletion.cxx;  TRCompletion.h;  TRDataFrame.cxx;  TRFunctionExport.cxx;  TRFunctionImport.cxx;  TRInterface.cxx;  TRObject.cxx;  ► tests;  Binding.C;  Class.C;  DataFrame.C;  Exception.C;  ExpClass.C;  Functions.C;  Functor.C;  FunModule.C;  Object.C;  Proxy.C;  ROOTR.C;  ► core;  ► base;  ► doc;  ► macros;  fillpatterns.C;  fonts.C; ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v612/files.html:46,Guid,Guide,46,doc/v612/files.html,https://root.cern,https://root.cern/doc/v612/files.html,1,['Guid'],['Guide']
Usability,. ROOT: File List. ; ROOT   6.14/05 Reference Guide ; . File List . Here is a list of all files with brief descriptions:; [detail level 12345678];  ► bindings;  ► pyroot;  ► inc;  TPyArg.h;  TPyDispatcher.h;  TPyException.h;  TPyFitFunction.h;  TPyReturn.h;  TPyROOTApplication.h;  TPySelector.h;  TPython.h;  TTreeAsFlatMatrix.h;  ► JupyROOT;  ► src;  IOHandler.cxx;  ► src;  Converters.cxx;  Converters.h;  Cppyy.cxx;  Cppyy.h;  Executors.cxx;  Executors.h;  MethodProxy.cxx;  MethodProxy.h;  ObjectProxy.cxx;  ObjectProxy.h;  PropertyProxy.cxx;  PropertyProxy.h;  PyCallable.h;  PyROOT.h;  PyRootType.cxx;  PyRootType.h;  PyStrings.cxx;  PyStrings.h;  Pythonize.cxx;  Pythonize.h;  RootModule.cxx;  RootWrapper.cxx;  RootWrapper.h;  TCallContext.cxx;  TCallContext.h;  TClassMethodHolder.cxx;  TClassMethodHolder.h;  TConstructorHolder.cxx;  TConstructorHolder.h;  TCustomPyTypes.cxx;  TCustomPyTypes.h;  TemplateProxy.cxx;  TemplateProxy.h;  TFunctionHolder.cxx;  TFunctionHolder.h;  TMemoryRegulator.cxx;  TMemoryRegulator.h;  TMethodHolder.cxx;  TMethodHolder.h;  TPyArg.cxx;  TPyBufferFactory.cxx;  TPyBufferFactory.h;  TPyClassGenerator.cxx;  TPyClassGenerator.h;  TPyDispatcher.cxx;  TPyException.cxx;  TPyFitFunction.cxx;  TPyReturn.cxx;  TPyROOTApplication.cxx;  TPySelector.cxx;  TPython.cxx;  TSetItemHolder.cxx;  TSetItemHolder.h;  TTupleOfInstances.cxx;  TTupleOfInstances.h;  Utility.cxx;  Utility.h;  ► r;  ► inc;  RExports.h;  TRDataFrame.h;  TRDataFrame__ctors.h;  TRFunctionExport.h;  TRFunctionImport.h;  TRFunctionImport__oprtr.h;  TRInterface.h;  TRInterface_Binding.h;  TRInternalFunction.h;  TRInternalFunction__ctors.h;  TRObject.h;  ► src;  RExports.cxx;  TRCompletion.cxx;  TRCompletion.h;  TRDataFrame.cxx;  TRFunctionExport.cxx;  TRFunctionImport.cxx;  TRInterface.cxx;  TRObject.cxx;  ► tests;  Binding.C;  Class.C;  DataFrame.C;  Exception.C;  ExpClass.C;  Functions.C;  Functor.C;  FunModule.C;  Object.C;  Proxy.C;  ROOTR.C;  ► core;  ► base;  ► doc;  ► macros;  fill,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v614/files.html:46,Guid,Guide,46,doc/v614/files.html,https://root.cern,https://root.cern/doc/v614/files.html,1,['Guid'],['Guide']
Usability,. ROOT: File List. ; ROOT   6.16/01 Reference Guide ; . File List. Here is a list of all files with brief descriptions:; [detail level 12345678];  ► bindings;  ► pyroot;  ► inc;  TPyArg.h;  TPyDispatcher.h;  TPyException.h;  TPyFitFunction.h;  TPyReturn.h;  TPyROOTApplication.h;  TPySelector.h;  TPython.h;  ► JupyROOT;  ► src;  IOHandler.cxx;  ► src;  Converters.cxx;  Converters.h;  Cppyy.cxx;  Cppyy.h;  Executors.cxx;  Executors.h;  MethodProxy.cxx;  MethodProxy.h;  ObjectProxy.cxx;  ObjectProxy.h;  PropertyProxy.cxx;  PropertyProxy.h;  PyCallable.h;  PyROOT.h;  PyRootType.cxx;  PyRootType.h;  PyStrings.cxx;  PyStrings.h;  Pythonize.cxx;  Pythonize.h;  RootModule.cxx;  RootWrapper.cxx;  RootWrapper.h;  TCallContext.cxx;  TCallContext.h;  TClassMethodHolder.cxx;  TClassMethodHolder.h;  TConstructorHolder.cxx;  TConstructorHolder.h;  TCustomPyTypes.cxx;  TCustomPyTypes.h;  TemplateProxy.cxx;  TemplateProxy.h;  TFunctionHolder.cxx;  TFunctionHolder.h;  TMemoryRegulator.cxx;  TMemoryRegulator.h;  TMethodHolder.cxx;  TMethodHolder.h;  TPyArg.cxx;  TPyBufferFactory.cxx;  TPyBufferFactory.h;  TPyClassGenerator.cxx;  TPyClassGenerator.h;  TPyDispatcher.cxx;  TPyException.cxx;  TPyFitFunction.cxx;  TPyReturn.cxx;  TPyROOTApplication.cxx;  TPySelector.cxx;  TPython.cxx;  TSetItemHolder.cxx;  TSetItemHolder.h;  TTupleOfInstances.cxx;  TTupleOfInstances.h;  Utility.cxx;  Utility.h;  ► r;  ► doc;  users-guide;  ► inc;  RExports.h;  TRDataFrame.h;  TRDataFrame__ctors.h;  TRFunctionExport.h;  TRFunctionImport.h;  TRFunctionImport__oprtr.h;  TRInterface.h;  TRInterface_Binding.h;  TRInternalFunction.h;  TRInternalFunction__ctors.h;  TRObject.h;  ► src;  RExports.cxx;  TRCompletion.cxx;  TRCompletion.h;  TRDataFrame.cxx;  TRFunctionExport.cxx;  TRFunctionImport.cxx;  TRInterface.cxx;  TRObject.cxx;  ► tests;  Binding.C;  Class.C;  DataFrame.C;  Exception.C;  ExpClass.C;  Functions.C;  Functor.C;  FunModule.C;  Object.C;  Proxy.C;  ROOTR.C;  ► core;  ► base;  ► doc;  ► macros;  fillp,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v616/files.html:46,Guid,Guide,46,doc/v616/files.html,https://root.cern,https://root.cern/doc/v616/files.html,1,['Guid'],['Guide']
Usability,. ROOT: File List. ROOT;  6.06/09. Reference Guide. ROOT Home Page; Main Page; Related Pages; User's Classes; Namespaces; All Classes; Files; Release Notes. File List; File Members. File List . Here is a list of all files with brief descriptions:; [detail level 1234567];  ► bindings;  ► pyroot;  ► inc;  LinkDef.h;  TPyArg.h;  TPyDispatcher.h;  TPyException.h;  TPyFitFunction.h;  TPyReturn.h;  TPyROOTApplication.h;  TPySelector.h;  TPython.h;  ► ROOTaaS;  ► config;  ► nbconvert;  sample_config.py;  ► notebook;  sample_config.py;  ► html;  ► export;  __init__.py;  cpphighlighter.py;  ► static;  ► js;  custom.js;  __init__.py;  ► iPyROOT;  __init__.py;  cppcompleter.py;  cppmagic.py;  cpptransformer.py;  utils.py;  __init__.py;  ► src;  Converters.cxx;  Converters.h;  Cppyy.cxx;  Cppyy.h;  Executors.cxx;  Executors.h;  MethodProxy.cxx;  MethodProxy.h;  ObjectProxy.cxx;  ObjectProxy.h;  PropertyProxy.cxx;  PropertyProxy.h;  PyCallable.h;  PyROOT.h;  PyRootType.cxx;  PyRootType.h;  PyStrings.cxx;  PyStrings.h;  python64.c;  Pythonize.cxx;  Pythonize.h;  RootModule.cxx;  RootWrapper.cxx;  RootWrapper.h;  TCallContext.cxx;  TCallContext.h;  TClassMethodHolder.cxx;  TClassMethodHolder.h;  TConstructorHolder.cxx;  TConstructorHolder.h;  TCustomPyTypes.cxx;  TCustomPyTypes.h;  TemplateProxy.cxx;  TemplateProxy.h;  TFunctionHolder.cxx;  TFunctionHolder.h;  TMemoryRegulator.cxx;  TMemoryRegulator.h;  TMethodHolder.cxx;  TMethodHolder.h;  TPyArg.cxx;  TPyBufferFactory.cxx;  TPyBufferFactory.h;  TPyClassGenerator.cxx;  TPyClassGenerator.h;  TPyDispatcher.cxx;  TPyException.cxx;  TPyFitFunction.cxx;  TPyReturn.cxx;  TPyROOTApplication.cxx;  TPySelector.cxx;  TPython.cxx;  TSetItemHolder.cxx;  TSetItemHolder.h;  TTupleOfInstances.cxx;  TTupleOfInstances.h;  Utility.cxx;  Utility.h;  _pythonization.py;  cppyy.py;  ROOT.py;  ► r;  ► inc;  LinkDef.h;  RExports.h;  TRDataFrame.h;  TRDataFrame__ctors.h;  TRFunctionExport.h;  TRFunctionImport.h;  TRFunctionImport__oprtr.h;  TRInterface.h;,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/files.html:45,Guid,Guide,45,root/html606/files.html,https://root.cern,https://root.cern/root/html606/files.html,1,['Guid'],['Guide']
Usability,". ROOT: FileStat_t Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; FileStat_t Struct Reference. . Definition at line 122 of file TSystem.h. Public Member Functions;  FileStat_t ();  . Public Attributes; Long_t fDev;  ; Int_t fGid;  ; Long_t fIno;  ; Bool_t fIsLink;  ; Int_t fMode;  ; Long_t fMtime;  ; Long64_t fSize;  ; Int_t fUid;  ; TString fUrl;  . #include <TSystem.h>; Constructor & Destructor Documentation. ◆ FileStat_t(). FileStat_t::FileStat_t ; (; ). inline . Definition at line 132 of file TSystem.h. Member Data Documentation. ◆ fDev. Long_t FileStat_t::fDev. Definition at line 123 of file TSystem.h. ◆ fGid. Int_t FileStat_t::fGid. Definition at line 127 of file TSystem.h. ◆ fIno. Long_t FileStat_t::fIno. Definition at line 124 of file TSystem.h. ◆ fIsLink. Bool_t FileStat_t::fIsLink. Definition at line 130 of file TSystem.h. ◆ fMode. Int_t FileStat_t::fMode. Definition at line 125 of file TSystem.h. ◆ fMtime. Long_t FileStat_t::fMtime. Definition at line 129 of file TSystem.h. ◆ fSize. Long64_t FileStat_t::fSize. Definition at line 128 of file TSystem.h. ◆ fUid. Int_t FileStat_t::fUid. Definition at line 126 of file TSystem.h. ◆ fUrl. TString FileStat_t::fUrl. Definition at line 131 of file TSystem.h. Collaboration diagram for FileStat_t:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; core/base/inc/TSystem.h. FileStat_t. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:35 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structFileStat__t.html:67,Guid,Guide,67,doc/master/structFileStat__t.html,https://root.cern,https://root.cern/doc/master/structFileStat__t.html,2,['Guid'],['Guide']
Usability,". ROOT: Fit Data Classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Fit Data ClassesMath » MathCore » Fitting and Parameter Estimation. ; Classes for describing the input data for fitting. . Classes; class  ROOT::Fit::BinData;  Class describing the binned data sets : vectors of x coordinates, y values and optionally error on y values and error on coordinates The dimension of the coordinate is free There are 4 different options: More...;  ; struct  ROOT::Fit::DataOptions;  DataOptions : simple structure holding the options on how the data are filled. More...;  ; class  ROOT::Fit::DataRange;  class describing the range in the coordinates it supports multiple range in a coordinate. More...;  ; class  ROOT::Fit::FitData;  Base class for all the fit data types: Stores the coordinates and the DataOptions. More...;  ; class  ROOT::Fit::SparseData;  SparseData class representing the data of a THNSparse histogram The data needs to be converted to a BinData class before fitting using the GetBinData functions. More...;  ; class  ROOT::Fit::UnBinData;  Class describing the un-binned data sets (just x coordinates values) of any dimensions. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__FitData.html:56,Guid,Guide,56,doc/master/group__FitData.html,https://root.cern,https://root.cern/doc/master/group__FitData.html,3,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: Fit Method Classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Fit Method ClassesMath » MathCore » Fitting and Parameter Estimation. ; Classes describing Fit Method functions. . Classes; class  ROOT::Math::BasicFitMethodFunction< FunctionType >;  FitMethodFunction class Interface for objective functions (like chi2 and likelihood used in the fit) In addition to normal function interface provide interface for calculating each data contribution to the function which is required by some algorithm (like Fumili) More...;  ; class  ROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >;  Chi2FCN class for binned fits using the least square methods. More...;  ; class  ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >;  LogLikelihoodFCN class for likelihood fits. More...;  ; class  ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >;  class evaluating the log likelihood for binned Poisson likelihood fits it is template to distinguish gradient and non-gradient case More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__FitMethodFunc.html:58,Guid,Guide,58,doc/master/group__FitMethodFunc.html,https://root.cern,https://root.cern/doc/master/group__FitMethodFunc.html,2,['Guid'],['Guide']
Usability,". ROOT: Fit Tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Fit TutorialsTutorials. ; These tutorials illustrate the main fitting features. Their names are related to the aspect which is treated in the code. . Files; file  combinedFit.C;   Combined (simultaneous) fit of two histogram with separate functions and some common parameters ;  ; file  combinedFit.py;   Combined (simultaneous) fit of two histogram with separate functions and some common parameters ;  ; file  ConfidenceIntervals.C;   Illustrates TVirtualFitter::GetConfidenceIntervals This method computes confidence intervals for the fitted function ;  ; file  ErrorIntegral.C;   Estimate the error in the integral of a fitted function taking into account the errors in the parameters resulting from the fit. ;  ; file  exampleFit3D.C;   example of fitting a 3D function Typical multidimensional parametric regression where the predictor depends on 3 variables ;  ; file  fit1.C;   Simple fitting example (1-d histogram with an interpreted function) ;  ; file  fit2.C;   Fitting a 2-D histogram This tutorial illustrates : ;  ; file  fit2a.C;   Fitting a 2-D histogram (a variant) This tutorial illustrates : ;  ; file  fit2d.C;   Example illustrating how to fit a 2-d histogram of type y=f(x) ;  ; file  fit2dHist.C;   Example to fit two histograms at the same time via the Fitter class. ;  ; file  fitCircle.C;   Generate points distributed with some errors around a circle Fit a circle through the points and draw To run the script, do, eg ;  ; file  fitcont.C;   Example illustrating how to draw the n-sigma contour of a Minuit fit. ;  ; file  fitConvolution.C;   Tutorial for convolution of two functions ;  ; file  fitConvolution.py;   Tutorial for convolution of two functions ;  ; file  fitExclude.C;   Illustrates how to fit excluding points in a given range. ;  ; file  fithist.C;   Example of fit where the model is histogram + function ;  ; file  fitLinear.C;   Example of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__fit.html:53,Guid,Guide,53,doc/master/group__tutorial__fit.html,https://root.cern,https://root.cern/doc/master/group__tutorial__fit.html,1,['Guid'],['Guide']
Usability,. ROOT: Fitting and Parameter Estimation. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules |; Namespaces ; Fitting and Parameter EstimationMath » MathCore. ; Classes used for fitting (regression analysis) and estimation of parameter values given a data sample. . Modules;  Fit Method Classes;  Classes describing Fit Method functions. ;  ;  Fit Data Classes;  Classes for describing the input data for fitting. ;  ;  User Fitting classes;  Main Classes used for fitting a given data set. ;  . Namespaces; namespace  ROOT::Fit;  Namespace for the fitting classes. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Fit.html:72,Guid,Guide,72,doc/master/group__Fit.html,https://root.cern,https://root.cern/doc/master/group__Fit.html,2,['Guid'],['Guide']
Usability,. ROOT: Float_t Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Float_t Class Reference. The documentation for this class was generated from the following files:. Float_t. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:49 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classFloat__t.html:63,Guid,Guide,63,doc/master/classFloat__t.html,https://root.cern,https://root.cern/doc/master/classFloat__t.html,2,['Guid'],['Guide']
Usability,. ROOT: Foption_t Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; Foption_t Struct Reference. . Definition at line 24 of file Foption.h. Public Member Functions;  Foption_t ();  . Public Attributes; int BinVolume;  ; int Bound;  ; int Chi2;  ; int Errors;  ; ROOT::EExecutionPolicy ExecPolicy;  ; int Gradient;  ; double hRobust;  ; int Integral;  ; int Like;  ; int Minuit;  ; int More;  ; int Nochisq;  ; int NoErrX;  ; int Nograph;  ; int Nostore;  ; int PChi2;  ; int Plus;  ; int Quiet;  ; int Range;  ; int Robust;  ; int StoreResult;  ; int User;  ; int Verbose;  ; int W1;  . #include <Foption.h>; Constructor & Destructor Documentation. ◆ Foption_t(). Foption_t::Foption_t ; (; ). inline . Definition at line 54 of file Foption.h. Member Data Documentation. ◆ BinVolume. int Foption_t::BinVolume. Definition at line 50 of file Foption.h. ◆ Bound. int Foption_t::Bound. Definition at line 31 of file Foption.h. ◆ Chi2. int Foption_t::Chi2. Definition at line 32 of file Foption.h. ◆ Errors. int Foption_t::Errors. Definition at line 37 of file Foption.h. ◆ ExecPolicy. ROOT::EExecutionPolicy Foption_t::ExecPolicy. Definition at line 52 of file Foption.h. ◆ Gradient. int Foption_t::Gradient. Definition at line 40 of file Foption.h. ◆ hRobust. double Foption_t::hRobust. Definition at line 51 of file Foption.h. ◆ Integral. int Foption_t::Integral. Definition at line 44 of file Foption.h. ◆ Like. int Foption_t::Like. Definition at line 34 of file Foption.h. ◆ Minuit. int Foption_t::Minuit. Definition at line 46 of file Foption.h. ◆ More. int Foption_t::More. Definition at line 38 of file Foption.h. ◆ Nochisq. int Foption_t::Nochisq. Definition at line 45 of file Foption.h. ◆ NoErrX. int Foption_t::NoErrX. Definition at line 47 of file Foption.h. ◆ Nograph. int Foption_t::Nograph. Definition at line 42 of file Foption.h. ◆ Nostore. int Fop,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structFoption__t.html:66,Guid,Guide,66,doc/master/structFoption__t.html,https://root.cern,https://root.cern/doc/master/structFoption__t.html,1,['Guid'],['Guide']
Usability,". ROOT: Function Approximation (ChebyshevApprox). ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Function Approximation (ChebyshevApprox)Math » MathCore | Math » MathMore » Numerical Algorithms. ; Numerical algorithm from the MathMore library and implemented using the GSL library. . Classes; class  ROOT::Math::ChebyshevApprox;  Class describing a Chebyshev series which can be used to approximate a function in a defined range [a,b] using Chebyshev polynomials. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__FuncApprox.html:80,Guid,Guide,80,doc/master/group__FuncApprox.html,https://root.cern,https://root.cern/doc/master/group__FuncApprox.html,2,['Guid'],['Guide']
Usability,". ROOT: Function Classes and Interfaces. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules |; Classes ; Function Classes and InterfacesMath » MathCore. ; Interfaces (abstract classes) and Base classes used in MathCore and MathMore numerical methods for describing function classes. ; They define function and gradient evaluation and as well the functionality for dealing with parameters in the case of parametric functions which are used for fitting and data modeling. Included are also adapter classes, such as functors, to wrap generic callable C++ objects in the desired interface. . Modules;  Generic Function Evaluation Interfaces;  Interface classes for evaluation of function object classes in one or multi-dimensions. ;  ;  Parametric Function Evaluation Interfaces.;  Interfaces classes for evaluation of parametric functions. ;  . Classes; class  ROOT::Math::WrappedMultiTF1Templ< T >;  Class to Wrap a ROOT Function class (like TF1) in a IParamMultiFunction interface of multi-dimensions to be used in the ROOT::Math numerical algorithm. More...;  ; class  ROOT::Math::WrappedTF1;  Class to Wrap a ROOT Function class (like TF1) in a IParamFunction interface of one dimensions to be used in the ROOT::Math numerical algorithms The wrapper does not own bby default the TF1 pointer, so it assumes it exists during the wrapper lifetime. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__CppFunctions.html:71,Guid,Guide,71,doc/master/group__CppFunctions.html,https://root.cern,https://root.cern/doc/master/group__CppFunctions.html,2,['Guid'],['Guide']
Usability,. ROOT: Function classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Function classes.Histogram Library. . Classes; class  TF1;  1-Dim function class More...;  ; class  TF12;  A projection of a TF2 along X or Y. More...;  ; class  TF1Convolution;  Class wrapping convolution of two functions. More...;  ; class  TF1NormSum;  Class adding two functions: c1*f1+c2*f2. More...;  ; class  TF2;  A 2-Dim function with parameters. More...;  ; class  TF3;  A 3-Dim function with parameters. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:32 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Functions.html:56,Guid,Guide,56,doc/master/group__Functions.html,https://root.cern,https://root.cern/doc/master/group__Functions.html,2,['Guid'],['Guide']
Usability,". ROOT: Functional Parts. ; ROOT   6.14/05 Reference Guide ; . Functional Parts . Here is a list of all modules:; [detail level 12345];  ▼Core ROOT classesThe Core classes of ROOT ;  Base ROOT classesThe Base classes of ROOT ;  ContainersThe containers and generators the ROOT framework offers ;  ▼GeometryThe Geometry related packages ;  GDML toolsGDML tools for geometry classes ;  CAD convertersClasses to convert geometries to CAD systems ;  Geometry classesThe Geometry related classes ;  Geometry builderThe Geometry builder related classes ;  Geometry painterThe Geometry painter, checker, overlap and track related classes ;  ▼GraphicsThe graphics related classes ;  ►Graphics' BackendsGraphics' Backends interface classes ;  Cocoa backendInterface to MacOS native graphics system ;  Win32 backendInterface to Windows graphics ;  X11 backendInterface to X11 graphics ;  ►2D GraphicsThe 2D graphics related classes ;  libAfterImage interfaceClasses interfacing to libAfterImage ;  FITS fileInterface to FITS file ;  Graphics padThe TPad related classes ;  Basic graphicsThe low level graphics classes ;  graphviz interfaceInterface to the graphing package graphviz ;  Graphics file outputInterfaces to various file output formats ;  Graphics attributesThe graphics attributes related classes ;  ►3D GraphicsThe 3D graphics related classes ;  Event DisplayThe Event Display classes ;  Basic 3D graphics.The basic 3D classes ;  OpenGL renderingOpenGL rendering and utility classes ;  TPad coordinate systemsThese define typesafe coordinates used by TPad to identify which coordinate system a coordinate is referring to ;  ▼Histogram LibraryA general description of the Histogram library is documented in the class TH1 ;  Histograms and graphs painting classes.;  Advanced spectra processing classes.;  TSpectrum painting class.;  TUnfold classes;  Input/Output LibraryThe library collecting the ROOT classes dedicated to data input and output ;  ▼MathThe ROOT Mathematical Libraries ;  GenVectorG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v614/modules.html:53,Guid,Guide,53,doc/v614/modules.html,https://root.cern,https://root.cern/doc/v614/modules.html,1,['Guid'],['Guide']
Usability,". ROOT: Functional Parts. ; ROOT   6.16/01 Reference Guide ; . Functional Parts. Here is a list of all modules:; [detail level 12345];  ▼Core ROOT classesThe Core classes of ROOT ;  Base ROOT classesThe Base classes of ROOT ;  ContainersThe containers and generators the ROOT framework offers ;  ▼GeometryThe Geometry related packages ;  GDML toolsGDML tools for geometry classes ;  CAD convertersClasses to convert geometries to CAD systems ;  Geometry classesThe Geometry related classes ;  Geometry builderThe Geometry builder related classes ;  Geometry painterThe Geometry painter, checker, overlap and track related classes ;  ▼GraphicsThe graphics related classes ;  ►Graphics' BackendsGraphics' Backends interface classes ;  Cocoa backendInterface to MacOS native graphics system ;  Win32 backendInterface to Windows graphics ;  X11 backendInterface to X11 graphics ;  ►2D GraphicsThe 2D graphics related classes ;  libAfterImage interfaceClasses interfacing to libAfterImage ;  FITS fileInterface to FITS file ;  Graphics padThe TPad related classes ;  Basic graphicsThe low level graphics classes ;  graphviz interfaceInterface to the graphing package graphviz ;  Graphics file outputInterfaces to various file output formats ;  Graphics attributesThe graphics attributes related classes ;  ►3D GraphicsThe 3D graphics related classes ;  Event DisplayThe Event Display classes ;  Basic 3D graphics.The basic 3D classes ;  OpenGL renderingOpenGL rendering and utility classes ;  RPad coordinate systemsThese define typesafe coordinates used by RPad to identify which coordinate system a coordinate is referring to ;  ▼Histogram LibraryA general description of the Histogram library is documented in the class TH1 ;  Histograms and graphs painting classes.;  Advanced spectra processing classes.;  TSpectrum painting class.;  TUnfold classes;  Input/Output LibraryThe library collecting the ROOT classes dedicated to data input and output ;  ▼MathThe ROOT Mathematical Libraries ;  GenVectorGe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v616/modules.html:53,Guid,Guide,53,doc/v616/modules.html,https://root.cern,https://root.cern/doc/v616/modules.html,1,['Guid'],['Guide']
Usability,". ROOT: GCValues_t Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; GCValues_t Struct Reference. ; Graphics context structure. ; Definition at line 224 of file GuiTypes.h. Public Member Functions;  GCValues_t ();  . Public Attributes; Int_t fArcMode;  kArcChord, kArcPieSlice ;  ; ULong_t fBackground;  background pixel ;  ; Int_t fCapStyle;  kCapNotLast, kCapButt, kCapRound, kCapProjecting ;  ; Pixmap_t fClipMask;  bitmap clipping; other calls for rects ;  ; Int_t fClipXOrigin;  origin for clipping ;  ; Int_t fClipYOrigin;  ; Char_t fDashes [8];  dash pattern list (dash length per byte) ;  ; Int_t fDashLen;  number of dashes in fDashes ;  ; Int_t fDashOffset;  patterned/dashed line information ;  ; Int_t fFillRule;  kEvenOddRule, kWindingRule ;  ; Int_t fFillStyle;  kFillSolid, kFillTiled, kFillStippled, kFillOpaeueStippled ;  ; FontH_t fFont;  default text font for text operations ;  ; ULong_t fForeground;  foreground pixel ;  ; EGraphicsFunction fFunction;  logical operation ;  ; Bool_t fGraphicsExposures;  boolean, should exposures be generated ;  ; Int_t fJoinStyle;  kJoinMiter, kJoinRound, kJoinBevel ;  ; Int_t fLineStyle;  kLineSolid, kLineOnOffDash, kLineDoubleDash ;  ; Int_t fLineWidth;  line width ;  ; Mask_t fMask;  bit mask specifying which fields are valid ;  ; ULong_t fPlaneMask;  plane mask ;  ; Pixmap_t fStipple;  stipple 1 plane pixmap for stippling ;  ; Int_t fSubwindowMode;  kClipByChildren, kIncludeInferiors ;  ; Pixmap_t fTile;  tile pixmap for tiling operations ;  ; Int_t fTsXOrigin;  offset for tile or stipple operations ;  ; Int_t fTsYOrigin;  . #include <GuiTypes.h>; Constructor & Destructor Documentation. ◆ GCValues_t(). GCValues_t::GCValues_t ; (; ). inline . Definition at line 253 of file GuiTypes.h. Member Data Documentation. ◆ fArcMode. Int_t GCValues_t::fArcMode. kArcChord, kArcPieSlice ; Definitio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structGCValues__t.html:67,Guid,Guide,67,doc/master/structGCValues__t.html,https://root.cern,https://root.cern/doc/master/structGCValues__t.html,1,['Guid'],['Guide']
Usability,". ROOT: GDML tools. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; GDML toolsThe Geometry Package. ; GDML tools for geometry classes. ; The $ROOTSYS/gdml directory contains a set of Python modules designed for writing out Geometry Description Markup Language (GDML) files. There is also a C++ implementation for the import of GDML into ROOT. They act as a converter between the GDML geometry files and the TGeo geometry structures (and vice versa). GDML->ROOT; As this binding is integrated into the ROOT installation, you need to enable the use of the binding at the configure point of the ROOT installation. This can be done like so:; ./configure --enable-gdml; On doing this the libraries will be built by issuing the standard ROOT make command. The GDML to TGeo converter uses the TXMLEngine to parse the GDML files. This XML parser is a DOM parser and returns the DOM tree to the class TGDMLParse. This class then interprets the GDML file and adds the bindings in their TGeo equivalent.; The GDML schema is fully supported with a few exceptions:. Replica Volumes are not supported; Loops are not supported; Matrices are not supported. These will hopefully be added in the near future.; Once you have enabled GDML in the configure process for ROOT, to import a GDML file, this can be done using TGeoManager::Import. This automatically calls the right method to parse the GDML by detecting the .gdml file extension. Here is how to do it:; TGeoManager::Import(""test.gdml"");; TGeoManager::Importstatic TGeoManager * Import(const char *filename, const char *name="""", Option_t *option="""")static function Import a geometry from a gdml or ROOT fileDefinition TGeoManager.cxx:4096; Replace test.gdml with the gdml filename you want to import. Once the GDML file has been successfully imported, you can view the geometry by calling:; gGeoManager->GetTopVolume()->Draw(""ogl"");; gGeoManagerR__EXTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; TGeoManag",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Geometry__gdml.html:50,Guid,Guide,50,doc/master/group__Geometry__gdml.html,https://root.cern,https://root.cern/doc/master/group__Geometry__gdml.html,1,['Guid'],['Guide']
Usability,". ROOT: GUI tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; GUI tutorialsTutorials. ; Example code which illustrates how to use the ROOT GUI. . Files; file  buttonChangelabel.C;  This macro gives an example for changing text button labels anytime the Start or Pause buttons are clicked. ;  ; file  buttongroupState.C;  A simple example that shows the enabled and disabled state of a button group with radio and check buttons. ;  ; file  buttonsLayout.C;  This macro gives an example of different buttons' layout. ;  ; file  buttonTest.C;  This macro gives an example of how to set/change text button attributes. ;  ; file  calendar.C;  This macro gives an example of how to use html widget to display tabular data. ;  ; file  CPUMeter.C;  Simple macro showing capabilities of the TGSpeedo widget. ;  ; file  customContextMenu.C;  Example showing how to add a function to the class context menu. ;  ; file  customTH1Fmenu.C;  Example showing how to customize a context menu for a class. ;  ; file  drag_and_drop.C;  This tutorial illustrates how to use drag and drop within ROOT. ;  ; file  exec3.C;  Example of using signal/slot in TCanvas/TPad to get feedback about processed events. ;  ; file  exec_macro.C;  This utility macro executes the macro ""macro"" given as first argument and save a capture in a png file. ;  ; file  games.C;  This macro runs three ""games"" that each nicely illustrate the graphics capabilities of ROOT. ;  ; file  gtreeTableTest.C;  This TableTest class is a simple example of how to use a TGTreeTable. ;  ; file  guilabels.C;  This macro gives an example of how to create different kind of labels and the possibility to enable/disable them. ;  ; file  guitest.C;  Test program for ROOT native GUI classes Exactly like $ROOTSYS/test/guitest.cxx but using the new signal and slots communication mechanism. ;  ; file  guitest_playback.C;  This macro plays a recorded ROOT session showing how to perform various interactive GU",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__gui.html:53,Guid,Guide,53,doc/master/group__tutorial__gui.html,https://root.cern,https://root.cern/doc/master/group__tutorial__gui.html,4,"['Guid', 'Pause', 'Simpl', 'simpl']","['Guide', 'Pause', 'Simple', 'simple']"
Usability,". ROOT: Generic Template Functions. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; Generic Template FunctionsMath » SMatrix Package. ; These functions apply for any type T, such as a scalar, a vector or a matrix. . Functions; template<class T > ; const T ROOT::Math::Maximum (const T &lhs, const T &rhs);  maximum. ;  ; template<class T > ; const T ROOT::Math::Minimum (const T &lhs, const T &rhs);  minimum. ;  ; template<class T > ; int ROOT::Math::Round (const T &x);  round. ;  ; template<class T > ; int ROOT::Math::Sign (const T &x);  sign. ;  ; template<class T > ; const T ROOT::Math::Square (const T &x);  square Template function to compute \(x\cdot x \), for any type T returning a type T ;  . Function Documentation. ◆ Maximum(). template<class T > . const T ROOT::Math::Maximum ; (; const T & ; lhs, . const T & ; rhs . ). inline . maximum. ; Template to find max(a,b) where a,b are of type T; AuthorT. Glebe ; Definition at line 86 of file Functions.h. ◆ Minimum(). template<class T > . const T ROOT::Math::Minimum ; (; const T & ; lhs, . const T & ; rhs . ). inline . minimum. ; Template to find min(a,b) where a,b are of type T; AuthorT. Glebe ; Definition at line 100 of file Functions.h. ◆ Round(). template<class T > . int ROOT::Math::Round ; (; const T & ; x). inline . round. ; Template to compute nearest integer value for any type T; AuthorT. Glebe ; Definition at line 113 of file Functions.h. ◆ Sign(). template<class T > . int ROOT::Math::Sign ; (; const T & ; x). inline . sign. ; Template to compute the sign of a number; AuthorT. Glebe ; Definition at line 128 of file Functions.h. ◆ Square(). template<class T > . const T ROOT::Math::Square ; (; const T & ; x). inline . square Template function to compute \(x\cdot x \), for any type T returning a type T ; AuthorT. Glebe ; Definition at line 74 of file Functions.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__TempFunction.html:66,Guid,Guide,66,doc/master/group__TempFunction.html,https://root.cern,https://root.cern/doc/master/group__TempFunction.html,2,['Guid'],['Guide']
Usability,". ROOT: Geometry builder. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Geometry builderThe Geometry Package. ; The Geometry builder related classes. ; Some documents describing these classes are listed below:. Presentation, May 2006 . Classes; class  TGeoBBoxEditor;  Editor for a TGeoBBox. More...;  ; class  TGeoCombiTransEditor;  Editor for a TGeoCombiTrans. More...;  ; class  TGeoConeEditor;  Editor for a TGeoCone. More...;  ; class  TGeoConeSegEditor;  Editor for a cone segment. More...;  ; class  TGeoCtubEditor;  Editor for a TGeoCtub. More...;  ; class  TGeoEltuEditor;  Editor for a TGeoEltu. More...;  ; class  TGeoGedFrame;  Common base class for geombuilder editors. More...;  ; class  TGeoGtraEditor;  Editor for a TGeoGtra. More...;  ; class  TGeoHypeEditor;  Editor for a TGeoHype. More...;  ; class  TGeoManagerEditor;  Editor for TGeoManager class. More...;  ; class  TGeoMaterialEditor;  Editors for materials. More...;  ; class  TGeoMediumEditor;  Editor class for TGeo tracking media. More...;  ; class  TGeoMixtureEditor;  Editors for mixtures. More...;  ; class  TGeoNodeEditor;  Editor class for TGeoNode objects. More...;  ; class  TGeoParaEditor;  Editor for a TGeoPara. More...;  ; class  TGeoPconEditor;  Editor for a TGeoPcon. More...;  ; class  TGeoPconSection;  Utility frame used by TGeoPcon editor. More...;  ; class  TGeoPgonEditor;  Editor for a TGeoPgon. More...;  ; class  TGeoRotationEditor;  Editor for a TGeoRotation. More...;  ; class  TGeoSphereEditor;  Editor for a TGeoSphere. More...;  ; class  TGeoTabManager;  Manager for all editor tabs. More...;  ; class  TGeoTorusEditor;  Editor for a TGeoTorus. More...;  ; class  TGeoTranslationEditor;  Editor for a TGeoTranslation. More...;  ; class  TGeoTrapEditor;  Editor for a TGeoTrap. More...;  ; class  TGeoTrd1Editor;  Editor for a TGeoTrd1. More...;  ; class  TGeoTrd2Editor;  Editor for a TGeoTrd2. More...;  ; class  TGeoTubeEditor;  Editor for a TGeoTub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Geometry__builder.html:56,Guid,Guide,56,doc/master/group__Geometry__builder.html,https://root.cern,https://root.cern/doc/master/group__Geometry__builder.html,1,['Guid'],['Guide']
Usability,". ROOT: Geometry classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Geometry classesThe Geometry Package. ; The Geometry related classes. ; Several documents describing these classes are listed below:. The main geometry class is documented in class TGeoManager.; Presentation/article at CHEP'03; Presentation at ROOT 2004; Presentation at ROOT 2005; Presentation at ROOT 2007. See also the use of the geometry classes in AliROOT package of ALICE. . Classes; class  TGeoAtt;  Visualization and tracking attributes for volumes and nodes. More...;  ; class  TGeoBoolNode;  Base class for Boolean operations between two shapes. More...;  ; class  TGeoBranchArray;  An array of daughter indices making a geometry path. More...;  ; class  TGeoBuilder;  Utility class for creating geometry objects.These will be associated with the current selected geometry manager object: More...;  ; class  TGeoCacheState;  Class storing the state of the cache at a given moment. More...;  ; class  TGeoCombiTrans;  Class describing rotation + translation. More...;  ; class  TGeoDecayChannel;  A decay channel for a radionuclide. More...;  ; class  TGeoElementRN;  Class representing a radionuclidevoid TGeoManager::SetDefaultRootUnits() { if ( fgDefaultUnits == kRootUnits ) { return; } else if ( gGeometryLocked ) { TError::Fatal(""TGeoManager"",""The system of units may only be changed once BEFORE any elements and materials are; created!""); } fgDefaultUnits = kRootUnits; }. More...;  ; class  TGeoElementTable;  Table of elements. More...;  ; class  TGeoElemIter;  Iterator for decay branches. More...;  ; class  TGeoExtension;  ABC for user objects attached to TGeoVolume or TGeoNode. More...;  ; class  TGeoGenTrans;  Most general transformation, holding a translation, a rotation and a scale. More...;  ; class  TGeoGlobalMagField;  Global magnetic field manager. More...;  ; class  TGeoHMatrix;  Matrix class used for computing global transformations Should NOT be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Geometry__classes.html:56,Guid,Guide,56,doc/master/group__Geometry__classes.html,https://root.cern,https://root.cern/doc/master/group__Geometry__classes.html,1,['Guid'],['Guide']
Usability,". ROOT: Geometry painter. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Geometry painterThe Geometry Package. ; The Geometry painter, checker, overlap and track related classes. . Classes; class  TGeoChecker;  Geometry checking package. More...;  ; class  TGeoOverlap;  Base class describing geometry overlaps. More...;  ; class  TGeoPainter;  Class implementing all draw interfaces for a generic 3D viewer using TBuffer3D mechanism. More...;  ; class  TGeoTrack;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:32 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Geometry__painter.html:56,Guid,Guide,56,doc/master/group__Geometry__painter.html,https://root.cern,https://root.cern/doc/master/group__Geometry__painter.html,2,['Guid'],['Guide']
Usability,". ROOT: Geometry tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Geometry tutorialsTutorials. ; Various ROOT geometry package examples. . Files; file  assembly.C;  Geometry detector assembly example. ;  ; file  building.C;  Drawing a building where Dept. ;  ; file  cheongwadae.C;  Drawing the Cheongwadae building which is the Presidential Residence of the Republic of Korea, using ROOT geometry class. ;  ; file  csgdemo.C;  Combinatorial Solid Geometry example. ;  ; file  geodemo.C;  GUI to draw the geometry shapes. ;  ; file  geomAlice.C;  Script drawing a detector geometry (here ALICE). ;  ; file  geomAlice_itsv.C;  Script drawing a detector geometry (here ITSV from Alice). ;  ; file  geomAtlas.C;  Script drawing a detector geometry (here ATLAS). ;  ; file  geomBrahms.C;  Script drawing a detector geometry (here BRAHMS). ;  ; file  geomD0.C;  Script drawing a detector geometry (here D0). ;  ; file  geometry.C;  Example of the old geometry package (now obsolete) ;  ; file  lego.C;  Drawing a figure, made of lego block, using ROOT geometry class. ;  ; file  mp3player.C;  Drawing a mp3 type music player, using ROOT geometry class. ;  ; file  na49.C;  This file has been generated automatically via the root utility toroot from an interactive version of GEANT (see ROOT class TGeometry header for an example of use) This shows an example of the old geometry package (now obsolete) ;  ; file  na49geomfile.C;  Before executing this macro, the file makegeometry.C must have been executed. ;  ; file  na49view.C;  This macro generates with 2 views of the NA49 detector using the old obsolete geometry package. ;  ; file  parallel_world.C;  Misaligning geometry generate in many cases overlaps, due to the idealization of the design and the fact that in real life movements of the geometry volumes have constraints and are correlated. ;  ; file  RadioNuclides.C;  Macro that demonstrates usage of radioactive elements/materials/mixtures w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__geom.html:58,Guid,Guide,58,doc/master/group__tutorial__geom.html,https://root.cern,https://root.cern/doc/master/group__tutorial__geom.html,1,['Guid'],['Guide']
Usability,". ROOT: Graph Legend. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Graph Legend. This page explains how to interpret the graphs that are generated by doxygen.; Consider the following example: /*! Invisible class because of truncation */; class Invisible { };; ; /*! Truncated class, inheritance relation is hidden */; class Truncated : public Invisible { };; ; /* Class not documented with doxygen comments */; class Undocumented { };; ; /*! Class that is inherited using public inheritance */; class PublicBase : public Truncated { };; ; /*! A template class */; template<class T> class Templ { };; ; /*! Class that is inherited using protected inheritance */; class ProtectedBase { };; ; /*! Class that is inherited using private inheritance */; class PrivateBase { };; ; /*! Class that is used by the Inherited class */; class Used { };; ; /*! Super class that inherits a number of other classes */; class Inherited : public PublicBase,; protected ProtectedBase,; private PrivateBase,; public Undocumented,; public Templ<int>; {; private:; Used *m_usedClass;; };; This will result in the following graph:; This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.The boxes in the above graph have the following meaning: . A filled gray box represents the struct or class for which the graph is generated. . A box with a black border denotes a documented struct or class. . A box with a gray border denotes an undocumented struct or class. . A box with a red border denotes a documented struct or class forwhich not all inheritance/containment relations are shown. A graph is truncated if it does not fit within the specified boundaries. . The arrows have the following meaning: . A blue arrow is used to visualize a public inheritance relation between two classes. . A dark green arrow is used for protected inheritance. . A dark red arrow is used for private inheritance. . A purple dashed arrow is used if a class is contained or use",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graph_legend.html:52,Guid,Guide,52,doc/master/graph_legend.html,https://root.cern,https://root.cern/doc/master/graph_legend.html,3,"['Guid', 'Undo']","['Guide', 'Undocumented']"
Usability,". ROOT: Graph classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Graph classes.Histogram Library. . Classes; class  TGraph;  A TGraph is an object made of two arrays X and Y with npoints each. More...;  ; class  TGraph2D;  Graphics object made of three arrays X, Y and Z with the same number of points each. More...;  ; class  TGraph2DAsymmErrors;  Graph 2D class with errors. More...;  ; class  TGraph2DErrors;  Graph 2D class with errors. More...;  ; class  TGraphAsymmErrors;  TGraph with asymmetric error bars. More...;  ; class  TGraphBentErrors;  A TGraphBentErrors is a TGraph with bent, asymmetric error bars. More...;  ; class  TGraphDelaunay;  TGraphDelaunay generates a Delaunay triangulation of a TGraph2D. More...;  ; class  TGraphDelaunay2D;  TGraphDelaunay2D generates a Delaunay triangulation of a TGraph2D. More...;  ; class  TGraphErrors;  A TGraphErrors is a TGraph with error bars. More...;  ; class  TGraphMultiErrors;  TGraph with asymmetric error bars and multiple y error dimensions. More...;  ; class  TGraphSmooth;  A helper class to smooth TGraph. More...;  ; class  TGraphTime;  TGraphTime is used to draw a set of objects evolving with nsteps in time between tmin and tmax. More...;  ; class  TMultiGraph;  A TMultiGraph is a collection of TGraph (or derived) objects. More...;  ; class  TPolyMarker;  A PolyMarker is defined by an array on N points in a 2-D space. More...;  ; class  TScatter;  A TScatter is able to draw four variables scatter plot on a single plot. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:32 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Graphs.html:53,Guid,Guide,53,doc/master/group__Graphs.html,https://root.cern,https://root.cern/doc/master/group__Graphs.html,2,['Guid'],['Guide']
Usability,". ROOT: Graphics attributes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Graphics attributesGraphics. ; The graphics attributes related classes. ; Graphics attributes, are parameters that affect the way graphics primitives are displayed.; A ROOT object get graphics attributes by inheritance from the TAttXXX classes.; For example, lines can be dotted or dashed, fat or thin, blue or orange. If an object inherits form the class TAttLine it will get these attributes. Areas might be filled with one color or with a multicolor pattern. If an object inherits form the class TAttFill it will get these attribute. Text can appear with an angle, displayed in different fonts, colors, and sizes. If an object inherits form the class TAttText it will get these attribute. . Classes; class  TAtt3D;  Use this attribute class when an object should have 3D capabilities. More...;  ; class  TAttAxis;  Manages histogram axis attributes. More...;  ; class  TAttBBox;  Helper for management of bounding-box information. More...;  ; class  TAttBBox2D;  Abstract base class for elements drawn in the editor. More...;  ; class  TAttCanvas;  Manages canvas attributes. More...;  ; class  TAttFill;  Fill Area Attributes class. More...;  ; class  TAttImage;  TImage attributes. More...;  ; class  TAttLine;  Line Attributes class. More...;  ; class  TAttMarker;  Marker Attributes class. More...;  ; class  TAttPad;  Manages default Pad attributes. More...;  ; class  TAttText;  Text Attributes class. More...;  ; class  TColor;  The color creation and management class. More...;  ; class  TColorGradient;  TColorGradient extends basic TColor. More...;  ; class  TStyle;  TStyle objects may be created to define special styles. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:32 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__GraphicsAtt.html:59,Guid,Guide,59,doc/master/group__GraphicsAtt.html,https://root.cern,https://root.cern/doc/master/group__GraphicsAtt.html,2,['Guid'],['Guide']
Usability,". ROOT: Graphics pad. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Graphics padGraphics » 2D Graphics. ; The TPad related classes. ; TPad and TPad's related classes' usages are illustrated by the following examples:. The Graphics Pad.; How to Draw objects.; How to Pick objects.; Dividing a canvas with no margins between pads.; Using transparent pads. . Classes; class  TAnnotation;  An annotation is a TLatex which can be drawn in a 2D or 3D space. More...;  ; class  TAttCanvas;  Manages canvas attributes. More...;  ; class  TButton;  A TButton object is a user interface object. More...;  ; class  TCanvas;  The Canvas class. More...;  ; class  TClassTree;  Draw inheritance tree and their relations for a list of classes. More...;  ; class  TColorWheel;  Draw the ROOT Color Wheel. More...;  ; class  TControlBar;  A Control Bar is a fully user configurable tool which provides fast access to frequently used operations. More...;  ; class  TControlBarButton;  This class defines the control bar buttons. More...;  ; class  TCreatePrimitives;  Creates new primitives. More...;  ; class  TDialogCanvas;  A canvas specialized to set attributes. More...;  ; class  TGroupButton;  A specialized TButton used in a group of Buttons. More...;  ; class  TInspectCanvas;  A TInspectCanvas is a canvas specialized to inspect Root objects. More...;  ; class  TInspectorObject;  This class is designed to wrap a Foreign object in order to inject it into the Browse sub-system. More...;  ; class  TPad;  The most important graphics class in the ROOT system. More...;  ; class  TPadPainter;  Implement TVirtualPadPainter which abstracts painting operations. More...;  ; class  TPaveClass;  A TPaveLabel specialized to process classes inside a TClassTree. More...;  ; class  TRatioPlot;  Class for displaying ratios, differences and fit residuals. More...;  ; class  TSlider;  A specialized TPad including a TSliderBox object. More...;  ; class  TSliderBox;  The mo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__gpad.html:52,Guid,Guide,52,doc/master/group__gpad.html,https://root.cern,https://root.cern/doc/master/group__gpad.html,1,['Guid'],['Guide']
Usability,. ROOT: Graphics tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Graphics tutorialsTutorials. ; Various examples showing the basic ROOT graphics. . Files; file  accessiblecolorschemes.C;   Choosing an appropriate color scheme is essential for making results easy to understand and interpret. ;  ; file  analyze.C;   This macro produces the flowchart of TFormula::Analyze. ;  ; file  anim.C;  Macro illustrating how to animate a picture using a Timer. ;  ; file  archi.C;   This macro displays the ROOT architecture. ;  ; file  arrows.C;   Draw arrows. ;  ; file  AtlasExample.C;   Show how ATLAS Style looks like. ;  ; file  basic3d.C;   Show 3-D polylines and markers. ;  ; file  canvas.C;   Example of primitives in a canvas. ;  ; file  canvas2.C;   Example of canvas partitioning. ;  ; file  compile.C;   This macro produces the flowchart of TFormula::Compile ;  ; file  crown.C;   Draw crowns. ;  ; file  diamond.C;   Draw a diamond. ;  ; file  earth.C;   This tutorial illustrates the special contour options. ;  ; file  ellipse.C;   Draw ellipses. ;  ; file  eval.C;   This macro produces the flowchart of TFormula::Eval. ;  ; file  event.C;   Illustrate some basic primitives. ;  ; file  feynman.C;   Draw Feynman diagrams. ;  ; file  first.C;   Show some basic primitives. ;  ; file  formula1.C;   Display interpreted functions. ;  ; file  framework.C;   An example with basic graphics illustrating the Object Oriented User Interface of ROOT. ;  ; file  gaxis.C;   Simple example illustrating how to draw TGaxis objects in various formats. ;  ; file  gaxis2.C;   Example illustrating how to draw TGaxis with labels defined by a function. ;  ; file  gaxis3.C;   Example illustrating how to modify individual labels of a TGaxis. ;  ; file  graph_edit_playback.C;  This macro plays a recorded ROOT session showing how to perform various interactive graphical editing operations. ;  ; file  gtime.C;  Example of a graph of data moving in time. ;,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__graphics.html:58,Guid,Guide,58,doc/master/group__tutorial__graphics.html,https://root.cern,https://root.cern/doc/master/group__tutorial__graphics.html,1,['Guid'],['Guide']
Usability,". ROOT: Graphics' Backends. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules |; Classes ; Graphics' BackendsGraphics. ; Graphics' Backends interface classes. ; Graphics classes interfacing ROOT graphics with the low level native graphics backends(s) like X11, Cocoa, Win32 etc... These classes are not meant to be used directly by ROOT users. . Modules;  Cocoa backend;  Interface to MacOS native graphics system. ;  ;  Win32 backend;  Interface to Windows graphics. ;  ;  X11 backend;  Interface to X11 graphics. ;  . Classes; class  TTFX11Init;  Small utility class that takes care of switching the current gVirtualX to the new TGX11TTF class as soon as the shared library containing this class is loaded. More...;  ; class  TVirtualX;  Semi-Abstract base class defining a generic interface to the underlying, low level, native graphics backend (X11, Win32, MacOS, OpenGL...). More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:32 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__GraphicsBackends.html:58,Guid,Guide,58,doc/master/group__GraphicsBackends.html,https://root.cern,https://root.cern/doc/master/group__GraphicsBackends.html,2,['Guid'],['Guide']
Usability,. ROOT: Graphics. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules ; Graphics. ; The graphics related classes. . Modules;  Graphics' Backends;  Graphics' Backends interface classes. ;  ;  2D Graphics;  The 2D graphics related classes. ;  ;  Graphics attributes;  The graphics attributes related classes. ;  ;  ROOT7 Graphics;  Classes for ROOT7 graphics. ;  ;  3D Graphics;  The 3D graphics related classes. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:32 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Graphics.html:48,Guid,Guide,48,doc/master/group__Graphics.html,https://root.cern,https://root.cern/doc/master/group__Graphics.html,2,['Guid'],['Guide']
Usability,". ROOT: Graphs tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Graphs tutorialsTutorials. ; Examples showing the ""graphs classes"" usage. . Files; file  annotation3d.C;   This example show how to put some annotation on a 3D plot using 3D polylines. ;  ; file  approx.C;   Macro to test interpolation function Approx ;  ; file  bent.C;   Bent error bars ;  ; file  bent.py;   Bent error bars. ;  ; file  exclusiongraph.C;   Draw three graphs with an exclusion zone. ;  ; file  exclusiongraph2.C;   Draw several graphs with an exclusion zones. ;  ; file  gerrors.C;   Draw a graph with error bars ;  ; file  gerrors2.C;   Draw two graphs with error bars ;  ; file  gmultierrors.C;   Draw a graph with multiple y errors ;  ; file  graph.C;   Draw a simple graph. ;  ; file  graph2derrorsfit.C;   Draw and fit a TGraph2DErrors ;  ; file  graphApply.C;   A macro to demonstrate the functionality of TGraph::Apply() method. ;  ; file  graphpalettecolor.C;   Palette coloring for graphs is activated thanks to the options PFC (Palette Fill Color), PLC (Palette Line Color) and AMC (Palette Marker Color). ;  ; file  graphpolar.C;   Create and draw a polar graph. ;  ; file  graphpolar2.C;   Create and draw a polar graph with PI axis ;  ; file  graphpolar3.C;   Create and draw a polar graph with PI axis using a TF1. ;  ; file  graphreverse.C;   This example test all the various case of reverse graphs combined with logarithmic scale. ;  ; file  graphShade.C;   Show how to shade an area between two graphs ;  ; file  graphstruct.C;   Draw a simple graph structure. ;  ; file  graphtext.C;   Draw a graph with text attached to each point. ;  ; file  gtime.C;   Example of TGraphTime. ;  ; file  gtime2.C;   Example of TGraphTime showing how the class could be used to visualize a set of particles with their time stamp in a MonteCarlo program. ;  ; file  hlGraph1.C;  This tutorial demonstrates how to use the highlight mode on graph. ;  ; file  hlGraph2.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__graphs.html:56,Guid,Guide,56,doc/master/group__tutorial__graphs.html,https://root.cern,https://root.cern/doc/master/group__tutorial__graphs.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: HTTP server. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; HTTP server. ; THttpServer-related classes to provide HTTP protocol to ROOT application. . Classes; class  TCivetweb;  THttpEngine implementation, based on civetweb embedded server. More...;  ; class  TFastCgi;  THttpEngine implementation, based on fastcgi package. More...;  ; class  THttpCallArg;  Contains arguments for single HTTP call. More...;  ; class  THttpEngine;  Abstract class for implementing http protocol for THttpServer. More...;  ; class  THttpLongPollEngine;  Emulation of websocket with long poll requests. More...;  ; class  THttpServer;  Online http server for arbitrary ROOT application. More...;  ; class  THttpWSHandler;  Class for user-side handling of websocket with THttpServer. More...;  ; class  TRootSniffer;  Sniffer of ROOT objects, data provider for THttpServer. More...;  ; class  TRootSnifferFull;  Extends TRootSniffer for many ROOT classes. More...;  ; class  TRootSnifferScanRec;  Structure used to scan hierarchies of ROOT objects. More...;  ; class  TRootSnifferStore;  Abstract interface for storage of hierarchy scan in TRootSniffer. More...;  ; class  TRootSnifferStoreJson;  Storage of hierarchy scan in TRootSniffer in JSON format. More...;  ; class  TRootSnifferStoreXml;  Storage of hierarchy scan in TRootSniffer in XML format. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__http.html:51,Guid,Guide,51,doc/master/group__http.html,https://root.cern,https://root.cern/doc/master/group__http.html,2,['Guid'],['Guide']
Usability,. ROOT: HTTP tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; HTTP tutorialsTutorials. ; Examples showing the HTTP interface. . Files; file  custom.C;  This program creates and fills one and two dimensional histogram Macro used to demonstrate usage of custom HTML page in custom.htm One can use plain JavaScript to assign different actions with HTML buttons. ;  ; file  histfitserver.C;  This program demonstrates simultaneous update of histogram and fitted function. ;  ; file  httpaccess.C;  This program demonstrates access control to the THttpServer with digest methods. ;  ; file  httpcontrol.C;  This program demonstrates simple application control via THttpServer Two histogram are filled within endless loop. ;  ; file  httpgeom.C;  This program creates trivial geometry with several tracks and configure online monitoring of geometry via THttpServer Geometry regularly changed by the program and correspondent changes immediately seen in the browser. ;  ; file  httpserver.C;  This program creates : ;  ; file  httptextlog.C;  This macro demonstrates custom access and custom drawing for TMsgList class Main motivation for this example - demonstrate how traffic between server and client can be minimized and how one could build custom UI in the browser. ;  ; file  ws.C;  This program demonstrate WebSocket usage with THttpServer Custom ws.htm page is loaded and regularly sends messages to server. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__http.html:54,Guid,Guide,54,doc/master/group__tutorial__http.html,https://root.cern,https://root.cern/doc/master/group__tutorial__http.html,3,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,. ROOT: HistFactory Tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; HistFactory TutorialsTutorials. ; These tutorials illustrate the usage of the histfactory. . Files; file  hf001_example.C;  A ROOT script demonstrating an example of writing and fitting a HistFactory model using C++ only. ;  ; file  hf001_example.py;  A ROOT script demonstrating an example of writing and fitting a HistFactory model using Python. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__histfactory.html:61,Guid,Guide,61,doc/master/group__tutorial__histfactory.html,https://root.cern,https://root.cern/doc/master/group__tutorial__histfactory.html,2,['Guid'],['Guide']
Usability,. ROOT: Histogram Library. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules |; Classes ; Histogram Library. ; A general description of the Histogram library is documented in the class TH1. ; ROOT supports the following histogram types:. 1-D histograms:; TH1C : histograms with one byte per channel. Maximum bin content = 127; TH1S : histograms with one short per channel. Maximum bin content = 32767; TH1I : histograms with one int per channel. Maximum bin content = 2147483647; TH1L : histograms with one long64 per channel. Maximum bin content = 9223372036854775807; TH1F : histograms with one float per channel. Maximum precision 7 digits; TH1D : histograms with one double per channel. Maximum precision 14 digits. 2-D histograms:; TH2C : histograms with one byte per channel. Maximum bin content = 127; TH2S : histograms with one short per channel. Maximum bin content = 32767; TH2I : histograms with one int per channel. Maximum bin content = 2147483647; TH2L : histograms with one long64 per channel. Maximum bin content = 9223372036854775807; TH2F : histograms with one float per channel. Maximum precision 7 digits; TH2D : histograms with one double per channel. Maximum precision 14 digits. 3-D histograms:; TH3C : histograms with one byte per channel. Maximum bin content = 127; TH3S : histograms with one short per channel. Maximum bin content = 32767; TH3I : histograms with one int per channel. Maximum bin content = 2147483647; TH3L : histograms with one long64 per channel. Maximum bin content = 9223372036854775807; TH3F : histograms with one float per channel. Maximum precision 7 digits; TH3D : histograms with one double per channel. Maximum precision 14 digits. See also:; The Chapter about the Histogram classes in the Users Guide; The Chapter about Fitting Histogram in the Users Guide; How to use the Histogram classes; How to Merge files with histograms and Trees; How to Fit Histograms; How to Fit find peaks in histograms; How to conv,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Hist.html:57,Guid,Guide,57,doc/master/group__Hist.html,https://root.cern,https://root.cern/doc/master/group__Hist.html,1,['Guid'],['Guide']
Usability,. ROOT: Histogram classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Histogram classes.Histogram Library. . Classes; class  TAxis;  Class to manage histogram axis. More...;  ; class  TH1;  TH1 is the base class of all histogram classes in ROOT. More...;  ; class  TH1C;  1-D histogram with a byte per channel (see TH1 documentation) More...;  ; class  TH1D;  1-D histogram with a double per channel (see TH1 documentation) More...;  ; class  TH1F;  1-D histogram with a float per channel (see TH1 documentation) More...;  ; class  TH1I;  1-D histogram with an int per channel (see TH1 documentation) More...;  ; class  TH1L;  1-D histogram with a long64 per channel (see TH1 documentation) More...;  ; class  TH1S;  1-D histogram with a short per channel (see TH1 documentation) More...;  ; class  TH2C;  2-D histogram with a byte per channel (see TH1 documentation) More...;  ; class  TH2D;  2-D histogram with a double per channel (see TH1 documentation) More...;  ; class  TH2F;  2-D histogram with a float per channel (see TH1 documentation) More...;  ; class  TH2I;  2-D histogram with an int per channel (see TH1 documentation) More...;  ; class  TH2L;  2-D histogram with a long64 per channel (see TH1 documentation) More...;  ; class  TH2Poly;  2D Histogram with Polygonal Bins More...;  ; class  TH2PolyBin;  Helper class to represent a bin in the TH2Poly histogram. More...;  ; class  TH2S;  2-D histogram with a short per channel (see TH1 documentation) More...;  ; class  TH3;  The 3-D histogram classes derived from the 1-D histogram classes. More...;  ; class  TH3C;  3-D histogram with a byte per channel (see TH1 documentation) More...;  ; class  TH3D;  3-D histogram with a double per channel (see TH1 documentation) More...;  ; class  TH3F;  3-D histogram with a float per channel (see TH1 documentation) More...;  ; class  TH3I;  3-D histogram with an int per channel (see TH1 documentation) More...;  ; class  TH3L;  3-D histogram w,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Histograms.html:57,Guid,Guide,57,doc/master/group__Histograms.html,https://root.cern,https://root.cern/doc/master/group__Histograms.html,1,['Guid'],['Guide']
Usability,. ROOT: Histograms and graphs painting classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Histograms and graphs painting classes.Histogram Library » Painting classes. ; The histograms and graphs plotting options are described in details in the THistPainter and TGraphPainter classes. Some related tutorials:. graph.C: Using and drawing a simple TGraph.; graph2derrorsfit.C: TGraph2D with errors drawing.; h1draw.C: Drawing Options for 1D Histograms.; hbars.C: Demo of option bar with histograms.; hsimple.C: Simple drawing of a 1D Histograms.; hsum.C: Filling several histograms and some graphics options.; surfaces.C: Drawing a TH2 as a 2-D surface. Some related HowTos:; How to Draw objects ?; How to change the position of the statistics box on histogram plot ?; How to draw several TGraph in one common axis system ? . Classes; class  TGraph2DPainter;  The TGraphDelaunay painting class. More...;  ; class  TGraphPainter;  The graph painter class. More...;  ; class  THistPainter;  The histogram painter class. More...;  ; class  TPainter3dAlgorithms;  The Legos and Surfaces painter class. More...;  ; class  TPaletteAxis;  The palette painting class. More...;  ; class  TVirtualGraphPainter;  Abstract interface to a histogram painter. More...;  ; class  TVirtualHistPainter;  Abstract interface to a histogram painter. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:32 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Histpainter.html:78,Guid,Guide,78,doc/master/group__Histpainter.html,https://root.cern,https://root.cern/doc/master/group__Histpainter.html,4,"['Guid', 'Simpl', 'simpl']","['Guide', 'Simple', 'simple']"
Usability,". ROOT: Histograms tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Histograms tutorialsTutorials. ; Examples showing the ""histograms' classes"" usage. . Files; file  candledecay.C;   Candle Decay, illustrate a time development of a certain value. ;  ; file  candlehisto.C;   Example showing how to combine the various candle plot options. ;  ; file  candleplot.C;   Example of candle plot with 2-D histograms. ;  ; file  candleplotoption.C;   Example showing how to combine the various candle plot options. ;  ; file  candleplotstack.C;   Example showing how a THStack with candle plot option. ;  ; file  candleplotwhiskers.C;   Example of candle plot showing the whiskers definition. ;  ; file  candlescaled.C;   Candle Scaled, illustrates what scaling does on candle and violin charts. ;  ; file  ContourList.C;   Getting Contours From TH2D. ;  ; file  cumulative.C;   Illustrate use of the TH1::GetCumulative method. ;  ; file  draw2dopt.C;   Display the various 2-d drawing options ;  ; file  DynamicSlice.C;   Show the slice of a TH2 following the mouse position. ;  ; file  exec1.C;  Echo object at mouse position. ;  ; file  exec2.C;  Echo object at mouse position and show a graphics line. ;  ; file  Fibonacci.C;   A TH2Poly build with Fibonacci numbers. ;  ; file  fillhistosauto2p.C;  Fill multiple histograms with different functions and automatic binning. ;  ; file  fillrandom.C;   Fill a 1-D histogram from a parametric function. ;  ; file  fillrandom.py;   Fill a 1-D histogram from a parametric function. ;  ; file  FirstContour.C;   Make a contour plot and get the first contour in a TPolyMarker. ;  ; file  greyscale.C;   Create grey scale of 200 x 200 boxes. ;  ; file  h1ReadAndDraw.C;   Read a 1-D histogram from a ROOT File and draw it. ;  ; file  h2_cut.C;   This example demonstrates how to display a 2D histogram and use TCutG object to select bins for drawing. ;  ; file  h2proj.C;   This example demonstrates how to displa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__hist.html:60,Guid,Guide,60,doc/master/group__tutorial__hist.html,https://root.cern,https://root.cern/doc/master/group__tutorial__hist.html,1,['Guid'],['Guide']
Usability,". ROOT: Hit Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; Hit Class Reference. . Definition at line 16 of file JetEvent.h. Public Member Functions;  Hit ();  ;  ~Hit () override;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classHit.html:59,Guid,Guide,59,doc/master/classHit.html,https://root.cern,https://root.cern/doc/master/classHit.html,1,['Guid'],['Guide']
Usability,. ROOT: IO tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; IO tutorialsTutorials. ; These tutorials illustrate some of the capabilities of the ROOT IO subsystem. . Files; file  copyFiles.C;   Example of script showing how to copy all objects (including directories) from a source file. ;  ; file  dirs.C;   This macro illustrates how to create a hierarchy of directories in a Root file. ;  ; file  double32.C;   Tutorial illustrating use and precision of the Double32_t data type You should run this tutorial with ACLIC: a dictionary will be automatically created. ;  ; file  fildir.C;   This macro displays the ROOT Directory data structure ;  ; file  file.C;   This macro displays the physical ROOT file structure ;  ; file  float16.C;   Tutorial illustrating use and precision of the Float16_t data type. ;  ; file  hadd.C;   Macro to add histogram files This macro is kept for didactical purposes only: use instead the executable $ROOTSYS/bin/hadd ! ;  ; file  importCode.C;   Example of script showing how to create a ROOT file with subdirectories. ;  ; file  loopdir.C;   Example script to loop over all the objects of a ROOT file directory and print in Postscript all the TH1 derived objects. ;  ; file  loopdir11.C;   Example script to loop over all the objects of a ROOT file directory and print in Postscript all the TH1 derived objects. ;  ; file  mergeSelective.C;   Merge only part of the content of a set of files. ;  ; file  readCode.C;   Example of script showing how to navigate in a ROOT file with sub-directories and read the objects in each sub-directory. ;  ; file  testMergeCont.C;   Macro demonstrating the merging of containers. ;  ; file  testTMPIFile.C;  This macro shows the usage of TMPIFile to simulate event reconstruction and merging them in parallel. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__io.html:52,Guid,Guide,52,doc/master/group__tutorial__io.html,https://root.cern,https://root.cern/doc/master/group__tutorial__io.html,2,['Guid'],['Guide']
Usability,". ROOT: Image tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Image tutorialsTutorials. ; Examples showing the TImage class usage. . Files; file  galaxy_image.C;   Importing an image and manipulating it. ;  ; file  hist2image.C;   Create an image from a 2-D histogram and manipulate it. ;  ; file  hsumanim.C;   This script is a slightly modified version of hsum.C. ;  ; file  image2hist.C;   Create a 2-D histogram from an image. ;  ; file  img2pad.C;   Display image in canvas and pad. ;  ; file  imgconv.C;   Open rose512.jpg and save it in the following formats: .png, .gif, .xpm and tiff. ;  ; file  pad2png.C;   Create a canvas and save as png. ;  ; file  rose_image.C;   Display image in a new canvas and pad. ;  ; file  trans_graph.C;   Demonstrates how to access and manipulate ARGB pixel values of an image +... ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__image.html:55,Guid,Guide,55,doc/master/group__tutorial__image.html,https://root.cern,https://root.cern/doc/master/group__tutorial__image.html,2,['Guid'],['Guide']
Usability,". ROOT: Input/Output Library. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Input/Output Library. ; The library collecting the ROOT classes dedicated to data input and output.; For an overview of I/O in ROOT, see the following pages in the ROOT manual:. ROOT files; Trees: ROOT's columnar storage; I/O concepts: a collection of more advanced I/O-related topics; I/O of custom classes: how to read and write user-defined C++ objects. For ROOT I/O developers, a detailed internal description of the ROOT files layout is also available. . Classes; class  ROOT::Internal::RRawFile;  The RRawFile provides read-only access to local and remote files. More...;  ; class  ROOT::Internal::RRawFileTFile;  The RRawFileTFile wraps an open TFile, but does not take ownership. More...;  ; class  ROOT::Internal::RRawFileUnix;  The RRawFileUnix class uses POSIX calls to read from a mounted file system. More...;  ; class  ROOT::Internal::RRawFileWin;  The RRawFileWin class uses portable C I/O calls to read from a drive. More...;  ; class  TArchiveFile;  Class describing an archive file containing multiple sub-files, like a ZIP or TAR archive. More...;  ; class  TBufferFile;  The concrete implementation of TBuffer for writing/reading to/from a ROOT file or socket. More...;  ; class  TBufferIO;  Direct subclass of TBuffer, implements common methods for TBufferFile and TBufferText classes. More...;  ; class  TBufferJSON;  Class for serializing object to and from JavaScript Object Notation (JSON) format. More...;  ; class  ROOT::TBufferMerger;  TBufferMerger is a class to facilitate writing data in parallel from multiple threads, while writing to a single output file. More...;  ; class  ROOT::TBufferMergerFile;  A TBufferMergerFile is similar to a TMemFile, but when data is written to it, it is appended to the TBufferMerger queue. More...;  ; class  TBufferSQL2;  Converts data to SQL statements or read data from SQL tables. More...;  ; class  TBufferTex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__IO.html:60,Guid,Guide,60,doc/master/group__IO.html,https://root.cern,https://root.cern/doc/master/group__IO.html,1,['Guid'],['Guide']
Usability,". ROOT: Interface classes for Random number generation. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules |; Classes |; Typedefs ; Interface classes for Random number generationMath » MathCore. ; Pseudo-random numbers generator classes and for generation of random number distributions. ; These classes implement several pseudo-random number generators and method for generation of random numbers according to arbitrary distributions . Modules;  QuasiRandom number generators and distributions;  Classes for generating QuasiRandom numbers and based on GSL. ;  . Classes; class  ROOT::Math::DistSampler;  Interface class for generic sampling of a distribution, i.e. More...;  ; class  ROOT::Math::GSLQRngNiederreiter2;  Niederreiter generator gsl_qrng_niederreiter_2 from here More...;  ; class  ROOT::Math::GSLQRngSobol;  Sobol generator gsl_qrng_sobol from here More...;  ; class  ROOT::Math::GSLQuasiRandomEngine;  GSLQuasiRandomEngine Base class for all GSL quasi random engines, normally user instantiate the derived classes which creates internally the generator and uses the class ROOT::Math::QuasiRandom. More...;  ; class  ROOT::Math::GSLRandomEngine;  GSLRandomEngine Base class for all GSL random engines, normally user instantiate the derived classes which creates internally the generator. More...;  ; class  ROOT::Math::GSLRngCMRG;  Combined multiple recursive generator (L'Ecuyer) see here More...;  ; class  ROOT::Math::GSLRngGFSR4;  Lagged Fibonacci generator by Ziff see here More...;  ; class  ROOT::Math::GSLRngMinStd;  MINSTD generator (Park and Miller) see here More...;  ; class  ROOT::Math::GSLRngMixMax;  MixMax generator based on ROOT::Math::MixMaxEngine of N=240. More...;  ; class  ROOT::Math::GSLRngMRG;  5-th order multiple recursive generator (L'Ecuyer, Blouin and Coutre) see here More...;  ; class  ROOT::Math::GSLRngMT;  Mersenne-Twister generator gsl_rng_mt19937 from here More...;  ; class  ROOT::Math::GSLRngRand;  BSD rand() ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Random.html:86,Guid,Guide,86,doc/master/group__Random.html,https://root.cern,https://root.cern/doc/master/group__Random.html,1,['Guid'],['Guide']
Usability,". ROOT: Interpolation Classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Enumerations ; Interpolation ClassesMath » MathCore | Math » MathMore » Numerical Algorithms. ; Classes for interpolation of points. . Classes; class  ROOT::Math::GSLInterpolator;  Interpolation class based on GSL interpolation functions. More...;  ; class  ROOT::Math::Interpolator;  Class for performing function interpolation of points. More...;  . Enumerations; enum  ROOT::Math::Interpolation::Type { ;   ROOT::Math::Interpolation::kLINEAR; , ROOT::Math::Interpolation::kPOLYNOMIAL; , ROOT::Math::Interpolation::kCSPLINE; , ROOT::Math::Interpolation::kCSPLINE_PERIODIC; , ;   ROOT::Math::Interpolation::kAKIMA; , ROOT::Math::Interpolation::kAKIMA_PERIODIC. };  Enumeration defining the types of interpolation methods availables. More...;  . Enumeration Type Documentation. ◆ Type. enum ROOT::Math::Interpolation::Type. Enumeration defining the types of interpolation methods availables. ; Passed as argument to instantiate mathlib::Interpolator objects. The types available are (more information is available in the GSL manual): . LINEAR interpolation; . POLYNOMIAL interpolation, to be used for small number of points since introduces large oscillations; . CSPLINE cubic spline with natural boundary conditions; . CSPLINE_PERIODIC cubic spline with periodic boundary conditions; . AKIMA, Akima spline with natural boundary conditions ( requires a minimum of 5 points); . AKIMA_PERIODIC, Akima spline with periodic boundaries ( requires a minimum of 5 points); . EnumeratorkLINEAR ; kPOLYNOMIAL ; kCSPLINE ; kCSPLINE_PERIODIC ; kAKIMA ; kAKIMA_PERIODIC . Definition at line 60 of file InterpolationTypes.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Interpolation.html:61,Guid,Guide,61,doc/master/group__Interpolation.html,https://root.cern,https://root.cern/doc/master/group__Interpolation.html,2,['Guid'],['Guide']
Usability,". ROOT: Jet Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; Jet Class Reference. . Definition at line 69 of file collection_proxies.C. Public Member Functions;  Jet ();  ;  Jet (Int_t pdg, Int_t status, Int_t mother1, Int_t mother2, Int_t daughter1, Int_t daughter2, Double_t px, Double_t py, Double_t pz, Double_t etot);  ;  ~Jet () override;  ; float GetEtaSize () const;  ; float GetPhiSize () const;  ; TRefArray & GetTracks ();  ; virtual TClass * IsA () const;  ; void SetEtaSize (float iEtaSize);  ; void SetPhiSize (float iPhiSize);  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TParticle;  TParticle ();  reference to the particle record in PDG database ;  ;  TParticle (const TParticle &part);  copy constructor ;  ;  TParticle (Int_t pdg, Int_t status, Int_t mother1, Int_t mother2, Int_t daughter1, Int_t daughter2, const TLorentzVector &p, const TLorentzVector &v);  constructor ;  ;  TParticle (Int_t pdg, Int_t status, Int_t mother1, Int_t mother2, Int_t daughter1, Int_t daughter2, Double_t px, Double_t py, Double_t pz, Double_t etot, Double_t vx, Double_t vy, Double_t vz, Double_t time);  constructor ;  ;  ~TParticle () override;  destructor ;  ; Int_t Beauty () const;  Return beauty quantum number. ;  ; Int_t Charm () const;  Return charm quantum number. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a primary track. ;  ; Double_t Ek () const;  ; Double_t Energy () const;  ; Double_t Eta () const;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; Double_t GetCalcMass () const;  ; Int_t GetDaughter (Int_t i) const;  ; Int_t GetFirstDaughter ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classJet.html:59,Guid,Guide,59,doc/master/classJet.html,https://root.cern,https://root.cern/doc/master/classJet.html,1,['Guid'],['Guide']
Usability,". ROOT: JetEvent Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; JetEvent Class Reference. . Definition at line 64 of file JetEvent.h. Public Member Functions;  JetEvent ();  Create a JetEvent object. ;  ;  ~JetEvent () override;  ; Hit * AddHitA ();  Add a new hit to the list of hits in detector A. ;  ; Hit * AddHitB ();  Add a new hit to the list of hits in detector B. ;  ; Jet * AddJet ();  Add a new Jet to the list of tracks for this event. ;  ; Track * AddTrack ();  Add a new track to the list of tracks for this event. ;  ; void Build (Int_t jetm=3, Int_t trackm=10, Int_t hitam=100, Int_t hitbm=10);  Build one event. ;  ; void Clear (Option_t *option="""") override;  ; TClonesArray * GetJets () const;  ; Int_t GetNhitA () const;  ; Int_t GetNhitB () const;  ; Int_t GetNjet () const;  ; Int_t GetNtrack () const;  ; void Reset (Option_t *option="""");  Static function to reset all static objects for this event. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classJetEvent.html:64,Guid,Guide,64,doc/master/classJetEvent.html,https://root.cern,https://root.cern/doc/master/classJetEvent.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Legacy tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules |; Files ; Legacy tutorialsTutorials. ; Legacy Tutorials. ; Some of ROOT's tutorials demonstrate interfaces that are not recommended anymore, because ROOT or C++ itself now offer superior ones. These have been moved here ""for the record"". . Modules;  Containers tutorials;  Examples showing the ""containers' classes"" usage.. ;  ;  Multi Layer Perceptron tutorials;  Examples showing the Multi Layer Perceptron classes. ;  ;  Regexp tutorials;  Examples for ROOT's regular expressions. ;  ;  Thread tutorials;  Thread examples. ;  . Files; file  benchmarks.C;  This macro run several tests and produces an benchmark report. ;  ; file  geant3tasks.C;  This script is a representation using TTasks of the Geant3 simulation program This example uses directly TTask objects. ;  ; file  htmlex.C;  This file demonstrates how THtml can document sources. ;  ; file  MyTasks.cxx;  A set of classes deriving from TTask. ;  ; file  ProofNtuple.C;  Selector to fill a simple ntuple. ;  ; file  ProofNtuple.h;  Selector to fill a simple ntuple. ;  ; file  ProofPythia.C;  Selector to generate Monte Carlo events with Pythia8. ;  ; file  ProofPythia.h;  Selector to generate Monte Carlo events with Pythia8. ;  ; file  rootalias.C;  Defines aliases: ;  ; file  rootenv.C;  Produce a picture of the ROOT environment. ;  ; file  rootmarks.C;  Prints a summary of all ROOT benchmarks (must be run before). ;  ; file  tasks.C;  Example of TTasks. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__legacy.html:56,Guid,Guide,56,doc/master/group__tutorial__legacy.html,https://root.cern,https://root.cern/doc/master/group__tutorial__legacy.html,4,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: Materials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; MaterialsThe Geometry Package. . Materials and Tracking Media; Elements, Materials and Mixtures; Radionuclides; Tracking Media; User Interface for Handling Materials and Media. Materials and Tracking Media; We have mentioned that volumes are the building blocks for geometry, but they describe real objects having well defined properties. In fact, there are just two of them: the material they are made from and their geometrical shape. These have to be created before creating the volume itself, so we will describe the bits and pieces needed for making the geometry before moving to an architectural point of view.; As far as materials are concerned, they represent the physical properties of the solid from which a volume is made. Materials are just a support for the data that has to be provided to the tracking engine that uses this geometry package. Due to this fact, the TGeoMaterial class is more like a thin data structure needed for building the corresponding native materials of the Monte-Carlo tracking code that uses TGeo. Elements, Materials and Mixtures; In order to make easier material and mixture creation, one can use the pre-built table of elements owned by TGeoManager class:; TGeoElementTable *table = gGeoManager->GetElementTable();; TGeoElement *element1 = table->GetElement(Int_t Z);; TGeoElement *element2 = table->FindElement(""Copper"");; Int_tint Int_tDefinition RtypesCore.h:45; gGeoManagerR__EXTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; TGeoElementTableTable of elements.Definition TGeoElement.h:398; TGeoElementTable::GetElementTGeoElement * GetElement(Int_t z)Definition TGeoElement.h:435; TGeoElementTable::FindElementTGeoElement * FindElement(const char *name) constSearch an element by symbol or full name Exact matching.Definition TGeoElement.cxx:1334; TGeoElementBase class for chemical elements.Definition TGeoElement.h:36; TGeoManager::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Materials__classes.html:49,Guid,Guide,49,doc/master/group__Materials__classes.html,https://root.cern,https://root.cern/doc/master/group__Materials__classes.html,1,['Guid'],['Guide']
Usability,. ROOT: Math Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Math Namespace Reference. Namespace for new Math classes and functions. ; More...; Detailed Description; Namespace for new Math classes and functions. ; See the Math Libraries page for a detailed description. . Math. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:51 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceMath.html:64,Guid,Guide,64,doc/master/namespaceMath.html,https://root.cern,https://root.cern/doc/master/namespaceMath.html,2,['Guid'],['Guide']
Usability,". ROOT: Math tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Math tutorialsTutorials. ; Examples showing the Math classes. . Files; file  Bessel.C;   Show the different kinds of Bessel functions available in ROOT To execute the macro type in: ;  ; file  Bessel.py;   Show the different kinds of Bessel functions available in ROOT To execute the macro type in: ;  ; file  binomial.C;   tutorial illustrating the use of TMath::Binomial can be run with: ;  ; file  BreitWigner.C;   Tutorial illustrating how to create a plot comparing a Breit Wigner to a Relativistic Breit Wigner ;  ; file  ChebyshevPol.C;   Example of Chebyshev polynomials using new TFormula pre-defined definitions of chebyshev polynomials ;  ; file  chi2test.C;   Example to use chi2 test for comparing two histograms One unweighted histogram is compared with a weighted histogram. ;  ; file  CrystalBall.C;   Example of CrystalBall Function and its distribution (pdf and cdf) ;  ; file  exampleFunction.py;   Example of using Python functions and input to numerical algorithm using the ROOT Functor class ;  ; file  exampleFunctor.C;   Tutorial illustrating how creating a TF1 class using functor or class member functions ;  ; file  exampleMultiRoot.C;   Example of using multiroot finder based on GSL algorithm. ;  ; file  exampleTKDE.C;   Example of using the TKDE class (kernel density estimator) ;  ; file  FeldmanCousins.C;   Example macro of using the TFeldmanCousins class in root. ;  ; file  GammaFun.C;   Example showing the usage of the major special math functions (gamma, beta, erf) in ROOT To execute the macro type in: ;  ; file  goftest.C;   GoFTest tutorial macro ;  ; file  hlquantiles.C;  Demo for quantiles (with highlight mode) ;  ; file  kdTreeBinning.C;   kdTreeBinning tutorial: bin the data in cells of equal content using a kd-tree ;  ; file  Legendre.C;   Example of first few Legendre Polynomials ;  ; file  Legendre.py;   Example of first few Legendr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__math.html:54,Guid,Guide,54,doc/master/group__tutorial__math.html,https://root.cern,https://root.cern/doc/master/group__tutorial__math.html,1,['Guid'],['Guide']
Usability,". ROOT: Math. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules ; Math. ; The ROOT Mathematical Libraries. ; They consist of the following components:. MathCore: a self-consistent minimal set of tools required for the basic numerical computing. It provides the major mathematical functions in the namespaces ROOT::Math and TMath, classes for random number generators, TRandom, class for complex numbers, TComplex, common interfaces for function evaluation and numerical algorithms. Basic implementations of some of the numerical algorithms such as integration or derivation, are also provided by MathCore. together with the core classes needed to fit any generic data set.; MathMore: a package incorporating advanced numerical functionality and dependent on external libraries like the GNU Scientific Library (GSL). It complements the MathCore library by providing a more complete sets of special mathematical functions and implementations of the numerical algorithms interfaces defined in MathCore using GSL.; Minimization and Fitting Libraries Libraries required for numerical minimization and fitting. The minimization libraries include the numerical methods for solving the fitting problem by finding minimum of multi-dimensional function. The current common interface for minimization is the class ROOT::Math::Minimizer and implemented by derived classes in the minimization and fitting libraries. The fitting in ROOT is organized in fitting classes present in MathCore in the (ROOT::Fit namespace) for providing the fitting functionality and the use the minimization libraries via the common interface (ROOT::Math::Minimizer). In detail the minimization libraries, implementing all the new and old minimization interface, include:; Minuit: library providing via a class TMinuit an implementation of the popular MINUIT minimization package. In addition the library contains also an implementation of the linear fitter (class TLinearFitter), for solving line",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Math.html:44,Guid,Guide,44,doc/master/group__Math.html,https://root.cern,https://root.cern/doc/master/group__Math.html,1,['Guid'],['Guide']
Usability,". ROOT: Math. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules ; Math. ; The ROOT Mathematical Libraries. ; They consist of the following components:. MathCore: a self-consistent minimal set of tools required for the basic numerical computing. It provides the major mathematical functions in the namespaces ROOT::Math and TMath, classes for random number generators, TRandom, class for complex numbers, TComplex, common interfaces for function evaluation and numerical algorithms. Basic implementations of some of the numerical algorithms such as integration or derivation, are also provided by MathCore. together with the core classes needed to fit any generic data set.; MathMore: a package incorporating advanced numerical functionality and dependent on external libraries like the GNU Scientific Library (GSL). It complements the MathCore library by providing a more complete sets of special mathematical functions and implementations of the numerical algorithms interfaces defined in MathCore using GSL.; Minimization and Fitting Libraries Libraries required for numerical minimization and fitting. The minimization libraries include the numerical methods for solving the fitting problem by finding minimum of multi-dimensional function. The current common interface for minimization is the class ROOT::Math::Minimizer and implemented by derived classes in the minimization and fitting libraries. The fitting in ROOT is organized in fitting classes present in MathCore in the (ROOT::Fit namespace) for providing the fitting functionality and the use the minimization libraries via the common interface (ROOT::Math::Minimizer). In detail the minimization libraries, implementing all the new and old minimization interface, include:; Minuit: library providing via a class TMinuit an implementation of the popular MINUIT minimization package. In addition the library contains also an implementation of the linear fitter (class TLinearFitter), for solving linea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/group__Math.html:43,Guid,Guide,43,doc/v632/group__Math.html,https://root.cern,https://root.cern/doc/v632/group__Math.html,1,['Guid'],['Guide']
Usability,". ROOT: MathCore. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules |; Files |; Classes ; MathCoreMath. ; The Core Mathematical Library of ROOT. ; MathCore provides a collection of functions and C++ classes for HEP numerical computing. This library provides only the basic mathematical functions and algorithms and not all the functionality required by the HEP community. More advanced mathematical functionalities is provided by the MathMore. The current set includes classes and functions for:. Basic special functions used in HEP like the gamma, beta and error function;; Statistical functions : mathematical functions used in statistics, such as the probability density functions and the cumulative distributions functions (lower and upper integral of the pdf's) for continuous and discrete distributions.;; Function Classes and Interfaces :; Generic Function Evaluation Interfaces, including helper class to wrap free (static) and non-static member functions; Parametric Function Evaluation Interfaces. Numerical algorithms: user classes with (in some cases) basic implementations for:; Numerical Integration; Numerical Differentiation; One-dimensional Root-Finding; One-dimensional Minimization and Multi-dimensional Minimization. Fitting and Parameter Estimation :classes for fitting and parameter estimation from a given data set. Note that in this latest release the GenVector (physics and geometry vectors for 2,3 and 4 dimensions with their transformations) is not anymore part of MathCore, but is built as a separate library. MathCore contains instead now classes which were originally part of libCore. These include:. TMath : namespace with mathematical functions and basic function algorithms.; TComplex: class for complex numbers.; Random classes: base class TRandom and the derived classes TRandom1, TRandom2 and TRandom3, implementing the pseudo-random number generators.; Other classes, such as; TKDTree for partitioning the data using a kd-Tre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__MathCore.html:48,Guid,Guide,48,doc/master/group__MathCore.html,https://root.cern,https://root.cern/doc/master/group__MathCore.html,1,['Guid'],['Guide']
Usability,". ROOT: MathCore. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules |; Files |; Classes ; MathCoreMath. ; The Core Mathematical Library of ROOT. ; MathCore provides a collection of functions and C++ classes for HEP numerical computing. This library provides only the basic mathematical functions and algorithms and not all the functionality required by the HEP community. More advanced mathematical functionalities is provided by the MathMore. The current set includes classes and functions for:. Basic special functions used in HEP like the gamma, beta and error function;; Statistical functions : mathematical functions used in statistics, such as the probability density functions and the cumulative distributions functions (lower and upper integral of the pdf's) for continuous and discrete distributions.;; Function Classes and Interfaces :; Generic Function Evaluation Interfaces, including helper class to wrap free (static) and non-static member functions; Parametric Function Evaluation Interfaces. Numerical algorithms: user classes with (in some cases) basic implementations for:; Numerical Integration; Numerical Differentiation; One-dimensional Root-Finding; One-dimensional Minimization and Multi-dimensional Minimization. Fitting and Parameter Estimation :classes for fitting and parameter estimation from a given data set. Note that in this latest release the GenVector (physics and geometry vectors for 2,3 and 4 dimensions with their transformations) is not anymore part of MathCore, but is built as a separate library. MathCore contains instead now classes which were originally part of libCore. These include:. TMath : namespace with mathematical functions and basic function algorithms.; TComplex: class for complex numbers.; Random classes: base class TRandom and the derived classes TRandom1, TRandom2 and TRandom3, implementing the pseudo-random number generators.; Other classes, such as; TKDTree for partitioning the data using a kd-Tree",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/group__MathCore.html:47,Guid,Guide,47,doc/v632/group__MathCore.html,https://root.cern,https://root.cern/doc/v632/group__MathCore.html,1,['Guid'],['Guide']
Usability,". ROOT: MathMore. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules ; MathMoreMath. ; The Mathematical library providing some advanced functionality and based on GSL. ; MathMore provides an advanced collection of functions and C++ classes for HEP numerical computing. This is an extension of the functionality provided by the MathCore. The current set includes classes and functions for:. Special functions, with all the major functions (Bessel functions, Legendre polynomial, etc..); Statistical functions, Mathematical functions used in statistics such as probability density functions, cumulative distributions functions and their inverse (quantiles).; Numerical algorithms:; Numerical Integration; Numerical Monte Carlo Integration Classes; Numerical Differentiation; One-dimensional Root-Finding; One-dimensional Minimization; Multi-dimensional Minimization. Interpolation Classes; Function Approximation (ChebyshevApprox), based on Chebyshev polynomials; Interface classes for Random number generation. The mathematical functions are implemented as a set of free functions in the namespace ROOT::Math. The naming used for the special functions is the same proposed for the C++ standard (see C++ standard extension proposal document). The MathMore library is implemented wrapping in C++ the GNU Scientific Library (GSL). To build MathMore you need to have first GSL installed somewhere in your system. A version of GSL larger or equal 1.8 is required. A tar file of GSL can be downloaded from the GSL Web site, or (for version 1.8) from here. Windows binaries, compiled using Visual Studio 7.1 can be downloaded from this location.; MathMore (and its ROOT CINT dictionary) can be built within ROOT whenever a GSL library is found in the system. Optionally the GSL library and header file location can be specified in the ROOT configure script with configure –with-gsl-incdir=... –with-gsl-libdir=... MathMore links with the GSL static libraries. On some pla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__MathMore.html:48,Guid,Guide,48,doc/master/group__MathMore.html,https://root.cern,https://root.cern/doc/master/group__MathMore.html,1,['Guid'],['Guide']
Usability,". ROOT: MathMore. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules ; MathMoreMath. ; The Mathematical library providing some advanced functionality and based on GSL. ; MathMore provides an advanced collection of functions and C++ classes for HEP numerical computing. This is an extension of the functionality provided by the MathCore. The current set includes classes and functions for:. Special functions, with all the major functions (Bessel functions, Legendre polynomial, etc..); Statistical functions, Mathematical functions used in statistics such as probability density functions, cumulative distributions functions and their inverse (quantiles).; Numerical algorithms:; Numerical Integration; Numerical Monte Carlo Integration Classes; Numerical Differentiation; One-dimensional Root-Finding; One-dimensional Minimization; Multi-dimensional Minimization. Interpolation Classes; Function Approximation (ChebyshevApprox), based on Chebyshev polynomials; Interface classes for Random number generation. The mathematical functions are implemented as a set of free functions in the namespace ROOT::Math. The naming used for the special functions is the same proposed for the C++ standard (see C++ standard extension proposal document). The MathMore library is implemented wrapping in C++ the GNU Scientific Library (GSL). To build MathMore you need to have first GSL installed somewhere in your system. A version of GSL larger or equal 1.8 is required. A tar file of GSL can be downloaded from the GSL Web site, or (for version 1.8) from here. Windows binaries, compiled using Visual Studio 7.1 can be downloaded from this location.; MathMore (and its ROOT CINT dictionary) can be built within ROOT whenever a GSL library is found in the system. Optionally the GSL library and header file location can be specified in the ROOT configure script with configure –with-gsl-incdir=... –with-gsl-libdir=... MathMore links with the GSL static libraries. On some plat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/group__MathMore.html:47,Guid,Guide,47,doc/v632/group__MathMore.html,https://root.cern,https://root.cern/doc/v632/group__MathMore.html,1,['Guid'],['Guide']
Usability,". ROOT: Matrix Template Functions. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; Matrix Template FunctionsMath » SMatrix Package. ; These function apply to matrices (and also Matrix expression) and can return a matrix expression of a particular defined type, like in the matrix multiplication or a vector, like in the matrix-vector product or a scalar like in the Similarity vector-matrix product. . Functions; template<class T , unsigned int D, unsigned int D2, class R1 , class R2 > ; Expr< BinaryOp< DivOp< T >, SMatrix< T, D, D2, R1 >, SMatrix< T, D, D2, R2 >, T >, T, D, D2, typename AddPolicy< T, D, D2, R1, R2 >::RepType > ROOT::Math::Div (const SMatrix< T, D, D2, R1 > &lhs, const SMatrix< T, D, D2, R2 > &rhs);  Division (element wise) of two matrices of the same dimensions: C(i,j) = A(i,j) / B(i,j) returning a matrix expression. ;  ; template<class T , unsigned int D, unsigned int D2, class R > ; Expr< UnaryOp< Fabs< T >, SMatrix< T, D, D2, R >, T >, T, D, D2, R > ROOT::Math::fabs (const SMatrix< T, D, D2, R > &rhs);  abs of a matrix m2(i,j) = | m1(i,j) | returning a matrix epression ;  ; template<class A , class T , unsigned int D, unsigned int D2, class R > ; Expr< BinaryOpCopyL< MulOp< T >, Constant< A >, SMatrix< T, D, D2, R >, T >, T, D, D2, R > ROOT::Math::operator* (const A &lhs, const SMatrix< T, D, D2, R > &rhs);  Multiplication (element wise) of a matrix and a scalar, B(i,j) = s * A(i,j) returning a matrix expression. ;  ; template<class A , class T , unsigned int D, unsigned int D2, class R > ; Expr< BinaryOpCopyR< MulOp< T >, SMatrix< T, D, D2, R >, Constant< A >, T >, T, D, D2, R > ROOT::Math::operator* (const SMatrix< T, D, D2, R > &lhs, const A &rhs);  Multiplication (element wise) of a matrix and a scalar, B(i,j) = A(i,j) * s returning a matrix expression. ;  ; template<class T , unsigned int D1, unsigned int D, unsigned int D2, class R1 , class R2 > ; Expr< MatrixMulOp< SMatrix< T, D1, D, R1 >, SMatrix< ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__MatrixFunctions.html:65,Guid,Guide,65,doc/master/group__MatrixFunctions.html,https://root.cern,https://root.cern/doc/master/group__MatrixFunctions.html,1,['Guid'],['Guide']
Usability,. ROOT: Matrix tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Matrix tutorialsTutorials. ; Examples showing how to use TMatrix. . Files; file  decomposeQR.C;   This tutorial shows how to decompose a matrix A in an orthogonal matrix Q and an upper triangular matrix R using QR Householder decomposition with the TDecompQRH class. ;  ; file  invertMatrix.C;   This macro shows several ways to invert a matrix . ;  ; file  solveLinear.C;   This macro shows several ways to perform a linear least-squares analysis . ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__matrix.html:56,Guid,Guide,56,doc/master/group__tutorial__matrix.html,https://root.cern,https://root.cern/doc/master/group__tutorial__matrix.html,2,['Guid'],['Guide']
Usability,. ROOT: MemInfo_t Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; MemInfo_t Struct Reference. . Definition at line 177 of file TSystem.h. Public Member Functions;  MemInfo_t ();  ; virtual ~MemInfo_t ();  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Public Attributes; Int_t fMemAvailable;  ; Int_t fMemBuffer;  ; Int_t fMemCached;  ; Int_t fMemFree;  ; Int_t fMemShared;  ; Int_t fMemTotal;  ; Int_t fMemUsed;  ; Int_t fSReclaimable;  ; Int_t fSwapCached;  ; Int_t fSwapFree;  ; Int_t fSwapTotal;  ; Int_t fSwapUsed;  . #include <TSystem.h>; Constructor & Destructor Documentation. ◆ MemInfo_t(). MemInfo_t::MemInfo_t ; (; ). inline . Definition at line 190 of file TSystem.h. ◆ ~MemInfo_t(). virtual MemInfo_t::~MemInfo_t ; (; ). inlinevirtual . Definition at line 192 of file TSystem.h. Member Function Documentation. ◆ Class(). static TClass * MemInfo_t::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * MemInfo_t::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t MemInfo_t::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 193 of file TSystem.h. ◆ DeclFileName(). static const char * MemInfo_t::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 193 of file TSystem.h. ◆ IsA(). virtual TClass * MemInfo_t::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Definition at line 193 of file TSystem.h. ◆,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structMemInfo__t.html:66,Guid,Guide,66,doc/master/structMemInfo__t.html,https://root.cern,https://root.cern/doc/master/structMemInfo__t.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Detail::TSchemaRuleSet Member List. This is the complete list of members for ROOT::Detail::TSchemaRuleSet, including all inherited members. AbstractMethod(const char *method) constTObject; AddRule(TSchemaRule *rule, EConsistencyCheck checkConsistency=kCheckAll, TString *errmsg=nullptr)ROOT::Detail::TSchemaRuleSet; AddRules(TSchemaRuleSet *rules, EConsistencyCheck checkConsistency=kCheckAll, TString *errmsg=nullptr)ROOT::Detail::TSchemaRuleSet; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AsString(TString &out) constROOT::Detail::TSchemaRuleSet; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()ROOT::Detail::TSchemaRuleSetstatic; Class_Name()ROOT::Detail::TSchemaRuleSetstatic; Class_Version()ROOT::Detail::TSchemaRuleSetinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; DeclFileName()ROOT::Detail::TSchemaRuleSetinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EConsistencyCheck enum nameROOT::Detail::TSchemaRuleSet; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; fAllRulesROOT::Detail::TSchem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Experimental::RCanvas Member List. This is the complete list of members for ROOT::Experimental::RCanvas, including all inherited members. Add(ARGS... args)ROOT::Experimental::RPadBaseinline; AddFrame()ROOT::Experimental::RPadBase; AddPad(const RPadPos &, const RPadExtent &)ROOT::Experimental::RPadBase; AddPanel(std::shared_ptr< PANEL > &panel)ROOT::Experimental::RCanvasinline; ClearOnClose(const std::shared_ptr< void > &handle)ROOT::Experimental::RCanvas; ClearShown()ROOT::Experimental::RCanvasinline; ClearStyle()ROOT::Experimental::RDrawableinline; ClearUpdated()ROOT::Experimental::RCanvasinline; CollectShared(Internal::RIOSharedVector_t &) overrideROOT::Experimental::RPadBaseprotectedvirtual; Create(const std::string &title)ROOT::Experimental::RCanvasstatic; CreateJSON()ROOT::Experimental::RCanvas; Display(const RDisplayContext &)ROOT::Experimental::RDrawableprotectedvirtual; DisplayPrimitives(RPadBaseDisplayItem &paditem, RDisplayContext &ctxt)ROOT::Experimental::RPadBaseprotected; Divide(int nHoriz, int nVert, const RPadExtent &padding={})ROOT::Experimental::RPadBase; Draw(const std::shared_ptr< T > &what, ARGS... args)ROOT::Experimental::RPadBaseinline; Draw(ARGS... args)ROOT::Experimental::RPadBaseinline; Draw(std::shared_ptr< RDrawable > &&drawable)ROOT::Experimental::RPadBaseinline; Execute(const std::string &)ROOT::Experimental::RDrawableprotectedvirtual; fAttrROOT::Experimental::RDrawableprivate; fCssClassROOT::Experimental::RDrawableprivate; fCssTypeROOT::Experimental::RDrawableprivate; fHeightROOT::Experimental::RCanvasprivate; fIdROOT::Experimental::RDrawableprivate; FindPadForPrimitiveWithDisplayId(const std::string &display_id) constROOT::Experimental::RPadBase; FindPrimitive(const std::string &id) constROOT::Experimental::RPadBase; FindPrimitiveByDisplayId(const std::string &display_id) constROOT::Experimental::RPadBase; fModifiedROOT::Experimen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvas-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1Experimental_1_1RCanvas-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvas-members.html,5,"['Clear', 'Guid']","['ClearOnClose', 'ClearShown', 'ClearStyle', 'ClearUpdated', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Experimental::RNTupleImporter Member List. This is the complete list of members for ROOT::Experimental::RNTupleImporter, including all inherited members. Create(std::string_view sourceFileName, std::string_view treeName, std::string_view destFileName)ROOT::Experimental::RNTupleImporterstatic; Create(TTree *sourceTree, std::string_view destFileName)ROOT::Experimental::RNTupleImporterstatic; fConvertDotsInBranchNamesROOT::Experimental::RNTupleImporterprivate; fDestFileROOT::Experimental::RNTupleImporterprivate; fDestFileNameROOT::Experimental::RNTupleImporterprivate; fEntryROOT::Experimental::RNTupleImporterprivate; fFieldModifierROOT::Experimental::RNTupleImporterprivate; FieldModifier_t typedefROOT::Experimental::RNTupleImporter; fImportBranchesROOT::Experimental::RNTupleImporterprivate; fImportFieldsROOT::Experimental::RNTupleImporterprivate; fImportTransformationsROOT::Experimental::RNTupleImporterprivate; fIsQuietROOT::Experimental::RNTupleImporterprivate; fLeafCountCollectionsROOT::Experimental::RNTupleImporterprivate; fMaxEntriesROOT::Experimental::RNTupleImporterprivate; fModelROOT::Experimental::RNTupleImporterprivate; fNTupleNameROOT::Experimental::RNTupleImporterprivate; fProgressCallbackROOT::Experimental::RNTupleImporterprivate; fSourceFileROOT::Experimental::RNTupleImporterprivate; fSourceTreeROOT::Experimental::RNTupleImporterprivate; fWriteOptionsROOT::Experimental::RNTupleImporterprivate; GetWriteOptions() constROOT::Experimental::RNTupleImporterinline; Import()ROOT::Experimental::RNTupleImporter; InitDestination(std::string_view destFileName)ROOT::Experimental::RNTupleImporterprivate; operator=(const RNTupleImporter &other)=deleteROOT::Experimental::RNTupleImporter; operator=(RNTupleImporter &&other)=deleteROOT::Experimental::RNTupleImporter; PrepareSchema()ROOT::Experimental::RNTupleImporterprivate; ReportSchema()ROOT::Experimental::RNTupleImpo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleImporter-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1Experimental_1_1RNTupleImporter-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleImporter-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Experimental::RNTupleReader Member List. This is the complete list of members for ROOT::Experimental::RNTupleReader, including all inherited members. begin()ROOT::Experimental::RNTupleReaderinline; Clone()ROOT::Experimental::RNTupleReaderinline; ConnectModel(RNTupleModel &model)ROOT::Experimental::RNTupleReaderprivate; EnableMetrics()ROOT::Experimental::RNTupleReaderinline; end()ROOT::Experimental::RNTupleReaderinline; fCachedDescriptorROOT::Experimental::RNTupleReaderprivate; fDisplayReaderROOT::Experimental::RNTupleReaderprivate; fMetricsROOT::Experimental::RNTupleReaderprivate; fModelROOT::Experimental::RNTupleReaderprivate; fSourceROOT::Experimental::RNTupleReaderprivate; fUnzipTasksROOT::Experimental::RNTupleReaderprivate; GetCollectionView(std::string_view fieldName)ROOT::Experimental::RNTupleReaderinline; GetCollectionView(DescriptorId_t fieldId)ROOT::Experimental::RNTupleReaderinline; GetDescriptor()ROOT::Experimental::RNTupleReader; GetDirectAccessView(std::string_view fieldName)ROOT::Experimental::RNTupleReaderinline; GetDirectAccessView(DescriptorId_t fieldId)ROOT::Experimental::RNTupleReaderinline; GetDisplayReader()ROOT::Experimental::RNTupleReaderprivate; GetEntryRange()ROOT::Experimental::RNTupleReaderinline; GetMetrics() constROOT::Experimental::RNTupleReaderinline; GetModel()ROOT::Experimental::RNTupleReader; GetNEntries() constROOT::Experimental::RNTupleReaderinline; GetView(std::string_view fieldName)ROOT::Experimental::RNTupleReaderinline; GetView(std::string_view fieldName, std::shared_ptr< T > objPtr)ROOT::Experimental::RNTupleReaderinline; GetView(std::string_view fieldName, T *rawPtr)ROOT::Experimental::RNTupleReaderinline; GetView(DescriptorId_t fieldId)ROOT::Experimental::RNTupleReaderinline; GetView(DescriptorId_t fieldId, std::shared_ptr< T > objPtr)ROOT::Experimental::RNTupleReaderinline; GetView(DescriptorId_t fieldId, T *rawPtr)RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleReader-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1Experimental_1_1RNTupleReader-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleReader-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Experimental::RNTupleWriter Member List. This is the complete list of members for ROOT::Experimental::RNTupleWriter, including all inherited members. Append(std::unique_ptr< RNTupleModel > model, std::string_view ntupleName, TFile &file, const RNTupleWriteOptions &options=RNTupleWriteOptions())ROOT::Experimental::RNTupleWriterstatic; CommitCluster(bool commitClusterGroup=false)ROOT::Experimental::RNTupleWriterinline; CommitClusterGroup()ROOT::Experimental::RNTupleWriterprivate; Create(std::unique_ptr< RNTupleModel > model, std::unique_ptr< Internal::RPageSink > sink, const RNTupleWriteOptions &options)ROOT::Experimental::RNTupleWriterprivatestatic; CreateEntry()ROOT::Experimental::RNTupleWriterinline; CreateModelUpdater()ROOT::Experimental::RNTupleWriterinline; EnableMetrics()ROOT::Experimental::RNTupleWriterinline; fFillContextROOT::Experimental::RNTupleWriterprivate; Fill()ROOT::Experimental::RNTupleWriterinline; Fill(REntry &entry)ROOT::Experimental::RNTupleWriterinline; FillNoFlush(REntry &entry, RNTupleFillStatus &status)ROOT::Experimental::RNTupleWriterinline; fLastCommittedClusterGroupROOT::Experimental::RNTupleWriterprivate; FlushCluster()ROOT::Experimental::RNTupleWriterinline; FlushColumns()ROOT::Experimental::RNTupleWriterinline; fMetricsROOT::Experimental::RNTupleWriterprivate; fZipTasksROOT::Experimental::RNTupleWriterprivate; GetLastCommitted() constROOT::Experimental::RNTupleWriterinline; GetLastCommittedClusterGroup() constROOT::Experimental::RNTupleWriterinline; GetLastFlushed() constROOT::Experimental::RNTupleWriterinline; GetMetrics() constROOT::Experimental::RNTupleWriterinline; GetModel() constROOT::Experimental::RNTupleWriterinline; GetNEntries() constROOT::Experimental::RNTupleWriterinline; GetSink()ROOT::Experimental::RNTupleWriterinlineprivate; GetUpdatableModel()ROOT::Experimental::RNTupleWriterinlineprivate; Internal::CreateRNTupleWri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleWriter-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1Experimental_1_1RNTupleWriter-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleWriter-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::BinData Member List. This is the complete list of members for ROOT::Fit::BinData, including all inherited members. Add(double x, double y)ROOT::Fit::BinData; Add(double x, double y, double ey)ROOT::Fit::BinData; Add(double x, double y, double ex, double ey)ROOT::Fit::BinData; Add(double x, double y, double ex, double eyl, double eyh)ROOT::Fit::BinData; Add(const double *x, double val)ROOT::Fit::BinData; Add(const double *x, double val, double eval)ROOT::Fit::BinData; Add(const double *x, double val, const double *ex, double eval)ROOT::Fit::BinData; Add(const double *x, double val, const double *ex, double elval, double ehval)ROOT::Fit::BinData; ROOT::Fit::FitData::Add(double x)ROOT::Fit::FitDatainline; ROOT::Fit::FitData::Add(const double *x)ROOT::Fit::FitDatainline; AddBinUpEdge(const double *xup)ROOT::Fit::BinData; Append(unsigned int newPoints, unsigned int dim=1, ErrorType err=kValueError)ROOT::Fit::BinData; ROOT::Fit::FitData::Append(unsigned int newPoints, unsigned int dim=1)ROOT::Fit::FitData; BinData(unsigned int maxpoints=0, unsigned int dim=1, ErrorType err=kValueError)ROOT::Fit::BinDataexplicit; BinData(const DataOptions &opt, unsigned int maxpoints=0, unsigned int dim=1, ErrorType err=kValueError)ROOT::Fit::BinDataexplicit; BinData(const DataOptions &opt, const DataRange &range, unsigned int maxpoints=0, unsigned int dim=1, ErrorType err=kValueError)ROOT::Fit::BinData; BinData(unsigned int n, const double *dataX, const double *val, const double *ex, const double *eval)ROOT::Fit::BinData; BinData(unsigned int n, const double *dataX, const double *dataY, const double *val, const double *ex, const double *ey, const double *eval)ROOT::Fit::BinData; BinData(unsigned int n, const double *dataX, const double *dataY, const double *dataZ, const double *val, const double *ex, const double *ey, const double *ez, const double *eval)ROOT::Fit::BinData; BinD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1BinData-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1Fit_1_1BinData-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1BinData-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::Chi2FCN< DerivFunType, ModelFunType > Member List. This is the complete list of members for ROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >, including all inherited members. BaseFCN typedefROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >; BaseFunction typedefROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >; BaseObjFunction typedefROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >; BasicFCN(const std::shared_ptr< DataType > &data, const std::shared_ptr< IModelFunction > &func)ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlineprotected; BasicFitMethodFunction(int dim, int npoint)ROOT::Math::BasicFitMethodFunction< DerivFunType >inline; Chi2FCN(const std::shared_ptr< BinData > &data, const std::shared_ptr< IModelFunction > &func, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >inline; Chi2FCN(const BinData &data, const IModelFunction &func, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >inline; Chi2FCN(const Chi2FCN &f)ROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >inline; Clone() constROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >inlinevirtual; Data() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlinevirtual; DataElement(const double *x, unsigned int i, double *g, double *h=nullptr, bool fullHessian=false) constROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >inlinevirtual; DataPtr() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inline; DoDerivative(const double *x, unsigned int icoord) constROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >inlineprivatevirtual; DoEval(const double *x) constROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >inlineprivatevirtual; fDataROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >protected; fExe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Chi2FCN-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1Fit_1_1Chi2FCN-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Chi2FCN-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::DataOptions Member List. This is the complete list of members for ROOT::Fit::DataOptions, including all inherited members. DataOptions()ROOT::Fit::DataOptionsinline; fAsymErrorsROOT::Fit::DataOptions; fBinVolumeROOT::Fit::DataOptions; fCoordErrorsROOT::Fit::DataOptions; fErrors1ROOT::Fit::DataOptions; fExpErrorsROOT::Fit::DataOptions; fIntegralROOT::Fit::DataOptions; fNormBinVolumeROOT::Fit::DataOptions; fUseEmptyROOT::Fit::DataOptions; fUseRangeROOT::Fit::DataOptions. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:15 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Fit_1_1DataOptions-members.html:51,Guid,Guide,51,doc/master/structROOT_1_1Fit_1_1DataOptions-members.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Fit_1_1DataOptions-members.html,2,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::DataRange Member List. This is the complete list of members for ROOT::Fit::DataRange, including all inherited members. AddRange(unsigned int icoord, double xmin, double xmax)ROOT::Fit::DataRange; AddRange(double xmin, double xmax)ROOT::Fit::DataRangeinline; AddRange(double xmin, double xmax, double ymin, double ymax)ROOT::Fit::DataRangeinline; AddRange(double xmin, double xmax, double ymin, double ymax, double zmin, double zmax)ROOT::Fit::DataRangeinline; CleanRangeSet(unsigned int icoord, double xmin, double xmax)ROOT::Fit::DataRangeprotected; Clear(unsigned int icoord=0)ROOT::Fit::DataRange; DataRange(unsigned int dim=1)ROOT::Fit::DataRangeinlineexplicit; DataRange(double xmin, double xmax)ROOT::Fit::DataRange; DataRange(double xmin, double xmax, double ymin, double ymax)ROOT::Fit::DataRange; DataRange(double xmin, double xmax, double ymin, double ymax, double zmin, double zmax)ROOT::Fit::DataRange; fRangesROOT::Fit::DataRangeprivate; GetInfRange(double &x1, double &x2)ROOT::Fit::DataRangeprotectedstatic; GetRange(unsigned int irange, unsigned int icoord, double &xmin, double &xmax) constROOT::Fit::DataRangeinline; GetRange(unsigned int icoord, double &xmin, double &xmax) constROOT::Fit::DataRangeinline; GetRange(double &xmin, double &xmax, unsigned int irange=0) constROOT::Fit::DataRangeinline; GetRange(double &xmin, double &xmax, double &ymin, double &ymax, unsigned int irange=0) constROOT::Fit::DataRangeinline; GetRange(double &xmin, double &xmax, double &ymin, double &ymax, double &zmin, double &zmax, unsigned int irange=0) constROOT::Fit::DataRangeinline; GetRange(double *xmin, double *xmax, unsigned int irange=0) constROOT::Fit::DataRangeinline; IsInside(double x, unsigned int icoord=0) constROOT::Fit::DataRange; IsInside(const double *x) constROOT::Fit::DataRangeinline; IsSet() constROOT::Fit::DataRangeinline; NDim() constROOT::Fit::DataRangeinlin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1DataRange-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1Fit_1_1DataRange-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1DataRange-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::FitConfig Member List. This is the complete list of members for ROOT::Fit::FitConfig, including all inherited members. CreateMinimizer()ROOT::Fit::FitConfig; CreateParamsSettings(const ROOT::Math::IParamMultiFunctionTempl< T > &func)ROOT::Fit::FitConfiginline; FitConfig(unsigned int npar=0)ROOT::Fit::FitConfig; FitConfig(const FitConfig &rhs)ROOT::Fit::FitConfig; fMinimizerOptsROOT::Fit::FitConfigprivate; fMinosErrorsROOT::Fit::FitConfigprivate; fMinosParamsROOT::Fit::FitConfigprivate; fNormErrorsROOT::Fit::FitConfigprivate; fParabErrorsROOT::Fit::FitConfigprivate; fSettingsROOT::Fit::FitConfigprivate; fUpdateAfterFitROOT::Fit::FitConfigprivate; fWeightCorrROOT::Fit::FitConfigprivate; MinimizerAlgoType() constROOT::Fit::FitConfiginline; MinimizerName() constROOT::Fit::FitConfig; MinimizerOptions()ROOT::Fit::FitConfiginline; MinimizerType() constROOT::Fit::FitConfiginline; MinosErrors() constROOT::Fit::FitConfiginline; MinosParams() constROOT::Fit::FitConfiginline; NormalizeErrors() constROOT::Fit::FitConfiginline; NPar() constROOT::Fit::FitConfiginline; operator=(const FitConfig &rhs)ROOT::Fit::FitConfig; ParabErrors() constROOT::Fit::FitConfiginline; ParamsSettings() constROOT::Fit::FitConfiginline; ParamsSettings()ROOT::Fit::FitConfiginline; ParamsValues() constROOT::Fit::FitConfig; ParSettings(unsigned int i) constROOT::Fit::FitConfiginline; ParSettings(unsigned int i)ROOT::Fit::FitConfiginline; SetDefaultMinimizer(const char *type, const char *algo=nullptr)ROOT::Fit::FitConfigstatic; SetFromFitResult(const FitResult &rhs)ROOT::Fit::FitConfig; SetMinimizer(const char *type, const char *algo=nullptr)ROOT::Fit::FitConfiginline; SetMinimizerOptions(const ROOT::Math::MinimizerOptions &minopt)ROOT::Fit::FitConfig; SetMinosErrors(bool on=true)ROOT::Fit::FitConfiginline; SetMinosErrors(const std::vector< unsigned int > &paramInd)ROOT::Fit::FitConfiginline; Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitConfig-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1Fit_1_1FitConfig-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitConfig-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::FitResult Member List. This is the complete list of members for ROOT::Fit::FitResult, including all inherited members. Chi2() constROOT::Fit::FitResultinline; Contour(unsigned int ipar, unsigned int jpar, unsigned int &npoints, double *pntsx, double *pntsy, double confLevel=0.683)ROOT::Fit::FitResult; Correlation(unsigned int i, unsigned int j) constROOT::Fit::FitResultinline; CovMatrix(unsigned int i, unsigned int j) constROOT::Fit::FitResultinline; CovMatrixStatus() constROOT::Fit::FitResultinline; Edm() constROOT::Fit::FitResultinline; Error(unsigned int i) constROOT::Fit::FitResultinline; Errors() constROOT::Fit::FitResultinline; fBoundParamsROOT::Fit::FitResultprotected; fChi2ROOT::Fit::FitResultprotected; fCovMatrixROOT::Fit::FitResultprotected; fCovStatusROOT::Fit::FitResultprotected; fEdmROOT::Fit::FitResultprotected; fErrorsROOT::Fit::FitResultprotected; fFitDataROOT::Fit::FitResultprotected; fFitFuncROOT::Fit::FitResultprotected; fFixedParamsROOT::Fit::FitResultprotected; fGlobalCCROOT::Fit::FitResultprotected; FillResult(const std::shared_ptr< ROOT::Math::Minimizer > &min, const FitConfig &fconfig, const std::shared_ptr< IModelFunction > &f, bool isValid, unsigned int sizeOfData=0, int fitType=1, const ROOT::Math::IMultiGenFunction *chi2func=nullptr, unsigned int ncalls=0)ROOT::Fit::FitResult; FitResult()ROOT::Fit::FitResult; FitResult(const FitConfig &fconfig)ROOT::Fit::FitResult; FittedBinData() constROOT::Fit::FitResult; FittedFunction() constROOT::Fit::FitResultinline; FitterROOT::Fit::FitResultfriend; fMinimizerROOT::Fit::FitResultprotected; fMinimTypeROOT::Fit::FitResultprotected; fMinosErrorsROOT::Fit::FitResultprotected; fNCallsROOT::Fit::FitResultprotected; fNdfROOT::Fit::FitResultprotected; fNFreeROOT::Fit::FitResultprotected; fNormalizedROOT::Fit::FitResultprotected; fObjFuncROOT::Fit::FitResultprotected; fParamBoundsROOT::Fit::FitRes",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitResult-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1Fit_1_1FitResult-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitResult-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::Fitter Member List. This is the complete list of members for ROOT::Fit::Fitter, including all inherited members. ApplyWeightCorrection(const ROOT::Math::IMultiGenFunction &loglw2, bool minimizeW2L=false)ROOT::Fit::Fitter; BaseFunc typedefROOT::Fit::Fitter; BaseGradFunc typedefROOT::Fit::Fitter; CalculateHessErrors()ROOT::Fit::Fitter; CalculateMinosErrors()ROOT::Fit::Fitter; Config() constROOT::Fit::Fitterinline; Config()ROOT::Fit::Fitterinline; DoBinnedLikelihoodFit(bool extended=true, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterprotected; DoInitMinimizer()ROOT::Fit::Fitterprotected; DoLeastSquareFit(const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterprotected; DoLinearFit()ROOT::Fit::Fitterprotected; DoMinimization(std::unique_ptr< ObjFunc_t > f, const ROOT::Math::IMultiGenFunction *chifunc=nullptr)ROOT::Fit::Fitterprotected; DoMinimization(const ROOT::Math::IMultiGenFunction *chifunc=nullptr)ROOT::Fit::Fitterprotected; DoSetFCN(bool useExtFCN, const ROOT::Math::IMultiGenFunction &fcn, const double *params, unsigned int dataSize, int fitType)ROOT::Fit::Fitterprotected; DoUnbinnedLikelihoodFit(bool extended=false, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterprotected; DoUpdateFitConfig()ROOT::Fit::Fitterprotected; DoUpdateMinimizerOptions(bool canDifferentMinim=true)ROOT::Fit::Fitterprotected; DoWeightMinimization(std::unique_ptr< ObjFunc_t > f, const ROOT::Math::IMultiGenFunction *chifunc=nullptr)ROOT::Fit::Fitterprotected; EvalFCN()ROOT::Fit::Fitter; ExamineFCN()ROOT::Fit::Fitterprotected; fBinFitROOT::Fit::Fitterprivate; fConfigROOT::Fit::Fitterprivate; fDataROOT::Fit::Fitterprivate; fDataSizeROOT::Fit::Fitterprivate; fExtObjFunctionROOT::Fit::Fitterprivate; fFitTypeROOT::Fit::Fitterprivate; fFuncR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1Fit_1_1Fitter-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType > Member List. This is the complete list of members for ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >, including all inherited members. BaseFCN typedefROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >; BaseFunction typedefROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >; BaseObjFunction typedefROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >; BasicFCN(const std::shared_ptr< DataType > &data, const std::shared_ptr< IModelFunction > &func)ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlineprotected; BasicFitMethodFunction(int dim, int npoint)ROOT::Math::BasicFitMethodFunction< DerivFunType >inline; Clone() constROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inlinevirtual; Data() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlinevirtual; DataElement(const double *x, unsigned int i, double *g, double *h=nullptr, bool fullHessian=false) constROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inlinevirtual; DataPtr() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inline; DoDerivative(const double *x, unsigned int icoord) constROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inlineprivatevirtual; DoEval(const double *x) constROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inlineprivatevirtual; fDataROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >protected; fExecutionPolicyROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >private; fFuncROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >protected; fGradROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >mutableprivate; fIsExtendedROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >private; fNCallsROOT::Math::BasicFitMethodFunction< DerivFunType >mutableprivate; fNDimROOT::Math::BasicFitMethodFunction< DerivFunType >",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::ParameterSettings Member List. This is the complete list of members for ROOT::Fit::ParameterSettings, including all inherited members. fFixROOT::Fit::ParameterSettingsprivate; fHasLowerLimitROOT::Fit::ParameterSettingsprivate; fHasUpperLimitROOT::Fit::ParameterSettingsprivate; Fix()ROOT::Fit::ParameterSettingsinline; fLowerLimitROOT::Fit::ParameterSettingsprivate; fNameROOT::Fit::ParameterSettingsprivate; fStepSizeROOT::Fit::ParameterSettingsprivate; fUpperLimitROOT::Fit::ParameterSettingsprivate; fValueROOT::Fit::ParameterSettingsprivate; HasLowerLimit() constROOT::Fit::ParameterSettingsinline; HasUpperLimit() constROOT::Fit::ParameterSettingsinline; IsBound() constROOT::Fit::ParameterSettingsinline; IsDoubleBound() constROOT::Fit::ParameterSettingsinline; IsFixed() constROOT::Fit::ParameterSettingsinline; LowerLimit() constROOT::Fit::ParameterSettingsinline; Name() constROOT::Fit::ParameterSettingsinline; ParameterSettings()ROOT::Fit::ParameterSettingsinline; ParameterSettings(const std::string &name, double val, double err)ROOT::Fit::ParameterSettingsinline; ParameterSettings(const std::string &name, double val, double err, double min, double max)ROOT::Fit::ParameterSettingsinline; ParameterSettings(const std::string &name, double val)ROOT::Fit::ParameterSettingsinline; Release()ROOT::Fit::ParameterSettingsinline; RemoveLimits()ROOT::Fit::ParameterSettingsinline; Set(const std::string &name, double value, double step)ROOT::Fit::ParameterSettingsinline; Set(const std::string &name, double value, double step, double lower, double upper)ROOT::Fit::ParameterSettingsinline; Set(const std::string &name, double value)ROOT::Fit::ParameterSettingsinline; SetLimits(double low, double up)ROOT::Fit::ParameterSettings; SetLowerLimit(double low)ROOT::Fit::ParameterSettingsinline; SetName(const std::string &name)ROOT::Fit::ParameterSettingsinline; SetStepSize(double e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1ParameterSettings-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1Fit_1_1ParameterSettings-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1ParameterSettings-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType > Member List. This is the complete list of members for ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >, including all inherited members. BaseFCN typedefROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >; BaseFunction typedefROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >; BaseObjFunction typedefROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >; BasicFCN(const std::shared_ptr< DataType > &data, const std::shared_ptr< IModelFunction > &func)ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlineprotected; BasicFitMethodFunction(int dim, int npoint)ROOT::Math::BasicFitMethodFunction< DerivFunType >inline; Clone() constROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >inlinevirtual; Data() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlinevirtual; DataElement(const double *x, unsigned int i, double *g, double *h, bool fullHessian) constROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >inlinevirtual; DataPtr() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inline; DoDerivative(const double *x, unsigned int icoord) constROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >inlineprivatevirtual; DoEval(const double *x) constROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >inlineprivatevirtual; fDataROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >protected; fExecutionPolicyROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >private; fFuncROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >protected; fGradROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >mutableprivate; fIsExtendedROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >private; fNCallsROOT::Math::BasicFitMethodFunction< DerivFunType >mutableprivate; fNDimROOT::Math::Basi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1PoissonLikelihoodFCN-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1Fit_1_1PoissonLikelihoodFCN-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1PoissonLikelihoodFCN-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::UnBinData Member List. This is the complete list of members for ROOT::Fit::UnBinData, including all inherited members. Add(double x)ROOT::Fit::UnBinDatainline; Add(double x, double y)ROOT::Fit::UnBinDatainline; Add(double x, double y, double z)ROOT::Fit::UnBinDatainline; Add(const double *x)ROOT::Fit::UnBinDatainline; Add(const double *x, double w)ROOT::Fit::UnBinDatainline; Append(unsigned int newPoints, unsigned int dim=1, bool isWeighted=false)ROOT::Fit::UnBinDatainline; ROOT::Fit::FitData::Append(unsigned int newPoints, unsigned int dim=1)ROOT::Fit::FitData; Coords(unsigned int ipoint) constROOT::Fit::FitDatainline; fCoordsROOT::Fit::FitDataprivate; fCoordsPtrROOT::Fit::FitDataprivate; fDimROOT::Fit::FitDataprotected; FitData(unsigned int maxpoints=0, unsigned int dim=1)ROOT::Fit::FitDataexplicit; FitData(const DataOptions &opt, unsigned int maxpoints=0, unsigned int dim=1)ROOT::Fit::FitDataexplicit; FitData(const DataRange &range, unsigned int maxpoints=0, unsigned int dim=1)ROOT::Fit::FitDataexplicit; FitData(const DataOptions &opt, const DataRange &range, unsigned int maxpoints=0, unsigned int dim=1)ROOT::Fit::FitData; FitData(unsigned int n, const double *dataX)ROOT::Fit::FitData; FitData(unsigned int n, const double *dataX, const double *dataY)ROOT::Fit::FitData; FitData(unsigned int n, const double *dataX, const double *dataY, const double *dataZ)ROOT::Fit::FitData; FitData(const DataRange &range, unsigned int maxpoints, const double *dataX)ROOT::Fit::FitData; FitData(const DataRange &range, unsigned int maxpoints, const double *dataX, const double *dataY)ROOT::Fit::FitData; FitData(const DataRange &range, unsigned int maxpoints, const double *dataX, const double *dataY, const double *dataZ)ROOT::Fit::FitData; FitData(unsigned int n, unsigned int dim, Iterator dataItr)ROOT::Fit::FitDatainline; FitData(const DataRange &range, unsigned int maxpoint",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1UnBinData-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1Fit_1_1UnBinData-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1UnBinData-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Math::Minimizer Member List. This is the complete list of members for ROOT::Math::Minimizer, including all inherited members. Clear()ROOT::Math::Minimizerinlinevirtual; Contour(unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj)ROOT::Math::Minimizervirtual; Correlation(unsigned int i, unsigned int j) constROOT::Math::Minimizerinlinevirtual; CovMatrix(unsigned int ivar, unsigned int jvar) constROOT::Math::Minimizervirtual; CovMatrixStatus() constROOT::Math::Minimizerinlinevirtual; Edm() constROOT::Math::Minimizerinlinevirtual; ErrorDef() constROOT::Math::Minimizerinline; Errors() constROOT::Math::Minimizerinlinevirtual; FixVariable(unsigned int ivar)ROOT::Math::Minimizervirtual; fOptionsROOT::Math::Minimizerprotected; fStatusROOT::Math::Minimizerprotected; fValidErrorROOT::Math::Minimizerprotected; GetCovMatrix(double *covMat) constROOT::Math::Minimizervirtual; GetHessianMatrix(double *hMat) constROOT::Math::Minimizervirtual; GetMinosError(unsigned int ivar, double &errLow, double &errUp, int option=0)ROOT::Math::Minimizervirtual; GetVariableSettings(unsigned int ivar, ROOT::Fit::ParameterSettings &pars) constROOT::Math::Minimizervirtual; GlobalCC(unsigned int ivar) constROOT::Math::Minimizervirtual; Hesse()ROOT::Math::Minimizervirtual; IsFixedVariable(unsigned int ivar) constROOT::Math::Minimizervirtual; IsValidError() constROOT::Math::Minimizerinline; MaxFunctionCalls() constROOT::Math::Minimizerinline; MaxIterations() constROOT::Math::Minimizerinline; MinGradient() constROOT::Math::Minimizerinlinevirtual; Minimize()=0ROOT::Math::Minimizerpure virtual; Minimizer()ROOT::Math::Minimizerinline; Minimizer(Minimizer const &)=deleteROOT::Math::Minimizer; Minimizer(Minimizer &&)=deleteROOT::Math::Minimizer; MinosStatus() constROOT::Math::Minimizerinlinevirtual; MinValue() const =0ROOT::Math::Minimizerpure virtual; NCalls() constROOT::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1Math_1_1Minimizer-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::RCompressionSetting::EAlgorithm Member List. This is the complete list of members for ROOT::RCompressionSetting::EAlgorithm, including all inherited members. EValues enum nameROOT::RCompressionSetting::EAlgorithm; kInherit enum valueROOT::RCompressionSetting::EAlgorithm; kLZ4 enum valueROOT::RCompressionSetting::EAlgorithm; kLZMA enum valueROOT::RCompressionSetting::EAlgorithm; kOldCompressionAlgo enum valueROOT::RCompressionSetting::EAlgorithm; kUndefined enum valueROOT::RCompressionSetting::EAlgorithm; kUseGlobal enum valueROOT::RCompressionSetting::EAlgorithm; kZLIB enum valueROOT::RCompressionSetting::EAlgorithm; kZSTD enum valueROOT::RCompressionSetting::EAlgorithm. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:58 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm-members.html:51,Guid,Guide,51,doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm-members.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm-members.html,2,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::RDF::RInterface< Proxied, DataSource > Member List. This is the complete list of members for ROOT::RDF::RInterface< Proxied, DataSource >, including all inherited members. AddDefaultColumns()ROOT::RDF::RInterfaceBaseprotected; Aggregate(AccFun aggregator, MergeFun merger, std::string_view columnName, const U &aggIdentity)ROOT::RDF::RInterface< Proxied, DataSource >inline; Aggregate(AccFun aggregator, MergeFun merger, std::string_view columnName="""")ROOT::RDF::RInterface< Proxied, DataSource >inline; Alias(std::string_view alias, std::string_view columnName)ROOT::RDF::RInterface< Proxied, DataSource >inline; Book(Helper &&helper, const ColumnNames_t &columns={})ROOT::RDF::RInterface< Proxied, DataSource >inline; Cache(const ColumnNames_t &columnList)ROOT::RDF::RInterface< Proxied, DataSource >inline; Cache(const ColumnNames_t &columnList)ROOT::RDF::RInterface< Proxied, DataSource >inline; Cache(std::string_view columnNameRegexp="""")ROOT::RDF::RInterface< Proxied, DataSource >inline; Cache(std::initializer_list< std::string > columnList)ROOT::RDF::RInterface< Proxied, DataSource >inline; CacheImpl(const ColumnNames_t &columnList, std::index_sequence< S... >)ROOT::RDF::RInterface< Proxied, DataSource >inlineprivate; CallCreateActionWithoutColsIfPossible(const std::shared_ptr< ActionResultType > &resPtr, const std::shared_ptr< Helper > &hPtr, TTraits::TypeList< RDFDetail::RInferredType >) -> decltype(hPtr->Exec(0u), RResultPtr< ActionResultType >{})ROOT::RDF::RInterface< Proxied, DataSource >inlineprivate; CallCreateActionWithoutColsIfPossible(const std::shared_ptr< ActionResultType > &, const std::shared_ptr< Helper > &, Others...)ROOT::RDF::RInterface< Proxied, DataSource >inlineprivate; CheckAndFillDSColumns(ColumnNames_t validCols, TTraits::TypeList< ColumnTypes... > typeList)ROOT::RDF::RInterfaceBaseinlineprotected; CheckIMTDisabled(std::string_view callerName)R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1RDF_1_1RInterface-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::RDataFrame Member List. This is the complete list of members for ROOT::RDataFrame, including all inherited members. AddDefaultColumns()ROOT::RDF::RInterfaceBaseprotected; Aggregate(AccFun aggregator, MergeFun merger, std::string_view columnName, const U &aggIdentity)ROOT::RDF::RInterface< RDFDetail::RLoopManager >inline; Aggregate(AccFun aggregator, MergeFun merger, std::string_view columnName="""")ROOT::RDF::RInterface< RDFDetail::RLoopManager >inline; Alias(std::string_view alias, std::string_view columnName)ROOT::RDF::RInterface< RDFDetail::RLoopManager >inline; Book(Helper &&helper, const ColumnNames_t &columns={})ROOT::RDF::RInterface< RDFDetail::RLoopManager >inline; Cache(const ColumnNames_t &columnList)ROOT::RDF::RInterface< RDFDetail::RLoopManager >inline; Cache(const ColumnNames_t &columnList)ROOT::RDF::RInterface< RDFDetail::RLoopManager >inline; Cache(std::string_view columnNameRegexp="""")ROOT::RDF::RInterface< RDFDetail::RLoopManager >inline; Cache(std::initializer_list< std::string > columnList)ROOT::RDF::RInterface< RDFDetail::RLoopManager >inline; CacheImpl(const ColumnNames_t &columnList, std::index_sequence< S... >)ROOT::RDF::RInterface< RDFDetail::RLoopManager >inlineprivate; CallCreateActionWithoutColsIfPossible(const std::shared_ptr< ActionResultType > &resPtr, const std::shared_ptr< Helper > &hPtr, TTraits::TypeList< RDFDetail::RInferredType >) -> decltype(hPtr->Exec(0u), RResultPtr< ActionResultType >{})ROOT::RDF::RInterface< RDFDetail::RLoopManager >inlineprivate; CallCreateActionWithoutColsIfPossible(const std::shared_ptr< ActionResultType > &, const std::shared_ptr< Helper > &, Others...)ROOT::RDF::RInterface< RDFDetail::RLoopManager >inlineprivate; CheckAndFillDSColumns(ColumnNames_t validCols, TTraits::TypeList< ColumnTypes... > typeList)ROOT::RDF::RInterfaceBaseinlineprotected; CheckIMTDisabled(std::string_view callerName)ROOT::RDF::RI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDataFrame-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1RDataFrame-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDataFrame-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::TSchemaRule Member List. This is the complete list of members for ROOT::TSchemaRule, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AsString(TString &out, const char *options="""") constROOT::TSchemaRule; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()ROOT::TSchemaRulestatic; Class_Name()ROOT::TSchemaRulestatic; Class_Version()ROOT::TSchemaRuleinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""") overrideROOT::TSchemaRulevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Conflicts(const TSchemaRule *rule) constROOT::TSchemaRule; Copy(TObject &object) constTObjectvirtual; DeclFileName()ROOT::TSchemaRuleinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fAttributesROOT::TSchemaRuleprivate; fBitsTObjectprivate; fChecksumROOT::TSchemaRuleprivate; fChecksumVectROOT::TSchemaRulemutableprivate; fCodeROOT::TSchemaRuleprivate; fEmbedROOT::TSchemaRuleprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectpr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1TSchemaRule-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1TSchemaRule-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1TSchemaRule-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::VecOps::RVec< T > Member List. This is the complete list of members for ROOT::VecOps::RVec< T >, including all inherited members. append(in_iter in_start, in_iter in_end)ROOT::Detail::VecOps::RVecImpl< T >inline; append(size_type NumInputs, const T &Elt)ROOT::Detail::VecOps::RVecImpl< T >inline; append(std::initializer_list< T > IL)ROOT::Detail::VecOps::RVecImpl< T >inline; assign(size_type NumElts, const T &Elt)ROOT::Detail::VecOps::RVecImpl< T >inline; assign(in_iter in_start, in_iter in_end)ROOT::Detail::VecOps::RVecImpl< T >inline; assign(std::initializer_list< T > IL)ROOT::Detail::VecOps::RVecImpl< T >inline; at(size_type pos)ROOT::VecOps::RVecN< T, Internal::VecOps::RVecInlineStorageSize< T >::value >inline; at(size_type pos) constROOT::VecOps::RVecN< T, Internal::VecOps::RVecInlineStorageSize< T >::value >inline; at(size_type pos, value_type fallback)ROOT::VecOps::RVecN< T, Internal::VecOps::RVecInlineStorageSize< T >::value >inline; at(size_type pos, value_type fallback) constROOT::VecOps::RVecN< T, Internal::VecOps::RVecInlineStorageSize< T >::value >inline; back()ROOT::Internal::VecOps::SmallVectorTemplateCommon< T >inline; back() constROOT::Internal::VecOps::SmallVectorTemplateCommon< T >inline; Base typedefROOT::Internal::VecOps::SmallVectorTemplateCommon< T >private; begin() noexceptROOT::Internal::VecOps::SmallVectorTemplateCommon< T >inline; begin() const noexceptROOT::Internal::VecOps::SmallVectorTemplateCommon< T >inline; capacity() const noexceptROOT::Internal::VecOps::SmallVectorTemplateCommon< T >inline; capacity_in_bytes() constROOT::Internal::VecOps::SmallVectorTemplateCommon< T >inline; cbegin() const noexceptROOT::Internal::VecOps::SmallVectorTemplateCommon< T >inline; cend() const noexceptROOT::Internal::VecOps::SmallVectorTemplateCommon< T >inline; clear()ROOT::Detail::VecOps::RVecImpl< T >inline; const_iterator typedefROOT::Detail::Ve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec-members.html:51,Guid,Guide,51,doc/master/classROOT_1_1VecOps_1_1RVec-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RooAbsPdf Member List. This is the complete list of members for RooAbsPdf, including all inherited members. _boolAttribRooAbsArgprotected; _boolAttribTransientRooAbsArgprotected; _cacheListRooAbsArgprotected; _clientListRooAbsArgprotected; _clientListShapeRooAbsArgprotected; _clientListValueRooAbsArgprotected; _dataTokenRooAbsArgprotected; _DEBUG_getVal(const RooArgSet *normalisationSet) constRooAbsRealprivate; _deleteWatchRooAbsArgprotected; _eocacheRooAbsArgmutableprotected; _errorCountRooAbsPdfmutableprotected; _fastRooAbsArgmutableprotected; _forceNumIntRooAbsRealprotected; _globalSelectCompRooAbsRealprotectedstatic; _hideOffsetRooAbsRealprotectedstatic; _inhibitDirtyRooAbsArgprotectedstatic; _isConstantRooAbsArgprotected; _labelRooAbsRealprotected; _lastNormSetIdRooAbsRealmutableprotected; _localNoInhibitDirtyRooAbsArgmutableprotected; _mywsRooAbsArgmutableprotected; _nameLengthRooPrintableprotectedstatic; _namePtrRooAbsArgmutableprotected; _negCountRooAbsPdfmutableprotected; _normRooAbsPdfmutableprotected; _normMgrRooAbsPdfmutableprotected; _normRangeRooAbsPdfprotected; _normRangeOverrideRooAbsPdfprotectedstatic; _normSetRooAbsPdfmutableprotected; _normSetIdRooAbsPdfmutableprivate; _operModeRooAbsArgmutableprotected; _ownedComponentsRooAbsArgprotected; _plotBinsRooAbsRealprotected; _plotMaxRooAbsRealprotected; _plotMinRooAbsRealprotected; _prohibitServerRedirectRooAbsArgmutableprotected; _proxyListRooAbsArgprotected; _proxyListCacheRooAbsArgprotected; _rawValueRooAbsPdfmutableprotected; _selectCompRooAbsPdfprotected; _serverListRooAbsArgprotected; _shapeDirtyRooAbsArgmutableprotected; _specGeneratorConfigRooAbsPdfprotected; _specIntegratorConfigRooAbsRealprotected; _stringAttribRooAbsArgprotected; _traceCountRooAbsPdfmutableprotected; _treeReadBufferRooAbsRealprotected; _unitRooAbsRealprotected; _valueRooAbsRealmutableprotected; _valueDirtyRooAbsArgmutableprote",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf-members.html:51,Guid,Guide,51,doc/master/classRooAbsPdf-members.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TApplication Member List. This is the complete list of members for TApplication, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; ApplicationName() constTApplicationinlinevirtual; AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; Argc() constTApplicationinline; Argv() constTApplicationinline; Argv(Int_t index) constTApplication; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; Browse(TBrowser *b)TObjectvirtual; ChangedBy(const char *method)TQObjectinlinevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; CheckedHash()TObjectinline; Class()TApplicationstatic; Class_Name()TApplicationstatic; Class_Version()TApplicationinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; ClearInputFiles()TApplication; Clone(const char *newname="""") constTObjectvirtual; Close(TApplication *app)TApplicationprotectedstatic; CollectClassSignalLists(TList &list, TClass *cls)TQObject; Compare(const TObject *obj) constTObjectvirtual; CompressName(const char *method_name)TQObjectprotectedstatic; Connect(const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObject; Connect(TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connect(const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connected(const char *)TQObjectinlinevirtual; ConnectToClass(TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; ConnectToClass(const char *sender_class, const char *signal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplication-members.html:51,Guid,Guide,51,doc/master/classTApplication-members.html,https://root.cern,https://root.cern/doc/master/classTApplication-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TArrow Member List. This is the complete list of members for TArrow, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TArrowstatic; Class_Name()TArrowstatic; Class_Version()TArrowinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &arrow) const overrideTArrowvirtual; TLine::TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TArrowinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTLinevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTArrowvirtual; DrawArrow(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Float_t arrowsize=0, Option_t *option="""")TArrowvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TLinevirtual; DrawLineNDC(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TLinevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTLinevirtual; fAngleTArrowprotected; fArrowSiz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTArrow-members.html:51,Guid,Guide,51,doc/master/classTArrow-members.html,https://root.cern,https://root.cern/doc/master/classTArrow-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttAxis Member List. This is the complete list of members for TAttAxis, including all inherited members. Class()TAttAxisstatic; Class_Name()TAttAxisstatic; Class_Version()TAttAxisinlinestatic; Copy(TAttAxis &attaxis) constTAttAxis; DeclFileName()TAttAxisinlinestatic; fAxisColorTAttAxisprotected; fLabelColorTAttAxisprotected; fLabelFontTAttAxisprotected; fLabelOffsetTAttAxisprotected; fLabelSizeTAttAxisprotected; fNdivisionsTAttAxisprotected; fTickLengthTAttAxisprotected; fTitleColorTAttAxisprotected; fTitleFontTAttAxisprotected; fTitleOffsetTAttAxisprotected; fTitleSizeTAttAxisprotected; GetAxisColor() constTAttAxisinlinevirtual; GetLabelColor() constTAttAxisinlinevirtual; GetLabelFont() constTAttAxisinlinevirtual; GetLabelOffset() constTAttAxisinlinevirtual; GetLabelSize() constTAttAxisinlinevirtual; GetMaxDigits() constTAttAxisinlinevirtual; GetNdivisions() constTAttAxisinlinevirtual; GetTickLength() constTAttAxisinlinevirtual; GetTitleColor() constTAttAxisinlinevirtual; GetTitleFont() constTAttAxisinlinevirtual; GetTitleOffset() constTAttAxisinlinevirtual; GetTitleSize() constTAttAxisinlinevirtual; IsA() constTAttAxisinlinevirtual; ResetAttAxis(Option_t *option="""")TAttAxisvirtual; SaveAttributes(std::ostream &out, const char *name, const char *subname)TAttAxisvirtual; SetAxisColor(Color_t color=1, Float_t alpha=1.)TAttAxisvirtual; SetLabelColor(Color_t color=1, Float_t alpha=1.)TAttAxisvirtual; SetLabelFont(Style_t font=62)TAttAxisvirtual; SetLabelOffset(Float_t offset=0.005)TAttAxisvirtual; SetLabelSize(Float_t size=0.04)TAttAxisvirtual; SetMaxDigits(Int_t maxDigits=5)TAttAxisvirtual; SetNdivisions(Int_t n=510, Bool_t optim=kTRUE)TAttAxisvirtual; SetNdivisions(Int_t n1, Int_t n2, Int_t n3, Bool_t optim=kTRUE)TAttAxisvirtual; SetTickLength(Float_t length=0.03)TAttAxisvirtual; SetTickSize(Float_t size=0.03)TAttAxisinlinevirtual; SetTitleColor(Color_t color=1)TAttA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttAxis-members.html:51,Guid,Guide,51,doc/master/classTAttAxis-members.html,https://root.cern,https://root.cern/doc/master/classTAttAxis-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttFill Member List. This is the complete list of members for TAttFill, including all inherited members. Class()TAttFillstatic; Class_Name()TAttFillstatic; Class_Version()TAttFillinlinestatic; Copy(TAttFill &attfill) constTAttFill; DeclFileName()TAttFillinlinestatic; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; GetFillColor() constTAttFillinlinevirtual; GetFillStyle() constTAttFillinlinevirtual; IsA() constTAttFillinlinevirtual; IsTransparent() constTAttFillinlinevirtual; Modify()TAttFillvirtual; ResetAttFill(Option_t *option="""")TAttFillvirtual; SaveFillAttributes(std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001)TAttFillvirtual; SetFillAttributes()TAttFillvirtual; SetFillColor(Color_t fcolor)TAttFillinlinevirtual; SetFillColorAlpha(Color_t fcolor, Float_t falpha)TAttFillvirtual; SetFillStyle(Style_t fstyle)TAttFillinlinevirtual; Streamer(TBuffer &)TAttFillvirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TAttFillinline; TAttFill()TAttFill; TAttFill(Color_t fcolor, Style_t fstyle)TAttFill; ~TAttFill()TAttFillvirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttFill-members.html:51,Guid,Guide,51,doc/master/classTAttFill-members.html,https://root.cern,https://root.cern/doc/master/classTAttFill-members.html,2,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttLine Member List. This is the complete list of members for TAttLine, including all inherited members. Class()TAttLinestatic; Class_Name()TAttLinestatic; Class_Version()TAttLineinlinestatic; Copy(TAttLine &attline) constTAttLine; DeclFileName()TAttLineinlinestatic; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; fLineColorTAttLineprotected; fLineStyleTAttLineprotected; fLineWidthTAttLineprotected; GetLineColor() constTAttLineinlinevirtual; GetLineStyle() constTAttLineinlinevirtual; GetLineWidth() constTAttLineinlinevirtual; IsA() constTAttLineinlinevirtual; Modify()TAttLinevirtual; ResetAttLine(Option_t *option="""")TAttLinevirtual; SaveLineAttributes(std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1)TAttLinevirtual; SetLineAttributes()TAttLinevirtual; SetLineColor(Color_t lcolor)TAttLineinlinevirtual; SetLineColorAlpha(Color_t lcolor, Float_t lalpha)TAttLinevirtual; SetLineStyle(Style_t lstyle)TAttLineinlinevirtual; SetLineWidth(Width_t lwidth)TAttLineinlinevirtual; Streamer(TBuffer &)TAttLinevirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TAttLineinline; TAttLine()TAttLine; TAttLine(Color_t lcolor, Style_t lstyle, Width_t lwidth)TAttLine; ~TAttLine()TAttLinevirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttLine-members.html:51,Guid,Guide,51,doc/master/classTAttLine-members.html,https://root.cern,https://root.cern/doc/master/classTAttLine-members.html,2,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttMarker Member List. This is the complete list of members for TAttMarker, including all inherited members. Class()TAttMarkerstatic; Class_Name()TAttMarkerstatic; Class_Version()TAttMarkerinlinestatic; Copy(TAttMarker &attmarker) constTAttMarker; DeclFileName()TAttMarkerinlinestatic; fMarkerColorTAttMarkerprotected; fMarkerSizeTAttMarkerprotected; fMarkerStyleTAttMarkerprotected; GetMarkerColor() constTAttMarkerinlinevirtual; GetMarkerLineWidth(Style_t style)TAttMarkerstatic; GetMarkerSize() constTAttMarkerinlinevirtual; GetMarkerStyle() constTAttMarkerinlinevirtual; GetMarkerStyleBase(Style_t style)TAttMarkerstatic; IsA() constTAttMarkerinlinevirtual; Modify()TAttMarkervirtual; ResetAttMarker(Option_t *toption="""")TAttMarkervirtual; SaveMarkerAttributes(std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1)TAttMarkervirtual; SetMarkerAttributes()TAttMarkervirtual; SetMarkerColor(Color_t mcolor=1)TAttMarkerinlinevirtual; SetMarkerColorAlpha(Color_t mcolor, Float_t malpha)TAttMarkervirtual; SetMarkerSize(Size_t msize=1)TAttMarkerinlinevirtual; SetMarkerStyle(Style_t mstyle=1)TAttMarkerinlinevirtual; Streamer(TBuffer &)TAttMarkervirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TAttMarkerinline; TAttMarker()TAttMarker; TAttMarker(Color_t color, Style_t style, Size_t msize)TAttMarker; ~TAttMarker()TAttMarkervirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttMarker-members.html:51,Guid,Guide,51,doc/master/classTAttMarker-members.html,https://root.cern,https://root.cern/doc/master/classTAttMarker-members.html,2,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttText Member List. This is the complete list of members for TAttText, including all inherited members. Class()TAttTextstatic; Class_Name()TAttTextstatic; Class_Version()TAttTextinlinestatic; Copy(TAttText &atttext) constTAttText; DeclFileName()TAttTextinlinestatic; fTextAlignTAttTextprotected; fTextAngleTAttTextprotected; fTextColorTAttTextprotected; fTextFontTAttTextprotected; fTextSizeTAttTextprotected; GetTextAlign() constTAttTextinlinevirtual; GetTextAngle() constTAttTextinlinevirtual; GetTextColor() constTAttTextinlinevirtual; GetTextFont() constTAttTextinlinevirtual; GetTextSize() constTAttTextinlinevirtual; GetTextSizePercent(Float_t size)TAttTextvirtual; IsA() constTAttTextinlinevirtual; Modify()TAttTextvirtual; ResetAttText(Option_t *toption="""")TAttTextvirtual; SaveTextAttributes(std::ostream &out, const char *name, Int_t alidef=12, Float_t angdef=0, Int_t coldef=1, Int_t fondef=61, Float_t sizdef=1)TAttTextvirtual; SetTextAlign(Short_t align=11)TAttTextinlinevirtual; SetTextAngle(Float_t tangle=0)TAttTextinlinevirtual; SetTextAttributes()TAttTextvirtual; SetTextColor(Color_t tcolor=1)TAttTextinlinevirtual; SetTextColorAlpha(Color_t tcolor, Float_t talpha)TAttTextvirtual; SetTextFont(Font_t tfont=62)TAttTextinlinevirtual; SetTextSize(Float_t tsize=1)TAttTextinlinevirtual; SetTextSizePixels(Int_t npixels)TAttTextvirtual; Streamer(TBuffer &)TAttTextvirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TAttTextinline; TAttText()TAttText; TAttText(Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize)TAttText; ~TAttText()TAttTextvirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttText-members.html:51,Guid,Guide,51,doc/master/classTAttText-members.html,https://root.cern,https://root.cern/doc/master/classTAttText-members.html,2,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAxis Member List. This is the complete list of members for TAxis, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CanBeAlphanumeric()TAxisinline; CanExtend() constTAxisinline; CenterLabels(Bool_t center=kTRUE)TAxisinline; CenterTitle(Bool_t center=kTRUE)TAxisinline; ChangeLabel(Int_t labNum=0, Double_t labAngle=-1., Double_t labSize=-1., Int_t labAlign=-1, Int_t labColor=-1, Int_t labFont=-1, const TString &labText="""")TAxis; ChangeLabelByValue(Double_t labValue, Double_t labAngle=-1., Double_t labSize=-1., Int_t labAlign=-1, Int_t labColor=-1, Int_t labFont=-1, const TString &labText="""")TAxis; CheckedHash()TObjectinline; ChooseTimeFormat(Double_t axislength=0)TAxis; Class()TAxisstatic; Class_Name()TAxisstatic; Class_Version()TAxisinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &axis) const overrideTAxisvirtual; TAttAxis::Copy(TAttAxis &attaxis) constTAttAxis; DeclFileName()TAxisinlinestatic; Delete(Option_t *="""") overrideTAxisinlinevirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTAxisvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *="""") const overrideTAxisinlinevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTAxis; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *er",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAxis-members.html:51,Guid,Guide,51,doc/master/classTAxis-members.html,https://root.cern,https://root.cern/doc/master/classTAxis-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBox Member List. This is the complete list of members for TBox, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TBoxstatic; Class_Name()TBoxstatic; Class_Version()TBoxinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &box) const overrideTBoxvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TBoxinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTBoxvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTBoxvirtual; DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TBoxvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTBoxvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBox-members.html:51,Guid,Guide,51,doc/master/classTBox-members.html,https://root.cern,https://root.cern/doc/master/classTBox-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBranch Member List. This is the complete list of members for TBranch, including all inherited members. AbstractMethod(const char *method) constTObject; AddBasket(TBasket &b, bool ondisk, Long64_t startEntry)TBranchvirtual; AddLastBasket(Long64_t startEntry)TBranchvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; BackFill()TBranch; Browse(TBrowser *b) overrideTBranchvirtual; BulkObj typedefTBranchprotected; CacheInfo_t typedefTBranchprotected; CheckedHash()TObjectinline; Class()TBranchstatic; Class_Name()TBranchstatic; Class_Version()TBranchinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TBranchinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeleteBaskets(Option_t *option="""")TBranchvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DropBaskets(Option_t *option="""")TBranchvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTBranchprotected; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; ExpandBasketArrays()TBranch; fAddressTBranchprotected; Fatal(const char *method, const char *msgfmt,...) constTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranch-members.html:51,Guid,Guide,51,doc/master/classTBranch-members.html,https://root.cern,https://root.cern/doc/master/classTBranch-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBranchElement Member List. This is the complete list of members for TBranchElement, including all inherited members. AbstractMethod(const char *method) constTObject; AddBasket(TBasket &b, bool ondisk, Long64_t startEntry)TBranchvirtual; AddLastBasket(Long64_t startEntry)TBranchvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; BackFill()TBranch; Browse(TBrowser *b) overrideTBranchElementvirtual; BuildTitle(const char *name)TBranchElementprotected; BulkObj typedefTBranchprotected; CacheInfo_t typedefTBranchprotected; CheckedHash()TObjectinline; Class()TBranchElementstatic; Class_Name()TBranchElementstatic; Class_Version()TBranchElementinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TBranchElementinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeleteBaskets(Option_t *option="""")TBranchvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DropBaskets(Option_t *option="""")TBranchvirtual; Dump() constTObjectvirtual; EBranchElementType enum nameTBranchElement; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTBranchElementprotected; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t even",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranchElement-members.html:51,Guid,Guide,51,doc/master/classTBranchElement-members.html,https://root.cern,https://root.cern/doc/master/classTBranchElement-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBrowser Member List. This is the complete list of members for TBrowser, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj, const char *name=nullptr, Int_t check=-1)TBrowser; Add(void *obj, TClass *cl, const char *name=nullptr, Int_t check=-1)TBrowser; AddCheckBox(TObject *obj, Bool_t check=kFALSE)TBrowser; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; BrowseObject(TObject *obj)TBrowserinline; CheckedHash()TObjectinline; CheckObjectItem(TObject *obj, Bool_t check=kFALSE)TBrowser; Class()TBrowserstatic; Class_Name()TBrowserstatic; Class_Version()TBrowserinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; Create(TObject *obj=nullptr)TBrowservirtual; DeclFileName()TBrowserinlinestatic; Delete(Option_t *option="""")TObjectvirtual; Destructor()TBrowservirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTBrowser; ExecPlugin(const char *name=nullptr, const char *fname=nullptr, const char *cmd=nullptr, Int_t pos=1, Int_t subpos=-1)TBrowserinline; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteDefaultAction(TObject *obj)TBrow",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBrowser-members.html:51,Guid,Guide,51,doc/master/classTBrowser-members.html,https://root.cern,https://root.cern/doc/master/classTBrowser-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBuffer Member List. This is the complete list of members for TBuffer, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; ApplySequence(const TStreamerInfoActions::TActionSequence &sequence, void *object)=0TBufferpure virtual; ApplySequence(const TStreamerInfoActions::TActionSequence &sequence, void *start_collection, void *end_collection)=0TBufferpure virtual; ApplySequenceVecPtr(const TStreamerInfoActions::TActionSequence &sequence, void *start_collection, void *end_collection)=0TBufferpure virtual; AutoExpand(Int_t size_needed)TBuffer; Browse(TBrowser *b)TObjectvirtual; Buffer() constTBufferinline; BufferSize() constTBufferinline; ByteSwapBuffer(Long64_t n, EDataType type)TBuffer; CacheList_t typedefTBufferprotected; CheckByteCount(UInt_t startpos, UInt_t bcnt, const TClass *clss)=0TBufferpure virtual; CheckByteCount(UInt_t startpos, UInt_t bcnt, const char *classname)=0TBufferpure virtual; CheckedHash()TObjectinline; CheckObject(const TObject *obj)=0TBufferpure virtual; CheckObject(const void *obj, const TClass *ptrClass)=0TBufferpure virtual; Class()TBufferstatic; Class_Name()TBufferstatic; Class_Version()TBufferinlinestatic; ClassBegin(const TClass *, Version_t=-1)=0TBufferpure virtual; ClassEnd(const TClass *)=0TBufferpure virtual; ClassMember(const char *, const char *=nullptr, Int_t=-1, Int_t=-1)=0TBufferpure virtual; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; DeclFileName()TBufferinlinestatic; DecrementLevel(TVirtualStreamerInfo *)=0TBufferpure virtual; Delete(Option_t *option="""")TObjectvirtual; DetachBuffer()TBufferinline; DistancetoPrimitive(Int_t px, Int_t p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBuffer-members.html:51,Guid,Guide,51,doc/master/classTBuffer-members.html,https://root.cern,https://root.cern/doc/master/classTBuffer-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCanvas Member List. This is the complete list of members for TCanvas, including all inherited members. AbsCoordinates(Bool_t set) overrideTPadinlinevirtual; AbsPixeltoX(Int_t px) overrideTPadinlinevirtual; AbsPixeltoXY(Int_t xpixel, Int_t ypixel, Double_t &x, Double_t &y)TPadvirtual; AbsPixeltoY(Int_t py) overrideTPadinlinevirtual; AbstractMethod(const char *method) constTObject; Add(TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) overrideTPadvirtual; AddExec(const char *name, const char *command) overrideTPadvirtual; AddFirst(TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) overrideTPadvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; AutoExec()TPadvirtual; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; Browse(TBrowser *b) overrideTCanvasvirtual; Build()TCanvasprivate; BuildLegend(Double_t x1=0.3, Double_t y1=0.21, Double_t x2=0.3, Double_t y2=0.21, const char *title="""", Option_t *option="""") overrideTPadvirtual; cd(Int_t subpadnumber=0) overrideTCanvasvirtual; ChangedBy(const char *method)TQObjectinlinevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; CheckedHash()TObjectinline; Class()TCanvasstatic; Class_Name()TCanvasstatic; Class_Version()TCanvasinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTCanvasvirtual; Cleared(TVirtualPad *pad)TCanvasvirtual; ClearPadSave()TCanvasinline; Clip(Float_t *x, Float_t *y, Float_t xclipl, Float_t yclipb, Float_t xclipr, Float_t yclipt)TPadvirtual; Clip(Double_t *x, Double_t *y, Double_t xclipl, Double_t yclipb, Double_t xclipr, Double_t yclipt) overrideTPadvirtual; ClippingCode(Double_t x, Double_t y, Double_t xcl1, Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCanvas-members.html:51,Guid,Guide,51,doc/master/classTCanvas-members.html,https://root.cern,https://root.cern/doc/master/classTCanvas-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TChain Member List. This is the complete list of members for TChain, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TChain *chain)TChainvirtual; Add(const char *name, Long64_t nentries=TTree::kMaxEntries)TChainvirtual; AddAllocationCount(UInt_t count)TTreeinline; AddBranchToCache(const char *bname, bool subbranches=false)TTreevirtual; AddBranchToCache(TBranch *branch, bool subbranches=false)TTreevirtual; AddClone(TTree *)TTree; AddFile(const char *name, Long64_t nentries=TTree::kMaxEntries, const char *tname="""")TChainvirtual; AddFileInfoList(TCollection *list, Long64_t nfiles=TTree::kMaxEntries)TChainvirtual; AddFriend(const char *chainname, const char *dummy="""") overrideTChainvirtual; AddFriend(const char *chainname, TFile *dummy) overrideTChainvirtual; AddFriend(TTree *chain, const char *alias="""", bool warn=false) overrideTChainvirtual; AddTotBytes(Int_t tot)TTreeinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddZipBytes(Int_t zip)TTreeinlinevirtual; AppendPad(Option_t *option="""")TObjectvirtual; AutoSave(Option_t *option="""")TTreevirtual; Branch(const char *name, T *obj, Int_t bufsize=32000, Int_t splitlevel=99)TTreeinline; Branch(const char *name, T **addobj, Int_t bufsize=32000, Int_t splitlevel=99)TTreeinline; Branch(TCollection *list, Int_t bufsize=32000, Int_t splitlevel=99, const char *name="""")TTreevirtual; Branch(TList *list, Int_t bufsize=32000, Int_t splitlevel=99)TTreevirtual; Branch(const char *folder, Int_t bufsize=32000, Int_t splitlevel=99)TTreevirtual; Branch(const char *name, void *address, const char *leaflist, Int_t bufsize=32000)TTreevirtual; Branch(const char *name, char *address, const char *leaflist, Int_t bufsize=32000)TTreeinline; Branch(const char *name, Longptr_t address, const char *leaflist, Int_t bufsize=32000)TTreeinline; Branch(const char *name, int address, const char *leaflist,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTChain-members.html:51,Guid,Guide,51,doc/master/classTChain-members.html,https://root.cern,https://root.cern/doc/master/classTChain-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TClass Member List. This is the complete list of members for TClass, including all inherited members. AbstractMethod(const char *method) constTObject; AddClass(TClass *cl)TClassstatic; AddClassToDeclIdMap(TDictionary::DeclId_t id, TClass *cl)TClassstatic; AddImplFile(const char *filename, int line)TClass; AddInstance(Bool_t heap=kFALSE)TClassinline; AddRule(const char *rule)TClassstatic; AddToTObjectTable(TObject *)TObjectprivatestatic; AdoptMemberStreamer(const char *name, TMemberStreamer *strm)TClass; AdoptReferenceProxy(TVirtualRefProxy *proxy)TClass; AdoptSchemaRules(ROOT::Detail::TSchemaRuleSet *rules)TClass; AdoptStreamer(TClassStreamer *strm)TClass; AppendPad(Option_t *option="""")TObjectvirtual; AutoBrowse(TObject *obj, TBrowser *browser)TClassstatic; Browse(TBrowser *b) overrideTClassvirtual; Browse(void *obj, TBrowser *b) constTClass; BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient=kFALSE)TClass; BuildRealData(void *pointer=nullptr, Bool_t isTransient=kFALSE)TClass; CalculateStreamerOffset() constTClass; CallShowMembers(const void *obj, TMemberInspector &insp, Bool_t isTransient=kFALSE) constTClass; CanIgnoreTObjectStreamer()TClassinline; CanSplit() constTClass; CanSplitBaseAllow()TClassprivate; CheckedHash()TObjectinline; Class()TClassstatic; Class_Name()TClassstatic; Class_Version()TClassinlinestatic; ClassName() constTObjectvirtual; ClassProperty() constTClass; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTClassvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; ConvSIMap_t typedefTClassprivate; ConvStreamerInstrumented(const TClass *pThis, void *object, TBuffer &b, const TClass *onfile_class)TClassprivatestatic; Copy(TObject &named) const overrideTNamedvirtual; CopyCollectionProxy(const TVirtualCollectionProxy &)TClass; CreateAttributeMap()TDictionary; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass-members.html:51,Guid,Guide,51,doc/master/classTClass-members.html,https://root.cern,https://root.cern/doc/master/classTClass-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCling Member List. This is the complete list of members for TCling, including all inherited members. AbstractMethod(const char *method) constTObject; AddAvailableIndentifiers(TSeqCollection &Idents) finalTClingvirtual; AddFriendToClass(clang::FunctionDecl *, clang::CXXRecordDecl *) constTClingprivate; AddIncludePath(const char *path) finalTClingvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; ApplyToInterpreterMutex(void *delta)TCling; AutoLoad(const char *classname, Bool_t knowDictNotLoaded=kFALSE) finalTClingvirtual; AutoLoad(const std::type_info &typeinfo, Bool_t knowDictNotLoaded=kFALSE) finalTClingvirtual; AutoLoadCallBack_t typedefTInterpreter; AutoParse(const char *cls) finalTClingvirtual; AutoParseImplRecurse(const char *cls, bool topLevel)TClingprivate; BaseClassInfo_ClassInfo(BaseClassInfo_t *) const finalTClingvirtual; BaseClassInfo_Delete(BaseClassInfo_t *bcinfo) const finalTClingvirtual; BaseClassInfo_Factory(ClassInfo_t *info) const finalTClingvirtual; BaseClassInfo_Factory(ClassInfo_t *derived, ClassInfo_t *base) const finalTClingvirtual; BaseClassInfo_FullName(BaseClassInfo_t *bcinfo) const finalTClingvirtual; BaseClassInfo_Name(BaseClassInfo_t *bcinfo) const finalTClingvirtual; BaseClassInfo_Next(BaseClassInfo_t *bcinfo) const finalTClingvirtual; BaseClassInfo_Next(BaseClassInfo_t *bcinfo, int onlyDirect) const finalTClingvirtual; BaseClassInfo_Offset(BaseClassInfo_t *toBaseClassInfo, void *address, bool isDerivedObject) const finalTClingvirtual; BaseClassInfo_Property(BaseClassInfo_t *bcinfo) const finalTClingvirtual; BaseClassInfo_Tagnum(BaseClassInfo_t *bcinfo) const finalTClingvirtual; BaseClassInfo_TmpltName(BaseClassInfo_t *bcinfo) const finalTClingvirtual; Browse(TBrowser *b)TObjectvirtual; Calc(const char *line, EErrorCode *error=nullptr) finalTClingvirtual; CallFunc_Delete(CallFunc_t *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCling-members.html:51,Guid,Guide,51,doc/master/classTCling-members.html,https://root.cern,https://root.cern/doc/master/classTCling-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCollection Member List. This is the complete list of members for TCollection, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj)=0TCollectionpure virtual; AddAll(const TCollection *col)TCollectionvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddVector(TObject *obj1,...)TCollection; AppendPad(Option_t *option="""")TObjectvirtual; AssertClass(TClass *cl) constTCollection; begin() constTCollectioninline; Browse(TBrowser *b) overrideTCollectionvirtual; Capacity() constTCollectioninline; CheckedHash()TObjectinline; Class()TCollectionstatic; Class_Name()TCollectionstatic; Class_Version()TCollectioninlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") override=0TCollectionpure virtual; Clone(const char *newname="""") const overrideTCollectionvirtual; Compare(const TObject *obj) const overrideTCollectionvirtual; Contains(const char *name) constTCollectioninline; Contains(const TObject *obj) constTCollectioninline; Copy(TObject &object) constTObjectvirtual; DeclFileName()TCollectioninlinestatic; Delete(Option_t *option="""") override=0TCollectionpure virtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTCollectionvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() const overrideTCollectionvirtual; EDeprecatedStatusBits enum nameTObject; EmptyGarbageCollection()TCollectionstatic; end() constTCollectioninline; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTCollectionprotected; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCollection-members.html:51,Guid,Guide,51,doc/master/classTCollection-members.html,https://root.cern,https://root.cern/doc/master/classTCollection-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TColor Member List. This is the complete list of members for TColor, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; Allocate()TColorprivate; AppendPad(Option_t *option="""")TObjectvirtual; AsHexString() constTColor; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TColorstatic; Class_Name()TColorstatic; Class_Version()TColorinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &color) const overrideTColorvirtual; CreateColorsCircle(Int_t offset, const char *name, UChar_t *rgb)TColorstatic; CreateColorsGray()TColorstatic; CreateColorsRectangle(Int_t offset, const char *name, UChar_t *rgb)TColorstatic; CreateColorTableFromFile(TString fileName, Float_t alpha=1.)TColorstatic; CreateColorWheel()TColorstatic; CreateGradientColorTable(UInt_t Number, Double_t *Stops, Double_t *Red, Double_t *Green, Double_t *Blue, UInt_t NColors, Float_t alpha=1., Bool_t setPalette=kTRUE)TColorstatic; DeclFileName()TColorinlinestatic; DefinedColors(Int_t set_always_on=0)TColorstatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTColor-members.html:51,Guid,Guide,51,doc/master/classTColor-members.html,https://root.cern,https://root.cern/doc/master/classTColor-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCurlyArc Member List. This is the complete list of members for TCurlyArc, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; Build() overrideTCurlyArcvirtual; CheckedHash()TObjectinline; Class()TCurlyArcstatic; Class_Name()TCurlyArcstatic; Class_Version()TCurlyArcinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &polyline) const overrideTPolyLinevirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TCurlyArcinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTCurlyArcvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTPolyLinevirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawPolyLine(Int_t n, Double_t *x, Double_t *y, Option_t *option="""")TPolyLinevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTCurlyArcvirtual; fAmplitudeTCurlyLineprotected; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFillColorTAttFillprotected; f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCurlyArc-members.html:51,Guid,Guide,51,doc/master/classTCurlyArc-members.html,https://root.cern,https://root.cern/doc/master/classTCurlyArc-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCurlyLine Member List. This is the complete list of members for TCurlyLine, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; Build()TCurlyLinevirtual; CheckedHash()TObjectinline; Class()TCurlyLinestatic; Class_Name()TCurlyLinestatic; Class_Version()TCurlyLineinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &polyline) const overrideTPolyLinevirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TCurlyLineinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTCurlyLinevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTPolyLinevirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawPolyLine(Int_t n, Double_t *x, Double_t *y, Option_t *option="""")TPolyLinevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTCurlyLinevirtual; fAmplitudeTCurlyLineprotected; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFillColorTAttFillprotected; f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCurlyLine-members.html:51,Guid,Guide,51,doc/master/classTCurlyLine-members.html,https://root.cern,https://root.cern/doc/master/classTCurlyLine-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDirectory Member List. This is the complete list of members for TDirectory, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj, Bool_t replace=kFALSE)TDirectoryinlinevirtual; AddDirectory(Bool_t add=kTRUE)TDirectorystatic; AddDirectoryStatus()TDirectorystatic; AddToTObjectTable(TObject *)TObjectprivatestatic; Append(TObject *obj, Bool_t replace=kFALSE)TDirectoryvirtual; AppendKey(TKey *)TDirectoryinlinevirtual; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTDirectoryvirtual; Build(TFile *motherFile=nullptr, TDirectory *motherDir=nullptr)TDirectoryinlinevirtual; BuildDirectory(TFile *motherFile, TDirectory *motherDir)TDirectoryprotected; cd()TDirectoryvirtual; cd(const char *path)TDirectoryvirtual; Cd(const char *path)TDirectorystatic; Cd1(const char *path)TDirectoryprotectedstatic; cd1(const char *path)TDirectoryprotected; CheckedHash()TObjectinline; Class()TDirectorystatic; Class_Name()TDirectorystatic; Class_Version()TDirectoryinlinestatic; ClassName() constTObjectvirtual; CleanTargets()TDirectoryprotected; Clear(Option_t *option="""") overrideTDirectoryvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneObject(const TObject *obj, Bool_t autoadd=kTRUE)TDirectoryvirtual; Close(Option_t *option="""")TDirectoryvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &) const overrideTDirectoryinlinevirtual; CurrentDirectory()TDirectorystatic; DeclFileName()TDirectoryinlinestatic; DecodeNameCycle(const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0)TDirectorystatic; Delete(const char *namecycle="""") overrideTDirectoryvirtual; DeleteAll(Option_t *option="""")TDirectoryvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDirectory-members.html:51,Guid,Guide,51,doc/master/classTDirectory-members.html,https://root.cern,https://root.cern/doc/master/classTDirectory-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDirectoryFile Member List. This is the complete list of members for TDirectoryFile, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj, Bool_t replace=kFALSE) overrideTDirectoryFileinlinevirtual; AddDirectory(Bool_t add=kTRUE)TDirectorystatic; AddDirectoryStatus()TDirectorystatic; AddToTObjectTable(TObject *)TObjectprivatestatic; Append(TObject *obj, Bool_t replace=kFALSE) overrideTDirectoryFilevirtual; AppendKey(TKey *key) overrideTDirectoryFilevirtual; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTDirectoryFilevirtual; Build(TFile *motherFile=nullptr, TDirectory *motherDir=nullptr) overrideTDirectoryFileinlinevirtual; BuildDirectory(TFile *motherFile, TDirectory *motherDir)TDirectoryprotected; BuildDirectoryFile(TFile *motherFile, TDirectory *motherDir)TDirectoryFileprotected; Cd(const char *path)TDirectorystatic; cd() overrideTDirectoryFilevirtual; cd(const char *path) overrideTDirectoryFilevirtual; cd1(const char *path)TDirectoryprotected; Cd1(const char *path)TDirectoryprotectedstatic; CheckedHash()TObjectinline; Class()TDirectoryFilestatic; Class_Name()TDirectoryFilestatic; Class_Version()TDirectoryFileinlinestatic; ClassName() constTObjectvirtual; CleanTargets()TDirectoryFileprotected; Clear(Option_t *option="""") overrideTDirectoryvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneObject(const TObject *obj, Bool_t autoadd=kTRUE) overrideTDirectoryFilevirtual; Close(Option_t *option="""") overrideTDirectoryFilevirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &) const overrideTDirectoryFileinlinevirtual; CurrentDirectory()TDirectorystatic; DeclFileName()TDirectoryFileinlinestatic; DecodeNameCycle(const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0)TDirectorystatic; Delete(const char *namecycle="""") overrideTDirector",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDirectoryFile-members.html:51,Guid,Guide,51,doc/master/classTDirectoryFile-members.html,https://root.cern,https://root.cern/doc/master/classTDirectoryFile-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEfficiency Member List. This is the complete list of members for TEfficiency, including all inherited members. AbstractMethod(const char *method) constTObject; Add(const TEfficiency &rEff)TEfficiencyinline; AddToTObjectTable(TObject *)TObjectprivatestatic; AgrestiCoull(Double_t total, Double_t passed, Double_t level, Bool_t bUpper)TEfficiencystatic; AppendPad(Option_t *option="""")TObjectvirtual; Bayesian(Double_t total, Double_t passed, Double_t level, Double_t alpha, Double_t beta, Bool_t bUpper, Bool_t bShortest=false)TEfficiencystatic; BetaCentralInterval(Double_t level, Double_t alpha, Double_t beta, Bool_t bUpper)TEfficiencystatic; BetaMean(Double_t alpha, Double_t beta)TEfficiencystatic; BetaMode(Double_t alpha, Double_t beta)TEfficiencystatic; BetaShortestInterval(Double_t level, Double_t alpha, Double_t beta, Double_t &lower, Double_t &upper)TEfficiencystatic; Browse(TBrowser *) overrideTEfficiencyinlinevirtual; Build(const char *name, const char *title)TEfficiencyprotected; CheckBinning(const TH1 &pass, const TH1 &total)TEfficiencystatic; CheckConsistency(const TH1 &pass, const TH1 &total, Option_t *opt="""")TEfficiencystatic; CheckedHash()TObjectinline; CheckEntries(const TH1 &pass, const TH1 &total, Option_t *opt="""")TEfficiencystatic; CheckWeights(const TH1 &pass, const TH1 &total)TEfficiencystatic; Class()TEfficiencystatic; Class_Name()TEfficiencystatic; Class_Version()TEfficiencyinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; ClopperPearson(Double_t total, Double_t passed, Double_t level, Bool_t bUpper)TEfficiencystatic; Combine(Double_t &up, Double_t &low, Int_t n, const Int_t *pass, const Int_t *total, Double_t alpha, Double_t beta, Double_t level=0.683, const Double_t *w=nullptr, Option_t *opt="""")TEfficiencystatic; Combine(TCollection *pList, Opti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEfficiency-members.html:51,Guid,Guide,51,doc/master/classTEfficiency-members.html,https://root.cern,https://root.cern/doc/master/classTEfficiency-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEllipse Member List. This is the complete list of members for TEllipse, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TEllipsestatic; Class_Name()TEllipsestatic; Class_Version()TEllipseinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &ellipse) const overrideTEllipsevirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TEllipseinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTEllipsevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTEllipsevirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, Double_t theta, Option_t *option="""")TEllipsevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTEllipsevirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFillColorTAttFillprotected; fFillStyleTA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEllipse-members.html:51,Guid,Guide,51,doc/master/classTEllipse-members.html,https://root.cern,https://root.cern/doc/master/classTEllipse-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEntryList Member List. This is the complete list of members for TEntryList, including all inherited members. AbstractMethod(const char *method) constTObject; Add(const TEntryList *elist)TEntryListvirtual; AddSubList(TEntryList *elist)TEntryList; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TEntryListstatic; Class_Name()TEntryListstatic; Class_Version()TEntryListinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Contains(Long64_t entry, TTree *tree=nullptr)TEntryListvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TEntryListinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DirectoryAutoAdd(TDirectory *)TEntryListvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Enter(Long64_t entry, TTree *tree=nullptr)TEntryListvirtual; Enter(Long64_t localentry, const char *treename, const char *filename)TEntryListvirtual; EnterRange(Long64_t start, Long64_t end, TTree *tree=nullptr, UInt_t step=1U)TEntryList; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *ms",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEntryList-members.html:51,Guid,Guide,51,doc/master/classTEntryList-members.html,https://root.cern,https://root.cern/doc/master/classTEntryList-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEnv Member List. This is the complete list of members for TEnv, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TEnvstatic; Class_Name()TEnvstatic; Class_Version()TEnvinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; DeclFileName()TEnvinlinestatic; Defined(const char *name) constTEnvinline; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fIgnoreDupTEnvprivate; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fRcNameTEnvprivate; fTableTEnvprivate; fUniqueIDTObjectprivate; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIconName() constTObjectvirtual; GetName() constTObjectvirtual; GetObjectInfo(Int_t px, In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEnv-members.html:51,Guid,Guide,51,doc/master/classTEnv-members.html,https://root.cern,https://root.cern/doc/master/classTEnv-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEventList Member List. This is the complete list of members for TEventList, including all inherited members. AbstractMethod(const char *method) constTObject; Add(const TEventList *list)TEventListvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TEventListstatic; Class_Name()TEventListstatic; Class_Version()TEventListinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTEventListinlinevirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Contains(Long64_t entry)TEventListvirtual; ContainsRange(Long64_t entrymin, Long64_t entrymax)TEventListvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TEventListinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DirectoryAutoAdd(TDirectory *)TEventListvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Enter(Long64_t entry)TEventListvirtual; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fDeltaTEventListprotected; fDirectoryTEventListprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEventList-members.html:51,Guid,Guide,51,doc/master/classTEventList-members.html,https://root.cern,https://root.cern/doc/master/classTEventList-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF1 Member List. This is the complete list of members for TF1, including all inherited members. AbstractMethod(const char *method) constTObject; AbsValue(Bool_t reject=kTRUE)TF1static; AddParameter(const TString &name, Double_t value)TF1inlinevirtual; AddToGlobalList(Bool_t on=kTRUE)TF1virtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTF1virtual; CalcGaussLegendreSamplingPoints(Int_t num, Double_t *x, Double_t *w, Double_t eps=3.0e-11)TF1static; CentralMoment(Double_t n, Double_t a, Double_t b, const Double_t *params=nullptr, Double_t epsilon=0.000001)TF1virtual; CheckedHash()TObjectinline; Class()TF1static; Class_Name()TF1static; Class_Version()TF1inlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname=nullptr) const overrideTF1virtual; Compare(const TObject *obj) const overrideTNamedvirtual; ComputeCdfTable(Option_t *opt)TF1protected; Copy(TObject &f1) const overrideTF1virtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CreateHistogram()TF1inlinevirtual; DeclFileName()TF1inlinestatic; DefaultAddToGlobalList(Bool_t on=kTRUE)TF1static; DefineNSUMTerm(TObjArray *newFuncs, TObjArray *coeffNames, TString &fullFormula, TString &formula, int termStart, int termEnd, Double_t xmin, Double_t xmax)TF1private; Delete(Option_t *option="""")TObjectvirtual; Derivative(Double_t x, Double_t *params=nullptr, Double_t epsilon=0.001) constTF1virtual; Derivative2(Double_t x, Double_t *params=nullptr, Double_t epsilon=0.001) constTF1virtual; Derivative3(Double_t x, Double_t *params=nullptr, Double_t epsilon=0.001) constTF1virtual; DerivativeError()TF1static; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1-members.html:51,Guid,Guide,51,doc/master/classTF1-members.html,https://root.cern,https://root.cern/doc/master/classTF1-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF2 Member List. This is the complete list of members for TF2, including all inherited members. AbstractMethod(const char *method) constTObject; AbsValue(Bool_t reject=kTRUE)TF1static; AddParameter(const TString &name, Double_t value)TF1inlinevirtual; AddToGlobalList(Bool_t on=kTRUE)TF1virtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTF1virtual; CalcGaussLegendreSamplingPoints(Int_t num, Double_t *x, Double_t *w, Double_t eps=3.0e-11)TF1static; CentralMoment(Double_t n, Double_t a, Double_t b, const Double_t *params=nullptr, Double_t epsilon=0.000001)TF1virtual; CentralMoment2(Double_t nx, Double_t ax, Double_t bx, Double_t ny, Double_t ay, Double_t by, Double_t epsilon=0.000001)TF2virtual; CheckedHash()TObjectinline; Class()TF2static; Class_Name()TF2static; Class_Version()TF2inlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname=nullptr) const overrideTF1virtual; Compare(const TObject *obj) const overrideTNamedvirtual; ComputeCdfTable(Option_t *opt)TF1protected; Copy(TObject &f2) const overrideTF2virtual; TF1::TAttLine::Copy(TAttLine &attline) constTAttLine; TF1::TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; Covariance2XY(Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t epsilon=0.000001)TF2inlinevirtual; CreateHistogram() overrideTF2virtual; DeclFileName()TF2inlinestatic; DefaultAddToGlobalList(Bool_t on=kTRUE)TF1static; DefineNSUMTerm(TObjArray *newFuncs, TObjArray *coeffNames, TString &fullFormula, TString &formula, int termStart, int termEnd, Double_t xmin, Double_t xmax)TF1private; Delete(Option_t *option="""")TObjectvirtual; Derivative(Double_t x, Double_t *params=nullptr, Double_t epsilon=0.001) constTF1virtual; Derivative2(Double_t x, Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF2-members.html:51,Guid,Guide,51,doc/master/classTF2-members.html,https://root.cern,https://root.cern/doc/master/classTF2-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFile Member List. This is the complete list of members for TFile, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj, Bool_t replace=kFALSE) overrideTDirectoryFileinlinevirtual; AddDirectory(Bool_t add=kTRUE)TDirectorystatic; AddDirectoryStatus()TDirectorystatic; AddToTObjectTable(TObject *)TObjectprivatestatic; Append(TObject *obj, Bool_t replace=kFALSE) overrideTDirectoryFilevirtual; AppendKey(TKey *key) overrideTDirectoryFilevirtual; AppendPad(Option_t *option="""")TObjectvirtual; AsyncOpen(const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0)TFilestatic; Browse(TBrowser *b) overrideTDirectoryFilevirtual; Build(TFile *motherFile=nullptr, TDirectory *motherDir=nullptr) overrideTDirectoryFileinlinevirtual; BuildDirectory(TFile *motherFile, TDirectory *motherDir)TDirectoryprotected; BuildDirectoryFile(TFile *motherFile, TDirectory *motherDir)TDirectoryFileprotected; Cd(const char *path)TDirectorystatic; cd() overrideTDirectoryFilevirtual; cd(const char *path) overrideTDirectoryFilevirtual; Cd1(const char *path)TDirectoryprotectedstatic; cd1(const char *path)TDirectoryprotected; CheckedHash()TObjectinline; Class()TFilestatic; Class_Name()TFilestatic; Class_Version()TFileinlinestatic; ClassName() constTObjectvirtual; CleanTargets()TDirectoryFileprotected; Clear(Option_t *option="""") overrideTDirectoryvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneObject(const TObject *obj, Bool_t autoadd=kTRUE) overrideTDirectoryFilevirtual; Close(Option_t *option="""") overrideTFilevirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &) const overrideTFileinlinevirtual; Cp(const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000)TFilevirtual; Cp(const char *src, const char *dst, Boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFile-members.html:51,Guid,Guide,51,doc/master/classTFile-members.html,https://root.cern,https://root.cern/doc/master/classTFile-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFitResult Member List. This is the complete list of members for TFitResult, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Chi2() constROOT::Fit::FitResultinline; Class()TFitResultstatic; Class_Name()TFitResultstatic; Class_Version()TFitResultinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Contour(unsigned int ipar, unsigned int jpar, TGraph *gr, double confLevel=0.683)TFitResult; ROOT::Fit::FitResult::Contour(unsigned int ipar, unsigned int jpar, unsigned int &npoints, double *pntsx, double *pntsy, double confLevel=0.683)ROOT::Fit::FitResult; Copy(TObject &named) const overrideTNamedvirtual; Correlation(unsigned int i, unsigned int j) constROOT::Fit::FitResultinline; CovMatrix(unsigned int i, unsigned int j) constROOT::Fit::FitResultinline; CovMatrixStatus() constROOT::Fit::FitResultinline; DeclFileName()TFitResultinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Edm() constROOT::Fit::FitResultinline; Error(unsigned int i) constTFitResultinline; Error(const char *method, const char *msgfmt,...) constTFitResultvirtual; Errors() constROOT::Fit::FitResultinline; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFitResult-members.html:51,Guid,Guide,51,doc/master/classTFitResult-members.html,https://root.cern,https://root.cern/doc/master/classTFitResult-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFitResultPtr Member List. This is the complete list of members for TFitResultPtr, including all inherited members. Class()TFitResultPtrstatic; Class_Name()TFitResultPtrstatic; Class_Version()TFitResultPtrinlinestatic; DeclFileName()TFitResultPtrinlinestatic; fPointerTFitResultPtrprivate; fStatusTFitResultPtrprivate; Get() constTFitResultPtr; IsA() constTFitResultPtrinlinevirtual; operator int() constTFitResultPtrinline; operator*() constTFitResultPtr; operator->() constTFitResultPtr; operator=(const TFitResultPtr &rhs)TFitResultPtr; Streamer(TBuffer &)TFitResultPtrvirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TFitResultPtrinline; TFitResultPtr(int status=-1)TFitResultPtrinline; TFitResultPtr(const std::shared_ptr< TFitResult > &p)TFitResultPtr; TFitResultPtr(TFitResult *p)TFitResultPtr; TFitResultPtr(const TFitResultPtr &rhs)TFitResultPtr; ~TFitResultPtr()TFitResultPtrvirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:51 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFitResultPtr-members.html:51,Guid,Guide,51,doc/master/classTFitResultPtr-members.html,https://root.cern,https://root.cern/doc/master/classTFitResultPtr-members.html,2,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFormula Member List. This is the complete list of members for TFormula, including all inherited members. AbstractMethod(const char *method) constTObject; AddParameter(const TString &name, Double_t value=0)TFormulainline; AddToTObjectTable(TObject *)TObjectprivatestatic; AddVariable(const TString &name, Double_t value=0)TFormula; AddVariables(const TString *vars, const Int_t size)TFormula; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CallFuncSignature typedefTFormulaprivate; CheckedHash()TObjectinline; CladStorage typedefTFormula; Class()TFormulastatic; Class_Name()TFormulastatic; Class_Version()TFormulainlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTFormulavirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Compile(const char *expression="""")TFormula; Copy(TObject &f1) const overrideTFormulavirtual; DeclFileName()TFormulainlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoAddParameter(const TString &name, Double_t value, bool processFormula)TFormulaprotected; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; DoEval(const Double_t *x, const Double_t *p=nullptr) constTFormulaprotected; DoSetParameters(const Double_t *p, Int_t size)TFormulaprotected; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTFormula; Eval(Args... args) constTFormula; EvalPar(const Double_t *x, const Double_t *params=nullptr) constTFormula; EvalPar(const T *x, const Double_t *params=nullptr) constTFormulainline; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula-members.html:51,Guid,Guide,51,doc/master/classTFormula-members.html,https://root.cern,https://root.cern/doc/master/classTFormula-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFrame Member List. This is the complete list of members for TFrame, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TFramestatic; Class_Name()TFramestatic; Class_Version()TFrameinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &frame) const overrideTFramevirtual; TWbox::TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TFrameinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTBoxvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTFramevirtual; DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TBoxvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawWbox(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Color_t color=33, Short_t bordersize=5, Short_t bordermode=-1)TWboxvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTFramevirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFrame-members.html:51,Guid,Guide,51,doc/master/classTFrame-members.html,https://root.cern,https://root.cern/doc/master/classTFrame-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFree Member List. This is the complete list of members for TFree, including all inherited members. AbstractMethod(const char *method) constTObject; AddFree(TList *lfree, Long64_t first, Long64_t last)TFree; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TFreestatic; Class_Name()TFreestatic; Class_Version()TFreeinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; DeclFileName()TFreeinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFirstTFreeprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TFreevirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fLastTFreeprotected; fUniqueIDTObjectprivate; GetBestFree(TList *lfree, Int_t nbytes)TFree; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFree-members.html:51,Guid,Guide,51,doc/master/classTFree-members.html,https://root.cern,https://root.cern/doc/master/classTFree-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFumili Member List. This is the complete list of members for TFumili, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; BuildArrays()TFumili; CheckedHash()TObjectinline; Chisquare(Int_t npar, Double_t *params) const overrideTFumilivirtual; Class()TFumilistatic; Class_Name()TFumilistatic; Class_Version()TFumiliinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *opt="""") overrideTFumilivirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TFumiliinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeleteArrays()TFumili; Derivatives(Double_t *, Double_t *)TFumili; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Eval(Int_t &npar, Double_t *grad, Double_t &fval, Double_t *par, Int_t flag)TFumili; EvalTFN(Double_t *, Double_t *)TFumili; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteCommand(const char *command, Double_t *args, Int_t nargs) overrideTFumilivirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; ExecuteSetCommand(Int_t)TFumili; fATFumiliprivate; fAKAPPATFumiliprivate; fAMNTFumiliprivate; fAMXTFumiliprivate; fANamesTFumil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFumili-members.html:51,Guid,Guide,51,doc/master/classTFumili-members.html,https://root.cern,https://root.cern/doc/master/classTFumili-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGaxis Member List. This is the complete list of members for TGaxis, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AdjustBinSize(Double_t A1, Double_t A2, Int_t nold, Double_t &BinLow, Double_t &BinHigh, Int_t &nbins, Double_t &BinWidth)TGaxisvirtual; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CenterLabels(Bool_t center=kTRUE)TGaxisvirtual; CenterTitle(Bool_t center=kTRUE)TGaxisvirtual; ChangeLabel(Int_t labNum=0, Double_t labAngle=-1., Double_t labSize=-1., Int_t labAlign=-1, Int_t labColor=-1, Int_t labFont=-1, const TString &labText="""")TGaxis; ChangeLabelAttributes(Int_t i, Int_t nlabels, TLatex *t, char *c, Double_t value=0., Double_t eps=-1.)TGaxis; ChangeLabelByValue(Double_t labValue, Double_t labAngle=-1., Double_t labSize=-1., Int_t labAlign=-1, Int_t labColor=-1, Int_t labFont=-1, const TString &labText="""")TGaxis; CheckedHash()TObjectinline; Class()TGaxisstatic; Class_Name()TGaxisstatic; Class_Version()TGaxisinlinestatic; ClassName() constTObjectvirtual; CleanupModLabs()TGaxisprotected; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; TLine::Copy(TObject &line) const overrideTLinevirtual; TLine::TAttLine::Copy(TAttLine &attline) constTAttLine; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TGaxisinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTLinevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawAxis(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, Double_t wmi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGaxis-members.html:51,Guid,Guide,51,doc/master/classTGaxis-members.html,https://root.cern,https://root.cern/doc/master/classTGaxis-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGenMapProxy Member List. This is the complete list of members for TGenMapProxy, including all inherited members. Allocate(UInt_t n, Bool_t forceDelete) overrideTGenCollectionProxyvirtual; ArrIterfunc_t typedefTGenCollectionProxyprotected; At(UInt_t idx) overrideTGenSetProxyinlinevirtual; CheckFunctions() constTGenCollectionProxyprotected; Clear(const char *opt="""") overrideTGenCollectionProxyvirtual; Collectfunc_t typedefTGenCollectionProxyprotected; Commit(void *env) overrideTGenCollectionProxyvirtual; CopyIterator_t typedefTVirtualCollectionProxy; CreateIterators_t typedefTVirtualCollectionProxy; DeleteArray(void *p, Bool_t dtorOnly=kFALSE) constTVirtualCollectionProxyinlinevirtual; DeleteItem(Bool_t force, void *ptr) const overrideTGenMapProxyinlinevirtual; DeleteIterator_t typedefTVirtualCollectionProxy; DeleteTwoIterators_t typedefTVirtualCollectionProxy; Destructor(void *p, Bool_t dtorOnly=kFALSE) constTVirtualCollectionProxyinlinevirtual; Env_t typedefTGenCollectionProxyprotected; EnvironBase_t typedefTGenCollectionProxyprotected; EProperty enum nameTVirtualCollectionProxy; fClassTVirtualCollectionProxyprotected; fClearTGenCollectionProxyprotected; fCollectTGenCollectionProxyprotected; fConstructTGenCollectionProxyprotected; fConversionReadMemberWiseTGenCollectionProxymutableprotected; fCreateEnvTGenCollectionProxyprotected; fDestructTGenCollectionProxyprotected; Feedfunc_t typedefTGenCollectionProxyprotected; fEnvTGenCollectionProxyprotected; fFeedTGenCollectionProxyprotected; fFirstTGenCollectionProxyprotected; fFunctionCopyIteratorTGenCollectionProxyprotected; fFunctionCreateIteratorsTGenCollectionProxyprotected; fFunctionDeleteIteratorTGenCollectionProxyprotected; fFunctionDeleteTwoIteratorsTGenCollectionProxyprotected; fFunctionNextIteratorTGenCollectionProxyprotected; fgIteratorArenaSizeTVirtualCollectionProxystatic; fKeyTGenCollectionProxyprotected; fNa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenMapProxy-members.html:51,Guid,Guide,51,doc/master/classTGenMapProxy-members.html,https://root.cern,https://root.cern/doc/master/classTGenMapProxy-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoManager Member List. This is the complete list of members for TGeoManager, including all inherited members. AbstractMethod(const char *method) constTObject; AddBorderSurface(TGeoBorderSurface *surf)TGeoManager; AddGDMLMatrix(TGDMLMatrix *mat)TGeoManager; AddMaterial(const TGeoMaterial *material)TGeoManager; AddNavigator()TGeoManager; AddOpticalSurface(TGeoOpticalSurface *optsurf)TGeoManager; AddOverlap(const TNamed *ovlp)TGeoManager; AddProperty(const char *property, Double_t value)TGeoManager; AddRegion(TGeoRegion *region)TGeoManager; AddShape(const TGeoShape *shape)TGeoManager; AddSkinSurface(TGeoSkinSurface *surf)TGeoManager; AddToTObjectTable(TObject *)TObjectprivatestatic; AddTrack(Int_t id, Int_t pdgcode, TObject *particle=nullptr)TGeoManager; AddTrack(TVirtualGeoTrack *track)TGeoManager; AddTransformation(const TGeoMatrix *matrix)TGeoManager; AddVolume(TGeoVolume *volume)TGeoManager; AnimateTracks(Double_t tmin=0, Double_t tmax=5E-8, Int_t nframes=200, Option_t *option=""/*"")TGeoManager; AppendPad(Option_t *option="""")TObjectvirtual; BombTranslation(const Double_t *tr, Double_t *bombtr)TGeoManager; Browse(TBrowser *b) overrideTGeoManagervirtual; BuildDefaultMaterials()TGeoManager; cd(const char *path="""")TGeoManagervirtual; CdDown(Int_t index)TGeoManager; CdNext()TGeoManager; CdNode(Int_t nodeid)TGeoManager; CdTop()TGeoManager; CdUp()TGeoManager; CheckBoundaryErrors(Int_t ntracks=1000000, Double_t radius=-1.)TGeoManager; CheckBoundaryReference(Int_t icheck=-1)TGeoManager; CheckedHash()TObjectinline; CheckGeometry(Option_t *option="""")TGeoManager; CheckGeometryFull(Int_t ntracks=1000000, Double_t vx=0., Double_t vy=0., Double_t vz=0., Option_t *option=""ob"")TGeoManager; CheckOverlaps(Double_t ovlp=0.1, Option_t *option="""")TGeoManager; CheckPath(const char *path) constTGeoManager; CheckPoint(Double_t x=0, Double_t y=0, Double_t z=0, Option_t *option="""", Double_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoManager-members.html:51,Guid,Guide,51,doc/master/classTGeoManager-members.html,https://root.cern,https://root.cern/doc/master/classTGeoManager-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoMaterial Member List. This is the complete list of members for TGeoMaterial, including all inherited members. AbstractMethod(const char *method) constTObject; AddConstProperty(const char *property, const char *ref)TGeoMaterial; AddProperty(const char *property, const char *ref)TGeoMaterial; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TGeoMaterialstatic; Class_Name()TGeoMaterialstatic; Class_Version()TGeoMaterialinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttFill::Copy(TAttFill &attfill) constTAttFill; Coulomb(Double_t z)TGeoMaterialstatic; DecayMaterial(Double_t time, Double_t precision=0.001)TGeoMaterialvirtual; DeclFileName()TGeoMaterialinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EGeoMaterial enum nameTGeoMaterial; EGeoMaterialState enum nameTGeoMaterial; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; fATGeoMaterialprotected; Fatal(const char *method, const char *msgfmt,...) constTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoMaterial-members.html:51,Guid,Guide,51,doc/master/classTGeoMaterial-members.html,https://root.cern,https://root.cern/doc/master/classTGeoMaterial-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoMedium Member List. This is the complete list of members for TGeoMedium, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TGeoMediumstatic; Class_Name()TGeoMediumstatic; Class_Version()TGeoMediuminlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TGeoMediuminlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EGeoMedium enum nameTGeoMedium; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fIdTGeoMediumprotected; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fMaterialTGeoMediumprotected; fNameTNamedprotected; fParamsTGeoMediumprotected; fTitleTNamedprotected; fUniqueIDTObjectpriva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoMedium-members.html:51,Guid,Guide,51,doc/master/classTGeoMedium-members.html,https://root.cern,https://root.cern/doc/master/classTGeoMedium-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoPainter Member List. This is the complete list of members for TGeoPainter, including all inherited members. AbstractMethod(const char *method) constTObject; AddSize3D(Int_t numpoints, Int_t numsegs, Int_t numpolys) overrideTGeoPaintervirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddTrack(Int_t id, Int_t pdgcode, TObject *part) overrideTGeoPaintervirtual; AddTrackPoint(Double_t *point, Double_t *box, Bool_t reset=kFALSE) overrideTGeoPaintervirtual; AppendPad(Option_t *option="""")TObjectvirtual; BombTranslation(const Double_t *tr, Double_t *bombtr) overrideTGeoPaintervirtual; Browse(TBrowser *b)TObjectvirtual; CheckBoundaryErrors(Int_t ntracks=1000000, Double_t radius=-1.) overrideTGeoPaintervirtual; CheckBoundaryReference(Int_t icheck=-1) overrideTGeoPaintervirtual; CheckedHash()TObjectinline; CheckEdit()TGeoPainter; CheckGeometry(Int_t nrays, Double_t startx, Double_t starty, Double_t startz) const overrideTGeoPaintervirtual; CheckGeometryFull(Bool_t checkoverlaps=kTRUE, Bool_t checkcrossings=kTRUE, Int_t nrays=10000, const Double_t *vertex=nullptr) overrideTGeoPaintervirtual; CheckOverlaps(const TGeoVolume *vol, Double_t ovlp=0.1, Option_t *option="""") const overrideTGeoPaintervirtual; CheckPoint(Double_t x=0, Double_t y=0, Double_t z=0, Option_t *option="""", Double_t safety=0.) overrideTGeoPaintervirtual; CheckShape(TGeoShape *shape, Int_t testNo, Int_t nsamples, Option_t *option) overrideTGeoPaintervirtual; Class()TVirtualGeoPainterstatic; Class_Name()TVirtualGeoPainterstatic; Class_Version()TVirtualGeoPainterinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; ClearVisibleVolumes()TGeoPainterprotected; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; CountNodes(TGeoVolume *vol, Int_t level) constTGeoPainter; CountVisibleN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPainter-members.html:51,Guid,Guide,51,doc/master/classTGeoPainter-members.html,https://root.cern,https://root.cern/doc/master/classTGeoPainter-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoVolume Member List. This is the complete list of members for TGeoVolume, including all inherited members. AbstractMethod(const char *method) constTObject; AddNode(TGeoVolume *vol, Int_t copy_no, TGeoMatrix *mat=nullptr, Option_t *option="""")TGeoVolumevirtual; AddNodeOffset(TGeoVolume *vol, Int_t copy_no, Double_t offset=0, Option_t *option="""")TGeoVolume; AddNodeOverlap(TGeoVolume *vol, Int_t copy_no, TGeoMatrix *mat=nullptr, Option_t *option="""")TGeoVolumevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTGeoVolumevirtual; Capacity() constTGeoVolume; cd(Int_t inode) constTGeoVolumevirtual; CheckedHash()TObjectinline; CheckGeometry(Int_t nrays=1, Double_t startx=0, Double_t starty=0, Double_t startz=0) constTGeoVolume; CheckOverlaps(Double_t ovlp=0.1, Option_t *option="""") constTGeoVolume; CheckShape(Int_t testNo, Int_t nsamples=10000, Option_t *option="""")TGeoVolume; CheckShapes()TGeoVolume; Class()TGeoVolumestatic; Class_Name()TGeoVolumestatic; Class_Version()TGeoVolumeinlinestatic; ClassName() constTObjectvirtual; CleanAll()TGeoVolume; Clear(Option_t *option="""") overrideTNamedvirtual; ClearNodes()TGeoVolumeinline; ClearShape()TGeoVolume; ClearThreadData() constTGeoVolumevirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneNodesAndConnect(TGeoVolume *newmother) constTGeoVolume; CloneVolume() constTGeoVolumevirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Contains(const Double_t *point) constTGeoVolumeinline; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; CountNodes(Int_t nlevels=1000, Int_t option=0)TGeoVolume; CreateDummyMedium()TGeoVolumestatic; CreateThreadData(Int_t nthreads)TGeoVolumevirtual; DeclFileName()TGeoVolumeinlinestatic; Delete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolume-members.html:51,Guid,Guide,51,doc/master/classTGeoVolume-members.html,https://root.cern,https://root.cern/doc/master/classTGeoVolume-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph Member List. This is the complete list of members for TGraph, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *f, Double_t c1=1)TGraphvirtual; AddPoint(Double_t x, Double_t y)TGraphinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; Allocate(Int_t newsize)TGraphprotectedvirtual; AllocateArrays(Int_t Narrays, Int_t arraySize)TGraphprotected; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF1 *f)TGraphvirtual; Browse(TBrowser *b) overrideTGraphvirtual; CheckedHash()TObjectinline; Chisquare(TF1 *f1, Option_t *option="""") constTGraphvirtual; Class()TGraphstatic; Class_Name()TGraphstatic; Class_Version()TGraphinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareArg(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareRadius(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareX(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareY(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) constTGraphvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin)TGraphprotectedvirtual; CopyPoints(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin)TGraphprotectedvirtual; CtorAllocate()TGraphprotected; DeclFileName()TGraphinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph-members.html:51,Guid,Guide,51,doc/master/classTGraph-members.html,https://root.cern,https://root.cern/doc/master/classTGraph-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph2D Member List. This is the complete list of members for TGraph2D, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF2 *f, Double_t c1=1)TGraph2Dvirtual; AddPoint(Double_t x, Double_t y, Double_t z)TGraph2Dinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF2 *f)TGraph2Dvirtual; Browse(TBrowser *) overrideTGraph2Dvirtual; Build(Int_t n)TGraph2Dprotected; CheckedHash()TObjectinline; Class()TGraph2Dstatic; Class_Name()TGraph2Dstatic; Class_Version()TGraph2Dinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTGraph2Dvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CreateInterpolator(Bool_t oldInterp)TGraph2Dprivate; DeclFileName()TGraph2Dinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DirectoryAutoAdd(TDirectory *)TGraph2Dvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTGraph2Dvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option=""P0"") overrideTGraph2Dvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTGraph2Dprivate; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2D-members.html:51,Guid,Guide,51,doc/master/classTGraph2D-members.html,https://root.cern,https://root.cern/doc/master/classTGraph2D-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph2DErrors Member List. This is the complete list of members for TGraph2DErrors, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF2 *f, Double_t c1=1)TGraph2Dvirtual; AddPoint(Double_t x, Double_t y, Double_t z)TGraph2Dinlinevirtual; AddPointError(Double_t x, Double_t y, Double_t z, Double_t ex=0., Double_t ey=0., Double_t ez=0.)TGraph2DErrorsvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF2 *f)TGraph2Dvirtual; Browse(TBrowser *) overrideTGraph2Dvirtual; Build(Int_t n)TGraph2Dprotected; CheckedHash()TObjectinline; Class()TGraph2DErrorsstatic; Class_Name()TGraph2DErrorsstatic; Class_Version()TGraph2DErrorsinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTGraph2Dvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CreateInterpolator(Bool_t oldInterp)TGraph2Dprivate; DeclFileName()TGraph2DErrorsinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DirectoryAutoAdd(TDirectory *)TGraph2Dvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTGraph2Dvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option=""P0"") overrideTGraph2Dvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTGr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2DErrors-members.html:51,Guid,Guide,51,doc/master/classTGraph2DErrors-members.html,https://root.cern,https://root.cern/doc/master/classTGraph2DErrors-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphAsymmErrors Member List. This is the complete list of members for TGraphAsymmErrors, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *f, Double_t c1=1)TGraphvirtual; AddPoint(Double_t x, Double_t y)TGraphinlinevirtual; AddPointError(Double_t x, Double_t y, Double_t exl=0., Double_t exh=0., Double_t eyl=0., Double_t eyh=0.)TGraphAsymmErrorsvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; Allocate(Int_t size) overrideTGraphAsymmErrorsprotectedvirtual; AllocateArrays(Int_t Narrays, Int_t arraySize)TGraphprotected; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF1 *f) overrideTGraphAsymmErrorsvirtual; BayesDivide(const TH1 *pass, const TH1 *total, Option_t *opt="""")TGraphAsymmErrorsvirtual; Browse(TBrowser *b) overrideTGraphvirtual; CheckedHash()TObjectinline; Chisquare(TF1 *f1, Option_t *option="""") constTGraphvirtual; Class()TGraphAsymmErrorsstatic; Class_Name()TGraphAsymmErrorsstatic; Class_Version()TGraphAsymmErrorsinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareArg(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareRadius(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareX(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareY(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const overrideTGraphAsymmErrorsvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideTGraphAsymmEr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphAsymmErrors-members.html:51,Guid,Guide,51,doc/master/classTGraphAsymmErrors-members.html,https://root.cern,https://root.cern/doc/master/classTGraphAsymmErrors-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphBentErrors Member List. This is the complete list of members for TGraphBentErrors, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *f, Double_t c1=1)TGraphvirtual; AddPoint(Double_t x, Double_t y)TGraphinlinevirtual; AddPointError(Double_t x, Double_t y, Double_t exl, Double_t exh, Double_t eyl, Double_t eyh, Double_t exld=0, Double_t exhd=0, Double_t eyld=0, Double_t eyhd=0)TGraphBentErrorsvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; Allocate(Int_t size) overrideTGraphBentErrorsinlineprotectedvirtual; AllocateArrays(Int_t Narrays, Int_t arraySize)TGraphprotected; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF1 *f) overrideTGraphBentErrorsvirtual; Browse(TBrowser *b) overrideTGraphvirtual; CheckedHash()TObjectinline; Chisquare(TF1 *f1, Option_t *option="""") constTGraphvirtual; Class()TGraphBentErrorsstatic; Class_Name()TGraphBentErrorsstatic; Class_Version()TGraphBentErrorsinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareArg(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareRadius(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareX(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareY(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const overrideTGraphBentErrorsvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideTGraphBentErrorsprotectedvirtual; CopyPoints(Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphBentErrors-members.html:51,Guid,Guide,51,doc/master/classTGraphBentErrors-members.html,https://root.cern,https://root.cern/doc/master/classTGraphBentErrors-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphDelaunay Member List. This is the complete list of members for TGraphDelaunay, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TGraphDelaunaystatic; Class_Name()TGraphDelaunaystatic; Class_Version()TGraphDelaunayinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; ComputeZ(Double_t x, Double_t y)TGraphDelaunay; Copy(TObject &named) const overrideTNamedvirtual; CreateTrianglesDataStructure()TGraphDelaunayprotected; DeclFileName()TGraphDelaunayinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Enclose(Int_t T1, Int_t T2, Int_t T3, Int_t Ex) constTGraphDelaunayprotected; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; fAllTriTGraphDelaunayprotected; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fDistTGraphDelaunayprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fGraph2DTGraphDelaunayprotected; fHullPointsTGraphDelau",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphDelaunay-members.html:51,Guid,Guide,51,doc/master/classTGraphDelaunay-members.html,https://root.cern,https://root.cern/doc/master/classTGraphDelaunay-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphErrors Member List. This is the complete list of members for TGraphErrors, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *f, Double_t c1=1)TGraphvirtual; AddPoint(Double_t x, Double_t y)TGraphinlinevirtual; AddPointError(Double_t x, Double_t y, Double_t ex=0., Double_t ey=0.)TGraphErrorsvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; Allocate(Int_t size) overrideTGraphErrorsinlineprotectedvirtual; AllocateArrays(Int_t Narrays, Int_t arraySize)TGraphprotected; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF1 *f) overrideTGraphErrorsvirtual; ApplyX(TF1 *f)TGraphErrorsvirtual; Browse(TBrowser *b) overrideTGraphvirtual; CalculateScanfFields(const char *fmt)TGraphErrorsstatic; CheckedHash()TObjectinline; Chisquare(TF1 *f1, Option_t *option="""") constTGraphvirtual; Class()TGraphErrorsstatic; Class_Name()TGraphErrorsstatic; Class_Version()TGraphErrorsinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareArg(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareRadius(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareX(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareY(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const overrideTGraphErrorsvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideTGraphErrorsprotectedvirtual; CopyPoints(Double_t **arrays, Int_t ibegin, Int_t iend, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphErrors-members.html:51,Guid,Guide,51,doc/master/classTGraphErrors-members.html,https://root.cern,https://root.cern/doc/master/classTGraphErrors-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphMultiErrors Member List. This is the complete list of members for TGraphMultiErrors, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *f, Double_t c1=1)TGraphvirtual; AddPoint(Double_t x, Double_t y)TGraphinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddYError(Int_t np, const Double_t *eyL=nullptr, const Double_t *eyH=nullptr)TGraphMultiErrorsvirtual; Allocate(Int_t size) overrideTGraphMultiErrorsprotectedvirtual; AllocateArrays(Int_t Narrays, Int_t arraySize)TGraphprotected; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF1 *f) overrideTGraphMultiErrorsvirtual; BayesDivide(const TH1 *pass, const TH1 *total, Option_t *opt="""")TGraphMultiErrorsvirtual; Browse(TBrowser *b) overrideTGraphvirtual; CalcYErrorsSum() constTGraphMultiErrorsprotected; CheckedHash()TObjectinline; Chisquare(TF1 *f1, Option_t *option="""") constTGraphvirtual; Class()TGraphMultiErrorsstatic; Class_Name()TGraphMultiErrorsstatic; Class_Version()TGraphMultiErrorsinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareArg(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareRadius(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareX(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareY(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const overrideTGraphMultiErrorsvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors-members.html:51,Guid,Guide,51,doc/master/classTGraphMultiErrors-members.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphPainter Member List. This is the complete list of members for TGraphPainter, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TGraphPainterstatic; Class_Name()TGraphPainterstatic; Class_Version()TGraphPainterinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; ComputeLogs(Int_t npoints, Int_t opt)TGraphPainter; Copy(TObject &object) constTObjectvirtual; DeclFileName()TGraphPainterinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DistancetoPrimitiveHelper(TGraph *theGraph, Int_t px, Int_t py) overrideTGraphPaintervirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawPanelHelper(TGraph *theGraph) overrideTGraphPaintervirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; ExecuteEventHelper(TGraph *theGraph, Int_t event, Int_t px, Int_t py) overrideTGraphPaintervirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgMaxPointsPerLineTGraphPainterprotectedstatic; fgObjectSta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphPainter-members.html:51,Guid,Guide,51,doc/master/classTGraphPainter-members.html,https://root.cern,https://root.cern/doc/master/classTGraphPainter-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphPolar Member List. This is the complete list of members for TGraphPolar, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *f, Double_t c1=1)TGraphvirtual; AddPoint(Double_t x, Double_t y)TGraphinlinevirtual; AddPointError(Double_t x, Double_t y, Double_t ex=0., Double_t ey=0.)TGraphErrorsvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; Allocate(Int_t size) overrideTGraphErrorsinlineprotectedvirtual; AllocateArrays(Int_t Narrays, Int_t arraySize)TGraphprotected; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF1 *f) overrideTGraphErrorsvirtual; ApplyX(TF1 *f)TGraphErrorsvirtual; Browse(TBrowser *b) overrideTGraphvirtual; CalculateScanfFields(const char *fmt)TGraphErrorsstatic; CheckedHash()TObjectinline; Chisquare(TF1 *f1, Option_t *option="""") constTGraphvirtual; Class()TGraphPolarstatic; Class_Name()TGraphPolarstatic; Class_Version()TGraphPolarinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareArg(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareRadius(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareX(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareY(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const overrideTGraphErrorsvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideTGraphErrorsprotectedvirtual; CopyPoints(Double_t **arrays, Int_t ibegin, Int_t iend, Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphPolar-members.html:51,Guid,Guide,51,doc/master/classTGraphPolar-members.html,https://root.cern,https://root.cern/doc/master/classTGraphPolar-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphQQ Member List. This is the complete list of members for TGraphQQ, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *f, Double_t c1=1)TGraphvirtual; AddPoint(Double_t x, Double_t y)TGraphinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; Allocate(Int_t newsize)TGraphprotectedvirtual; AllocateArrays(Int_t Narrays, Int_t arraySize)TGraphprotected; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF1 *f)TGraphvirtual; Browse(TBrowser *b) overrideTGraphvirtual; CheckedHash()TObjectinline; Chisquare(TF1 *f1, Option_t *option="""") constTGraphvirtual; Class()TGraphQQstatic; Class_Name()TGraphQQstatic; Class_Version()TGraphQQinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareArg(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareRadius(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareX(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareY(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) constTGraphvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin)TGraphprotectedvirtual; CopyPoints(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin)TGraphprotectedvirtual; CtorAllocate()TGraphprotected; DeclFileName()TGraphQQinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphQQ-members.html:51,Guid,Guide,51,doc/master/classTGraphQQ-members.html,https://root.cern,https://root.cern/doc/master/classTGraphQQ-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH1 Member List. This is the complete list of members for TH1, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""")TH1virtual; Add(const TH1 *h1, Double_t c1=1)TH1virtual; Add(const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1)TH1virtual; AddBinContent(Int_t bin)TH1virtual; AddBinContent(Int_t bin, Double_t w)TH1virtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0)TH1virtual; BufferFill(Double_t x, Double_t w)TH1protectedvirtual; Build()TH1private; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLabels(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckConsistency(const TH1 *h1, const TH1 *h2)TH1protectedstatic; CheckConsistentSubAxes(const TAxis *a1, Int_t firstBin1, Int_t lastBin1, const TAxis *a2, Int_t firstBin2=0, Int_t lastBin2=0)TH1protectedstatic; CheckedHash()TObjectinline; CheckEqualAxes(const TAxis *a1, const TAxis *a2)TH1protectedstatic; Chi2Test(const TH1 *h2, Option_t *option=""UU"", Double_t *res=nullptr) constTH1virtual; Chi2TestX(const TH1 *h2, Double_t &chi2, Int_t &ndf, Int_t &igood, Option_t *option=""UU"", Double_t *res=nullptr) constTH1virtual; Chisquare(TF1 *f1, Option_t *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1-members.html:51,Guid,Guide,51,doc/master/classTH1-members.html,https://root.cern,https://root.cern/doc/master/classTH1-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH1F Member List. This is the complete list of members for TH1F, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""")TH1virtual; Add(const TH1 *h1, Double_t c1=1)TH1virtual; Add(const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1)TH1virtual; AddAt(Float_t c, Int_t i)TArrayF; AddBinContent(Int_t bin) overrideTH1Finlinevirtual; AddBinContent(Int_t bin, Double_t w) overrideTH1Finlinevirtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; Adopt(Int_t n, Float_t *array)TArrayF; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; At(Int_t i) constTArrayFinline; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; BoundsOk(const char *where, Int_t at) constTArrayinlineprotected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0)TH1virtual; BufferFill(Double_t x, Double_t w)TH1protectedvirtual; Build()TH1private; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLabels(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckConsistency(const TH1 *h1, const TH1 *h2)TH1protectedstatic; CheckConsistentSubAxes(const TAxis *a1, Int_t firstBin1, Int_t lastBin1, const TAxis *a2, Int_t firstBin2=0, Int_t lastBin2=0)TH1protectedstatic; CheckedHash()TObjectinline; CheckEqualAxes(const TAxis *a1, const TAxis *a2)TH1protectedstatic; Chi2Test(const TH1 *h2, Option_t *option=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1F-members.html:51,Guid,Guide,51,doc/master/classTH1F-members.html,https://root.cern,https://root.cern/doc/master/classTH1F-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH1I Member List. This is the complete list of members for TH1I, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""")TH1virtual; Add(const TH1 *h1, Double_t c1=1)TH1virtual; Add(const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1)TH1virtual; AddAt(Int_t c, Int_t i)TArrayI; AddBinContent(Int_t bin) overrideTH1Ivirtual; AddBinContent(Int_t bin, Double_t w) overrideTH1Ivirtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; Adopt(Int_t n, Int_t *array)TArrayI; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; At(Int_t i) constTArrayIinline; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; BoundsOk(const char *where, Int_t at) constTArrayinlineprotected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0)TH1virtual; BufferFill(Double_t x, Double_t w)TH1protectedvirtual; Build()TH1private; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLabels(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckConsistency(const TH1 *h1, const TH1 *h2)TH1protectedstatic; CheckConsistentSubAxes(const TAxis *a1, Int_t firstBin1, Int_t lastBin1, const TAxis *a2, Int_t firstBin2=0, Int_t lastBin2=0)TH1protectedstatic; CheckedHash()TObjectinline; CheckEqualAxes(const TAxis *a1, const TAxis *a2)TH1protectedstatic; Chi2Test(const TH1 *h2, Option_t *option=""UU"", Double_t *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1I-members.html:51,Guid,Guide,51,doc/master/classTH1I-members.html,https://root.cern,https://root.cern/doc/master/classTH1I-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH2 Member List. This is the complete list of members for TH2, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""")TH1virtual; Add(const TH1 *h1, Double_t c1=1)TH1virtual; Add(const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1)TH1virtual; AddBinContent(Int_t bin) overrideTH2virtual; AddBinContent(Int_t bin, Double_t w) overrideTH2virtual; AddBinContent(Int_t binx, Int_t biny)TH2virtual; AddBinContent(Int_t binx, Int_t biny, Double_t w)TH2virtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0) overrideTH2virtual; BufferFill(Double_t x, Double_t y, Double_t w)TH2protectedvirtual; BufferFill(Double_t, Double_t) overrideTH2inlineprotectedvirtual; Build()TH1private; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLabels(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckConsistency(const TH1 *h1, const TH1 *h2)TH1protectedstatic; CheckConsistentSubAxes(const TAxis *a1, Int_t firstBin1, Int_t lastBin1, const TAxis *a2, Int_t firstBin2=0, Int_t lastBin2=0)TH1protectedstatic; CheckedHash()TObjectinline; CheckEqualAxes(const TAxis *a1, const TAxis *a2)TH1protectedstatic; Chi2Test(const TH1 *h2, Option_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2-members.html:51,Guid,Guide,51,doc/master/classTH2-members.html,https://root.cern,https://root.cern/doc/master/classTH2-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH2F Member List. This is the complete list of members for TH2F, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""")TH1virtual; Add(const TH1 *h1, Double_t c1=1)TH1virtual; Add(const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1)TH1virtual; AddAt(Float_t c, Int_t i)TArrayF; AddBinContent(Int_t bin) overrideTH2Finlinevirtual; AddBinContent(Int_t bin, Double_t w) overrideTH2Finlinevirtual; AddBinContent(Int_t binx, Int_t biny) overrideTH2Finlinevirtual; AddBinContent(Int_t binx, Int_t biny, Double_t w) overrideTH2Finlinevirtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; Adopt(Int_t n, Float_t *array)TArrayF; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; At(Int_t i) constTArrayFinline; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; BoundsOk(const char *where, Int_t at) constTArrayinlineprotected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0) overrideTH2virtual; BufferFill(Double_t x, Double_t y, Double_t w)TH2protectedvirtual; BufferFill(Double_t, Double_t) overrideTH2inlineprotectedvirtual; Build()TH1private; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLabels(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckConsistency(const TH1 *h1, const TH1 *h2)TH1protectedstatic; CheckConsistentSubAxes(const TAxis *a1, Int_t firstBin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2F-members.html:51,Guid,Guide,51,doc/master/classTH2F-members.html,https://root.cern,https://root.cern/doc/master/classTH2F-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH3 Member List. This is the complete list of members for TH3, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""")TH1virtual; Add(const TH1 *h1, Double_t c1=1)TH1virtual; Add(const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1)TH1virtual; AddBinContent(Int_t bin) overrideTH3virtual; AddBinContent(Int_t bin, Double_t w) overrideTH3virtual; AddBinContent(Int_t binx, Int_t biny, Int_t binz)TH3virtual; AddBinContent(Int_t binx, Int_t biny, Int_t binz, Double_t w)TH3virtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0) overrideTH3virtual; BufferFill(Double_t x, Double_t y, Double_t z, Double_t w)TH3protectedvirtual; BufferFill(Double_t, Double_t) overrideTH3inlineprotectedvirtual; BufferFill(Double_t, Double_t, Double_t)TH3inlineprotectedvirtual; Build()TH1private; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLabels(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckConsistency(const TH1 *h1, const TH1 *h2)TH1protectedstatic; CheckConsistentSubAxes(const TAxis *a1, Int_t firstBin1, Int_t lastBin1, const TAxis *a2, Int_t firstBin2=0, Int_t lastBin2=0)TH1protectedstatic; CheckedHash()TObjectinli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3-members.html:51,Guid,Guide,51,doc/master/classTH3-members.html,https://root.cern,https://root.cern/doc/master/classTH3-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH3D Member List. This is the complete list of members for TH3D, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""")TH1virtual; Add(const TH1 *h1, Double_t c1=1)TH1virtual; Add(const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1)TH1virtual; AddAt(Double_t c, Int_t i)TArrayD; AddBinContent(Int_t bin) overrideTH3Dinlinevirtual; AddBinContent(Int_t bin, Double_t w) overrideTH3Dinlinevirtual; AddBinContent(Int_t binx, Int_t biny, Int_t binz) overrideTH3Dinlinevirtual; AddBinContent(Int_t binx, Int_t biny, Int_t binz, Double_t w) overrideTH3Dinlinevirtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; Adopt(Int_t n, Double_t *array)TArrayD; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; At(Int_t i) constTArrayDinline; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; BoundsOk(const char *where, Int_t at) constTArrayinlineprotected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0) overrideTH3virtual; BufferFill(Double_t x, Double_t y, Double_t z, Double_t w)TH3protectedvirtual; BufferFill(Double_t, Double_t) overrideTH3inlineprotectedvirtual; BufferFill(Double_t, Double_t, Double_t)TH3inlineprotectedvirtual; Build()TH1private; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLabels(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckConsistenc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3D-members.html:51,Guid,Guide,51,doc/master/classTH3D-members.html,https://root.cern,https://root.cern/doc/master/classTH3D-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THStack Member List. This is the complete list of members for THStack, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TH1 *h, Option_t *option="""")THStackvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; begin() constTHStack; Browse(TBrowser *b) overrideTHStackvirtual; BuildAndPaint(Option_t *chopt, Bool_t paint, Bool_t rebuild_stack=kFALSE)THStackprotected; BuildPrimitives(Option_t *chopt="""", Bool_t rebuild_stack=kFALSE)THStackinline; BuildStack()THStackprotected; CheckedHash()TObjectinline; Class()THStackstatic; Class_Name()THStackstatic; Class_Version()THStackinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()THStackinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTHStackvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *chopt="""") overrideTHStackvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; end() constTHStackinline; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fHistogramTHStackp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHStack-members.html:51,Guid,Guide,51,doc/master/classTHStack-members.html,https://root.cern,https://root.cern/doc/master/classTHStack-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THistPainter Member List. This is the complete list of members for THistPainter, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()THistPainterstatic; Class_Name()THistPainterstatic; Class_Version()THistPainterinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; ComputeRenderingRegions(TAxis *pAxis, Int_t nPixels, bool isLog)THistPaintervirtual; Copy(TObject &object) constTObjectvirtual; DeclFileName()THistPainterinlinestatic; DefineColorLevels(Int_t ndivz)THistPaintervirtual; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTHistPaintervirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawPanel() overrideTHistPaintervirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTHistPaintervirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fCurrentF3THistPainterprotected; fCutsTHistPainterprotected; fCutsOptTHistPainterprotected; fFunctionsTHistPainterprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fgPainterTV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHistPainter-members.html:51,Guid,Guide,51,doc/master/classTHistPainter-members.html,https://root.cern,https://root.cern/doc/master/classTHistPainter-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THn Member List. This is the complete list of members for THn, including all inherited members. AbstractMethod(const char *method) constTObject; Add(const THnBase *h, Double_t c=1.)THnBase; Add(const TH1 *hist, Double_t c=1.)THnBase; AddBinContent(const Int_t *idx, Double_t v=1.)THninline; AddBinContent(Long64_t bin, Double_t v=1.) overrideTHninlinevirtual; AddBinError2(Long64_t bin, Double_t e2) overrideTHninlinevirtual; AddInternal(const THnBase *h, Double_t c, Bool_t rebinned)THnBaseprotected; AddToTObjectTable(TObject *)TObjectprivatestatic; AllocCoordBuf() constTHnprotected; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTHnBasevirtual; CalculateErrors(Bool_t calc=kTRUE)THnBaseinline; CheckConsistency(const THnBase *h, const char *tag) constTHnBaseprotected; CheckedHash()TObjectinline; Class()THnstatic; Class_Name()THnstatic; Class_Version()THninlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneEmpty(const char *name, const char *title, const TObjArray *axes, Bool_t keepTargetAxis) constTHnBaseprotected; Compare(const TObject *obj) const overrideTNamedvirtual; ComputeIntegral()THnBase; Copy(TObject &named) const overrideTNamedvirtual; CreateHist(const char *name, const char *title, const TObjArray *axes, Bool_t keepTargetAxis) constTHnBaseprotected; CreateHn(const char *name, const char *title, const TH1 *h1)THninlinestatic; CreateHn(const char *name, const char *title, const THnBase *hn)THninlinestatic; CreateHnAny(const char *name, const char *title, const TH1 *h1, Bool_t sparse, Int_t chunkSize=1024 *16)THnBaseprotectedstatic; CreateHnAny(const char *name, const char *title, const THnBase *hn, Bool_t sparse, Int_t chunkSize=1024 *16)THnBaseprotectedstatic; CreateIter(Bool_t respectAxisRange) const overrideTHnvirtual; DeclFile",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHn-members.html:51,Guid,Guide,51,doc/master/classTHn-members.html,https://root.cern,https://root.cern/doc/master/classTHn-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THnSparse Member List. This is the complete list of members for THnSparse, including all inherited members. AbstractMethod(const char *method) constTObject; Add(const THnBase *h, Double_t c=1.)THnBase; Add(const TH1 *hist, Double_t c=1.)THnBase; AddBinContent(const Int_t *idx, Double_t v=1.)THnSparseinline; AddBinContent(Long64_t bin, Double_t v=1.) overrideTHnSparsevirtual; AddBinError2(Long64_t bin, Double_t e2) overrideTHnSparsevirtual; AddChunk()THnSparseprotected; AddInternal(const THnBase *h, Double_t c, Bool_t rebinned)THnBaseprotected; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTHnBasevirtual; CalculateErrors(Bool_t calc=kTRUE)THnBaseinline; CheckConsistency(const THnBase *h, const char *tag) constTHnBaseprotected; CheckedHash()TObjectinline; Class()THnSparsestatic; Class_Name()THnSparsestatic; Class_Version()THnSparseinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneEmpty(const char *name, const char *title, const TObjArray *axes, Bool_t keepTargetAxis) constTHnBaseprotected; Compare(const TObject *obj) const overrideTNamedvirtual; ComputeIntegral()THnBase; Copy(TObject &named) const overrideTNamedvirtual; CreateHist(const char *name, const char *title, const TObjArray *axes, Bool_t keepTargetAxis) constTHnBaseprotected; CreateHnAny(const char *name, const char *title, const TH1 *h1, Bool_t sparse, Int_t chunkSize=1024 *16)THnBaseprotectedstatic; CreateHnAny(const char *name, const char *title, const THnBase *hn, Bool_t sparse, Int_t chunkSize=1024 *16)THnBaseprotectedstatic; CreateIter(Bool_t respectAxisRange) const overrideTHnSparsevirtual; CreateSparse(const char *name, const char *title, const TH1 *h1, Int_t chunkSize=1024 *16)THnSparseinlinestatic; CreateSparse(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHnSparse-members.html:51,Guid,Guide,51,doc/master/classTHnSparse-members.html,https://root.cern,https://root.cern/doc/master/classTHnSparse-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THttpServer Member List. This is the complete list of members for THttpServer, including all inherited members. AbstractMethod(const char *method) constTObject; AddLocation(const char *prefix, const char *path)THttpServer; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; BuildWSEntryPage()THttpServerprotected; CheckedHash()TObjectinline; Class()THttpServerstatic; Class_Name()THttpServerstatic; Class_Version()THttpServerinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; CreateEngine(const char *engine)THttpServer; CreateItem(const char *fullname, const char *title)THttpServer; CreateServerThread()THttpServer; DeclFileName()THttpServerinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; ExecuteHttp(std::shared_ptr< THttpCallArg > arg)THttpServer; ExecuteWS(std::shared_ptr< THttpCallArg > &arg, Bool_t external_thrd=kFALSE, Bool_t wait_process=kFALSE)THttpServer; fArgsTHttpServerprotected; Fatal(const char *method,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHttpServer-members.html:51,Guid,Guide,51,doc/master/classTHttpServer-members.html,https://root.cern,https://root.cern/doc/master/classTHttpServer-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TInterpreter Member List. This is the complete list of members for TInterpreter, including all inherited members. AbstractMethod(const char *method) constTObject; AddAvailableIndentifiers(TSeqCollection &)=0TInterpreterpure virtual; AddIncludePath(const char *path)=0TInterpreterpure virtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AutoLoad(const char *classname, Bool_t knowDictNotLoaded=kFALSE)=0TInterpreterpure virtual; AutoLoad(const std::type_info &typeinfo, Bool_t knowDictNotLoaded=kFALSE)=0TInterpreterpure virtual; AutoLoadCallBack_t typedefTInterpreter; AutoParse(const char *cls)=0TInterpreterpure virtual; BaseClassInfo_ClassInfo(BaseClassInfo_t *) const =0TInterpreterpure virtual; BaseClassInfo_Delete(BaseClassInfo_t *) constTInterpreterinlinevirtual; BaseClassInfo_Factory(ClassInfo_t *) constTInterpreterinlinevirtual; BaseClassInfo_Factory(ClassInfo_t *, ClassInfo_t *) constTInterpreterinlinevirtual; BaseClassInfo_FullName(BaseClassInfo_t *) constTInterpreterinlinevirtual; BaseClassInfo_Name(BaseClassInfo_t *) constTInterpreterinlinevirtual; BaseClassInfo_Next(BaseClassInfo_t *) constTInterpreterinlinevirtual; BaseClassInfo_Next(BaseClassInfo_t *, int) constTInterpreterinlinevirtual; BaseClassInfo_Offset(BaseClassInfo_t *, void *=nullptr, bool=true) constTInterpreterinlinevirtual; BaseClassInfo_Property(BaseClassInfo_t *) constTInterpreterinlinevirtual; BaseClassInfo_Tagnum(BaseClassInfo_t *) constTInterpreterinlinevirtual; BaseClassInfo_TmpltName(BaseClassInfo_t *) constTInterpreterinlinevirtual; Browse(TBrowser *b)TObjectvirtual; Calc(const char *line, EErrorCode *error=nullptr)=0TInterpreterpure virtual; CallFunc_Delete(CallFunc_t *) constTInterpreterinlinevirtual; CallFunc_Exec(CallFunc_t *, void *) constTInterpreterinlinevirtual; CallFunc_Exec(CallFunc_t *, void *, TInterpreterValue &) constTInterpr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTInterpreter-members.html:51,Guid,Guide,51,doc/master/classTInterpreter-members.html,https://root.cern,https://root.cern/doc/master/classTInterpreter-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TKey Member List. This is the complete list of members for TKey, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTKeyvirtual; Build(TDirectory *motherDir, const char *classname, Long64_t filepos)TKeyprotected; CheckedHash()TObjectinline; Class()TKeystatic; Class_Name()TKeystatic; Class_Version()TKeyinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; Create(Int_t nbytes, TFile *f=nullptr)TKeyprotectedvirtual; DeclFileName()TKeyinlinestatic; Delete(Option_t *option="""") overrideTKeyvirtual; DeleteBuffer()TKeyvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTKeyprivate; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fBufferTKeyprotected; fBufferRefTKeyprotected; fClassNameTKeyprotected; fCycleTKeyprotected; fDatimeTKeyprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer) overrideTKeyvirtual; FindObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKey-members.html:51,Guid,Guide,51,doc/master/classTKey-members.html,https://root.cern,https://root.cern/doc/master/classTKey-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLatex Member List. This is the complete list of members for TLatex, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; Anal1(const TextSpec_t &spec, const Char_t *t, Int_t length)TLatexprotected; Analyse(Double_t x, Double_t y, const TextSpec_t &spec, const Char_t *t, Int_t length)TLatexprotected; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; CheckLatexSyntax(TString &text)TLatexprotected; Class()TLatexstatic; Class_Name()TLatexstatic; Class_Version()TLatexinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &text) const overrideTLatexvirtual; TText::TAttText::Copy(TAttText &atttext) constTAttText; TAttLine::Copy(TAttLine &attline) constTAttLine; DeclFileName()TLatexinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTTextvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawCircle(Double_t x1, Double_t y1, Double_t r, const TextSpec_t &spec)TLatexprotected; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawLatex(Double_t x, Double_t y, const char *text)TLatex; DrawLatexNDC(Double_t x, Double_t y, const char *text)TLatex; DrawLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2, const TextSpec_t &spec)TLatexprotected; DrawParenthesis(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, const TextSpec_t &spec)TLatexprotected; DrawPoly",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLatex-members.html:51,Guid,Guide,51,doc/master/classTLatex-members.html,https://root.cern,https://root.cern/doc/master/classTLatex-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLeaf Member List. This is the complete list of members for TLeaf, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTLeafvirtual; CanGenerateOffsetArray()TLeafinlinevirtual; CheckedHash()TObjectinline; Class()TLeafstatic; Class_Name()TLeafstatic; Class_Version()TLeafinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; Counts_t typedefTLeafprotected; DeclFileName()TLeafinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeserializeType enum nameTLeaf; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTLeaf; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Export(TClonesArray *, Int_t)TLeafinlinevirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fBranchTLeafprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBasket(TBuffer &b)TLeafvirtual; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeaf-members.html:51,Guid,Guide,51,doc/master/classTLeaf-members.html,https://root.cern,https://root.cern/doc/master/classTLeaf-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLegend Member List. This is the complete list of members for TLegend, including all inherited members. AbstractMethod(const char *method) constTObject; AddEntry(const TObject *obj, const char *label="""", Option_t *option=""lpf"")TLegend; AddEntry(const char *name, const char *label="""", Option_t *option=""lpf"")TLegend; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TLegendstatic; Class_Name()TLegendstatic; Class_Version()TLegendinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTLegendvirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; ConvertNDCtoPad()TPavevirtual; Copy(TObject &obj) const overrideTLegendvirtual; TPave::TAttLine::Copy(TAttLine &attline) constTAttLine; TPave::TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TLegendinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeleteEntry()TLegendvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTPavevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTLegendvirtual; DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TBoxvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"")TPavevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EditEntryAttFill()TLegendvirtual; EditEntryAttLine()TLegendvirtual; EditEntryAttMarker()TLegendvirtual; EditEntryAttText()TLegendvirtual; Error(const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLegend-members.html:51,Guid,Guide,51,doc/master/classTLegend-members.html,https://root.cern,https://root.cern/doc/master/classTLegend-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLegendEntry Member List. This is the complete list of members for TLegendEntry, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TLegendEntrystatic; Class_Name()TLegendEntrystatic; Class_Version()TLegendEntryinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &obj) const overrideTLegendEntryvirtual; TAttText::Copy(TAttText &atttext) constTAttText; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; DeclFileName()TLegendEntryinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fgDtorOnlyTObjectprivatestatic; fg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLegendEntry-members.html:51,Guid,Guide,51,doc/master/classTLegendEntry-members.html,https://root.cern,https://root.cern/doc/master/classTLegendEntry-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLine Member List. This is the complete list of members for TLine, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TLinestatic; Class_Name()TLinestatic; Class_Version()TLineinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &line) const overrideTLinevirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; DeclFileName()TLineinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTLinevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TLinevirtual; DrawLineNDC(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TLinevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTLinevirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLine-members.html:51,Guid,Guide,51,doc/master/classTLine-members.html,https://root.cern,https://root.cern/doc/master/classTLine-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TList Member List. This is the complete list of members for TList, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj) overrideTListinlinevirtual; Add(TObject *obj, Option_t *opt)TListinlinevirtual; AddAfter(const TObject *after, TObject *obj) overrideTListvirtual; AddAfter(TObjLink *after, TObject *obj)TListvirtual; AddAll(const TCollection *col)TCollectionvirtual; AddAt(TObject *obj, Int_t idx) overrideTListvirtual; AddBefore(const TObject *before, TObject *obj) overrideTListvirtual; AddBefore(TObjLink *before, TObject *obj)TListvirtual; AddFirst(TObject *obj) overrideTListvirtual; AddFirst(TObject *obj, Option_t *opt)TListvirtual; AddLast(TObject *obj) overrideTListvirtual; AddLast(TObject *obj, Option_t *opt)TListvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddVector(TObject *obj1,...)TCollection; After(const TObject *obj) const overrideTListvirtual; AppendPad(Option_t *option="""")TObjectvirtual; AssertClass(TClass *cl) constTCollection; At(Int_t idx) const overrideTListvirtual; Before(const TObject *obj) const overrideTListvirtual; begin() constTCollectioninline; Browse(TBrowser *b) overrideTCollectionvirtual; Capacity() constTCollectioninline; Changed()TSeqCollectioninlineprotectedvirtual; CheckedHash()TObjectinline; Class()TListstatic; Class_Name()TListstatic; Class_Version()TListinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTListvirtual; Clone(const char *newname="""") const overrideTCollectionvirtual; Compare(const TObject *obj) const overrideTCollectionvirtual; Contains(const char *name) constTCollectioninline; Contains(const TObject *obj) constTCollectioninline; Copy(TObject &object) constTObjectvirtual; DeclFileName()TListinlinestatic; Delete(Option_t *option="""") overrideTListvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTList-members.html:51,Guid,Guide,51,doc/master/classTList-members.html,https://root.cern,https://root.cern/doc/master/classTList-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMVA::DataLoader Member List. This is the complete list of members for TMVA::DataLoader, including all inherited members. AbstractMethod(const char *method) constTObject; AddBackgroundTestEvent(const std::vector< Double_t > &event, Double_t weight=1.0)TMVA::DataLoader; AddBackgroundTrainingEvent(const std::vector< Double_t > &event, Double_t weight=1.0)TMVA::DataLoader; AddBackgroundTree(TTree *background, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)TMVA::DataLoader; AddBackgroundTree(TString datFileB, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)TMVA::DataLoader; AddBackgroundTree(TTree *background, Double_t weight, const TString &treetype)TMVA::DataLoader; AddCut(const TString &cut, const TString &className="""")TMVA::DataLoader; AddCut(const TCut &cut, const TString &className="""")TMVA::DataLoader; AddDataSet(DataSetInfo &)TMVA::DataLoader; AddDataSet(const TString &)TMVA::DataLoader; AddEvent(const TString &className, Types::ETreeType tt, const std::vector< Double_t > &event, Double_t weight)TMVA::DataLoader; AddOptionsXMLTo(void *parent) constTMVA::Configurable; AddPreDefVal(const T &)TMVA::Configurable; AddPreDefVal(const TString &optname, const T &)TMVA::Configurable; AddRegressionTarget(const TString &expression, const TString &title="""", const TString &unit="""", Double_t min=0, Double_t max=0)TMVA::DataLoaderinline; AddRegressionTree(TTree *tree, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)TMVA::DataLoaderinline; AddSignalTestEvent(const std::vector< Double_t > &event, Double_t weight=1.0)TMVA::DataLoader; AddSignalTrainingEvent(const std::vector< Double_t > &event, Double_t weight=1.0)TMVA::DataLoader; AddSignalTree(TTree *signal, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)TMVA::DataLoader; AddSignalTree(TString datFileS, Double_t weight=1.0, Types::ETreeType treetype=Typ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataLoader-members.html:51,Guid,Guide,51,doc/master/classTMVA_1_1DataLoader-members.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataLoader-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMVA::Factory Member List. This is the complete list of members for TMVA::Factory, including all inherited members. AbstractMethod(const char *method) constTObject; AddOptionsXMLTo(void *parent) constTMVA::Configurable; AddPreDefVal(const T &)TMVA::Configurable; AddPreDefVal(const TString &optname, const T &)TMVA::Configurable; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AssignOpt(const TString &name, T &valAssign) constTMVA::Configurableprivate; BookMethod(DataLoader *loader, TString theMethodName, TString methodTitle, TString theOption="""")TMVA::Factory; BookMethod(DataLoader *loader, Types::EMVA theMethod, TString methodTitle, TString theOption="""")TMVA::Factory; BookMethod(DataLoader *, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString)TMVA::Factoryinline; BookMethodWeightfile(DataLoader *dataloader, TMVA::Types::EMVA methodType, const TString &weightfile)TMVA::Factoryprivate; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; CheckForUnusedOptions() constTMVA::Configurable; Class()TMVA::Factorystatic; Class_Name()TMVA::Factorystatic; Class_Version()TMVA::Factoryinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Configurable(const TString &theOption="""")TMVA::Configurable; Copy(TObject &named) const overrideTNamedvirtual; CrossValidationTMVA::Factoryfriend; DeclareOptionRef(T &ref, const TString &name, const TString &desc="""")TMVA::Configurable; DeclareOptionRef(T *&ref, Int_t size, const TString &name, const TString &desc="""")TMVA::Configurable; DeclareOptionRef(T &ref, const TString &name, const TString &desc)TMVA::Configurable; DeclareOptionRef(T *&ref, Int_t size, const TString &name, const TString &desc)TMVA::Configurable; Decl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Factory-members.html:51,Guid,Guide,51,doc/master/classTMVA_1_1Factory-members.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Factory-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMarker Member List. This is the complete list of members for TMarker, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TMarkerstatic; Class_Name()TMarkerstatic; Class_Version()TMarkerinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &marker) const overrideTMarkervirtual; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; DeclFileName()TMarkerinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DisplayMarkerLineWidths()TMarkerstatic; DisplayMarkerTypes()TMarkerstatic; DistancetoPrimitive(Int_t px, Int_t py) overrideTMarkervirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTMarkervirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawMarker(Double_t x, Double_t y)TMarkervirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTMarkervirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fMarkerColorTAttMarkerprotected; fMarkerSizeTAttMar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMarker-members.html:51,Guid,Guide,51,doc/master/classTMarker-members.html,https://root.cern,https://root.cern/doc/master/classTMarker-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMathText Member List. This is the complete list of members for TMathText, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TMathTextstatic; Class_Name()TMathTextstatic; Class_Version()TMathTextinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &text) const overrideTMathTextvirtual; TText::TAttText::Copy(TAttText &atttext) constTAttText; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TMathTextinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTTextvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawMathText(Double_t x, Double_t y, const char *text)TMathText; DrawText(Double_t x, Double_t y, const char *text)TTextvirtual; DrawText(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const char *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTTextvirtual; Fatal(const char *method, const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMathText-members.html:51,Guid,Guide,51,doc/master/classTMathText-members.html,https://root.cern,https://root.cern/doc/master/classTMathText-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMinuit Member List. This is the complete list of members for TMinuit, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; BuildArrays(Int_t maxpar=15)TMinuitvirtual; CheckedHash()TObjectinline; Class()TMinuitstatic; Class_Name()TMinuitstatic; Class_Version()TMinuitinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTMinuitvirtual; Command(const char *command)TMinuitvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Contour(Int_t npoints=10, Int_t pa1=0, Int_t pa2=1)TMinuitvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TMinuitinlinestatic; DefineParameter(Int_t parNo, const char *name, Double_t initVal, Double_t initErr, Double_t lowerLimit, Double_t upperLimit)TMinuitvirtual; Delete(Option_t *option="""")TObjectvirtual; DeleteArrays()TMinuitvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Eval(Int_t npar, Double_t *grad, Double_t &fval, Double_t *par, Int_t flag)TMinuitvirtual; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; fAlimTMinuit; fAminTMinuit; fApsiTMinuit; Fatal(const char *method, const char *m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuit-members.html:51,Guid,Guide,51,doc/master/classTMinuit-members.html,https://root.cern,https://root.cern/doc/master/classTMinuit-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMultiGraph Member List. This is the complete list of members for TMultiGraph, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TGraph *graph, Option_t *chopt="""")TMultiGraphvirtual; Add(TMultiGraph *multigraph, Option_t *chopt="""")TMultiGraphvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; begin() constTMultiGraph; Browse(TBrowser *b) overrideTMultiGraphvirtual; CheckedHash()TObjectinline; Class()TMultiGraphstatic; Class_Name()TMultiGraphstatic; Class_Version()TMultiGraphinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TMultiGraphinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTMultiGraphvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *chopt="""") overrideTMultiGraphvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; end() constTMultiGraphinline; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFunctionsTMultiGraphprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fGraphsTMultiGraphprotected; fHistogramTMultiGraphprotected; Fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiGraph-members.html:51,Guid,Guide,51,doc/master/classTMultiGraph-members.html,https://root.cern,https://root.cern/doc/master/classTMultiGraph-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TNamed Member List. This is the complete list of members for TNamed, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TNamedstatic; Class_Name()TNamedstatic; Class_Version()TNamedinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TNamedinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fNameTNamedprotected; fTitleTNamedprotected; fUniqueIDTObjectprivate; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIconName() constTObjectvirtual; GetName() const overrideTNamedinli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNamed-members.html:51,Guid,Guide,51,doc/master/classTNamed-members.html,https://root.cern,https://root.cern/doc/master/classTNamed-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TNtuple Member List. This is the complete list of members for TNtuple, including all inherited members. AbstractMethod(const char *method) constTObject; AddAllocationCount(UInt_t count)TTreeinline; AddBranchToCache(const char *bname, bool subbranches=false)TTreevirtual; AddBranchToCache(TBranch *branch, bool subbranches=false)TTreevirtual; AddClone(TTree *)TTree; AddFriend(const char *treename, const char *filename="""")TTreevirtual; AddFriend(const char *treename, TFile *file)TTreevirtual; AddFriend(TTree *tree, const char *alias="""", bool warn=false)TTreevirtual; AddTotBytes(Int_t tot)TTreeinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddZipBytes(Int_t zip)TTreeinlinevirtual; AppendPad(Option_t *option="""")TObjectvirtual; AutoSave(Option_t *option="""")TTreevirtual; Branch(const char *name, T *obj, Int_t bufsize=32000, Int_t splitlevel=99)TTreeinline; Branch(const char *name, T **addobj, Int_t bufsize=32000, Int_t splitlevel=99)TTreeinline; Branch(TCollection *list, Int_t bufsize=32000, Int_t splitlevel=99, const char *name="""")TTreevirtual; Branch(TList *list, Int_t bufsize=32000, Int_t splitlevel=99)TTreevirtual; Branch(const char *folder, Int_t bufsize=32000, Int_t splitlevel=99)TTreevirtual; Branch(const char *name, void *address, const char *leaflist, Int_t bufsize=32000)TTreevirtual; Branch(const char *name, char *address, const char *leaflist, Int_t bufsize=32000)TTreeinline; Branch(const char *name, Longptr_t address, const char *leaflist, Int_t bufsize=32000)TTreeinline; Branch(const char *name, int address, const char *leaflist, Int_t bufsize=32000)TTreeinline; Branch(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99)TTreevirtual; Branch(const char *name, const char *classname, T *obj, Int_t bufsize=32000, Int_t splitlevel=99)TTreeinline; Branch(const char *name, const char *classname, T **addobj, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNtuple-members.html:51,Guid,Guide,51,doc/master/classTNtuple-members.html,https://root.cern,https://root.cern/doc/master/classTNtuple-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TObjArray Member List. This is the complete list of members for TObjArray, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj) overrideTObjArrayinlinevirtual; AddAfter(const TObject *after, TObject *obj) overrideTObjArrayvirtual; AddAll(const TCollection *col)TCollectionvirtual; AddAt(TObject *obj, Int_t idx) overrideTObjArrayvirtual; AddAtAndExpand(TObject *obj, Int_t idx)TObjArrayvirtual; AddAtFree(TObject *obj)TObjArrayvirtual; AddBefore(const TObject *before, TObject *obj) overrideTObjArrayvirtual; AddFirst(TObject *obj) overrideTObjArrayvirtual; AddLast(TObject *obj) overrideTObjArrayvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddVector(TObject *obj1,...)TCollection; After(const TObject *obj) const overrideTObjArrayvirtual; AppendPad(Option_t *option="""")TObjectvirtual; AssertClass(TClass *cl) constTCollection; At(Int_t idx) const overrideTObjArrayinlinevirtual; Before(const TObject *obj) const overrideTObjArrayvirtual; begin() constTCollectioninline; BinarySearch(TObject *obj, Int_t upto=kMaxInt)TObjArrayvirtual; BoundsOk(const char *where, Int_t at) constTObjArrayinlineprotected; Browse(TBrowser *b) overrideTCollectionvirtual; Capacity() constTCollectioninline; Changed()TSeqCollectioninlineprotectedvirtual; CheckedHash()TObjectinline; Class()TObjArraystatic; Class_Name()TObjArraystatic; Class_Version()TObjArrayinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTObjArrayvirtual; Clone(const char *newname="""") const overrideTCollectionvirtual; Compare(const TObject *obj) const overrideTCollectionvirtual; Compress()TObjArrayvirtual; Contains(const char *name) constTCollectioninline; Contains(const TObject *obj) constTCollectioninline; Copy(TObject &object) constTObjectvirtual; DeclFileName()TObjArrayinlinestatic; Delete(Option_t *option="""") overrideTObjArrayvirtual; Distan",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObjArray-members.html:51,Guid,Guide,51,doc/master/classTObjArray-members.html,https://root.cern,https://root.cern/doc/master/classTObjArray-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TObject Member List. This is the complete list of members for TObject, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TObjectstatic; Class_Name()TObjectstatic; Class_Version()TObjectinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; DeclFileName()TObjectinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fUniqueIDTObjectprivate; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIconName() constTObjectvirtual; GetName() constTObjectvirtual; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectStat()TObjectstatic; GetOption() constTObjectinli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObject-members.html:51,Guid,Guide,51,doc/master/classTObject-members.html,https://root.cern,https://root.cern/doc/master/classTObject-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPad Member List. This is the complete list of members for TPad, including all inherited members. AbsCoordinates(Bool_t set) overrideTPadinlinevirtual; AbsPixeltoX(Int_t px) overrideTPadinlinevirtual; AbsPixeltoXY(Int_t xpixel, Int_t ypixel, Double_t &x, Double_t &y)TPadvirtual; AbsPixeltoY(Int_t py) overrideTPadinlinevirtual; AbstractMethod(const char *method) constTObject; Add(TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) overrideTPadvirtual; AddExec(const char *name, const char *command) overrideTPadvirtual; AddFirst(TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) overrideTPadvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; AutoExec()TPadvirtual; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; Browse(TBrowser *b) overrideTPadvirtual; BuildLegend(Double_t x1=0.3, Double_t y1=0.21, Double_t x2=0.3, Double_t y2=0.21, const char *title="""", Option_t *option="""") overrideTPadvirtual; cd(Int_t subpadnumber=0) overrideTPadvirtual; ChangedBy(const char *method)TQObjectinlinevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; CheckedHash()TObjectinline; Class()TPadstatic; Class_Name()TPadstatic; Class_Version()TPadinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTPadvirtual; Clip(Float_t *x, Float_t *y, Float_t xclipl, Float_t yclipb, Float_t xclipr, Float_t yclipt)TPadvirtual; Clip(Double_t *x, Double_t *y, Double_t xclipl, Double_t yclipb, Double_t xclipr, Double_t yclipt) overrideTPadvirtual; ClippingCode(Double_t x, Double_t y, Double_t xcl1, Double_t ycl1, Double_t xcl2, Double_t ycl2)TPadvirtual; ClipPolygon(Int_t n, Double_t *x, Double_t *y, Int_t nn, Double_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPad-members.html:51,Guid,Guide,51,doc/master/classTPad-members.html,https://root.cern,https://root.cern/doc/master/classTPad-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPaveLabel Member List. This is the complete list of members for TPaveLabel, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TPaveLabelstatic; Class_Name()TPaveLabelstatic; Class_Version()TPaveLabelinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; ConvertNDCtoPad()TPavevirtual; Copy(TObject &pavelabel) const overrideTPaveLabelvirtual; TPave::TAttLine::Copy(TAttLine &attline) constTAttLine; TPave::TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TPaveLabelinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTPavevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTPaveLabelvirtual; DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TBoxvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"")TPavevirtual; DrawPaveLabel(Double_t x1, Double_t y1, Double_t x2, Double_t y2, const char *label, Option_t *option="""")TPaveLabelvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMetho",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPaveLabel-members.html:51,Guid,Guide,51,doc/master/classTPaveLabel-members.html,https://root.cern,https://root.cern/doc/master/classTPaveLabel-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPaveText Member List. This is the complete list of members for TPaveText, including all inherited members. AbstractMethod(const char *method) constTObject; AddBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TPaveTextvirtual; AddLine(Double_t x1=0, Double_t y1=0, Double_t x2=0, Double_t y2=0)TPaveTextvirtual; AddText(Double_t x1, Double_t y1, const char *label)TPaveTextvirtual; AddText(const char *label)TPaveTextvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TPaveTextstatic; Class_Name()TPaveTextstatic; Class_Version()TPaveTextinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTPaveTextvirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; ConvertNDCtoPad()TPavevirtual; TPave::Copy(TObject &pave) const overrideTPavevirtual; TPave::TBox::TAttLine::Copy(TAttLine &attline) constTAttLine; TPave::TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TPaveTextinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeleteText()TPaveTextvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTPavevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTPaveTextvirtual; DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TBoxvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawFile(const char *filename, Option_t *option="""")TPaveTextvirtual; DrawPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"")TPavevirtual; Dump() cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPaveText-members.html:51,Guid,Guide,51,doc/master/classTPaveText-members.html,https://root.cern,https://root.cern/doc/master/classTPaveText-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPavesText Member List. This is the complete list of members for TPavesText, including all inherited members. AbstractMethod(const char *method) constTObject; AddBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TPaveTextvirtual; AddLine(Double_t x1=0, Double_t y1=0, Double_t x2=0, Double_t y2=0)TPaveTextvirtual; AddText(Double_t x1, Double_t y1, const char *label)TPaveTextvirtual; AddText(const char *label)TPaveTextvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TPavesTextstatic; Class_Name()TPavesTextstatic; Class_Version()TPavesTextinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTPaveTextvirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; ConvertNDCtoPad()TPavevirtual; TPave::Copy(TObject &pave) const overrideTPavevirtual; TPave::TBox::TAttLine::Copy(TAttLine &attline) constTAttLine; TPave::TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TPavesTextinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeleteText()TPaveTextvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTPavevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTPavesTextvirtual; DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TBoxvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawFile(const char *filename, Option_t *option="""")TPaveTextvirtual; DrawPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"")TPavevirtual; Dump",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPavesText-members.html:51,Guid,Guide,51,doc/master/classTPavesText-members.html,https://root.cern,https://root.cern/doc/master/classTPavesText-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPolyLine Member List. This is the complete list of members for TPolyLine, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TPolyLinestatic; Class_Name()TPolyLinestatic; Class_Version()TPolyLineinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &polyline) const overrideTPolyLinevirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TPolyLineinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTPolyLinevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTPolyLinevirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawPolyLine(Int_t n, Double_t *x, Double_t *y, Option_t *option="""")TPolyLinevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTPolyLinevirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fgDtorOnlyTObjectprivatestatic; fgObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPolyLine-members.html:51,Guid,Guide,51,doc/master/classTPolyLine-members.html,https://root.cern,https://root.cern/doc/master/classTPolyLine-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TProfile Member List. This is the complete list of members for TProfile, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""") overrideTProfilevirtual; Add(const TH1 *h1, Double_t c1=1) overrideTProfilevirtual; Add(const TH1 *h1, const TH1 *h2, Double_t c1=1, Double_t c2=1) overrideTProfilevirtual; AddAt(Double_t c, Int_t i)TArrayD; AddBinContent(Int_t bin) overrideTH1Dinlinevirtual; AddBinContent(Int_t bin, Double_t w) overrideTH1Dinlinevirtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; Adopt(Int_t n, Double_t *array)TArrayD; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; Approximate(Bool_t approx=kTRUE)TProfilestatic; At(Int_t i) constTArrayDinline; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; BoundsOk(const char *where, Int_t at) constTArrayinlineprotected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0) overrideTProfilevirtual; BufferFill(Double_t, Double_t) overrideTProfileinlineprotectedvirtual; BufferFill(Double_t x, Double_t y, Double_t w)TProfileprotectedvirtual; Build()TH1private; BuildOptions(Double_t ymin, Double_t ymax, Option_t *option)TProfile; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLabels(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckConsistency(const TH1 *h1, const TH1 *h2)TH1protectedstatic; CheckConsi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile-members.html:51,Guid,Guide,51,doc/master/classTProfile-members.html,https://root.cern,https://root.cern/doc/master/classTProfile-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TProfile2D Member List. This is the complete list of members for TProfile2D, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""") overrideTProfile2Dvirtual; Add(const TH1 *h1, Double_t c1=1) overrideTProfile2Dvirtual; Add(const TH1 *h1, const TH1 *h2, Double_t c1=1, Double_t c2=1) overrideTProfile2Dvirtual; AddAt(Double_t c, Int_t i)TArrayD; AddBinContent(Int_t bin) overrideTH2Dinlinevirtual; AddBinContent(Int_t bin, Double_t w) overrideTH2Dinlinevirtual; AddBinContent(Int_t binx, Int_t biny) overrideTH2Dinlinevirtual; AddBinContent(Int_t binx, Int_t biny, Double_t w) overrideTH2Dinlinevirtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; Adopt(Int_t n, Double_t *array)TArrayD; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; Approximate(Bool_t approx=kTRUE)TProfile2Dstatic; At(Int_t i) constTArrayDinline; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; BoundsOk(const char *where, Int_t at) constTArrayinlineprotected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0) overrideTProfile2Dvirtual; BufferFill(Double_t, Double_t) overrideTProfile2Dinlineprotectedvirtual; BufferFill(Double_t, Double_t, Double_t) overrideTProfile2Dinlineprotectedvirtual; BufferFill(Double_t x, Double_t y, Double_t z, Double_t w)TProfile2Dprotectedvirtual; Build()TH1private; BuildOptions(Double_t zmin, Double_t zmax, Option_t *option)TProfile2D; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D-members.html:51,Guid,Guide,51,doc/master/classTProfile2D-members.html,https://root.cern,https://root.cern/doc/master/classTProfile2D-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TProfile3D Member List. This is the complete list of members for TProfile3D, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""") overrideTProfile3Dvirtual; Add(const TH1 *h1, Double_t c1=1) overrideTProfile3Dvirtual; Add(const TH1 *h1, const TH1 *h2, Double_t c1=1, Double_t c2=1) overrideTProfile3Dvirtual; AddAt(Double_t c, Int_t i)TArrayD; AddBinContent(Int_t bin) overrideTH3Dinlinevirtual; AddBinContent(Int_t bin, Double_t w) overrideTH3Dinlinevirtual; AddBinContent(Int_t binx, Int_t biny, Int_t binz) overrideTH3Dinlinevirtual; AddBinContent(Int_t binx, Int_t biny, Int_t binz, Double_t w) overrideTH3Dinlinevirtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; Adopt(Int_t n, Double_t *array)TArrayD; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; Approximate(Bool_t approx=kTRUE)TProfile3Dstatic; At(Int_t i) constTArrayDinline; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; BoundsOk(const char *where, Int_t at) constTArrayinlineprotected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0) overrideTProfile3Dvirtual; BufferFill(Double_t, Double_t) overrideTProfile3Dinlineprotectedvirtual; BufferFill(Double_t, Double_t, Double_t) overrideTProfile3Dinlineprotectedvirtual; BufferFill(Double_t, Double_t, Double_t, Double_t) overrideTProfile3Dinlineprotectedvirtual; BufferFill(Double_t x, Double_t y, Double_t z, Double_t t, Double_t w)TProfile3Dprotectedvirtual; Build()TH1private; Bui",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile3D-members.html:51,Guid,Guide,51,doc/master/classTProfile3D-members.html,https://root.cern,https://root.cern/doc/master/classTProfile3D-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPython Member List. This is the complete list of members for TPython, including all inherited members. Eval(const char *expr) R__DEPRECATED(6TPythonstatic; Exec(const char *cmd, std::any *result=nullptr, std::string const &resultName=""_anyresult"")TPythonstatic; ExecScript(const char *name, int argc=0, const char **argv=nullptr)TPythonstatic; Import(const char *name)TPythonstatic; Initialize()TPythonprivatestatic; LoadMacro(const char *name)TPythonstatic. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:18 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPython-members.html:51,Guid,Guide,51,doc/master/classTPython-members.html,https://root.cern,https://root.cern/doc/master/classTPython-members.html,2,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TQObject Member List. This is the complete list of members for TQObject, including all inherited members. AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; ChangedBy(const char *method)TQObjectinlinevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; Class()TQObjectstatic; Class_Name()TQObjectstatic; Class_Version()TQObjectinlinestatic; CollectClassSignalLists(TList &list, TClass *cls)TQObject; CompressName(const char *method_name)TQObjectprotectedstatic; Connect(const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObject; Connect(TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connect(const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connected(const char *)TQObjectinlinevirtual; ConnectToClass(TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; ConnectToClass(const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; DeclFileName()TQObjectinlinestatic; Destroyed()TQObjectinlinevirtual; Disconnect(const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr)TQObject; Disconnect(TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr)TQObjectstatic; Disconnect(const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr)TQObjectstatic; Disconnected(const char *)TQObjectinlinevirtual; Emit(const char *signal, const T &arg)TQObjectinline; Emit(const char *signal)TQObjectinline; E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQObject-members.html:51,Guid,Guide,51,doc/master/classTQObject-members.html,https://root.cern,https://root.cern/doc/master/classTQObject-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TROOT Member List. This is the complete list of members for TROOT, including all inherited members. ::ROOT::Internal::TROOTAllocatorTROOTfriend; AbstractMethod(const char *method) constTObject; Add(TObject *obj, Bool_t replace=kFALSE)TDirectoryinlinevirtual; AddClass(TClass *cl)TROOT; AddClassGenerator(TClassGenerator *gen)TROOT; AddDirectory(Bool_t add=kTRUE)TDirectorystatic; AddDirectoryStatus()TDirectorystatic; AddExtraInterpreterArgs(const std::vector< std::string > &args)TROOTstatic; AddToTObjectTable(TObject *)TObjectprivatestatic; AListOfEnums_t typedefTROOTprotected; Append(TObject *obj, Bool_t replace=kFALSE) overrideTROOTvirtual; AppendKey(TKey *)TDirectoryinlinevirtual; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTROOTvirtual; Build(TFile *motherFile=nullptr, TDirectory *motherDir=nullptr)TDirectoryinlinevirtual; BuildDirectory(TFile *motherFile, TDirectory *motherDir)TDirectoryprotected; cd()TDirectoryvirtual; cd(const char *path)TDirectoryvirtual; Cd(const char *path)TDirectorystatic; cd1(const char *path)TDirectoryprotected; Cd1(const char *path)TDirectoryprotectedstatic; CheckedHash()TObjectinline; Class()TROOTstatic; Class_Name()TROOTstatic; Class_Version()TROOTinlinestatic; ClassName() constTObjectvirtual; ClassSaved(TClass *cl)TROOT; CleanTargets()TDirectoryprotected; Clear(Option_t *option="""") overrideTDirectoryvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneObject(const TObject *obj, Bool_t autoadd=kTRUE)TDirectoryvirtual; Close(Option_t *option="""")TDirectoryvirtual; CloseFiles()TROOT; Compare(const TObject *obj) const overrideTNamedvirtual; ConvertVersionCode2Int(Int_t code)TROOTstatic; ConvertVersionInt2Code(Int_t v)TROOTstatic; Copy(TObject &) const overrideTDirectoryinlinevirtual; CurrentDirectory()TDirectorystatic; DeclFileName()TROOTinlinestatic; DecodeNameCycle(const char *namecycle, ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTROOT-members.html:51,Guid,Guide,51,doc/master/classTROOT-members.html,https://root.cern,https://root.cern/doc/master/classTROOT-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRandom Member List. This is the complete list of members for TRandom, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Binomial(Int_t ntot, Double_t prob)TRandomvirtual; BreitWigner(Double_t mean=0, Double_t gamma=1)TRandomvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Circle(Double_t &x, Double_t &y, Double_t r)TRandomvirtual; Class()TRandomstatic; Class_Name()TRandomstatic; Class_Version()TRandominlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TRandominlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Exp(Double_t tau)TRandomvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRandom-members.html:51,Guid,Guide,51,doc/master/classTRandom-members.html,https://root.cern,https://root.cern/doc/master/classTRandom-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRandom3 Member List. This is the complete list of members for TRandom3, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Binomial(Int_t ntot, Double_t prob)TRandomvirtual; BreitWigner(Double_t mean=0, Double_t gamma=1)TRandomvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Circle(Double_t &x, Double_t &y, Double_t r)TRandomvirtual; Class()TRandom3static; Class_Name()TRandom3static; Class_Version()TRandom3inlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TRandom3inlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Exp(Double_t tau)TRandomvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fCount624TRandom3private; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRandom3-members.html:51,Guid,Guide,51,doc/master/classTRandom3-members.html,https://root.cern,https://root.cern/doc/master/classTRandom3-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRint Member List. This is the complete list of members for TRint, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; ApplicationName() constTApplicationinlinevirtual; AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; Argc() constTApplicationinline; Argv() constTApplicationinline; Argv(Int_t index) constTApplication; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; Browse(TBrowser *b)TObjectvirtual; ChangedBy(const char *method)TQObjectinlinevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; CheckedHash()TObjectinline; Class()TRintstatic; Class_Name()TRintstatic; Class_Version()TRintinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; ClearInputFiles()TApplication; Clone(const char *newname="""") constTObjectvirtual; Close(TApplication *app)TApplicationprotectedstatic; CollectClassSignalLists(TList &list, TClass *cls)TQObject; Compare(const TObject *obj) constTObjectvirtual; CompressName(const char *method_name)TQObjectprotectedstatic; Connect(const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObject; Connect(TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connect(const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connected(const char *)TQObjectinlinevirtual; ConnectToClass(TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; ConnectToClass(const char *sender_class, const char *signal, TClass *receiver_class, void *rec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRint-members.html:51,Guid,Guide,51,doc/master/classTRint-members.html,https://root.cern,https://root.cern/doc/master/classTRint-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TScatter Member List. This is the complete list of members for TScatter, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TScatterstatic; Class_Name()TScatterstatic; Class_Version()TScatterinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; DeclFileName()TScatterinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTScattervirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTScattervirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fColorTScatterprotected; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fgDtorOnlyTObjectprivatestatic; fg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTScatter-members.html:51,Guid,Guide,51,doc/master/classTScatter-members.html,https://root.cern,https://root.cern/doc/master/classTScatter-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSeqCollection Member List. This is the complete list of members for TSeqCollection, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj) overrideTSeqCollectioninlinevirtual; AddAfter(const TObject *after, TObject *obj)=0TSeqCollectionpure virtual; AddAll(const TCollection *col)TCollectionvirtual; AddAt(TObject *obj, Int_t idx)=0TSeqCollectionpure virtual; AddBefore(const TObject *before, TObject *obj)=0TSeqCollectionpure virtual; AddFirst(TObject *obj)=0TSeqCollectionpure virtual; AddLast(TObject *obj)=0TSeqCollectionpure virtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddVector(TObject *obj1,...)TCollection; After(const TObject *obj) const =0TSeqCollectionpure virtual; AppendPad(Option_t *option="""")TObjectvirtual; AssertClass(TClass *cl) constTCollection; At(Int_t idx) const =0TSeqCollectionpure virtual; Before(const TObject *obj) const =0TSeqCollectionpure virtual; begin() constTCollectioninline; Browse(TBrowser *b) overrideTCollectionvirtual; Capacity() constTCollectioninline; Changed()TSeqCollectioninlineprotectedvirtual; CheckedHash()TObjectinline; Class()TSeqCollectionstatic; Class_Name()TSeqCollectionstatic; Class_Version()TSeqCollectioninlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") override=0TCollectionpure virtual; Clone(const char *newname="""") const overrideTCollectionvirtual; Compare(const TObject *obj) const overrideTCollectionvirtual; Contains(const char *name) constTCollectioninline; Contains(const TObject *obj) constTCollectioninline; Copy(TObject &object) constTObjectvirtual; DeclFileName()TSeqCollectioninlinestatic; Delete(Option_t *option="""") override=0TCollectionpure virtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSeqCollection-members.html:51,Guid,Guide,51,doc/master/classTSeqCollection-members.html,https://root.cern,https://root.cern/doc/master/classTSeqCollection-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStreamerInfo Member List. This is the complete list of members for TStreamerInfo, including all inherited members. AbstractMethod(const char *method) constTObject; AddReadAction(TStreamerInfoActions::TActionSequence *readSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddReadMemberWiseVecPtrAction(TStreamerInfoActions::TActionSequence *readSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddReadTextAction(TStreamerInfoActions::TActionSequence *readSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddToTObjectTable(TObject *)TObjectprivatestatic; AddWriteAction(TStreamerInfoActions::TActionSequence *writeSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddWriteMemberWiseVecPtrAction(TStreamerInfoActions::TActionSequence *writeSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddWriteTextAction(TStreamerInfoActions::TActionSequence *writeSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; Build(Bool_t isTransient=kFALSE) overrideTStreamerInfovirtual; BuildCheck(TFile *file=nullptr, Bool_t load=kTRUE) overrideTStreamerInfovirtual; BuildEmulated(TFile *file) overrideTStreamerInfovirtual; BuildFor(const TClass *cl) overrideTStreamerInfovirtual; BuildOld() overrideTStreamerInfovirtual; CallShowMembers(const void *obj, TMemberInspector &insp, Bool_t isTransient) const overrideTStreamerInfovirtual; CanDelete()TVirtualStreamerInfostatic; CanOptimize()TVirtualStreamerInfostatic; CheckedHash()TObjectinline; Class()TStreamerInfostatic; Class_Name()TStreamerInfostatic; Class_Version()TStreamerInfoinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""") overrideTStreamerInfovirtual; Clone(const char *newname="""") const overrideTStreamerInfovirtual; Compare(const TObject *obj) const overrideTNamedvirt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerInfo-members.html:51,Guid,Guide,51,doc/master/classTStreamerInfo-members.html,https://root.cern,https://root.cern/doc/master/classTStreamerInfo-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStyle Member List. This is the complete list of members for TStyle, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AxisChoice(Option_t *axis) constTStyle; Browse(TBrowser *b) overrideTStylevirtual; BuildStyles()TStylestatic; cd()TStylevirtual; CheckedHash()TObjectinline; Class()TStylestatic; Class_Name()TStylestatic; Class_Version()TStyleinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &style) const overrideTStylevirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TStyleinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTStylevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EPaperSize enum nameTStyle; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStyle-members.html:51,Guid,Guide,51,doc/master/classTStyle-members.html,https://root.cern,https://root.cern/doc/master/classTStyle-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSystem Member List. This is the complete list of members for TSystem, including all inherited members. Abort(int code=0)TSystemvirtual; AbstractMethod(const char *method) constTObject; AcceptConnection(int sock)TSystemvirtual; AccessPathName(const char *path, EAccessMode mode=kFileExists)TSystemvirtual; AddDynamicPath(const char *pathname)TSystemvirtual; AddFileHandler(TFileHandler *fh)TSystemvirtual; AddIncludePath(const char *includePath)TSystemvirtual; AddLinkedLibs(const char *linkedLib)TSystemvirtual; AddSignalHandler(TSignalHandler *sh)TSystemvirtual; AddStdExceptionHandler(TStdExceptionHandler *eh)TSystemvirtual; AddTimer(TTimer *t)TSystemvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AnnounceTcpService(int port, Bool_t reuse, int backlog, int tcpwindowsize=-1)TSystemvirtual; AnnounceUdpService(int port, int backlog)TSystemvirtual; AnnounceUnixService(int port, int backlog)TSystemvirtual; AnnounceUnixService(const char *sockpath, int backlog)TSystemvirtual; AppendPad(Option_t *option="""")TObjectvirtual; BaseName(const char *pathname)TSystemvirtual; Beep(Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE)TSystem; Browse(TBrowser *b)TObjectvirtual; cd(const char *path)TSysteminline; ChangeDirectory(const char *path)TSystemvirtual; CheckedHash()TObjectinline; Chmod(const char *file, UInt_t mode)TSystemvirtual; Class()TSystemstatic; Class_Name()TSystemstatic; Class_Version()TSysteminlinestatic; ClassName() constTObjectvirtual; CleanCompiledMacros()TSystemvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloseConnection(int sock, Bool_t force=kFALSE)TSystemvirtual; Closelog()TSystemvirtual; ClosePipe(FILE *pipe)TSystemvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompileMacro(const char *filename, Option_t *opt="""", const char *library_name="""", const char *bui",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystem-members.html:51,Guid,Guide,51,doc/master/classTSystem-members.html,https://root.cern,https://root.cern/doc/master/classTSystem-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TText Member List. This is the complete list of members for TText, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TTextstatic; Class_Name()TTextstatic; Class_Version()TTextinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &text) const overrideTTextvirtual; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TTextinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTTextvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawText(Double_t x, Double_t y, const char *text)TTextvirtual; DrawText(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const char *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTTextvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTText-members.html:51,Guid,Guide,51,doc/master/classTText-members.html,https://root.cern,https://root.cern/doc/master/classTText-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTimer Member List. This is the complete list of members for TTimer, including all inherited members. AbstractMethod(const char *method) constTObject; Activate()TSysEvtHandler; Activated()TSysEvtHandlerinlinevirtual; Add() overrideTTimerinlinevirtual; Added()TSysEvtHandlerinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; Browse(TBrowser *b)TObjectvirtual; ChangedBy(const char *method)TQObjectinlinevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; CheckedHash()TObjectinline; CheckTimer(const TTime &now)TTimer; Class()TTimerstatic; Class_Name()TTimerstatic; Class_Version()TTimerinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; CollectClassSignalLists(TList &list, TClass *cls)TQObject; Compare(const TObject *obj) constTObjectvirtual; CompressName(const char *method_name)TQObjectprotectedstatic; Connect(const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObject; Connect(TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connect(const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connected(const char *)TQObjectinlinevirtual; ConnectToClass(TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; ConnectToClass(const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; Copy(TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTimer-members.html:51,Guid,Guide,51,doc/master/classTTimer-members.html,https://root.cern,https://root.cern/doc/master/classTTimer-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTree Member List. This is the complete list of members for TTree, including all inherited members. AbstractMethod(const char *method) constTObject; AddAllocationCount(UInt_t count)TTreeinline; AddBranchToCache(const char *bname, bool subbranches=false)TTreevirtual; AddBranchToCache(TBranch *branch, bool subbranches=false)TTreevirtual; AddClone(TTree *)TTree; AddFriend(const char *treename, const char *filename="""")TTreevirtual; AddFriend(const char *treename, TFile *file)TTreevirtual; AddFriend(TTree *tree, const char *alias="""", bool warn=false)TTreevirtual; AddTotBytes(Int_t tot)TTreeinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddZipBytes(Int_t zip)TTreeinlinevirtual; AppendPad(Option_t *option="""")TObjectvirtual; AutoSave(Option_t *option="""")TTreevirtual; Branch(const char *name, T *obj, Int_t bufsize=32000, Int_t splitlevel=99)TTreeinline; Branch(const char *name, T **addobj, Int_t bufsize=32000, Int_t splitlevel=99)TTreeinline; Branch(TCollection *list, Int_t bufsize=32000, Int_t splitlevel=99, const char *name="""")TTreevirtual; Branch(TList *list, Int_t bufsize=32000, Int_t splitlevel=99)TTreevirtual; Branch(const char *folder, Int_t bufsize=32000, Int_t splitlevel=99)TTreevirtual; Branch(const char *name, void *address, const char *leaflist, Int_t bufsize=32000)TTreevirtual; Branch(const char *name, char *address, const char *leaflist, Int_t bufsize=32000)TTreeinline; Branch(const char *name, Longptr_t address, const char *leaflist, Int_t bufsize=32000)TTreeinline; Branch(const char *name, int address, const char *leaflist, Int_t bufsize=32000)TTreeinline; Branch(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99)TTreevirtual; Branch(const char *name, const char *classname, T *obj, Int_t bufsize=32000, Int_t splitlevel=99)TTreeinline; Branch(const char *name, const char *classname, T **addobj, Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTree-members.html:51,Guid,Guide,51,doc/master/classTTree-members.html,https://root.cern,https://root.cern/doc/master/classTTree-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTreePerfStats Member List. This is the complete list of members for TTreePerfStats, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; BasketList_t typedefTTreePerfStats; Browse(TBrowser *b) overrideTTreePerfStatsvirtual; CheckedHash()TObjectinline; Class()TTreePerfStatsstatic; Class_Name()TTreePerfStatsstatic; Class_Version()TTreePerfStatsinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; CurrentPerfStats()TVirtualPerfStatsstatic; DeclFileName()TTreePerfStatsinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTTreePerfStatsvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTTreePerfStatsvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EEventType enum nameTVirtualPerfStats; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; EventType(EEventType type)TVirtualPerfStatsstatic; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTTreePerfStatsvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBasketsInfoTTreePerfStatsprotected; fBitsTObjectprivate; fBranchIndexCacheTTreePerfStatsprotected; fBytesReadTTreePerfStatsprotected; fBytesReadExtraTTreePerfStatsprotected; fCompres",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreePerfStats-members.html:51,Guid,Guide,51,doc/master/classTTreePerfStats-members.html,https://root.cern,https://root.cern/doc/master/classTTreePerfStats-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTreeViewer Member List. This is the complete list of members for TTreeViewer, including all inherited members. AbstractMethod(const char *method) constTObject; Activate(Bool_t)TGFrameinlinevirtual; ActivateButtons(bool first, bool previous, bool next, bool last)TTreeViewer; AddFrame(TGFrame *f, TGLayoutHints *l=nullptr)TGCompositeFramevirtual; AddInput(UInt_t emask)TGFrame; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AppendTree(TTree *tree)TTreeViewer; AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; BindKey(const TGWindow *w, Int_t keycode, Int_t modifier) constTGMainFramevirtual; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; Browse(TBrowser *b)TObjectvirtual; BuildInterface()TTreeViewerprivate; ChangeBackground(Pixel_t back)TGFramevirtual; ChangedBy(const char *method)TQObjectinlinevirtual; ChangeOptions(UInt_t options) overrideTGCompositeFramevirtual; ChangeSubframesBackground(Pixel_t back)TGCompositeFramevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; CheckedHash()TObjectinline; Class()TTreeViewerstatic; Class_Name()TTreeViewerstatic; Class_Version()TTreeViewerinlinestatic; ClassName() constTObjectvirtual; Cleanup()TGCompositeFramevirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; CloseWindow() overrideTTreeViewervirtual; CollectClassSignalLists(TList &list, TClass *cls)TQObject; Compare(const TObject *obj) constTObjectvirtual; CompressName(const char *method_name)TQObjectprotectedstatic; Connect(const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObject; Connect(TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeViewer-members.html:51,Guid,Guide,51,doc/master/classTTreeViewer-members.html,https://root.cern,https://root.cern/doc/master/classTTreeViewer-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TUnixSystem Member List. This is the complete list of members for TUnixSystem, including all inherited members. Abort(int code=0) overrideTUnixSystemvirtual; AbstractMethod(const char *method) constTObject; AcceptConnection(int sock) overrideTUnixSystemvirtual; AccessPathName(const char *path, EAccessMode mode=kFileExists) overrideTUnixSystemvirtual; AddDynamicPath(const char *lib) overrideTUnixSystemvirtual; AddFileHandler(TFileHandler *fh) overrideTUnixSystemvirtual; AddIncludePath(const char *includePath)TSystemvirtual; AddLinkedLibs(const char *linkedLib)TSystemvirtual; AddSignalHandler(TSignalHandler *sh) overrideTUnixSystemvirtual; AddStdExceptionHandler(TStdExceptionHandler *eh)TSystemvirtual; AddTimer(TTimer *ti) overrideTUnixSystemvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AnnounceTcpService(int port, Bool_t reuse, int backlog, int tcpwindowsize=-1) overrideTUnixSystemvirtual; AnnounceUdpService(int port, int backlog) overrideTUnixSystemvirtual; AnnounceUnixService(int port, int backlog) overrideTUnixSystemvirtual; AnnounceUnixService(const char *sockpath, int backlog) overrideTUnixSystemvirtual; AppendPad(Option_t *option="""")TObjectvirtual; BaseName(const char *pathname)TSystemvirtual; Beep(Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE)TSystem; Browse(TBrowser *b)TObjectvirtual; cd(const char *path)TSysteminline; ChangeDirectory(const char *path) overrideTUnixSystemvirtual; CheckChilds()TUnixSystem; CheckDescriptors()TUnixSystem; CheckedHash()TObjectinline; CheckSignals(Bool_t sync)TUnixSystem; Chmod(const char *file, UInt_t mode) overrideTUnixSystemvirtual; Class()TUnixSystemstatic; Class_Name()TUnixSystemstatic; Class_Version()TUnixSysteminlinestatic; ClassName() constTObjectvirtual; CleanCompiledMacros()TSystemvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnixSystem-members.html:51,Guid,Guide,51,doc/master/classTUnixSystem-members.html,https://root.cern,https://root.cern/doc/master/classTUnixSystem-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualCollectionProxy Member List. This is the complete list of members for TVirtualCollectionProxy, including all inherited members. Allocate(UInt_t n, Bool_t forceDelete)=0TVirtualCollectionProxypure virtual; At(UInt_t idx)=0TVirtualCollectionProxypure virtual; Clear(const char *opt="""")=0TVirtualCollectionProxypure virtual; Commit(void *)=0TVirtualCollectionProxypure virtual; CopyIterator_t typedefTVirtualCollectionProxy; CreateIterators_t typedefTVirtualCollectionProxy; DeleteArray(void *p, Bool_t dtorOnly=kFALSE) constTVirtualCollectionProxyinlinevirtual; DeleteIterator_t typedefTVirtualCollectionProxy; DeleteTwoIterators_t typedefTVirtualCollectionProxy; Destructor(void *p, Bool_t dtorOnly=kFALSE) constTVirtualCollectionProxyinlinevirtual; EProperty enum nameTVirtualCollectionProxy; fClassTVirtualCollectionProxyprotected; fgIteratorArenaSizeTVirtualCollectionProxystatic; fPropertiesTVirtualCollectionProxyprotected; Generate() const =0TVirtualCollectionProxypure virtual; GetCollectionClass() constTVirtualCollectionProxyinlinevirtual; GetCollectionType() const =0TVirtualCollectionProxypure virtual; GetConversionReadMemberWiseActions(TClass *oldClass, Int_t version)=0TVirtualCollectionProxypure virtual; GetFunctionCopyIterator(Bool_t read=kTRUE)=0TVirtualCollectionProxypure virtual; GetFunctionCreateIterators(Bool_t read=kTRUE)=0TVirtualCollectionProxypure virtual; GetFunctionDeleteIterator(Bool_t read=kTRUE)=0TVirtualCollectionProxypure virtual; GetFunctionDeleteTwoIterators(Bool_t read=kTRUE)=0TVirtualCollectionProxypure virtual; GetFunctionNext(Bool_t read=kTRUE)=0TVirtualCollectionProxypure virtual; GetIncrement() const =0TVirtualCollectionProxypure virtual; GetProperties() constTVirtualCollectionProxyinlinevirtual; GetReadMemberWiseActions(Int_t version)=0TVirtualCollectionProxypure virtual; GetType() const =0TVirtualCollectionProxypure virtual; GetValueClas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualCollectionProxy-members.html:51,Guid,Guide,51,doc/master/classTVirtualCollectionProxy-members.html,https://root.cern,https://root.cern/doc/master/classTVirtualCollectionProxy-members.html,1,['Guid'],['Guide']
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualFFT Member List. This is the complete list of members for TVirtualFFT, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TVirtualFFTstatic; Class_Name()TVirtualFFTstatic; Class_Version()TVirtualFFTinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; DeclFileName()TVirtualFFTinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; FFT(Int_t ndim, Int_t *n, Option_t *option)TVirtualFFTstatic; fgDefaultTVirtualFFTprotectedstatic; fgDtorOnlyTObjectprivatestatic; fgFFTTVirtualFFTprotectedstatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fUniqueIDTObjectprivate; GetCurrentTransform()TVirtualFFTstatic; GetDefaultFFT()TVirtualFFTstatic; GetDrawOption(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualFFT-members.html:51,Guid,Guide,51,doc/master/classTVirtualFFT-members.html,https://root.cern,https://root.cern/doc/master/classTVirtualFFT-members.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualObject Member List. This is the complete list of members for TVirtualObject, including all inherited members. fClassTVirtualObject; fObjectTVirtualObject; GetClass() constTVirtualObjectinline; GetObject() constTVirtualObjectinline; operator=(const TVirtualObject &)=deleteTVirtualObjectprivate; TVirtualObject(const TVirtualObject &)=deleteTVirtualObjectprivate; TVirtualObject(TClass *cl)TVirtualObjectinline; ~TVirtualObject()TVirtualObjectinline. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:45 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualObject-members.html:51,Guid,Guide,51,doc/master/classTVirtualObject-members.html,https://root.cern,https://root.cern/doc/master/classTVirtualObject-members.html,2,['Guid'],['Guide']
Usability,". ROOT: Minuit2 Minimization Library. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Minuit2 Minimization LibraryMath. ; New Object-oriented implementation of the MINUIT minimization package. ; More information is available at the home page of the Minuit2 minimization package"". . Classes; class  ROOT::Minuit2::FCNAdapter< Function >;  template wrapped class for adapting to FCNBase signature More...;  ; class  ROOT::Minuit2::FCNBase;  Interface (abstract class) defining the function to be minimized, which has to be implemented by the user. More...;  ; class  ROOT::Minuit2::FCNGradAdapter< Function >;  template wrapped class for adapting to FCNBase signature a IGradFunction More...;  ; class  ROOT::Minuit2::FumiliBuilder;  Builds the FunctionMinimum using the Fumili method. More...;  ; class  ROOT::Minuit2::FumiliChi2FCN;  Extension of the FCNBase for the Fumili method. More...;  ; class  ROOT::Minuit2::FumiliErrorUpdator;  In the case of the Fumili algorithm the Error matrix (or the Hessian matrix containing the (approximate) second derivatives) is calculated using a linearization of the model function negleting second derivatives. More...;  ; class  ROOT::Minuit2::FumiliFCNAdapter< Function >;  template wrapped class for adapting to FumiliFCNBase signature More...;  ; class  ROOT::Minuit2::FumiliFCNBase;  Extension of the FCNBase for the Fumili method. More...;  ; class  ROOT::Minuit2::FumiliMaximumLikelihoodFCN;  Extension of the FCNBase for the Fumili method. More...;  ; class  ROOT::Minuit2::FumiliMinimizer;  Instantiates the seed generator and Minimum builder for the Fumili minimization method. More...;  ; class  ROOT::Minuit2::FumiliStandardChi2FCN;  Class implementing the standard chi square function, which is the sum of the squares of the figures-of-merit calculated for each measurement point, the individual figures-of-merit being: (the Value predicted by the model-measured Value)/standard deviation. More...;  ; clas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Minuit.html:68,Guid,Guide,68,doc/master/group__Minuit.html,https://root.cern,https://root.cern/doc/master/group__Minuit.html,1,['Guid'],['Guide']
Usability,. ROOT: Monte Carlo tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Monte Carlo tutorialsTutorials. ; Monte Carlo examples. . Files; file  CompareMasses.C;  Macro to compare masses in ROOT data base to the values from pdg pdg. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__mc.html:61,Guid,Guide,61,doc/master/group__tutorial__mc.html,https://root.cern,https://root.cern/doc/master/group__tutorial__mc.html,2,['Guid'],['Guide']
Usability,". ROOT: Multi-dimensional Minimization. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Enumerations ; Multi-dimensional MinimizationMath » MathCore | Math » MathMore » Numerical Algorithms. ; Classes implementing algorithms for multi-dimensional minimization. . Classes; class  ROOT::Math::BasicMinimizer;  Base Minimizer class, which defines the basic functionality of various minimizer implementations (apart from Minuit and Minuit2) It provides support for storing parameter values, step size, parameter transformation etc. More...;  ; class  ROOT::Math::GeneticMinimizer;  GeneticMinimizer. More...;  ; class  ROOT::Math::GSLMinimizer;  GSLMinimizer class. More...;  ; class  ROOT::Math::GSLMultiFit;  GSLMultiFit, internal class for implementing GSL non linear least square GSL fitting. More...;  ; class  ROOT::Math::GSLMultiFitFunctionAdapter< FuncVector >;  Class for adapting a C++ functor class to C function pointers used by GSL MultiFit Algorithm The templated C++ function class must implement: More...;  ; class  ROOT::Math::GSLMultiFitFunctionWrapper;  wrapper to a multi-dim function withtout derivatives for multi-dimensional minimization algorithm More...;  ; class  ROOT::Math::GSLMultiMinDerivFunctionWrapper;  Wrapper for a multi-dimensional function with derivatives used in GSL multidim minimization algorithm. More...;  ; struct  ROOT::Math::GSLMultiMinFunctionAdapter< UserFunc >;  Class for adapting any multi-dimension C++ functor class to C function pointers used by GSL MultiMin algorithms. More...;  ; class  ROOT::Math::GSLMultiMinFunctionWrapper;  wrapper to a multi-dim function withtout derivatives for multi-dimensional minimization algorithm More...;  ; class  ROOT::Math::GSLMultiMinimizer;  GSLMultiMinimizer class , for minimizing multi-dimensional function using derivatives. More...;  ; class  ROOT::Math::GSLNLSMinimizer;  GSLNLSMinimizer class for Non Linear Least Square fitting It Uses the Levemberg-Marquardt a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__MultiMin.html:70,Guid,Guide,70,doc/master/group__MultiMin.html,https://root.cern,https://root.cern/doc/master/group__MultiMin.html,1,['Guid'],['Guide']
Usability,". ROOT: Multicore tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Multicore tutorialsTutorials. ; These examples aim to illustrate the multicore features of ROOT, such as thread awareness and safety, multithreading and multiprocessing. . Files; file  imt001_parBranchProcessing.C;   Demonstrate how to activate and use the implicit parallelisation of TTree::GetEntry. ;  ; file  imt101_parTreeProcessing.C;   Illustrate the usage of the TTreeProcessorMT::Process method. ;  ; file  mp001_fillHistos.C;   Fill histograms in parallel and write them on file. ;  ; file  mp101_fillNtuples.C;   Fill n-tuples in distinct workers. ;  ; file  mp102_readNtuplesFillHistosAndFit.C;   Read n-tuples in distinct workers, fill histograms, merge them and fit. ;  ; file  mp103_processSelector.C;   Illustrate the usage of the multiproc TSelector interfaces with the h1 analysis example. ;  ; file  mp104_processH1.C;   Illustrate the usage of the multiproc to process the H1 analysis example. ;  ; file  mp105_processEntryList.C;   Illustrate the usage of the multiproc to process TEntryList with the H1 analysis example. ;  ; file  mp201_parallelHistoFill.C;   Parallel fill of a histogram This tutorial shows how a histogram can be filled in parallel with a multiprocess approach. ;  ; file  mp_H1_lambdas.C;   Lambdas used to check and fit the result of the H1 analysis. ;  ; file  mt001_fillHistos.C;   Fill histograms in parallel and write them on file. ;  ; file  mt101_fillNtuples.C;   Fill n-tuples in distinct workers. ;  ; file  mt102_readNtuplesFillHistosAndFit.C;   Read n-tuples in distinct workers, fill histograms, merge them and fit. ;  ; file  mt103_fillNtupleFromMultipleThreads.C;   Fill the same TNtuple from different threads. ;  ; file  mt201_parallelHistoFill.C;   Parallel fill of a histogram. ;  ; file  mt301_TTaskGroupSimple.C;   Shows how to run items of work asynchronously with a TTaskGroup. ;  ; file  mt304_fillHistos.C;   Fill hi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__multicore.html:59,Guid,Guide,59,doc/master/group__tutorial__multicore.html,https://root.cern,https://root.cern/doc/master/group__tutorial__multicore.html,1,['Guid'],['Guide']
Usability,. ROOT: NTuple-related classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files |; Classes ; NTuple-related classes. ; tuple classes designed for future ROOT version 7 (experimental!) . Files; file  libdaos_mock.cxx;  ; file  RCluster.cxx;  ; file  RCluster.hxx;  ; file  RClusterPool.cxx;  ; file  RClusterPool.hxx;  ; file  RColumn.cxx;  ; file  RColumn.hxx;  ; file  RColumnElement.cxx;  ; file  RColumnElementBase.hxx;  ; file  RDaos.cxx;  ; file  RDaos.hxx;  ; file  REntry.hxx;  ; file  RField.cxx;  ; file  RField.hxx;  ; file  RFieldBase.hxx;  ; file  RFieldVisitor.cxx;  ; file  RFieldVisitor.hxx;  ; file  RMiniFile.cxx;  ; file  RMiniFile.hxx;  ; file  RNTuple.cxx;  ; file  RNTuple.hxx;  ; file  RNTupleDescriptor.cxx;  ; file  RNTupleDescriptor.hxx;  ; file  RNTupleDescriptorFmt.cxx;  ; file  RNTupleDS.cxx;  ; file  RNTupleDS.hxx;  ; file  RNTupleFillContext.cxx;  ; file  RNTupleFillContext.hxx;  ; file  RNTupleFillStatus.hxx;  ; file  RNTupleImporter.cxx;  ; file  RNTupleImporter.hxx;  ; file  RNTupleImtTaskScheduler.hxx;  ; file  RNTupleIndex.cxx;  ; file  RNTupleIndex.hxx;  ; file  RNTupleInspector.cxx;  ; file  RNTupleInspector.hxx;  ; file  RNTupleMerger.cxx;  ; file  RNTupleMerger.hxx;  ; file  RNTupleMetrics.cxx;  ; file  RNTupleMetrics.hxx;  ; file  RNTupleModel.cxx;  ; file  RNTupleModel.hxx;  ; file  RNTupleParallelWriter.cxx;  ; file  RNTupleParallelWriter.hxx;  ; file  RNTupleProcessor.cxx;  ; file  RNTupleProcessor.hxx;  ; file  RNTupleReader.cxx;  ; file  RNTupleReader.hxx;  ; file  RNTupleReadOptions.hxx;  ; file  RNTupleSerialize.cxx;  ; file  RNTupleSerialize.hxx;  ; file  RNTupleUtil.cxx;  ; file  RNTupleUtil.hxx;  ; file  RNTupleView.cxx;  ; file  RNTupleView.hxx;  ; file  RNTupleWriteOptions.cxx;  ; file  RNTupleWriteOptions.hxx;  ; file  RNTupleWriteOptionsDaos.hxx;  ; file  RNTupleWriter.hxx;  ; file  RNTupleZip.hxx;  ; file  RPage.cxx;  ; file  RPage.hxx;  ; file  RPageAllocator.cxx;  ; file  RPageAlloc,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__NTuple.html:62,Guid,Guide,62,doc/master/group__NTuple.html,https://root.cern,https://root.cern/doc/master/group__NTuple.html,1,['Guid'],['Guide']
Usability,". ROOT: Namespace List. ; ROOT   6.08/07 Reference Guide ; . Namespace List . Here is a list of all namespaces with brief descriptions:; [detail level 1234];  NApplicationClassificationKeras;  NApplicationRegressionKeras;  Nbenchmarks;  NBidirMMapPipe_implNamespace for implementation details of BidirMMapPipe ;  Nclang;  NClassificationKeras;  ►NclingPrint a TSeq at the prompt: ;  ►Nutils;  NTransform;  NCppyy;  NDavix;  Ndemo;  Ndemoshelp;  NDynamicSlice;  Nexample;  Nfaddeeva_impl;  Nfildir;  Nfile;  Nfillrandom;  Nfirst;  Nfit1;  Nfit1_py;  NFitterUtilUtility functions to be used in the fitter classes ;  Nformula1;  Nframework;  NGenerateModel;  Ngeometry;  Ngerrors;  Ngraph;  Ngui_ex;  Nh1draw;  NHFit;  Nhsimple;  Nhsum;  Nlineset;  Nllvm;  NmakeQuickModel;  NMathNamespace for new Math classes and functions ;  NMemstat;  NMPCodeThis namespace prevents conflicts between MPCode::kError and ELogLevel::kError ;  Nmrt;  NMulticlassKeras;  Nmultifit;  Nna49geomfile;  Nna49view;  Nna49visible;  Nntuple1;  NnumberEntry;  Nparse_CSV_file_with_TTree_ReadStream;  NPoolCode;  ►NPyROOT;  NPyStrings;  NUtility;  Nqtexample;  NR6;  NR7;  Nratioplot;  NRegressionKeras;  ►NRgl;  NFgt;  NMc;  NPad;  NRooCintUtils;  NRooFit;  NRooFitShortHand;  NRooLinkedListImplDetails;  NRooSimultaneousAux;  ►NRooStatsNamespace for the RooStats classes ;  ►NHistFactory;  NConstraint;  NNumberCountingUtils;  ►NROOTThis namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce ;  NCocoaTutorials;  NDetail;  NExecutorUtils;  ►NExperimental;  NDetail;  NHist;  NInternal;  ►NFitNamespace for the fitting classes ;  NFitUtilNamespace defining utility free functions using in Fit for evaluating the various fit method functions (chi2, likelihood, etc..) given the data and the model function ;  NHFitInterface;  NGLTutorials;  ►NInternal;  NExecutorUtils;  NTThreadedObjectUtils;  ►NMacOSX;  NDetails;  NOpenGL;  NUtil;  ►NX11;  NDetail;  ►NMath;  NBlas;  NBr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/namespaces.html:51,Guid,Guide,51,doc/v608/namespaces.html,https://root.cern,https://root.cern/doc/v608/namespaces.html,1,['Guid'],['Guide']
Usability,". ROOT: Namespace List. ; ROOT   6.10/09 Reference Guide ; . Namespace List . Here is a list of all namespaces with brief descriptions:; [detail level 1234];  NApplicationClassificationKeras;  NApplicationRegressionKeras;  Nbenchmarks;  NBidirMMapPipe_implNamespace for implementation details of BidirMMapPipe ;  NClassificationKeras;  NclingPrint a TSeq at the prompt: ;  NCppyy;  NDavix;  Ndemo;  Ndemoshelp;  NDynamicSlice;  Nexample;  Nfaddeeva_impl;  Nfildir;  Nfile;  Nfillrandom;  Nfirst;  Nfit1;  Nfit1_py;  NFitterUtilUtility functions to be used in the fitter classes ;  Nformula1;  Nframework;  NGenerateModel;  Ngeometry;  Ngerrors;  Ngraph;  Ngui_ex;  Nh1draw;  NHFit;  Nhsimple;  Nhsum;  Nlineset;  Nllvm;  NmakeQuickModel;  NMathNamespace for new Math classes and functions ;  NMemstat;  NMPCodeThis namespace prevents conflicts between MPCode::kError and ELogLevel::kError ;  Nmrt;  NMulticlassKeras;  Nmultifit;  Nna49geomfile;  Nna49view;  Nna49visible;  Nntuple1;  NnumberEntry;  Nparse_CSV_file_with_TTree_ReadStream;  ►NPyROOT;  NPyStrings;  NUtility;  Nqtexample;  NR6;  NR7;  Nratioplot;  ►NRcppThis is a class to support deprecated method to pass function to R's Environment, based in Rcpp::InternalFunction ;  Ntraits;  NRegressionKeras;  ►NRgl;  NFgt;  NMc;  NPad;  NRooCintUtils;  NRooFit;  NRooFitShortHand;  NRooLinkedListImplDetails;  NRooSimultaneousAux;  ►NRooStatsNamespace for the RooStats classes ;  ►NHistFactory;  NConstraint;  NNumberCountingUtils;  ►NROOTNamespace for new ROOT classes and functions ;  NCocoaTutorials;  ►NDetail;  NTDF;  NExecutorUtilsThis namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce ;  ►NExperimental;  NDetail;  NHist;  NInternal;  NTDF;  ►NFitNamespace for the fitting classes ;  NFitUtilNamespace defining utility free functions using in Fit for evaluating the various fit method functions (chi2, likelihood, etc..) given the data and the model function ;  NHFitInterface; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/namespaces.html:51,Guid,Guide,51,doc/v610/namespaces.html,https://root.cern,https://root.cern/doc/v610/namespaces.html,1,['Guid'],['Guide']
Usability,". ROOT: Namespace List. ; ROOT   6.12/07 Reference Guide ; . Namespace List . Here is a list of all namespaces with brief descriptions:; [detail level 1234];  NApplicationClassificationKeras;  NApplicationRegressionKeras;  Nbenchmarks;  Nbent;  NBidirMMapPipe_implNamespace for implementation details of BidirMMapPipe ;  NClassificationKeras;  NclingPrint a TSeq at the prompt: ;  NCppyy;  NDavix;  Ndemo;  Ndemoshelp;  NDynamicSlice;  Nexample;  Nfaddeeva_impl;  Nfildir;  Nfile;  Nfillrandom;  Nfirst;  Nfit1;  Nfit1_py;  NFitterUtilUtility functions to be used in the fitter classes ;  Nformula1;  Nframework;  NGenerateModel;  Ngeometry;  Ngerrors;  Ngraph;  Ngui_ex;  Nh1draw;  NHFit;  Nhsimple;  Nhsum;  NLegendre;  Nlineset;  Nllvm;  NmakeQuickModel;  NMathNamespace for new Math classes and functions ;  NmathcoreStatFunc;  NMemstat;  NMPCodeThis namespace prevents conflicts between MPCode::kError and ELogLevel::kError ;  Nmrt;  NMulticlassKeras;  Nmultifit;  Nna49geomfile;  Nna49view;  Nna49visible;  Nntuple1;  NnumberEntry;  Nparse_CSV_file_with_TTree_ReadStream;  ►NPyROOT;  NPyStrings;  NUtility;  Nqtexample;  NR6;  NR7;  Nratioplot;  Nratioplot1;  Nratioplot2;  Nratioplot3;  Nratioplot4;  Nratioplot5;  Nratioplot6;  ►NRcppThis is a class to support deprecated method to pass function to R's Environment, based in Rcpp::InternalFunction ;  Ntraits;  NRegressionKeras;  ►NRgl;  NFgt;  NMc;  NPad;  NRooCintUtils;  NRooFit;  NRooFitShortHand;  NRooLinkedListImplDetails;  NRooSimultaneousAux;  ►NRooStatsNamespace for the RooStats classes ;  ►NHistFactory;  NConstraint;  NNumberCountingUtils;  ►NROOTNamespace for new ROOT classes and functions ;  NCocoaTutorials;  ►NDetail;  ►NTDF;  NTCCHelperTypes;  NExecutorUtilsThis namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce ;  ►NExperimental;  NDetail;  NHist;  ►NInternal;  NDetail;  NTDF;  ►NFitNamespace for the fitting classes ;  NFitUtilNamespace defining utility free ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v612/namespaces.html:51,Guid,Guide,51,doc/v612/namespaces.html,https://root.cern,https://root.cern/doc/v612/namespaces.html,1,['Guid'],['Guide']
Usability,". ROOT: Namespace List. ; ROOT   6.14/05 Reference Guide ; . Namespace List . Here is a list of all namespaces with brief descriptions:; [detail level 1234];  NApplicationClassificationKeras;  NApplicationRegressionKeras;  Narrow;  Nbenchmarks;  Nbent;  NBessel;  NBidirMMapPipe_implNamespace for implementation details of BidirMMapPipe ;  NClassificationKeras;  NclingPrint a TSeq at the prompt: ;  NCppyy;  NDavix;  Ndemo;  Ndemoshelp;  Ndf001_introduction;  Ndf002_dataModel;  Ndf003_profiles;  Ndf004_cutFlowReport;  Ndf006_ranges;  Ndf007_snapshot;  Ndf008_createDataSetFromScratch;  Ndf010_trivialDataSource;  Ndf011_ROOTDataSource;  Ndf012_DefinesAndFiltersAsStrings;  Ndf014_CSVDataSource;  Ndf016_vecOps;  Ndf017_vecOpsHEP;  NDynamicSlice;  Nexample;  Nfaddeeva_impl;  Nfildir;  Nfile;  Nfillrandom;  Nfirst;  Nfit1;  Nfit1_py;  NFitterUtilUtility functions to be used in the fitter classes ;  Nformula1;  Nframework;  NGenerateModel;  Ngeometry;  Ngerrors;  Ngraph;  Ngui_ex;  Nh1draw;  NHFit;  Nhsimple;  Nhsum;  NLegendre;  Nlineset;  Nllvm;  NmakeQuickModel;  NMathNamespace for new Math classes and functions ;  NmathcoreStatFunc;  NMemstat;  NMPCodeThis namespace prevents conflicts between MPCode::kError and ELogLevel::kError ;  Nmrt;  NMulticlassKeras;  Nmultifit;  Nna49geomfile;  Nna49view;  Nna49visible;  ►NnlohmannNamespace for Niels Lohmann ;  NdetailUnnamed namespace with internal helper functions ;  NnormalDist;  Nntuple1;  NnumberEntry;  Nparse_CSV_file_with_TTree_ReadStream;  Nprincipal;  ►NPyROOT;  NPyStrings;  NUtility;  Npyroot001_arrayInterface;  Npyroot002_TTreeAsMatrix;  Nqtexample;  NR6;  NR7;  Nratioplot;  Nratioplot1;  Nratioplot2;  Nratioplot3;  Nratioplot4;  Nratioplot5;  Nratioplot6;  ►NRcppThis is a class to support deprecated method to pass function to R's Environment, based in Rcpp::InternalFunction ;  Ntraits;  NRegressionKeras;  ►NRgl;  NFgt;  NMc;  NPad;  NRooFit;  NRooFitShortHand;  NRooLinkedListImplDetails;  NRooSimultaneousAux;  ►NRooStats",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v614/namespaces.html:51,Guid,Guide,51,doc/v614/namespaces.html,https://root.cern,https://root.cern/doc/v614/namespaces.html,1,['Guid'],['Guide']
Usability,". ROOT: Namespace List. ; ROOT   6.16/01 Reference Guide ; . Namespace List. Here is a list of all namespaces with brief descriptions:; [detail level 123456];  NApplicationClassificationKeras;  NApplicationRegressionKeras;  Narrow;  Nbenchmarks;  Nbent;  NBessel;  ►NBidirMMapPipe_implNamespace for implementation details of BidirMMapPipe ;  CPageChunkClass representing a chunk of pages ;  ►CPagesHandle class for a number of Pages ;  CimplImplementation ;  NClassificationKeras;  NclingPrint a TSeq at the prompt: ;  NCppyy;  Ncustom_derivatives;  NDavix;  Ndemo;  Ndemoshelp;  Ndf001_introduction;  Ndf002_dataModel;  Ndf003_profiles;  Ndf004_cutFlowReport;  Ndf006_ranges;  Ndf007_snapshot;  Ndf008_createDataSetFromScratch;  Ndf010_trivialDataSource;  Ndf011_ROOTDataSource;  Ndf012_DefinesAndFiltersAsStrings;  Ndf014_CSVDataSource;  Ndf016_vecOps;  Ndf017_vecOpsHEP;  Ndf019_Cache;  Ndf021_createTGraph;  Ndf024_Display;  NDynamicSlice;  Nexample;  Nfaddeeva_impl;  Nfildir;  Nfile;  Nfillrandom;  Nfirst;  Nfit1;  Nfit1_py;  NFitterUtilUtility functions to be used in the fitter classes ;  Nformula1;  Nframework;  NGenerateModel;  Ngeometry;  Ngerrors;  Ngraph;  Ngui_ex;  Nh1draw;  NHFit;  Nhsimple;  Nhsum;  NLegendre;  Nlineset;  Nllvm;  NmakeQuickModel;  NMathNamespace for new Math classes and functions ;  NmathcoreStatFunc;  ►NMemstat;  CSCustomDigest;  CSFind_t;  CTMemStatFAddrContainer;  CTMemStatMng;  CToLower_t;  NMPCodeThis namespace prevents conflicts between MPCode::kError and ELogLevel::kError ;  Nmrt;  NMulticlassKeras;  Nmultifit;  Nna49geomfile;  Nna49view;  Nna49visible;  ►NnlohmannNamespace for Niels Lohmann ;  ►NdetailUnnamed namespace with internal helper functions ;  Cconjunction;  Cconjunction< B1 >;  Cconjunction< B1, Bn... >;  Cexternal_constructor;  Cexternal_constructor< value_t::array >;  Cexternal_constructor< value_t::boolean >;  Cexternal_constructor< value_t::number_float >;  Cexternal_constructor< value_t::number_integer >;  Cexternal_constructor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v616/namespaces.html:51,Guid,Guide,51,doc/v616/namespaces.html,https://root.cern,https://root.cern/doc/v616/namespaces.html,1,['Guid'],['Guide']
Usability,". ROOT: Namespace List. ROOT;  6.06/09. Reference Guide. ROOT Home Page; Main Page; Related Pages; User's Classes; Namespaces; All Classes; Files; Release Notes. Namespace List; Namespace Members. Namespace List . Here is a list of all namespaces with brief descriptions:; [detail level 1234];  N_pythonization;  NBidirMMapPipe_implNamespace for implementation details of BidirMMapPipe ;  Nclang;  ▼Ncling;  ►Nutils;  NTransform;  NCppyy;  Ncppyy;  NDavix;  NDetail;  Nfaddeeva_impl;  NFitterUtilUtility functions to be used in the fitter classes ;  NFunction;  NHFit;  Nllvm;  NmakeTest;  NMathNamespace for new Math classes and functions ;  NMemstat;  NMPCodeThis namespace prevents conflicts between MPCode::kError and ELogLevel::kError ;  NPoolCode;  NPoolUtilsThis namespace contains pre-defined functions to be used in conjuction with TPool::Map and TPool::MapReduce ;  ▼NPyROOT;  NPyStrings;  NUtility;  ▼NRcppThis is a class to support deprecated method to pass function to R's Environment, based in Rcpp::InternalFunction ;  Ntraits;  ▼NRgl;  NFgt;  NMc;  NPad;  NRooCintUtils;  NRooFit;  NRooFitShortHand;  NRooLinkedListImplDetails;  NRooSimultaneousAux;  ▼NRooStatsNamespace for the RooStats classes ;  ►NHistFactory;  NConstraint;  NNumberCountingUtils;  ▼NROOTNamespace for new ROOT classes and functions ;  NDetail;  ►NFitNamespace for the fitting classes ;  NFitUtilNamespace defining utility free functions using in Fit for evaluating the various fit method functions (chi2, likelihood, etc..) given the data and the model function ;  NHFitInterface;  NHist;  NInternal;  ►NMacOSX;  NDetail;  NDetails;  NOpenGL;  NUtil;  ►NX11;  NDetail;  ►NMath;  NBlas;  NBrentMethods;  NCephes;  NChebyshevTemplate recursive functions for defining evaluation of Chebyshev polynomials T_n(x) and the series S(x) = Sum_i c_i* T_i(x) ;  NCholeskyDecompHelpersHelpers for CholeskyDecomp ;  Ndetail;  NGenAlgoOptUtil;  NGenVector;  NGenVector_detail;  NGSLRootHelperHelper functions to test convergence",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/namespaces.html:50,Guid,Guide,50,root/html606/namespaces.html,https://root.cern,https://root.cern/root/html606/namespaces.html,1,['Guid'],['Guide']
Usability,". ROOT: Net tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Net tutorialsTutorials. ; Examples showing the net classes. . Files; file  authclient.C;  This macro should be run together with authserv.C to test authentication between two remote ROOT sessions. ;  ; file  authserv.C;  This macro should be run together with authclient.C to test authentication between two remote ROOT sessions. ;  ; file  fastMergeServer.C;  This script shows how to make a simple iterative server that can receive TMemFile from multiple clients and merge them into a single file without block. ;  ; file  hclient.C;  Client program which creates and fills a histogram. ;  ; file  hcons.C;  Histogram consumer script. ;  ; file  hprod.C;  Histogram producer script. ;  ; file  hserv.C;  Server program which waits for two clients to connect. ;  ; file  hserv2.C;  This script shows how to make a simple iterative server that can accept connections while handling currently open connections. ;  ; file  parallelMergeClient.C;  Client program which creates and fills 2 histograms and a TTree. ;  ; file  parallelMergeServer.C;  This script shows how to make a simple iterative server that can accept connections while handling currently open connections. ;  ; file  parallelMergeTest.C;  ; file  pclient.C;  Client program to test parallel sockets. ;  ; file  pserv.C;  Server program to test parallel sockets. ;  ; file  spy.C;  Client program which allows the snooping of objects from a spyserv process. ;  ; file  spyserv.C;  Server program which allows clients, ""spies"", to connect and snoop objects. ;  ; file  TestAuth.C;  Macro test authentication methods stand alone. ;  ; file  testTUDPSocket.C;  As test echo server use udpserver.c in the same directory. ;  ; file  treeClient.C;  Client program which creates and fills 2 histograms and a TTree. ;  ; file  TUriTest.C;  Rudimentary TUri test macro. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__net.html:53,Guid,Guide,53,doc/master/group__tutorial__net.html,https://root.cern,https://root.cern/doc/master/group__tutorial__net.html,3,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,. ROOT: Numerical Algorithms. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules |; Classes ; Numerical AlgorithmsMath » MathCore | Math » MathMore. ; Numerical Algorithm classes from the MathCore and MathMore libraries. . Modules;  One-dimensional Minimization;  Classes for one-dimensional minimization. ;  ;  Numerical Integration;  Classes for numerical integration of functions. ;  ;  Multi-dimensional Minimization;  Classes implementing algorithms for multi-dimensional minimization. ;  ;  Numerical Differentiation;  Classes for numerical differentiation. ;  ;  One-dimensional Root-Finding;  Classes implementing algorithms for finding the roots of a one-dimensional function. ;  ;  Function Approximation (ChebyshevApprox);  Numerical algorithm from the MathMore library and implemented using the GSL library. ;  ;  Multidimensional ROOT finding;  Classes for finding the roots of a multi-dimensional system. ;  ;  Interpolation Classes;  Classes for interpolation of points. ;  . Classes; class  ROOT::Math::DistSamplerOptions;  DistSampler options class. More...;  ; class  ROOT::Math::GenAlgoOptions;  class implementing generic options for a numerical algorithm Just store the options in a map of string-value pairs More...;  ; class  ROOT::Math::IOptions;  Generic interface for defining configuration options of a numerical algorithm. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__NumAlgo.html:60,Guid,Guide,60,doc/master/group__NumAlgo.html,https://root.cern,https://root.cern/doc/master/group__NumAlgo.html,2,['Guid'],['Guide']
Usability,. ROOT: Numerical Differentiation. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Numerical DifferentiationMath » MathCore | Math » MathMore » Numerical Algorithms. ; Classes for numerical differentiation. . Classes; class  ROOT::Math::Derivator;  Class for computing numerical derivative of a function. More...;  ; class  ROOT::Math::GSLDerivator;  Class for computing numerical derivative of a function based on the GSL numerical algorithm This class is implemented using the numerical derivatives algorithms provided by GSL (see GSL Online Manual ). More...;  ; class  ROOT::Math::RichardsonDerivator;  User class for calculating the derivatives of a function. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Deriv.html:65,Guid,Guide,65,doc/master/group__Deriv.html,https://root.cern,https://root.cern/doc/master/group__Deriv.html,2,['Guid'],['Guide']
Usability,". ROOT: Numerical Integration. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules |; Classes |; Enumerations ; Numerical IntegrationMath » MathCore | Math » MathMore » Numerical Algorithms. ; Classes for numerical integration of functions. ; These classes provide algorithms for integration of one-dimensional functions, with several adaptive and non-adaptive methods and for integration of multi-dimensional function using an adaptive method or MonteCarlo Integration (GSLMCIntegrator). The basic classes ROOT::Math::IntegratorOneDim provides a common interface for the one-dimensional methods while the class ROOT::Math::IntegratorMultiDim provides the interface for the multi-dimensional ones. The methods can be configured (e.g setting the default method with its default parameters) using the ROOT::Math::IntegratorOneDimOptions and ROOT::Math::IntegratorMultiDimOptions classes. . Modules;  Numerical Monte Carlo Integration Classes;  Classes implementing method for Monte Carlo Integration. ;  . Classes; class  ROOT::Math::AdaptiveIntegratorMultiDim;  Class for adaptive quadrature integration in multi-dimensions using rectangular regions. More...;  ; class  ROOT::Math::BaseIntegratorOptions;  Base class for Numerical integration options common in 1D and multi-dimension This is an internal class and is not supposed to be instantiated by the user. More...;  ; class  ROOT::Math::GaussIntegrator;  User class for performing function integration. More...;  ; class  ROOT::Math::GaussLegendreIntegrator;  User class for performing function integration. More...;  ; class  ROOT::Math::GSLIntegrator;  Class for performing numerical integration of a function in one dimension. More...;  ; class  ROOT::Math::IntegratorMultiDim;  User class for performing multidimensional integration. More...;  ; class  ROOT::Math::IntegratorMultiDimOptions;  Numerical multi dimensional integration options. More...;  ; class  ROOT::Math::IntegratorOneDim;  User Class fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Integration.html:61,Guid,Guide,61,doc/master/group__Integration.html,https://root.cern,https://root.cern/doc/master/group__Integration.html,1,['Guid'],['Guide']
Usability,". ROOT: Numerical Monte Carlo Integration Classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs |; Enumerations ; Numerical Monte Carlo Integration ClassesMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; Classes implementing method for Monte Carlo Integration. ; Class for performing numerical integration of a multidimensional function. It uses the numerical integration algorithms of GSL, which reimplements the algorithms used in the QUADPACK, a numerical integration package written in Fortran.; Plain MC, MISER and VEGAS integration algorithms are supported for integration over finite (hypercubic) ranges.; GSL Manual.; It implements also the interface ROOT::Math::VirtualIntegratorMultiDim so it can be instantiate using the plugin manager (plugin name is ""GSLMCIntegrator"") . Classes; class  ROOT::Math::GSLMonteFunctionWrapper;  wrapper to a multi-dim function withtout derivatives for Monte Carlo multi-dimensional integration algorithm More...;  ; struct  ROOT::Math::MiserParameters;  Structure collecting parameters for MISER multidimensional integration. More...;  ; struct  ROOT::Math::VegasParameters;  Structures collecting parameters for VEGAS multidimensional integration For implementation of default parameters see file mathmore/src/GSLMCIntegrationWorkspace.h. More...;  . Typedefs; typedef double(* ROOT::Math::GSLMonteFuncPointer) (double *, size_t, void *);  Class for adapting any multi-dimension C++ functor class to C function pointers used by GSL MonteCarlo integration algorithms. ;  . Enumerations; enum  ROOT::Math::IntegrationMultiDim::Type { ;   ROOT::Math::IntegrationMultiDim::kDEFAULT = -1; , ROOT::Math::IntegrationMultiDim::kADAPTIVE; , ROOT::Math::IntegrationMultiDim::kVEGAS; , ROOT::Math::IntegrationMultiDim::kMISER; , ;   ROOT::Math::IntegrationMultiDim::kPLAIN. };  enumeration specifying the integration types. More...;  . Typedef Documentation. ◆ GSLMonteFuncPoin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__MCIntegration.html:81,Guid,Guide,81,doc/master/group__MCIntegration.html,https://root.cern,https://root.cern/doc/master/group__MCIntegration.html,1,['Guid'],['Guide']
Usability,". ROOT: One-dimensional Minimization. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Enumerations ; One-dimensional MinimizationMath » MathCore | Math » MathMore » Numerical Algorithms. ; Classes for one-dimensional minimization. . Classes; class  ROOT::Math::BrentMinimizer1D;  User class for performing function minimization. More...;  ; class  ROOT::Math::GSL1DMinimizerWrapper;  wrapper class for gsl_min_fminimizer structure More...;  ; class  ROOT::Math::GSLMinimizer1D;  Minimizer for arbitrary one dimensional functions. More...;  ; class  ROOT::Math::IMinimizer1D;  Interface class for numerical methods for one-dimensional minimization. More...;  . Enumerations; enum  ROOT::Math::Minim1D::Type { ROOT::Math::Minim1D::kGOLDENSECTION; , ROOT::Math::Minim1D::kBRENT; };  Enumeration with One Dimensional Minimizer Algorithms. More...;  . Enumeration Type Documentation. ◆ Type. enum ROOT::Math::Minim1D::Type. Enumeration with One Dimensional Minimizer Algorithms. ; The algorithms are implemented using GSL, see the GSL manual.; The algorithms available are: . Golden Section Algorithm, simplest method of bracketing the minimum of a function . Brent Algorithm, which combines a parabolic interpolation with the golden section algorithm . EnumeratorkGOLDENSECTION ; kBRENT . Definition at line 56 of file GSLMinimizer1D.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Min1D.html:68,Guid,Guide,68,doc/master/group__Min1D.html,https://root.cern,https://root.cern/doc/master/group__Min1D.html,3,"['Guid', 'simpl']","['Guide', 'simplest']"
Usability,". ROOT: One-dimensional Root-Finding. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; One-dimensional Root-FindingMath » MathCore | Math » MathMore » Numerical Algorithms. ; Classes implementing algorithms for finding the roots of a one-dimensional function. ; Various implementations exist in MathCore and MathMore The user interacts with a proxy class ROOT::Math::RootFinder which creates behind the chosen algorithms which are implemented using the ROOT::Math::IRootFinderMethod interface . Classes; class  ROOT::Math::Roots::Bisection;  Roots::Bisection Bisection algorithm, simplest algorithm for bracketing the roots of a function, but slowest one. More...;  ; class  ROOT::Math::Roots::Brent;  Brent-Dekker algorithm which combines an interpolation strategy with the bisection algorithm See the GSL manual for more information. More...;  ; class  ROOT::Math::BrentRootFinder;  Class for finding the root of a one dimensional function using the Brent algorithm. More...;  ; class  ROOT::Math::Roots::FalsePos;  False Position algorithm based on linear interpolation. More...;  ; class  ROOT::Math::GSLRootFdFSolver;  Root-Finder with derivatives implementation class using GSL. More...;  ; class  ROOT::Math::GSLRootFinder;  Base class for GSL Root-Finding algorithms for one dimensional functions which do not use function derivatives. More...;  ; class  ROOT::Math::GSLRootFinderDeriv;  Base class for GSL Root-Finding algorithms for one dimensional functions which use function derivatives. More...;  ; class  ROOT::Math::GSLRootFSolver;  Root-Finder implementation class using GSL. More...;  ; class  ROOT::Math::IRootFinderMethod;  Interface for finding function roots of one-dimensional functions. More...;  ; class  ROOT::Math::Roots::Newton;  a Newton algorithm, which computes the derivative at each iteration See the GSL manual for more information More...;  ; class  ROOT::Math::RootFinder;  User Class to find the Root of one dimensional fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__RootFinders.html:68,Guid,Guide,68,doc/master/group__RootFinders.html,https://root.cern,https://root.cern/doc/master/group__RootFinders.html,2,"['Guid', 'simpl']","['Guide', 'simplest']"
Usability,". ROOT: OpenGL rendering. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; OpenGL renderingGraphics » 3D Graphics. ; OpenGL rendering and utility classes. ; The GL module incapsulates ROOT's interface to the OpenGL rendering engine and provides the following functionality:. management of system-resources;; frequently used utility classes;; base-classes for shapes, scenes and viewers;; concrete implementations of shapes needed by TGeo package;; concrete implementations of scenes and viewers including the GUI components;; specialized plot-painters for GL rendering of TH2, TH3, TF2 and TF3 object as well as parametric surfaces. Papers describing OpenGL in ROOT:; ROOT 3D graphics, presented at CHEP 2006.; 3D graphics with OpenGL: recent improvements and plans, presented at ROOT Workshop 2007; Next generation of OpenGL support in ROOT, presented at CHEP 2007. . Classes; class  TArcBall;  Implements the arc-ball rotation manipulator. More...;  ; class  TF2GL;  GL renderer for TF2. More...;  ; class  TGL5DDataSet;  ; class  TGL5DDataSetEditor;  GUI editor for OpenGL 5D Painter. More...;  ; class  TGL5DPainter;  TGL5DPainter implements ""gl5d"" option for TTree::Draw. More...;  ; class  TGLAdapter;  Allow plot-painters to be used for gl-inpad and gl-viewer. More...;  ; class  TGLAnnotation;  GL-overlay annotation. More...;  ; class  TGLAutoRotator;  Automatically rotates GL camera. More...;  ; class  TGLAxis;  GL Axis. More...;  ; class  TGLAxisPainter;  Utility class to paint axis in GL. More...;  ; class  TGLAxisPainterBox;  Painter class for axes encompassing a 3D box. More...;  ; class  TGLBoundingBox;  Concrete class describing an orientated (free) or axis aligned box of 8 vertices. More...;  ; class  TGLBoxCut;  Used by plot-painters to determine the area of the plot that is cut away. More...;  ; class  TGLBoxPainter;  Paints TH3 histograms by rendering variable-sized boxes matching the bin contents. More...;  ; class  TGLCamera;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__opengl.html:56,Guid,Guide,56,doc/master/group__opengl.html,https://root.cern,https://root.cern/doc/master/group__opengl.html,1,['Guid'],['Guide']
Usability,". ROOT: OpenGL tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; OpenGL tutorialsTutorials. ; Various examples showing the OpenGL graphics in ROOT. . Files; file  glbox.C;  Display a 3D histogram using GL (box option). ;  ; file  gldemos.C;  Menu for running GL demos. ;  ; file  glh3c.C;  Display a 3D histogram using GL (box option). ;  ; file  glparametric.C;  Show rendering of parametric surfaces. ;  ; file  glparametrics2.C;  Show rendering of parametric surfaces. ;  ; file  glrose.C;  Render a TF2 looking like a rose. ;  ; file  glsurfaces.C;  Various surfaces rendered with GL. ;  ; file  gltf3.C;  Draws the Klein bottle. ;  ; file  glViewerExercise.C;  Script showing how to use the GL viewer API to animate a picture. ;  ; file  glViewerLOD.C;  To set the Level Of Details when rendering geometry shapes. ;  ; file  glvox1.C;  This macro demonstrates how to use ""glcol"" option for TH3. ;  ; file  glvox2.C;  This macro demonstrates how to use ""glcol"" option for TH3 and how to create user defined TRANSFER FUNCTION: transfer function maps bin value to voxel's opacity. ;  ; file  grad.C;  This macro demonstrates how to create and use linear gradients to fill a histogram or a pad. ;  ; file  grad2.C;  Gradient fill with transparency and the ""SAME"" option. ;  ; file  gradients.C;  Features: ;  ; file  gviz3d.C;  Simple TStructViewer tutorial. ;  ; file  nucleus.C;  Model of a nucleus built from TGeo classes. ;  ; file  parallelcoordtrans.C;  Script illustrating the use of transparency with ||-Coord. ;  ; file  radialgradients.C;  This tutorial demonstrates how to use radial gradients, custom colors, transparency. ;  ; file  transp.C;  This demo shows how to use transparency. ;  ; file  transp_text.C;  This macro is based on labels1.C by Rene Brun. ;  ; file  transparentpad.C;  This macro demonstrates semi-transparent pads. ;  ; file  viewer3DLocal.C;  Demonstrates 3D viewer architecture TVirtualViewer3D and TBuffer3D in th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__gl.html:56,Guid,Guide,56,doc/master/group__tutorial__gl.html,https://root.cern,https://root.cern/doc/master/group__tutorial__gl.html,1,['Guid'],['Guide']
Usability,". ROOT: PROOF. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules |; Files ; PROOF. ; Classes defining the Parallel ROOT Facility, PROOF, a framework for parallel analysis of ROOT TTrees. ; Deprecated:We keep PROOF for those who still need it for legacy use cases. PROOF is not developed anymore and receiving only limited support. ROOT has since a few years moved to RDataFrame and related products as multi-core/multi-processing engines. Modules;  PROOF kernel Libraries;  The PROOF kernel libraries (libProof, libProofPlayer, libProofDraw) contain the classes defining the kernel of the PROOF facility, i.e. ;  ;  PROOF benchmark utilities;  Set of utilities to benchmark a PROOF facility. ;  . Files; file  runProof.C;  Macro to run examples of analysis on PROOF, corresponding to the TSelector implementations found under <ROOTSYS>/tutorials/proof. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__proof.html:45,Guid,Guide,45,doc/master/group__proof.html,https://root.cern,https://root.cern/doc/master/group__proof.html,2,['Guid'],['Guide']
Usability,. ROOT: Painting classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules ; Painting classesHistogram Library. . Modules;  ROOT 7 Histograms painting classes.;  ;  Histograms and graphs painting classes.;  ;  TSpectrum painting class.;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:32 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__HistPainting.html:56,Guid,Guide,56,doc/master/group__HistPainting.html,https://root.cern,https://root.cern/doc/master/group__HistPainting.html,2,['Guid'],['Guide']
Usability,". ROOT: ParamHistFunc Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Static Private Member Functions |; List of all members ; ParamHistFunc Class ReferenceRooFit » RooStats » HistFactory. ; A class which maps the current values of a RooRealVar (or a set of RooRealVars) to one of a number of RooAbsReal (nominally RooRealVar): ; ParamHistFunc: {val1, val2, ...} -> {gamma (RooRealVar)}; The intended interpretation is that each parameter in the range represent the height of a bin over the domain space.; The 'createParamSet' is an easy way to create these parameters from a set of observables. They are stored using the ""TH1"" ordering convention (as compared to the RooDataHist convention, which is used internally and one must map between the two).; All indices include '0':; \( \gamma_{i,j} \) = paramSet[ size(i)*j + i ]; ie assuming the dimensions are 5*5:; \( \gamma_{2,1} \) = paramSet[ 5*1 + 2 ] = paramSet[7] ; Definition at line 24 of file ParamHistFunc.h. Classes; class  CacheElem;  ; struct  NumBins;  . Public Member Functions;  ParamHistFunc ();  ;  ParamHistFunc (const char *name, const char *title, const RooArgList &vars, const RooArgList &paramSet);  Create a function which returns binewise-values This class contains N RooAbsReals's, one for each bin from the given RooRealVar. ;  ;  ParamHistFunc (const char *name, const char *title, const RooArgList &vars, const RooArgList &paramSet, const TH1 *hist);  Create a function which returns bin-wise values. ;  ;  ParamHistFunc (const ParamHistFunc &other, const char *name=nullptr);  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Implement analytical integrations by doing appropriate weighting from component integrals fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classParamHistFunc.html:69,Guid,Guide,69,doc/master/classParamHistFunc.html,https://root.cern,https://root.cern/doc/master/classParamHistFunc.html,1,['Guid'],['Guide']
Usability,". ROOT: Pattern Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; Pattern Class Reference. . Definition at line 7 of file Pattern.h. Public Types; typedef std::vector< double >::const_iterator const_iterator;  ; typedef std::vector< double >::iterator iterator;  . Public Member Functions;  Pattern ();  ;  Pattern (const Pattern &other);  ; template<typename InputContainer , typename OutputContainer > ;  Pattern (InputContainer &_input, OutputContainer &_output, double _weight=1.0);  ; template<typename ItValue > ;  Pattern (ItValue inputBegin, ItValue inputEnd, double outputValue, double _weight=1.0);  ; template<typename ItValue > ;  Pattern (ItValue inputBegin, ItValue inputEnd, ItValue outputBegin, ItValue outputEnd, double _weight=1.0);  ;  Pattern (Pattern &&other);  ;  ~Pattern ();  ; void addInput (double value);  ; void addOutput (double value);  ; const_iterator beginInput () const;  ; const_iterator beginOutput () const;  ; const_iterator endInput () const;  ; const_iterator endOutput () const;  ; std::vector< double > & input ();  ; const std::vector< double > & input () const;  ; size_t inputSize () const;  ; Pattern & operator= (const Pattern &other);  ; std::vector< double > & output ();  ; const std::vector< double > & output () const;  ; size_t outputSize () const;  ; double weight () const;  ; void weight (double w);  . Private Attributes; std::vector< double > m_input;  ; std::vector< double > m_output;  ; double m_weight;  . #include <TMVA/Pattern.h>; Member Typedef Documentation. ◆ const_iterator. typedef std::vector<double>::const_iterator Pattern::const_iterator. Definition at line 12 of file Pattern.h. ◆ iterator. typedef std::vector<double>::iterator Pattern::iterator. Definition at line 11 of file Pattern.h. Constructor & Destructor Documentation. ◆ Pattern() [1/6]. Pattern::Pattern ; (;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classPattern.html:63,Guid,Guide,63,doc/master/classPattern.html,https://root.cern,https://root.cern/doc/master/classPattern.html,1,['Guid'],['Guide']
Usability,". ROOT: PdfWrapper Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; PdfWrapper Class Reference. . Definition at line 7162 of file xRooNode.cxx. Public Member Functions;  PdfWrapper (const PdfWrapper &other, const char *name=nullptr);  ;  PdfWrapper (RooAbsReal &f, RooAbsReal *coef, bool expEvMode=false, RooAbsPdf *expPdf=nullptr);  ;  ~PdfWrapper () override;  ; std::list< double > * binBoundaries (RooAbsRealLValue &obs, double xlo, double xhi) const override;  Retrieve bin boundaries if this distribution is binned in obs. ;  ; TObject * clone (const char *newname) const override;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ; double getSimplePropagatedError (const RooFitResult &fr, const RooArgSet &nset_in) const;  ; bool isBinnedDistribution (const RooArgSet &obs) const override;  Tests if the distribution is binned. Unless overridden by derived classes, this always returns false. ;  ; bool selfNormalized () const override;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classPdfWrapper.html:66,Guid,Guide,66,doc/master/classPdfWrapper.html,https://root.cern,https://root.cern/doc/master/classPdfWrapper.html,1,['Guid'],['Guide']
Usability,". ROOT: Physics Vectors. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes ; Physics VectorsMath. ; Vector classes (2D, 3D and 4D / Lorentz vector) and their transformations. ; These classes represent vectors and their operations and transformations, such as rotations and Lorentz transformations, in two, three and four dimensions. The 4D space-time is used for physics vectors representing relativistic particles in Minkowski-space. These vectors are different from Linear Algebra vectors or std::vector which describe generic N-dimensional vectors.; Hint: the most commonly used Lorentz vector class is ROOT::Math::PtEtaPhiMVector, a typedef to ROOT::Math::LorentzVector < ROOT::Math::PtEtaPhiM4D < double > >. Points and Vector concept; Mathematically, vectors and points are two distinct concepts. They have different transformations: vectors can only be rotated, while points can be rotated or translated. You can add two vectors but not two points, and the difference between two points is a vector. We then distinguish for the 2 and 3 dimensional case, between points and vectors, modeling them with different classes:; ROOT::Math::DisplacementVector2D and ROOT::Math::DisplacementVector3D describe 2- and 3-component direction and magnitude vectors, not rooted at any particular point;; ROOT::Math::PositionVector2D and ROOT::Math::PositionVector3D model points in 2 and 3 dimensions. ROOT::Math::LorentzVector models 4D space-time vectors. There is no class for a 4D point. Coordinate Systems. Generic Coordinate System; The vector classes are based on a generic type of coordinate system, expressed as a template parameter of the class. Various classes exist to describe the various coordinates systems:; 2D coordinate system classes:; ROOT::Math::Cartesian2D, based on (x,y) ;; ROOT::Math::Polar2D, based on (r, phi) ;. 3D coordinate system classes:; ROOT::Math::Cartesian3D, based on (x,y,z);; ROOT::Math::Polar3D, based on (r, theta, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__GenVector.html:55,Guid,Guide,55,doc/master/group__GenVector.html,https://root.cern,https://root.cern/doc/master/group__GenVector.html,1,['Guid'],['Guide']
Usability,. ROOT: Physics tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Physics tutorialsTutorials. ; Physics examples. . Files; file  PhaseSpace.C;   Example of use of TGenPhaseSpace ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__physics.html:57,Guid,Guide,57,doc/master/group__tutorial__physics.html,https://root.cern,https://root.cern/doc/master/group__tutorial__physics.html,2,['Guid'],['Guide']
Usability,. ROOT: PictureAttributes_t Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; PictureAttributes_t Struct Reference. . Definition at line 323 of file GuiTypes.h. Public Attributes; UInt_t fCloseness;  allowable RGB deviation ;  ; Colormap_t fColormap;  colormap to use ;  ; Int_t fDepth;  depth of window ;  ; UInt_t fHeight;  height of picture ;  ; Mask_t fMask;  mask specifying which attributes are defined ;  ; UInt_t fNpixels;  number of used color pixels ;  ; ULong_t * fPixels;  list of used color pixels (if set use delete[]) ;  ; UInt_t fWidth;  width of picture ;  ; UInt_t fXHotspot;  picture x hotspot coordinate ;  ; UInt_t fYHotspot;  picture y hotspot coordinate ;  . #include <GuiTypes.h>; Member Data Documentation. ◆ fCloseness. UInt_t PictureAttributes_t::fCloseness. allowable RGB deviation ; Definition at line 332 of file GuiTypes.h. ◆ fColormap. Colormap_t PictureAttributes_t::fColormap. colormap to use ; Definition at line 324 of file GuiTypes.h. ◆ fDepth. Int_t PictureAttributes_t::fDepth. depth of window ; Definition at line 325 of file GuiTypes.h. ◆ fHeight. UInt_t PictureAttributes_t::fHeight. height of picture ; Definition at line 327 of file GuiTypes.h. ◆ fMask. Mask_t PictureAttributes_t::fMask. mask specifying which attributes are defined ; Definition at line 333 of file GuiTypes.h. ◆ fNpixels. UInt_t PictureAttributes_t::fNpixels. number of used color pixels ; Definition at line 331 of file GuiTypes.h. ◆ fPixels. ULong_t* PictureAttributes_t::fPixels. list of used color pixels (if set use delete[]) ; Definition at line 330 of file GuiTypes.h. ◆ fWidth. UInt_t PictureAttributes_t::fWidth. width of picture ; Definition at line 326 of file GuiTypes.h. ◆ fXHotspot. UInt_t PictureAttributes_t::fXHotspot. picture x hotspot coordinate ; Definition at line 328 of file GuiTypes.h. ◆ fYHotspot. UInt_t PictureAttributes_t::fYHotspot. picture y h,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structPictureAttributes__t.html:76,Guid,Guide,76,doc/master/structPictureAttributes__t.html,https://root.cern,https://root.cern/doc/master/structPictureAttributes__t.html,1,['Guid'],['Guide']
Usability,". ROOT: PiecewiseInterpolation Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; PiecewiseInterpolation Class ReferenceRooFit » RooStats » HistFactory. ; The PiecewiseInterpolation is a class that can morph distributions into each other, which is useful to estimate systematic uncertainties. ; Given a nominal distribution and one or more altered or distorted ones, it computes a new shape depending on the value of the nuisance parameters \( \alpha_i \): ; \[; A = \sum_i \mathrm{Interpolate}(\mathrm{low}_i, \mathrm{nominal}, \mathrm{high}_i, \alpha_i).; \]. If an \( \alpha_i \) is zero, the distribution is identical to the nominal distribution, at \( \pm 1 \) it is identical to the up/down distribution for that specific \( i \).; The class supports several interpolation methods, which can be selected for each parameter separately using setInterpCode(). The default interpolation code is 4. This performs; \( |\alpha | > 1 \): Linear extrapolation.; \( |\alpha | < 1 \): Polynomial interpolation. A sixth-order polynomial is used. Its coefficients are chosen such that function, first, and second derivative at \( \alpha \pm 1 \) match the values that the extrapolation procedure uses. . Definition at line 30 of file PiecewiseInterpolation.h. Classes; class  CacheElem;  . Public Member Functions;  PiecewiseInterpolation ();  ;  PiecewiseInterpolation (const char *name, const char *title, const RooAbsReal &nominal, const RooArgList &lowSet, const RooArgList &highSet, const RooArgList &paramSet);  Construct a new interpolation. ;  ;  PiecewiseInterpolation (const PiecewiseInterpolation &other, const char *name=nullptr);  Copy constructor. ;  ;  ~PiecewiseInterpolation () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classPiecewiseInterpolation.html:78,Guid,Guide,78,doc/master/classPiecewiseInterpolation.html,https://root.cern,https://root.cern/doc/master/classPiecewiseInterpolation.html,1,['Guid'],['Guide']
Usability,". ROOT: Point_t Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; Point_t Struct Reference. ; Point structure (maps to the X11 XPoint structure) ; Definition at line 356 of file GuiTypes.h. Public Attributes; Short_t fX;  ; Short_t fY;  . #include <GuiTypes.h>; Member Data Documentation. ◆ fX. Short_t Point_t::fX. Definition at line 357 of file GuiTypes.h. ◆ fY. Short_t Point_t::fY. Definition at line 357 of file GuiTypes.h. Collaboration diagram for Point_t:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; core/gui/inc/GuiTypes.h. Point_t. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:37 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structPoint__t.html:64,Guid,Guide,64,doc/master/structPoint__t.html,https://root.cern,https://root.cern/doc/master/structPoint__t.html,2,['Guid'],['Guide']
Usability,". ROOT: Probability Density Functions (PDF). ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; Probability Density Functions (PDF)Math » MathCore | Math » MathMore » Statistical functions. ; Probability density functions of various statistical distributions (continuous and discrete). ; The probability density function returns the probability that the variate has the value x. In statistics the PDF is also called the frequency function. . Functions; double ROOT::Math::noncentral_chisquared_pdf (double x, double r, double lambda);  Probability density function of the non central \(\chi^2\) distribution with \(r\) degrees of freedom and the noon-central parameter \(\lambda\). ;  ; double ROOT::Math::vavilov_accurate_pdf (double x, double kappa, double beta2);  The Vavilov probability density function. ;  ; double ROOT::Math::vavilov_fast_pdf (double x, double kappa, double beta2);  The Vavilov probability density function. ;  . Probability Density Functions from MathCore; Additional PDF's are provided in the MathMore library (see PDF functions from MathMore) . double ROOT::Math::beta_pdf (double x, double a, double b);  Probability density function of the beta distribution. ;  ; double ROOT::Math::binomial_pdf (unsigned int k, double p, unsigned int n);  Probability density function of the binomial distribution. ;  ; double ROOT::Math::negative_binomial_pdf (unsigned int k, double p, double n);  Probability density function of the negative binomial distribution. ;  ; double ROOT::Math::breitwigner_pdf (double x, double gamma, double x0=0);  Probability density function of Breit-Wigner distribution, which is similar, just a different definition of the parameters, to the Cauchy distribution (see cauchy_pdf ) ;  ; double ROOT::Math::cauchy_pdf (double x, double b=1, double x0=0);  Probability density function of the Cauchy distribution which is also called Lorentzian distribution. ;  ; double ROOT::Math::chisquared_pdf (double x, d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__PdfFunc.html:75,Guid,Guide,75,doc/master/group__PdfFunc.html,https://root.cern,https://root.cern/doc/master/group__PdfFunc.html,1,['Guid'],['Guide']
Usability,. ROOT: ProcInfo_t Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; ProcInfo_t Struct Reference. . Definition at line 196 of file TSystem.h. Public Member Functions;  ProcInfo_t ();  ; virtual ~ProcInfo_t ();  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Public Attributes; Float_t fCpuSys;  ; Float_t fCpuUser;  ; Long_t fMemResident;  ; Long_t fMemVirtual;  . #include <TSystem.h>; Constructor & Destructor Documentation. ◆ ProcInfo_t(). ProcInfo_t::ProcInfo_t ; (; ). inline . Definition at line 201 of file TSystem.h. ◆ ~ProcInfo_t(). ProcInfo_t::~ProcInfo_t ; (; ). virtual . Definition at line 75 of file TSystem.cxx. Member Function Documentation. ◆ Class(). static TClass * ProcInfo_t::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * ProcInfo_t::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t ProcInfo_t::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 204 of file TSystem.h. ◆ DeclFileName(). static const char * ProcInfo_t::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 204 of file TSystem.h. ◆ IsA(). virtual TClass * ProcInfo_t::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Definition at line 204 of file TSystem.h. ◆ Streamer(). virtual void ProcInfo_t::Streamer ; (; TBuffer & ; ). virtual . ◆ StreamerNVirtual(). void ProcInfo_t::StreamerNVirtual ; (; TBuffer & ; ClassDef_Str,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structProcInfo__t.html:67,Guid,Guide,67,doc/master/structProcInfo__t.html,https://root.cern,https://root.cern/doc/master/structProcInfo__t.html,1,['Guid'],['Guide']
Usability,". ROOT: Proof tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules |; Files ; Proof tutorialsTutorials. ; These examples aim to illustrate the usage of PROOF. . Modules;  ProcFileElements;  Class to hold information about the processed elements of a file. ;  ;  ProofAux;  Selector used for auxiliary actions in the PROOF tutorials. ;  ;  ProofEvent;  Selector for generic processing with Event. ;  ;  ProofEventProc;  Selector to process trees containing Event structures. ;  ;  ProofFriends;  Selector to process tree friends. ;  ;  ProofNtuple;  Selector to fill a simple ntuple. ;  ;  ProofPythia;  Selector to generate Monte Carlo events with Pythia8. ;  ;  ProofSimple;  Selector to fill a set of histograms. ;  ;  ProofSimpleFile;  Selector to fill a set of histograms and merging via file. ;  ;  ProofStdVec;  Selector for generic processing with stdlib collections. ;  ;  ProofTests;  Auxilliary selector used to test PROOF functionality. ;  . Files; file  EmptyInclude.h;  Empty file to test TProof::Load in runProof.C and StressProof.cxx in conjunction with ProcFileElements and ProofEventProc . ;  ; file  finalizeProof.C;  Macro to finalize queries run with the macro tutorials/runProof . ;  ; file  getProof.C;  Attaches to a PROOF session, possibly at the indicated URL. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__proof.html:55,Guid,Guide,55,doc/master/group__tutorial__proof.html,https://root.cern,https://root.cern/doc/master/group__tutorial__proof.html,3,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: PyROOT Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Functions |; Variables ; PyROOT Namespace Reference. Classes; class  RegulatorCleanup;  A TObject-derived class to inject the memory regulation logic in the ROOT list of cleanups. More...;  ; class  RPyROOTApplication;  Interactive application for Python. More...;  ; class  TMemoryRegulator;  Manages TObject-derived objects created in a PyROOT application. More...;  . Functions; PyObject * AddCPPInstancePickling (PyObject *self, PyObject *args);  Set reduce attribute for CPPInstance objects. ;  ; PyObject * AddPrettyPrintingPyz (PyObject *self, PyObject *args);  Add pretty printing pythonization. ;  ; PyObject * AddTClassDynamicCastPyz (PyObject *self, PyObject *args);  Add pythonization for TClass::DynamicCast. ;  ; PyObject * AddTObjectEqNePyz (PyObject *self, PyObject *args);  Add pythonization for equality and inequality operators in TObject. ;  ; PyObject * BranchPyz (PyObject *self, PyObject *args);  Add pythonization for TTree::Branch. ;  ; PyObject * ClearProxiedObjects (PyObject *self, PyObject *args);  ; PyObject * CPPInstanceExpand (PyObject *self, PyObject *args);  Deserialize pickled objects. ;  ; PyObject * GetBranchAttr (PyObject *self, PyObject *args);  ; void Init ();  ; PyObject * RegisterConverterAlias (PyObject *, PyObject *args);  ; PyObject * RegisterExecutorAlias (PyObject *, PyObject *args);  . Variables; PyObject * gRootModule = nullptr;  . Function Documentation. ◆ AddCPPInstancePickling(). PyObject * PyROOT::AddCPPInstancePickling ; (; PyObject * ; self, . PyObject * ; args . ). Set reduce attribute for CPPInstance objects. ; Parameters. [in]selfAlways null, since this is a module function. ; [in]argsPointer to a Python tuple object containing the arguments received from Python. The C++ function op_reduce defined above is wrapped in a Python method so that it can be injected in CPPInstance ; Definition at line 123 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespacePyROOT.html:66,Guid,Guide,66,doc/master/namespacePyROOT.html,https://root.cern,https://root.cern/doc/master/namespacePyROOT.html,1,['Guid'],['Guide']
Usability,". ROOT: PyROOT::RegulatorCleanup Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; PyROOT::RegulatorCleanup Class Referencefinal. ; A TObject-derived class to inject the memory regulation logic in the ROOT list of cleanups. ; The purpose of this class is to keep the responsibilities separate between the TMemoryRegulator logic and the rest of ROOT. ; Definition at line 85 of file TMemoryRegulator.h. Public Member Functions; void CallClearProxiedObjects ();  ; TClass * IsA () const;  ; void RecursiveRemove (TObject *object) final;  Recursively remove this object from a list. ;  ; void Streamer (TBuffer &R__b);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classPyROOT_1_1RegulatorCleanup.html:80,Guid,Guide,80,doc/master/classPyROOT_1_1RegulatorCleanup.html,https://root.cern,https://root.cern/doc/master/classPyROOT_1_1RegulatorCleanup.html,1,['Guid'],['Guide']
Usability,". ROOT: PyRoot tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; PyRoot tutorialsTutorials. ; Selected examples illustrating how to use ROOT's Python interface: PyROOT. . Files; file  demo.py;  To run, do ""python <path-to>/demo.py"". ;  ; file  demoshelp.py;   Display demo help. ;  ; file  DynamicSlice.py;   Example of function called when a mouse event occurs in a pad. ;  ; file  fit1.py;   Fit example. ;  ; file  formula1.py;   TF1 example. ;  ; file  geometry.py;   Geometry ;  ; file  gerrors.py;   A Simple Graph with error bars ;  ; file  graph.py;   A Simple Graph Example ;  ; file  gui_ex.py;  A Simple GUI Example. ;  ; file  h1ReadAndDraw.py;   A Simple histogram drawing example ;  ; file  hsimple.py;   This program creates : ;  ; file  hsum.py;   Simple example illustrating how to use the C++ interpreter ;  ; file  mrt.py;   Build ROOT Ntuple from other source. ;  ; file  na49geomfile.py;  Before executing this macro, the file makegeometry.C must have been executed. ;  ; file  na49view.py;  This macro generates two views of the NA49 detector. ;  ; file  na49visible.py;  Set visibility attributes for the NA49 geometry Set Shape attributes. ;  ; file  ntuple1.py;   Ntuple drawing example. ;  ; file  numberEntry.py;  Example frame with one box where the user can increase or decrease a number and the shown value will be updated accordingly. ;  ; file  parse_CSV_file_with_TTree_ReadStream.py;  This function provides an example of how one might massage a csv data file to read into a ROOT TTree via TTree::ReadStream. ;  ; file  pyroot001_arrayInterface.py;   This tutorial illustrates the conversion of STL vectors and TVec to numpy arrays without copying the data. ;  ; file  pyroot002_pythonizationDecorator.py;   This tutorial shows how to use the @pythonization decorator to add extra behaviour to C++ user classes that are used from Python via PyROOT. ;  ; file  pyroot003_prettyPrinting.py;   This tutorial illustrates ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__pyroot.html:56,Guid,Guide,56,doc/master/group__tutorial__pyroot.html,https://root.cern,https://root.cern/doc/master/group__tutorial__pyroot.html,6,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,. ROOT: Pythia tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Pythia tutorialsTutorials. ; Examples showing the pythia usage. . Files; file  pythia8.C;  pythia8 basic example ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__pythia.html:56,Guid,Guide,56,doc/master/group__tutorial__pythia.html,https://root.cern,https://root.cern/doc/master/group__tutorial__pythia.html,2,['Guid'],['Guide']
Usability,. ROOT: Quadratic programming package. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Quadratic programming package.Tutorials. ; Example showing the usage of the quadratic programming package quadp. . Files; file  portfolio.C;   This macro shows in detail the use of the quadratic programming package quadp . ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__quadp.html:69,Guid,Guide,69,doc/master/group__tutorial__quadp.html,https://root.cern,https://root.cern/doc/master/group__tutorial__quadp.html,2,['Guid'],['Guide']
Usability,". ROOT: Quantile Functions. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; Quantile FunctionsMath » MathCore | Math » MathMore » Statistical functions. ; Inverse functions of the cumulative distribution functions and the inverse of the complement of the cumulative distribution functions for various distributions. ; The functions with the extension _quantile calculate the inverse of the _cdf function, the lower tail integral of the probability density function \(D^{-1}(z)\) where. \[ D(x) = \int_{-\infty}^{x} p(x') dx' \]. while those with the _quantile_c extension calculate the inverse of the _cdf_c functions, the upper tail integral of the probability density function \(D^{-1}(z) \) where. \[ D(x) = \int_{x}^{+\infty} p(x') dx' \]. These functions are defined in the header file Math/ProbFunc.h or in the global one including all statistical functions Math/DistFunc.h; NOTE: In the old releases (< 5.14) the _quantile functions were called _quant_inv and the _quantile_c functions were called _prob_inv. These names are currently kept for backward compatibility, but their usage is deprecated.; The functions with the extension _quantile calculate the inverse of the _cdf function, the lower tail integral of the probability density function \(D^{-1}(z)\) where. \[ D(x) = \int_{-\infty}^{x} p(x') dx' \]. while those with the _quantile_c extension calculate the inverse of the _cdf_c functions, the upper tail integral of the probability density function \(D^{-1}(z) \) where. \[ D(x) = \int_{x}^{+\infty} p(x') dx' \]. The implementation used is that of GSL.; NOTE: In the old releases (< 5.14) the _quantile functions were called _quant_inv and the _quantile_c functions were called _prob_inv. These names are currently kept for backward compatibility, but their usage is deprecated. . Functions; double ROOT::MathMore::chisquared_quantile (double z, double r);  Re-implementation in MathMore of the Inverse ( \(D^{-1}(z)\)) of the cumulativ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__QuantFunc.html:58,Guid,Guide,58,doc/master/group__QuantFunc.html,https://root.cern,https://root.cern/doc/master/group__QuantFunc.html,1,['Guid'],['Guide']
Usability,. ROOT: R Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. R Class Reference. The documentation for this class was generated from the following files:. R. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:49 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classR.html:57,Guid,Guide,57,doc/master/classR.html,https://root.cern,https://root.cern/doc/master/classR.html,2,['Guid'],['Guide']
Usability,". ROOT: R tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; R tutorialsTutorials. ; Examples showing the R interface. . Files; file  DataFrame.C;   ;  ; file  example.C;   Simple example on how to use ROOT-R interface. ;  ; file  Function.C;   ;  ; file  Functor.C;   Example to create class Functor ;  ; file  GlobalMinimization.C;   Example based in http://cran.r-project.org/web/packages/DEoptim/DEoptim.pdf Please install the R package DEoptim before run this example. ;  ; file  Integration.C;   Numerical integration using R passing the function from ROOT ;  ; file  Interpolation.C;   More Information for R interpolation in http://stat.ethz.ch/R-manual/R-patched/library/stats/html/approxfun.html NOTE: this example illustrates an interpolation with random points given from ROOT and procedures made in R's environment. ;  ; file  Minimization.C;   Example based on http://stat.ethz.ch/R-manual/R-devel/library/stats/html/optim.html ;  ; file  SimpleFitting.C;  Create an exponential fitting The idea is to create a set of numbers x,y with the function x^3 and some noise from ROOT, fit the function to get the exponent (which must be near 3) and plot the points with noise, the known function and the fitted function. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__r.html:51,Guid,Guide,51,doc/master/group__tutorial__r.html,https://root.cern,https://root.cern/doc/master/group__tutorial__r.html,4,"['Guid', 'Simpl']","['Guide', 'Simple', 'SimpleFitting']"
Usability,". ROOT: RCaloTower Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; RCaloTower Class Reference. . Definition at line 100 of file collection_proxies.C. Public Member Functions;  RCaloTower (float eta, float phi, float et);  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRCaloTower.html:66,Guid,Guide,66,doc/master/classRCaloTower.html,https://root.cern,https://root.cern/doc/master/classRCaloTower.html,1,['Guid'],['Guide']
Usability,". ROOT: RNTuple Introduction. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTuple Introduction. RNTuple (for n-tuple and nested tuple) is the experimental evolution of TTree columnar data storage. RNTuple introduces new interfaces that aim to be more robust. In particular, the new interfaces are type-safe through the use of templates, and the ownership is well-defined through the use of smart pointers. For instance tree->Branch(""px"", &Category, ""px/F"");; becomes auto px = model->MakeField<float>(""px"");; // px is std::shared_ptr<float>; The physical layout changes slightly from big endian to little endian so that it matches the in-memory layout on most modern architectures. Combined with a clear separation of offset/index data and payload data for collections, uncompressed RNTuple data can be directly mapped to memory without further copies. Goals; RNTuple shall investigate improvements of the TTree I/O in the following ways. More speed; Improve mapping to vectorized and parallel hardware; For types known at compile / JIT time: generate optimized code; Optimized for simple types (float, int, and vectors of them); Better memory control: work with a fixed budget of pre-defined I/O buffers; Naturally thread-safe and asynchronous interfaces. More robust interfaces; Compile-time type safety by default; Decomposition into layers: logical layer, primitives layer, storage layer; Separation of data model and live data; Self-contained I/O code to support creation of a standalone I/O library. Concepts; At the logical layer, the user defines a data model using the RNTupleModel class. The data model is a collection of serializable C++ types with associated names, similar to branches in a TTree. The data model can contain (nested) collections, e.g., a type can be std::vector<std::vector<float>>.; Each serializable type is represented by a field, concretely by a templated version of RField, e.g. RField<double>. A field can generate or adopt an as",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/md_tree_2ntuple_2v7_2doc_2README.html:60,Guid,Guide,60,doc/master/md_tree_2ntuple_2v7_2doc_2README.html,https://root.cern,https://root.cern/doc/master/md_tree_2ntuple_2v7_2doc_2README.html,2,"['Guid', 'clear']","['Guide', 'clear']"
Usability,. ROOT: ROOT 7 histogram classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; ROOT 7 histogram classes.Histogram Library. ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback . Files; file  RAxis.cxx;  ; file  RAxis.hxx;  ; file  RAxisConfig.hxx;  ; file  RHist.hxx;  ; file  RHistBinIter.hxx;  ; file  RHistBufferedFill.hxx;  ; file  RHistConcurrentFill.hxx;  ; file  RHistData.hxx;  ; file  RHistImpl.hxx;  ; file  RHistUtils.hxx;  ; file  RHistView.hxx;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:32 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__HistV7.html:64,Guid,Guide,64,doc/master/group__HistV7.html,https://root.cern,https://root.cern/doc/master/group__HistV7.html,3,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,. ROOT: ROOT 7 ntuple tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; ROOT 7 ntuple tutorialsTutorials » ROOT 7 tutorials. ; Various examples showing the ROOT 7 ntuples. ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! . Files; file  ntpl001_staff.C;   Write and read tabular data with RNTuple. ;  ; file  ntpl002_vector.C;   Write and read STL vectors with RNTuple. ;  ; file  ntpl004_dimuon.C;   Mini-Analysis on CMS OpenData with RDataFrame. ;  ; file  ntpl005_introspection.C;   Write and read an RNTuple from a user-defined class. ;  ; file  ntpl006_friends.C;   Work with befriended RNTuples. ;  ; file  ntpl007_mtFill.C;   Example of multi-threaded writes using multiple REntry objects ;  ; file  ntpl008_import.C;   Example of converting data stored in a TTree into an RNTuple ;  ; file  ntpl009_parallelWriter.C;   Example of multi-threaded writes using RNTupleParallelWriter. ;  ; file  ntpl010_skim.C;   Example creating a derived RNTuple ;  ; file  ntpl011_global_temperatures.C;   This ROOT 7 example demonstrates how to use RNTuple in combination with ROOT 6 features like RDataframe and visualizations. ;  ; file  ntpl012_processor.C;   Demonstrate the RNTupleProcessor using multiple RNTuples ;  ; file  ntpl013_staged.C;   Example of staged cluster committing in multi-threaded writing using RNTupleParallelWriter. ;  ; file  ntpl014_framework.C;   ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__ntuple.html:63,Guid,Guide,63,doc/master/group__tutorial__ntuple.html,https://root.cern,https://root.cern/doc/master/group__tutorial__ntuple.html,3,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,. ROOT: ROOT 7 tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules |; Files ; ROOT 7 tutorialsTutorials. ; Various examples showing the ROOT 7 interface. ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! . Modules;  RCanvas examples;  These are RCanvas examples ... ;  ;  ROOT 7 ntuple tutorials;  Various examples showing the ROOT 7 ntuples. ;  . Files; file  browser.cxx;  ; file  concurrentfill.cxx;  ; file  filedialog.cxx;  ; file  fitpanel.cxx;  ; file  fitpanel6.cxx;  ; file  histops.cxx;  ; file  perf.cxx;  ; file  perfcomp.cxx;  ; file  simple.cxx;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__v7.html:56,Guid,Guide,56,doc/master/group__tutorial__v7.html,https://root.cern,https://root.cern/doc/master/group__tutorial__v7.html,4,"['Feedback', 'Guid', 'simpl']","['Feedback', 'Guide', 'simple']"
Usability,". ROOT: ROOT Namespace Reference. ; ROOT   6.18/05 Reference Guide ; . Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT Namespace ReferenceMath » MathCore | Math » MathMore » Statistical functions. Namespace for new ROOT classes and functions. ; More... Namespaces; namespace  CocoaTutorials;  ; namespace  Detail;  ; namespace  ExecutorUtils;  This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ;  ; namespace  Experimental;  ; namespace  Fit;  Namespace for the fitting classes. ;  ; namespace  GLTutorials;  ; namespace  Internal;  ; namespace  MacOSX;  ; namespace  Math;  ; namespace  MathMore;  ; namespace  Meta;  ; namespace  Minuit;  ; namespace  Minuit2;  ; namespace  option;  The namespace of The Lean Mean C++ Option Parser. ;  ; namespace  Quartz;  ; namespace  R;  namespace associated R package for ROOT. ;  ; namespace  RDF;  ; namespace  TF1Helper;  ; namespace  TMetaUtils;  ; namespace  TreeUtils;  ; namespace  TThreadedObjectUtils;  ; namespace  TypeTraits;  ROOT type_traits extensions. ;  ; namespace  v5;  ; namespace  VecOps;  . Classes; struct  RCompressionSetting;  The global settings depend on a global variable named R__ZipMode which can be modified by a global function named R__SetZipMode. More...;  ; class  RDataFrame;  ROOT's RDataFrame offers a high level interface for analyses of data stored in TTrees, CSV's and other data formats. More...;  ; class  TExecutor;  This class defines an interface to execute the same task multiple times in parallel, possibly with different arguments every time. More...;  ; class  TGenericClassInfo;  ; class  TIOFeatures;  TIOFeatures provides the end-user with the ability to change the IO behavior of data written via a TTree. More...;  ; class  TModuleGenerator;  ; class  TProcessExecutor;  This class provides a simple interface to execute the same task multiple times in parallel, possibly with different arguments every t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v618/namespaceROOT.html:61,Guid,Guide,61,doc/v618/namespaceROOT.html,https://root.cern,https://root.cern/doc/v618/namespaceROOT.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT Namespace ReferenceMath » MathCore | Math » MathMore » Statistical functions. tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ; More... Namespaces; namespace  Browsable;  ; namespace  CocoaTutorials;  ; namespace  Detail;  Special implementation of ROOT::RRangeCast for TCollection, including a check that the cast target type inherits from TObject and a new constructor that takes the TCollection by pointer. ;  ; namespace  Details;  ; namespace  ExecutorUtils;  This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ;  ; namespace  Experimental;  ; namespace  Fit;  Namespace for the fitting classes. ;  ; namespace  FoundationUtils;  ; namespace  Geom;  ; namespace  Internal;  ; namespace  MacOSX;  ; namespace  Math;  ; namespace  MathMore;  ; namespace  Meta;  ; namespace  Minuit;  ; namespace  Minuit2;  ; namespace  option;  The namespace of The Lean Mean C++ Option Parser. ;  ; namespace  Quartz;  ; namespace  R;  namespace associated R package for ROOT. ;  ; namespace  RDF;  ; namespace  TestSupport;  ; namespace  TF1Helper;  ; namespace  TMetaUtils;  ; namespace  TreeUtils;  ; namespace  TThreadedObjectUtils;  ; namespace  TypeTraits;  ROOT type_traits extensions. ;  ; namespace  v5;  ; namespace  VecOps;  . Classes; class  RBrowser;  Web-based ROOT files and objects browser. More...;  ; class  RBrowserCatchedWidget;  ; class  RBrowserData;  Way to browse (hopefully) everything in ROOT. More...;  ; class  RBrowserDataCleanup;  ; class  RBrowserEditorWidget;  ; class  RBrowserInfoWidget;  ; class  RBrowserReply;  Reply on browser request. More...;  ; class  RBrowserRequest;  Request send from client to g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT.html:64,Guid,Guide,64,doc/master/namespaceROOT.html,https://root.cern,https://root.cern/doc/master/namespaceROOT.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT Namespace Reference. ; ROOT  ; . v6-20. Reference Guide ; . Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT Namespace ReferenceMath » MathCore | Math » MathMore » Statistical functions. VSD Structures. ; More... Namespaces; namespace  CocoaTutorials;  ; namespace  Detail;  ; namespace  ExecutorUtils;  This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ;  ; namespace  Experimental;  ; namespace  Fit;  Namespace for the fitting classes. ;  ; namespace  FoundationUtils;  ; namespace  GLTutorials;  ; namespace  Internal;  ; namespace  MacOSX;  ; namespace  Math;  ; namespace  MathMore;  ; namespace  Meta;  ; namespace  Minuit;  ; namespace  Minuit2;  ; namespace  option;  The namespace of The Lean Mean C++ Option Parser. ;  ; namespace  Quartz;  ; namespace  R;  namespace associated R package for ROOT. ;  ; namespace  RDF;  ; namespace  TF1Helper;  ; namespace  TMetaUtils;  ; namespace  TreeUtils;  ; namespace  TThreadedObjectUtils;  ; namespace  TypeTraits;  ROOT type_traits extensions. ;  ; namespace  v5;  ; namespace  VecOps;  . Classes; struct  RCompressionSetting;  The global settings depend on a global variable named R__ZipMode which can be modified by a global function named R__SetZipMode. More...;  ; class  RDataFrame;  ROOT's RDataFrame offers a high level interface for analyses of data stored in TTrees, CSV's and other data formats. More...;  ; class  TExecutor;  This class defines an interface to execute the same task multiple times in parallel, possibly with different arguments every time. More...;  ; class  TGenericClassInfo;  ; class  TIOFeatures;  TIOFeatures provides the end-user with the ability to change the IO behavior of data written via a TTree. More...;  ; class  TModuleGenerator;  ; class  TProcessExecutor;  This class provides a simple interface to execute the same task multiple times in parallel, possibly with different arguments ever",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v620/namespaceROOT.html:63,Guid,Guide,63,doc/v620/namespaceROOT.html,https://root.cern,https://root.cern/doc/v620/namespaceROOT.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT Namespace Reference. ; ROOT  ; . v6-22. Reference Guide ; . Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT Namespace ReferenceMath » MathCore | Math » MathMore » Statistical functions. tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ; More... Namespaces; namespace  CocoaTutorials;  ; namespace  Detail;  ; namespace  ExecutorUtils;  This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ;  ; namespace  Experimental;  ; namespace  Fit;  Namespace for the fitting classes. ;  ; namespace  FoundationUtils;  ; namespace  Geom;  ; namespace  GLTutorials;  ; namespace  Internal;  ; namespace  MacOSX;  ; namespace  Math;  ; namespace  MathMore;  ; namespace  Meta;  ; namespace  Minuit;  ; namespace  Minuit2;  ; namespace  option;  The namespace of The Lean Mean C++ Option Parser. ;  ; namespace  Quartz;  ; namespace  R;  namespace associated R package for ROOT. ;  ; namespace  RDF;  ; namespace  TF1Helper;  ; namespace  TMetaUtils;  ; namespace  TreeUtils;  ; namespace  TThreadedObjectUtils;  ; namespace  TypeTraits;  ROOT type_traits extensions. ;  ; namespace  v5;  ; namespace  VecOps;  . Classes; struct  RCompressionSetting;  The global settings depend on a global variable named R__ZipMode which can be modified by a global function named R__SetZipMode. More...;  ; class  RDataFrame;  ROOT's RDataFrame offers a high level interface for analyses of data stored in TTrees, CSV's and other data formats. More...;  ; class  ROpaqueTaskArena;  ; class  TExecutor;  This class defines an interface to execute the same task multiple times in parallel, possibly with different arguments every time. More...;  ; class  TGenericClassInfo;  ; class  TIOFeatures;  TIOFeatures provides the end-user with the ability to change the IO behavior of data written via a TTree. More...",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v622/namespaceROOT.html:63,Guid,Guide,63,doc/v622/namespaceROOT.html,https://root.cern,https://root.cern/doc/v622/namespaceROOT.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT Namespace Reference. ; ROOT  ; . v6-24. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT Namespace ReferenceMath » MathCore | Math » MathMore » Statistical functions. tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ; More... Namespaces; namespace  CocoaTutorials;  ; namespace  Detail;  ; namespace  ExecutorUtils;  This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ;  ; namespace  Experimental;  ; namespace  Fit;  Namespace for the fitting classes. ;  ; namespace  FoundationUtils;  ; namespace  Geom;  ; namespace  GLTutorials;  ; namespace  Internal;  ; namespace  MacOSX;  ; namespace  Math;  ; namespace  MathMore;  ; namespace  Meta;  ; namespace  Minuit;  ; namespace  Minuit2;  ; namespace  option;  The namespace of The Lean Mean C++ Option Parser. ;  ; namespace  Quartz;  ; namespace  R;  namespace associated R package for ROOT. ;  ; namespace  RDF;  ; namespace  TF1Helper;  ; namespace  TMetaUtils;  ; namespace  TreeUtils;  ; namespace  TThreadedObjectUtils;  ; namespace  TypeTraits;  ROOT type_traits extensions. ;  ; namespace  v5;  ; namespace  VecOps;  . Classes; struct  RCompressionSetting;  The global settings depend on a global variable named R__ZipMode which can be modified by a global function named R__SetZipMode. More...;  ; class  RDataFrame;  ROOT's RDataFrame offers a high level interface for analyses of data stored in TTrees, CSV's and other data formats. More...;  ; class  ROpaqueTaskArena;  ; class  TExecutorCRTP;  This class defines an interface to execute the same task multiple times, possibly in parallel and with different arguments every time. More...;  ; class  TGenericClassInfo;  ; class  TIOFeatures;  TIOFeatures provides the end-user with the ability to change the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v624/namespaceROOT.html:63,Guid,Guide,63,doc/v624/namespaceROOT.html,https://root.cern,https://root.cern/doc/v624/namespaceROOT.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT Namespace Reference. ; ROOT  ; . v6-26. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT Namespace ReferenceMath » MathCore | Math » MathMore » Statistical functions. tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ; More... Namespaces; namespace  CocoaTutorials;  ; namespace  Detail;  Special implementation of ROOT::RRangeCast for TCollection, including a check that the cast target type inherits from TObject and a new constructor that takes the TCollection by pointer. ;  ; namespace  ExecutorUtils;  This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ;  ; namespace  Experimental;  ; namespace  Fit;  Namespace for the fitting classes. ;  ; namespace  FoundationUtils;  ; namespace  Geom;  ; namespace  GLTutorials;  ; namespace  Internal;  ; namespace  MacOSX;  ; namespace  Math;  ; namespace  MathMore;  ; namespace  Meta;  ; namespace  Minuit;  ; namespace  Minuit2;  ; namespace  option;  The namespace of The Lean Mean C++ Option Parser. ;  ; namespace  Quartz;  ; namespace  R;  namespace associated R package for ROOT. ;  ; namespace  RDF;  ; namespace  TF1Helper;  ; namespace  TMetaUtils;  ; namespace  TreeUtils;  ; namespace  TThreadedObjectUtils;  ; namespace  TypeTraits;  ROOT type_traits extensions. ;  ; namespace  v5;  ; namespace  VecOps;  . Classes; struct  RCompressionSetting;  The global settings depend on a global variable named R__ZipMode which can be modified by a global function named R__SetZipMode. More...;  ; class  RDataFrame;  ROOT's RDataFrame offers a high level interface for analyses of data stored in TTree, CSV's and other data formats. More...;  ; class  ROpaqueTaskArena;  ; class  RRangeCast;  Wraps any collection that can be used in range-based loops and applies stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v626/namespaceROOT.html:63,Guid,Guide,63,doc/v626/namespaceROOT.html,https://root.cern,https://root.cern/doc/v626/namespaceROOT.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT Namespace Reference. ; ROOT  ; . v6-28. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT Namespace ReferenceMath » MathCore | Math » MathMore » Statistical functions. This file contains a specialised ROOT message handler to test for diagnostic in unit tests. ; More... Namespaces; namespace  CocoaTutorials;  ; namespace  Detail;  Special implementation of ROOT::RRangeCast for TCollection, including a check that the cast target type inherits from TObject and a new constructor that takes the TCollection by pointer. ;  ; namespace  ExecutorUtils;  This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ;  ; namespace  Experimental;  ; namespace  Fit;  Namespace for the fitting classes. ;  ; namespace  FoundationUtils;  ; namespace  Geom;  ; namespace  GLTutorials;  ; namespace  Internal;  ; namespace  MacOSX;  ; namespace  Math;  ; namespace  MathMore;  ; namespace  Meta;  ; namespace  Minuit;  ; namespace  Minuit2;  ; namespace  option;  The namespace of The Lean Mean C++ Option Parser. ;  ; namespace  Quartz;  ; namespace  R;  namespace associated R package for ROOT. ;  ; namespace  RDF;  ; namespace  TestSupport;  ; namespace  TF1Helper;  ; namespace  TMetaUtils;  ; namespace  TreeUtils;  ; namespace  TThreadedObjectUtils;  ; namespace  TypeTraits;  ROOT type_traits extensions. ;  ; namespace  v5;  ; namespace  VecOps;  . Classes; struct  RCompressionSetting;  The global settings depend on a global variable named R__ZipMode which can be modified by a global function named R__SetZipMode. More...;  ; class  RDataFrame;  ROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree , CSV and other data formats, in C++ or Python. More...;  ; class  ROpaqueTaskArena;  ; class  RRangeCast;  Wraps any collection that can be used in range-based loops and applies static_cast<T> or",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v628/namespaceROOT.html:63,Guid,Guide,63,doc/v628/namespaceROOT.html,https://root.cern,https://root.cern/doc/v628/namespaceROOT.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT Namespace Reference. ; ROOT  ; . v6-30. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT Namespace ReferenceMath » MathCore | Math » MathMore » Statistical functions. This file contains a specialised ROOT message handler to test for diagnostic in unit tests. ; More... Namespaces; namespace  Browsable;  ; namespace  CocoaTutorials;  ; namespace  Detail;  Special implementation of ROOT::RRangeCast for TCollection, including a check that the cast target type inherits from TObject and a new constructor that takes the TCollection by pointer. ;  ; namespace  Details;  ; namespace  ExecutorUtils;  This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ;  ; namespace  Experimental;  ; namespace  Fit;  Namespace for the fitting classes. ;  ; namespace  FoundationUtils;  ; namespace  Geom;  ; namespace  GLTutorials;  ; namespace  Internal;  ; namespace  MacOSX;  ; namespace  Math;  ; namespace  MathMore;  ; namespace  Meta;  ; namespace  Minuit;  ; namespace  Minuit2;  ; namespace  option;  The namespace of The Lean Mean C++ Option Parser. ;  ; namespace  Quartz;  ; namespace  R;  namespace associated R package for ROOT. ;  ; namespace  RDF;  ; namespace  TestSupport;  ; namespace  TF1Helper;  ; namespace  TMetaUtils;  ; namespace  TreeUtils;  ; namespace  TThreadedObjectUtils;  ; namespace  TypeTraits;  ROOT type_traits extensions. ;  ; namespace  v5;  ; namespace  VecOps;  . Classes; class  RBrowser;  Web-based ROOT files and objects browser. More...;  ; class  RBrowserCatchedWidget;  ; class  RBrowserData;  Way to browse (hopefully) everything in ROOT. More...;  ; class  RBrowserDataCleanup;  ; class  RBrowserEditorWidget;  ; class  RBrowserInfoWidget;  ; class  RBrowserReply;  Reply on browser request. More...;  ; class  RBrowserRequest;  Request send from client to get content of path element. More...;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v630/namespaceROOT.html:63,Guid,Guide,63,doc/v630/namespaceROOT.html,https://root.cern,https://root.cern/doc/v630/namespaceROOT.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT Namespace ReferenceMath » MathCore | Math » MathMore » Statistical functions. tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ; More... Namespaces; namespace  Browsable;  ; namespace  CocoaTutorials;  ; namespace  Detail;  Special implementation of ROOT::RRangeCast for TCollection, including a check that the cast target type inherits from TObject and a new constructor that takes the TCollection by pointer. ;  ; namespace  Details;  ; namespace  ExecutorUtils;  This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ;  ; namespace  Experimental;  ; namespace  Fit;  Namespace for the fitting classes. ;  ; namespace  FoundationUtils;  ; namespace  Geom;  ; namespace  Internal;  ; namespace  MacOSX;  ; namespace  Math;  ; namespace  MathMore;  ; namespace  Meta;  ; namespace  Minuit;  ; namespace  Minuit2;  ; namespace  option;  The namespace of The Lean Mean C++ Option Parser. ;  ; namespace  Quartz;  ; namespace  R;  namespace associated R package for ROOT. ;  ; namespace  RDF;  ; namespace  TestSupport;  ; namespace  TF1Helper;  ; namespace  TMetaUtils;  ; namespace  TreeUtils;  ; namespace  TThreadedObjectUtils;  ; namespace  TypeTraits;  ROOT type_traits extensions. ;  ; namespace  v5;  ; namespace  VecOps;  . Classes; class  RBrowser;  Web-based ROOT files and objects browser. More...;  ; class  RBrowserCatchedWidget;  ; class  RBrowserData;  Way to browse (hopefully) everything in ROOT. More...;  ; class  RBrowserDataCleanup;  ; class  RBrowserEditorWidget;  ; class  RBrowserInfoWidget;  ; class  RBrowserReply;  Reply on browser request. More...;  ; class  RBrowserRequest;  Request send from client to ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT.html:63,Guid,Guide,63,doc/v632/namespaceROOT.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT Reference Documentation. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT Reference Documentation . Introduction; Welcome to ROOT!; This is the Reference Guide of the ROOT software toolkit. You can find in the reference documentation page pointers to Reference Guides for all ROOT versions. Manuals. The Manual provides a more in depth explanation of concepts and functionality available in the ROOT system. It is closely linked to the Reference Guide.; A number of topical User Guides and Manuals for various components of the system. Tutorials and courses. A rich set of ROOT tutorials and code examples are offered to developers to exercise specific functionality.; ROOT Primer.; ROOT Introductory Course. Provide your feedback; If you have suggestions about how to improve this documentation, you can let us know:. With a PR; On the ROOT Forum; On our tracker . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:52 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/index.html:68,Guid,Guide,68,doc/master/index.html,https://root.cern,https://root.cern/doc/master/index.html,7,"['Guid', 'feedback']","['Guide', 'Guides', 'feedback']"
Usability,". ROOT: ROOT Reference Documentation. ROOT;  6.06/09. Reference Guide. ROOT Home Page; Main Page; Related Pages; User's Classes; Namespaces; All Classes; Files; Release Notes. ROOT Reference Documentation . Introduction; Welcome to ROOT; This documentation describes the software classes and functions that makes up the ROOT softare system as well as their application programming interface (API). This is not an introduction of ROOT, for this please refer to the ROOT User Guides and Manuals. This documentation is generated directly from the source code using Doxygen and in principle is kept up to date. The version of ROOT corresponding to this documentation is indicated at the page heading. You may also find in reference documentation page pointers to reference manuals for other ROOT versions.; How to use this reference documentation; The User’s Classes in the top bar provides the user API, mainly the list of main Users' classes organized by module or functionality. The full list of classes, both for the public API and for the implementation details are available under the All Classes tab. A classification of classes based on their C++ namespace can be found under the Namespace tab. The fully indexed list of all source code is available under the tab Files.; ROOT provides other types of documentation:. A general Users Guide is provided for a more in depth explanation of concepts and functionality available in the ROOT system.; A number of topical User Guides and Manuals for various components of the system.; A rich set of ROOT tutorials and code examples are offered to developers to exercise specific functionality.; A rich set of HowTo's is also present to discuss issues commonly faced by ROOT users. Caveat; We have moved recently to generate the documentation with Doxygen. To achieve this the comments in the source code needed to be formatted and written specifically for Doxygen to generated proper documentation. If you find missing documentation or inaccuracies please",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/index.html:64,Guid,Guide,64,root/html606/index.html,https://root.cern,https://root.cern/root/html606/index.html,2,['Guid'],"['Guide', 'Guides']"
Usability,". ROOT: ROOT files layout. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT files layout. Table of Contents; ROOTIO files; Data record types""core"" record types; ""streamer"" layer record types; ""pointer to persistent object"" object types; ""application"" layer record types. Data compression; StreamerInfo; Pointers to persistent objects; Some useful container classesTObjArray and TClonesArray; TTree. Related pages. ROOTIO files; A ROOTIO file consists of one ""file header"", one or more ""data; records,"" and zero or more ""free segments"". The file header is always at the beginning of the file, while the data records and free segments may in principle appear in any order.; The file header is fixed length (64 bytes in the current release.) It's detailed format is given in File header format.; A free segment is of variable length. One free segment is a set of contiguous bytes that are unused, and are available for ROOTIO to use for new or resized data records. The first four bytes of a a free segment contain the negative of the number of bytes in the segment. The contents of the remainder of the free segment are irrelevant.; A data record represents either user data or data used internally by ROOTIO. All data records have two portions, a ""key"" portion and a ""data"" portion. The key portion precedes the data portion. The format of the key portion is the same for all data. (The key portion corresponds to a class TKey object). The object name and they key cycle are together sufficient to uniquely determine the record within the file. The Format of a class object in DATA page describes the format of the data portion of a record for an object that uses the default streamer. Data record types. ""core"" record types; There are several types of data records used internally by ROOTIO to support the storage of byte sequences. These record types are TFile, TDirectory, ""KeysList"", and ""FreeSegments"". These types can be considered to be in the ""core"" layer o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootio.html:57,Guid,Guide,57,doc/master/rootio.html,https://root.cern,https://root.cern/doc/master/rootio.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT7 Graphics. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules ; ROOT7 GraphicsGraphics. ; Classes for ROOT7 graphics. ; WarningThis is part of the ROOT7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! . Modules;  ROOT7 Pad related classes;  The ROOT7 Pad related classes. ;  ;  ROOT7 Base graphics classes;  The ROOT7 Base graphics classes. ;  ;  ROOT7 Canvas painting classes;  The ROOT7 Canvas painting classes. ;  ;  ROOT7 Graphics primitives;  The ROOT7 Graphics primitives. ;  ;  ROOT7 RPad coordinate systems;  The ROOT7 RPad coordinate systems. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:32 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__ROOT7Graphics.html:54,Guid,Guide,54,doc/master/group__ROOT7Graphics.html,https://root.cern,https://root.cern/doc/master/group__ROOT7Graphics.html,3,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: ROOT7 Pad related classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; ROOT7 Pad related classesGraphics » ROOT7 Graphics. ; The ROOT7 Pad related classes. . Classes; class  ROOT::Experimental::Detail::RArgsMenuItem;  Menu item which requires extra arguments for invoked class method. More...;  ; class  ROOT::Experimental::RAttrAggregation;  Base class for attributes aggregations like lines or fill attributes. More...;  ; class  ROOT::Experimental::RAttrAxis;  All supported axes attributes for: line, ticks, labels, title, min/max, log, reverse, ... More...;  ; class  ROOT::Experimental::RAttrAxisLabels;  Axis labels drawing attributes. More...;  ; class  ROOT::Experimental::RAttrAxisTicks;  Axis ticks attributes. More...;  ; class  ROOT::Experimental::RAttrAxisTitle;  Axis title and its drawing attributes. More...;  ; class  ROOT::Experimental::RAttrBase;  Base class for all attributes, used with RDrawable. More...;  ; class  ROOT::Experimental::RAttrBorder;  Drawing line attributes for different objects. More...;  ; class  ROOT::Experimental::RAttrFill;  Drawing fill attributes for different objects. More...;  ; class  ROOT::Experimental::RAttrFont;  A font attributes, used together with text attributes. More...;  ; class  ROOT::Experimental::RAttrLine;  Drawing line attributes for different objects. More...;  ; class  ROOT::Experimental::RAttrLineEnding;  Attributes for line ending. More...;  ; class  ROOT::Experimental::RAttrMap;  ; class  ROOT::Experimental::RAttrMargins;  A margins attributes. Only relative and pixel coordinates are allowed. More...;  ; class  ROOT::Experimental::RAttrMarker;  A marker attributes. More...;  ; class  ROOT::Experimental::RAttrText;  A text attributes. More...;  ; class  ROOT::Experimental::RAttrValue< T >;  Template class to access single value from drawable or other attributes. More...;  ; class  ROOT::Experimental::RCanvas;  A window's topmost RPad. More...;  ; class  ROOT::E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__GpadROOT7.html:65,Guid,Guide,65,doc/master/group__GpadROOT7.html,https://root.cern,https://root.cern/doc/master/group__GpadROOT7.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Browsable Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs |; Variables ; ROOT::Browsable Namespace Reference. Classes; class  RAnyObjectHolder;  Holder of any object instance. More...;  ; class  RElement;  Basic element of browsable hierarchy. More...;  ; class  RGroup;  Group of browsable elements - combines several different elements together. More...;  ; class  RHolder;  Basic class for object holder of any kind. More...;  ; class  RItem;  Representation of single item in the browser. More...;  ; class  RLevelIter;  Iterator over single level hierarchy like any array, keys list, ... More...;  ; class  RProvider;  Provider of different browsing methods for supported classes. More...;  ; class  RShared;  ; class  RSysDirLevelIter;  Iterator over files in in sub-directory. More...;  ; class  RSysFile;  ; class  RSysFileItem;  Representation of single item in the file browser. More...;  ; class  RUnique;  ; class  RWrapper;  Wrapper for other element - to provide different name. More...;  ; class  TGeoBrowseProvider;  Provider for TGeo browsing. More...;  ; class  TGeoManagerElement;  Representing TGeoManager in browsables. More...;  ; class  TGeoNodeElement;  Representing TGeoNode in browsables. More...;  ; class  TGeoVolumeElement;  Representing TGeoVolume in browsables. More...;  ; class  TGeoVolumeIter;  Iterating over nodes in the volume. More...;  ; class  TKeyItem;  Representation of single item in the file browser for object from TKey. More...;  ; class  TObjectElement;  Access to TObject basic properties for RBrowsable. More...;  ; class  TObjectHolder;  Holder of TObject instance. More...;  ; class  TObjectItem;  Representation of single item in the file browser for generic TObject object. More...;  . Typedefs; using RElementPath_t = std::vector< std::string >;  . Variables; ROOT::Browsable::TGeoBrowseProvider newTGeoBrowseProvider;  . Typedef Documentation. ◆ RElementPat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Browsable.html:75,Guid,Guide,75,doc/master/namespaceROOT_1_1Browsable.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Browsable.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Browsable Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs |; Variables ; ROOT::Browsable Namespace Reference. Classes; class  RAnyObjectHolder;  Holder of any object instance. More...;  ; class  RElement;  Basic element of browsable hierarchy. More...;  ; class  RGroup;  Group of browsable elements - combines several different elements together. More...;  ; class  RHolder;  Basic class for object holder of any kind. More...;  ; class  RItem;  Representation of single item in the browser. More...;  ; class  RLevelIter;  Iterator over single level hierarchy like any array, keys list, ... More...;  ; class  RProvider;  Provider of different browsing methods for supported classes. More...;  ; class  RShared;  ; class  RSysDirLevelIter;  Iterator over files in in sub-directory. More...;  ; class  RSysFile;  ; class  RSysFileItem;  Representation of single item in the file browser. More...;  ; class  RUnique;  ; class  RWrapper;  Wrapper for other element - to provide different name. More...;  ; class  TGeoBrowseProvider;  Provider for TGeo browsing. More...;  ; class  TGeoManagerElement;  Representing TGeoManager in browsables. More...;  ; class  TGeoNodeElement;  Representing TGeoNode in browsables. More...;  ; class  TGeoVolumeElement;  Representing TGeoVolume in browsables. More...;  ; class  TGeoVolumeIter;  Iterating over nodes in the volume. More...;  ; class  TKeyItem;  Representation of single item in the file browser for object from TKey. More...;  ; class  TObjectElement;  Access to TObject basic properties for RBrowsable. More...;  ; class  TObjectHolder;  Holder of TObject instance. More...;  ; class  TObjectItem;  Representation of single item in the file browser for generic TObject object. More...;  . Typedefs; using RElementPath_t = std::vector< std::string >;  . Variables; ROOT::Browsable::TGeoBrowseProvider newTGeoBrowseProvider;  . Typedef Documentation. ◆ RElementPath",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Browsable.html:74,Guid,Guide,74,doc/v632/namespaceROOT_1_1Browsable.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Browsable.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::CocoaTutorials Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; ROOT::CocoaTutorials Namespace Reference. Functions; Color_t FindFreeCustomColorIndex (Color_t start=1000);  ; template<unsigned N> ; unsigned FindFreeCustomColorIndices (Color_t(&indices)[N]);  . Function Documentation. ◆ FindFreeCustomColorIndex(). Color_t ROOT::CocoaTutorials::FindFreeCustomColorIndex ; (; Color_t ; start = 1000). inline . Definition at line 16 of file customcolor.h. ◆ FindFreeCustomColorIndices(). template<unsigned N> . unsigned ROOT::CocoaTutorials::FindFreeCustomColorIndices ; (; Color_t(&) ; indices[N]). inline . Definition at line 38 of file customcolor.h. ROOTCocoaTutorials. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:01 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1CocoaTutorials.html:80,Guid,Guide,80,doc/master/namespaceROOT_1_1CocoaTutorials.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1CocoaTutorials.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::CocoaTutorials Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; ROOT::CocoaTutorials Namespace Reference. Functions; Color_t FindFreeCustomColorIndex (Color_t start=1000);  ; template<unsigned N> ; unsigned FindFreeCustomColorIndices (Color_t(&indices)[N]);  . Function Documentation. ◆ FindFreeCustomColorIndex(). Color_t ROOT::CocoaTutorials::FindFreeCustomColorIndex ; (; Color_t ; start = 1000). inline . Definition at line 16 of file customcolor.h. ◆ FindFreeCustomColorIndices(). template<unsigned N> . unsigned ROOT::CocoaTutorials::FindFreeCustomColorIndices ; (; Color_t(&) ; indices[N]). inline . Definition at line 38 of file customcolor.h. ROOTCocoaTutorials. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:38 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1CocoaTutorials.html:79,Guid,Guide,79,doc/v632/namespaceROOT_1_1CocoaTutorials.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1CocoaTutorials.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Detail Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Functions ; ROOT::Detail Namespace Reference. Special implementation of ROOT::RRangeCast for TCollection, including a check that the cast target type inherits from TObject and a new constructor that takes the TCollection by pointer. ; More... Namespaces; namespace  Internal;  ; namespace  RDF;  ; namespace  VecOps;  . Classes; struct  CallableTraitsImpl;  Extract types from the signature of a callable object. See CallableTraits. More...;  ; struct  CallableTraitsImpl< R(*)(Args...), false >;  ; struct  CallableTraitsImpl< R(Args...), false >;  ; struct  CallableTraitsImpl< R(T::*)(Args...) const, false >;  ; struct  CallableTraitsImpl< R(T::*)(Args...), false >;  ; struct  CallableTraitsImpl< T, true >;  ; struct  indices;  ; struct  is_array_class;  ; struct  is_array_class< std::array< T, N > >;  ; struct  is_array_class< std::initializer_list< T > >;  ; struct  is_array_class< std::vector< T > >;  ; struct  make_indices_;  ; struct  make_indices_impl;  ; struct  make_indices_impl< First, Step, N, typename std::enable_if<(N > 1 &&N % 2==0)>::type >;  ; struct  make_indices_impl< First, Step, N, typename std::enable_if<(N > 1 &&N % 2==1)>::type >;  ; struct  make_indices_impl< First, Step, N, typename std::enable_if<(N==0)>::type >;  ; struct  make_indices_impl< First, Step, N, typename std::enable_if<(N==1)>::type >;  ; struct  make_indices_next;  ; struct  make_indices_next2;  ; struct  make_indices_next2< indices< Indices... >, Next, Tail >;  ; struct  make_indices_next< indices< Indices... >, Next >;  ; class  TBranchProxy;  Base class for all the proxy object. More...;  ; class  TCollectionProxyInfo;  ; class  TRangeCast;  ; class  TSchemaRuleSet;  ; class  TStatusBitsChecker;  . Typedefs; template<size_t Start, size_t Last, size_t Step = 1> ; using make_indices = typename make_indices_< Start, Last, Ste",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Detail.html:72,Guid,Guide,72,doc/master/namespaceROOT_1_1Detail.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Detail.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Detail Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Functions ; ROOT::Detail Namespace Reference. Special implementation of ROOT::RRangeCast for TCollection, including a check that the cast target type inherits from TObject and a new constructor that takes the TCollection by pointer. ; More... Namespaces; namespace  Internal;  ; namespace  RDF;  ; namespace  VecOps;  . Classes; struct  CallableTraitsImpl;  Extract types from the signature of a callable object. See CallableTraits. More...;  ; struct  CallableTraitsImpl< R(*)(Args...), false >;  ; struct  CallableTraitsImpl< R(Args...), false >;  ; struct  CallableTraitsImpl< R(T::*)(Args...) const, false >;  ; struct  CallableTraitsImpl< R(T::*)(Args...), false >;  ; struct  CallableTraitsImpl< T, true >;  ; struct  indices;  ; struct  is_array_class;  ; struct  is_array_class< std::array< T, N > >;  ; struct  is_array_class< std::initializer_list< T > >;  ; struct  is_array_class< std::vector< T > >;  ; struct  make_indices_;  ; struct  make_indices_impl;  ; struct  make_indices_impl< First, Step, N, typename std::enable_if<(N > 1 &&N % 2==0)>::type >;  ; struct  make_indices_impl< First, Step, N, typename std::enable_if<(N > 1 &&N % 2==1)>::type >;  ; struct  make_indices_impl< First, Step, N, typename std::enable_if<(N==0)>::type >;  ; struct  make_indices_impl< First, Step, N, typename std::enable_if<(N==1)>::type >;  ; struct  make_indices_next;  ; struct  make_indices_next2;  ; struct  make_indices_next2< indices< Indices... >, Next, Tail >;  ; struct  make_indices_next< indices< Indices... >, Next >;  ; class  TBranchProxy;  Base class for all the proxy object. More...;  ; class  TCollectionProxyInfo;  ; class  TRangeCast;  ; class  TSchemaRuleSet;  ; class  TStatusBitsChecker;  . Typedefs; template<size_t Start, size_t Last, size_t Step = 1> ; using make_indices = typename make_indices_< Start, Last, Step",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Detail.html:71,Guid,Guide,71,doc/v632/namespaceROOT_1_1Detail.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Detail.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Detail::RDF Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Functions ; ROOT::Detail::RDF Namespace Reference. Namespaces; namespace  ExtraArgsForDefine;  . Classes; class  RActionImpl;  Base class for action helpers, see RInterface::Book() for more information. More...;  ; struct  RCallCleanUpTask;  A RAII object that calls RLoopManager::CleanUpTask at destruction. More...;  ; class  RColumnReaderBase;  ; class  RDefaultValueFor;  The implementation of the DefaultValueFor transformation. More...;  ; class  RDefine;  ; class  RDefineBase;  ; class  RDefinePerSample;  ; class  RFilter;  ; class  RFilterBase;  ; class  RFilterWithMissingValues;  implementation of FilterAvailable and FilterMissing operations More...;  ; struct  RInferredType;  ; class  RJittedDefine;  A wrapper around a concrete RDefine, which forwards all calls to it RJittedDefine is a placeholder that is put in the collection of custom columns in place of a RDefine that will be just-in-time compiled. More...;  ; class  RJittedFilter;  A wrapper around a concrete RFilter, which forwards all calls to it RJittedFilter is the type of the node returned by jitted Filter calls: the concrete filter can be created and set at a later time, from jitted code. More...;  ; class  RLoopManager;  The head node of a RDF computation graph. More...;  ; class  RMergeableCount;  Specialization of RMergeableValue for the Count action. More...;  ; class  RMergeableFill;  Specialization of RMergeableValue for histograms and statistics. More...;  ; class  RMergeableMax;  ; class  RMergeableMean;  Specialization of RMergeableValue for the Mean action. More...;  ; class  RMergeableMin;  ; class  RMergeableStdDev;  Specialization of RMergeableValue for the StdDev action. More...;  ; class  RMergeableSum;  ; class  RMergeableValue;  A result of an RDataFrame execution, that knows how to merge with other results of the same type. More...; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Detail_1_1RDF.html:77,Guid,Guide,77,doc/master/namespaceROOT_1_1Detail_1_1RDF.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Detail_1_1RDF.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Detail::RDF::RActionImpl< Helper > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Detail::RDF::RActionImpl< Helper > Class Template Reference. ; template<typename Helper>; class ROOT::Detail::RDF::RActionImpl< Helper >Base class for action helpers, see RInterface::Book() for more information. ; Definition at line 26 of file RActionImpl.hxx. Public Member Functions; virtual ~RActionImpl ()=default;  ; template<typename T = Helper> ; auto CallFinalizeTask (unsigned int slot) -> decltype(std::declval< T >().FinalizeTask(slot));  ; template<typename... Args> ; void CallFinalizeTask (unsigned int, Args...);  ; template<typename... Args> ; Helper CallMakeNew (void *, Args...);  ; template<typename T = Helper> ; auto CallMakeNew (void *typeErasedResSharedPtr) -> decltype(std::declval< T >().MakeNew(typeErasedResSharedPtr));  ; template<typename... Args> ; void * CallPartialUpdate (...);  ; template<typename H = Helper> ; auto CallPartialUpdate (unsigned int slot) -> decltype(std::declval< H >().PartialUpdate(slot),(void *)(nullptr));  ; virtual std::unique_ptr< RMergeableValueBase > GetMergeableValue () const;  ; virtual ROOT::RDF::SampleCallback_t GetSampleCallback ();  Override this method to register a callback that is executed before the processing a new data sample starts. ;  . #include <ROOT/RDF/RActionImpl.hxx>; Constructor & Destructor Documentation. ◆ ~RActionImpl(). template<typename Helper > . virtual ROOT::Detail::RDF::RActionImpl< Helper >::~RActionImpl ; (; ). virtualdefault . Member Function Documentation. ◆ CallFinalizeTask() [1/2]. template<typename Helper > . template<typename T = Helper> . auto ROOT::Detail::RDF::RActionImpl< Helper >::CallFinalizeTask ; (; unsigned int ; slot); -> decltype(std::declval<T>().FinalizeTask(slot)); . inline . Definition at line 31 of file RActionImpl.hxx. ◆ CallFinalizeTask()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RActionImpl.html:105,Guid,Guide,105,doc/master/classROOT_1_1Detail_1_1RDF_1_1RActionImpl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RActionImpl.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Detail::RDF::RFilter< FilterF, PrevNodeRaw > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::Detail::RDF::RFilter< FilterF, PrevNodeRaw > Class Template Referencefinal. ; template<typename FilterF, typename PrevNodeRaw>; class ROOT::Detail::RDF::RFilter< FilterF, PrevNodeRaw >; Definition at line 57 of file RFilter.hxx. Public Member Functions;  RFilter (const RFilter &)=delete;  ;  RFilter (FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr< PrevNode_t > pd, const RDFInternal::RColumnRegister &colRegister, std::string_view name="""", const std::string &variationName=""nominal"");  ;  ~RFilter ();  ; void AddFilterName (std::vector< std::string > &filters) final;  ; template<typename... ColTypes, std::size_t... S> ; bool CheckFilterHelper (unsigned int slot, Long64_t entry, TypeList< ColTypes... >, std::index_sequence< S... >);  ; bool CheckFilters (unsigned int slot, Long64_t entry) final;  ; void FinalizeSlot (unsigned int slot) final;  Clean-up operations to be performed at the end of a task. ;  ; std::shared_ptr< RDFGraphDrawing::GraphNode > GetGraph (std::unordered_map< void *, std::shared_ptr< RDFGraphDrawing::GraphNode > > &visitedMap) final;  ; template<typename ColType > ; auto GetValueChecked (unsigned int slot, std::size_t readerIdx, Long64_t entry) -> ColType &;  ; std::shared_ptr< RNodeBase > GetVariedFilter (const std::string &variationName) final;  Return a clone of this Filter that works with values in the variationName ""universe"". ;  ; void IncrChildrenCount () final;  ; void InitSlot (TTreeReader *r, unsigned int slot) final;  ; RFilter & operator= (const RFilter &)=delete;  ; void PartialReport (ROOT::RDF::RCutFlowReport &rep) const final;  ; void Report (ROOT::RDF::RCutFlowReport &rep) const final;  ; void StopProcessing () final;  ; void TriggerCh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RFilter.html:115,Guid,Guide,115,doc/master/classROOT_1_1Detail_1_1RDF_1_1RFilter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RFilter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Detail::RDF::RFilterBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Detail::RDF::RFilterBase Class Referenceabstract. . Definition at line 38 of file RFilterBase.hxx. Public Member Functions;  RFilterBase (RLoopManager *df, std::string_view name, const unsigned int nSlots, const RDFInternal::RColumnRegister &colRegister, const ColumnNames_t &columns, const std::vector< std::string > &prevVariations, const std::string &variation=""nominal"");  ;  ~RFilterBase () override;  ; virtual void FillReport (ROOT::RDF::RCutFlowReport &) const;  ; virtual void FinalizeSlot (unsigned int slot)=0;  Clean-up operations to be performed at the end of a task. ;  ; std::string GetName () const;  ; bool HasName () const;  ; virtual void InitNode ();  ; virtual void InitSlot (TTreeReader *r, unsigned int slot)=0;  ; RFilterBase & operator= (const RFilterBase &)=delete;  ; virtual void ResetReportCount ();  ; virtual void TriggerChildrenCount ()=0;  ;  Public Member Functions inherited from ROOT::Detail::RDF::RNodeBase;  RNodeBase (const std::vector< std::string > &variations={}, RLoopManager *lm=nullptr);  ; virtual ~RNodeBase ();  ; virtual void AddFilterName (std::vector< std::string > &filters)=0;  ; virtual bool CheckFilters (unsigned int, Long64_t)=0;  ; virtual std::shared_ptr< ROOT::Internal::RDF::GraphDrawing::GraphNode > GetGraph (std::unordered_map< void *, std::shared_ptr< ROOT::Internal::RDF::GraphDrawing::GraphNode > > &visitedMap)=0;  ; virtual RLoopManager * GetLoopManagerUnchecked ();  ; const std::vector< std::string > & GetVariations () const;  ; virtual std::shared_ptr< RNodeBase > GetVariedFilter (const std::string &);  Return a clone of this node that acts as a Filter working with values in the variationName ""universe"". ;  ; virtual void IncrChildrenCount ()=0;  ; virtual void PartialReport (ROOT::RD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RFilterBase.html:86,Guid,Guide,86,doc/master/classROOT_1_1Detail_1_1RDF_1_1RFilterBase.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RFilterBase.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Detail::RDF::RFilterWithMissingValues< PrevNodeRaw > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::Detail::RDF::RFilterWithMissingValues< PrevNodeRaw > Class Template Referencefinal. ; template<typename PrevNodeRaw>; class ROOT::Detail::RDF::RFilterWithMissingValues< PrevNodeRaw >implementation of FilterAvailable and FilterMissing operations ; The filter evaluates if the entry is missing a value for the input column. Depending on which function was called by the user, the entry with the missing value:; will be discarded in case the user called FilterAvailable; will be kept in case the user called FilterMissing . Definition at line 58 of file RFilterWithMissingValues.hxx. Public Member Functions;  RFilterWithMissingValues (bool discardEntry, std::shared_ptr< PrevNode_t > pd, const RDFInternal::RColumnRegister &colRegister, const ColumnNames_t &columns, std::string_view filterName="""", const std::string &variationName=""nominal"");  ;  RFilterWithMissingValues (const RFilterWithMissingValues &)=delete;  ;  RFilterWithMissingValues (RFilterWithMissingValues &&)=delete;  ;  ~RFilterWithMissingValues () final;  ; void AddFilterName (std::vector< std::string > &filters) final;  ; bool CheckFilters (unsigned int slot, Long64_t entry) final;  ; void FinalizeSlot (unsigned int slot) final;  Clean-up operations to be performed at the end of a task. ;  ; std::shared_ptr< RDFGraphDrawing::GraphNode > GetGraph (std::unordered_map< void *, std::shared_ptr< RDFGraphDrawing::GraphNode > > &visitedMap) final;  ; ROOT::Detail::RDF::RColumnReaderBase * GetOrCreateColumnReader (TTreeReader *r, unsigned int slot);  ; std::shared_ptr< RNodeBase > GetVariedFilter (const std::string &variationName) final;  Return a clone of this Filter that works with values in the variationName ""universe"". ;  ; void Incr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RFilterWithMissingValues.html:123,Guid,Guide,123,doc/master/classROOT_1_1Detail_1_1RDF_1_1RFilterWithMissingValues.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RFilterWithMissingValues.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Detail::RDF::RInferredType Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Detail::RDF::RInferredType Struct Reference. . Definition at line 59 of file Utils.hxx. #include <ROOT/RDF/Utils.hxx>; The documentation for this struct was generated from the following file:; tree/dataframe/inc/ROOT/RDF/Utils.hxx. ROOTDetailRDFRInferredType. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:02 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Detail_1_1RDF_1_1RInferredType.html:89,Guid,Guide,89,doc/master/structROOT_1_1Detail_1_1RDF_1_1RInferredType.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Detail_1_1RDF_1_1RInferredType.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Detail::RDF::RJittedFilter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Detail::RDF::RJittedFilter Class Referencefinal. ; A wrapper around a concrete RFilter, which forwards all calls to it RJittedFilter is the type of the node returned by jitted Filter calls: the concrete filter can be created and set at a later time, from jitted code. ; Definition at line 39 of file RJittedFilter.hxx. Public Member Functions;  RJittedFilter (RLoopManager *lm, std::string_view name, const std::vector< std::string > &variations);  ;  ~RJittedFilter ();  ; void AddFilterName (std::vector< std::string > &filters) final;  ; bool CheckFilters (unsigned int slot, Long64_t entry) final;  ; void FillReport (ROOT::RDF::RCutFlowReport &) const final;  ; void FinalizeSlot (unsigned int slot) final;  Clean-up operations to be performed at the end of a task. ;  ; std::shared_ptr< RDFGraphDrawing::GraphNode > GetGraph (std::unordered_map< void *, std::shared_ptr< RDFGraphDrawing::GraphNode > > &visitedMap) final;  ; std::shared_ptr< RNodeBase > GetVariedFilter (const std::string &variationName) final;  Return a clone of this node that acts as a Filter working with values in the variationName ""universe"". ;  ; void IncrChildrenCount () final;  ; void InitNode () final;  ; void InitSlot (TTreeReader *r, unsigned int slot) final;  ; void PartialReport (ROOT::RDF::RCutFlowReport &) const final;  ; void Report (ROOT::RDF::RCutFlowReport &) const final;  ; void ResetChildrenCount () final;  ; void ResetReportCount () final;  ; void SetFilter (std::unique_ptr< RFilterBase > f);  ; void StopProcessing () final;  ; void TriggerChildrenCount () final;  ;  Public Member Functions inherited from ROOT::Detail::RDF::RFilterBase;  RFilterBase (RLoopManager *df, std::string_view name, const unsigned int nSlots, const RDFInternal::RColumnRegister &c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RJittedFilter.html:88,Guid,Guide,88,doc/master/classROOT_1_1Detail_1_1RDF_1_1RJittedFilter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RJittedFilter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Detail::RDF::RLoopManager Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Detail::RDF::RLoopManager Class Reference. ; The head node of a RDF computation graph. ; This class is responsible of running the event loop. ; Definition at line 114 of file RLoopManager.hxx. Public Member Functions;  RLoopManager (const RLoopManager &)=delete;  ;  RLoopManager (RLoopManager &&)=delete;  ;  RLoopManager (ROOT::RDF::Experimental::RDatasetSpec &&spec);  ;  RLoopManager (std::unique_ptr< RDataSource > ds, const ColumnNames_t &defaultBranches);  ;  RLoopManager (std::unique_ptr< TTree > tree, const ColumnNames_t &defaultBranches);  ;  RLoopManager (TTree *tree, const ColumnNames_t &defaultBranches);  ;  RLoopManager (ULong64_t nEmptyEntries);  ;  ~RLoopManager ()=default;  ; void AddDataSourceColumnReaders (const std::string &col, std::vector< std::unique_ptr< RColumnReaderBase > > &&readers, const std::type_info &ti);  ; void AddFilterName (std::vector< std::string > &) final;  End of recursive chain of calls, does nothing. ;  ; void AddSampleCallback (void *nodePtr, ROOT::RDF::SampleCallback_t &&callback);  ; RColumnReaderBase * AddTreeColumnReader (unsigned int slot, const std::string &col, std::unique_ptr< RColumnReaderBase > &&reader, const std::type_info &ti);  Register a new RTreeColumnReader with this RLoopManager. ;  ; void ChangeSpec (ROOT::RDF::Experimental::RDatasetSpec &&spec);  Changes the internal TTree held by the RLoopManager. ;  ; bool CheckFilters (unsigned int, Long64_t) final;  ; void Deregister (RDefineBase *definePtr);  ; void Deregister (RDFInternal::RActionBase *actionPtr);  ; void Deregister (RDFInternal::RVariationBase *varPtr);  ; void Deregister (RFilterBase *filterPtr);  ; void Deregister (RRangeBase *rangePtr);  ; std::vector< RDFInte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RLoopManager.html:87,Guid,Guide,87,doc/master/classROOT_1_1Detail_1_1RDF_1_1RLoopManager.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RLoopManager.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Detail::RDF::RRange< PrevNodeRaw > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::Detail::RDF::RRange< PrevNodeRaw > Class Template Referencefinal. ; template<typename PrevNodeRaw>; class ROOT::Detail::RDF::RRange< PrevNodeRaw >; Definition at line 43 of file RRange.hxx. Public Member Functions;  RRange (const RRange &)=delete;  ;  RRange (unsigned int start, unsigned int stop, unsigned int stride, std::shared_ptr< PrevNode_t > pd);  ;  ~RRange ();  ; void AddFilterName (std::vector< std::string > &filters) final;  This function must be defined by all nodes, but only the filters will add their name. ;  ; bool CheckFilters (unsigned int slot, Long64_t entry) final;  Ranges act as filters when it comes to selecting entries that downstream nodes should process. ;  ; std::shared_ptr< RDFGraphDrawing::GraphNode > GetGraph (std::unordered_map< void *, std::shared_ptr< RDFGraphDrawing::GraphNode > > &visitedMap) final;  ; std::shared_ptr< RNodeBase > GetVariedFilter (const std::string &variationName) final;  Return a clone of this node that acts as a Filter working with values in the variationName ""universe"". ;  ; void IncrChildrenCount () final;  ; RRange & operator= (const RRange &)=delete;  ; void PartialReport (ROOT::RDF::RCutFlowReport &rep) const final;  ; void Report (ROOT::RDF::RCutFlowReport &rep) const final;  ; void StopProcessing () final;  ;  Public Member Functions inherited from ROOT::Detail::RDF::RRangeBase;  RRangeBase (RLoopManager *implPtr, unsigned int start, unsigned int stop, unsigned int stride, const unsigned int nSlots, const std::vector< std::string > &prevVariations);  ;  ~RRangeBase () override;  ; void InitNode ();  ; RRangeBase & operator= (const RRangeBase &)=delete;  ;  Public Member Functions inherited from ROOT::Detail::RDF::RNodeBase;  RNodeBase (const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RRange.html:105,Guid,Guide,105,doc/master/classROOT_1_1Detail_1_1RDF_1_1RRange.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RRange.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Detail::RDF::RRangeBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Detail::RDF::RRangeBase Class Reference. . Definition at line 33 of file RRangeBase.hxx. Public Member Functions;  RRangeBase (RLoopManager *implPtr, unsigned int start, unsigned int stop, unsigned int stride, const unsigned int nSlots, const std::vector< std::string > &prevVariations);  ;  ~RRangeBase () override;  ; void InitNode ();  ; RRangeBase & operator= (const RRangeBase &)=delete;  ;  Public Member Functions inherited from ROOT::Detail::RDF::RNodeBase;  RNodeBase (const std::vector< std::string > &variations={}, RLoopManager *lm=nullptr);  ; virtual ~RNodeBase ();  ; virtual void AddFilterName (std::vector< std::string > &filters)=0;  ; virtual bool CheckFilters (unsigned int, Long64_t)=0;  ; virtual std::shared_ptr< ROOT::Internal::RDF::GraphDrawing::GraphNode > GetGraph (std::unordered_map< void *, std::shared_ptr< ROOT::Internal::RDF::GraphDrawing::GraphNode > > &visitedMap)=0;  ; virtual RLoopManager * GetLoopManagerUnchecked ();  ; const std::vector< std::string > & GetVariations () const;  ; virtual std::shared_ptr< RNodeBase > GetVariedFilter (const std::string &);  Return a clone of this node that acts as a Filter working with values in the variationName ""universe"". ;  ; virtual void IncrChildrenCount ()=0;  ; virtual void PartialReport (ROOT::RDF::RCutFlowReport &) const =0;  ; virtual void Report (ROOT::RDF::RCutFlowReport &) const =0;  ; virtual void ResetChildrenCount ();  ; virtual void StopProcessing ()=0;  . Protected Attributes; bool fHasStopped {false};  True if the end of the range has been reached. ;  ; Long64_t fLastCheckedEntry {-1};  ; bool fLastResult {true};  ; ULong64_t fNProcessedEntries {0};  ; const unsigned int fNSlots;  Number of thread slots used by this node, inherited from parent node. ;  ; u",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RRangeBase.html:85,Guid,Guide,85,doc/master/classROOT_1_1Detail_1_1RDF_1_1RRangeBase.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RRangeBase.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Detail::TCollectionProxyInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Static Public Attributes |; List of all members ; ROOT::Detail::TCollectionProxyInfo Class Reference. . Definition at line 57 of file TCollectionProxyInfo.h. Classes; struct  Address;  ; struct  Address< std::vector< Bool_t, A > >;  ; class  Environ;  Small helper to save proxy environment in the event of recursive calls. More...;  ; struct  EnvironBase;  ; class  Insert;  Small helper to encapsulate all necessary data accesses for containers like set, multiset etc. More...;  ; class  Iterators;  Small helper to implement the function to create,access and destroy iterators. More...;  ; struct  Iterators< Cont_t, true >;  ; struct  Iterators< std::vector< T >, false >;  ; class  IteratorValue;  Small helper to encapsulate whether to return the value pointed to by the iterator or its address. More...;  ; struct  IteratorValue< Cont_t, value_ptr * >;  ; class  MapInsert;  Small helper to encapsulate all necessary data accesses for containers like set, multiset etc. More...;  ; struct  PairHolder;  ; class  Pushback;  Small helper to encapsulate all necessary data accesses for containers like vector, list, deque. More...;  ; struct  Pushback< Internal::TStdBitsetHelper< Bitset_t > >;  ; struct  Pushback< std::vector< Bool_t, A > >;  ; class  Pushfront;  Small helper to encapsulate all necessary data accesses for containers like forward_list. More...;  ; struct  SfinaeHelper;  ; class  Type;  Small helper to encapsulate basic data accesses for all STL continers. More...;  ; struct  Type< Internal::TStdBitsetHelper< Bitset_t > >;  ; struct  Type< std::vector< Bool_t, A > >;  . Public Member Functions;  TCollectionProxyInfo (const std::type_info &info, size_t iter_size, size_t value_diff, int value_offset, void *(*size_fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1TCollectionProxyInfo.html:90,Guid,Guide,90,doc/master/classROOT_1_1Detail_1_1TCollectionProxyInfo.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1TCollectionProxyInfo.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Detail::TCollectionProxyInfo::Environ< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; ROOT::Detail::TCollectionProxyInfo::Environ< T > Class Template Reference. ; template<typename T>; class ROOT::Detail::TCollectionProxyInfo::Environ< T >Small helper to save proxy environment in the event of recursive calls. ; AuthorM.Frank ; Version1.0 ; Date10/10/2004 ; Definition at line 244 of file TCollectionProxyInfo.h. Public Types; typedef T Iter_t;  . Public Member Functions;  Environ ();  ; T & iter ();  ;  Public Member Functions inherited from ROOT::Detail::TCollectionProxyInfo::EnvironBase;  EnvironBase ();  ; virtual ~EnvironBase ();  . Static Public Member Functions; static void * Create ();  . Public Attributes; Iter_t fIterator;  ;  Public Attributes inherited from ROOT::Detail::TCollectionProxyInfo::EnvironBase; union { ;  ;    Bool_t   fLastValueVecBool ;  ;    Bool_t   fUseTemp ;  ; };  ;  ; size_t fIdx;  ; void * fObject;  ; int fRefCount;  ; size_t fSize;  ; size_t fSpace;  ; void * fStart;  ; void * fTemp;  . #include <TCollectionProxyInfo.h>. Inheritance diagram for ROOT::Detail::TCollectionProxyInfo::Environ< T >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iter_t. template<typename T > . typedef T ROOT::Detail::TCollectionProxyInfo::Environ< T >::Iter_t. Definition at line 246 of file TCollectionProxyInfo.h. Constructor & Destructor Documentation. ◆ Environ(). template<typename T > . ROOT::Detail::TCollectionProxyInfo::Environ< T >::Environ ; (; ). inline . Definition at line 245 of file TCollectionProxyInfo.h. Member Function Documentation. ◆ Create(). template<typename T > . static void * ROOT::Detail::TCollectionProxyInfo::Environ< T >::Create ; (; ). in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Detail_1_1TCollectionProxyInfo_1_1Environ.html:113,Guid,Guide,113,doc/master/structROOT_1_1Detail_1_1TCollectionProxyInfo_1_1Environ.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Detail_1_1TCollectionProxyInfo_1_1Environ.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Detail::TCollectionProxyInfo::EnvironBase Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; Private Member Functions |; List of all members ; ROOT::Detail::TCollectionProxyInfo::EnvironBase Struct Reference. . Definition at line 223 of file TCollectionProxyInfo.h. Public Member Functions;  EnvironBase ();  ; virtual ~EnvironBase ();  . Public Attributes; union { ;  ;    Bool_t   fLastValueVecBool ;  ;    Bool_t   fUseTemp ;  ; };  ;  ; size_t fIdx;  ; void * fObject;  ; int fRefCount;  ; size_t fSize;  ; size_t fSpace;  ; void * fStart;  ; void * fTemp;  . Private Member Functions;  EnvironBase (const EnvironBase &);  ; EnvironBase & operator= (const EnvironBase &);  . #include <TCollectionProxyInfo.h>. Inheritance diagram for ROOT::Detail::TCollectionProxyInfo::EnvironBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ EnvironBase() [1/2]. ROOT::Detail::TCollectionProxyInfo::EnvironBase::EnvironBase ; (; const EnvironBase & ; ). private . ◆ EnvironBase() [2/2]. ROOT::Detail::TCollectionProxyInfo::EnvironBase::EnvironBase ; (; ). inline . Definition at line 228 of file TCollectionProxyInfo.h. ◆ ~EnvironBase(). virtual ROOT::Detail::TCollectionProxyInfo::EnvironBase::~EnvironBase ; (; ). inlinevirtual . Definition at line 231 of file TCollectionProxyInfo.h. Member Function Documentation. ◆ operator=(). EnvironBase & ROOT::Detail::TCollectionProxyInfo::EnvironBase::operator= ; (; const EnvironBase & ; ). private . Member Data Documentation. ◆ [union]. union { ... } ROOT::Detail::TCollectionProxyInfo::EnvironBase. ◆ fIdx. size_t ROOT::Detail::TCollectionProxyInfo::EnvironBase::fIdx. Definition at line 232 of file TCollectionProxyInfo.h. ◆ fLastValueVecBool. Bool_t ROOT::Detail::TCollectionProxyInfo::EnvironBase::fLastValueVecBool. Definition at li",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Detail_1_1TCollectionProxyInfo_1_1EnvironBase.html:104,Guid,Guide,104,doc/master/structROOT_1_1Detail_1_1TCollectionProxyInfo_1_1EnvironBase.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Detail_1_1TCollectionProxyInfo_1_1EnvironBase.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Detail::TRangeCast< T, isDynamic > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Detail::TRangeCast< T, isDynamic > Class Template Reference. ; template<typename T, bool isDynamic>; class ROOT::Detail::TRangeCast< T, isDynamic >; Definition at line 311 of file TCollection.h. Public Member Functions;  TRangeCast (TCollection const &col);  ;  TRangeCast (TCollection const *col);  ;  Public Member Functions inherited from ROOT::RRangeCast< T, isDynamic, Range_t >;  RRangeCast (Range_t &&inputRange);  ; iterator begin ();  ; const_iterator begin () const;  ; iterator end ();  ; const_iterator end () const;  . Additional Inherited Members;  Public Types inherited from ROOT::RRangeCast< T, isDynamic, Range_t >; using const_iterator = Internal::TypedIter< T, decltype(std::cbegin(std::declval< Range_t >())), isDynamic >;  ; using iterator = Internal::TypedIter< T, decltype(std::begin(std::declval< Range_t >())), isDynamic >;  . #include <TCollection.h>. Inheritance diagram for ROOT::Detail::TRangeCast< T, isDynamic >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRangeCast() [1/2]. template<typename T , bool isDynamic> . ROOT::Detail::TRangeCast< T, isDynamic >::TRangeCast ; (; TCollection const & ; col). inline . Definition at line 313 of file TCollection.h. ◆ TRangeCast() [2/2]. template<typename T , bool isDynamic> . ROOT::Detail::TRangeCast< T, isDynamic >::TRangeCast ; (; TCollection const * ; col). inline . Definition at line 316 of file TCollection.h. core/cont/inc/TCollection.h. ROOTDetailTRangeCast. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:02 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1TRangeCast.html:105,Guid,Guide,105,doc/master/classROOT_1_1Detail_1_1TRangeCast.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1TRangeCast.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Detail::TSchemaRuleSet Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Detail::TSchemaRuleSet Class Reference. . Definition at line 24 of file TSchemaRuleSet.h. Classes; class  TMatches;  . Public Types; enum  EConsistencyCheck { kNoCheck = 0; , kCheckAll = 1; , kCheckConflict = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSchemaRuleSet ();  Default constructor. ;  ; virtual ~TSchemaRuleSet ();  Destructor. ;  ; Bool_t AddRule (TSchemaRule *rule, EConsistencyCheck checkConsistency=kCheckAll, TString *errmsg=nullptr);  The consistency check always fails if the TClass object was not set! if checkConsistency is: kNoCheck: no check is done, register the rule as is kCheckConflict: check only for conflicting rules kCheckAll: check for conflict and check for rule about members that are not in the current class layout. ;  ; Bool_t AddRules (TSchemaRuleSet *rules, EConsistencyCheck checkConsistency=kCheckAll, TString *errmsg=nullptr);  ; void AsString (TString &out) const;  Fill the string 'out' with the string representation of the rule. ;  ; const TMatches FindRules (const TString &source) const;  Return all the rules that are about the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet.html:84,Guid,Guide,84,doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Detail::TSchemaRuleSet::TMatches Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Detail::TSchemaRuleSet::TMatches Class Reference. . Definition at line 28 of file TSchemaRuleSet.h. Public Member Functions; const TSchemaRule * GetRuleWithSource (const TString &name) const;  Return the rule that has 'name' as a source. ;  ; const TSchemaRule * GetRuleWithTarget (const TString &name) const;  Return the rule that has 'name' as a target. ;  ; Bool_t HasRuleWithSource (const TString &name, Bool_t needingAlloc) const;  Return true if the set of rules has at least one rule that has the data member named 'name' as a source. ;  ; Bool_t HasRuleWithTarget (const TString &name, Bool_t willset) const;  Return true if the set of rules has at least one rule that has the data member named 'name' as a target. ;  ;  operator bool ();  . #include <TSchemaRuleSet.h>. Inheritance diagram for ROOT::Detail::TSchemaRuleSet::TMatches:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Function Documentation. ◆ GetRuleWithSource(). const TSchemaRule * TSchemaRuleSet::TMatches::GetRuleWithSource ; (; const TString & ; name); const. Return the rule that has 'name' as a source. ; Definition at line 468 of file TSchemaRuleSet.cxx. ◆ GetRuleWithTarget(). const TSchemaRule * TSchemaRuleSet::TMatches::GetRuleWithTarget ; (; const TString & ; name); const. Return the rule that has 'name' as a target. ; Definition at line 479 of file TSchemaRuleSet.cxx. ◆ HasRuleWithSource(). Bool_t TSchemaRuleSet::TMatches::HasRuleWithSource ; (; const TString & ; name, . Bool_t ; needingAlloc . ); const. Return true if the set of rules has at least one rule that has the data member named 'name' as a source. ; If needingAlloc is true, only the rule that requires the data member to be cached will be taken in consideration. ; D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet_1_1TMatches.html:94,Guid,Guide,94,doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet_1_1TMatches.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet_1_1TMatches.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Detail::VecOps Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Functions ; ROOT::Detail::VecOps Namespace Reference. Classes; class  RVecImpl;  This class consists of common code factored out of the SmallVector class to reduce code duplication based on the SmallVector 'N' template parameter. More...;  . Functions; template<typename T > ; bool IsAdopting (const ROOT::VecOps::RVec< T > &v);  ; template<typename T > ; bool IsSmall (const ROOT::VecOps::RVec< T > &v);  . Function Documentation. ◆ IsAdopting(). template<typename T > . bool ROOT::Detail::VecOps::IsAdopting ; (; const ROOT::VecOps::RVec< T > & ; v). Definition at line 1124 of file RVec.hxx. ◆ IsSmall(). template<typename T > . bool ROOT::Detail::VecOps::IsSmall ; (; const ROOT::VecOps::RVec< T > & ; v). Definition at line 1118 of file RVec.hxx. ROOTDetailVecOps. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:02 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Detail_1_1VecOps.html:80,Guid,Guide,80,doc/master/namespaceROOT_1_1Detail_1_1VecOps.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Detail_1_1VecOps.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Detail::VecOps::RVecImpl< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Types |; List of all members ; ROOT::Detail::VecOps::RVecImpl< T > Class Template Reference. ; template<typename T>; class ROOT::Detail::VecOps::RVecImpl< T >This class consists of common code factored out of the SmallVector class to reduce code duplication based on the SmallVector 'N' template parameter. ; Definition at line 561 of file RVec.hxx. Public Types; using const_iterator = typename SuperClass::const_iterator;  ; using iterator = typename SuperClass::iterator;  ; using reference = typename SuperClass::reference;  ; using size_type = typename SuperClass::size_type;  ;  Public Types inherited from ROOT::Internal::VecOps::SmallVectorTemplateCommon< T >; using const_iterator = const T *;  ; using const_pointer = const T *;  ; using const_reference = const T &;  ; using const_reverse_iterator = std::reverse_iterator< const_iterator >;  ; using difference_type = ptrdiff_t;  ; using iterator = T *;  ; using pointer = T *;  ; using reference = T &;  ; using reverse_iterator = std::reverse_iterator< iterator >;  ; using size_type = size_t;  ; using value_type = T;  ;  Public Types inherited from ROOT::Internal::VecOps::SmallVectorBase; using Size_T = int32_t;  . Public Member Functions;  RVecImpl (const RVecImpl &)=delete;  ;  ~RVecImpl ();  ; template<typename in_iter , typename = typename std::enable_if<std::is_convertible< typename std::iterator_traits<in_iter>::iterator_category, std::input_iterator_tag>::value>::type> ; void append (in_iter in_start, in_iter in_end);  Add the specified range to the end of the SmallVector. ;  ; void append (size_type NumInputs, const T &Elt);  Append NumInputs copies of Elt to the end. ;  ; void append (std::initializer_list< T > IL);  ; template<typename in_iter , typename = ty",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1VecOps_1_1RVecImpl.html:100,Guid,Guide,100,doc/master/classROOT_1_1Detail_1_1VecOps_1_1RVecImpl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1VecOps_1_1RVecImpl.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Details Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Variables ; ROOT::Details Namespace Reference. Classes; class  RWebWindowPlugin;  . Variables; class ROOT::Details::RWebWindowPlugin sRWebWindowPlugin;  . Variable Documentation. ◆ sRWebWindowPlugin. class ROOT::Details::RWebWindowPlugin ROOT::Details::sRWebWindowPlugin. ROOTDetails. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:02 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Details.html:73,Guid,Guide,73,doc/master/namespaceROOT_1_1Details.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Details.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::Details Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Variables ; ROOT::Details Namespace Reference. Classes; class  RWebWindowPlugin;  . Variables; class ROOT::Details::RWebWindowPlugin sRWebWindowPlugin;  . Variable Documentation. ◆ sRWebWindowPlugin. class ROOT::Details::RWebWindowPlugin ROOT::Details::sRWebWindowPlugin. ROOTDetails. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:39 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Details.html:72,Guid,Guide,72,doc/v632/namespaceROOT_1_1Details.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Details.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::ExecutorUtils Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; ROOT::ExecutorUtils Namespace Reference. This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ; More... Classes; class  ReduceObjects;  Merge collection of TObjects. More...;  . Detailed Description; This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. . ROOTExecutorUtils. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:02 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1ExecutorUtils.html:79,Guid,Guide,79,doc/master/namespaceROOT_1_1ExecutorUtils.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1ExecutorUtils.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::ExecutorUtils Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; ROOT::ExecutorUtils Namespace Reference. This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ; More... Classes; class  ReduceObjects;  Merge collection of TObjects. More...;  . Detailed Description; This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. . ROOTExecutorUtils. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:39 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1ExecutorUtils.html:78,Guid,Guide,78,doc/v632/namespaceROOT_1_1ExecutorUtils.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1ExecutorUtils.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT::Experimental Namespace Reference. Namespaces; namespace  Detail;  ; namespace  EveGlu;  ; namespace  Hist;  ; namespace  Internal;  ; namespace  XRooFit;  xRooFit is a high-level API for RooFit. ;  . Classes; struct  HasCollectionProxyMemberType;  Template specializations for classes with collection proxies. More...;  ; struct  HasCollectionProxyMemberType< T, typename std::enable_if< std::is_same< typename T::IsCollectionProxy, std::true_type >::value >::type >;  ; struct  IsCollectionProxy;  The point here is that we can only tell at run time if a class has an associated collection proxy. More...;  ; class  RArrayAsRVecField;  Additional classes related to sequence containers. More...;  ; class  RArrayField;  Template specializations for C++ std::array and C-style arrays. More...;  ; class  RAtomicField;  Template specializations for C++ std::atomic. More...;  ; class  RAttrAggregation;  Base class for attributes aggregations like lines or fill attributes. More...;  ; class  RAttrAxis;  All supported axes attributes for: line, ticks, labels, title, min/max, log, reverse, ... More...;  ; class  RAttrAxisLabels;  Axis labels drawing attributes. More...;  ; class  RAttrAxisTicks;  Axis ticks attributes. More...;  ; class  RAttrAxisTitle;  Axis title and its drawing attributes. More...;  ; class  RAttrBase;  Base class for all attributes, used with RDrawable. More...;  ; class  RAttrBorder;  Drawing line attributes for different objects. More...;  ; class  RAttrFill;  Drawing fill attributes for different objects. More...;  ; class  RAttrFont;  A font attributes, used together with text attributes. More...;  ; class  RAttrLine;  Drawing line attributes for different objects. More...;  ; class  RAttrLineEnding;  Attributes for line ending. More...;  ; class  RA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Experimental.html:78,Guid,Guide,78,doc/master/namespaceROOT_1_1Experimental.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Experimental.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT::Experimental Namespace Reference. Namespaces; namespace  Detail;  ; namespace  EveGlu;  ; namespace  Hist;  ; namespace  Internal;  ; namespace  XRooFit;  xRooFit is a high-level API for RooFit. ;  . Classes; struct  HasCollectionProxyMemberType;  ; struct  HasCollectionProxyMemberType< T, typename std::enable_if< std::is_same< typename T::IsCollectionProxy, std::true_type >::value >::type >;  ; struct  IsCollectionProxy;  The point here is that we can only tell at run time if a class has an associated collection proxy. More...;  ; class  RArrayAsRVecField;  A field for fixed-size arrays that are represented as RVecs in memory. More...;  ; class  RArrayField;  The generic field for fixed size arrays, which do not need an offset column. More...;  ; class  RAtomicField;  ; class  RAttrAggregation;  Base class for attributes aggregations like lines or fill attributes. More...;  ; class  RAttrAxis;  All supported axes attributes for: line, ticks, labels, title, min/max, log, reverse, ... More...;  ; class  RAttrAxisLabels;  Axis labels drawing attributes. More...;  ; class  RAttrAxisTicks;  Axis ticks attributes. More...;  ; class  RAttrAxisTitle;  Axis title and its drawing attributes. More...;  ; class  RAttrBase;  Base class for all attributes, used with RDrawable. More...;  ; class  RAttrBorder;  Drawing line attributes for different objects. More...;  ; class  RAttrFill;  Drawing fill attributes for different objects. More...;  ; class  RAttrFont;  A font attributes, used together with text attributes. More...;  ; class  RAttrLine;  Drawing line attributes for different objects. More...;  ; class  RAttrLineEnding;  Attributes for line ending. More...;  ; class  RAttrMap;  ; class  RAttrMargins;  A margins attributes. Only relative and pixel coordinates are a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Experimental.html:77,Guid,Guide,77,doc/v632/namespaceROOT_1_1Experimental.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Experimental.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::Detail::RNTupleMetrics Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; ROOT::Experimental::Detail::RNTupleMetrics Class ReferenceNTuple-related classes. ; A collection of Counter objects with a name, a unit, and a description. ; The class owns the counters; on registration of a new ; Definition at line 285 of file RNTupleMetrics.hxx. Public Member Functions;  RNTupleMetrics (const RNTupleMetrics &other)=delete;  ;  RNTupleMetrics (const std::string &name);  ;  RNTupleMetrics (RNTupleMetrics &&other)=default;  ;  ~RNTupleMetrics ()=default;  ; void Enable ();  ; const RNTuplePerfCounter * GetCounter (std::string_view name) const;  Searches this object and all the observed sub metrics. ;  ; const RNTuplePerfCounter * GetLocalCounter (std::string_view name) const;  Searches counters registered in this object only. Returns nullptr if name is not found. ;  ; bool IsEnabled () const;  ; template<typename CounterPtrT , class... Args> ; CounterPtrT MakeCounter (const std::string &name, Args &&... args);  ; void ObserveMetrics (RNTupleMetrics &observee);  ; RNTupleMetrics & operator= (const RNTupleMetrics &other)=delete;  ; RNTupleMetrics & operator= (RNTupleMetrics &&other)=default;  ; void Print (std::ostream &output, const std::string &prefix="""") const;  . Private Member Functions; bool Contains (const std::string &name) const;  . Private Attributes; std::vector< std::unique_ptr< RNTuplePerfCounter > > fCounters;  ; bool fIsEnabled = false;  ; std::string fName;  ; std::vector< RNTupleMetrics * > fObservedMetrics;  . Static Private Attributes; static constexpr char kNamespaceSeperator = '.';  Symbol to split metrics name from counter / sub metrics name. ;  . #include <ROOT/RNTupleMetrics.hxx>; Constructor & Destructor Documentation. ◆ RNTupleMetric",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Detail_1_1RNTupleMetrics.html:98,Guid,Guide,98,doc/master/classROOT_1_1Experimental_1_1Detail_1_1RNTupleMetrics.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Detail_1_1RNTupleMetrics.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::Internal Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT::Experimental::Internal Namespace Reference. Namespaces; namespace  BitPacking;  . Classes; struct  AxisConfigToType;  Converts a RAxisConfig of whatever kind to the corresponding RAxisBase-derived object. More...;  ; struct  AxisConfigToType< RAxisConfig::kEquidistant >;  ; struct  AxisConfigToType< RAxisConfig::kGrow >;  ; struct  AxisConfigToType< RAxisConfig::kIrregular >;  ; struct  AxisConfigToType< RAxisConfig::kLabels >;  ; class  RArraySizeField;  An artificial field that provides the size of a fixed-size array. More...;  ; class  RCluster;  An in-memory subset of the packed and compressed pages of a cluster. More...;  ; class  RClusterDescriptorBuilder;  A helper class for piece-wise construction of an RClusterDescriptor. More...;  ; class  RClusterGroupDescriptorBuilder;  A helper class for piece-wise construction of an RClusterGroupDescriptor. More...;  ; class  RClusterPool;  Managed a set of clusters containing compressed and packed pages. More...;  ; class  RColumn;  A column is a storage-backed array of a simple, fixed-size type, from which pages can be mapped into memory. More...;  ; class  RColumnDescriptorBuilder;  A helper class for piece-wise construction of an RColumnDescriptor. More...;  ; class  RColumnElementBase;  A column element encapsulates the translation between basic C++ types and their column representation. More...;  ; struct  RColumnInfo;  ; struct  RComputeGlobalBin;  Recursively gets the total number of regular bins before the current dimension, when computing a global bin that is in under- or overflow in at least one dimension. More...;  ; struct  RComputeGlobalBin<-1, NDIMS, BINS, AXES >;  ; struct  RComputeGlobalBinRaw;  Recursively computes a zero-based global bin index, given... More...;  ; struct  RComputeG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Experimental_1_1Internal.html:88,Guid,Guide,88,doc/master/namespaceROOT_1_1Experimental_1_1Internal.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Experimental_1_1Internal.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::Internal::RKeyBlob Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; ROOT::Experimental::Internal::RKeyBlob Class Reference. ; The RKeyBlob writes an invisible key into a TFile. ; That is, a key that is not indexed in the list of keys, like a TBasket. NOTE: out of anonymous namespace because otherwise ClassDefInline fails to compile on some platforms. ; Definition at line 613 of file RMiniFile.cxx. Public Member Functions;  RKeyBlob ()=default;  ;  RKeyBlob (TFile *file);  ; TClass * IsA () const override;  ; void Reserve (size_t nbytes, std::uint64_t *seekKey);  Register a new key for a data record of size nbytes. ;  ; void Streamer (TBuffer &R__b) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TKey;  TKey ();  TKey default constructor. ;  ;  TKey (const char *name, const char *title, const TClass *cl, Int_t nbytes, TDirectory *motherDir);  Create a TKey object with the specified name, title for the given class. ;  ;  TKey (const TObject *obj, const char *name, Int_t bufsize, TDirectory *motherDir);  Create a TKey object for a TObject* and fill output buffer. ;  ;  TKey (const TString &name, const TString &title, const TClass *cl, Int_t nbytes, TDirectory *motherDir);  Create a TKey object with the specified name, title for the given class. ;  ;  TKey (const void *obj, const TClass *cl, const char *name, Int_t bufsize, TDirectory *motherDir);  Create a TKey object for any object obj of class cl d and fill output buffer. ;  ;  TKey (Long64_t pointer, Int_t nbytes, TDirectory *motherDir=nullptr);  Create a TKey object to read keys. ;  ;  TKey (TDirectory *motherDir);  TKey default constructor. ;  ;  TKey (TDirectory *motherDir, const TKey &orig, UShort_t pidOffset);  Copy a TKey fro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RKeyBlob.html:94,Guid,Guide,94,doc/master/classROOT_1_1Experimental_1_1Internal_1_1RKeyBlob.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RKeyBlob.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::Internal::RPageSink Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Attributes |; List of all members ; ROOT::Experimental::Internal::RPageSink Class ReferenceabstractNTuple-related classes. ; Abstract interface to write data into an ntuple. ; The page sink takes the list of columns and afterwards a series of page commits and cluster commits. The user is responsible to commit clusters at a consistent point, i.e. when all pages corresponding to data up to the given entry number are committed.; An object of this class may either be a wrapper (for example a RPageSinkBuf) or a ""persistent"" sink, inheriting from RPagePersistentSink. ; Definition at line 256 of file RPageStorage.hxx. Classes; struct  RSealPageConfig;  Parameters for the SealPage() method. More...;  ; class  RSinkGuard;  An RAII wrapper used to synchronize a page sink. See GetSinkGuard(). More...;  ; struct  RStagedCluster;  Cluster that was staged, but not yet logically appended to the RNTuple. More...;  . Public Types; using Callback_t = std::function< void(RPageSink &)>;  ;  Public Types inherited from ROOT::Experimental::Internal::RPageStorage; using ColumnHandle_t = RColumnHandle;  The column handle identifies a column with the current open page storage. ;  ; using SealedPageSequence_t = std::deque< RSealedPage >;  . Public Member Functions;  RPageSink (const RPageSink &)=delete;  ;  RPageSink (RPageSink &&)=default;  ;  RPageSink (std::string_view ntupleName, const RNTupleWriteOptions &options);  ;  ~RPageSink () override;  ; virtual std::uint64_t CommitCluster (NTupleSize_t nNewEntries);  Finalize the current cluster and create a new one for the following data. ;  ; virtual void CommitClusterGroup ()=0;  Write out the page locations (page list envelope) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RPageSink.html:95,Guid,Guide,95,doc/master/classROOT_1_1Experimental_1_1Internal_1_1RPageSink.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RPageSink.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::Internal::RPageSource Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Attributes |; List of all members ; ROOT::Experimental::Internal::RPageSource Class ReferenceabstractNTuple-related classes. ; Abstract interface to read data from an ntuple. ; The page source is initialized with the columns of interest. Alias columns from projected fields are mapped to the corresponding physical columns. Pages from the columns of interest can then be mapped into memory. The page source also gives access to the ntuple's meta-data. ; Definition at line 549 of file RPageStorage.hxx. Classes; class  RActivePhysicalColumns;  Keeps track of the requested physical column IDs. More...;  ; struct  RClusterInfo;  Summarizes cluster-level information that are necessary to load a certain page. More...;  ; struct  RCounters;  Default I/O performance counters that get registered in fMetrics More...;  ; struct  REntryRange;  Used in SetEntryRange / GetEntryRange. More...;  ; class  RExclDescriptorGuard;  An RAII wrapper used for the writable access to RPageSource::fDescriptor. See GetSharedDescriptorGuard(). More...;  ; class  RSharedDescriptorGuard;  An RAII wrapper used for the read-only access to RPageSource::fDescriptor. See GetExclDescriptorGuard()`. More...;  . Public Member Functions;  RPageSource (const RPageSource &)=delete;  ;  RPageSource (RPageSource &&)=delete;  ;  RPageSource (std::string_view ntupleName, const RNTupleReadOptions &fOptions);  ;  ~RPageSource () override;  ; ColumnHandle_t AddColumn (DescriptorId_t fieldId, RColumn &column) override;  Register a new column. ;  ; void Attach ();  Open the physical storage container and deserialize header and footer. ;  ; std::unique_ptr< RPageSource > Clone () const;  Open the same storage multiple time",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RPageSource.html:97,Guid,Guide,97,doc/master/classROOT_1_1Experimental_1_1Internal_1_1RPageSource.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RPageSource.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::Internal::RPageStorage::RTaskScheduler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Experimental::Internal::RPageStorage::RTaskScheduler Class Referenceabstract. ; The interface of a task scheduler to schedule page (de)compression tasks. ; Definition at line 77 of file RPageStorage.hxx. Public Member Functions; virtual ~RTaskScheduler ()=default;  ; virtual void AddTask (const std::function< void(void)> &taskFunc)=0;  Take a callable that represents a task. ;  ; virtual void Wait ()=0;  Blocks until all scheduled tasks finished. ;  . #include <ROOT/RPageStorage.hxx>. Inheritance diagram for ROOT::Experimental::Internal::RPageStorage::RTaskScheduler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~RTaskScheduler(). virtual ROOT::Experimental::Internal::RPageStorage::RTaskScheduler::~RTaskScheduler ; (; ). virtualdefault . Member Function Documentation. ◆ AddTask(). virtual void ROOT::Experimental::Internal::RPageStorage::RTaskScheduler::AddTask ; (; const std::function< void(void)> & ; taskFunc). pure virtual . Take a callable that represents a task. ; Implemented in ROOT::Experimental::Internal::RNTupleImtTaskScheduler. ◆ Wait(). virtual void ROOT::Experimental::Internal::RPageStorage::RTaskScheduler::Wait ; (; ). pure virtual . Blocks until all scheduled tasks finished. ; Implemented in ROOT::Experimental::Internal::RNTupleImtTaskScheduler. The documentation for this class was generated from the following file:; tree/ntuple/v7/inc/ROOT/RPageStorage.hxx. ROOTExperimentalInternalRPageStorageRTaskScheduler. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:14 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RPageStorage_1_1RTaskScheduler.html:114,Guid,Guide,114,doc/master/classROOT_1_1Experimental_1_1Internal_1_1RPageStorage_1_1RTaskScheduler.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RPageStorage_1_1RTaskScheduler.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::Internal::RVirtualCanvasPainter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Static Protected Member Functions |; List of all members ; ROOT::Experimental::Internal::RVirtualCanvasPainter Class ReferenceabstractGraphics » ROOT7 Graphics » ROOT7 Pad related classes. ; Abstract interface for painting a canvas. ; AuthorAxel Naumann axel@.nosp@m.cern.nosp@m..ch ; Date2017-05-31 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition at line 36 of file RVirtualCanvasPainter.hxx. Classes; class  Generator;  . Public Member Functions; virtual ~RVirtualCanvasPainter ();  Default destructor. ;  ; virtual bool AddPanel (std::shared_ptr< ROOT::RWebWindow >);  ; virtual void CanvasUpdated (uint64_t, bool, CanvasCallback_t)=0;  indicate that canvas changed, provides current version of the canvas ;  ; virtual void DoWhenReady (const std::string &, const std::string &, bool, CanvasCallback_t)=0;  perform special action when drawing is ready ;  ; virtual std::string GetWindowAddr () const =0;  ; virtual std::string GetWindowUrl (bool remote)=0;  ; virtual bool IsCanvasModified (uint64_t) const =0;  return true if canvas modified since last painting ;  ; virtual void NewDisplay (const std::string &where)=0;  ; virtual int NumDisplays () const =0;  ; virtual bool ProduceBatchOutput (const std::string &, int, int)=0;  produce file output in batch mode like png, jpeg, svg or pdf ;  ; virtual std::string ProduceJSON ()=0;  produce canvas JSON ;  ; virtual void Run (double tm=0.)=0;  run canvas functionality in caller thread, not needed when main thread is used ;  ; virtual void SetClearOnClose (const std::shared_ptr< void > &);  . Static Public Member Functions; static std::unique_ptr< RVirtualCanvasPainter > Create (RCanvas &canv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RVirtualCanvasPainter.html:107,Guid,Guide,107,doc/master/classROOT_1_1Experimental_1_1Internal_1_1RVirtualCanvasPainter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RVirtualCanvasPainter.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: ROOT::Experimental::Internal::TBulkBranchRead Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::Internal::TBulkBranchRead Class Reference. ; Helper class for reading many branch entries at once to optimize throughput. ; Definition at line 68 of file TBranch.h. Public Member Functions; Int_t GetBulkEntries (Long64_t evt, TBuffer &user_buf);  See TBranch::GetBulkEntries(Long64_t evt, TBuffer &user_buf);. ;  ; Int_t GetEntriesSerialized (Long64_t evt, TBuffer &user_buf);  See TBranch::GetEntriesSerialized(Long64_t evt, TBuffer &user_buf);. ;  ; Int_t GetEntriesSerialized (Long64_t evt, TBuffer &user_buf, TBuffer *count_buf);  See TBranch::GetEntriesSerialized(Long64_t evt, TBuffer &user_buf, TBuffer *count_buf);. ;  ; bool SupportsBulkRead () const;  Return true if the branch can be read through the bulk interfaces. ;  . Private Member Functions;  TBulkBranchRead (TBranch &parent);  . Private Attributes; TBranch & fParent;  . Friends; class ::TBranch;  . #include <TBranch.h>; Constructor & Destructor Documentation. ◆ TBulkBranchRead(). ROOT::Experimental::Internal::TBulkBranchRead::TBulkBranchRead ; (; TBranch & ; parent). inlineprivate . Definition at line 83 of file TBranch.h. Member Function Documentation. ◆ GetBulkEntries(). Int_t ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries ; (; Long64_t ; evt, . TBuffer & ; user_buf . ). inline . See TBranch::GetBulkEntries(Long64_t evt, TBuffer &user_buf);. ; Definition at line 320 of file TBranch.h. ◆ GetEntriesSerialized() [1/2]. Int_t ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized ; (; Long64_t ; evt, . TBuffer & ; user_buf . ). inline . See TBranch::GetEntriesSerialized(Long64_t evt, TBuffer &user_buf);. ; Definition at line 321 of file TBranch.h. ◆ GetEntriesSerialized() [2/2]. Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1TBulkBranchRead.html:101,Guid,Guide,101,doc/master/classROOT_1_1Experimental_1_1Internal_1_1TBulkBranchRead.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1TBulkBranchRead.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RAttrMap Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::RAttrMap Class ReferenceGraphics » ROOT7 Graphics » ROOT7 Pad related classes. ; AuthorsAxel Naumann axel@.nosp@m.cern.nosp@m..ch Sergey Linev s.lin.nosp@m.ev@g.nosp@m.si.de ; Date2017-09-26 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition at line 33 of file RAttrMap.hxx. Classes; class  BoolValue_t;  ; class  DoubleValue_t;  ; class  IntValue_t;  ; class  NoValue_t;  ; class  StringValue_t;  ; class  Value_t;  . Public Types; enum  EValuesKind { ;   kNoValue; , kBool; , kInt; , kDouble; , ;   kString. };  . Public Member Functions;  RAttrMap ()=default;  JSON_asbase - store as map object. ;  ;  RAttrMap (const RAttrMap &src);  ; RAttrMap & Add (const std::string &name, std::unique_ptr< Value_t > &&value);  ; RAttrMap & AddBool (const std::string &name, bool value);  ; RAttrMap & AddColor (const std::string &name, const RColor &value);  ; RAttrMap & AddDefaults (const RAttrBase &vis);  Add defaults values form sub attribute. ;  ; RAttrMap & AddDouble (const std::string &name, double value);  ; RAttrMap & AddInt (const std::string &name, int value);  ; RAttrMap & AddNoValue (const std::string &name);  ; RAttrMap & AddPadLength (const std::string &name, const RPadLength &value);  ; RAttrMap & AddString (const std::string &name, const std::string &value);  ; RAttrMap & AddValue (const std::string &name, bool value);  ; RAttrMap & AddValue (const std::string &name, const RColor &value);  ; RAttrMap & AddValue (const std::string &name, const RPadLength &value);  ; RAttrMap & AddValue (const std::string &name, const std::string &value);  ; RAttrMap & AddValue (const std::s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RAttrMap.html:84,Guid,Guide,84,doc/master/classROOT_1_1Experimental_1_1RAttrMap.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RAttrMap.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: ROOT::Experimental::RCanvas Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::RCanvas Class ReferenceGraphics » ROOT7 Graphics » ROOT7 Pad related classes. ; A window's topmost RPad. ; AuthorAxel Naumann axel@.nosp@m.cern.nosp@m..ch ; Date2015-07-08 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition at line 47 of file RCanvas.hxx. Public Member Functions;  RCanvas ();  Create a temporary RCanvas; for long-lived ones please use Create(). ;  ;  ~RCanvas () override=default;  ; template<class PANEL > ; bool AddPanel (std::shared_ptr< PANEL > &panel);  Insert panel into the canvas, canvas should be shown at this moment. ;  ; void ClearOnClose (const std::shared_ptr< void > &handle);  Set handle which will be cleared when connection is closed. ;  ; void ClearShown ();  clear IsShown() flag ;  ; void ClearUpdated ();  clear IsUpdated() flag ;  ; std::string CreateJSON ();  Provide JSON which can be used for offline display. ;  ; const RCanvas * GetCanvas () const override;  Access to the top-most canvas, if any (const version). ;  ; RCanvas * GetCanvas () override;  Access to the top-most canvas, if any (non-const version). ;  ; int GetHeight () const;  Get canvas height. ;  ; uint64_t GetModified () const;  Get modify counter. ;  ; const std::string & GetTitle () const;  Get the canvas's title. ;  ; std::string GetUID () const;  Return unique identifier for the canvas Used in iPython display. ;  ; int GetWidth () const;  Get canvas width. ;  ; std::string GetWindowAddr () const;  Returns window name used to display canvas. ;  ; std::string GetWindowUrl (bool remote);  Returns window URL which can be used for connection. ;  ; void Hide ();  Hide",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvas.html:83,Guid,Guide,83,doc/master/classROOT_1_1Experimental_1_1RCanvas.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvas.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: ROOT::Experimental::RCanvasPainter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RCanvasPainter Class ReferenceWeb Widgets. ; Implementation of painter for ROOT::Experimental::RCanvas, using RWebWindow. ; Definition at line 61 of file RCanvasPainter.cxx. Classes; class  GeneratorImpl;  ; struct  WebCommand;  ; struct  WebConn;  ; struct  WebUpdate;  . Public Member Functions;  RCanvasPainter (RCanvas &canv);  Constructor. ;  ; virtual ~RCanvasPainter ();  Destructor. ;  ; bool AddPanel (std::shared_ptr< ROOT::RWebWindow >) final;  Add window as panel inside canvas window. ;  ; void CanvasUpdated (uint64_t ver, bool async, CanvasCallback_t callback) final;  Method invoked when canvas should be updated on the client side Depending from delivered status, each client will received new data. ;  ; void DoWhenReady (const std::string &name, const std::string &arg, bool async, CanvasCallback_t callback) final;  perform special action when drawing is ready ;  ; std::string GetWindowAddr () const final;  Returns web window name. ;  ; std::string GetWindowUrl (bool remote) final;  Returns connection URL for web window. ;  ; bool IsCanvasModified (uint64_t id) const final;  return true if canvas modified since last painting ;  ; void NewDisplay (const std::string &where) final;  Create new display for the canvas See ROOT::RWebWindowsManager::Show() docu for more info. ;  ; int NumDisplays () const final;  Returns number of connected displays. ;  ; bool ProduceBatchOutput (const std::string &fname, int width, int height) final;  Produce batch output, using chrome headless mode with DOM dump. ;  ; std::string ProduceJSON () final;  Produce JSON for the canvas. ;  ; void Run (double tm=0.) final;  Run canvas functionality for specified period of time Requi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvasPainter.html:90,Guid,Guide,90,doc/master/classROOT_1_1Experimental_1_1RCanvasPainter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvasPainter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RChangeAttrRequest Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RChangeAttrRequest Class Reference. . Definition at line 24 of file RCanvas.hxx. Public Member Functions;  RChangeAttrRequest ()=default;  ;  ~RChangeAttrRequest () override=default;  ; bool NeedCanvasUpdate () const override;  ; std::unique_ptr< RDrawableReply > Process () override;  Apply attributes changes to the drawable Return mask with actions which were really applied. ;  ;  Public Member Functions inherited from ROOT::Experimental::RDrawableRequest; virtual ~RDrawableRequest ();  destructor, pin vtable ;  ; RDrawable::RDisplayContext & GetContext ();  ; const RDrawable::RDisplayContext & GetContext () const;  ; const std::string & GetId () const;  ; uint64_t GetRequestId () const;  ; bool ShouldBeReplyed () const;  . Private Member Functions;  RChangeAttrRequest (const RChangeAttrRequest &)=delete;  ; RChangeAttrRequest & operator= (const RChangeAttrRequest &)=delete;  . Private Attributes; bool fNeedUpdate {false};  ! is canvas update required ;  ; std::vector< std::string > ids;  array of ids ;  ; std::vector< std::string > names;  array of attribute names ;  ; bool update {true};  update canvas at the end ;  ; std::vector< std::unique_ptr< RAttrMap::Value_t > > values;  array of values ;  . #include <ROOT/RCanvas.hxx>. Inheritance diagram for ROOT::Experimental::RChangeAttrRequest:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RChangeAttrRequest() [1/2]. ROOT::Experimental::RChangeAttrRequest::RChangeAttrRequest ; (; const RChangeAttrRequest & ; ). privatedelete . ◆ RChangeAttrRequest() [2/2]. ROOT::Experimental::RChangeAttrRequest::RChangeAttrRequest ; (; ). default . ◆ ~RChangeAttr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RChangeAttrRequest.html:94,Guid,Guide,94,doc/master/classROOT_1_1Experimental_1_1RChangeAttrRequest.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RChangeAttrRequest.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RColor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Private Types |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::RColor Class ReferenceGraphics » ROOT7 Graphics » ROOT7 Pad related classes. ; The color class. ; AuthorAxel Naumann axel@.nosp@m.cern.nosp@m..ch . Sergey Linev S.Lin.nosp@m.ev@g.nosp@m.si.de ; Date2017-09-26 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition at line 33 of file RColor.hxx. Public Member Functions;  RColor ()=default;  ;  RColor (const RGB_t &rgb);  Construct color with provided RGB_t value. ;  ;  RColor (const std::string &color);  Construct color with provided string .  ;  RColor (float ordinal);  Construct color with provided ordinal value .  ;  RColor (uint8_t r, uint8_t g, uint8_t b);  Construct color with provided r,g,b values. ;  ;  RColor (uint8_t r, uint8_t g, uint8_t b, float alpha);  Construct color with provided r,g,b and alpha values. ;  ; std::string AsHex (bool with_alpha=false) const;  Returns color value in hex format like ""66FF66"" - without any prefix Alpha parameter can be optionally included. ;  ; std::vector< uint8_t > AsRGBA () const;  Returns color as RGBA array, trying also convert color name into RGBA value. ;  ; const std::string & AsString () const;  Returns color as it stored as string. ;  ; std::string AsSVG () const;  Returns color value as it will be used in SVG drawing It either include hex format #66FF66 or just plain SVG name. ;  ; void Clear ();  ; uint8_t GetAlpha () const;  Returns color alpha (opacity) as uint8_t 0..255. ;  ; float GetAlphaFloat () const;  Returns color alpha (opacity) as float from 0..1. ;  ; uint8_t GetBlue () con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RColor.html:82,Guid,Guide,82,doc/master/classROOT_1_1Experimental_1_1RColor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RColor.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: ROOT::Experimental::RDisplayItem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Experimental::RDisplayItem Class ReferenceGraphics » ROOT7 Graphics » ROOT7 Pad related classes. ; Base class for painting data for JS. ; AuthorSergey Linev s.lin.nosp@m.ev@g.nosp@m.si.de ; Date2017-05-31 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition at line 29 of file RDisplayItem.hxx. Public Member Functions;  RDisplayItem ()=default;  ;  RDisplayItem (bool dummy);  ; virtual ~RDisplayItem ();  ; virtual void BuildFullId (const std::string &prefix);  Build full id, including prefix and object index. ;  ; unsigned GetIndex () const;  ; std::string GetObjectID () const;  ; void SetIndex (unsigned indx);  ; void SetObjectID (const std::string &id);  ; void SetObjectIDAsPtr (const void *ptr);  Assign id using arbitrary pointer value Typically drawable pointer should be used here. ;  ; void SetStyle (RStyle *style);  . Static Public Member Functions; static std::string ObjectIDFromPtr (const void *ptr);  Construct fillid using pointer value. ;  . Protected Attributes; bool fDummy {false};  if true, just placeholder for drawable which does not changed ;  ; unsigned fIndex {0};  ! index inside current pad, used to produce fully-qualified id, not send to client ;  ; std::string fObjectID;  unique object identifier ;  ; RStyle * fStyle {nullptr};  style object ;  . #include <ROOT/RDisplayItem.hxx>. Inheritance diagram for ROOT::Experimental::RDisplayItem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RDisplayItem() [1/2]. ROOT::Experimental::RDisplayItem::RDisplayItem ; (; ). default . ◆ RDisplayItem() [2/2]. ROOT::Exp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RDisplayItem.html:88,Guid,Guide,88,doc/master/classROOT_1_1Experimental_1_1RDisplayItem.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RDisplayItem.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: ROOT::Experimental::RDrawable Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::RDrawable Class ReferenceGraphics » ROOT7 Graphics » ROOT7 Pad related classes. ; Base class for drawable entities: objects that can be painted on a RPad. ; AuthorsAxel Naumann axel@.nosp@m.cern.nosp@m..ch, Sergey Linev s.lin.nosp@m.ev@g.nosp@m.si.de ; Date2015-08-07 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition at line 108 of file RDrawable.hxx. Classes; class  RDisplayContext;  . Public Types; using Version_t = uint64_t;  . Public Member Functions;  RDrawable (const char *csstype);  ; virtual ~RDrawable ();  ; void ClearStyle ();  ; const std::string & GetCssClass () const;  ; const char * GetCssType () const;  ; const std::string & GetId () const;  ; void SetCssClass (const std::string &cl);  ; void SetId (const std::string &id);  ; virtual void UseStyle (const std::shared_ptr< RStyle > &style);  . Protected Member Functions;  RDrawable (const RDrawable &)=delete;  ; virtual void CollectShared (Internal::RIOSharedVector_t &);  ; virtual std::unique_ptr< RDisplayItem > Display (const RDisplayContext &);  Creates display item for drawable By default item contains drawable data itself. ;  ; virtual void Execute (const std::string &);  ; RAttrMap & GetAttrMap ();  ; const RAttrMap & GetAttrMap () const;  ; Version_t GetVersion () const;  ; virtual bool IsFrameRequired () const;  ; bool MatchSelector (const std::string &selector) const;  Preliminary method which checks if drawable matches with given selector Following selector are allowed: ""type"" or ""#id"" or "".class_name"" Here type is drawable kind like 'rect' or 'pad' id is drawable identifier, specified with RD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RDrawable.html:85,Guid,Guide,85,doc/master/classROOT_1_1Experimental_1_1RDrawable.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RDrawable.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: ROOT::Experimental::RDrawable::RDisplayContext Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RDrawable::RDisplayContext Class Reference. . Definition at line 125 of file RDrawable.hxx. Public Member Functions;  RDisplayContext ()=default;  ;  RDisplayContext (RCanvas *canv, RPadBase *pad, Version_t vers=0);  ; RCanvas * GetCanvas () const;  ; unsigned GetConnId () const;  ; RDrawable * GetDrawable () const;  ; unsigned GetIndex () const;  ; Version_t GetLastVersion () const;  ; RPadBase * GetPad () const;  ; bool IsMainConn () const;  ; void SetCanvas (RCanvas *canv);  Set canvas. ;  ; void SetConnection (unsigned connid, bool ismain);  Set connection id and ismain flag for connection. ;  ; void SetDrawable (RDrawable *dr, unsigned indx);  Set drawable and its index in list of primitives. ;  ; void SetPad (RPadBase *pad);  Set pad. ;  . Private Attributes; RCanvas * fCanvas {nullptr};  ! canvas where drawable is displayed ;  ; unsigned fConnId {0};  ! connection id ;  ; RDrawable * fDrawable {nullptr};  ! reference on the drawable ;  ; unsigned fIndex {0};  ! index in list of primitives ;  ; Version_t fLastVersion {0};  ! last displayed version ;  ; bool fMainConn {false};  ! is main connection ;  ; RPadBase * fPad {nullptr};  ! subpad where drawable is displayed ;  . #include <ROOT/RDrawable.hxx>; Constructor & Destructor Documentation. ◆ RDisplayContext() [1/2]. ROOT::Experimental::RDrawable::RDisplayContext::RDisplayContext ; (; ). default . ◆ RDisplayContext() [2/2]. ROOT::Experimental::RDrawable::RDisplayContext::RDisplayContext ; (; RCanvas * ; canv, . RPadBase * ; pad, . Version_t ; vers = 0 . ). inline . Definition at line 138 of file RDrawable.hxx. Member Function Documentation. ◆ GetCanvas(). RCanvas * ROOT::Experimental::RDrawable::RDisplayContext::GetCanvas ; (; ); const. inline . Def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RDrawable_1_1RDisplayContext.html:102,Guid,Guide,102,doc/master/classROOT_1_1Experimental_1_1RDrawable_1_1RDisplayContext.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RDrawable_1_1RDisplayContext.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::REntry Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::REntry Class ReferenceNTuple-related classes. ; The REntry is a collection of values in an ntuple corresponding to a complete row in the data set. ; The entry provides a memory-managed binder for a set of values. Through shared pointers, the memory locations that are associated to values are managed. ; Definition at line 51 of file REntry.hxx. Classes; class  RFieldToken;  The field token identifies a (sub)field in this entry. More...;  . Public Types; using ConstIterator_t = decltype(fValues)::const_iterator;  . Public Member Functions;  REntry (const REntry &other)=delete;  ;  REntry (REntry &&other)=default;  ;  ~REntry ()=default;  ; ConstIterator_t begin () const;  ; template<typename T > ; void BindRawPtr (RFieldToken token, T *rawPtr);  ; template<typename T > ; void BindRawPtr (std::string_view fieldName, T *rawPtr);  ; template<typename T > ; void BindValue (RFieldToken token, std::shared_ptr< T > objPtr);  ; template<typename T > ; void BindValue (std::string_view fieldName, std::shared_ptr< T > objPtr);  ; void EmplaceNewValue (RFieldToken token);  ; void EmplaceNewValue (std::string_view fieldName);  ; ConstIterator_t end () const;  ; std::uint64_t GetModelId () const;  ; template<typename T > ; std::shared_ptr< T > GetPtr (RFieldToken token) const;  ; template<typename T > ; std::shared_ptr< T > GetPtr (std::string_view fieldName) const;  ; std::uint64_t GetSchemaId () const;  ; RFieldToken GetToken (std::string_view fieldName) const;  The ordinal of the (sub)field fieldName; can be used in other methods to address the corresponding value. ;  ; REntry & operator= (const REntry &other)=delete;  ; REntry & operator= (REntry &&other)=default;  . Priv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REntry.html:82,Guid,Guide,82,doc/master/classROOT_1_1Experimental_1_1REntry.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REntry.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::REveGeoShapeExtract Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; ROOT::Experimental::REveGeoShapeExtract Class Reference. . Definition at line 23 of file REveGeoShapeExtract.hxx. Public Member Functions;  REveGeoShapeExtract (const char *n=""REveGeoShapeExtract"", const char *t=nullptr);  Constructor. ;  ;  ~REveGeoShapeExtract () override;  Destructor. Delete shape and elements. ;  ; void AddElement (REveGeoShapeExtract *gse);  Add a child element. ;  ; TList * GetElements ();  ; Bool_t GetMiniFrame ();  ; Float_t * GetRGBA ();  ; Float_t * GetRGBALine ();  ; Bool_t GetRnrElements ();  ; Bool_t GetRnrFrame ();  ; Bool_t GetRnrSelf ();  ; TGeoShape * GetShape ();  ; Double_t * GetTrans ();  ; Bool_t HasElements ();  True if has at least one element. ;  ; TClass * IsA () const override;  ; void SetElements (TList *e);  ; void SetMiniFrame (Bool_t r);  ; void SetRGBA (const Float_t arr[4]);  Set RGBA color. ;  ; void SetRGBALine (const Float_t arr[4]);  Set RGBA color for line. ;  ; void SetRnrElements (Bool_t r);  ; void SetRnrFrame (Bool_t r);  ; void SetRnrSelf (Bool_t r);  ; void SetShape (TGeoShape *s);  ; void SetTrans (const Double_t arr[16]);  Set transformation matrix. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveGeoShapeExtract.html:95,Guid,Guide,95,doc/master/classROOT_1_1Experimental_1_1REveGeoShapeExtract.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveGeoShapeExtract.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::REveLine Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; List of all members ; ROOT::Experimental::REveLine Class Reference. ; REveLine An arbitrary polyline with fixed line and marker attributes. ; Definition at line 28 of file REveLine.hxx. Public Member Functions;  REveLine (const REveLine &l);  Copy constructor. ;  ;  REveLine (const std::string &name="""", const std::string &title="""", Int_t n_points=0);  Constructor. ;  ;  ~REveLine () override;  ; void BuildRenderData () override;  Virtual from REveElement. Prepares render data for binary streaming to client. ;  ; Float_t CalculateLineLength () const;  Sum-up lengths of individual segments. ;  ; void CopyVizParams (const REveElement *el) override;  Copy visualization parameters from element el. ;  ; REveVector GetLineEnd () const;  Return the last point of the line. ;  ; REveVector GetLineStart () const;  Return the first point of the line. ;  ; Bool_t GetRnrLine () const;  ; Bool_t GetRnrPoints () const;  ; Bool_t GetSmooth () const;  ; TClass * ProjectedClass (const REveProjection *p) const override;  Virtual from REveProjectable, returns REvePointSetProjected class. ;  ; void ReduceSegmentLengths (Float_t max);  Make sure that no segment is longer than max. ;  ; void SetLineColor (Color_t col) override;  Set the line color. ;  ; void SetLineStyle (Style_t lstyle) override;  Set line-style of the line. ;  ; void SetLineWidth (Width_t lwidth) override;  Set line-style of the line. ;  ; void SetMarkerColor (Color_t col) override;  Set marker color. Propagate to projected lines. ;  ; void SetRnrLine (Bool_t r);  Set rendering of line. Propagate to projected lines. ;  ; void SetRnrPoints (Bool_t r);  Set rendering of points. Propagate to projected lines. ;  ; void SetSmooth ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveLine.html:84,Guid,Guide,84,doc/master/classROOT_1_1Experimental_1_1REveLine.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveLine.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::REvePointSelector Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; ROOT::Experimental::REvePointSelector Class Reference. ; REvePointSelector TSelector for direct extraction of point-like data from a Tree. ; Definition at line 76 of file REveTreeTools.hxx. Public Member Functions;  REvePointSelector (TTree *t=nullptr, REvePointSelectorConsumer *c=nullptr, const char *vexp="""", const char *sel="""");  Constructor. ;  ;  ~REvePointSelector () override;  ; REvePointSelectorConsumer * GetConsumer () const;  ; const char * GetSelection () const;  ; const char * GetSubIdExp () const;  ; Int_t GetSubIdNum () const;  ; TTree * GetTree () const;  ; const char * GetVarexp () const;  ; TClass * IsA () const override;  ; virtual Long64_t Select (const char *selection=nullptr);  Process the tree, select points matching 'selection'. ;  ; virtual Long64_t Select (TTree *t, const char *selection=nullptr);  Process tree 't', select points matching 'selection'. ;  ; void SetConsumer (REvePointSelectorConsumer *c);  ; void SetSelection (const char *s);  ; void SetSubIdExp (const char *s);  ; void SetTree (TTree *t);  ; void SetVarexp (const char *v);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TakeAction () override;  Callback from tree-player after a chunk of data has been processed. ;  ;  Public Member Functions inherited from TSelectorDraw;  TSelectorDraw ();  Default selector constructor. ;  ;  ~TSelectorDraw () override;  Selector destructor. ;  ; void Begin (TTree *tree) override;  Called every time a loop on the tree(s) starts. ;  ; virtual Int_t GetAction () const;  ; virtual bool GetCleanElist () const;  ; virtual Int_t GetDimension () const;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSelector.html:93,Guid,Guide,93,doc/master/classROOT_1_1Experimental_1_1REvePointSelector.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSelector.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::REvePointSet Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; ROOT::Experimental::REvePointSet Class Reference. . Definition at line 35 of file REvePointSet.hxx. Public Member Functions;  REvePointSet (const REvePointSet &e);  Copy constructor. ;  ;  REvePointSet (const std::string &name="""", const std::string &title="""", Int_t n_points=0);  Constructor. ;  ;  ~REvePointSet () override;  Destructor. ;  ; void BuildRenderData () override;  Crates 3D point array for rendering. ;  ; REvePointSet * CloneElement () const override;  Clone the element via copy constructor. ;  ; virtual void ClonePoints (const REvePointSet &e);  Clone points and all point-related information from point-set 'e'. ;  ; void ComputeBBox () override;  Compute bounding box. ;  ; void CopyVizParams (const REveElement *el) override;  Copy visualization parameters from element el. ;  ; int GetCapacity () const;  ; int GetSize () const;  ; Int_t GrowFor (Int_t n_points);  Resizes internal array to allow additional n_points to be stored. ;  ; void PointSelected (Int_t id);  Virtual method of base class TPointSet3D. ;  ; TClass * ProjectedClass (const REveProjection *p) const override;  Virtual from REveProjectable, returns REvePointSetProjected class. ;  ; REveVector & RefPoint (int n);  ; const REveVector & RefPoint (int n) const;  ; void Reset (Int_t n_points=0);  Drop all data and set-up the data structures to recive new data. ;  ; void SetMarkerColor (Color_t col) override;  Set the marker color. ;  ; void SetMarkerSize (Size_t msize=1) override;  Set marker size, propagate to projecteds. ;  ; void SetMarkerStyle (Style_t mstyle=1) override;  Set marker style, propagate to projecteds. ;  ; int SetNextPoint (float x, float y, float z);  ; int SetPoint (int n, float x, float y, float z);  ; Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSet.html:88,Guid,Guide,88,doc/master/classROOT_1_1Experimental_1_1REvePointSet.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSet.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::REvePointSetArray Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; ROOT::Experimental::REvePointSetArray Class Reference. . Definition at line 96 of file REvePointSet.hxx. Public Member Functions;  REvePointSetArray (const std::string &name=""REvePointSetArray"", const std::string &title="""");  Constructor. ;  ;  ~REvePointSetArray () override;  Destructor: deletes the fBins array. ;  ; void CloseBins ();  Call this after all the points have been filled. ;  ; Bool_t Fill (Double_t x, Double_t y, Double_t z, Double_t quant);  Add a new point. ;  ; REvePointSet * GetBin (Int_t bin) const;  ; Double_t GetCurMax () const;  ; Double_t GetCurMin () const;  ; Int_t GetDefPointSetCapacity () const;  ; Double_t GetMax () const;  ; Double_t GetMin () const;  ; Int_t GetNBins () const;  ; void InitBins (const std::string &quant_name, Int_t nbins, Double_t min, Double_t max);  Initialize internal point-sets with given binning parameters. ;  ; void RemoveElementLocal (REveElement *el) override;  Virtual from REveElement, provide bin management. ;  ; void RemoveElementsLocal () override;  Virtual from REveElement, provide bin management. ;  ; void SetDefPointSetCapacity (Int_t c);  ; void SetMarkerColor (Color_t tcolor=1) override;  Set marker color, propagate to children. ;  ; void SetMarkerSize (Size_t msize=1) override;  Set marker size, propagate to children. ;  ; void SetMarkerStyle (Style_t mstyle=1) override;  Set marker style, propagate to children. ;  ; void SetRange (Double_t min, Double_t max);  Set active range of the separating quantity. ;  ; Int_t Size (Bool_t under=kFALSE, Bool_t over=kFALSE) const;  Get the total number of filled points. ;  ;  Public Member Functions inherited from ROOT::Experimental::REveElement;  REveElement (const REveElement &e);  Copy constructor. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSetArray.html:93,Guid,Guide,93,doc/master/classROOT_1_1Experimental_1_1REvePointSetArray.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSetArray.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::REveSelectorToEventList Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; ROOT::Experimental::REveSelectorToEventList Class Reference. ; REveSelectorToEventList TSelector that stores entry numbers of matching TTree entries into an event-list. ; Definition at line 26 of file REveTreeTools.hxx. Public Member Functions;  REveSelectorToEventList (TEventList *evl, const char *sel);  Constructor. ;  ;  ~REveSelectorToEventList () override;  ; TClass * IsA () const override;  ; Bool_t Process (Long64_t entry) override;  Process entry. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Version () const override;  ;  Public Member Functions inherited from TSelectorDraw;  TSelectorDraw ();  Default selector constructor. ;  ;  ~TSelectorDraw () override;  Selector destructor. ;  ; void Begin (TTree *tree) override;  Called every time a loop on the tree(s) starts. ;  ; virtual Int_t GetAction () const;  ; virtual bool GetCleanElist () const;  ; virtual Int_t GetDimension () const;  ; virtual Long64_t GetDrawFlag () const;  ; Int_t GetMultiplicity () const;  ; virtual Int_t GetNfill () const;  ; TObject * GetObject () const;  ; TH1 * GetOldHistogram () const;  ; TTreeFormula * GetSelect () const;  ; virtual Long64_t GetSelectedRows () const;  ; TTree * GetTree () const;  ; virtual Double_t * GetV1 () const;  See TSelectorDraw::GetVal. ;  ; virtual Double_t * GetV2 () const;  See TSelectorDraw::GetVal. ;  ; virtual Double_t * GetV3 () const;  See TSelectorDraw::GetVal. ;  ; virtual Double_t * GetV4 () const;  See TSelectorDraw::GetVal. ;  ; virtual Double_t * GetVal (Int_t i) const;  Return the last values corresponding to the i-th component of the fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveSelectorToEventList.html:99,Guid,Guide,99,doc/master/classROOT_1_1Experimental_1_1REveSelectorToEventList.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveSelectorToEventList.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::REveStraightLineSet Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; ROOT::Experimental::REveStraightLineSet Class Reference. ; REveStraightLineSet Set of straight lines with optional markers along the lines. ; Definition at line 36 of file REveStraightLineSet.hxx. Classes; struct  Line_t;  ; struct  Marker_t;  . Public Member Functions;  REveStraightLineSet (const std::string &n=""StraightLineSet"", const std::string &t="""");  Constructor. ;  ;  ~REveStraightLineSet () override;  ; Line_t * AddLine (const REveVector &p1, const REveVector &p2);  Add a line. ;  ; Line_t * AddLine (Float_t x1, Float_t y1, Float_t z1, Float_t x2, Float_t y2, Float_t z2);  Add a line. ;  ; Marker_t * AddMarker (const REveVector &p, Int_t line_id=-1);  Add a marker with given position. ;  ; Marker_t * AddMarker (Float_t x, Float_t y, Float_t z, Int_t line_id=-1);  Add a marker with given position. ;  ; Marker_t * AddMarker (Int_t line_id, Float_t pos);  Add a marker for line with given index on relative position pos. ;  ; void BuildRenderData () override;  Crates 3D point array for rendering. ;  ; void ComputeBBox () override;  Compute bounding-box. ;  ; void CopyVizParams (const REveElement *el) override;  Copy visualization parameters from element el. ;  ; virtual Bool_t GetDepthTest ();  ; REveChunkManager & GetLinePlex ();  ; REveChunkManager & GetMarkerPlex ();  ; virtual Bool_t GetRnrLines ();  ; virtual Bool_t GetRnrMarkers ();  ; TClass * ProjectedClass (const REveProjection *p) const override;  Return class of projected object. ;  ; virtual void SetDepthTest (Bool_t x);  ; void SetLine (int idx, const REveVector &p1, const REveVector &p2);  Set line vertices with given index. ;  ; void SetLine (int idx, Float_t x1, Float_t y1, Float_t z1, Float_t x2, Float_t y2, Float_t z2);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html:95,Guid,Guide,95,doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::REveTrackList Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; ROOT::Experimental::REveTrackList Class Reference. ; REveTrackList A list of tracks supporting change of common attributes and selection based on track parameters. ; Definition at line 142 of file REveTrack.hxx. Public Member Functions;  REveTrackList (const std::string &name, REveTrackPropagator *prop=nullptr);  Constructor. ;  ;  REveTrackList (REveTrackPropagator *prop=nullptr);  Constructor. ;  ;  ~REveTrackList () override;  Destructor. ;  ; void CopyVizParams (const REveElement *el) override;  Copy visualization parameters from element el. ;  ; void FindMomentumLimits (Bool_t recurse=kTRUE);  Loop over children and find highest pT and p of contained EveTracks. ;  ; REveTrack * FindTrackByIndex (Int_t index);  Find track by index, select it and display it in the editor. ;  ; REveTrack * FindTrackByLabel (Int_t label);  Find track by label, select it and display it in the editor. ;  ; Double_t GetLimP () const;  ; Double_t GetLimPt () const;  ; Double_t GetMaxP () const;  ; Double_t GetMaxPt () const;  ; Double_t GetMinP () const;  ; Double_t GetMinPt () const;  ; REveTrackPropagator * GetPropagator ();  ; Bool_t GetRecurse () const;  ; Bool_t GetRnrLine () const;  ; Bool_t GetRnrPoints () const;  ; void MakeTracks (Bool_t recurse=kTRUE);  Regenerate the visual representations of tracks. ;  ; TClass * ProjectedClass (const REveProjection *p) const override;  Virtual from REveProjectable, returns REveTrackListProjected class. ;  ; void SelectByP (Double_t min_p, Double_t max_p);  Select visibility of tracks by momentum. ;  ; void SelectByP (Double_t min_p, Double_t max_p, REveElement *el);  Select visibility of el's children tracks by momentum. ;  ; void SelectByPt (Double_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveTrackList.html:89,Guid,Guide,89,doc/master/classROOT_1_1Experimental_1_1REveTrackList.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveTrackList.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::REveTrans Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; ROOT::Experimental::REveTrans Class Reference. . Definition at line 29 of file REveTrans.hxx. Public Member Functions;  REveTrans ();  Default constructor. ;  ;  REveTrans (const Double_t arr[16]);  Constructor. ;  ;  REveTrans (const Float_t arr[16]);  Constructor. ;  ;  REveTrans (const REveTrans &t);  Constructor. ;  ;  ~REveTrans () override;  ; Double_t * Array ();  ; const Double_t * Array () const;  ; Double_t * ArrT ();  ; const Double_t * ArrT () const;  ; Double_t * ArrX ();  ; const Double_t * ArrX () const;  ; Double_t * ArrY ();  ; const Double_t * ArrY () const;  ; Double_t * ArrZ ();  ; const Double_t * ArrZ () const;  ;  ClassDefOverride (REveTrans, 1);  ; Double_t & CM (Int_t i, Int_t j);  ; Double_t CM (Int_t i, Int_t j) const;  ; TVector3 GetBaseVec (Int_t b) const;  Get base-vector with index b. ;  ; void GetBaseVec (Int_t b, TVector3 &v) const;  ; Bool_t GetEditRotation ();  ; Bool_t GetEditScale ();  ; Bool_t GetEditTrans () const;  ; TVector3 GetPos () const;  ; void GetPos (Double_t &x, Double_t &y, Double_t &z) const;  Get position (base-vec 4). ;  ; void GetPos (Double_t *x) const;  ; void GetPos (Float_t *x) const;  ; void GetPos (TVector3 &v) const;  ; void GetRotAngles (Float_t *x) const;  Get Cardan rotation angles (pattern xYz above). ;  ; void GetScale (Double_t &sx, Double_t &sy, Double_t &sz) const;  Deduce scales from sizes of base vectors. ;  ; Bool_t GetUseTrans () const;  ; Double_t Invert ();  Invert matrix. ;  ; Bool_t IsScale (Double_t low=0.9, Double_t high=1.1) const;  Test if the transformation is a scale. ;  ; void Move (const REveTrans &a, Int_t ai, Double_t amount);  Move in a's coord-system along axis-index ai. ;  ; void Move3 (const REveTrans &a, Double_t x, Dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveTrans.html:85,Guid,Guide,85,doc/master/classROOT_1_1Experimental_1_1REveTrans.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveTrans.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::REveVSD Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Protected Attributes |; Private Member Functions |; List of all members ; ROOT::Experimental::REveVSD Class Reference. . Definition at line 25 of file REveVSD.hxx. Public Member Functions;  REveVSD (const char *name=""REveVSD"", const char *title="""");  Constructor. ;  ;  ~REveVSD () override;  Destructor. ;  ;  ClassDefOverride (REveVSD, 1);  ; virtual void CreateBranches ();  Create internal VSD branches. ;  ; virtual void CreateTrees ();  Create internal trees. ;  ; virtual void DeleteTrees ();  Delete internal trees. ;  ; virtual void LoadTrees ();  Load internal trees from directory. ;  ; virtual void SetBranchAddresses ();  Set branche addresses of internal trees. ;  ; virtual void SetDirectory (TDirectory *dir);  Set directory in which the trees are (or will be) created. ;  ; virtual void WriteTrees ();  Does nothing here ... reimplemented in sub-classes. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveVSD.html:83,Guid,Guide,83,doc/master/classROOT_1_1Experimental_1_1REveVSD.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveVSD.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RException Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RException Class ReferenceCore ROOT classes » Base ROOT classes. ; Base class for all ROOT issued exceptions. ; Definition at line 78 of file RError.hxx. Public Member Functions;  RException (const RError &error);  ; const RError & GetError () const;  . Private Attributes; RError fError;  . #include <ROOT/RError.hxx>. Inheritance diagram for ROOT::Experimental::RException:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RException(). ROOT::Experimental::RException::RException ; (; const RError & ; error). inlineexplicit . Definition at line 81 of file RError.hxx. Member Function Documentation. ◆ GetError(). const RError & ROOT::Experimental::RException::GetError ; (; ); const. inline . Definition at line 82 of file RError.hxx. Member Data Documentation. ◆ fError. RError ROOT::Experimental::RException::fError. private . Definition at line 79 of file RError.hxx. Libraries for ROOT::Experimental::RException:. [legend]; The documentation for this class was generated from the following file:; core/foundation/v7/inc/ROOT/RError.hxx. ROOTExperimentalRException. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:09 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RException.html:86,Guid,Guide,86,doc/master/classROOT_1_1Experimental_1_1RException.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RException.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RField< T, typename > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; ROOT::Experimental::RField< T, typename > Class Template Referencefinal. ; template<typename T, typename = void>; class ROOT::Experimental::RField< T, typename >Classes with dictionaries that can be inspected by TClass. ; Definition at line 241 of file RField.hxx. Public Member Functions;  RField (RField &&other)=default;  ;  RField (std::string_view name);  ;  ~RField () final=default;  ; RField & operator= (RField &&other)=default;  ;  Public Member Functions inherited from ROOT::Experimental::RClassField;  RClassField (RClassField &&other)=default;  ;  RClassField (std::string_view fieldName, std::string_view className);  ;  ~RClassField () override=default;  ; void AcceptVisitor (Detail::RFieldVisitor &visitor) const final;  ; size_t GetAlignment () const final;  As a rule of thumb, the alignment is equal to the size of the type. ;  ; std::uint32_t GetTypeChecksum () const final;  Return the current TClass reported checksum of this class. Only valid if kTraitTypeChecksum is set. ;  ; std::uint32_t GetTypeVersion () const final;  Indicates an evolution of the C++ type itself. ;  ; size_t GetValueSize () const final;  The number of bytes taken by a value of the appropriate type. ;  ; RClassField & operator= (RClassField &&other)=default;  ; std::vector< RValue > SplitValue (const RValue &value) const final;  Creates the list of direct child values given a value for this field. ;  ;  Public Member Functions inherited from ROOT::Experimental::RFieldBase;  RFieldBase (const RFieldBase &)=delete;  ;  RFieldBase (RFieldBase &&)=default;  ;  RFieldBase (std::string_view name, std::string_view type, ENTupleStructure structure, bool isSimple, std::size_t nRepetitions=0);  The constructor creates the underlying colu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RField.html:106,Guid,Guide,106,doc/master/classROOT_1_1Experimental_1_1RField.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RField.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RFieldBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Private Types |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::RFieldBase Class ReferenceabstractNTuple-related classes. ; A field translates read and write calls from/to underlying columns to/from tree values. ; A field is a serializable C++ type or a container for a collection of sub fields. The RFieldBase and its type-safe descendants provide the object to column mapper. They map C++ objects to primitive columns. The mapping is trivial for simple types such as 'double'. Complex types resolve to multiple primitive columns. The field knows based on its type and the field name the type(s) and name(s) of the columns.; Note: the class hierarchy starting at RFieldBase is not meant to be extended by user-provided child classes. This is and can only be partially enforced through C++. ; Definition at line 67 of file RFieldBase.hxx. Classes; class  RBulk;  Similar to RValue but manages an array of consecutive values. More...;  ; struct  RBulkSpec;  ; struct  RCheckResult;  Used in the return value of the Check() method. More...;  ; class  RColumnRepresentations;  Some fields have multiple possible column representations, e.g. More...;  ; struct  RCreateObjectDeleter;  ; struct  RCreateObjectDeleter< void >;  ; class  RDeleter;  A functor to release the memory acquired by CreateValue (memory and constructor). More...;  ; class  RSchemaIteratorTemplate;  Iterates over the sub tree of fields in depth-first search order. More...;  ; struct  RSharedPtrDeleter;  ; class  RTypedDeleter;  A deleter for templated RFieldBase descendents where the value type is known. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RFieldBase.html:86,Guid,Guide,86,doc/master/classROOT_1_1Experimental_1_1RFieldBase.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RFieldBase.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: ROOT::Experimental::RFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Public Attributes |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::RFrame Class ReferenceGraphics » ROOT7 Graphics » ROOT7 Pad related classes. ; Holds an area where drawing on user coordinate-system can be performed. ; AuthorsAxel Naumann axel@.nosp@m.cern.nosp@m..ch Sergey Linev s.lin.nosp@m.ev@g.nosp@m.si.de ; Date2017-09-26 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition at line 38 of file RFrame.hxx. Classes; class  RUserRanges;  ; class  RZoomRequest;  . Public Member Functions;  RFrame (TRootIOCtor *);  ; void GetClientRanges (unsigned connid, RUserRanges &ranges);  Return ranges configured for the client. ;  ;  Public Member Functions inherited from ROOT::Experimental::RDrawable;  RDrawable (const char *csstype);  ; virtual ~RDrawable ();  ; void ClearStyle ();  ; const std::string & GetCssClass () const;  ; const char * GetCssType () const;  ; const std::string & GetId () const;  ; void SetCssClass (const std::string &cl);  ; void SetId (const std::string &id);  ; virtual void UseStyle (const std::shared_ptr< RStyle > &style);  . Public Attributes; RAttrBorder border {this, ""border""};  ! frame border attributes ;  ; RAttrValue< bool > drawAxes {this, ""drawAxes"", false};  ! draw axes by frame ;  ; RAttrFill fill {this, ""fill""};  ! frame fill attributes ;  ; RAttrValue< bool > gridX {this, ""gridX"", false};  ! show grid for X axis ;  ; RAttrValue< bool > gridY {this, ""gridY"", false};  ! show grid for Y axis ;  ; RAttrMargins margins {this, ""margins""};  ! frame margins relative to pad ;  ; RAttrValue< bool > swapX {this, ""swapX"", false};  ! swap position of X axis ;  ; RAttrValue< bool > swapY ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RFrame.html:82,Guid,Guide,82,doc/master/classROOT_1_1Experimental_1_1RFrame.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RFrame.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: ROOT::Experimental::RLogChannel Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RLogChannel Class Reference. ; A log configuration for a channel, e.g. ; ""RHist"". Each ROOT module has its own log, with potentially distinct verbosity. ; Definition at line 101 of file RLogger.hxx. Public Member Functions;  RLogChannel ()=default;  Construct an anonymous channel. ;  ;  RLogChannel (const std::string &name);  Construct a log channel given its name, which is part of the diagnostics. ;  ;  RLogChannel (ELogLevel verbosity);  Construct an anonymous channel with a default verbosity. ;  ; ELogLevel GetEffectiveVerbosity (const RLogManager &mgr) const;  ; const std::string & GetName () const;  ; ELogLevel GetVerbosity () const;  ; ELogLevel SetVerbosity (ELogLevel verbosity);  ;  Public Member Functions inherited from ROOT::Experimental::RLogDiagCount; long long GetNumErrors () const;  Returns the current number of errors. ;  ; long long GetNumFatalErrors () const;  Returns the current number of fatal errors. ;  ; long long GetNumWarnings () const;  Number of fatal errors. ;  ; void Increment (ELogLevel severity);  Increase warning or error count. ;  . Private Attributes; std::string fName;  Name as shown in diagnostics. ;  ; ELogLevel fVerbosity = ELogLevel::kUnset;  Verbosity of this channel. By default, use the global verbosity. ;  . Additional Inherited Members;  Protected Attributes inherited from ROOT::Experimental::RLogDiagCount; std::atomic< long long > fNumErrors {0ll};  Number of warnings. ;  ; std::atomic< long long > fNumFatalErrors {0ll};  Number of errors. ;  ; std::atomic< long long > fNumWarnings {0ll};  . #include <ROOT/RLogger.hxx>. Inheritance diagram for ROOT::Experimental::RLogChannel:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constru",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RLogChannel.html:87,Guid,Guide,87,doc/master/classROOT_1_1Experimental_1_1RLogChannel.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RLogChannel.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RLogChannel Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RLogChannel Class Reference. ; A log configuration for a channel, e.g. ; ""RHist"". Each ROOT module has its own log, with potentially distinct verbosity. ; Definition at line 101 of file RLogger.hxx. Public Member Functions;  RLogChannel ()=default;  Construct an anonymous channel. ;  ;  RLogChannel (const std::string &name);  Construct a log channel given its name, which is part of the diagnostics. ;  ;  RLogChannel (ELogLevel verbosity);  Construct an anonymous channel with a default verbosity. ;  ; ELogLevel GetEffectiveVerbosity (const RLogManager &mgr) const;  ; const std::string & GetName () const;  ; ELogLevel GetVerbosity () const;  ; ELogLevel SetVerbosity (ELogLevel verbosity);  ;  Public Member Functions inherited from ROOT::Experimental::RLogDiagCount; long long GetNumErrors () const;  Returns the current number of errors. ;  ; long long GetNumFatalErrors () const;  Returns the current number of fatal errors. ;  ; long long GetNumWarnings () const;  Number of fatal errors. ;  ; void Increment (ELogLevel severity);  Increase warning or error count. ;  . Private Attributes; std::string fName;  Name as shown in diagnostics. ;  ; ELogLevel fVerbosity = ELogLevel::kUnset;  Verbosity of this channel. By default, use the global verbosity. ;  . Additional Inherited Members;  Protected Attributes inherited from ROOT::Experimental::RLogDiagCount; std::atomic< long long > fNumErrors {0ll};  Number of warnings. ;  ; std::atomic< long long > fNumFatalErrors {0ll};  Number of errors. ;  ; std::atomic< long long > fNumWarnings {0ll};  . #include <ROOT/RLogger.hxx>. Inheritance diagram for ROOT::Experimental::RLogChannel:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Construc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1Experimental_1_1RLogChannel.html:86,Guid,Guide,86,doc/v632/classROOT_1_1Experimental_1_1RLogChannel.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1Experimental_1_1RLogChannel.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RLogScopedVerbosity Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RLogScopedVerbosity Class Reference. ; Change the verbosity level (global or specific to the RLogChannel passed to the constructor) for the lifetime of this object. ; Example: RLogScopedVerbosity debugThis(gFooLog, ELogLevel::kDebug);; Foo::SomethingToDebug();; ROOT::Experimental::RLogScopedVerbosityChange the verbosity level (global or specific to the RLogChannel passed to the constructor) for the ...Definition RLogger.hxx:243; ROOT::Experimental::ELogLevel::kDebug@ kDebugDebug information; only useful for developers; can have added verbosity up to 255-kDebug. Definition at line 243 of file RLogger.hxx. Public Member Functions;  RLogScopedVerbosity (ELogLevel verbosity);  ;  RLogScopedVerbosity (RLogChannel &channel, ELogLevel verbosity);  ;  ~RLogScopedVerbosity ();  . Private Attributes; RLogChannel * fChannel;  ; ELogLevel fPrevLevel;  . #include <ROOT/RLogger.hxx>; Constructor & Destructor Documentation. ◆ RLogScopedVerbosity() [1/2]. ROOT::Experimental::RLogScopedVerbosity::RLogScopedVerbosity ; (; RLogChannel & ; channel, . ELogLevel ; verbosity . ). inline . Definition at line 248 of file RLogger.hxx. ◆ RLogScopedVerbosity() [2/2]. ROOT::Experimental::RLogScopedVerbosity::RLogScopedVerbosity ; (; ELogLevel ; verbosity). inlineexplicit . Definition at line 252 of file RLogger.hxx. ◆ ~RLogScopedVerbosity(). ROOT::Experimental::RLogScopedVerbosity::~RLogScopedVerbosity ; (; ). inline . Definition at line 253 of file RLogger.hxx. Member Data Documentation. ◆ fChannel. RLogChannel* ROOT::Experimental::RLogScopedVerbosity::fChannel. private . Definition at line 244 of file RLogger.hxx. ◆ fPrevLevel. ELogLevel ROOT::Experimental::RLogScopedVerbosity::fPrevLevel. private . Definition at line 245 of file RLogger.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RLogScopedVerbosity.html:95,Guid,Guide,95,doc/master/classROOT_1_1Experimental_1_1RLogScopedVerbosity.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RLogScopedVerbosity.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RMenuItems Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Experimental::RMenuItems Class ReferenceGraphics » ROOT7 Graphics » ROOT7 Pad related classes. ; List of items for object context menu. ; AuthorSergey Linev ; Date2017-06-29 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition at line 157 of file RMenuItems.hxx. Public Member Functions;  RMenuItems ()=default;  ;  RMenuItems (const std::string &_id, const std::string &_specifier);  ;  ~RMenuItems () override;  destructor - pin vtable ;  ; void Add (std::unique_ptr< Detail::RMenuItem > &&item);  ; void AddChkMenuItem (const std::string &name, const std::string &title, bool checked, const std::string &toggle, const TClass *cl=nullptr);  ; void AddMenuItem (const std::string &name, const std::string &title, const std::string &exec, const TClass *cl=nullptr);  ; const std::string & GetFullId () const;  ; const std::string & GetSpecifier () const;  ; void PopulateObjectMenu (void *obj, TClass *cl);  Fill menu for provided object, using MENU as indicator in method comments. ;  ; auto Size () const;  ;  Public Member Functions inherited from ROOT::Experimental::RDrawableReply; virtual ~RDrawableReply ();  destructor, pin vtable ;  ; uint64_t GetRequestId () const;  ; void SetRequestId (uint64_t _reqid);  . Protected Attributes; std::string fId;  object identifier ;  ; std::vector< std::unique_ptr< Detail::RMenuItem > > fItems;  list of items in the menu ;  ; std::string fSpecifier;  ! extra specifier, used only on server ;  . #include <ROOT/RMenuItems.hxx>. Inheritance diagram for ROOT::Experimental::RMenuItems:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RMe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RMenuItems.html:86,Guid,Guide,86,doc/master/classROOT_1_1Experimental_1_1RMenuItems.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RMenuItems.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: ROOT::Experimental::RNTupleCollectionView Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::RNTupleCollectionView Class ReferenceNTuple-related classes. ; A view for a collection, that can itself generate new ntuple views for its nested fields. ; Definition at line 338 of file RNTupleView.hxx. Public Member Functions;  RNTupleCollectionView (const RNTupleCollectionView &other)=delete;  ;  RNTupleCollectionView (RNTupleCollectionView &&other)=default;  ;  ~RNTupleCollectionView ()=default;  ; RNTupleClusterRange GetCollectionRange (NTupleSize_t globalIndex);  ; RNTupleClusterRange GetCollectionRange (RClusterIndex clusterIndex);  ; RNTupleCollectionView GetCollectionView (std::string_view fieldName);  Raises an exception if there is no field with the given name. ;  ; template<typename T > ; RNTupleDirectAccessView< T > GetDirectAccessView (std::string_view fieldName);  Raises an exception if there is no field with the given name. ;  ; template<typename T > ; RNTupleView< T > GetView (std::string_view fieldName);  Raises an exception if there is no field with the given name. ;  ; std::uint64_t operator() (NTupleSize_t globalIndex);  ; std::uint64_t operator() (RClusterIndex clusterIndex);  ; RNTupleCollectionView & operator= (const RNTupleCollectionView &other)=delete;  ; RNTupleCollectionView & operator= (RNTupleCollectionView &&other)=default;  . Private Member Functions;  RNTupleCollectionView (DescriptorId_t fieldId, const std::string &fieldName, Internal::RPageSource *source);  ; DescriptorId_t GetFieldId (std::string_view fieldName);  . Static Private Member Functions; static RNTupleCollectionView Create (DescriptorId_t fieldId, Internal::RPageSource *source);  . Private Attributes; RField< RNTupleCardinality< std::uint64_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleCollectionView.html:97,Guid,Guide,97,doc/master/classROOT_1_1Experimental_1_1RNTupleCollectionView.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleCollectionView.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleDescriptor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Attributes |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::RNTupleDescriptor Class ReferenceNTuple-related classes. ; The on-storage meta-data of an ntuple. ; Represents the on-disk (on storage) information about an ntuple. The meta-data consists of a header and one or several footers. The header carries the ntuple schema, i.e. the fields and the associated columns and their relationships. The footer(s) carry information about one or several clusters. For every cluster, a footer stores its location and size, and for every column the range of element indexes as well as a list of pages and page locations.; The descriptor provide machine-independent (de-)serialization of headers and footers, and it provides lookup routines for ntuple objects (pages, clusters, ...). It is supposed to be usable by all RPageStorage implementations.; The serialization does not use standard ROOT streamers in order to not let it depend on libCore. The serialization uses the concept of frames: header, footer, and substructures have a preamble with version numbers and the size of the writte struct. This allows for forward and backward compatibility when the meta-data evolves. ; Definition at line 528 of file RNTupleDescriptor.hxx. Classes; class  RClusterDescriptorIterable;  Used to loop over all the clusters of an ntuple (in unspecified order) More...;  ; class  RClusterGroupDescriptorIterable;  Used to loop over all the cluster groups of an ntuple (in unspecified order) More...;  ; class  RColumnDescriptorIterable;  Used to loop over a field's associated columns. More...;  ; struct  RCreateModelOptions;  Modifiers passed to CreateModel More...;  ; class  RExtraTypeInfoDescriptorIterable;  Used to loop over all the extra type info record of an ntupl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleDescriptor.html:93,Guid,Guide,93,doc/master/classROOT_1_1Experimental_1_1RNTupleDescriptor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleDescriptor.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleDirectAccessView< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; ROOT::Experimental::RNTupleDirectAccessView< T > Class Template ReferenceNTuple-related classes. ; template<typename T>; class ROOT::Experimental::RNTupleDirectAccessView< T >A view variant that provides direct access to the I/O buffers. ; Only works for mappable fields. ; Definition at line 293 of file RNTupleView.hxx. Public Member Functions;  RNTupleDirectAccessView (const RNTupleDirectAccessView &other)=delete;  ;  RNTupleDirectAccessView (RNTupleDirectAccessView &&other)=default;  ;  ~RNTupleDirectAccessView ()=default;  ; const RFieldBase & GetField () const;  ; RNTupleGlobalRange GetFieldRange () const;  ; const T & operator() (NTupleSize_t globalIndex);  ; const T & operator() (RClusterIndex clusterIndex);  ; RNTupleDirectAccessView & operator= (const RNTupleDirectAccessView &other)=delete;  ; RNTupleDirectAccessView & operator= (RNTupleDirectAccessView &&other)=default;  . Protected Member Functions;  RNTupleDirectAccessView (RField< T > field, RNTupleGlobalRange range);  . Static Protected Member Functions; static RField< T > CreateField (DescriptorId_t fieldId, Internal::RPageSource &pageSource);  . Protected Attributes; RField< T > fField;  ; RNTupleGlobalRange fFieldRange;  . Friends; class RNTupleCollectionView;  ; class RNTupleReader;  . #include <ROOT/RNTupleView.hxx>; Constructor & Destructor Documentation. ◆ RNTupleDirectAccessView() [1/3]. template<typename T > . ROOT::Experimental::RNTupleDirectAccessView< T >::RNTupleDirectAccessView ; (; RField< T > ; field, . RNTupleGlobalRange ; range . ). inlineprotected . Definition at line 315 of file RNTupleView.hxx. ◆ RNTupleDirectAccessView() [2/3]. template<typename T > .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleDirectAccessView.html:113,Guid,Guide,113,doc/master/classROOT_1_1Experimental_1_1RNTupleDirectAccessView.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleDirectAccessView.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleFillContext Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::RNTupleFillContext Class ReferenceNTuple-related classes. ; A context for filling entries (data) into clusters of an RNTuple. ; An output cluster can be filled with entries. The caller has to make sure that the data that gets filled into a cluster is not modified for the time of the Fill() call. The fill call serializes the C++ object into the column format and writes data into the corresponding column page buffers. Writing of the buffers to storage is deferred and can be triggered by FlushCluster() or by destructing the context. On I/O errors, an exception is thrown.; Instances of this class are not meant to be used in isolation and can be created from an RNTupleParallelWriter. For sequential writing, please refer to RNTupleWriter. ; Definition at line 51 of file RNTupleFillContext.hxx. Public Member Functions;  ~RNTupleFillContext ();  ; void CommitStagedClusters ();  Logically append staged clusters to the RNTuple. ;  ; std::unique_ptr< REntry > CreateEntry ();  ; void EnableMetrics ();  ; void EnableStagedClusterCommitting (bool val=true);  ; std::size_t Fill (REntry &entry);  Fill an entry into this context. ;  ; void FillNoFlush (REntry &entry, RNTupleFillStatus &status);  Fill an entry into this context, but don't commit the cluster. ;  ; void FlushCluster ();  Flush so far filled entries to storage. ;  ; void FlushColumns ();  Flush column data, preparing for CommitCluster or to reduce memory usage. ;  ; NTupleSize_t GetLastFlushed () const;  Return the entry number that was last flushed in a cluster. ;  ; const Detail::RNTupleMetrics & GetMetrics () const;  ; const RNTupleModel & GetModel () const;  ; NTupleSize_t GetNEntries () const;  Return the number of entries ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleFillContext.html:94,Guid,Guide,94,doc/master/classROOT_1_1Experimental_1_1RNTupleFillContext.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleFillContext.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleFillStatus Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::RNTupleFillStatus Class ReferenceNTuple-related classes. ; A status object after filling an entry. ; After passing an instance to RNTupleWriter::FillNoFlush or RNTupleFillContext::FillNoFlush, the caller must check ShouldFlushCluster and call RNTupleWriter::FlushCluster or RNTupleFillContext::FlushCluster if necessary. ; Definition at line 36 of file RNTupleFillStatus.hxx. Public Member Functions; std::size_t GetLastEntrySize () const;  Return the number of bytes for the last entry. ;  ; NTupleSize_t GetNEntries () const;  Return the number of entries written into the current cluster. ;  ; std::size_t GetUnzippedClusterSize () const;  Return the number of bytes written into the current cluster. ;  ; bool ShouldFlushCluster () const;  Return true if the caller should call FlushCluster. ;  . Private Attributes; std::size_t fLastEntrySize = 0;  Number of bytes written for the last entry. ;  ; NTupleSize_t fNEntriesSinceLastFlush = 0;  Number of entries written into the current cluster. ;  ; bool fShouldFlushCluster = false;  ; std::size_t fUnzippedClusterSize = 0;  Number of bytes written into the current cluster. ;  . Friends; class RNTupleFillContext;  . #include <ROOT/RNTupleFillStatus.hxx>; Member Function Documentation. ◆ GetLastEntrySize(). std::size_t ROOT::Experimental::RNTupleFillStatus::GetLastEntrySize ; (; ); const. inline . Return the number of bytes for the last entry. ; Definition at line 54 of file RNTupleFillStatus.hxx. ◆ GetNEntries(). NTupleSize_t ROOT::Experimental::RNTupleFillStatus::GetNEntries ; (; ); const. inline . Return the number of entries written into the current cluster. ; Definition at line 50 of file RNTupleFillStatus.hxx. ◆ GetUnzippedClusterSize(). std::size_t ROOT::Exper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleFillStatus.html:93,Guid,Guide,93,doc/master/classROOT_1_1Experimental_1_1RNTupleFillStatus.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleFillStatus.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleGlobalRange Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RNTupleGlobalRange Class ReferenceNTuple-related classes. ; Used to loop over indexes (entries or collections) between start and end. ; Definition at line 40 of file RNTupleView.hxx. Classes; class  RIterator;  . Public Member Functions;  RNTupleGlobalRange (NTupleSize_t start, NTupleSize_t end);  ; RIterator begin ();  ; RIterator end ();  ; NTupleSize_t size ();  . Private Attributes; NTupleSize_t fEnd;  ; NTupleSize_t fStart;  . #include <ROOT/RNTupleView.hxx>; Constructor & Destructor Documentation. ◆ RNTupleGlobalRange(). ROOT::Experimental::RNTupleGlobalRange::RNTupleGlobalRange ; (; NTupleSize_t ; start, . NTupleSize_t ; end . ). inline . Definition at line 69 of file RNTupleView.hxx. Member Function Documentation. ◆ begin(). RIterator ROOT::Experimental::RNTupleGlobalRange::begin ; (; ). inline . Definition at line 70 of file RNTupleView.hxx. ◆ end(). RIterator ROOT::Experimental::RNTupleGlobalRange::end ; (; ). inline . Definition at line 71 of file RNTupleView.hxx. ◆ size(). NTupleSize_t ROOT::Experimental::RNTupleGlobalRange::size ; (; ). inline . Definition at line 72 of file RNTupleView.hxx. Member Data Documentation. ◆ fEnd. NTupleSize_t ROOT::Experimental::RNTupleGlobalRange::fEnd. private . Definition at line 43 of file RNTupleView.hxx. ◆ fStart. NTupleSize_t ROOT::Experimental::RNTupleGlobalRange::fStart. private . Definition at line 42 of file RNTupleView.hxx. Libraries for ROOT::Experimental::RNTupleGlobalRange:. [legend]; The documentation for this class was generated from the following file:; tree/ntuple/v7/inc/ROOT/RNTupleView.hxx. ROOTExperimentalRNTupleGlobalRange. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:11 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleGlobalRange.html:94,Guid,Guide,94,doc/master/classROOT_1_1Experimental_1_1RNTupleGlobalRange.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleGlobalRange.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleImporter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RNTupleImporter Class ReferenceNTuple-related classes. ; Converts a TTree into an RNTuple. ; Example usage (see the ntpl008_import.C tutorial for a full example):; #include <ROOT/RNTupleImporter.hxx>; using ROOT::Experimental::RNTupleImporter;; ; auto importer = RNTupleImporter::Create(""data.root"", ""TreeName"", ""output.root"");; // As required: importer->SetNTupleName(), importer->SetWriteOptions(), ...; importer->Import();; RNTupleImporter.hxx; ROOT::Experimental::RNTupleImporterConverts a TTree into an RNTuple.Definition RNTupleImporter.hxx:103; ROOT::Experimental::RNTupleImporter::Createstatic std::unique_ptr< RNTupleImporter > Create(std::string_view sourceFileName, std::string_view treeName, std::string_view destFileName)Opens the input file for reading and the output file for writing (update).Definition RNTupleImporter.cxx:80; The output file is created if it does not exist, otherwise the ntuple is added to the existing file. Note that input file and output file can be identical if the ntuple is stored under a different name than the tree (use SetNTupleName()).; By default, the RNTuple is compressed with zstd, independent of the input compression. The compression settings (and other output parameters) can be changed by SetWriteOptions(). For example, to compress the imported RNTuple using lz4 (with compression level 4) instead:; auto writeOptions = importer->GetWriteOptions();; writeOptions.SetCompression(404);; importer->SetWriteOptions(writeOptions);; Most RNTuple fields have a type identical to the corresponding TTree input branch. Exceptions are; C string branches are translated to std::string fields; C style arrays are ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleImporter.html:91,Guid,Guide,91,doc/master/classROOT_1_1Experimental_1_1RNTupleImporter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleImporter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleImporter::RCStringTransformation Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Experimental::RNTupleImporter::RCStringTransformation Struct Reference. ; Transform a NULL terminated C string branch into an std::string field. ; Definition at line 196 of file RNTupleImporter.hxx. Public Member Functions;  RCStringTransformation (std::size_t b, std::size_t f);  ;  ~RCStringTransformation () override=default;  ; RResult< void > Transform (const RImportBranch &branch, RImportField &field) final;  ;  Public Member Functions inherited from ROOT::Experimental::RNTupleImporter::RImportTransformation;  RImportTransformation (std::size_t branchIdx, std::size_t fieldIdx);  ; virtual ~RImportTransformation ()=default;  . Additional Inherited Members;  Public Attributes inherited from ROOT::Experimental::RNTupleImporter::RImportTransformation; std::size_t fImportBranchIdx = 0;  ; std::size_t fImportFieldIdx = 0;  . Inheritance diagram for ROOT::Experimental::RNTupleImporter::RCStringTransformation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RCStringTransformation(). ROOT::Experimental::RNTupleImporter::RCStringTransformation::RCStringTransformation ; (; std::size_t ; b, . std::size_t ; f . ). inline . Definition at line 197 of file RNTupleImporter.hxx. ◆ ~RCStringTransformation(). ROOT::Experimental::RNTupleImporter::RCStringTransformation::~RCStringTransformation ; (; ). overridedefault . Member Function Documentation. ◆ Transform(). ROOT::Experimental::RResult< void > ROOT::Experimental::RNTupleImporter::RCStringTransformation::Transform ; (; const RImportBranch & ; branch, . RImportField & ; field . ). finalvirtual . Implements ROOT::Experimental::RNTupleImporter::RImportTransformation.; Definition at line 73 of file RNTu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RCStringTransformation.html:116,Guid,Guide,116,doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RCStringTransformation.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RCStringTransformation.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Experimental::RNTupleImporter::RImportBranch Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Experimental::RNTupleImporter::RImportBranch Struct Reference. . Definition at line 121 of file RNTupleImporter.hxx. Public Member Functions;  RImportBranch ()=default;  ;  RImportBranch (const RImportBranch &other)=delete;  ;  RImportBranch (RImportBranch &&other)=default;  ; RImportBranch & operator= (const RImportBranch &other)=delete;  ; RImportBranch & operator= (RImportBranch &&other)=default;  . Public Attributes; std::unique_ptr< unsigned char[]> fBranchBuffer;  The destination of SetBranchAddress() for fBranchName ;  ; std::string fBranchName;  Top-level branch name from the input TTree. ;  . Constructor & Destructor Documentation. ◆ RImportBranch() [1/3]. ROOT::Experimental::RNTupleImporter::RImportBranch::RImportBranch ; (; ). default . ◆ RImportBranch() [2/3]. ROOT::Experimental::RNTupleImporter::RImportBranch::RImportBranch ; (; const RImportBranch & ; other). delete . ◆ RImportBranch() [3/3]. ROOT::Experimental::RNTupleImporter::RImportBranch::RImportBranch ; (; RImportBranch && ; other). default . Member Function Documentation. ◆ operator=() [1/2]. RImportBranch & ROOT::Experimental::RNTupleImporter::RImportBranch::operator= ; (; const RImportBranch & ; other). delete . ◆ operator=() [2/2]. RImportBranch & ROOT::Experimental::RNTupleImporter::RImportBranch::operator= ; (; RImportBranch && ; other). default . Member Data Documentation. ◆ fBranchBuffer. std::unique_ptr<unsigned char[]> ROOT::Experimental::RNTupleImporter::RImportBranch::fBranchBuffer. The destination of SetBranchAddress() for fBranchName ; Definition at line 128 of file RNTupleImporter.hxx. ◆ fBranchName. std::string ROOT::Experimental::RNTupleImporter::RImportBranch::fBranchName. Top-level branch name from the input TTree. ; Definitio,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RImportBranch.html:107,Guid,Guide,107,doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RImportBranch.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RImportBranch.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleImporter::RImportField Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Experimental::RNTupleImporter::RImportField Struct Reference. . Definition at line 131 of file RNTupleImporter.hxx. Public Member Functions;  RImportField ()=default;  ;  RImportField (const RImportField &other)=delete;  ;  RImportField (RImportField &&other)=default;  ;  ~RImportField ()=default;  ; RImportField & operator= (const RImportField &other)=delete;  ; RImportField & operator= (RImportField &&other)=default;  . Public Attributes; RFieldBase * fField = nullptr;  The field is kept during schema preparation and transferred to the fModel before the writing starts. ;  ; void * fFieldBuffer = nullptr;  Usually points to the corresponding RImportBranch::fBranchBuffer but not always. ;  ; std::unique_ptr< RFieldBase::RValue > fValue;  Set if a value is generated, only for transformed fields. ;  . Constructor & Destructor Documentation. ◆ RImportField() [1/3]. ROOT::Experimental::RNTupleImporter::RImportField::RImportField ; (; ). default . ◆ ~RImportField(). ROOT::Experimental::RNTupleImporter::RImportField::~RImportField ; (; ). default . ◆ RImportField() [2/3]. ROOT::Experimental::RNTupleImporter::RImportField::RImportField ; (; const RImportField & ; other). delete . ◆ RImportField() [3/3]. ROOT::Experimental::RNTupleImporter::RImportField::RImportField ; (; RImportField && ; other). default . Member Function Documentation. ◆ operator=() [1/2]. RImportField & ROOT::Experimental::RNTupleImporter::RImportField::operator= ; (; const RImportField & ; other). delete . ◆ operator=() [2/2]. RImportField & ROOT::Experimental::RNTupleImporter::RImportField::operator= ; (; RImportField && ; other). default . Member Data Documentation. ◆ fField. RFieldBase* ROOT::Experimental::RNTupleImporter::RImportField::fField = null",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RImportField.html:106,Guid,Guide,106,doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RImportField.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RImportField.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleImporter::RImportGuard Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Experimental::RNTupleImporter::RImportGuard Struct Reference. ; When the schema is set up and the import started, it needs to be reset before the next Import() call can start. ; This RAII guard ensures that ResetSchema is called. ; Definition at line 160 of file RNTupleImporter.hxx. Public Member Functions;  RImportGuard (const RImportGuard &)=delete;  ;  RImportGuard (RImportGuard &&)=delete;  ;  RImportGuard (RNTupleImporter &importer);  ;  ~RImportGuard ();  ; RImportGuard & operator= (const RImportGuard &)=delete;  ; RImportGuard & operator= (RImportGuard &&)=delete;  . Public Attributes; RNTupleImporter & fImporter;  . Constructor & Destructor Documentation. ◆ RImportGuard() [1/3]. ROOT::Experimental::RNTupleImporter::RImportGuard::RImportGuard ; (; RNTupleImporter & ; importer). inlineexplicit . Definition at line 163 of file RNTupleImporter.hxx. ◆ RImportGuard() [2/3]. ROOT::Experimental::RNTupleImporter::RImportGuard::RImportGuard ; (; const RImportGuard & ; ). delete . ◆ RImportGuard() [3/3]. ROOT::Experimental::RNTupleImporter::RImportGuard::RImportGuard ; (; RImportGuard && ; ). delete . ◆ ~RImportGuard(). ROOT::Experimental::RNTupleImporter::RImportGuard::~RImportGuard ; (; ). inline . Definition at line 168 of file RNTupleImporter.hxx. Member Function Documentation. ◆ operator=() [1/2]. RImportGuard & ROOT::Experimental::RNTupleImporter::RImportGuard::operator= ; (; const RImportGuard & ; ). delete . ◆ operator=() [2/2]. RImportGuard & ROOT::Experimental::RNTupleImporter::RImportGuard::operator= ; (; RImportGuard && ; ). delete . Member Data Documentation. ◆ fImporter. RNTupleImporter& ROOT::Experimental::RNTupleImporter::RImportGuard::fImporter. Definition at line 161 of file RNTupleImporter.hxx. Colla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RImportGuard.html:106,Guid,Guide,106,doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RImportGuard.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RImportGuard.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleImporter::RImportLeafCountCollection Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Experimental::RNTupleImporter::RImportLeafCountCollection Struct Reference. ; Leaf count arrays require special treatment. ; They are translated into untyped collections of untyped records. This class does the bookkeeping of the sub-schema for these collections. ; Definition at line 173 of file RNTupleImporter.hxx. Public Member Functions;  RImportLeafCountCollection ()=default;  ;  RImportLeafCountCollection (const RImportLeafCountCollection &other)=delete;  ;  RImportLeafCountCollection (RImportLeafCountCollection &&other)=default;  ; RImportLeafCountCollection & operator= (const RImportLeafCountCollection &other)=delete;  ; RImportLeafCountCollection & operator= (RImportLeafCountCollection &&other)=default;  . Public Attributes; std::unique_ptr< Int_t > fCountVal;  The number of elements for the collection for a particular event. ;  ; std::vector< unsigned char > fFieldBuffer;  The collection field memory representation. Bound to the entry. ;  ; std::string fFieldName;  name of the untyped collection, e.g. ;  ; std::vector< size_t > fLeafBranchIndexes;  Points to the correspondings leaf branches in fImportBranches. ;  ; std::vector< std::unique_ptr< RFieldBase > > fLeafFields;  The leafs of the array as we encounter them traversing the TTree schema. ;  ; Int_t fMaxLength = 0;  Stores count leaf GetMaximum() to create large enough buffers for the array leafs. ;  ; RRecordField * fRecordField = nullptr;  Points to the item field of the untyped collection field in the model. ;  . Constructor & Destructor Documentation. ◆ RImportLeafCountCollection() [1/3]. ROOT::Experimental::RNTupleImporter::RImportLeafCountCollection::RImportLeafCountCollection ; (; ). default . ◆ RImportLeafCountCollection() [2/3]. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RImportLeafCountCollection.html:120,Guid,Guide,120,doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RImportLeafCountCollection.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RImportLeafCountCollection.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleImporter::RImportTransformation Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Experimental::RNTupleImporter::RImportTransformation Struct Referenceabstract. ; Base class to perform data transformations from TTree branches to RNTuple fields if necessary. ; Definition at line 146 of file RNTupleImporter.hxx. Public Member Functions;  RImportTransformation (std::size_t branchIdx, std::size_t fieldIdx);  ; virtual ~RImportTransformation ()=default;  ; virtual RResult< void > Transform (const RImportBranch &branch, RImportField &field)=0;  . Public Attributes; std::size_t fImportBranchIdx = 0;  ; std::size_t fImportFieldIdx = 0;  . Inheritance diagram for ROOT::Experimental::RNTupleImporter::RImportTransformation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RImportTransformation(). ROOT::Experimental::RNTupleImporter::RImportTransformation::RImportTransformation ; (; std::size_t ; branchIdx, . std::size_t ; fieldIdx . ). inline . Definition at line 150 of file RNTupleImporter.hxx. ◆ ~RImportTransformation(). virtual ROOT::Experimental::RNTupleImporter::RImportTransformation::~RImportTransformation ; (; ). virtualdefault . Member Function Documentation. ◆ Transform(). virtual RResult< void > ROOT::Experimental::RNTupleImporter::RImportTransformation::Transform ; (; const RImportBranch & ; branch, . RImportField & ; field . ). pure virtual . Implemented in ROOT::Experimental::RNTupleImporter::RCStringTransformation. Member Data Documentation. ◆ fImportBranchIdx. std::size_t ROOT::Experimental::RNTupleImporter::RImportTransformation::fImportBranchIdx = 0. Definition at line 147 of file RNTupleImporter.hxx. ◆ fImportFieldIdx. std::size_t ROOT::Experimental::RNTupleImporter::RImportTransformation::fI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RImportTransformation.html:115,Guid,Guide,115,doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RImportTransformation.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RImportTransformation.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleImporter::RProgressCallback Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Experimental::RNTupleImporter::RProgressCallback Class Referenceabstract. ; Used to report every ~100 MB (compressed), and at the end about the status of the import. ; Definition at line 109 of file RNTupleImporter.hxx. Public Member Functions; virtual ~RProgressCallback ()=default;  ; virtual void Call (std::uint64_t nbytesWritten, std::uint64_t neventsWritten)=0;  ; virtual void Finish (std::uint64_t nbytesWritten, std::uint64_t neventsWritten)=0;  ; void operator() (std::uint64_t nbytesWritten, std::uint64_t neventsWritten);  . #include <ROOT/RNTupleImporter.hxx>; Constructor & Destructor Documentation. ◆ ~RProgressCallback(). virtual ROOT::Experimental::RNTupleImporter::RProgressCallback::~RProgressCallback ; (; ). virtualdefault . Member Function Documentation. ◆ Call(). virtual void ROOT::Experimental::RNTupleImporter::RProgressCallback::Call ; (; std::uint64_t ; nbytesWritten, . std::uint64_t ; neventsWritten . ). pure virtual . ◆ Finish(). virtual void ROOT::Experimental::RNTupleImporter::RProgressCallback::Finish ; (; std::uint64_t ; nbytesWritten, . std::uint64_t ; neventsWritten . ). pure virtual . ◆ operator()(). void ROOT::Experimental::RNTupleImporter::RProgressCallback::operator() ; (; std::uint64_t ; nbytesWritten, . std::uint64_t ; neventsWritten . ). inline . Definition at line 112 of file RNTupleImporter.hxx. The documentation for this class was generated from the following file:; tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx. ROOTExperimentalRNTupleImporterRProgressCallback. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:11 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleImporter_1_1RProgressCallback.html:110,Guid,Guide,110,doc/master/classROOT_1_1Experimental_1_1RNTupleImporter_1_1RProgressCallback.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleImporter_1_1RProgressCallback.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleModel Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::RNTupleModel Class ReferenceNTuple-related classes. ; The RNTupleModel encapulates the schema of an ntuple. ; The ntuple model comprises a collection of hierarchically organized fields. From a model, ""entries"" can be extracted. For convenience, the model provides a default entry unless it is created as a ""bare model"". Models have a unique model identifier that faciliates checking whether entries are compatible with it (i.e.: have been extracted from that model).; A model is subject to a state transition during its lifetime: it starts in a building state, in which fields can be added and modified. Once the schema is finalized, the model gets frozen. Only frozen models can create entries. ; Definition at line 136 of file RNTupleModel.hxx. Classes; struct  NameWithDescription_t;  A wrapper over a field name and an optional description; used in AddField() and RUpdater::AddField() More...;  ; class  RUpdater;  A model is usually immutable after passing it to an RNTupleWriter. More...;  . Public Types; using FieldMappingFunc_t = std::function< std::string(const std::string &)>;  User provided function that describes the mapping of existing source fields to projected fields in terms of fully qualified field names. ;  . Public Member Functions;  RNTupleModel (const RNTupleModel &)=delete;  ;  ~RNTupleModel ()=default;  ; void AddField (std::unique_ptr< RFieldBase > field);  Adds a field whose type is not known at compile time. ;  ; RResult< void > AddProjectedField (std::unique_ptr< RFieldBase > field, FieldMappingFunc_t mapping);  Adds a top-level field based on existing fields. ;  ; std::unique_ptr< RNTupleModel > Clone () con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleModel.html:88,Guid,Guide,88,doc/master/classROOT_1_1Experimental_1_1RNTupleModel.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleModel.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleModel::RUpdater Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RNTupleModel::RUpdater Class Reference. ; A model is usually immutable after passing it to an RNTupleWriter. ; However, for the rare cases that require changing the model after the fact, RUpdater provides limited support for incremental updates, e.g. addition of new fields.; See RNTupleWriter::CreateModelUpdater() for an example. ; Definition at line 162 of file RNTupleModel.hxx. Public Member Functions;  RUpdater (RNTupleWriter &writer);  ;  ~RUpdater ();  ; void AddField (std::unique_ptr< RFieldBase > field);  ; RResult< void > AddProjectedField (std::unique_ptr< RFieldBase > field, FieldMappingFunc_t mapping);  ; void BeginUpdate ();  Begin a new set of alterations to the underlying model. ;  ; void CommitUpdate ();  Commit changes since the last call to BeginUpdate(). ;  ; template<typename T , typename... ArgsT> ; std::shared_ptr< T > MakeField (const NameWithDescription_t &fieldNameDesc, ArgsT &&...args);  . Private Attributes; std::uint64_t fNewModelId = 0;  The model ID after committing. ;  ; Internal::RNTupleModelChangeset fOpenChangeset;  ; RNTupleWriter & fWriter;  . #include <ROOT/RNTupleModel.hxx>; Constructor & Destructor Documentation. ◆ RUpdater(). ROOT::Experimental::RNTupleModel::RUpdater::RUpdater ; (; RNTupleWriter & ; writer). explicit . Definition at line 166 of file RNTupleModel.cxx. ◆ ~RUpdater(). ROOT::Experimental::RNTupleModel::RUpdater::~RUpdater ; (; ). inline . Definition at line 170 of file RNTupleModel.hxx. Member Function Documentation. ◆ AddField(). void ROOT::Experimental::RNTupleModel::RUpdater::AddField ; (; std::unique_ptr< RFieldBase > ; field). Definition at line 191 of file RNTupleModel.cxx. ◆ AddProjectedField(). ROOT::Experimental::RResult< void > ROOT::Experimental:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleModel_1_1RUpdater.html:98,Guid,Guide,98,doc/master/classROOT_1_1Experimental_1_1RNTupleModel_1_1RUpdater.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleModel_1_1RUpdater.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleOpenSpec Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Experimental::RNTupleOpenSpec Struct Reference. ; Used to specify the underlying RNTuples in RNTupleProcessor and RNTupleReader::OpenFriends() ; Definition at line 252 of file RNTupleUtil.hxx. Public Member Functions;  RNTupleOpenSpec (std::string_view n, std::string_view s);  . Public Attributes; std::string fNTupleName;  ; RNTupleReadOptions fOptions;  ; std::string fStorage;  . #include <ROOT/RNTupleUtil.hxx>; Constructor & Destructor Documentation. ◆ RNTupleOpenSpec(). ROOT::Experimental::RNTupleOpenSpec::RNTupleOpenSpec ; (; std::string_view ; n, . std::string_view ; s . ). inline . Definition at line 257 of file RNTupleUtil.hxx. Member Data Documentation. ◆ fNTupleName. std::string ROOT::Experimental::RNTupleOpenSpec::fNTupleName. Definition at line 253 of file RNTupleUtil.hxx. ◆ fOptions. RNTupleReadOptions ROOT::Experimental::RNTupleOpenSpec::fOptions. Definition at line 255 of file RNTupleUtil.hxx. ◆ fStorage. std::string ROOT::Experimental::RNTupleOpenSpec::fStorage. Definition at line 254 of file RNTupleUtil.hxx. Collaboration diagram for ROOT::Experimental::RNTupleOpenSpec:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; tree/ntuple/v7/inc/ROOT/RNTupleUtil.hxx. ROOTExperimentalRNTupleOpenSpec. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:11 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Experimental_1_1RNTupleOpenSpec.html:92,Guid,Guide,92,doc/master/structROOT_1_1Experimental_1_1RNTupleOpenSpec.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Experimental_1_1RNTupleOpenSpec.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleReadOptions Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RNTupleReadOptions Class ReferenceNTuple-related classes. ; Common user-tunable settings for reading ntuples. ; All page source classes need to support the common options. ; Definition at line 31 of file RNTupleReadOptions.hxx. Public Types; enum class  EClusterCache { kOff; , kOn; , kDefault = kOn; };  ; enum class  EImplicitMT { kOff; , kDefault; };  . Public Member Functions; unsigned int GetClusterBunchSize () const;  ; EClusterCache GetClusterCache () const;  ; EImplicitMT GetUseImplicitMT () const;  ; bool HasMetricsEnabled () const;  ; void SetClusterBunchSize (unsigned int val);  ; void SetClusterCache (EClusterCache val);  ; void SetMetricsEnabled (bool enable);  ; void SetUseImplicitMT (EImplicitMT val);  . Private Attributes; unsigned int fClusterBunchSize = 1;  ; EClusterCache fClusterCache = EClusterCache::kDefault;  ; bool fEnableMetrics = false;  If true, the RNTupleReader will track metrics straight from its construction, as if calling RNTupleReader::EnableMetrics() before having created the object. ;  ; EImplicitMT fUseImplicitMT = EImplicitMT::kDefault;  . #include <ROOT/RNTupleReadOptions.hxx>; Member Enumeration Documentation. ◆ EClusterCache. enum class ROOT::Experimental::RNTupleReadOptions::EClusterCache. strong . EnumeratorkOff ; kOn ; kDefault . Definition at line 33 of file RNTupleReadOptions.hxx. ◆ EImplicitMT. enum class ROOT::Experimental::RNTupleReadOptions::EImplicitMT. strong . EnumeratorkOff ; kDefault . Definition at line 38 of file RNTupleReadOptions.hxx. Member Function Documentation. ◆ GetClusterBunchSize(). unsigned int ROOT::Experimental::RNTupleReadOptions::GetClusterBunchSize ; (; ); const. inline . Definition at line 55 of file RNTupleReadOptions.hxx. ◆ Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleReadOptions.html:94,Guid,Guide,94,doc/master/classROOT_1_1Experimental_1_1RNTupleReadOptions.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleReadOptions.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleReader Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RNTupleReader Class ReferenceNTuple-related classes. ; An RNTuple that is used to read data from storage. ; An input ntuple provides data from storage as C++ objects. The ntuple model can be created from the data on storage or it can be imposed by the user. The latter case allows users to read into a specialized ntuple model that covers only a subset of the fields in the ntuple. The ntuple model is used when reading complete entries. Individual fields can be read as well by instantiating a tree view.; #include <ROOT/RNTupleReader.hxx>; using ROOT::Experimental::RNTupleReader;; ; #include <iostream>; ; auto ntuple = RNTupleReader::Open(""myNTuple"", ""some/file.root"");; std::cout << ""myNTuple has "" << ntuple->GetNEntries() << "" entries\n"";; RNTupleReader.hxx; ROOT::Experimental::RNTupleReaderAn RNTuple that is used to read data from storage.Definition RNTupleReader.hxx:71; ROOT::Experimental::RNTupleReader::Openstatic std::unique_ptr< RNTupleReader > Open(std::string_view ntupleName, std::string_view storage, const RNTupleReadOptions &options=RNTupleReadOptions())Open an RNTuple for reading.Definition RNTupleReader.cxx:94. Definition at line 71 of file RNTupleReader.hxx. Classes; class  RIterator;  . Public Member Functions;  ~RNTupleReader ();  ; RIterator begin ();  ; std::unique_ptr< RNTupleReader > Clone ();  ; void EnableMetrics ();  Enable performance measurements (decompression time, bytes read from storage, etc.) ;  ; RIterator end ();  ; RNTupleCollectionView GetCollectionView (DescriptorId_t fieldId);  ; RNTupleCollectionView GetCollectionView (std::string_view fieldName);  Raises an exception if: ;  ; const RNTupleDescriptor & GetDescripto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleReader.html:89,Guid,Guide,89,doc/master/classROOT_1_1Experimental_1_1RNTupleReader.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleReader.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Experimental::RNTupleReader::RIterator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RNTupleReader::RIterator Class Reference. . Definition at line 105 of file RNTupleReader.hxx. Public Types; using difference_type = NTupleSize_t;  ; using iterator = RIterator;  ; using iterator_category = std::forward_iterator_tag;  ; using pointer = NTupleSize_t *;  ; using reference = NTupleSize_t &;  ; using value_type = NTupleSize_t;  . Public Member Functions;  RIterator ()=default;  ;  RIterator (NTupleSize_t index);  ;  ~RIterator ()=default;  ; bool operator!= (const iterator &rh) const;  ; reference operator* ();  ; iterator & operator++ ();  ; iterator operator++ (int);  ; pointer operator-> ();  ; bool operator== (const iterator &rh) const;  . Private Attributes; NTupleSize_t fIndex = kInvalidNTupleIndex;  . #include <ROOT/RNTupleReader.hxx>; Member Typedef Documentation. ◆ difference_type. using ROOT::Experimental::RNTupleReader::RIterator::difference_type = NTupleSize_t. Definition at line 113 of file RNTupleReader.hxx. ◆ iterator. using ROOT::Experimental::RNTupleReader::RIterator::iterator = RIterator. Definition at line 110 of file RNTupleReader.hxx. ◆ iterator_category. using ROOT::Experimental::RNTupleReader::RIterator::iterator_category = std::forward_iterator_tag. Definition at line 111 of file RNTupleReader.hxx. ◆ pointer. using ROOT::Experimental::RNTupleReader::RIterator::pointer = NTupleSize_t *. Definition at line 114 of file RNTupleReader.hxx. ◆ reference. using ROOT::Experimental::RNTupleReader::RIterator::reference = NTupleSize_t &. Definition at line 115 of file RNTupleReader.hxx. ◆ value_type. using ROOT::Experimental::RNTupleReader::RIterator::value_type = NTupleSize_t. Definition at line 112 of file RNTupleReader.hxx. Constructor & Destructor Documentation. ◆,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleReader_1_1RIterator.html:100,Guid,Guide,100,doc/master/classROOT_1_1Experimental_1_1RNTupleReader_1_1RIterator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleReader_1_1RIterator.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleView< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members ; ROOT::Experimental::RNTupleView< T > Class Template ReferenceNTuple-related classes. ; template<typename T>; class ROOT::Experimental::RNTupleView< T >An RNTupleView for a known type. ; An RNTupleView that can be used when the type is unknown at compile time.; See RNTupleViewBase. ; Definition at line 206 of file RNTupleView.hxx. Public Member Functions;  RNTupleView (const RNTupleView &other)=delete;  ;  RNTupleView (RNTupleView &&other)=default;  ;  ~RNTupleView ()=default;  ; const T & operator() (NTupleSize_t globalIndex);  ; const T & operator() (RClusterIndex clusterIndex);  ; RNTupleView & operator= (const RNTupleView &other)=delete;  ; RNTupleView & operator= (RNTupleView &&other)=default;  ;  Public Member Functions inherited from ROOT::Experimental::RNTupleViewBase< T >;  RNTupleViewBase (const RNTupleViewBase &other)=delete;  ;  RNTupleViewBase (RNTupleViewBase &&other)=default;  ;  ~RNTupleViewBase ()=default;  ; void Bind (std::shared_ptr< T > objPtr);  ; void BindRawPtr (T *rawPtr);  ; void EmplaceNew ();  ; const RFieldBase & GetField () const;  ; RNTupleGlobalRange GetFieldRange () const;  ; const RFieldBase::RValue & GetValue () const;  ; RNTupleViewBase & operator= (const RNTupleViewBase &other)=delete;  ; RNTupleViewBase & operator= (RNTupleViewBase &&other)=default;  . Protected Member Functions;  RNTupleView (std::unique_ptr< RFieldBase > field, RNTupleGlobalRange range);  ;  RNTupleView (std::unique_ptr< RFieldBase > field, RNTupleGlobalRange range, std::shared_ptr< T > objPtr);  ;  RNTupleView (std::unique_ptr< RFieldBase > field, RNTupleGlobalRange range, T *rawPtr);  ;  Protected Member Functions inherited from ROOT::Experimental::RNTupleViewBase< T >;  RNTupleViewBase (std::unique_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleView.html:101,Guid,Guide,101,doc/master/classROOT_1_1Experimental_1_1RNTupleView.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleView.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleWriteOptions Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Attributes |; Protected Attributes |; List of all members ; ROOT::Experimental::RNTupleWriteOptions Class ReferenceNTuple-related classes. ; Common user-tunable settings for storing ntuples. ; All page sink classes need to support the common options. ; Definition at line 48 of file RNTupleWriteOptions.hxx. Public Types; enum class  EImplicitMT { kOff; , kDefault; };  . Public Member Functions; virtual ~RNTupleWriteOptions ()=default;  ; virtual std::unique_ptr< RNTupleWriteOptions > Clone () const;  ; std::size_t GetApproxZippedClusterSize () const;  ; int GetCompression () const;  ; bool GetEnablePageChecksums () const;  ; std::size_t GetInitialNElementsPerPage () const;  ; std::uint64_t GetMaxKeySize () const;  ; std::size_t GetMaxUnzippedClusterSize () const;  ; std::size_t GetMaxUnzippedPageSize () const;  ; std::size_t GetPageBufferBudget () const;  ; bool GetUseBufferedWrite () const;  ; bool GetUseDirectIO () const;  ; EImplicitMT GetUseImplicitMT () const;  ; std::size_t GetWriteBufferSize () const;  ; void SetApproxZippedClusterSize (std::size_t val);  ; void SetCompression (int val);  ; void SetCompression (RCompressionSetting::EAlgorithm::EValues algorithm, int compressionLevel);  ; void SetEnablePageChecksums (bool val);  Note that turning off page checksums will also turn off the same page merging optimization (see tuning.md) ;  ; void SetInitialNElementsPerPage (std::size_t val);  ; void SetMaxUnzippedClusterSize (std::size_t val);  ; void SetMaxUnzippedPageSize (std::size_t val);  ; void SetPageBufferBudget (std::size_t val);  ; void SetUseBufferedWrite (bool val);  ; void SetUseDirectIO (bool val);  ; void SetUseImplicitMT (EImplicitMT val);  ; void SetWriteBufferSize (std::size_t val);  . Static Public Attributes; static constex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleWriteOptions.html:95,Guid,Guide,95,doc/master/classROOT_1_1Experimental_1_1RNTupleWriteOptions.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleWriteOptions.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RNTupleWriter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::RNTupleWriter Class ReferenceNTuple-related classes. ; An RNTuple that gets filled with entries (data) and writes them to storage. ; An output ntuple can be filled with entries. The caller has to make sure that the data that gets filled into an ntuple is not modified for the time of the Fill() call. The fill call serializes the C++ object into the column format and writes data into the corresponding column page buffers. Writing of the buffers to storage is deferred and can be triggered by FlushCluster() or by destructing the writer. On I/O errors, an exception is thrown. ; Definition at line 60 of file RNTupleWriter.hxx. Public Member Functions;  RNTupleWriter (const RNTupleWriter &)=delete;  ;  ~RNTupleWriter ();  ; void CommitCluster (bool commitClusterGroup=false);  Ensure that the data from the so far seen Fill calls has been written to storage. ;  ; std::unique_ptr< REntry > CreateEntry ();  ; std::unique_ptr< RNTupleModel::RUpdater > CreateModelUpdater ();  Get a RNTupleModel::RUpdater that provides limited support for incremental updates to the underlying model, e.g. ;  ; void EnableMetrics ();  ; std::size_t Fill ();  The simplest user interface if the default entry that comes with the ntuple model is used. ;  ; std::size_t Fill (REntry &entry);  Multiple entries can have been instantiated from the ntuple model. ;  ; void FillNoFlush (REntry &entry, RNTupleFillStatus &status);  Fill an entry into this ntuple, but don't commit the cluster. ;  ; void FlushCluster ();  Flush so far filled entries to storage. ;  ; void FlushColumns ();  Flush column data, preparing for CommitCluster or to reduce memory usage",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleWriter.html:89,Guid,Guide,89,doc/master/classROOT_1_1Experimental_1_1RNTupleWriter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleWriter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RPad Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::RPad Class ReferenceGraphics » ROOT7 Graphics » ROOT7 Pad related classes. ; Graphic container for RDrawable-s. ; AuthorsAxel Naumann axel@.nosp@m.cern.nosp@m..ch Sergey Linev s.lin.nosp@m.ev@g.nosp@m.si.de ; Date2017-07-06 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition at line 25 of file RPad.hxx. Public Member Functions;  RPad (TRootIOCtor *);  Constructor must be used only for I/O. ;  ;  ~RPad () override;  Destructor to have a vtable. ;  ; const RCanvas * GetCanvas () const override;  Access to the top-most canvas (const version). ;  ; RCanvas * GetCanvas () override;  Access to the top-most canvas (non-const version). ;  ; RPadBase * GetParent ();  Access to the parent pad (non-const version). ;  ; const RPadBase * GetParent () const;  Access to the parent pad (const version). ;  ; const RPadPos & GetPos () const;  Get the position of the pad in parent (!) coordinates. ;  ; const RPadExtent & GetSize () const;  Get the size of the pad in parent (!) coordinates. ;  ; void SetPos (const RPadPos &p);  Set position. ;  ; void SetSize (const RPadExtent &sz);  Set the size of the pad in parent (!) coordinates. ;  ;  Public Member Functions inherited from ROOT::Experimental::RPadBase;  ~RPadBase () override;  ; template<class T , class... ARGS> ; std::shared_ptr< T > Add (ARGS... args);  Add drawable of specified class T. ;  ; std::shared_ptr< RFrame > AddFrame ();  Add a frame object for the pad. ;  ; std::shared_ptr< RPad > AddPad (const RPadPos &, const RPadExtent &);  Add subpad. ;  ; std::vector< std::vector< std::shared_ptr< RPad > > > Divid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPad.html:80,Guid,Guide,80,doc/master/classROOT_1_1Experimental_1_1RPad.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPad.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: ROOT::Experimental::RPadBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RPadBase Class ReferenceabstractGraphics » ROOT7 Graphics » ROOT7 Pad related classes. ; Base class for graphic containers for RDrawable-s. ; AuthorsAxel Naumann axel@.nosp@m.cern.nosp@m..ch Sergey Linev s.lin.nosp@m.ev@g.nosp@m.si.de ; Date2019-10-02 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition at line 37 of file RPadBase.hxx. Public Types; using Primitives_t = std::vector< std::shared_ptr< RDrawable > >;  ;  Public Types inherited from ROOT::Experimental::RDrawable; using Version_t = uint64_t;  . Public Member Functions;  ~RPadBase () override;  ; template<class T , class... ARGS> ; std::shared_ptr< T > Add (ARGS... args);  Add drawable of specified class T. ;  ; std::shared_ptr< RFrame > AddFrame ();  Add a frame object for the pad. ;  ; std::shared_ptr< RPad > AddPad (const RPadPos &, const RPadExtent &);  Add subpad. ;  ; std::vector< std::vector< std::shared_ptr< RPad > > > Divide (int nHoriz, int nVert, const RPadExtent &padding={});  Divide this pad into a grid of subpads with padding in between. ;  ; template<class T , class... ARGS> ; std::shared_ptr< T > Draw (ARGS... args);  Create drawable of specified class T. ;  ; template<class T , class... ARGS> ; auto Draw (const std::shared_ptr< T > &what, ARGS... args);  Add object to be painted. ;  ; std::shared_ptr< RDrawable > Draw (std::shared_ptr< RDrawable > &&drawable);  Add existing drawable instance to canvas. ;  ; const RPadBase * FindPadForPrimitiveWithDisplayId (const std::string &display_id) const;  Find subpad which contains primitive with given display id. ;  ; std::shar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPadBase.html:84,Guid,Guide,84,doc/master/classROOT_1_1Experimental_1_1RPadBase.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPadBase.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: ROOT::Experimental::RPadBaseDisplayItem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Experimental::RPadBaseDisplayItem Class ReferenceGraphics » ROOT7 Graphics » ROOT7 Pad related classes. ; class RPadBaseDisplayItem ; Display item for the RPadBase class, includes primitives, attributes and frame AuthorSergey Linev ; Date2017-05-31 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition at line 28 of file RPadDisplayItem.hxx. Public Types; using PadPrimitives_t = std::vector< std::unique_ptr< RDisplayItem > >;  . Public Member Functions;  RPadBaseDisplayItem ()=default;  ;  ~RPadBaseDisplayItem () override=default;  ; void Add (std::unique_ptr< RDisplayItem > &&item, std::shared_ptr< RStyle > &&style);  Add display item and style which should be used for it. ;  ; void SetAttributes (const RAttrMap *f);  ; void SetPadStyle (std::shared_ptr< RStyle > &&style);  Assign style for the pad. ;  ;  Public Member Functions inherited from ROOT::Experimental::RDisplayItem;  RDisplayItem ()=default;  ;  RDisplayItem (bool dummy);  ; virtual ~RDisplayItem ();  ; virtual void BuildFullId (const std::string &prefix);  Build full id, including prefix and object index. ;  ; unsigned GetIndex () const;  ; std::string GetObjectID () const;  ; void SetIndex (unsigned indx);  ; void SetObjectID (const std::string &id);  ; void SetObjectIDAsPtr (const void *ptr);  Assign id using arbitrary pointer value Typically drawable pointer should be used here. ;  ; void SetStyle (RStyle *style);  . Protected Attributes; const RAttrMap * fAttr {nullptr};  temporary pointer on attributes ;  ; PadPrimitives_t fPrimitives;  display items for all primitives in the pad ;  ; std::vector< std::shared_ptr< RStyle > > fStyles;  ! locked styles of t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPadBaseDisplayItem.html:95,Guid,Guide,95,doc/master/classROOT_1_1Experimental_1_1RPadBaseDisplayItem.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPadBaseDisplayItem.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: ROOT::Experimental::RPadExtent Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::RPadExtent Class ReferenceGraphics » ROOT7 Graphics » ROOT7 Pad related classes. ; An extent / size (horizontal and vertical) in a RPad. ; AuthorAxel Naumann axel@.nosp@m.cern.nosp@m..ch ; Date2017-07-07 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition at line 27 of file RPadExtent.hxx. Classes; struct  ScaleFactor;  A scale factor (separate factors for horizontal and vertical) for scaling a RPadLength. More...;  . Public Member Functions;  RPadExtent ()=default;  ;  RPadExtent (const RPadLength &horiz, const RPadLength &vert);  ; RPadLength & Horiz ();  ; const RPadLength & Horiz () const;  ; RPadExtent & operator*= (const ScaleFactor &scale);  Scale a horizontally and vertically. ;  ; RPadExtent & operator+= (const RPadExtent &rhs);  Add a RPadExtent. ;  ; RPadExtent & operator-= (const RPadExtent &rhs);  Subtract a RPadExtent. ;  ; RPadLength & Vert ();  ; const RPadLength & Vert () const;  . Private Attributes; RPadLength fHoriz;  horizontal part ;  ; RPadLength fVert;  vertical part ;  . Friends; RPadExtent operator+ (RPadExtent lhs, const RPadExtent &rhs);  Add two RPadExtents. ;  ; RPadExtent operator- (RPadExtent lhs, const RPadExtent &rhs);  Subtract two RPadExtents. ;  . #include <ROOT/RPadExtent.hxx>; Constructor & Destructor Documentation. ◆ RPadExtent() [1/2]. ROOT::Experimental::RPadExtent::RPadExtent ; (; ). default . ◆ RPadExtent() [2/2]. ROOT::Experimental::RPadExtent::RPadExtent ; (; const RPadLength & ; horiz, . const RPadLength & ; vert . ). inline . Definition at line 37 of file RPadExtent.hxx. Member Function Documentation. ◆ Horiz() [1/2]. RPadLength & ROOT::Experimental::RPadExtent::H",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPadExtent.html:86,Guid,Guide,86,doc/master/classROOT_1_1Experimental_1_1RPadExtent.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPadExtent.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: ROOT::Experimental::RPadPos Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::RPadPos Class ReferenceGraphics » ROOT7 Graphics » ROOT7 Pad related classes. ; A position (horizontal and vertical) in a RPad. ; AuthorAxel Naumann axel@.nosp@m.cern.nosp@m..ch ; Date2017-07-07 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition at line 28 of file RPadPos.hxx. Classes; class  ScaleFactor;  A scale factor (separate factors for horizontal and vertical) for scaling a RPadLength. More...;  . Public Member Functions;  RPadPos ()=default;  ;  RPadPos (const RPadExtent &rhs);  ;  RPadPos (const RPadLength &horiz, const RPadLength &vert);  ; RPadLength & Horiz ();  ; const RPadLength & Horiz () const;  ; RPadPos & operator*= (const ScaleFactor &scale);  Scale a horizontally and vertically. ;  ; RPadPos & operator+= (const RPadExtent &rhs);  Add a RPadPos. ;  ; RPadPos & operator-= (const RPadExtent &rhs);  Subtract a RPadPos. ;  ; RPadPos & operator= (const RPadExtent &rhs);  Add two RPadPoss. ;  ; RPadLength & Vert ();  ; const RPadLength & Vert () const;  . Private Attributes; RPadLength fHoriz;  horizontal part ;  ; RPadLength fVert;  vertical part ;  . Friends; RPadPos operator+ (RPadPos lhs, const RPadExtent &rhs);  Add two RPadPoss. ;  ; RPadPos operator- (RPadPos lhs, const RPadExtent &rhs);  Subtract two RPadPoss. ;  . #include <ROOT/RPadPos.hxx>; Constructor & Destructor Documentation. ◆ RPadPos() [1/3]. ROOT::Experimental::RPadPos::RPadPos ; (; ). default . ◆ RPadPos() [2/3]. ROOT::Experimental::RPadPos::RPadPos ; (; const RPadLength & ; horiz, . const RPadLength & ; vert . ). inline . Definition at line 38 of file RPadPos.hxx. ◆ RPadPos() [3/3]. ROOT::Experimental::RPadPos::RPadPos ; (; const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPadPos.html:83,Guid,Guide,83,doc/master/classROOT_1_1Experimental_1_1RPadPos.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPadPos.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: ROOT::Experimental::RResult< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RResult< T > Class Template ReferenceCore ROOT classes » Base ROOT classes. ; template<typename T>; class ROOT::Experimental::RResult< T >The class is used as a return type for operations that can fail; wraps a value of type T or an RError. ; The RResult<T> class and their related classes are used for call chains that can throw exceptions, such as I/O code paths. Throwing of the exception is deferred to allow for if (result) style error checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw.; A function returning an RResult might look like this:; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; R__FORWARD_RESULT#define R__FORWARD_RESULT(res)Short-hand to return an RResult<T> value from a subroutine to the calling stack frame.Definition RError.hxx:292; R__FAIL#define R__FAIL(msg)Short-hand to return an RResult<T> in an error state; the RError is implicitly converted into RResult...Definition RError.hxx:290; ROOT::Experimental::RResultThe class is used as a return type for operations that can fail; wraps a value of type T or an RError...Definition RError.hxx:194; Code using MyIOFunc might look like this:; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; resultOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RResult.html:97,Guid,Guide,97,doc/master/classROOT_1_1Experimental_1_1RResult.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RResult.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::RStyle Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RStyle Class ReferenceGraphics » ROOT7 Graphics » ROOT7 Pad related classes. ; A set of defaults for graphics attributes, e.g. ; for histogram fill color, line width, frame offsets etc. Uses CSS syntax. AuthorAxel Naumann axel@.nosp@m.cern.nosp@m..ch . Sergey Linev s.lin.nosp@m.ev@g.nosp@m.si.de ; Date2017-10-10 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition at line 32 of file RStyle.hxx. Classes; struct  Block_t;  . Public Member Functions; RAttrMap & AddBlock (const std::string &selector);  ; void Clear ();  Parse string with CSS code inside. ;  ; const RAttrMap::Value_t * Eval (const std::string &field, const RDrawable &drawable) const;  Evaluate attribute value for provided RDrawable. ;  ; const RAttrMap::Value_t * Eval (const std::string &field, const std::string &selector) const;  Evaluate attribute value for provided selector - exact match is expected. ;  ; bool ParseString (const std::string &css_code);  Parse string with CSS code inside All data will be append to existing style records. ;  . Static Public Member Functions; static std::shared_ptr< RStyle > Parse (const std::string &css_code);  Parse CSS code and returns std::shared_ptr<RStyle> when successful. ;  . Private Attributes; std::list< Block_t > fBlocks;  . #include <ROOT/RStyle.hxx>; Member Function Documentation. ◆ AddBlock(). RAttrMap & ROOT::Experimental::RStyle::AddBlock ; (; const std::string & ; selector). inline . Definition at line 50 of file RStyle.hxx. ◆ Clear(). void ROOT::Experimental::RStyle::Clear ; (; ). Parse string with CSS code inside. ; Definition at line 63 of file RStyle.cxx. ◆ Eval() [1/2]. const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RStyle.html:82,Guid,Guide,82,doc/master/classROOT_1_1Experimental_1_1RStyle.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RStyle.html,3,"['Clear', 'Feedback', 'Guid']","['Clear', 'Feedback', 'Guide']"
Usability,". ROOT: ROOT::Experimental::TTreeReaderFast Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::TTreeReaderFast Class Reference. . Definition at line 38 of file TTreeReaderFast.hxx. Classes; class  Iterator_t;  . Public Types; typedef Iterator_t iterator;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TTreeReaderFast ();  ;  TTreeReaderFast (const char *keyname, TDirectory *dir=nullptr);  ;  TTreeReaderFast (TTree *tree);  ;  ~TTreeReaderFast () override;  Tell all value readers that the tree reader does not exist anymore. ;  ; Iterator_t begin ();  Return an iterator to the 0th TTree entry. ;  ; Iterator_t end () const;  ; TTreeReader::EEntryStatus GetEntryStatus () const;  ; TTree * GetTree () const;  ; TClass * IsA () const override;  ; TTreeReader::EEntryStatus SetEntriesRange (Long64_t first, Long64_t last);  ; TTreeReader::EEntryStatus SetEntry (Long64_t);  Set an entry to be read. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1TTreeReaderFast.html:91,Guid,Guide,91,doc/master/classROOT_1_1Experimental_1_1TTreeReaderFast.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1TTreeReaderFast.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::XRooFit::xRooBrowser Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::XRooFit::xRooBrowser Class ReferenceRooFit » xRooFit. ; A version of the TBrowser that can be used to interact with RooFit models and datasets. . Also available under the ROOT::Experimental::RooBrowser alias.; To get started with the xRooBrowser, open any ROOT file containing a workspace and then create an instance of the xRooBrowser just like creating an instance of a TBrowser. A window will be displayed with a navigable tree structure on the left that lets you explore the content of the workspaces present in the loaded file. Note that additional files, including json workspace files, can be loaded through the Browser --> Open menu in the top left corner.; The context menu for each node (access by right clicking on the node) in the tree structure can be used to get more information about the node. In particular, the Draw command can be selected on many of the nodes that are part of a statistical model, which will visualize that part of the model in the browser window. A number of options are available for the Draw command, including (some options can be combined):. ""e"" : calculate and visualize propagated model uncertainty; ""auxratio"" : Draw a ratio auxiliary plot below the main plot; ""auxsignif"" : Draw a significance auxiliary plot below the main plot; ""pull"" : show panel of current parameter values, which can be dragged in order to change the values and visualize the effect on the model (very experimental feature). Once a node has been drawn, the styling of subsequent draws can be controlled through TStyle objects that will now appear in the objects folder in the workspace.; A model can be fit to a dataset from the workspace using the fitTo context menu command and specifyin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooBrowser.html:96,Guid,Guide,96,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooBrowser.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooBrowser.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::XRooFit::xRooFit::StoredFitResult Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; ROOT::Experimental::XRooFit::xRooFit::StoredFitResult Class Reference. . Definition at line 113 of file xRooFit.h. Public Member Functions;  StoredFitResult (const std::shared_ptr< RooFitResult > &_fr);  ;  StoredFitResult (RooFitResult *_fr);  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the nam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooFit_1_1StoredFitResult.html:109,Guid,Guide,109,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooFit_1_1StoredFitResult.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooFit_1_1StoredFitResult.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::XRooFit::xRooHypoSpace Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; ROOT::Experimental::XRooFit::xRooHypoSpace Class Reference. . Definition at line 27 of file xRooHypoSpace.h. Public Member Functions; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from ROOT::Experimental::XRooFit::xRooNLLVar::xRooHypoSpace;  xRooHypoSpace (const char *name="""", const char *title="""");  ;  xRooHypoSpace (const RooStats::HypoTestInverterResult *result);  ; bool AddModel (const xRooNode &pdf, const char *validity="""");  ; xRooHypoPoint & AddPoint (const char *coords="""");  ; xRooHypoPoint & AddPoint (double value);  ; int AddPoints (const char *parName, size_t nPoints, double low, double high);  ; RooArgList axes () const;  ; void Draw (Option_t *opt="""") override;  Default Draw method for all objects. ;  ; xValueWithError findlimit (const char *opt, double relUncert=std::numeric_limits< double >::infinity(), unsigned int maxTries=20);  ; std::shared_ptr< TGraphErrors > graph (const char *opt) const;  ; std::shared_ptr< TMultiGraph > graphs (const char *opt);  ; xValueWithError limit (const char *type=""cls"", double nSigma=std::numeric_limits< double >::quiet_NaN()) const;  ; std::map< std::string, xValueWithError > limits (const char *opt=""cls"", const std::vector< double > &nSigmas={0, 1, 2, -1, -2, std::numeric_limits< double >::quiet_NaN()}, double relUncert=std::numeric_limits< double >::infinity());  ; void LoadFits (const char *apath);  ; std::shared_ptr< RooArgSet > pars () const;  ; std::shared_ptr< xRooNode > pdf (const char *parValues="""") const;  ; std::shared_ptr< xRooNode > pdf (const RooAbsCollection &parValues) const;  ; RooArgList po",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooHypoSpace.html:98,Guid,Guide,98,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooHypoSpace.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooHypoSpace.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::XRooFit::xRooNLLVar::xRooHypoPoint Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; Static Public Attributes |; Private Member Functions |; List of all members ; ROOT::Experimental::XRooFit::xRooNLLVar::xRooHypoPoint Class Reference. . Definition at line 159 of file xRooNLLVar.h. Public Member Functions;  xRooHypoPoint (std::shared_ptr< RooStats::HypoTestResult > htr=nullptr, const RooAbsCollection *_coords=nullptr);  ; void addAltToys (int nToys=1, int seed=0, double target=std::numeric_limits< double >::quiet_NaN(), double target_nSigma=std::numeric_limits< double >::quiet_NaN());  ; void addCLsToys (int nToys=1, int seed=0, double target=std::numeric_limits< double >::quiet_NaN(), double target_nSigma=std::numeric_limits< double >::quiet_NaN());  ; void addNullToys (int nToys=1, int seed=0, double target=std::numeric_limits< double >::quiet_NaN(), double target_nSigma=std::numeric_limits< double >::quiet_NaN());  ; RooArgList alt_poi () const;  ; std::shared_ptr< xRooHypoPoint > asimov (bool readOnly=false);  ; std::shared_ptr< const RooFitResult > cfit_alt (bool readOnly=false);  ; std::shared_ptr< const RooFitResult > cfit_lbound (bool readOnly=false);  ; std::shared_ptr< const RooFitResult > cfit_null (bool readOnly=false);  ; std::pair< std::shared_ptr< RooAbsData >, std::shared_ptr< const RooAbsCollection > > data ();  ; void Draw (Option_t *opt="""") override;  Default Draw method for all objects. ;  ; double fAltVal ();  ; double fNullVal ();  ; const char * fPOIName ();  ; xRooHypoPoint generateAlt (int seed=0);  ; xRooHypoPoint generateNull (int seed=0);  ; xValueWithError getVal (const char *what);  ; std::shared_ptr< const RooFitResult > gfit ();  ; RooRealVar & mu_hat ();  ; xValueWithError pAlt_asymp (double nSigma=std::numeric_limits< double >::quiet_NaN());  ; xValueWithError pAlt_toys (double nSigma=std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNLLVar_1_1xRooHypoPoint.html:110,Guid,Guide,110,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNLLVar_1_1xRooHypoPoint.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNLLVar_1_1xRooHypoPoint.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::XRooFit::xRooNLLVar::xRooHypoSpace Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::XRooFit::xRooNLLVar::xRooHypoSpace Class Reference. . Definition at line 279 of file xRooNLLVar.h. Public Member Functions;  xRooHypoSpace (const char *name="""", const char *title="""");  ;  xRooHypoSpace (const RooStats::HypoTestInverterResult *result);  ; bool AddModel (const xRooNode &pdf, const char *validity="""");  ; xRooHypoPoint & AddPoint (const char *coords="""");  ; xRooHypoPoint & AddPoint (double value);  ; int AddPoints (const char *parName, size_t nPoints, double low, double high);  ; RooArgList axes () const;  ; void Draw (Option_t *opt="""") override;  Default Draw method for all objects. ;  ; xValueWithError findlimit (const char *opt, double relUncert=std::numeric_limits< double >::infinity(), unsigned int maxTries=20);  ; std::shared_ptr< TGraphErrors > graph (const char *opt) const;  ; std::shared_ptr< TMultiGraph > graphs (const char *opt);  ; xValueWithError limit (const char *type=""cls"", double nSigma=std::numeric_limits< double >::quiet_NaN()) const;  ; std::map< std::string, xValueWithError > limits (const char *opt=""cls"", const std::vector< double > &nSigmas={0, 1, 2, -1, -2, std::numeric_limits< double >::quiet_NaN()}, double relUncert=std::numeric_limits< double >::infinity());  ; void LoadFits (const char *apath);  ; std::shared_ptr< RooArgSet > pars () const;  ; std::shared_ptr< xRooNode > pdf (const char *parValues="""") const;  ; std::shared_ptr< xRooNode > pdf (const RooAbsCollection &parValues) const;  ; RooArgList poi ();  ; xRooHypoPoint & point (size_t i);  ; void Print (Option_t *opt="""") const override;  Print TNamed name and title. ;  ; RooStats::HypoTestInverterResult * result ();  ; int scan (const char *type, double nSig",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNLLVar_1_1xRooHypoSpace.html:110,Guid,Guide,110,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNLLVar_1_1xRooHypoSpace.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNLLVar_1_1xRooHypoSpace.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::XRooFit::xRooNode Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Static Public Attributes |; Private Member Functions |; Static Private Member Functions |; List of all members ; ROOT::Experimental::XRooFit::xRooNode Class ReferenceRooFit » xRooFit. ; The xRooNode class is designed to wrap over a TObject and provide functionality to aid with interacting with that object, particularly in the case where the object is a RooFit class instance. ; It is a smart pointer to the object, so you have access to all the methods of the object too.; xRooNode is designed to work in both python and C++, but examples below are given in python because that is imagined be the most common way to use the xRooFit API. Exploring workspaces. Exploring workspaces; An existing workspace file (either a ROOT file containing a RooWorkspace, or a json HS3 file) can be opened using xRooNode like this:; from ROOT.Experimental import XRooFit; w = XRooFit.xRooNode(""workspace.root"") # or can use workspace.json for HS3; ROOT::ExperimentalDefinition RDirectory.hxx:30; You can explore the content of the workspace somewhat like you would a file system: each node contains sub-nodes, which you can interact with to explore ever deeper. The most relevant methods for navigating the workspace and exploring the content are: ; Definition at line 52 of file xRooNode.h. Classes; class  InteractiveObject;  ; class  xRooNodeIterator;  . Public Member Functions;  xRooNode (const char *name="""", const std::shared_ptr< TObject > &comp=nullptr, const std::shared_ptr< xRooNode > &parent=nullptr);  ;  xRooNode (const char *type, const char *name, const char *title="""");  ;  ~xRooNode () override;  ; xRooNode Add (const xRooNode &child, Option_t *opt="""");  ; RooArgList argList () const;  ; std::shared_ptr< xRooNode > at (const std::stri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html:93,Guid,Guide,93,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Experimental::XRooFit::xRooNode::InteractiveObject Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; ROOT::Experimental::XRooFit::xRooNode::InteractiveObject Class Reference. . Definition at line 465 of file xRooNode.h. Public Member Functions; void Interactive_PLLPlot (TVirtualPad *pad, TObject *obj, Int_t x, Int_t y);  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TQObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single parameter. ;  ; template<typename... T> ; void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode_1_1InteractiveObject.html:112,Guid,Guide,112,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode_1_1InteractiveObject.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode_1_1InteractiveObject.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT::Fit Namespace ReferenceMath » MathCore » Fitting and Parameter Estimation. Namespace for the fitting classes. ; More... Namespaces; namespace  FitUtil;  namespace defining utility free functions using in Fit for evaluating the various fit method functions (chi2, likelihood, etc..) given the data and the model function ;  ; namespace  HFitInterface;  . Classes; class  AreaComparer;  ; class  BasicFCN;  BasicFCN class: base class for the objective functions used in the fits It has a reference to the data and the model function used in the fit. More...;  ; class  BinData;  Class describing the binned data sets : vectors of x coordinates, y values and optionally error on y values and error on coordinates The dimension of the coordinate is free There are 4 different options: More...;  ; class  Box;  ; class  BoxContainer;  ; class  Chi2FCN;  Chi2FCN class for binned fits using the least square methods. More...;  ; struct  DataOptions;  DataOptions : simple structure holding the options on how the data are filled. More...;  ; class  DataRange;  class describing the range in the coordinates it supports multiple range in a coordinate. More...;  ; class  FcnAdapter;  ; class  FitConfig;  Class describing the configuration of the fit, options and parameter settings using the ROOT::Fit::ParameterSettings class. More...;  ; class  FitData;  Base class for all the fit data types: Stores the coordinates and the DataOptions. More...;  ; class  FitResult;  class containing the result of the fit and all the related information (fitted parameter values, error, covariance matrix and minimizer result information) Contains a pointer also to the fitted (model) function, modified with the fit parameter values. More...;  ; class  Fitter;  Fitter class, entry point for performing all type of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Fit.html:69,Guid,Guide,69,doc/master/namespaceROOT_1_1Fit.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Fit.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT::Fit Namespace ReferenceMath » MathCore » Fitting and Parameter Estimation. Namespace for the fitting classes. ; More... Namespaces; namespace  FitUtil;  namespace defining utility free functions using in Fit for evaluating the various fit method functions (chi2, likelihood, etc..) given the data and the model function ;  ; namespace  HFitInterface;  . Classes; class  AreaComparer;  ; class  BasicFCN;  BasicFCN class: base class for the objective functions used in the fits It has a reference to the data and the model function used in the fit. More...;  ; class  BinData;  Class describing the binned data sets : vectors of x coordinates, y values and optionally error on y values and error on coordinates The dimension of the coordinate is free There are 4 different options: More...;  ; class  Box;  ; class  BoxContainer;  ; class  Chi2FCN;  Chi2FCN class for binned fits using the least square methods. More...;  ; struct  DataOptions;  DataOptions : simple structure holding the options on how the data are filled. More...;  ; class  DataRange;  class describing the range in the coordinates it supports multiple range in a coordinate. More...;  ; class  FcnAdapter;  ; class  FitConfig;  Class describing the configuration of the fit, options and parameter settings using the ROOT::Fit::ParameterSettings class. More...;  ; class  FitData;  Base class for all the fit data types: Stores the coordinates and the DataOptions. More...;  ; class  FitResult;  class containing the result of the fit and all the related information (fitted parameter values, error, covariance matrix and minimizer result information) Contains a pointer also to the fitted (model) function, modified with the fit parameter values. More...;  ; class  Fitter;  Fitter class, entry point for performing all type of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Fit.html:68,Guid,Guide,68,doc/v632/namespaceROOT_1_1Fit.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Fit.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Fit::AreaComparer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Fit::AreaComparer Class Reference. . Definition at line 118 of file SparseData.cxx. Public Member Functions;  AreaComparer (vector< double >::iterator iter);  ; bool IsThereArea ();  ; void operator() (double value);  . Private Attributes; vector< double >::iterator fIter;  ; double fLimit;  ; bool fThereIsArea;  . Constructor & Destructor Documentation. ◆ AreaComparer(). ROOT::Fit::AreaComparer::AreaComparer ; (; vector< double >::iterator ; iter). inline . Definition at line 121 of file SparseData.cxx. Member Function Documentation. ◆ IsThereArea(). bool ROOT::Fit::AreaComparer::IsThereArea ; (; ). inline . Definition at line 136 of file SparseData.cxx. ◆ operator()(). void ROOT::Fit::AreaComparer::operator() ; (; double ; value). inline . Definition at line 127 of file SparseData.cxx. Member Data Documentation. ◆ fIter. vector<double>::iterator ROOT::Fit::AreaComparer::fIter. private . Definition at line 140 of file SparseData.cxx. ◆ fLimit. double ROOT::Fit::AreaComparer::fLimit. private . Definition at line 141 of file SparseData.cxx. ◆ fThereIsArea. bool ROOT::Fit::AreaComparer::fThereIsArea. private . Definition at line 139 of file SparseData.cxx. math/mathcore/src/SparseData.cxx. ROOTFitAreaComparer. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:15 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1AreaComparer.html:79,Guid,Guide,79,doc/master/classROOT_1_1Fit_1_1AreaComparer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1AreaComparer.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; List of all members ; ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType > Class Template Reference. ; template<class DerivFunType, class ModelFunType, class DataType>; class ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >BasicFCN class: base class for the objective functions used in the fits It has a reference to the data and the model function used in the fit. ; It cannot be instantiated but constructed from the derived classes ; Definition at line 40 of file BasicFCN.h. Public Member Functions; virtual const DataType & Data () const;  access to const reference to the data ;  ; std::shared_ptr< DataType > DataPtr () const;  access to data pointer ;  ; virtual bool HasHessian () const;  flag to indicate if can compute Hessian ;  ; virtual const IModelFunction & ModelFunction () const;  access to const reference to the model function ;  ; std::shared_ptr< IModelFunction > ModelFunctionPtr () const;  access to function pointer ;  ;  Public Member Functions inherited from ROOT::Math::BasicFitMethodFunction< DerivFunType >;  BasicFitMethodFunction (int dim, int npoint);  ;  ~BasicFitMethodFunction () override;  Virtual Destructor (no operations) ;  ; virtual double DataElement (const double *x, unsigned int i, double *g=nullptr, double *h=nullptr, bool fullHessian=false) const=0;  method returning the data i-th contribution to the fit objective function For example the residual for the least square functions or the pdf element for the likelihood functions. ;  ; virtual bool G2 (const double *, double *) const;  Computes the Second derivatives. ;  ; virtual bool Hessian (const double *x, double *hess) const;  Computes the full Hessian. ;  ; bool IsAGradFCN ();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1BasicFCN.html:124,Guid,Guide,124,doc/master/classROOT_1_1Fit_1_1BasicFCN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1BasicFCN.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit::BinData Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Fit::BinData Class ReferenceMath » MathCore » Fitting and Parameter Estimation » Fit Data Classes. ; Class describing the binned data sets : vectors of x coordinates, y values and optionally error on y values and error on coordinates The dimension of the coordinate is free There are 4 different options: . only coordinates and values (for binned likelihood fits) : kNoError; coordinate, values and error on values (for normal least square fits) : kValueError; coordinate, values, error on values and coordinates (for effective least square fits) : kCoordError; coordinate, values, error on coordinates and asymmetric error on values : kAsymError. In addition there is the option to construct Bindata copying the data in (using the DataVector class) or using pointer to external data (DataWrapper) class. In general is found to be more efficient to copy the data. In case of really large data sets for limiting memory consumption then the other option can be used Specialized constructor exists for data up to 3 dimensions.; When the data are copying in the number of points can be set later (or re-set) using Initialize and the data are inserted one by one using the Add method. It is mandatory to set the size before using the Add method. ; Definition at line 52 of file BinData.h. Public Types; enum  ErrorType { kNoError; , kValueError; , kCoordError; , kAsymError; };  . Public Member Functions;  BinData (const BinData &rhs);  copy constructors ;  ;  BinData (const DataOptions &opt, const DataRange &range, unsigned int maxpoints=0, unsigned int dim=1, ErrorType err=kValueError);  constructor from options and range default is 1D and value errors ;  ;  BinData (const DataOptions &opt, unsigned int maxpoints=0, unsigned i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1BinData.html:74,Guid,Guide,74,doc/master/classROOT_1_1Fit_1_1BinData.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1BinData.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit::Box Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Fit::Box Class Reference. . Definition at line 36 of file SparseData.cxx. Public Member Functions;  Box (const vector< double > &min, const vector< double > &max, const double value=0.0, const double error=1.0);  ; void AddVal (const double value);  ; double GetError () const;  ; const vector< double > & GetMax () const;  ; const vector< double > & GetMin () const;  ; double GetVal () const;  ; bool operator== (const Box &b);  . Private Attributes; double fError;  ; vector< double > fMax;  ; vector< double > fMin;  ; double fVal;  . Friends; class BoxContainer;  ; ostream & operator<< (ostream &os, const Box &b);  . Constructor & Destructor Documentation. ◆ Box(). ROOT::Fit::Box::Box ; (; const vector< double > & ; min, . const vector< double > & ; max, . const double ; value = 0.0, . const double ; error = 1.0 . ). inline . Definition at line 41 of file SparseData.cxx. Member Function Documentation. ◆ AddVal(). void ROOT::Fit::Box::AddVal ; (; const double ; value). inline . Definition at line 62 of file SparseData.cxx. ◆ GetError(). double ROOT::Fit::Box::GetError ; (; ); const. inline . Definition at line 59 of file SparseData.cxx. ◆ GetMax(). const vector< double > & ROOT::Fit::Box::GetMax ; (; ); const. inline . Definition at line 55 of file SparseData.cxx. ◆ GetMin(). const vector< double > & ROOT::Fit::Box::GetMin ; (; ); const. inline . Definition at line 53 of file SparseData.cxx. ◆ GetVal(). double ROOT::Fit::Box::GetVal ; (; ); const. inline . Definition at line 57 of file SparseData.cxx. ◆ operator==(). bool ROOT::Fit::Box::operator== ; (; const Box & ; b). inline . Definition at line 48 of file SparseData.cxx. Friends And Related Symbol Documentation. ◆ BoxContainer. friend class BoxContainer. friend . Definition at line 64 of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Box.html:70,Guid,Guide,70,doc/master/classROOT_1_1Fit_1_1Box.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Box.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit::BoxContainer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Fit::BoxContainer Class Reference. . Definition at line 77 of file SparseData.cxx. Public Member Functions;  BoxContainer (const Box &b);  ; bool operator() (const Box &b1);  ; bool operator() (const Box &b1, const Box &b2);  . Private Attributes; const Box & fBox;  . Constructor & Destructor Documentation. ◆ BoxContainer(). ROOT::Fit::BoxContainer::BoxContainer ; (; const Box & ; b). inline . Definition at line 84 of file SparseData.cxx. Member Function Documentation. ◆ operator()() [1/2]. bool ROOT::Fit::BoxContainer::operator() ; (; const Box & ; b1). inline . Definition at line 86 of file SparseData.cxx. ◆ operator()() [2/2]. bool ROOT::Fit::BoxContainer::operator() ; (; const Box & ; b1, . const Box & ; b2 . ). inline . Definition at line 90 of file SparseData.cxx. Member Data Documentation. ◆ fBox. const Box& ROOT::Fit::BoxContainer::fBox. private . Definition at line 80 of file SparseData.cxx. math/mathcore/src/SparseData.cxx. ROOTFitBoxContainer. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:15 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1BoxContainer.html:79,Guid,Guide,79,doc/master/classROOT_1_1Fit_1_1BoxContainer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1BoxContainer.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit::Chi2FCN< DerivFunType, ModelFunType > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Fit::Chi2FCN< DerivFunType, ModelFunType > Class Template ReferenceMath » MathCore » Fitting and Parameter Estimation » Fit Method Classes. ; template<class DerivFunType, class ModelFunType = ROOT::Math::IParamMultiFunction>; class ROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >Chi2FCN class for binned fits using the least square methods. ; Definition at line 46 of file Chi2FCN.h. Public Types; typedef BasicFCN< DerivFunType, ModelFunType, BinData > BaseFCN;  ; typedef BaseObjFunction::BaseFunction BaseFunction;  ; typedef ::ROOT::Math::BasicFitMethodFunction< DerivFunType > BaseObjFunction;  ; typedef ::ROOT::Math::IParamMultiFunctionTempl< T > IModelFunction;  ; typedef ModelFunType::BackendType T;  ; typedef BaseObjFunction::Type_t Type_t;  ;  Public Types inherited from ROOT::Math::BasicFitMethodFunction< DerivFunType >; typedef FunctionType::BaseFunc BaseFunction;  ; enum  Type_t ;  enumeration specifying the possible fit method types More...;  . Public Member Functions;  Chi2FCN (const BinData &data, const IModelFunction &func, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSequential);  Same Constructor from data set (binned ) and model function cloning the function and the data. ;  ;  Chi2FCN (const Chi2FCN &f);  Copy constructor. ;  ;  Chi2FCN (const std::shared_ptr< BinData > &data, const std::shared_ptr< IModelFunction > &func, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSequential);  Constructor from data set (binned ) and model function. ;  ; virtual ~Chi2FCN ();  Destructor (no operations) ;  ; virtual BaseFunction * Clone () const;  ; virtual double DataElement ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Chi2FCN.html:113,Guid,Guide,113,doc/master/classROOT_1_1Fit_1_1Chi2FCN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Chi2FCN.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit::DataOptions Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Fit::DataOptions Struct ReferenceMath » MathCore » Fitting and Parameter Estimation » Fit Data Classes. ; DataOptions : simple structure holding the options on how the data are filled. ; Definition at line 28 of file DataOptions.h. Public Member Functions;  DataOptions ();  Default constructor: use the default options. ;  . Public Attributes; bool fAsymErrors;  use asymmetric errors in the value when available, selecting them according to the on sign of residual (default is true) ;  ; bool fBinVolume;  normalize data by the bin volume (it is used in the Poisson likelihood fits) ;  ; bool fCoordErrors;  use errors on the x coordinates when available (default is true) ;  ; bool fErrors1;  use all errors equal to 1, i.e. fit without errors (default is false) ;  ; bool fExpErrors;  use expected errors from the function and not from the data ;  ; bool fIntegral;  use integral of bin content instead of bin center (default is false) ;  ; bool fNormBinVolume;  normalize data by a normalized the bin volume (bin volume divided by a reference value) ;  ; bool fUseEmpty;  use empty bins (default is false) with a fixed error of 1 ;  ; bool fUseRange;  use the function range when creating the fit data (default is false) ;  . #include <Fit/DataOptions.h>; Constructor & Destructor Documentation. ◆ DataOptions(). ROOT::Fit::DataOptions::DataOptions ; (; ). inline . Default constructor: use the default options. ; Definition at line 34 of file DataOptions.h. Member Data Documentation. ◆ fAsymErrors. bool ROOT::Fit::DataOptions::fAsymErrors. use asymmetric errors in the value when available, selecting them according to the on sign of residual (default is true) ; Definition at line 55 of file DataOptions.h. ◆ fBinVolume. bool ROOT::Fit::DataOptions::fBinVolume. n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Fit_1_1DataOptions.html:79,Guid,Guide,79,doc/master/structROOT_1_1Fit_1_1DataOptions.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Fit_1_1DataOptions.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: ROOT::Fit::DataRange Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Fit::DataRange Class ReferenceMath » MathCore » Fitting and Parameter Estimation » Fit Data Classes. ; class describing the range in the coordinates it supports multiple range in a coordinate. ; The range dimension is the dimension of the coordinate, its size is the number of interval for each coordinate. Default range is -inf, inf Range can be modified with the add range method ; Definition at line 35 of file DataRange.h. Public Types; typedef std::vector< RangeSet > RangeIntervals;  ; typedef std::vector< std::pair< double, double > > RangeSet;  . Public Member Functions;  DataRange (double xmin, double xmax);  construct a range for [xmin, xmax] ;  ;  DataRange (double xmin, double xmax, double ymin, double ymax);  construct a range for [xmin, xmax] , [ymin, ymax] ;  ;  DataRange (double xmin, double xmax, double ymin, double ymax, double zmin, double zmax);  construct a range for [xmin, xmax] , [ymin, ymax] , [zmin, zmax] ;  ;  DataRange (unsigned int dim=1);  Default constructor (infinite range) ;  ;  ~DataRange ();  Destructor (no operations) ;  ; void AddRange (double xmin, double xmax);  add a range [xmin,xmax] for the first coordinate icoord ;  ; void AddRange (double xmin, double xmax, double ymin, double ymax);  add a range [xmin,xmax] for the first and [ymin,ymax] for the second coordinate ;  ; void AddRange (double xmin, double xmax, double ymin, double ymax, double zmin, double zmax);  add a range [xmin,xmax] for the first and [ymin,ymax] for the second coordinate and [zmin,zmax] for the third coordinate ;  ; void AddRange (unsigned int icoord, double xmin, double xmax);  add a range [xmin,xmax] for the new coordinate icoord Adding a range does not d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1DataRange.html:76,Guid,Guide,76,doc/master/classROOT_1_1Fit_1_1DataRange.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1DataRange.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit::FcnAdapter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Fit::FcnAdapter Class Reference. . Definition at line 27 of file FcnAdapter.h. Public Member Functions;  FcnAdapter (void(*fcn)(int &, double *, double &, double *, int), int dim=0);  ;  ~FcnAdapter () override;  ; ROOT::Math::IMultiGenFunction * Clone () const override;  Clone a function. ;  ; unsigned int NDim () const override;  Retrieve the dimension of the function. ;  ; void SetDimension (int dim);  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; virtual ~IBaseFunctionMultiDimTempl ()=default;  ; virtual bool HasGradient () const;  ; T operator() (const T *x) const;  Evaluate the function at a point x[]. ;  . Private Member Functions; double DoEval (const double *x) const override;  . Private Attributes; unsigned int fDim;  ; void(* fFCN )(int &, double *, double &, double *, int);  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . #include <Fit/FcnAdapter.h>. Inheritance diagram for ROOT::Fit::FcnAdapter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ FcnAdapter(). ROOT::Fit::FcnAdapter::FcnAdapter ; (; void(*)(int &, double *, double &, double *, int) ; fcn, . int ; dim = 0 . ). inline . Definition at line 31 of file FcnAdapter.h. ◆ ~FcnAdapter(). ROOT::Fit::FcnAdapter::~FcnAdapter ; (; ). inlineoverride . Definition at line 36 of file FcnAdapter.h. Member Function Documentation. ◆ Clone(). ROOT::Math::IMultiGenFunction * ROOT::Fit::FcnAdapter::Clone ; (; ); const. inlineoverridevirtual . Clone a function. ; Each derived class must implement their",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FcnAdapter.html:77,Guid,Guide,77,doc/master/classROOT_1_1Fit_1_1FcnAdapter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FcnAdapter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit::FitConfig Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Fit::FitConfig Class ReferenceMath » MathCore » Fitting and Parameter Estimation » User Fitting classes. ; Class describing the configuration of the fit, options and parameter settings using the ROOT::Fit::ParameterSettings class. ; Definition at line 47 of file FitConfig.h. Public Member Functions;  FitConfig (const FitConfig &rhs);  ;  FitConfig (unsigned int npar=0);  Default constructor. ;  ;  ~FitConfig ();  Destructor. ;  ; ROOT::Math::Minimizer * CreateMinimizer ();  create a new minimizer according to chosen configuration ;  ; template<class T > ; void CreateParamsSettings (const ROOT::Math::IParamMultiFunctionTempl< T > &func);  set the parameter settings from a model function. ;  ; const std::string & MinimizerAlgoType () const;  return type of minimizer algorithms ;  ; std::string MinimizerName () const;  return Minimizer full name (type / algorithm) ;  ; ROOT::Math::MinimizerOptions & MinimizerOptions ();  access to the minimizer control parameter (non const method) ;  ; const std::string & MinimizerType () const;  return type of minimizer package ;  ; bool MinosErrors () const;  do minos errors analysis on the parameters ;  ; const std::vector< unsigned int > & MinosParams () const;  return vector of parameter indices for which the Minos Error will be computed ;  ; bool NormalizeErrors () const;  flag to check if resulting errors are be normalized according to chi2/ndf ;  ; unsigned int NPar () const;  number of parameters settings ;  ; FitConfig & operator= (const FitConfig &rhs);  ; bool ParabErrors () const;  do analysis for parabolic errors ;  ; std::vector< ROOT::Fit::ParameterSettings > & ParamsSettings ();  get the vector of parameter settings (non-const method) ;  ; const std::vector< ROOT:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitConfig.html:76,Guid,Guide,76,doc/master/classROOT_1_1Fit_1_1FitConfig.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitConfig.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit::FitData Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Private Attributes |; List of all members ; ROOT::Fit::FitData Class ReferenceMath » MathCore » Fitting and Parameter Estimation » Fit Data Classes. ; Base class for all the fit data types: Stores the coordinates and the DataOptions. ; class holding the fit data points. It is template on the type of point, which can be for example a binned or unbinned point. It is basically a wrapper on an std::vector ; Definition at line 56 of file FitData.h. Public Member Functions;  FitData (const DataOptions &opt, const DataRange &range, unsigned int maxpoints=0, unsigned int dim=1);  construct passing options and data range ;  ;  FitData (const DataOptions &opt, unsigned int maxpoints=0, unsigned int dim=1);  construct passing options and default data range ;  ;  FitData (const DataRange &range, unsigned int maxpoints, const double *dataX);  constructor for multi-dim external data and a range (data are copied inside according to the range) Uses as argument an iterator of a list (or vector) containing the const double * of the data An example could be the std::vector<const double *>::begin ;  ;  FitData (const DataRange &range, unsigned int maxpoints, const double *dataX, const double *dataY);  constructor for multi-dim external data and a range (data are copied inside according to the range) Uses as argument an iterator of a list (or vector) containing the const double * of the data An example could be the std::vector<const double *>::begin ;  ;  FitData (const DataRange &range, unsigned int maxpoints, const double *dataX, const double *dataY, const double *dataZ);  constructor for multi-dim external data and a range (data are copied inside according to the range) Uses as argument an iterator of a list (or vector) con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitData.html:74,Guid,Guide,74,doc/master/classROOT_1_1Fit_1_1FitData.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitData.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit::FitResult Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; ROOT::Fit::FitResult Class ReferenceMath » MathCore » Fitting and Parameter Estimation » User Fitting classes. ; class containing the result of the fit and all the related information (fitted parameter values, error, covariance matrix and minimizer result information) Contains a pointer also to the fitted (model) function, modified with the fit parameter values. ; When the fit is valid, it is constructed from a Minimizer and a model function pointer ; Definition at line 47 of file FitResult.h. Public Types; typedef ROOT::Math::IParamMultiFunction IModelFunction;  . Public Member Functions;  FitResult ();  Default constructor for an empty (non valid) fit result. ;  ;  FitResult (const FitConfig &fconfig);  Constructor from a fit-config for a dummy fit (e.g. ;  ; virtual ~FitResult ();  Destructor. ;  ; double Chi2 () const;  Return the Chi2 value after fitting In case of unbinned fits (or not defined one, see the documentation of Fitter::FitFCN) return -1 In case of binned likelihood fits (Poisson Likelihood) return the 2 * negative log-likelihood ratio using the definition of Baker-Cousins. ;  ; bool Contour (unsigned int ipar, unsigned int jpar, unsigned int &npoints, double *pntsx, double *pntsy, double confLevel=0.683);  create contour of two parameters around the minimum pass as option confidence level: default is a value of 0.683 ;  ; double Correlation (unsigned int i, unsigned int j) const;  retrieve correlation elements ;  ; double CovMatrix (unsigned int i, unsigned int j) const;  retrieve covariance matrix element ;  ; int CovMatrixStatus () const;  covariance matrix status code using Minuit convention : =0 not calculated, =1 approximated, =2 made pos def , =3 accurate ;  ; double E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitResult.html:76,Guid,Guide,76,doc/master/classROOT_1_1Fit_1_1FitResult.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitResult.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit::FitUtil Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs |; Functions ; ROOT::Fit::FitUtil Namespace ReferenceMath » MathCore » Fitting and Parameter Estimation » User Fitting classes. namespace defining utility free functions using in Fit for evaluating the various fit method functions (chi2, likelihood, etc..) given the data and the model function ; More... Classes; struct  Evaluate;  ; class  IntegralEvaluator;  ; class  LikelihoodAux;  ; class  LikelihoodAux< double >;  ; struct  ParamDerivFunc;  ; class  SimpleGradientCalculator;  . Typedefs; typedef ROOT::Math::IParamMultiGradFunction IGradModelFunction;  ; template<class T > ; using IGradModelFunctionTempl = ROOT::Math::IParamMultiGradFunctionTempl< T >;  ; typedef ROOT::Math::IParamMultiFunction IModelFunction;  ; template<class T > ; using IModelFunctionTempl = ROOT::Math::IParamMultiFunctionTempl< T >;  . Functions; template<class GFunc > ; void CalculateGradientIntegral (const GFunc &gfunc, const double *x1, const double *x2, const double *p, double *g);  ; bool CheckInfNaNValue (double &rval);  ; double CorrectValue (double rval);  ; double EvaluateChi2 (const IModelFunction &func, const BinData &data, const double *p, unsigned int &nPoints, ::ROOT::EExecutionPolicy executionPolicy, unsigned nChunks=0);  Chi2 Functions. ;  ; double EvaluateChi2Effective (const IModelFunction &func, const BinData &data, const double *x, unsigned int &nPoints);  evaluate the effective Chi2 given a model function and the data at the point x. ;  ; void EvaluateChi2Gradient (const IModelFunction &func, const BinData &data, const double *p, double *grad, unsigned int &nPoints, ::ROOT::EExecutionPolicy executionPolicy=::ROOT::EExecutionPolicy::kSequential, unsigned nChunks=0);  evaluate the Chi2 gradient given a model function and the data at the point p. ;  ; double EvaluateChi2Residual (const IModelFunction &func, const BinData &data, c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Fit_1_1FitUtil.html:78,Guid,Guide,78,doc/master/namespaceROOT_1_1Fit_1_1FitUtil.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Fit_1_1FitUtil.html,2,"['Guid', 'Simpl']","['Guide', 'SimpleGradientCalculator']"
Usability,". ROOT: ROOT::Fit::Fitter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Fit::Fitter Class ReferenceMath » MathCore » Fitting and Parameter Estimation » User Fitting classes. ; Fitter class, entry point for performing all type of fits. ; Fits are performed using the generic ROOT::Fit::Fitter::Fit method. The inputs are the data points and a model function (using a ROOT::Math::IParamFunction) The result of the fit is returned and kept internally in the ROOT::Fit::FitResult class. The configuration of the fit (parameters, options, etc...) are specified in the ROOT::Math::FitConfig class. After fitting the config of the fit will be modified to have the new values the resulting parameter of the fit with step sizes equal to the errors. FitConfig can be preserved with initial parameters by calling FitConfig.SetUpdateAfterFit(false); ; Definition at line 77 of file Fitter.h. Public Types; typedef ROOT::Math::IMultiGenFunction BaseFunc;  ; typedef ROOT::Math::IMultiGradFunction BaseGradFunc;  ; typedef ROOT::Math::IParamGradFunction IGradModel1DFunction;  ; typedef ROOT::Math::IParamMultiGradFunction IGradModelFunction;  ; typedef ROOT::Math::IParamMultiGradFunction IGradModelFunction_v;  ; typedef ROOT::Math::IParamFunction IModel1DFunction;  ; typedef ROOT::Math::IParamMultiFunction IModelFunction;  ; typedef ROOT::Math::IParamMultiFunction IModelFunction_v;  ; template<class T > ; using IModelFunctionTempl = ROOT::Math::IParamMultiFunctionTempl< T >;  ; typedef void(* MinuitFCN_t) (int &npar, double *gin, double &f, double *u, int flag);  fit using user provided FCN with Minuit-like interface If npar = 0 it is assumed that the parameters are specified in the parameter settings created before For the options same consideration as in the previous method ;  . Public Member Function",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html:73,Guid,Guide,73,doc/master/classROOT_1_1Fit_1_1Fitter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit::HFitInterface Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; ROOT::Fit::HFitInterface Namespace Reference. Functions; bool AdjustError (const DataOptions &option, double &error, double value=1);  ; void ExamineRange (const TAxis *axis, std::pair< double, double > range, int &hxfirst, int &hxlast);  ; bool IsPointOutOfRange (const TF1 *func, const double *x);  . Function Documentation. ◆ AdjustError(). bool ROOT::Fit::HFitInterface::AdjustError ; (; const DataOptions & ; option, . double & ; error, . double ; value = 1 . ). Definition at line 60 of file HFitInterface.cxx. ◆ ExamineRange(). void ROOT::Fit::HFitInterface::ExamineRange ; (; const TAxis * ; axis, . std::pair< double, double > ; range, . int & ; hxfirst, . int & ; hxlast . ). Definition at line 79 of file HFitInterface.cxx. ◆ IsPointOutOfRange(). bool ROOT::Fit::HFitInterface::IsPointOutOfRange ; (; const TF1 * ; func, . const double * ; x . ). Definition at line 54 of file HFitInterface.cxx. ROOTFitHFitInterface. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Fit_1_1HFitInterface.html:84,Guid,Guide,84,doc/master/namespaceROOT_1_1Fit_1_1HFitInterface.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Fit_1_1HFitInterface.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType > Class Template ReferenceMath » MathCore » Fitting and Parameter Estimation » Fit Method Classes. ; template<class DerivFunType, class ModelFunType = ROOT::Math::IParamMultiFunction>; class ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >LogLikelihoodFCN class for likelihood fits. ; it is template to distinguish gradient and non-gradient case ; Definition at line 40 of file LogLikelihoodFCN.h. Public Types; typedef BasicFCN< DerivFunType, ModelFunType, UnBinData > BaseFCN;  ; typedef BaseObjFunction::BaseFunction BaseFunction;  ; typedef ::ROOT::Math::BasicFitMethodFunction< DerivFunType > BaseObjFunction;  ; typedef ::ROOT::Math::IParamMultiFunctionTempl< T > IModelFunction;  ; typedef ModelFunType::BackendType T;  ; typedef BaseObjFunction::Type_t Type_t;  ;  Public Types inherited from ROOT::Math::BasicFitMethodFunction< DerivFunType >; typedef FunctionType::BaseFunc BaseFunction;  ; enum  Type_t ;  enumeration specifying the possible fit method types More...;  . Public Member Functions;  LogLikelihoodFCN (const LogLikelihoodFCN &f);  Copy constructor. ;  ;  LogLikelihoodFCN (const std::shared_ptr< UnBinData > &data, const std::shared_ptr< IModelFunction > &func, int weight=0, bool extended=false, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSequential);  Constructor from unbin data set and model function (pdf) ;  ;  LogLikelihoodFCN (const UnBinData &data, const IModelFunction &func, int weight=0, bool extended=false, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSequential);  Constructor from unbin data set and model function (pdf) fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN.html:122,Guid,Guide,122,doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Fit::ObjFuncTrait< Func > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Fit::ObjFuncTrait< Func > Struct Template Reference. ; template<class Func>; struct ROOT::Fit::ObjFuncTrait< Func >; Definition at line 674 of file Fitter.cxx. Static Public Member Functions; static bool IsGrad ();  ; static unsigned int NCalls (const Func &);  ; static int Type (const Func &);  . Member Function Documentation. ◆ IsGrad(). template<class Func > . static bool ROOT::Fit::ObjFuncTrait< Func >::IsGrad ; (; ). inlinestatic . Definition at line 677 of file Fitter.cxx. ◆ NCalls(). template<class Func > . static unsigned int ROOT::Fit::ObjFuncTrait< Func >::NCalls ; (; const Func & ; ). inlinestatic . Definition at line 675 of file Fitter.cxx. ◆ Type(). template<class Func > . static int ROOT::Fit::ObjFuncTrait< Func >::Type ; (; const Func & ; ). inlinestatic . Definition at line 676 of file Fitter.cxx. The documentation for this struct was generated from the following file:; math/mathcore/src/Fitter.cxx. ROOTFitObjFuncTrait. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:16 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Fit_1_1ObjFuncTrait.html:97,Guid,Guide,97,doc/master/structROOT_1_1Fit_1_1ObjFuncTrait.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Fit_1_1ObjFuncTrait.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::Fit::ObjFuncTrait< ROOT::Math::FitMethodFunction > Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Fit::ObjFuncTrait< ROOT::Math::FitMethodFunction > Struct Reference. . Definition at line 680 of file Fitter.cxx. Static Public Member Functions; static bool IsGrad ();  ; static unsigned int NCalls (const ROOT::Math::FitMethodFunction &f);  ; static int Type (const ROOT::Math::FitMethodFunction &f);  . Member Function Documentation. ◆ IsGrad(). static bool ROOT::Fit::ObjFuncTrait< ROOT::Math::FitMethodFunction >::IsGrad ; (; ). inlinestatic . Definition at line 683 of file Fitter.cxx. ◆ NCalls(). static unsigned int ROOT::Fit::ObjFuncTrait< ROOT::Math::FitMethodFunction >::NCalls ; (; const ROOT::Math::FitMethodFunction & ; f). inlinestatic . Definition at line 681 of file Fitter.cxx. ◆ Type(). static int ROOT::Fit::ObjFuncTrait< ROOT::Math::FitMethodFunction >::Type ; (; const ROOT::Math::FitMethodFunction & ; f). inlinestatic . Definition at line 682 of file Fitter.cxx. The documentation for this struct was generated from the following file:; math/mathcore/src/Fitter.cxx. ROOTFitObjFuncTrait< ROOT::Math::FitMethodFunction >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:16 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Fit_1_1ObjFuncTrait_3_01ROOT_1_1Math_1_1FitMethodFunction_01_4.html:113,Guid,Guide,113,doc/master/structROOT_1_1Fit_1_1ObjFuncTrait_3_01ROOT_1_1Math_1_1FitMethodFunction_01_4.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Fit_1_1ObjFuncTrait_3_01ROOT_1_1Math_1_1FitMethodFunction_01_4.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::Fit::ObjFuncTrait< ROOT::Math::FitMethodGradFunction > Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Fit::ObjFuncTrait< ROOT::Math::FitMethodGradFunction > Struct Reference. . Definition at line 686 of file Fitter.cxx. Static Public Member Functions; static bool IsGrad ();  ; static unsigned int NCalls (const ROOT::Math::FitMethodGradFunction &f);  ; static int Type (const ROOT::Math::FitMethodGradFunction &f);  . Member Function Documentation. ◆ IsGrad(). static bool ROOT::Fit::ObjFuncTrait< ROOT::Math::FitMethodGradFunction >::IsGrad ; (; ). inlinestatic . Definition at line 689 of file Fitter.cxx. ◆ NCalls(). static unsigned int ROOT::Fit::ObjFuncTrait< ROOT::Math::FitMethodGradFunction >::NCalls ; (; const ROOT::Math::FitMethodGradFunction & ; f). inlinestatic . Definition at line 687 of file Fitter.cxx. ◆ Type(). static int ROOT::Fit::ObjFuncTrait< ROOT::Math::FitMethodGradFunction >::Type ; (; const ROOT::Math::FitMethodGradFunction & ; f). inlinestatic . Definition at line 688 of file Fitter.cxx. The documentation for this struct was generated from the following file:; math/mathcore/src/Fitter.cxx. ROOTFitObjFuncTrait< ROOT::Math::FitMethodGradFunction >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:16 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Fit_1_1ObjFuncTrait_3_01ROOT_1_1Math_1_1FitMethodGradFunction_01_4.html:117,Guid,Guide,117,doc/master/structROOT_1_1Fit_1_1ObjFuncTrait_3_01ROOT_1_1Math_1_1FitMethodGradFunction_01_4.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Fit_1_1ObjFuncTrait_3_01ROOT_1_1Math_1_1FitMethodGradFunction_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit::ParameterSettings Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Fit::ParameterSettings Class ReferenceMath » MathCore » Fitting and Parameter Estimation » User Fitting classes. ; Class, describing value, limits and step size of the parameters Provides functionality also to set/retrieve values, step sizes, limits and fix the parameters. ; To be done: add constraints (equality and inequality) as functions of the parameters ; Definition at line 33 of file ParameterSettings.h. Public Member Functions;  ParameterSettings ();  Default constructor. ;  ;  ParameterSettings (const std::string &name, double val);  constructor for fixed Parameter ;  ;  ParameterSettings (const std::string &name, double val, double err);  constructor for unlimited named Parameter ;  ;  ParameterSettings (const std::string &name, double val, double err, double min, double max);  constructor for double limited Parameter. The given value should be within the given limits [min,max] ;  ; void Fix ();  fix the parameter ;  ; bool HasLowerLimit () const;  check if parameter has lower limit ;  ; bool HasUpperLimit () const;  check if parameter has upper limit ;  ; bool IsBound () const;  check if is bound ;  ; bool IsDoubleBound () const;  check if is double bound (upper AND lower limit) ;  ; bool IsFixed () const;  check if is fixed ;  ; double LowerLimit () const;  return lower limit value ;  ; const std::string & Name () const;  return name ;  ; void Release ();  release the parameter ;  ; void RemoveLimits ();  remove all limit ;  ; void Set (const std::string &name, double value);  set a fixed parameter ;  ; void Set (const std::string &name, double value, double step);  set value and name (unlimited parameter) ;  ; void Set (const std::string &name, double value, double step, double lower, double upper);  set a limited parameter.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1ParameterSettings.html:84,Guid,Guide,84,doc/master/classROOT_1_1Fit_1_1ParameterSettings.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1ParameterSettings.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType > Class Template ReferenceMath » MathCore » Fitting and Parameter Estimation » Fit Method Classes. ; template<class DerivFunType, class ModelFunType = ROOT::Math::IParamMultiFunction>; class ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >class evaluating the log likelihood for binned Poisson likelihood fits it is template to distinguish gradient and non-gradient case ; Definition at line 46 of file PoissonLikelihoodFCN.h. Public Types; typedef BasicFCN< DerivFunType, ModelFunType, BinData > BaseFCN;  ; typedef BaseObjFunction::BaseFunction BaseFunction;  ; typedef ::ROOT::Math::BasicFitMethodFunction< DerivFunType > BaseObjFunction;  ; typedef ::ROOT::Math::IParamMultiFunctionTempl< T > IModelFunction;  ; typedef ModelFunType::BackendType T;  ; typedef BaseObjFunction::Type_t Type_t;  ;  Public Types inherited from ROOT::Math::BasicFitMethodFunction< DerivFunType >; typedef FunctionType::BaseFunc BaseFunction;  ; enum  Type_t ;  enumeration specifying the possible fit method types More...;  . Public Member Functions;  PoissonLikelihoodFCN (const BinData &data, const IModelFunction &func, int weight=0, bool extended=true, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSequential);  Constructor from unbin data set and model function (pdf) managed by the users. ;  ;  PoissonLikelihoodFCN (const PoissonLikelihoodFCN &f);  Copy constructor. ;  ;  PoissonLikelihoodFCN (const std::shared_ptr< BinData > &data, const std::shared_ptr< IModelFunction > &func, int weight=0, bool extended=true, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1PoissonLikelihoodFCN.html:126,Guid,Guide,126,doc/master/classROOT_1_1Fit_1_1PoissonLikelihoodFCN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1PoissonLikelihoodFCN.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Fit::ProxyListBox Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Fit::ProxyListBox Class Reference. . Definition at line 180 of file SparseData.cxx. Public Member Functions; list< Box >::iterator Begin ();  ; list< Box >::iterator End ();  ; list< Box > & GetList ();  ; void PushBack (Box &box);  ; void Remove (list< Box >::iterator it);  . Private Attributes; list< Box > fProxy;  . Member Function Documentation. ◆ Begin(). list< Box >::iterator ROOT::Fit::ProxyListBox::Begin ; (; ). inline . Definition at line 184 of file SparseData.cxx. ◆ End(). list< Box >::iterator ROOT::Fit::ProxyListBox::End ; (; ). inline . Definition at line 185 of file SparseData.cxx. ◆ GetList(). list< Box > & ROOT::Fit::ProxyListBox::GetList ; (; ). inline . Definition at line 187 of file SparseData.cxx. ◆ PushBack(). void ROOT::Fit::ProxyListBox::PushBack ; (; Box & ; box). inline . Definition at line 183 of file SparseData.cxx. ◆ Remove(). void ROOT::Fit::ProxyListBox::Remove ; (; list< Box >::iterator ; it). inline . Definition at line 186 of file SparseData.cxx. Member Data Documentation. ◆ fProxy. list<Box> ROOT::Fit::ProxyListBox::fProxy. private . Definition at line 189 of file SparseData.cxx. math/mathcore/src/SparseData.cxx. ROOTFitProxyListBox. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:16 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1ProxyListBox.html:79,Guid,Guide,79,doc/master/classROOT_1_1Fit_1_1ProxyListBox.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1ProxyListBox.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit::SparseData Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Fit::SparseData Class ReferenceMath » MathCore » Fitting and Parameter Estimation » Fit Data Classes. ; SparseData class representing the data of a THNSparse histogram The data needs to be converted to a BinData class before fitting using the GetBinData functions. ; Definition at line 35 of file SparseData.h. Public Member Functions;  SparseData (const SparseData &rhs);  Copy constructor. ;  ;  SparseData (const unsigned int dim, double min[], double max[]);  Constructor with a dimension and two arrays. ;  ;  SparseData (std::vector< double > &min, std::vector< double > &max);  Constructor with a vector. ;  ;  ~SparseData () override;  Destructor. ;  ; void Add (std::vector< double > &min, std::vector< double > &max, const double content, const double error=1.0);  Adds a new bin specified by the vectors. ;  ; void GetBinData (BinData &) const;  Transforms the data into a ROOT::Fit::BinData structure. ;  ; void GetBinDataIntegral (BinData &) const;  Same as before, but returning a BinData with integral format (containing bin edges) ;  ; void GetBinDataNoZeros (BinData &) const;  Same as before, but including zero content bins. ;  ; void GetPoint (const unsigned int i, std::vector< double > &min, std::vector< double > &max, double &content, double &error);  ; unsigned int NDim () const;  Returns the dimension of the object (bins) ;  ; unsigned int NPoints () const;  Returns the number of points stored. ;  ; SparseData & operator= (const SparseData &rhs);  Assignment operator. ;  ; void PrintList () const;  Debug method to print the list of bins stored. ;  ;  Public Member Functions inherited from ROOT::Fit::FitData;  FitData (const DataOptions &opt, const DataRange &range, unsigned int maxpoints=0, unsigned int dim=1);  construct passing options",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1SparseData.html:77,Guid,Guide,77,doc/master/classROOT_1_1Fit_1_1SparseData.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1SparseData.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Fit::UnBinData Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Fit::UnBinData Class ReferenceMath » MathCore » Fitting and Parameter Estimation » Fit Data Classes. ; Class describing the un-binned data sets (just x coordinates values) of any dimensions. ; There is the option to construct UnBindata copying the data inside (in the base FitData class) or using a pointer to external data, depending on which constructor of the UnBinData class is used. It is recommended to copy the input data inside, since this will be more efficient and less error prone, since the input provided data will have to be kept alive for all the time the Fit classes will be used. In case of really large data sets for limiting memory consumption then the other option can be used with special care. Specialized constructor exists for using external data up to 3 dimensions.; When the data are copying in the number of points can be set later (or re-set) using Initialize and the data are inserted one by one using the Add method. It is mandatory to set the size before using the Add method. ; Definition at line 46 of file UnBinData.h. Public Member Functions;  UnBinData (const DataOptions &opt, const DataRange &range, unsigned int maxpoints=0, unsigned int dim=1, bool isWeighted=false);  constructor from options and range ;  ;  UnBinData (const DataRange &range, unsigned int maxpoints=0, unsigned int dim=1, bool isWeighted=false);  constructor from range and default option ;  ;  UnBinData (const UnBinData &);  copy constructor ;  ;  UnBinData (unsigned int maxpoints, const double *dataX, const DataRange &range);  constructor for 1D data and a range (data are copied inside according to the given range) ;  ;  UnBinData (unsigned int maxpoints, const double *dataX, const double *dataY, const DataRange &range, bool isWeighted=false);  constructor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1UnBinData.html:76,Guid,Guide,76,doc/master/classROOT_1_1Fit_1_1UnBinData.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1UnBinData.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::FoundationUtils Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; ROOT::FoundationUtils Namespace Reference. Functions; bool CanConvertEnvValueToBool (const std::string &value);  ; bool ConvertEnvValueToBool (const std::string &value);  ; void ConvertToUnixPath (std::string &Path);  Transforms a file path by replacing its backslashes with slashes. ;  ; std::string GetCurrentDir ();  ; const char & GetEnvPathSeparator ();  ; const std::string & GetEtcDir ();  ; const std::string & GetFallbackRootSys ();  ; const std::string & GetIncludeDir ();  \ returns the include directory in the installation. ;  ; const std::string & GetPathSeparator ();  ; const std::string & GetRootSys ();  ; std::string MakePathRelative (const std::string &path, const std::string &base, bool isBuildingROOT=false);  ; static std::string str_tolower (std::string s);  . Function Documentation. ◆ CanConvertEnvValueToBool(). bool ROOT::FoundationUtils::CanConvertEnvValueToBool ; (; const std::string & ; value). Returnstrue if lowercase value is 1, on, true, 0, off, false ; Definition at line 214 of file FoundationUtils.cxx. ◆ ConvertEnvValueToBool(). bool ROOT::FoundationUtils::ConvertEnvValueToBool ; (; const std::string & ; value). Returnstrue if the lowercase string is 1, on, true; false if 0, off, false ; Definition at line 224 of file FoundationUtils.cxx. ◆ ConvertToUnixPath(). void ROOT::FoundationUtils::ConvertToUnixPath ; (; std::string & ; Path). Transforms a file path by replacing its backslashes with slashes. ; Definition at line 107 of file FoundationUtils.cxx. ◆ GetCurrentDir(). std::string ROOT::FoundationUtils::GetCurrentDir ; (; ). Returnsthe $PWD. ; Definition at line 47 of file FoundationUtils.cxx. ◆ GetEnvPathSeparator(). const char & ROOT::FoundationUtils::GetEnvPathSeparator ; (; ). inline . Returnsthe path separator for the PATH environment variable on the platform. ; Definition at line 54 of file Fou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1FoundationUtils.html:81,Guid,Guide,81,doc/master/namespaceROOT_1_1FoundationUtils.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1FoundationUtils.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::FoundationUtils Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; ROOT::FoundationUtils Namespace Reference. Functions; bool CanConvertEnvValueToBool (const std::string &value);  ; bool ConvertEnvValueToBool (const std::string &value);  ; void ConvertToUnixPath (std::string &Path);  Transforms a file path by replacing its backslashes with slashes. ;  ; std::string GetCurrentDir ();  ; const char & GetEnvPathSeparator ();  ; const std::string & GetEtcDir ();  ; const std::string & GetFallbackRootSys ();  ; const std::string & GetIncludeDir ();  \ returns the include directory in the installation. ;  ; const std::string & GetPathSeparator ();  ; const std::string & GetRootSys ();  ; std::string MakePathRelative (const std::string &path, const std::string &base, bool isBuildingROOT=false);  ; static std::string str_tolower (std::string s);  . Function Documentation. ◆ CanConvertEnvValueToBool(). bool ROOT::FoundationUtils::CanConvertEnvValueToBool ; (; const std::string & ; value). Returnstrue if lowercase value is 1, on, true, 0, off, false ; Definition at line 214 of file FoundationUtils.cxx. ◆ ConvertEnvValueToBool(). bool ROOT::FoundationUtils::ConvertEnvValueToBool ; (; const std::string & ; value). Returnstrue if the lowercase string is 1, on, true; false if 0, off, false ; Definition at line 224 of file FoundationUtils.cxx. ◆ ConvertToUnixPath(). void ROOT::FoundationUtils::ConvertToUnixPath ; (; std::string & ; Path). Transforms a file path by replacing its backslashes with slashes. ; Definition at line 107 of file FoundationUtils.cxx. ◆ GetCurrentDir(). std::string ROOT::FoundationUtils::GetCurrentDir ; (; ). Returnsthe $PWD. ; Definition at line 47 of file FoundationUtils.cxx. ◆ GetEnvPathSeparator(). const char & ROOT::FoundationUtils::GetEnvPathSeparator ; (; ). inline . Returnsthe path separator for the PATH environment variable on the platform. ; Definition at line 54 of file Foun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1FoundationUtils.html:80,Guid,Guide,80,doc/v632/namespaceROOT_1_1FoundationUtils.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1FoundationUtils.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Geom Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Functions ; ROOT::Geom Namespace Reference. Classes; struct  Vertex_t;  . Functions; bool operator!= (Vertex_t const &lhs, Vertex_t const &rhs);  ; Vertex_t operator* (const double lhs, Vertex_t const &rhs);  ; Vertex_t operator* (const Vertex_t &lhs, const Vertex_t &rhs);  ; Vertex_t operator* (Vertex_t const &lhs, const double rhs);  ; Vertex_t operator+ (const double lhs, Vertex_t const &rhs);  ; Vertex_t operator+ (const Vertex_t &lhs, const Vertex_t &rhs);  ; Vertex_t operator+ (Vertex_t const &lhs, const double rhs);  ; Vertex_t operator- (const double lhs, Vertex_t const &rhs);  ; Vertex_t operator- (const Vertex_t &lhs, const Vertex_t &rhs);  ; Vertex_t operator- (Vertex_t const &lhs, const double rhs);  ; Vertex_t operator/ (const double lhs, Vertex_t const &rhs);  ; Vertex_t operator/ (const Vertex_t &lhs, const Vertex_t &rhs);  ; Vertex_t operator/ (Vertex_t const &lhs, const double rhs);  ; bool operator== (Vertex_t const &lhs, Vertex_t const &rhs);  . Function Documentation. ◆ operator!=(). bool ROOT::Geom::operator!= ; (; Vertex_t const & ; lhs, . Vertex_t const & ; rhs . ). inline . Definition at line 164 of file TGeoVector3.h. ◆ operator*() [1/3]. Vertex_t ROOT::Geom::operator* ; (; const double ; lhs, . Vertex_t const & ; rhs . ). inline . Definition at line 188 of file TGeoVector3.h. ◆ operator*() [2/3]. Vertex_t ROOT::Geom::operator* ; (; const Vertex_t & ; lhs, . const Vertex_t & ; rhs . ). inline . Definition at line 188 of file TGeoVector3.h. ◆ operator*() [3/3]. Vertex_t ROOT::Geom::operator* ; (; Vertex_t const & ; lhs, . const double ; rhs . ). inline . Definition at line 188 of file TGeoVector3.h. ◆ operator+() [1/3]. Vertex_t ROOT::Geom::operator+ ; (; const double ; lhs, . Vertex_t const & ; rhs . ). inline . Definition at line 188 of file TGeoVector3.h. ◆ operator+() [2/3]. Vertex_t ROOT::Geom::operator+ ; (;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Geom.html:70,Guid,Guide,70,doc/master/namespaceROOT_1_1Geom.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Geom.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Geom Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Functions ; ROOT::Geom Namespace Reference. Classes; struct  Vertex_t;  . Functions; bool operator!= (Vertex_t const &lhs, Vertex_t const &rhs);  ; Vertex_t operator* (const double lhs, Vertex_t const &rhs);  ; Vertex_t operator* (const Vertex_t &lhs, const Vertex_t &rhs);  ; Vertex_t operator* (Vertex_t const &lhs, const double rhs);  ; Vertex_t operator+ (const double lhs, Vertex_t const &rhs);  ; Vertex_t operator+ (const Vertex_t &lhs, const Vertex_t &rhs);  ; Vertex_t operator+ (Vertex_t const &lhs, const double rhs);  ; Vertex_t operator- (const double lhs, Vertex_t const &rhs);  ; Vertex_t operator- (const Vertex_t &lhs, const Vertex_t &rhs);  ; Vertex_t operator- (Vertex_t const &lhs, const double rhs);  ; Vertex_t operator/ (const double lhs, Vertex_t const &rhs);  ; Vertex_t operator/ (const Vertex_t &lhs, const Vertex_t &rhs);  ; Vertex_t operator/ (Vertex_t const &lhs, const double rhs);  ; bool operator== (Vertex_t const &lhs, Vertex_t const &rhs);  . Function Documentation. ◆ operator!=(). bool ROOT::Geom::operator!= ; (; Vertex_t const & ; lhs, . Vertex_t const & ; rhs . ). inline . Definition at line 164 of file TGeoVector3.h. ◆ operator*() [1/3]. Vertex_t ROOT::Geom::operator* ; (; const double ; lhs, . Vertex_t const & ; rhs . ). inline . Definition at line 188 of file TGeoVector3.h. ◆ operator*() [2/3]. Vertex_t ROOT::Geom::operator* ; (; const Vertex_t & ; lhs, . const Vertex_t & ; rhs . ). inline . Definition at line 188 of file TGeoVector3.h. ◆ operator*() [3/3]. Vertex_t ROOT::Geom::operator* ; (; Vertex_t const & ; lhs, . const double ; rhs . ). inline . Definition at line 188 of file TGeoVector3.h. ◆ operator+() [1/3]. Vertex_t ROOT::Geom::operator+ ; (; const double ; lhs, . Vertex_t const & ; rhs . ). inline . Definition at line 188 of file TGeoVector3.h. ◆ operator+() [2/3]. Vertex_t ROOT::Geom::operator+ ; (; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Geom.html:69,Guid,Guide,69,doc/v632/namespaceROOT_1_1Geom.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Geom.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT::Internal Namespace Reference. Namespaces; namespace  ExecutorUtils;  ; namespace  RDF;  ; namespace  RootCling;  ; namespace  SHA256;  ; namespace  TDS;  ; namespace  TreeUtils;  Namespace hosting functions and classes to retrieve tree information for internal use. ;  ; namespace  TThreadedObjectUtils;  ; namespace  VecOps;  . Classes; class  ClassDefGenerateInitInstanceLocalInjector;  ; class  DictSelectionReader;  ; struct  GetFunctorType;  Internal class used by TF1 for obtaining the type from a functor out of the set of valid operator() signatures. More...;  ; struct  GetFunctorType< T(F::*)(const T *, const double *) const >;  ; struct  GetFunctorType< T(F::*)(const T *, const double *)>;  ; struct  GetFunctorType< T(F::*)(T *, double *) const >;  ; struct  GetFunctorType< T(F::*)(T *, double *)>;  ; struct  InterpreterMutexRegistrationRAII;  ; struct  ParsingStateRAII;  RAII used to store Parser, Sema, Preprocessor state for recursive parsing. More...;  ; struct  RBaseType;  ; struct  RCast;  ; struct  RCast< T, false, false >;  ; struct  RCast< T, false, true >;  ; class  RConcurrentHashColl;  This class is a thread-safe associative collection connecting a 256 bits digest/hash to a collection of uid (integer) This is used in the handling of the StreamerInfo record in TFile. More...;  ; struct  RDavixFileDes;  ; struct  RecurseCounts;  ; struct  RHashMap;  ; class  RIoUring;  ; class  RRawFile;  The RRawFile provides read-only access to local and remote files. More...;  ; class  RRawFileDavix;  The RRawFileDavix class provides read-only access to remote non-ROOT files. More...;  ; class  RRawFileNetXNG;  The RRawFileNetXNG class provides read-only access to remote files using root/roots protocol. More...;  ; struct  RRawFileNetXNGImpl;  ; class  RRawFileTF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Internal.html:74,Guid,Guide,74,doc/master/namespaceROOT_1_1Internal.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Internal.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT::Internal Namespace Reference. Namespaces; namespace  ExecutorUtils;  ; namespace  RDF;  ; namespace  RootCling;  ; namespace  SHA256;  ; namespace  TDS;  ; namespace  TreeUtils;  Namespace hosting functions and classes to retrieve tree information for internal use. ;  ; namespace  TThreadedObjectUtils;  ; namespace  VecOps;  . Classes; class  ClassDefGenerateInitInstanceLocalInjector;  ; class  DictSelectionReader;  ; struct  GetFunctorType;  Internal class used by TF1 for obtaining the type from a functor out of the set of valid operator() signatures. More...;  ; struct  GetFunctorType< T(F::*)(const T *, const double *) const >;  ; struct  GetFunctorType< T(F::*)(const T *, const double *)>;  ; struct  GetFunctorType< T(F::*)(T *, double *) const >;  ; struct  GetFunctorType< T(F::*)(T *, double *)>;  ; struct  InterpreterMutexRegistrationRAII;  ; struct  ParsingStateRAII;  RAII used to store Parser, Sema, Preprocessor state for recursive parsing. More...;  ; struct  RBaseType;  ; struct  RCast;  ; struct  RCast< T, false, false >;  ; struct  RCast< T, false, true >;  ; class  RConcurrentHashColl;  This class is a thread-safe associative collection connecting a 256 bits digest/hash to a collection of uid (integer) This is used in the handling of the StreamerInfo record in TFile. More...;  ; struct  RDavixFileDes;  ; struct  RecurseCounts;  ; struct  RHashMap;  ; class  RIoUring;  ; class  RRawFile;  The RRawFile provides read-only access to local and remote files. More...;  ; class  RRawFileDavix;  The RRawFileDavix class provides read-only access to remote non-ROOT files. More...;  ; class  RRawFileNetXNG;  The RRawFileNetXNG class provides read-only access to remote files using root/roots protocol. More...;  ; struct  RRawFileNetXNGImpl;  ; class  RRawFileTFi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Internal.html:73,Guid,Guide,73,doc/v632/namespaceROOT_1_1Internal.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Internal.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::RConcurrentHashColl Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Internal::RConcurrentHashColl Class Reference. ; This class is a thread-safe associative collection connecting a 256 bits digest/hash to a collection of uid (integer) This is used in the handling of the StreamerInfo record in TFile. ; Definition at line 30 of file RConcurrentHashColl.hxx. Classes; class  HashValue;  . Public Member Functions;  RConcurrentHashColl ();  ;  ~RConcurrentHashColl ();  ; const RUidColl * Find (const HashValue &hash) const;  Return the collection of UID corresponding to the hash if the hash has already been seen or nullptr otherwise. ;  ; bool Insert (const HashValue &hash, RUidColl &&coll) const;  If the hash is there, return false. ;  . Static Public Member Functions; static HashValue Hash (char *buf, int len);  Return the hash object corresponding to the buffer. ;  . Private Attributes; std::unique_ptr< RHashMap > fHashMap;  ; std::unique_ptr< ROOT::TRWSpinLock > fRWLock;  . #include <ROOT/RConcurrentHashColl.hxx>; Constructor & Destructor Documentation. ◆ RConcurrentHashColl(). ROOT::Internal::RConcurrentHashColl::RConcurrentHashColl ; (; ). Definition at line 41 of file RConcurrentHashColl.cxx. ◆ ~RConcurrentHashColl(). ROOT::Internal::RConcurrentHashColl::~RConcurrentHashColl ; (; ). default . Member Function Documentation. ◆ Find(). const RUidColl * ROOT::Internal::RConcurrentHashColl::Find ; (; const HashValue & ; hash); const. Return the collection of UID corresponding to the hash if the hash has already been seen or nullptr otherwise. ; Definition at line 46 of file RConcurrentHashColl.cxx. ◆ Hash(). RConcurrentHashColl::HashValue ROOT::Internal::RConcurrentHashColl::Hash ; (; char * ; buf, . int ; len . ). static . Return the hash object correspond",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1RConcurrentHashColl.html:91,Guid,Guide,91,doc/master/classROOT_1_1Internal_1_1RConcurrentHashColl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1RConcurrentHashColl.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::RDF Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Functions |; Variables ; ROOT::Internal::RDF Namespace Reference. Namespaces; namespace  GraphDrawing;  . Classes; class  ArrayPtrVisitor;  ; struct  CallGuaranteedOrder;  Struct to wrap the call to a function with a guaranteed order of execution of its arguments. More...;  ; struct  ColumnType;  ; struct  ColumnType< ROOT::RVec< ROOT::RVec< T > >, false >;  ; struct  ColumnType< ROOT::RVec< T >, true >;  ; struct  Disjunction;  ; struct  Disjunction< B1 >;  ; struct  Disjunction< B1, Bn... >;  ; class  DisplayHelper;  ; struct  IsDataContainer;  Check for container traits. More...;  ; struct  IsDataContainer< ROOT::VecOps::RVec< bool > >;  ; struct  IsDataContainer< std::span< T > >;  ; struct  IsDataContainer< std::vector< bool > >;  ; struct  IsVector_t;  Detect whether a type is an instantiation of vector<T,A> More...;  ; struct  IsVector_t< std::vector< T, A > >;  ; class  PassAsVecHelper;  ; class  PassAsVecHelper< std::index_sequence< N... >, T, F >;  ; class  RAction;  A RDataFrame node that produces a result. More...;  ; class  RActionBase;  ; class  RCallback;  ; struct  RColumnReadersInfo;  This type aggregates some of the arguments passed to GetColumnReaders. More...;  ; class  RColumnRegister;  A binder for user-defined columns, variations and aliases. More...;  ; class  RDefineReader;  Column reader for defined columns. More...;  ; class  RDefinesWithReaders;  A helper type that keeps track of RDefine objects and their corresponding RDefineReaders. More...;  ; class  RDisplayElement;  Helper class to let Display print compact tabular representations of the events. More...;  ; class  RDSColumnReader;  Column reader type that deals with values read from RDataSources. More...;  ; struct  RemoveFirstParameterIf;  type is TypeList if MustRemove is false, otherwise it is a TypeList with the firs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Internal_1_1RDF.html:79,Guid,Guide,79,doc/master/namespaceROOT_1_1Internal_1_1RDF.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Internal_1_1RDF.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::RDF::RColumnRegister Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Internal::RDF::RColumnRegister Class ReferenceDataframe. ; A binder for user-defined columns, variations and aliases. ; The storage is copy-on-write and shared between all instances of the class that have the same values.; Several components of an RDF computation graph make use of a column register. It keeps track of which columns have been defined, varied or aliased at each point of the computation graph. In many cases, the contents of the different column register instances are the same or only differ by a single extra defined/varied/aliased column. For this reason, in order to avoid unnecessary data duplication, fDefines, fAliases, fVariations and fColumnNames are all shared_ptr<const T> that (whenever possible) are shared across RColumnRegister instances that are part of the same computation graph. If a new column, alias or variation is added between one node and the next, then the new node contains a new instance of a RColumnRegister that shares all data members with the previous instance except for the one data member that needed updating, which is replaced with a new updated instance.; The contents of the collections that keep track of other objects of the computation graph are not owned by the RColumnRegister object. They are registered centrally by the RLoopManager and only accessed via reference in the RColumnRegister. ; Definition at line 68 of file RColumnRegister.hxx. Public Member Functions;  RColumnRegister (ROOT::Detail::RDF::RLoopManager *lm);  ; void AddAlias (std::string_view alias, std::string_view colName);  Add a new alias to the ledger. ;  ; void AddDefine (std::shared_ptr< RDFDetail::RDefineBase > column);  Add a new defined column. ;  ; void AddVariation (std:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1RDF_1_1RColumnRegister.html:92,Guid,Guide,92,doc/master/classROOT_1_1Internal_1_1RDF_1_1RColumnRegister.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1RDF_1_1RColumnRegister.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::TBranchCacheInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Internal::TBranchCacheInfo Class Reference. . Definition at line 35 of file TBranchCacheInfo.h. Public Member Functions; bool AllUsed () const;  Return true if all the baskets that are marked loaded are also mark as used. ;  ; void GetUnused (std::vector< Int_t > &unused);  Return a set of unused basket, let's not re-read them. ;  ; bool HasBeenUsed (Int_t basketNumber) const;  Return true if the basket has been marked as 'used'. ;  ; bool IsInCache (Int_t basketNumber) const;  Return true if the basket is currently in the cache. ;  ; bool IsVetoed (Int_t basketNumber) const;  Return true if the basket is currently vetoed. ;  ; void Print (const char *owner, Long64_t *entries) const;  Print the info we have for the baskets. ;  ; void Reset ();  Reset all info. ;  ; void SetIsInCache (Int_t basketNumber);  Mark if the basket is currently in the cache. ;  ; void SetUsed (Int_t basketNumber);  Mark if the basket has been marked as 'used'. ;  ; void Veto (Int_t basketNumber);  Mark if the basket should be vetoed in the next round. ;  . Private Types; enum  EStates { kLoaded = 0; , kUsed = 1; , kVetoed = 2; , kSize = 3; };  . Private Member Functions; void SetState (Int_t basketNumber, EStates what);  Mark if the basket has been marked has the 'what' state. ;  ; bool TestState (Int_t basketNumber, EStates what) const;  Return true if the basket has been marked as having the 'what' state. ;  ; void UpdatePedestal (Int_t basketNumber);  Update the pedestal to be less or equal to basketNumber, shift the bits if needed. ;  . Private Attributes; Int_t fBasketPedestal {-1};  ; TBits fInfo;  . #include <TBranchCacheInfo.h>; Member Enumeration Documentation. ◆ EStates. enum ROOT::Internal::TBranchCach",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TBranchCacheInfo.html:88,Guid,Guide,88,doc/master/classROOT_1_1Internal_1_1TBranchCacheInfo.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TBranchCacheInfo.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::TBranchDescriptor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Internal::TBranchDescriptor Class Reference. . Definition at line 55 of file TTreeReaderGenerator.h. Public Member Functions;  TBranchDescriptor (const char *type, TVirtualStreamerInfo *info, const char *branchname, const char *subBranchPrefix, ELocation isclones, const TString &containerName, TBranchDescriptor *parent=nullptr);  ; bool IsClones () const;  ; bool IsSTL () const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TBranchDescriptor.html:89,Guid,Guide,89,doc/master/classROOT_1_1Internal_1_1TBranchDescriptor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TBranchDescriptor.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,. ROOT: ROOT::Internal::TBranchIMTHelper Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::Internal::TBranchIMTHelper Class Reference. ; A helper class for managing IMT work during TTree:Fill operations. ; Definition at line 28 of file TBranchIMTHelper.h. Public Member Functions; Long64_t GetNbytes ();  ; Long64_t GetNerrors ();  ; template<typename FN > ; void Run (const FN &lambda);  ; void Wait ();  . Private Types; using TaskGroup_t = ROOT::Experimental::TTaskGroup;  . Private Attributes; std::atomic< Long64_t > fBytes {0};  Total number of bytes written by this helper. ;  ; std::unique_ptr< TaskGroup_t > fGroup;  ; std::atomic< Int_t > fNerrors {0};  Total error count of all tasks done by this helper. ;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tree/tree/src/TBranchIMTHelper.h>; Member Typedef Documentation. ◆ TaskGroup_t. using ROOT::Internal::TBranchIMTHelper::TaskGroup_t = ROOT::Experimental::TTaskGroup. private . Definition at line 31 of file TBranchIMTHelper.h. Member Function Documentation. ◆ GetNbytes(). Long64_t ROOT::Internal::TBranchIMTHelper::GetNbytes ; (; ). inline . Definition at line 57 of file TBranchIMTHelper.h. ◆ GetNerrors(). Long64_t ROOT::Internal::TBranchIMTHelper::GetNerrors ; (; ). inline . Definition at line 58 of file TBranchIMTHelper.h. ◆ Run(). template<typename FN > . void ROOT::Internal::TBranchIMTHelper::Run ; (; const FN & ; lambda). inline . Definition at line 35 of file TBranchIMTHelper.h. ◆ Wait(). void ROOT::Internal::TBranchIMTHelper::Wait ; (; ). inline . Definition at line 51 of file TBranchIMTHelper.h. Member Data Documentation. ◆ fBytes. std::atomic<Long64_t> ROOT::Internal::TBranchIMTHelper::fBytes {0}. private . Total number of bytes written by this helper. ; Definition at line 61 of file TBranchIMTHelper.h. ◆ fG,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TBranchIMTHelper.html:88,Guid,Guide,88,doc/master/classROOT_1_1Internal_1_1TBranchIMTHelper.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TBranchIMTHelper.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::TBranchProxyClassDescriptor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Internal::TBranchProxyClassDescriptor Class Reference. . Definition at line 26 of file TBranchProxyClassDescriptor.h. Public Types; enum  ELocation { ;   kOut =0; , kClones; , kSTL; , kInsideClones; , ;   kInsideSTL. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TBranchProxyClassDescriptor (const char *branchname);  Constructor for a branch constructed from a leaf list. ;  ;  TBranchProxyClassDescriptor (const char *type, TVirtualStreamerInfo *info, const char *branchname, const char *branchPrefix, ELocation isclones, UInt_t splitlevel, const TString &containerName);  Constructor. ;  ;  TBranchProxyClassDescriptor (const char *type, TVirtualStreamerInfo *info, const char *branchname, ELocation isclones, UInt_t splitlevel, const TString &containerName);  Constructor. ;  ; void AddDescriptor (TBranchProxyDescriptor *desc, bool isBase);  Add a descriptor to this proxy. ;  ; const char * GetBranchName () const;  Get the branch name. ;  ; TString GetContainerName () const;  Return the name of the container holding this class, if any. ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TBranchProxyClassDescriptor.html:99,Guid,Guide,99,doc/master/classROOT_1_1Internal_1_1TBranchProxyClassDescriptor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TBranchProxyClassDescriptor.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::TBranchProxyDescriptor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Internal::TBranchProxyDescriptor Class Reference. . Definition at line 21 of file TBranchProxyDescriptor.h. Public Member Functions;  TBranchProxyDescriptor (const char *dataname, const char *type, const char *branchname, bool split=true, bool skipped=false, bool isleaflist=false);  Constructor. ;  ; const char * GetBranchName ();  Get the branch name. ;  ; const char * GetDataName ();  Get the name of the data member. ;  ; const char * GetTypeName ();  Get the name of the type of the data member. ;  ; TClass * IsA () const override;  ; bool IsEquivalent (const TBranchProxyDescriptor *other, bool inClass=false);  Return true if this description is the 'same' as the other description. ;  ; bool IsSplit () const;  Return true if the branch is split. ;  ; void OutputDecl (FILE *hf, int offset, UInt_t maxVarname);  Output the declaration corresponding to this proxy. ;  ; void OutputInit (FILE *hf, int offset, UInt_t maxVarname, const char *prefix);  Output the initialization corresponding to this proxy. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TBranchProxyDescriptor.html:94,Guid,Guide,94,doc/master/classROOT_1_1Internal_1_1TBranchProxyDescriptor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TBranchProxyDescriptor.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::TCheckHashRecursiveRemoveConsistency Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; ROOT::Internal::TCheckHashRecursiveRemoveConsistency Class Reference. . Definition at line 38 of file TCheckHashRecursiveRemoveConsistency.h. Classes; struct  Value;  . Public Types; enum  EResult { kInconsistent; , kInconclusive; , kConsistent; };  ; using Value_t = Value;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TCheckHashRecursiveRemoveConsistency ();  ;  ~TCheckHashRecursiveRemoveConsistency ();  ; void Add (TObject *obj);  ; EResult CheckRecursiveRemove (TClass &classRef);  ; TClass * FindMissingRecursiveRemove (TClass &classRef);  ; EResult HasConsistentHashMember (TClass &classRef);  ; TClass * IsA () const override;  ; void RecursiveRemove (TObject *obj) override;  Recursively remove this object from a list. ;  ; void SlowRemove (TObject *obj);  ; void Streamer (TBuffer &R__b) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool VerifyRecursiveRemove (const char *classname);  ; bool VerifyRecursiveRemove (TClass &classRef);  ;  Public Member Functions inherited from TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TCheckHashRecursiveRemoveConsistency.html:108,Guid,Guide,108,doc/master/classROOT_1_1Internal_1_1TCheckHashRecursiveRemoveConsistency.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TCheckHashRecursiveRemoveConsistency.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::TDirectoryAtomicAdapter Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Internal::TDirectoryAtomicAdapter Struct Reference. ; Internal class used in the implementation of gDirectory The objects of type TDirectoryAtomicAdapter should only be used inside the thread that created them. ; The intent is for those objects to be used indirectly through the macro gDirectory and solely as temporary objects. For example: gDirectory = newvalue;; gDirectory->ls();; TDirectory *current = gDirectory;; gDirectory#define gDirectoryDefinition TDirectory.h:384; TDirectoryDescribe directory structure in memory.Definition TDirectory.h:45; Note that: auto dir = gDirectory;; currently behaves ""unexpectedly"" as changing dir will also change gDirectory: dir = newvalue;; leads to gDirectory == newvalue; To prevent this we would need a new mechanism such that the type used by auto in that case is TDirectory* rather than the Internal type TDirectoryAtomicAdapter. ; Definition at line 338 of file TDirectory.h. Public Member Functions;  TDirectoryAtomicAdapter ();  ;  operator bool () const;  ; template<typename T > ;  operator T* () const;  ;  operator TDirectory * () const;  ; bool operator!= (const TDirectory *other) const;  ; bool operator!= (TDirectory *other) const;  ; TDirectory * operator-> () const;  ; TDirectory * operator= (TDirectory *newvalue);  ; bool operator== (const TDirectory *other) const;  ; bool operator== (TDirectory *other) const;  . Public Attributes; TDirectory::SharedGDirectory_t & fValue;  . #include <TDirectory.h>; Constructor & Destructor Documentation. ◆ TDirectoryAtomicAdapter(). ROOT::Internal::TDirectoryAtomicAdapter::TDirectoryAtomicAdapter ; (; ). inline . Definition at line 343 of file TDirectory.h. Member Function Documentation. ◆ operator bool(). ROOT::Internal::TDirectoryAtomicAdapter::o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Internal_1_1TDirectoryAtomicAdapter.html:96,Guid,Guide,96,doc/master/structROOT_1_1Internal_1_1TDirectoryAtomicAdapter.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Internal_1_1TDirectoryAtomicAdapter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::TExecutor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Internal::TExecutor Class Reference. ; This class implements the interface to execute the same task multiple times, sequentially or in parallel depending on the execution policy passed as a first parameter on construction, and possibly with different arguments every time. . ROOT::Internal::TExecutor::Map; The two possible usages of the Map method are:. Map(F func, unsigned nTimes): func is executed nTimes with no arguments; Map(F func, T& args): func is executed on each element of the collection of arguments args. For either signature, func is executed as many times as needed by a pool of n workers; where n tipically defaults to the number of cores.; A collection containing the result of each execution is returned.; Note: the user is responsible for the deletion of any object that might be created upon execution of func, returned objects included. ROOT::::Internal::TExecutor never deletes what it returns, it simply forgets it.; Parameters. funca callable object, such as a lambda expression, an std::function, a functor object or a function that takes zero arguments (for the first signature) or one (for the second signature). ; argsa standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature. An integer only for the first. Note: in cases where the function to be executed takes more than zero/one argument but all are fixed except zero/one, the function can be wrapped in a lambda or via std::bind to give it the right signature.; Return value:; An std::vector. The elements in the container will be the objects returned by func. ROOT::Internal::TExecutor::MapReduce; This set of methods behaves exactly like Map, but takes an additional function as a third ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TExecutor.html:81,Guid,Guide,81,doc/master/classROOT_1_1Internal_1_1TExecutor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TExecutor.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::TExecutor Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Internal::TExecutor Class Reference. ; This class implements the interface to execute the same task multiple times, sequentially or in parallel depending on the execution policy passed as a first parameter on construction, and possibly with different arguments every time. . ROOT::Internal::TExecutor::Map; The two possible usages of the Map method are:. Map(F func, unsigned nTimes): func is executed nTimes with no arguments; Map(F func, T& args): func is executed on each element of the collection of arguments args. For either signature, func is executed as many times as needed by a pool of n workers; where n tipically defaults to the number of cores.; A collection containing the result of each execution is returned.; Note: the user is responsible for the deletion of any object that might be created upon execution of func, returned objects included. ROOT::::Internal::TExecutor never deletes what it returns, it simply forgets it.; Parameters. funca callable object, such as a lambda expression, an std::function, a functor object or a function that takes zero arguments (for the first signature) or one (for the second signature). ; argsa standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature. An integer only for the first. Note: in cases where the function to be executed takes more than zero/one argument but all are fixed except zero/one, the function can be wrapped in a lambda or via std::bind to give it the right signature.; Return value:; An std::vector. The elements in the container will be the objects returned by func. ROOT::Internal::TExecutor::MapReduce; This set of methods behaves exactly like Map, but takes an additional function as a third arg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1Internal_1_1TExecutor.html:80,Guid,Guide,80,doc/v632/classROOT_1_1Internal_1_1TExecutor.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1Internal_1_1TExecutor.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::TF1Builder< Func > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Internal::TF1Builder< Func > Struct Template Reference. ; template<class Func>; struct ROOT::Internal::TF1Builder< Func >Internal class used by TF1 for defining template specialization for different TF1 constructors ; Definition at line 169 of file TF1.h. Static Public Member Functions; static void Build (TF1 *f, Func func);  . #include <TF1.h>; Member Function Documentation. ◆ Build(). template<class Func > . void ROOT::Internal::TF1Builder< Func >::Build ; (; TF1 * ; f, . Func ; func . ). static . Definition at line 762 of file TF1.h. The documentation for this struct was generated from the following file:; hist/hist/inc/TF1.h. ROOTInternalTF1Builder. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:17 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Internal_1_1TF1Builder.html:100,Guid,Guide,100,doc/master/structROOT_1_1Internal_1_1TF1Builder.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Internal_1_1TF1Builder.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::TFriendProxyDescriptor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Internal::TFriendProxyDescriptor Class Reference. . Definition at line 22 of file TFriendProxyDescriptor.h. Public Member Functions;  TFriendProxyDescriptor (const char *treename, const char *aliasname, Int_t index);  Constructor. ;  ; Int_t GetIndex () const;  ; TList * GetListOfTopProxies ();  ; TClass * IsA () const override;  ; bool IsDuplicate ();  ; bool IsEquivalent (const TFriendProxyDescriptor *other);  Return true if this descriptor and the other are equivalent (describe the same entity). ;  ; void OutputClassDecl (FILE *hf, int offset, UInt_t maxVarname);  Print the declaration needed for this descriptor. ;  ; void OutputDecl (FILE *hf, int offset, UInt_t maxVarname);  Print the declaration needed for this descriptor. ;  ; void SetDuplicate ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TFriendProxyDescriptor.html:94,Guid,Guide,94,doc/master/classROOT_1_1Internal_1_1TFriendProxyDescriptor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TFriendProxyDescriptor.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Internal::THnBaseBinIter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Internal::THnBaseBinIter Class Referenceabstract. ; Iterator over THnBase bins (internal implementation). ; Definition at line 315 of file THnBase.h. Public Member Functions;  THnBaseBinIter (Bool_t respectAxisRange);  ; virtual ~THnBaseBinIter ();  Destruct a bin iterator. ;  ; virtual Int_t GetCoord (Int_t dim) const =0;  ; Bool_t HaveSkippedBin () const;  ; virtual Long64_t Next (Int_t *coord=nullptr)=0;  ; Bool_t RespectsAxisRange () const;  . Protected Attributes; Bool_t fHaveSkippedBin;  ; Bool_t fRespectAxisRange;  . #include <THnBase.h>; Constructor & Destructor Documentation. ◆ THnBaseBinIter(). ROOT::Internal::THnBaseBinIter::THnBaseBinIter ; (; Bool_t ; respectAxisRange). inline . Definition at line 317 of file THnBase.h. ◆ ~THnBaseBinIter(). ROOT::Internal::THnBaseBinIter::~THnBaseBinIter ; (; ). virtual . Destruct a bin iterator. ; Definition at line 1605 of file THnBase.cxx. Member Function Documentation. ◆ GetCoord(). virtual Int_t ROOT::Internal::THnBaseBinIter::GetCoord ; (; Int_t ; dim); const. pure virtual . ◆ HaveSkippedBin(). Bool_t ROOT::Internal::THnBaseBinIter::HaveSkippedBin ; (; ); const. inline . Definition at line 320 of file THnBase.h. ◆ Next(). virtual Long64_t ROOT::Internal::THnBaseBinIter::Next ; (; Int_t * ; coord = nullptr). pure virtual . ◆ RespectsAxisRange(). Bool_t ROOT::Internal::THnBaseBinIter::RespectsAxisRange ; (; ); const. inline . Definition at line 321 of file THnBase.h. Member Data Documentation. ◆ fHaveSkippedBin. Bool_t ROOT::Internal::THnBaseBinIter::fHaveSkippedBin. protected . Definition at line 328 of file THnBase.h. ◆ fRespectAxisRange. Bool_t ROOT::Internal::THnBaseBinIter::fRespectAxisRange. protected . Definition at line 327 of file THnBase.h. Libraries for ROOT::Internal::TH,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1THnBaseBinIter.html:86,Guid,Guide,86,doc/master/classROOT_1_1Internal_1_1THnBaseBinIter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1THnBaseBinIter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::THnBaseBrowsable Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Internal::THnBaseBrowsable Class Reference. ; TBrowser helper for THnBase. ; Definition at line 300 of file THnBase.h. Public Member Functions;  THnBaseBrowsable (THnBase *hist, Int_t axis);  Construct a THnBaseBrowsable. ;  ;  ~THnBaseBrowsable () override;  Destruct a THnBaseBrowsable. ;  ; void Browse (TBrowser *b) override;  Browse an axis of a THnBase, i.e. draw its projection. ;  ; TClass * IsA () const override;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1THnBaseBrowsable.html:88,Guid,Guide,88,doc/master/classROOT_1_1Internal_1_1THnBaseBrowsable.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1THnBaseBrowsable.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Internal::TROOTAllocator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Internal::TROOTAllocator Class Reference. . Definition at line 304 of file TROOT.cxx. Public Member Functions;  TROOTAllocator ();  ;  ~TROOTAllocator ();  . Private Attributes; union { ;  ;    char   fHolder [sizeof(TROOT)] ;  ;    TROOT   fObj ;  ; };  ;  . Constructor & Destructor Documentation. ◆ TROOTAllocator(). ROOT::Internal::TROOTAllocator::TROOTAllocator ; (; ). inline . Definition at line 341 of file TROOT.cxx. ◆ ~TROOTAllocator(). ROOT::Internal::TROOTAllocator::~TROOTAllocator ; (; ). inline . Definition at line 344 of file TROOT.cxx. Member Data Documentation. ◆ [union]. union { ... } ROOT::Internal::TROOTAllocator. ◆ fHolder. char ROOT::Internal::TROOTAllocator::fHolder[sizeof(TROOT)]. Definition at line 338 of file TROOT.cxx. ◆ fObj. TROOT ROOT::Internal::TROOTAllocator::fObj. Definition at line 337 of file TROOT.cxx. core/base/src/TROOT.cxx. ROOTInternalTROOTAllocator. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:17 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TROOTAllocator.html:86,Guid,Guide,86,doc/master/classROOT_1_1Internal_1_1TROOTAllocator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TROOTAllocator.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::TSchemaType Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Internal::TSchemaType Struct Reference. . Definition at line 13 of file TSchemaType.h. Public Member Functions;  TSchemaType ()=default;  ;  TSchemaType (const char *type, const char *dim);  ;  TSchemaType (const std::string &type, const std::string &dim);  . Public Attributes; std::string fDimensions;  ; std::string fType;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/core/foundation/res/TSchemaType.h>; Constructor & Destructor Documentation. ◆ TSchemaType() [1/3]. ROOT::Internal::TSchemaType::TSchemaType ; (; ). default . ◆ TSchemaType() [2/3]. ROOT::Internal::TSchemaType::TSchemaType ; (; const char * ; type, . const char * ; dim . ). inline . Definition at line 15 of file TSchemaType.h. ◆ TSchemaType() [3/3]. ROOT::Internal::TSchemaType::TSchemaType ; (; const std::string & ; type, . const std::string & ; dim . ). inline . Definition at line 16 of file TSchemaType.h. Member Data Documentation. ◆ fDimensions. std::string ROOT::Internal::TSchemaType::fDimensions. Definition at line 18 of file TSchemaType.h. ◆ fType. std::string ROOT::Internal::TSchemaType::fType. Definition at line 17 of file TSchemaType.h. Collaboration diagram for ROOT::Internal::TSchemaType:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; core/foundation/res/TSchemaType.h. ROOTInternalTSchemaType. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:17 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Internal_1_1TSchemaType.html:84,Guid,Guide,84,doc/master/structROOT_1_1Internal_1_1TSchemaType.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Internal_1_1TSchemaType.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::TSchemaType Struct Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Internal::TSchemaType Struct Reference. . Definition at line 13 of file TSchemaType.h. Public Member Functions;  TSchemaType ()=default;  ;  TSchemaType (const char *type, const char *dim);  ;  TSchemaType (const std::string &type, const std::string &dim);  . Public Attributes; std::string fDimensions;  ; std::string fType;  . #include </home/sftnight/build/workspace/root-makedoc-v632/rootspi/rdoc/src/v6-32-00-patches/core/foundation/res/TSchemaType.h>; Constructor & Destructor Documentation. ◆ TSchemaType() [1/3]. ROOT::Internal::TSchemaType::TSchemaType ; (; ). default . ◆ TSchemaType() [2/3]. ROOT::Internal::TSchemaType::TSchemaType ; (; const char * ; type, . const char * ; dim . ). inline . Definition at line 15 of file TSchemaType.h. ◆ TSchemaType() [3/3]. ROOT::Internal::TSchemaType::TSchemaType ; (; const std::string & ; type, . const std::string & ; dim . ). inline . Definition at line 16 of file TSchemaType.h. Member Data Documentation. ◆ fDimensions. std::string ROOT::Internal::TSchemaType::fDimensions. Definition at line 18 of file TSchemaType.h. ◆ fType. std::string ROOT::Internal::TSchemaType::fType. Definition at line 17 of file TSchemaType.h. Collaboration diagram for ROOT::Internal::TSchemaType:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; core/foundation/res/TSchemaType.h. ROOTInternalTSchemaType. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:54 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/structROOT_1_1Internal_1_1TSchemaType.html:83,Guid,Guide,83,doc/v632/structROOT_1_1Internal_1_1TSchemaType.html,https://root.cern,https://root.cern/doc/v632/structROOT_1_1Internal_1_1TSchemaType.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::TTreeReaderDescriptor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Internal::TTreeReaderDescriptor Class Reference. . Definition at line 40 of file TTreeReaderGenerator.h. Public Types; enum  ReaderType { kValue; , kArray; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TTreeReaderDescriptor (ReaderType type, TString dataType, TString name, TString branchName);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TTreeReaderDescriptor.html:93,Guid,Guide,93,doc/master/classROOT_1_1Internal_1_1TTreeReaderDescriptor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TTreeReaderDescriptor.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::TreeUtils::RNoCleanupNotifier Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Internal::TreeUtils::RNoCleanupNotifier Class Reference. . Definition at line 64 of file InternalTreeUtils.hxx. Public Member Functions;  RNoCleanupNotifier ();  ; TClass * IsA () const override;  ; void RegisterChain (TChain &c);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNotifyLink< RNoCleanupNotifierHelper >;  TNotifyLink (RNoCleanupNotifierHelper *subscriber);  ; TClass * IsA () const override;  ; Bool_t Notify () override;  Call Notify on our subscriber and propagate the call to the next link. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNotifyLinkBase; void Clear (Option_t *="""") override;  ; TObject * GetNext () const;  ; TClass * IsA () const override;  ; Bool_t IsLinked ();  ; template<class Chain > ; void PrependLink (Chain &chain);  Set this link as the head of the chain's list of notify subscribers. ;  ; template<class Chain > ; void RemoveLink (Chain &chain);  Remove this link from a chain's list of notify subscribers. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstrac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TreeUtils_1_1RNoCleanupNotifier.html:101,Guid,Guide,101,doc/master/classROOT_1_1Internal_1_1TreeUtils_1_1RNoCleanupNotifier.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TreeUtils_1_1RNoCleanupNotifier.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::VecOps Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs |; Functions ; ROOT::Internal::VecOps Namespace Reference. Classes; struct  IsRVec;  ; struct  IsRVec< ROOT::VecOps::RVec< T > >;  ; struct  RVecInlineStorageSize;  The size of the inline storage of an RVec. More...;  ; struct  SmallVectorAlignmentAndSize;  Used to figure out the offset of the first element of an RVec. More...;  ; class  SmallVectorBase;  This is all the stuff common to all SmallVectors. More...;  ; struct  SmallVectorStorage;  Storage for the SmallVector elements. More...;  ; struct  SmallVectorStorage< T, 0 >;  We need the storage to be properly aligned even for small-size of 0 so that the pointer math in SmallVectorTemplateCommon::getFirstEl() is well-defined. More...;  ; class  SmallVectorTemplateBase;  SmallVectorTemplateBase<TriviallyCopyable = false> - This is where we put method implementations that are designed to work with non-trivial T's. More...;  ; class  SmallVectorTemplateBase< T, true >;  SmallVectorTemplateBase<TriviallyCopyable = true> - This is where we put method implementations that are designed to work with trivially copyable T's. More...;  ; class  SmallVectorTemplateCommon;  This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD. More...;  . Typedefs; template<typename T > ; using RVec = ROOT::VecOps::RVec< T >;  . Functions; constexpr bool All (const bool *vals, std::size_t size);  ; template<typename... T> ; std::size_t GetVectorsSize (const std::string &id, const RVec< T > &... vs);  ; template<typename Tuple_t , std::size_t... Is> ; auto MapFromTuple (Tuple_t &&t, std::index_sequence< Is... >) -> decltype(MapImpl(std::get< std::tuple_size< Tuple_t >::value - 1 >(t), std::get< Is >(t)...));  ; template<typename F , typename... RVecs> ; auto MapImpl (F &&f, RVecs &&... vs) -> RVec< decltype(f(vs[0]...))>;  ; uint64_t NextPowerOf2 (ui",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Internal_1_1VecOps.html:82,Guid,Guide,82,doc/master/namespaceROOT_1_1Internal_1_1VecOps.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Internal_1_1VecOps.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Internal::VecOps::RVecInlineStorageSize< T > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Attributes |; Static Private Attributes |; List of all members ; ROOT::Internal::VecOps::RVecInlineStorageSize< T > Struct Template Reference. ; template<typename T>; struct ROOT::Internal::VecOps::RVecInlineStorageSize< T >The size of the inline storage of an RVec. ; Our policy is to allocate at least 8 elements (or more if they all fit into one cacheline) unless the size of the buffer with 8 elements would be over a certain maximum size. ; Definition at line 512 of file RVec.hxx. Static Public Attributes; static constexpr unsigned value;  . Static Private Attributes; static constexpr std::size_t cacheLineSize = 64;  ; static constexpr unsigned elementsPerCacheLine = (cacheLineSize - sizeof(SmallVectorBase)) / sizeof(T);  ; static constexpr unsigned maxInlineByteSize = 1024;  . #include <ROOT/RVec.hxx>; Member Data Documentation. ◆ cacheLineSize. template<typename T > . constexpr std::size_t ROOT::Internal::VecOps::RVecInlineStorageSize< T >::cacheLineSize = 64. staticconstexprprivate . Definition at line 518 of file RVec.hxx. ◆ elementsPerCacheLine. template<typename T > . constexpr unsigned ROOT::Internal::VecOps::RVecInlineStorageSize< T >::elementsPerCacheLine = (cacheLineSize - sizeof(SmallVectorBase)) / sizeof(T). staticconstexprprivate . Definition at line 520 of file RVec.hxx. ◆ maxInlineByteSize. template<typename T > . constexpr unsigned ROOT::Internal::VecOps::RVecInlineStorageSize< T >::maxInlineByteSize = 1024. staticconstexprprivate . Definition at line 521 of file RVec.hxx. ◆ value. template<typename T > . constexpr unsigned ROOT::Internal::VecOps::RVecInlineStorageSize< T >::value. staticconstexpr . Initial value:=; elementsPerCacheLine >= 8 ? elementsPerCacheLine : (sizeof(T) * 8 > maxInlineByteSize ? 0 : 8); ROOT::Internal::VecOps::RVecInlineStorag,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Internal_1_1VecOps_1_1RVecInlineStorageSize.html:116,Guid,Guide,116,doc/master/structROOT_1_1Internal_1_1VecOps_1_1RVecInlineStorageSize.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Internal_1_1VecOps_1_1RVecInlineStorageSize.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::VecOps::SmallVectorBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; List of all members ; ROOT::Internal::VecOps::SmallVectorBase Class Reference. ; This is all the stuff common to all SmallVectors. ; Definition at line 138 of file RVec.hxx. Public Types; using Size_T = int32_t;  . Public Member Functions; size_t capacity () const noexcept;  ; bool empty () const;  ; void set_size (size_t N);  Set the array size to N, which the current array must have enough capacity for. ;  ; size_t size () const;  . Protected Member Functions;  SmallVectorBase ()=delete;  ;  SmallVectorBase (void *FirstEl, size_t TotalCapacity);  ; void grow_pod (void *FirstEl, size_t MinSize, size_t TSize);  This is an implementation of the grow() method which only works on POD-like data types and is out of line to reduce code duplication. ;  ; bool Owns () const;  If false, the RVec is in ""memory adoption"" mode, i.e. it is acting as a view on a memory buffer it does not own. ;  . Static Protected Member Functions; static void report_at_maximum_capacity ();  Report that this vector is already at maximum capacity. ;  ; static void report_size_overflow (size_t MinSize);  Report that MinSize doesn't fit into this vector's size type. ;  ; static constexpr size_t SizeTypeMax ();  The maximum value of the Size_T used. ;  . Protected Attributes; void * fBeginX;  ; Size_T fCapacity;  Always >= -1. fCapacity == -1 indicates the RVec is in ""memory adoption"" mode. ;  ; Size_T fSize = 0;  Always >= 0. ;  . #include <ROOT/RVec.hxx>. Inheritance diagram for ROOT::Internal::VecOps::SmallVectorBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Size_T. using ROOT::Internal::VecOps::SmallVectorBase::Si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1VecOps_1_1SmallVectorBase.html:95,Guid,Guide,95,doc/master/classROOT_1_1Internal_1_1VecOps_1_1SmallVectorBase.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1VecOps_1_1SmallVectorBase.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::VecOps::SmallVectorTemplateBase< T, bool > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; List of all members ; ROOT::Internal::VecOps::SmallVectorTemplateBase< T, bool > Class Template Reference. ; template<typename T, bool = (std::is_trivially_copy_constructible<T>::value) && (std::is_trivially_move_constructible<T>::value) && std::is_trivially_destructible<T>::value>; class ROOT::Internal::VecOps::SmallVectorTemplateBase< T, bool >SmallVectorTemplateBase<TriviallyCopyable = false> - This is where we put method implementations that are designed to work with non-trivial T's. ; We approximate is_trivially_copyable with trivial move/copy construction and trivial destruction. While the standard doesn't specify that you're allowed copy these types with memcpy, there is no way for the type to observe this. This catches the important case of std::pair<POD, POD>, which is not trivially assignable. ; Definition at line 328 of file RVec.hxx. Public Member Functions; void pop_back ();  ; void push_back (const T &Elt);  ; void push_back (T &&Elt);  ;  Public Member Functions inherited from ROOT::Internal::VecOps::SmallVectorTemplateCommon< T >; reference back ();  ; const_reference back () const;  ; const_iterator begin () const noexcept;  ; iterator begin () noexcept;  ; size_t capacity () const noexcept;  ; size_t capacity_in_bytes () const;  ; const_iterator cbegin () const noexcept;  ; const_iterator cend () const noexcept;  ; const_reverse_iterator crbegin () const noexcept;  ; const_reverse_iterator crend () const noexcept;  ; const_pointer data () const noexcept;  Return a pointer to the vector's buffer, even if empty(). ;  ; pointer data () noexcept;  Return a pointer to the vector's buffer, even if empty(). ;  ; bool empty () const;  ; const_iterator end () const noexcep",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1VecOps_1_1SmallVectorTemplateBase.html:123,Guid,Guide,123,doc/master/classROOT_1_1Internal_1_1VecOps_1_1SmallVectorTemplateBase.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1VecOps_1_1SmallVectorTemplateBase.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Internal::VecOps::SmallVectorTemplateCommon< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Types |; Private Member Functions |; List of all members ; ROOT::Internal::VecOps::SmallVectorTemplateCommon< T > Class Template Reference. ; template<typename T>; class ROOT::Internal::VecOps::SmallVectorTemplateCommon< T >This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD. ; Definition at line 206 of file RVec.hxx. Public Types; using const_iterator = const T *;  ; using const_pointer = const T *;  ; using const_reference = const T &;  ; using const_reverse_iterator = std::reverse_iterator< const_iterator >;  ; using difference_type = ptrdiff_t;  ; using iterator = T *;  ; using pointer = T *;  ; using reference = T &;  ; using reverse_iterator = std::reverse_iterator< iterator >;  ; using size_type = size_t;  ; using value_type = T;  ;  Public Types inherited from ROOT::Internal::VecOps::SmallVectorBase; using Size_T = int32_t;  . Public Member Functions; reference back ();  ; const_reference back () const;  ; const_iterator begin () const noexcept;  ; iterator begin () noexcept;  ; size_t capacity () const noexcept;  ; size_t capacity_in_bytes () const;  ; const_iterator cbegin () const noexcept;  ; const_iterator cend () const noexcept;  ; const_reverse_iterator crbegin () const noexcept;  ; const_reverse_iterator crend () const noexcept;  ; const_pointer data () const noexcept;  Return a pointer to the vector's buffer, even if empty(). ;  ; pointer data () noexcept;  Return a pointer to the vector's buffer, even if empty(). ;  ; bool empty () const;  ; const_iterator end () const noexcept;  ; iterator end () noexcept;  ; reference front ();  ; const_reference front () const;  ; size_type max_size () const noexcept;  ; const_reverse_iterator rbegin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1VecOps_1_1SmallVectorTemplateCommon.html:119,Guid,Guide,119,doc/master/classROOT_1_1Internal_1_1VecOps_1_1SmallVectorTemplateCommon.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1VecOps_1_1SmallVectorTemplateCommon.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::MacOSX Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; ROOT::MacOSX Namespace Reference. Namespaces; namespace  Details;  ; namespace  OpenGL;  ; namespace  Util;  ; namespace  X11;  . ROOTMacOSX. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:18 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1MacOSX.html:72,Guid,Guide,72,doc/master/namespaceROOT_1_1MacOSX.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1MacOSX.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::MacOSX Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; ROOT::MacOSX Namespace Reference. Namespaces; namespace  Details;  ; namespace  OpenGL;  ; namespace  Util;  ; namespace  X11;  . ROOTMacOSX. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:55 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1MacOSX.html:71,Guid,Guide,71,doc/v632/namespaceROOT_1_1MacOSX.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1MacOSX.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT::Math Namespace Reference. Namespaces; namespace  Blas;  ; namespace  BrentMethods;  ; namespace  Cephes;  ; namespace  Chebyshev;  template recursive functions for defining evaluation of Chebyshev polynomials T_n(x) and the series S(x) = Sum_i c_i* T_i(x) ;  ; namespace  CholeskyDecompHelpers;  helpers for CholeskyDecomp ;  ; namespace  detail;  ; namespace  GenAlgoOptUtil;  ; namespace  GenVector;  ; namespace  GenVector_detail;  ; namespace  GSLRootHelper;  Helper functions to test convergence of Root-Finding algorithms. ;  ; namespace  GSLSimAn;  ; namespace  gv_detail;  ; namespace  Impl;  ; namespace  IntegMultiDim;  ; namespace  IntegOneDim;  ; namespace  IntegOptionsUtil;  ; namespace  Integration;  ; namespace  IntegrationMultiDim;  ; namespace  IntegrationOneDim;  ; namespace  Internal;  ; namespace  internal;  ; namespace  Interpolation;  ; namespace  MCIntegration;  ; namespace  Minim;  ; namespace  Minim1D;  ; namespace  Roots;  Root-Finding Algorithms. ;  ; namespace  rowOffsetsUtils;  ; namespace  Sampler;  ; namespace  Util;  namespace defining Utility functions needed by mathcore ;  ; namespace  VectorUtil;  Global Helper functions for generic Vector classes. ;  . Classes; class  AdaptiveIntegratorMultiDim;  Class for adaptive quadrature integration in multi-dimensions using rectangular regions. More...;  ; class  AddOp;  Addition Operation Class. More...;  ; struct  AddPolicy;  matrix addition policy More...;  ; struct  AddPolicy< T, D1, D2, MatRepSym< T, D1 >, MatRepSym< T, D1 > >;  ; struct  Assign;  Structure to assign from an expression based to general matrix to general matrix. More...;  ; struct  Assign< T, D1, D2, A, MatRepSym< T, D1 >, MatRepStd< T, D1, D2 > >;  Dummy Structure which flags an error to avoid assignment from expression based o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math.html:70,Guid,Guide,70,doc/master/namespaceROOT_1_1Math.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT::Math Namespace Reference. Namespaces; namespace  Blas;  ; namespace  BrentMethods;  ; namespace  Cephes;  ; namespace  Chebyshev;  template recursive functions for defining evaluation of Chebyshev polynomials T_n(x) and the series S(x) = Sum_i c_i* T_i(x) ;  ; namespace  CholeskyDecompHelpers;  helpers for CholeskyDecomp ;  ; namespace  detail;  ; namespace  GenAlgoOptUtil;  ; namespace  GenVector;  ; namespace  GenVector_detail;  ; namespace  GSLRootHelper;  Helper functions to test convergence of Root-Finding algorithms. ;  ; namespace  GSLSimAn;  ; namespace  gv_detail;  ; namespace  Impl;  ; namespace  IntegMultiDim;  ; namespace  IntegOneDim;  ; namespace  IntegOptionsUtil;  ; namespace  Integration;  ; namespace  IntegrationMultiDim;  ; namespace  IntegrationOneDim;  ; namespace  Internal;  ; namespace  internal;  ; namespace  Interpolation;  ; namespace  MCIntegration;  ; namespace  Minim;  ; namespace  Minim1D;  ; namespace  Roots;  Root-Finding Algorithms. ;  ; namespace  rowOffsetsUtils;  ; namespace  Sampler;  ; namespace  Util;  namespace defining Utility functions needed by mathcore ;  ; namespace  VectorUtil;  Global Helper functions for generic Vector classes. ;  . Classes; class  AdaptiveIntegratorMultiDim;  Class for adaptive quadrature integration in multi-dimensions using rectangular regions. More...;  ; class  AddOp;  Addition Operation Class. More...;  ; struct  AddPolicy;  matrix addition policy More...;  ; struct  AddPolicy< T, D1, D2, MatRepSym< T, D1 >, MatRepSym< T, D1 > >;  ; struct  Assign;  Structure to assign from an expression based to general matrix to general matrix. More...;  ; struct  Assign< T, D1, D2, A, MatRepSym< T, D1 >, MatRepStd< T, D1, D2 > >;  Dummy Structure which flags an error to avoid assignment from expression based on",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Math.html:69,Guid,Guide,69,doc/v632/namespaceROOT_1_1Math.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Math.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::AdaptiveIntegratorMultiDim Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::AdaptiveIntegratorMultiDim Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; Class for adaptive quadrature integration in multi-dimensions using rectangular regions. ; Algorithm from A.C. Genz, A.A. Malik, An adaptive algorithm for numerical integration over an N-dimensional rectangular region, J. Comput. Appl. Math. 6 (1980) 295-302.; Converted/adapted by R.Brun to C++ from Fortran CERNLIB routine RADMUL (D120) The new code features many changes compared to the Fortran version.; Control parameters are:. \( minpts \): Minimum number of function evaluations requested. Must not exceed maxpts. if minpts < 1 minpts is set to \( 2^n +2n(n+1) +1 \) where n is the function dimension; \( maxpts \): Maximum number of function evaluations to be allowed. \( maxpts >= 2^n +2n(n+1) +1 \) if \( maxpts<minpts \), \( maxpts \) is set to \( 10minpts \); \( epstol \), \( epsrel \) : Specified relative and absolute accuracy. The integral will stop if the relative error is less than relative tolerance OR the absolute error is less than the absolute tolerance; The class computes in addition to the integral of the function in the desired interval:. an estimation of the relative accuracy of the result.; number of function evaluations performed.; status code: 0. Normal exit. . At least minpts and at most maxpts calls to the function were performed.; maxpts is too small for the specified accuracy eps. The result and relerr contain the values obtainable for the specified value of maxpts.; size is too small for the specified number MAXPTS of function evaluations.; n<2 or n>15. Method:; An integration rule of degree seven is used together with a certain strategy of subdi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1AdaptiveIntegratorMultiDim.html:94,Guid,Guide,94,doc/master/classROOT_1_1Math_1_1AdaptiveIntegratorMultiDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1AdaptiveIntegratorMultiDim.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::AddOp< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::AddOp< T > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class T>; class ROOT::Math::AddOp< T >Addition Operation Class. ; Definition at line 43 of file BinaryOperators.h. Static Public Member Functions; static T apply (const T &lhs, const T &rhs);  . #include <Math/BinaryOperators.h>; Member Function Documentation. ◆ apply(). template<class T > . static T ROOT::Math::AddOp< T >::apply ; (; const T & ; lhs, . const T & ; rhs . ). inlinestatic . Definition at line 45 of file BinaryOperators.h. The documentation for this class was generated from the following file:; math/smatrix/inc/Math/BinaryOperators.h. ROOTMathAddOp. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1AddOp.html:87,Guid,Guide,87,doc/master/classROOT_1_1Math_1_1AddOp.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1AddOp.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::AddPolicy< T, D1, D2, MatRepSym< T, D1 >, MatRepSym< T, D1 > > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; List of all members ; ROOT::Math::AddPolicy< T, D1, D2, MatRepSym< T, D1 >, MatRepSym< T, D1 > > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2>; struct ROOT::Math::AddPolicy< T, D1, D2, MatRepSym< T, D1 >, MatRepSym< T, D1 > >; Definition at line 54 of file BinaryOpPolicy.h. Public Types; typedef MatRepSym< T, D1 > RepType;  . #include <Math/BinaryOpPolicy.h>; Member Typedef Documentation. ◆ RepType. template<class T , unsigned int D1, unsigned int D2> . typedef MatRepSym<T,D1> ROOT::Math::AddPolicy< T, D1, D2, MatRepSym< T, D1 >, MatRepSym< T, D1 > >::RepType. Definition at line 56 of file BinaryOpPolicy.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/BinaryOpPolicy.h. ROOTMathAddPolicy< T, D1, D2, MatRepSym< T, D1 >, MatRepSym< T, D1 > >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1AddPolicy_3_01T_00_01D1_00_01D2_00_01MatRepSym_3_01T_00_01D1_01_4_00_01MatRepSym_3_01T_00_01D1_01_4_01_4.html:140,Guid,Guide,140,doc/master/structROOT_1_1Math_1_1AddPolicy_3_01T_00_01D1_00_01D2_00_01MatRepSym_3_01T_00_01D1_01_4_00_01MatRepSym_3_01T_00_01D1_01_4_01_4.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1AddPolicy_3_01T_00_01D1_00_01D2_00_01MatRepSym_3_01T_00_01D1_01_4_00_01MatRepSym_3_01T_00_01D1_01_4_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::AddPolicy< T, D1, D2, R1, R2 > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; List of all members ; ROOT::Math::AddPolicy< T, D1, D2, R1, R2 > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, class R1, class R2>; struct ROOT::Math::AddPolicy< T, D1, D2, R1, R2 >matrix addition policy ; Definition at line 44 of file BinaryOpPolicy.h. Public Types; enum  { N1 = R1::kRows; , N2 = R1::kCols; };  ; typedef MatRepStd< typename R1::value_type, N1, N2 > RepType;  . #include <Math/BinaryOpPolicy.h>; Member Typedef Documentation. ◆ RepType. template<class T , unsigned int D1, unsigned int D2, class R1 , class R2 > . typedef MatRepStd<typename R1::value_type, N1, N2 > ROOT::Math::AddPolicy< T, D1, D2, R1, R2 >::RepType. Definition at line 50 of file BinaryOpPolicy.h. Member Enumeration Documentation. ◆ anonymous enum. template<class T , unsigned int D1, unsigned int D2, class R1 , class R2 > . anonymous enum. EnumeratorN1 ; N2 . Definition at line 46 of file BinaryOpPolicy.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/BinaryOpPolicy.h. ROOTMathAddPolicy. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1AddPolicy.html:108,Guid,Guide,108,doc/master/structROOT_1_1Math_1_1AddPolicy.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1AddPolicy.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Assign< T, D1, D2, A, MatRepSym< T, D1 >, MatRepStd< T, D1, D2 > > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::Assign< T, D1, D2, A, MatRepSym< T, D1 >, MatRepStd< T, D1, D2 > > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, class A>; struct ROOT::Math::Assign< T, D1, D2, A, MatRepSym< T, D1 >, MatRepStd< T, D1, D2 > >Dummy Structure which flags an error to avoid assignment from expression based on a general matrix to a symmetric matrix. ; Definition at line 131 of file HelperOps.h. Static Public Member Functions; static void Evaluate (SMatrix< T, D1, D2, MatRepSym< T, D1 > > &, const Expr< A, T, D1, D2, MatRepStd< T, D1, D2 > > &);  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, class A > . static void ROOT::Math::Assign< T, D1, D2, A, MatRepSym< T, D1 >, MatRepStd< T, D1, D2 > >::Evaluate ; (; SMatrix< T, D1, D2, MatRepSym< T, D1 > > & ; , . const Expr< A, T, D1, D2, MatRepStd< T, D1, D2 > > & ;  . ). inlinestatic . Definition at line 133 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathAssign< T, D1, D2, A, MatRepSym< T, D1 >, MatRepStd< T, D1, D2 > >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1Assign_3_01T_00_01D1_00_01D2_00_01A_00_01MatRepSym_3_01T_00_01D1_01_4_00_062d5e865199fb0af80bca6cc0f9059e9.html:144,Guid,Guide,144,doc/master/structROOT_1_1Math_1_1Assign_3_01T_00_01D1_00_01D2_00_01A_00_01MatRepSym_3_01T_00_01D1_01_4_00_062d5e865199fb0af80bca6cc0f9059e9.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1Assign_3_01T_00_01D1_00_01D2_00_01A_00_01MatRepSym_3_01T_00_01D1_01_4_00_062d5e865199fb0af80bca6cc0f9059e9.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Assign< T, D1, D2, A, MatRepSym< T, D1 >, MatRepSym< T, D1 > > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::Assign< T, D1, D2, A, MatRepSym< T, D1 >, MatRepSym< T, D1 > > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, class A>; struct ROOT::Math::Assign< T, D1, D2, A, MatRepSym< T, D1 >, MatRepSym< T, D1 > >Structure to assign from an expression based to symmetric matrix to symmetric matrix. ; Definition at line 90 of file HelperOps.h. Static Public Member Functions; static void Evaluate (SMatrix< T, D1, D2, MatRepSym< T, D1 > > &lhs, const Expr< A, T, D1, D2, MatRepSym< T, D1 > > &rhs);  Evaluate the expression from symmetric to symmetric matrices. ;  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, class A > . static void ROOT::Math::Assign< T, D1, D2, A, MatRepSym< T, D1 >, MatRepSym< T, D1 > >::Evaluate ; (; SMatrix< T, D1, D2, MatRepSym< T, D1 > > & ; lhs, . const Expr< A, T, D1, D2, MatRepSym< T, D1 > > & ; rhs . ). inlinestatic . Evaluate the expression from symmetric to symmetric matrices. ; If the matrix to assign the value is in use in the expression, a temporary object is created to store the value (case A = B * A) ; Definition at line 97 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathAssign< T, D1, D2, A, MatRepSym< T, D1 >, MatRepSym< T, D1 > >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1Assign_3_01T_00_01D1_00_01D2_00_01A_00_01MatRepSym_3_01T_00_01D1_01_4_00_054dbbaaf0c256c88d97ac554e861d795.html:140,Guid,Guide,140,doc/master/structROOT_1_1Math_1_1Assign_3_01T_00_01D1_00_01D2_00_01A_00_01MatRepSym_3_01T_00_01D1_01_4_00_054dbbaaf0c256c88d97ac554e861d795.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1Assign_3_01T_00_01D1_00_01D2_00_01A_00_01MatRepSym_3_01T_00_01D1_01_4_00_054dbbaaf0c256c88d97ac554e861d795.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Assign< T, D1, D2, A, R1, R2 > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::Assign< T, D1, D2, A, R1, R2 > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, class A, class R1, class R2>; struct ROOT::Math::Assign< T, D1, D2, A, R1, R2 >Structure to assign from an expression based to general matrix to general matrix. ; Definition at line 48 of file HelperOps.h. Static Public Member Functions; static void Evaluate (SMatrix< T, D1, D2, R1 > &lhs, const Expr< A, T, D1, D2, R2 > &rhs);  Evaluate the expression from general to general matrices. ;  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, class A , class R1 , class R2 > . static void ROOT::Math::Assign< T, D1, D2, A, R1, R2 >::Evaluate ; (; SMatrix< T, D1, D2, R1 > & ; lhs, . const Expr< A, T, D1, D2, R2 > & ; rhs . ). inlinestatic . Evaluate the expression from general to general matrices. ; If the matrix to assign the value is in use in the expression, a temporary object is created to store the value (case A = B * A) ; Definition at line 55 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathAssign. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1Assign.html:108,Guid,Guide,108,doc/master/structROOT_1_1Math_1_1Assign.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1Assign.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::AssignItr< T, D1, D2, MatRepSym< T, D1 > > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::AssignItr< T, D1, D2, MatRepSym< T, D1 > > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2>; struct ROOT::Math::AssignItr< T, D1, D2, MatRepSym< T, D1 > >Specialized structure for assignment to a symmetrix matrix from iterator. ; Optionally a check is done that iterator size is the same as the matrix size ; Definition at line 560 of file HelperOps.h. Static Public Member Functions; template<class Iterator > ; static void Evaluate (SMatrix< T, D1, D2, MatRepSym< T, D1 > > &lhs, Iterator begin, Iterator end, bool, bool lower, bool check=true);  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2> . template<class Iterator > . static void ROOT::Math::AssignItr< T, D1, D2, MatRepSym< T, D1 > >::Evaluate ; (; SMatrix< T, D1, D2, MatRepSym< T, D1 > > & ; lhs, . Iterator ; begin, . Iterator ; end, . bool ; , . bool ; lower, . bool ; check = true . ). inlinestatic . Definition at line 562 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathAssignItr< T, D1, D2, MatRepSym< T, D1 > >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1AssignItr_3_01T_00_01D1_00_01D2_00_01MatRepSym_3_01T_00_01D1_01_4_01_4.html:120,Guid,Guide,120,doc/master/structROOT_1_1Math_1_1AssignItr_3_01T_00_01D1_00_01D2_00_01MatRepSym_3_01T_00_01D1_01_4_01_4.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1AssignItr_3_01T_00_01D1_00_01D2_00_01MatRepSym_3_01T_00_01D1_01_4_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::AssignItr< T, D1, D2, R > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::AssignItr< T, D1, D2, R > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, class R>; struct ROOT::Math::AssignItr< T, D1, D2, R >Structure for assignment to a general matrix from iterator. ; Optionally a check is done that iterator size is not larger than matrix size ; Definition at line 517 of file HelperOps.h. Static Public Member Functions; template<class Iterator > ; static void Evaluate (SMatrix< T, D1, D2, R > &lhs, Iterator begin, Iterator end, bool triang, bool lower, bool check=true);  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, class R > . template<class Iterator > . static void ROOT::Math::AssignItr< T, D1, D2, R >::Evaluate ; (; SMatrix< T, D1, D2, R > & ; lhs, . Iterator ; begin, . Iterator ; end, . bool ; triang, . bool ; lower, . bool ; check = true . ). inlinestatic . Definition at line 519 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathAssignItr. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1AssignItr.html:103,Guid,Guide,103,doc/master/structROOT_1_1Math_1_1AssignItr.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1AssignItr.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::AssignSym Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::AssignSym Struct Reference. ; Force Expression evaluation from general to symmetric. ; To be used when is known (like in similarity products) that the result is symmetric Note this is function used in the simmilarity product: no check for temporary is done since in that case is not needed ; Definition at line 149 of file HelperOps.h. Static Public Member Functions; template<class T , unsigned int D, class A , class R > ; static void Evaluate (SMatrix< T, D, D, MatRepSym< T, D > > &lhs, const Expr< A, T, D, D, R > &rhs);  assign a symmetric matrix from an expression ;  ; template<class T , unsigned int D, class R > ; static void Evaluate (SMatrix< T, D, D, MatRepSym< T, D > > &lhs, const SMatrix< T, D, D, R > &rhs);  assign the symmetric matric from a general matrix ;  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate() [1/2]. template<class T , unsigned int D, class A , class R > . static void ROOT::Math::AssignSym::Evaluate ; (; SMatrix< T, D, D, MatRepSym< T, D > > & ; lhs, . const Expr< A, T, D, D, R > & ; rhs . ). inlinestatic . assign a symmetric matrix from an expression ; Definition at line 156 of file HelperOps.h. ◆ Evaluate() [2/2]. template<class T , unsigned int D, class R > . static void ROOT::Math::AssignSym::Evaluate ; (; SMatrix< T, D, D, MatRepSym< T, D > > & ; lhs, . const SMatrix< T, D, D, R > & ; rhs . ). inlinestatic . assign the symmetric matric from a general matrix ; Definition at line 171 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathAssignSym. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1AssignSym.html:78,Guid,Guide,78,doc/master/structROOT_1_1Math_1_1AssignSym.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1AssignSym.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::AxisAngle Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::AxisAngle Class ReferenceMath » Physics Vectors. ; AxisAngle class describing rotation represented with direction axis (3D Vector) and an angle of rotation around that axis. ; See alsoOverview of the physics vector library ; Definition at line 42 of file AxisAngle.h. Public Types; typedef DisplacementVector3D< Cartesian3D< Scalar > > AxisVector;  definition of vector axis ;  ; typedef double Scalar;  ; typedef DisplacementVector3D< Cartesian3D< double >, DefaultCoordinateSystemTag > XYZVector;  Rotation operation on a cartesian vector. ;  . Public Member Functions;  AxisAngle ();  Default constructor (axis is z and angle is zero) ;  ; template<class AnyVector > ;  AxisAngle (const AnyVector &v, Scalar angle);  Construct from a non-zero vector (x,y,z) and an angle. ;  ; template<class OtherRotation > ; constexpr AxisAngle (const OtherRotation &r);  Construct from another supported rotation type (see gv_detail::convert ) ;  ; template<class IT > ;  AxisAngle (IT begin, IT end);  Construct given a pair of pointers or iterators defining the beginning and end of an array of four Scalars, to be treated as the x, y, and z components of a unit axis vector, and the angle of rotation. ;  ; Scalar Angle () const;  access to rotation angle ;  ; AxisVector Axis () const;  access to rotation axis ;  ; template<class R > ; Scalar Distance (const R &r) const;  Distance between two rotations. ;  ; template<class AnyVector > ; void GetComponents (AnyVector &axis, Scalar &angle) const;  Set components into a non-zero vector (x,y,z) and an angle. ;  ; template<class IT > ; void GetComponents (IT begin) const;  Get the axis and then the angle into data specified by an iterator beg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1AxisAngle.html:77,Guid,Guide,77,doc/master/classROOT_1_1Math_1_1AxisAngle.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1AxisAngle.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::BaseIntegratorOptions Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; ROOT::Math::BaseIntegratorOptions Class ReferenceabstractMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; Base class for Numerical integration options common in 1D and multi-dimension This is an internal class and is not supposed to be instantiated by the user. ; Definition at line 35 of file IntegratorOptions.h. Public Member Functions;  BaseIntegratorOptions (const BaseIntegratorOptions &opt);  ; virtual ~BaseIntegratorOptions ();  protected constructor to avoid user creating this class ;  ; double AbsTolerance () const;  non-static methods for retrieving options ;  ; IOptions * ExtraOptions () const;  return extra options ;  ; virtual std::string Integrator () const =0;  name of 1D integrator ;  ; BaseIntegratorOptions & operator= (const BaseIntegratorOptions &opt);  assignment operators ;  ; double RelTolerance () const;  absolute tolerance ;  ; void SetAbsTolerance (double tol);  non-static methods for setting options ;  ; void SetExtraOptions (const IOptions &opt);  set extra options (in this case pointer is cloned) ;  ; void SetRelTolerance (double tol);  set the relative tolerance ;  ; void SetWKSize (unsigned int size);  set workspace size ;  ; unsigned int WKSize () const;  size of the workspace ;  . Protected Member Functions;  BaseIntegratorOptions ();  protected constructor to avoid user creating this class ;  ; void ClearExtra ();  . Protected Attributes; double fAbsTolerance;  absolute tolerance ;  ; ROOT::Math::IOptions * fExtraOptions;  ; int fIntegType;  Integrator type (value converted from enum) ;  ; unsigned int fNCalls;  (max) function calls ;  ; double fRelTolerance;  relative tolerance ;  ; unsigned int fWKSize;  workspace size ;  . #include <Math/,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BaseIntegratorOptions.html:89,Guid,Guide,89,doc/master/classROOT_1_1Math_1_1BaseIntegratorOptions.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BaseIntegratorOptions.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::BasicFitMethodFunction< FunctionType > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::BasicFitMethodFunction< FunctionType > Class Template ReferenceabstractMath » MathCore » Fitting and Parameter Estimation » Fit Method Classes. ; template<class FunctionType>; class ROOT::Math::BasicFitMethodFunction< FunctionType >FitMethodFunction class Interface for objective functions (like chi2 and likelihood used in the fit) In addition to normal function interface provide interface for calculating each data contribution to the function which is required by some algorithm (like Fumili) ; Definition at line 38 of file FitMethodFunction.h. Public Types; typedef FunctionType::BaseFunc BaseFunction;  ; enum  Type_t { kUndefined = 0; , kLeastSquare; , kLogLikelihood; , kPoissonLikelihood; };  enumeration specifying the possible fit method types More...;  . Public Member Functions;  BasicFitMethodFunction (int dim, int npoint);  ;  ~BasicFitMethodFunction () override;  Virtual Destructor (no operations) ;  ; virtual double DataElement (const double *x, unsigned int i, double *g=nullptr, double *h=nullptr, bool fullHessian=false) const =0;  method returning the data i-th contribution to the fit objective function For example the residual for the least square functions or the pdf element for the likelihood functions. ;  ; virtual bool G2 (const double *, double *) const;  Computes the Second derivatives. ;  ; virtual bool HasHessian () const;  ; virtual bool Hessian (const double *x, double *hess) const;  Computes the full Hessian. ;  ; bool IsAGradFCN ();  ; virtual unsigned int NCalls () const;  return the total number of function calls (override if needed) ;  ; unsigned int NDim () const override;  Number of dimension (parameters) . ;  ; virtual unsi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicFitMethodFunction.html:115,Guid,Guide,115,doc/master/classROOT_1_1Math_1_1BasicFitMethodFunction.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicFitMethodFunction.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::BasicMinimizer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::BasicMinimizer Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; Base Minimizer class, which defines the basic functionality of various minimizer implementations (apart from Minuit and Minuit2) It provides support for storing parameter values, step size, parameter transformation etc. ; . in case real minimizer implementations do not provide such functionality. This is an internal class and should not be used directly by the user ; Definition at line 54 of file BasicMinimizer.h. Public Member Functions;  BasicMinimizer ();  Default constructor. ;  ;  ~BasicMinimizer () override;  Destructor. ;  ; bool FixVariable (unsigned int ivar) override;  fix an existing variable ;  ; bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &varObj) const override;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; const ROOT::Math::IMultiGradFunction * GradObjFunction () const;  return pointer to used gradient object function (NULL if gradient is not supported) ;  ; bool IsFixedVariable (unsigned int ivar) const override;  query if an existing variable is fixed (i.e. ;  ; bool Minimize () override;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NDim () const override;  number of dimensions ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) ;  ; virtual unsigned int NPar () const;  total number of parameter defined ;  ; const ROOT::Math::IMultiGenFunction * ObjFunction () const;  return pointer to used objective function ;  ; void PrintResult () const;  print result of minimization ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html:82,Guid,Guide,82,doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::BinaryOp< Operator, LHS, RHS, T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Math::BinaryOp< Operator, LHS, RHS, T > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class Operator, class LHS, class RHS, class T>; class ROOT::Math::BinaryOp< Operator, LHS, RHS, T >BinaryOperation class A class representing binary operators in the parse tree. ; This is the default case where objects are kept by reference; AuthorT. Glebe ; Definition at line 234 of file Expression.h. Public Member Functions;  BinaryOp (Operator, const LHS &lhs, const RHS &rhs);  ;  ~BinaryOp ();  ; T apply (unsigned int i) const;  ; bool IsInUse (const T *p) const;  ; T operator() (unsigned int i, unsigned int j) const;  . Protected Attributes; const LHS & lhs_;  ; const RHS & rhs_;  . #include <Math/Expression.h>; Constructor & Destructor Documentation. ◆ BinaryOp(). template<class Operator , class LHS , class RHS , class T > . ROOT::Math::BinaryOp< Operator, LHS, RHS, T >::BinaryOp ; (; Operator ; , . const LHS & ; lhs, . const RHS & ; rhs . ). inline . Definition at line 237 of file Expression.h. ◆ ~BinaryOp(). template<class Operator , class LHS , class RHS , class T > . ROOT::Math::BinaryOp< Operator, LHS, RHS, T >::~BinaryOp ; (; ). inline . Definition at line 241 of file Expression.h. Member Function Documentation. ◆ apply(). template<class Operator , class LHS , class RHS , class T > . T ROOT::Math::BinaryOp< Operator, LHS, RHS, T >::apply ; (; unsigned int ; i); const. inline . Definition at line 244 of file Expression.h. ◆ IsInUse(). template<class Operator , class LHS , class RHS , class T > . bool ROOT::Math::BinaryOp< Operator, LHS, RHS, T >::IsInUse ; (; const T * ; p); const. inline . Definition at line 251 of file Expression.h. ◆ operator()(). template<class Operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BinaryOp.html:110,Guid,Guide,110,doc/master/classROOT_1_1Math_1_1BinaryOp.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BinaryOp.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::BinaryOpCopyL< Operator, LHS, RHS, T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Math::BinaryOpCopyL< Operator, LHS, RHS, T > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class Operator, class LHS, class RHS, class T>; class ROOT::Math::BinaryOpCopyL< Operator, LHS, RHS, T >Binary Operation class with value storage for the left argument. ; Special case of BinaryOp where for the left argument the passed object is copied and stored by value instead of a reference. This is used in the case of operations involving a constant, where we cannot store a reference to the constant (we get a temporary object) and we need to copy it. ; Definition at line 277 of file Expression.h. Public Member Functions;  BinaryOpCopyL (Operator, const LHS &lhs, const RHS &rhs);  ;  ~BinaryOpCopyL ();  ; T apply (unsigned int i) const;  ; bool IsInUse (const T *p) const;  ; T operator() (unsigned int i, unsigned int j) const;  . Protected Attributes; const LHS lhs_;  ; const RHS & rhs_;  . #include <Math/Expression.h>; Constructor & Destructor Documentation. ◆ BinaryOpCopyL(). template<class Operator , class LHS , class RHS , class T > . ROOT::Math::BinaryOpCopyL< Operator, LHS, RHS, T >::BinaryOpCopyL ; (; Operator ; , . const LHS & ; lhs, . const RHS & ; rhs . ). inline . Definition at line 280 of file Expression.h. ◆ ~BinaryOpCopyL(). template<class Operator , class LHS , class RHS , class T > . ROOT::Math::BinaryOpCopyL< Operator, LHS, RHS, T >::~BinaryOpCopyL ; (; ). inline . Definition at line 284 of file Expression.h. Member Function Documentation. ◆ apply(). template<class Operator , class LHS , class RHS , class T > . T ROOT::Math::BinaryOpCopyL< Operator, LHS, RHS, T >::apply ; (; unsigned int ; i); const. inline . Definition at line 287 of file Expression.h.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BinaryOpCopyL.html:115,Guid,Guide,115,doc/master/classROOT_1_1Math_1_1BinaryOpCopyL.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BinaryOpCopyL.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::BinaryOpCopyR< Operator, LHS, RHS, T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Math::BinaryOpCopyR< Operator, LHS, RHS, T > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class Operator, class LHS, class RHS, class T>; class ROOT::Math::BinaryOpCopyR< Operator, LHS, RHS, T >Binary Operation class with value storage for the right argument. ; Special case of BinaryOp where for the wight argument a copy is stored instead of a reference This is use in the case for example of constant where we cannot store by reference but need to copy since Constant is a temporary object ; Definition at line 318 of file Expression.h. Public Member Functions;  BinaryOpCopyR (Operator, const LHS &lhs, const RHS &rhs);  ;  ~BinaryOpCopyR ();  ; T apply (unsigned int i) const;  ; bool IsInUse (const T *p) const;  ; T operator() (unsigned int i, unsigned int j) const;  . Protected Attributes; const LHS & lhs_;  ; const RHS rhs_;  . #include <Math/Expression.h>; Constructor & Destructor Documentation. ◆ BinaryOpCopyR(). template<class Operator , class LHS , class RHS , class T > . ROOT::Math::BinaryOpCopyR< Operator, LHS, RHS, T >::BinaryOpCopyR ; (; Operator ; , . const LHS & ; lhs, . const RHS & ; rhs . ). inline . Definition at line 321 of file Expression.h. ◆ ~BinaryOpCopyR(). template<class Operator , class LHS , class RHS , class T > . ROOT::Math::BinaryOpCopyR< Operator, LHS, RHS, T >::~BinaryOpCopyR ; (; ). inline . Definition at line 325 of file Expression.h. Member Function Documentation. ◆ apply(). template<class Operator , class LHS , class RHS , class T > . T ROOT::Math::BinaryOpCopyR< Operator, LHS, RHS, T >::apply ; (; unsigned int ; i); const. inline . Definition at line 328 of file Expression.h. ◆ IsInUse(). template<class Operator , class LHS , clas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BinaryOpCopyR.html:115,Guid,Guide,115,doc/master/classROOT_1_1Math_1_1BinaryOpCopyR.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BinaryOpCopyR.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Blas Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; ROOT::Math::Blas Namespace Reference. Functions; void AMultB (int n, int m, int k, const double *A, const double *B, double *C);  ; void ATMultB (int n, int m, int k, const double *A, const double *B, double *C);  . Function Documentation. ◆ AMultB(). void ROOT::Math::Blas::AMultB ; (; int ; n, . int ; m, . int ; k, . const double * ; A, . const double * ; B, . double * ; C . ). Definition at line 11 of file cblas.cxx. ◆ ATMultB(). void ROOT::Math::Blas::ATMultB ; (; int ; n, . int ; m, . int ; k, . const double * ; A, . const double * ; B, . double * ; C . ). Definition at line 15 of file cblas.cxx. ROOTMathBlas. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:24 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Blas.html:76,Guid,Guide,76,doc/master/namespaceROOT_1_1Math_1_1Blas.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Blas.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Boost Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::Boost Class ReferenceMath » Physics Vectors. ; Lorentz boost class with the (4D) transformation represented internally by a 4x4 orthosymplectic matrix. ; A variable names bgamma appears in several places in this file.; See also BoostX, BoostY and BoostZ for classes representing specialized Lorentz boosts. Also, the 3-D rotation classes can be considered to be special Lorentz transformations which do not mix space and time components.; See alsoOverview of the physics vector library; A few words of elaboration are needed to make its meaning clear. On page 69 of Misner, Thorne and Wheeler, (Exercise 2.7) the elements of the matrix for a general Lorentz boost are given as. \[ \Lambda^{j'}_k = \Lambda^{k'}_j; = (\gamma - 1) n^j n^k + \delta^{jk} \]. where the n^i are unit vectors in the direction of the three spatial axes. Using the definitions, \( n^i = \beta_i/\beta \) , then, for example,. \[ \Lambda_{xy} = (\gamma - 1) n_x n_y; = (\gamma - 1) \beta_x \beta_y/\beta^2 \]. By definition, ; \[ \gamma^2 = 1/(1 - \beta^2) \]. so that ; \[ \gamma^2 \beta^2 = \gamma^2 - 1 \]. or ; \[ \beta^2 = (\gamma^2 - 1)/\gamma^2 \]. If we insert this into the expression for \( \Lambda_{xy} \), we get. \[ \Lambda_{xy} = (\gamma - 1) \gamma^2/(\gamma^2 - 1) \beta_x \beta_y \]. or, finally. \[ \Lambda_{xy} = \gamma^2/(\gamma+1) \beta_x \beta_y \]. The expression \( \gamma^2/(\gamma+1) \) is what we call bgamma in the code below. ; Definition at line 47 of file Boost.h. Public Types; enum  EBoostMatrixIndex { ;   kXX = 0; , kXY = 1; , kXZ = 2; , kXT = 3; , ;   kYY = 4; , kYZ = 5; , kYT = 6; , kZZ = 7; , ;   kZT = 8; , kTT = 9. };  ; enum  ELorentzRotationMatrixIndex { ;   kLXX = 0; , kLXY = 1; , kLXZ = 2; , kLXT = 3; , ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Boost.html:73,Guid,Guide,73,doc/master/classROOT_1_1Math_1_1Boost.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Boost.html,2,"['Guid', 'clear']","['Guide', 'clear']"
Usability,". ROOT: ROOT::Math::BoostX Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::BoostX Class ReferenceMath » Physics Vectors. ; Class representing a Lorentz Boost along the X axis, by beta. ; For efficiency, gamma is held as well.; See alsoOverview of the physics vector library ; Definition at line 39 of file BoostX.h. Public Types; enum  EBoostMatrixIndex { ;   kXX = 0; , kXY = 1; , kXZ = 2; , kXT = 3; , ;   kYY = 4; , kYZ = 5; , kYT = 6; , kZZ = 7; , ;   kZT = 8; , kTT = 9. };  ; enum  ELorentzRotationMatrixIndex { ;   kLXX = 0; , kLXY = 1; , kLXZ = 2; , kLXT = 3; , ;   kLYX = 4; , kLYY = 5; , kLYZ = 6; , kLYT = 7; , ;   kLZX = 8; , kLZY = 9; , kLZZ = 10; , kLZT = 11; , ;   kLTX = 12; , kLTY = 13; , kLTZ = 14; , kLTT = 15. };  ; typedef double Scalar;  ; typedef DisplacementVector3D< Cartesian3D< double >, DefaultCoordinateSystemTag > XYZVector;  The beta vector for this boost. ;  . Public Member Functions;  BoostX ();  Default constructor (identity transformation) ;  ;  BoostX (Scalar beta_x);  Construct given a Scalar beta_x. ;  ; Scalar Beta () const;  Retrieve the beta of the Boost. ;  ; XYZVector BetaVector () const;  ; Scalar Gamma () const;  Retrieve the gamma of the Boost. ;  ; void GetComponents (Scalar &beta_x) const;  Get components into a Scalar beta_x. ;  ; void GetLorentzRotation (Scalar r[]) const;  Get elements of internal 4x4 symmetric representation, into a data array suitable for direct use as the components of a LorentzRotation Note – 16 Scalars will be written into the array; if the array is not that large, then this will lead to undefined behavior. ;  ; BoostX Inverse () const;  Return inverse of a boost. ;  ; void Invert ();  Invert a BoostX in place. ;  ; bool operator!= (const BoostX &rhs) const;  ; template<class Foreign4Vector > ; Foreign4Vector operator() (const Foreign4Vec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BoostX.html:74,Guid,Guide,74,doc/master/classROOT_1_1Math_1_1BoostX.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BoostX.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::BoostY Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::BoostY Class ReferenceMath » Physics Vectors. ; Class representing a Lorentz Boost along the Y axis, by beta. ; For efficiency, gamma is held as well.; See alsoOverview of the physics vector library ; Definition at line 39 of file BoostY.h. Public Types; enum  EBoostMatrixIndex { ;   kXX = 0; , kXY = 1; , kXZ = 2; , kXT = 3; , ;   kYY = 4; , kYZ = 5; , kYT = 6; , kZZ = 7; , ;   kZT = 8; , kTT = 9. };  ; enum  ELorentzRotationMatrixIndex { ;   kLXX = 0; , kLXY = 1; , kLXZ = 2; , kLXT = 3; , ;   kLYX = 4; , kLYY = 5; , kLYZ = 6; , kLYT = 7; , ;   kLZX = 8; , kLZY = 9; , kLZZ = 10; , kLZT = 11; , ;   kLTX = 12; , kLTY = 13; , kLTZ = 14; , kLTT = 15. };  ; typedef double Scalar;  ; typedef DisplacementVector3D< Cartesian3D< double >, DefaultCoordinateSystemTag > XYZVector;  The beta vector for this boost. ;  . Public Member Functions;  BoostY ();  Default constructor (identity transformation) ;  ;  BoostY (Scalar beta_y);  Construct given a Scalar beta_y. ;  ; Scalar Beta () const;  Retrieve the beta of the Boost. ;  ; XYZVector BetaVector () const;  ; Scalar Gamma () const;  Retrieve the gamma of the Boost. ;  ; void GetComponents (Scalar &beta_y) const;  Get components into a Scalar beta_y. ;  ; void GetLorentzRotation (Scalar r[]) const;  Get elements of internal 4x4 symmetric representation, into a data array suitable for direct use as the components of a LorentzRotation Note – 16 Scalars will be written into the array; if the array is not that large, then this will lead to undefined behavior. ;  ; BoostY Inverse () const;  Return inverse of a rotation. ;  ; void Invert ();  Invert a BoostY in place. ;  ; bool operator!= (const BoostY &rhs) const;  ; template<class Foreign4Vector > ; Foreign4Vector operator() (const Foreign4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BoostY.html:74,Guid,Guide,74,doc/master/classROOT_1_1Math_1_1BoostY.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BoostY.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::BoostZ Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::BoostZ Class ReferenceMath » Physics Vectors. ; Class representing a Lorentz Boost along the Z axis, by beta. ; For efficiency, gamma is held as well.; See alsoOverview of the physics vector library ; Definition at line 39 of file BoostZ.h. Public Types; enum  EBoostMatrixIndex { ;   kXX = 0; , kXY = 1; , kXZ = 2; , kXT = 3; , ;   kYY = 4; , kYZ = 5; , kYT = 6; , kZZ = 7; , ;   kZT = 8; , kTT = 9. };  ; enum  ELorentzRotationMatrixIndex { ;   kLXX = 0; , kLXY = 1; , kLXZ = 2; , kLXT = 3; , ;   kLYX = 4; , kLYY = 5; , kLYZ = 6; , kLYT = 7; , ;   kLZX = 8; , kLZY = 9; , kLZZ = 10; , kLZT = 11; , ;   kLTX = 12; , kLTY = 13; , kLTZ = 14; , kLTT = 15. };  ; typedef double Scalar;  ; typedef DisplacementVector3D< Cartesian3D< double >, DefaultCoordinateSystemTag > XYZVector;  The beta vector for this boost. ;  . Public Member Functions;  BoostZ ();  Default constructor (identity transformation) ;  ;  BoostZ (Scalar beta_z);  Construct given a Scalar beta_z. ;  ; Scalar Beta () const;  Retrieve the beta of the Boost. ;  ; XYZVector BetaVector () const;  ; Scalar Gamma () const;  Retrieve the gamma of the Boost. ;  ; void GetComponents (Scalar &beta_z) const;  Get components into a Scalar beta_z. ;  ; void GetLorentzRotation (Scalar r[]) const;  Get elements of internal 4x4 symmetric representation, into a data array suitable for direct use as the components of a LorentzRotation Note – 16 Scalars will be written into the array; if the array is not that large, then this will lead to undefined behavior. ;  ; BoostZ Inverse () const;  Return inverse of a BoostZ. ;  ; void Invert ();  Invert a BoostZ in place. ;  ; bool operator!= (const BoostZ &rhs) const;  ; template<class Foreign4Vector > ; Foreign4Vector operator() (const Foreign4Ve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BoostZ.html:74,Guid,Guide,74,doc/master/classROOT_1_1Math_1_1BoostZ.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BoostZ.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::BrentMethods Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; ROOT::Math::BrentMethods Namespace Reference. Functions; double MinimBrent (const IGenFunction *f, int type, double &xmin, double &xmax, double xmiddle, double fy, bool &ok, int &niter, double epsabs=1.E-8, double epsrel=1.E-10, int maxiter=100);  Finds a minimum of a function, if the function is unimodal between xmin and xmax This method uses a combination of golden section search and parabolic interpolation Details about convergence and properties of this algorithm can be found in the book by R.P.Brent ""Algorithms for Minimization Without Derivatives"" or in the ""Numerical Recipes"", chapter 10.2 convergence is reached using tolerance = 2 *( epsrel * abs(x) + epsabs) ;  ; double MinimStep (const IGenFunction *f, int type, double &xmin, double &xmax, double fy, int npx=100, bool useLog=false);  Grid search implementation, used to bracket the minimum and later use Brent's method with the bracketed interval The step of the search is set to (xmax-xmin)/fNpx type: 0-returns MinimumX 1-returns Minimum 2-returns MaximumX 3-returns Maximum 4-returns X corresponding to fy. ;  . Function Documentation. ◆ MinimBrent(). double ROOT::Math::BrentMethods::MinimBrent ; (; const IGenFunction * ; f, . int ; type, . double & ; xmin, . double & ; xmax, . double ; xmiddle, . double ; fy, . bool & ; ok, . int & ; niter, . double ; epsabs = 1.E-8, . double ; epsrel = 1.E-10, . int ; maxiter = 100 . ). Finds a minimum of a function, if the function is unimodal between xmin and xmax This method uses a combination of golden section search and parabolic interpolation Details about convergence and properties of this algorithm can be found in the book by R.P.Brent ""Algorithms for Minimization Without Derivatives"" or in the ""Numerical Recipes"", chapter 10.2 convergence is reached using tolerance = 2 *( epsrel * abs(x) + epsabs) ; type: 0-returns Minimu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1BrentMethods.html:84,Guid,Guide,84,doc/master/namespaceROOT_1_1Math_1_1BrentMethods.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1BrentMethods.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::BrentMinimizer1D Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::BrentMinimizer1D Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » One-dimensional Minimization. ; User class for performing function minimization. ; It will use the Brent Method for function minimization in a given interval. First, a grid search is used to bracket the minimum value with the a step size = (xmax-xmin)/npx. The step size can be controlled via the SetNpx() function. A default value of npx = 100 is used. The default value con be changed using the static method SetDefaultNpx. If the function is unimodal or if its extrema are far apart, setting the fNpx to a small value speeds the algorithm up many times. Then, Brent's method is applied on the bracketed interval. If the Brent method fails to converge the bracketing is repeated on the latest best estimate of the interval. The procedure is repeated with a maximum value (default =10) which can be set for all BrentRootFinder classes with the method SetDefaultNSearch; This class is implemented from TF1::GetMinimum.; To use the class, three steps have to be taken:; Create the class.; Set a function within an interval to look for the minimum.; Call the Minimize function with the error parameters. If another minimization is to be performed, repeat the last two steps. ; Definition at line 62 of file BrentMinimizer1D.h. Public Member Functions;  BrentMinimizer1D ();  Default Constructor. ;  ;  ~BrentMinimizer1D () override;  Default Destructor. ;  ; double FValLower () const override;  Return function value at current lower bound of the minimization interval. ;  ; double FValMinimum () const override;  Return function value at current estimate of the minimum. ;  ; double FValUpper () const override;  Return function value ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BrentMinimizer1D.html:84,Guid,Guide,84,doc/master/classROOT_1_1Math_1_1BrentMinimizer1D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BrentMinimizer1D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::BrentRootFinder Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::BrentRootFinder Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » One-dimensional Root-Finding. ; Class for finding the root of a one dimensional function using the Brent algorithm. ; It will use the Brent Method for finding function roots in a given interval. First, a grid search is used to bracket the root value with the a step size = (xmax-xmin)/npx. The step size can be controlled via the SetNpx() function. A default value of npx = 100 is used. The default value con be changed using the static method SetDefaultNpx. If the function is unimodal or if its extrema are far apart, setting the fNpx to a small value speeds the algorithm up many times. Then, Brent's method is applied on the bracketed interval. It will use the Brent Method for finding function roots in a given interval. If the Brent method fails to converge the bracketing is repeated on the latest best estimate of the interval. The procedure is repeated with a maximum value (default =10) which can be set for all BrentRootFinder classes with the method SetDefaultNSearch; This class is implemented from TF1::GetX() method. ; Definition at line 51 of file BrentRootFinder.h. Public Member Functions;  BrentRootFinder ();  Default Constructor. ;  ;  ~BrentRootFinder () override;  Default Destructor. ;  ; int Iterations () const override;  Return number of iteration used to find minimum. ;  ; const char * Name () const override;  Return name of root finder algorithm (""BrentRootFinder""). ;  ; double Root () const override;  Returns root value. ;  ; virtual bool SetFunction (const ROOT::Math::IGenFunction &, double, double);  Set function to solve and the interval in where to look for the root. ;  ; bool SetFunction (const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BrentRootFinder.html:83,Guid,Guide,83,doc/master/classROOT_1_1Math_1_1BrentRootFinder.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BrentRootFinder.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::CDFWrapper Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Math::CDFWrapper Struct Reference. . Definition at line 40 of file GoFTest.cxx. Public Member Functions;  CDFWrapper (const IGenFunction &cdf, Double_t xmin=0, Double_t xmax=-1);  ;  ~CDFWrapper () override;  ; IGenFunction * Clone () const override;  Clone a function. ;  ; Double_t DoEval (Double_t x) const override;  implementation of the evaluation function. Must be implemented by derived classes ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  . Public Attributes; const IGenFunction * fCDF;  ; Double_t fNorm;  ; Double_t fXmax;  ; Double_t fXmin;  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . Inheritance diagram for ROOT::Math::CDFWrapper:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~CDFWrapper(). ROOT::Math::CDFWrapper::~CDFWrapper ; (; ). inlineoverride . Definition at line 48 of file GoFTest.cxx. ◆ CDFWrapper(). ROOT::Math::CDFWrapper::CDFWrapper ; (; const IGenFunction & ; cdf, . Double_t ; xmin = 0, . Double_t ; xmax = -1 . ). inline . Definition at line 50 of file GoFTest.cxx. Member Function Documentation. ◆ Clone(). IGenFunction * ROOT::Math::CDFWrapper::Clone ; (; ); const. inlineoverridevirtual . Clone a function. ; Each derived class will implement their version of the private DoClone method. ; Implements ROOT::Math::IBaseFunctionOneDim.; Definition at line 71 of file GoFTest.cx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1CDFWrapper.html:79,Guid,Guide,79,doc/master/structROOT_1_1Math_1_1CDFWrapper.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1CDFWrapper.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Cartesian2D< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Attributes |; Private Attributes |; List of all members ; ROOT::Math::Cartesian2D< T > Class Template ReferenceMath » Physics Vectors. ; template<class T = double>; class ROOT::Math::Cartesian2D< T >Class describing a 2D cartesian coordinate system (x, y coordinates) ; See alsoOverview of the physics vector library ; Definition at line 39 of file Cartesian2D.h. Public Types; typedef T Scalar;  . Public Member Functions;  Cartesian2D ();  Default constructor with x=y=0. ;  ;  Cartesian2D (const Cartesian2D &v);  copy constructor ;  ; template<class CoordSystem > ; constexpr Cartesian2D (const CoordSystem &v);  Construct from any Vector or coordinate system implementing X() and Y() ;  ; template<class T2 > ; constexpr Cartesian2D (const Polar2D< T2 > &v);  ;  Cartesian2D (Scalar xx, Scalar yy);  Constructor from x,y coordinates. ;  ; void GetCoordinates (Scalar &xx, Scalar &yy) const;  get internal data into 2 Scalar numbers ;  ; Scalar Mag2 () const;  ; void Negate ();  negate the vector ;  ; bool operator!= (const Cartesian2D &rhs) const;  ; Cartesian2D & operator= (const Cartesian2D &v);  assignment operator ;  ; template<class CoordSystem > ; Cartesian2D & operator= (const CoordSystem &v);  Assignment from any class implementing x(),y() (can assign from any coordinate system) ;  ; template<class T2 > ; Cartesian2D & operator= (const Polar2D< T2 > &v);  ; bool operator== (const Cartesian2D &rhs) const;  Exact equality. ;  ; Scalar Phi () const;  ; Scalar R () const;  ; void Rotate (Scalar angle);  rotate by an angle ;  ; void Scale (Scalar a);  scale the vector by a scalar quantity a ;  ; void SetCoordinates (Scalar xx, Scalar yy);  Set internal data based on 2 Scalar numbers. ;  ; void SetX (Scalar a);  set the x coordinate value keeping y const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Cartesian2D.html:93,Guid,Guide,93,doc/master/classROOT_1_1Math_1_1Cartesian2D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Cartesian2D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Cartesian3D< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Attributes |; Private Attributes |; List of all members ; ROOT::Math::Cartesian3D< T > Class Template ReferenceMath » Physics Vectors. ; template<class T = double>; class ROOT::Math::Cartesian3D< T >Class describing a 3D cartesian coordinate system (x, y, z coordinates) ; See alsoOverview of the physics vector library ; Definition at line 46 of file Cartesian3D.h. Public Types; typedef T Scalar;  . Public Member Functions;  Cartesian3D ();  Default constructor with x=y=z=0. ;  ;  Cartesian3D (const Cartesian3D &v);  copy constructor ;  ; template<class CoordSystem > ; constexpr Cartesian3D (const CoordSystem &v);  Construct from any Vector or coordinate system implementing X(), Y() and Z() ;  ; template<class T2 > ; constexpr Cartesian3D (const Polar3D< T2 > &v);  ;  Cartesian3D (Scalar xx, Scalar yy, Scalar zz);  Constructor from x,y,z coordinates. ;  ; Scalar Eta () const;  ; void GetCoordinates (Scalar &xx, Scalar &yy, Scalar &zz) const;  get internal data into 3 Scalar numbers ;  ; void GetCoordinates (Scalar dest[]) const;  get internal data into an array of 3 Scalar numbers ;  ; Scalar Mag2 () const;  ; void Negate ();  negate the vector ;  ; bool operator!= (const Cartesian3D &rhs) const;  ; Cartesian3D & operator= (const Cartesian3D &v);  assignment operator ;  ; template<class CoordSystem > ; Cartesian3D & operator= (const CoordSystem &v);  Assignment from any class implementing x(),y() and z() (can assign from any coordinate system) ;  ; template<class T2 > ; Cartesian3D & operator= (const Polar3D< T2 > &v);  ; bool operator== (const Cartesian3D &rhs) const;  Exact equality. ;  ; Scalar Perp2 () const;  ; Scalar Phi () const;  ; Scalar R () const;  ; Scalar Rho () const;  ; void Scale (Scalar a);  scale the vector by a scalar quantity a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Cartesian3D.html:93,Guid,Guide,93,doc/master/classROOT_1_1Math_1_1Cartesian3D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Cartesian3D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Cephes Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; ROOT::Math::Cephes Namespace Reference. Functions; double beta (double z, double w);  ; double erf (double x);  ; double erfc (double a);  ; double gamma (double x);  ; double igam (double a, double x);  ; double igamc (double a, double x);  incomplete complementary gamma function igamc(a, x) = 1 - igam(a, x) ;  ; double igami (double a, double y);  ; double incbcf (double a, double b, double x);  ; double incbd (double a, double b, double x);  ; double incbet (double aa, double bb, double xx);  DESCRIPTION: ;  ; double incbi (double a, double b, double y);  ; double lgam (double x);  ; double ndtri (double y);  ; double pseries (double a, double b, double x);  ; static double stirf (double x);  . Variables; static double A [];  ; static double B [];  ; static double C [];  ; static double erfP [];  ; static double erfQ [];  ; static double erfR [];  ; static double erfS [];  ; static double erfT [];  ; static double erfU [];  ; static double kBig = 4.503599627370496e15;  ; static double kBiginv = 2.22044604925031308085e-16;  ; static double LS2PI = 0.91893853320467274178;  ; static double P [];  ; static double P0 [5];  ; static double P1 [9];  ; static double P2 [9];  ; static double Q [];  ; static double Q0 [8];  ; static double Q1 [8];  ; static double Q2 [8];  ; static double s2pi = 2.50662827463100050242E0;  ; static double STIR [5];  . Function Documentation. ◆ beta(). double ROOT::Math::Cephes::beta ; (; double ; z, . double ; w . ). Definition at line 428 of file SpecFuncCephes.cxx. ◆ erf(). double ROOT::Math::Cephes::erf ; (; double ; x). Definition at line 926 of file SpecFuncCephes.cxx. ◆ erfc(). double ROOT::Math::Cephes::erfc ; (; double ; a). Definition at line 874 of file SpecFuncCephes.cxx. ◆ gamma(). double ROOT::Math::Cephes::gamma ; (; double ; x). Definition at line 339 of file SpecFuncCephes.c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Cephes.html:78,Guid,Guide,78,doc/master/namespaceROOT_1_1Math_1_1Cephes.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Cephes.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Chebyshev Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; ROOT::Math::Chebyshev Namespace Reference. template recursive functions for defining evaluation of Chebyshev polynomials T_n(x) and the series S(x) = Sum_i c_i* T_i(x) ; More... Functions; template<int N> ; double Eval (double x, const double *c);  ; template<> ; double Eval< 0 > (double, const double *c);  ; template<> ; double Eval< 0 > (double, const double *c);  ; template<> ; double Eval< 1 > (double x, const double *c);  ; template<> ; double Eval< 1 > (double x, const double *c);  ; template<> ; double Eval< 2 > (double x, const double *c);  ; template<> ; double Eval< 2 > (double x, const double *c);  ; template<> ; double Eval< 3 > (double x, const double *c);  ; template<> ; double Eval< 3 > (double x, const double *c);  ; template<int N> ; double T (double x);  ; template<> ; double T< 0 > (double);  ; template<> ; double T< 0 > (double);  ; template<> ; double T< 1 > (double x);  ; template<> ; double T< 1 > (double x);  ; template<> ; double T< 2 > (double x);  ; template<> ; double T< 2 > (double x);  ; template<> ; double T< 3 > (double x);  ; template<> ; double T< 3 > (double x);  . Detailed Description; template recursive functions for defining evaluation of Chebyshev polynomials T_n(x) and the series S(x) = Sum_i c_i* T_i(x) ; Function Documentation. ◆ Eval(). template<int N> . double ROOT::Math::Chebyshev::Eval ; (; double ; x, . const double * ; c . ). Definition at line 43 of file ChebyshevPol.h. ◆ Eval< 0 >() [1/2]. template<> . double ROOT::Math::Chebyshev::Eval< 0 > ; (; double ; , . const double * ; c . ). Definition at line 29 of file ChebyshevPol.cxx. ◆ Eval< 0 >() [2/2]. template<> . double ROOT::Math::Chebyshev::Eval< 0 > ; (; double ; , . const double * ; c . ). Definition at line 29 of file ChebyshevPol.cxx. ◆ Eval< 1 >() [1/2]. template<> . double ROOT::Math::Chebyshev::Eval< 1 > ; (; double ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Chebyshev.html:81,Guid,Guide,81,doc/master/namespaceROOT_1_1Math_1_1Chebyshev.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Chebyshev.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::ChebyshevApprox Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::ChebyshevApprox Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Function Approximation (ChebyshevApprox). ; Class describing a Chebyshev series which can be used to approximate a function in a defined range [a,b] using Chebyshev polynomials. ; It uses the algorithm from GSL; This class does not support copying ; Definition at line 71 of file ChebyshevApprox.h. Public Member Functions;  ChebyshevApprox (ChebyshevApprox &&)=delete;  ;  ChebyshevApprox (const ChebyshevApprox &)=delete;  ;  ChebyshevApprox (const ROOT::Math::IGenFunction &f, double a, double b, size_t n);  Construct a Chebyshev series approximation to a Function f in range [a,b]; constructor based on functions of type IGenFunction. ;  ;  ChebyshevApprox (GSLFuncPointer f, void *p, double a, double b, size_t n);  Construct a Chebyshev series approximation to a Function f in range [a,b]; constructor based on free functions with gsl_function type signature. ;  ; virtual ~ChebyshevApprox ();  ; ChebyshevApprox * Deriv ();  Compute the derivative of the series and return a pointer to a new Chebyshev series with the derivatives coefficients. ;  ; std::pair< double, double > EvalErr (double x) const;  Evaluate the series at a given point x estimating both the series result and its absolute error. ;  ; std::pair< double, double > EvalErr (double x, size_t n) const;  evaluate the series at a given point x to the given order n, estimating both the series result and its absolute error. ;  ; ChebyshevApprox * Integral ();  Compute the integral of the series and return a pointer to a new Chebyshev series with the integral coefficients. ;  ; double operator() (double x) const;  Evaluate the series at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1ChebyshevApprox.html:83,Guid,Guide,83,doc/master/classROOT_1_1Math_1_1ChebyshevApprox.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1ChebyshevApprox.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::ChebyshevPol Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::ChebyshevPol Class Reference. . Definition at line 129 of file ChebyshevPol.h. Public Member Functions;  ChebyshevPol (unsigned int n);  ; double operator() (const double *x, const double *coeff);  . Private Attributes; unsigned int fOrder;  . #include <Math/ChebyshevPol.h>; Constructor & Destructor Documentation. ◆ ChebyshevPol(). ROOT::Math::ChebyshevPol::ChebyshevPol ; (; unsigned int ; n). inline . Definition at line 131 of file ChebyshevPol.h. Member Function Documentation. ◆ operator()(). double ROOT::Math::ChebyshevPol::operator() ; (; const double * ; x, . const double * ; coeff . ). inline . Definition at line 133 of file ChebyshevPol.h. Member Data Documentation. ◆ fOrder. unsigned int ROOT::Math::ChebyshevPol::fOrder. private . Definition at line 137 of file ChebyshevPol.h. Libraries for ROOT::Math::ChebyshevPol:. [legend]; The documentation for this class was generated from the following file:; math/mathcore/inc/Math/ChebyshevPol.h. ROOTMathChebyshevPol. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1ChebyshevPol.html:80,Guid,Guide,80,doc/master/classROOT_1_1Math_1_1ChebyshevPol.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1ChebyshevPol.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::CholInverter< idim > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::CholInverter< idim > Class Template Reference. ; template<unsigned int idim>; class ROOT::Math::CholInverter< idim >; Definition at line 313 of file Dinv.h. Static Public Member Functions; template<class T > ; static bool Dinv (MatRepSym< T, idim > &rhs);  ; template<class MatrixRep > ; static bool Dinv (MatrixRep &);  . #include <Math/Dinv.h>; Member Function Documentation. ◆ Dinv() [1/2]. template<unsigned int idim> . template<class T > . static bool ROOT::Math::CholInverter< idim >::Dinv ; (; MatRepSym< T, idim > & ; rhs). inlinestatic . Definition at line 322 of file Dinv.h. ◆ Dinv() [2/2]. template<unsigned int idim> . template<class MatrixRep > . static bool ROOT::Math::CholInverter< idim >::Dinv ; (; MatrixRep & ; ). inlinestatic . Definition at line 317 of file Dinv.h. The documentation for this class was generated from the following file:; math/smatrix/inc/Math/Dinv.h. ROOTMathCholInverter. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1CholInverter.html:97,Guid,Guide,97,doc/master/classROOT_1_1Math_1_1CholInverter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1CholInverter.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::CholeskyDecomp< F, N > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::CholeskyDecomp< F, N > Class Template Reference. ; template<class F, unsigned N>; class ROOT::Math::CholeskyDecomp< F, N >class to compute the Cholesky decomposition of a matrix ; class to compute the Cholesky decomposition of a symmetric positive definite matrix; provides routines to check if the decomposition succeeded (i.e. if matrix is positive definite and non-singular), to solve a linear system for the given matrix and to obtain its inverse; the actual functionality is implemented in templated helper classes which have specializations for dimensions N = 1 to 6 to achieve a gain in speed for common matrix sizes; usage example: // let m be a symmetric positive definite SMatrix (use type float; // for internal computations, matrix size is 4x4); CholeskyDecomp<float, 4> decomp(m);; // check if the decomposition succeeded; if (!decomp) {; std::cerr << ""decomposition failed!"" << std::endl;; } else {; // let rhs be a vector; we seek a vector x such that m * x = rhs; decomp.Solve(rhs);; // rhs now contains the solution we are looking for; ; // obtain the inverse of m, put it into m itself; decomp.Invert(m);; }; ROOT::Math::CholeskyDecompclass to compute the Cholesky decomposition of a matrixDefinition CholeskyDecomp.h:77; mTMarker mDefinition textangle.C:8. Definition at line 76 of file CholeskyDecomp.h. Public Member Functions; template<class M > ;  CholeskyDecomp (const M &m);  perform a Cholesky decomposition ;  ; template<typename G > ;  CholeskyDecomp (G *m);  perform a Cholesky decomposition ;  ; template<typename G > ; bool getL (G *m) const;  obtain the decomposed matrix L ;  ; template<class M > ; bool getL (M &m) const;  obtain the decomposed matrix L ;  ; template<typename G > ; bool getLi (G *m) const;  ob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1CholeskyDecomp.html:99,Guid,Guide,99,doc/master/classROOT_1_1Math_1_1CholeskyDecomp.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1CholeskyDecomp.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::CholeskyDecompGenDim< F > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::CholeskyDecompGenDim< F > Class Template Reference. ; template<class F>; class ROOT::Math::CholeskyDecompGenDim< F >class to compute the Cholesky decomposition of a matrix ; class to compute the Cholesky decomposition of a symmetric positive definite matrix when the dimensionality of the problem is not known at compile time; provides routines to check if the decomposition succeeded (i.e. if matrix is positive definite and non-singular), to solve a linear system for the given matrix and to obtain its inverse; the actual functionality is implemented in templated helper classes which have specializations for dimensions N = 1 to 6 to achieve a gain in speed for common matrix sizes; usage example: // let m be a symmetric positive definite SMatrix (use type float; // for internal computations, matrix size is 4x4); CholeskyDecompGenDim<float> decomp(4, m);; // check if the decomposition succeeded; if (!decomp) {; std::cerr << ""decomposition failed!"" << std::endl;; } else {; // let rhs be a vector; we seek a vector x such that m * x = rhs; decomp.Solve(rhs);; // rhs now contains the solution we are looking for; ; // obtain the inverse of m, put it into m itself; decomp.Invert(m);; }; ROOT::Math::CholeskyDecompGenDimclass to compute the Cholesky decomposition of a matrixDefinition CholeskyDecomp.h:311; mTMarker mDefinition textangle.C:8. Definition at line 310 of file CholeskyDecomp.h. Public Member Functions; template<class M > ;  CholeskyDecompGenDim (unsigned N, const M &m);  perform a Cholesky decomposition ;  ; template<typename G > ;  CholeskyDecompGenDim (unsigned N, G *m);  perform a Cholesky decomposition ;  ;  ~CholeskyDecompGenDim ();  destructor ;  ; template<typename G > ; bool getL (G *m) const;  obtain the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1CholeskyDecompGenDim.html:102,Guid,Guide,102,doc/master/classROOT_1_1Math_1_1CholeskyDecompGenDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1CholeskyDecompGenDim.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::CholeskyDecompHelpers Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; ROOT::Math::CholeskyDecompHelpers Namespace Reference. helpers for CholeskyDecomp; More... Classes; struct  _decomposer;  struct to do a Cholesky decomposition More...;  ; struct  _decomposer< F, 0, M >;  struct to do a Cholesky decomposition (specialized, N = 0) More...;  ; struct  _decomposer< F, 1, M >;  struct to do a Cholesky decomposition (specialized, N = 1) More...;  ; struct  _decomposer< F, 2, M >;  struct to do a Cholesky decomposition (specialized, N = 2) More...;  ; struct  _decomposer< F, 3, M >;  struct to do a Cholesky decomposition (specialized, N = 3) More...;  ; struct  _decomposer< F, 4, M >;  struct to do a Cholesky decomposition (specialized, N = 4) More...;  ; struct  _decomposer< F, 5, M >;  struct to do a Cholesky decomposition (specialized, N = 5) More...;  ; struct  _decomposer< F, 6, M >;  struct to do a Cholesky decomposition (specialized, N = 6) More...;  ; struct  _decomposerGenDim;  struct to do a Cholesky decomposition (general dimensionality) More...;  ; struct  _inverter;  struct to obtain the inverse from a Cholesky decomposition More...;  ; struct  _inverter< F, 0, M >;  struct to obtain the inverse from a Cholesky decomposition (N = 0) More...;  ; struct  _inverter< F, 1, M >;  struct to obtain the inverse from a Cholesky decomposition (N = 1) More...;  ; struct  _inverter< F, 2, M >;  struct to obtain the inverse from a Cholesky decomposition (N = 2) More...;  ; struct  _inverter< F, 3, M >;  struct to obtain the inverse from a Cholesky decomposition (N = 3) More...;  ; struct  _inverter< F, 4, M >;  struct to obtain the inverse from a Cholesky decomposition (N = 4) More...;  ; struct  _inverter< F, 5, M >;  struct to obtain the inverse from a Cholesky decomposition (N = 5) More...;  ; struct  _inverter< F, 6, M >;  struct to obtain the inverse from a Cholesky decomposition (N ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1CholeskyDecompHelpers.html:93,Guid,Guide,93,doc/master/namespaceROOT_1_1Math_1_1CholeskyDecompHelpers.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1CholeskyDecompHelpers.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::CompileTimeChecker< bool > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::CompileTimeChecker< bool > Struct Template Reference. ; template<bool>; struct ROOT::Math::CompileTimeChecker< bool >; Definition at line 47 of file StaticCheck.h. Public Member Functions;  CompileTimeChecker (void *);  . #include <Math/StaticCheck.h>; Constructor & Destructor Documentation. ◆ CompileTimeChecker(). template<bool > . ROOT::Math::CompileTimeChecker< bool >::CompileTimeChecker ; (; void * ; ). inline . Definition at line 49 of file StaticCheck.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/StaticCheck.h. ROOTMathCompileTimeChecker. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1CompileTimeChecker.html:104,Guid,Guide,104,doc/master/structROOT_1_1Math_1_1CompileTimeChecker.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1CompileTimeChecker.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::CompileTimeChecker< false > Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Math::CompileTimeChecker< false > Struct Reference. . Definition at line 51 of file StaticCheck.h. #include <Math/StaticCheck.h>; The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/StaticCheck.h. ROOTMathCompileTimeChecker< false >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1CompileTimeChecker_3_01false_01_4.html:96,Guid,Guide,96,doc/master/structROOT_1_1Math_1_1CompileTimeChecker_3_01false_01_4.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1CompileTimeChecker_3_01false_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Constant< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Math::Constant< T > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class T>; class ROOT::Math::Constant< T >Constant expression class A class representing constant expressions (literals) in the parse tree. ; AuthorT. Glebe ; Definition at line 400 of file Expression.h. Public Member Functions;  Constant (const T &rhs);  ;  ~Constant ();  ; T apply (unsigned int) const;  ; T operator() (unsigned int, unsigned int) const;  . Protected Attributes; const T rhs_;  . #include <Math/Expression.h>; Constructor & Destructor Documentation. ◆ Constant(). template<class T > . ROOT::Math::Constant< T >::Constant ; (; const T & ; rhs). inline . Definition at line 403 of file Expression.h. ◆ ~Constant(). template<class T > . ROOT::Math::Constant< T >::~Constant ; (; ). inline . Definition at line 407 of file Expression.h. Member Function Documentation. ◆ apply(). template<class T > . T ROOT::Math::Constant< T >::apply ; (; unsigned int ; ); const. inline . Definition at line 410 of file Expression.h. ◆ operator()(). template<class T > . T ROOT::Math::Constant< T >::operator() ; (; unsigned int ; , . unsigned int ;  . ); const. inline . Definition at line 412 of file Expression.h. Member Data Documentation. ◆ rhs_. template<class T > . const T ROOT::Math::Constant< T >::rhs_. protected . Definition at line 418 of file Expression.h. math/smatrix/inc/Math/Expression.h. ROOTMathConstant. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Constant.html:90,Guid,Guide,90,doc/master/classROOT_1_1Math_1_1Constant.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Constant.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Cylindrical3D< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Attributes |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::Cylindrical3D< T > Class Template ReferenceMath » Physics Vectors. ; template<class T>; class ROOT::Math::Cylindrical3D< T >Class describing a cylindrical coordinate system based on rho, z and phi. ; Class describing a 3D Cylindrical Eta coordinate system (rho, z, phi coordinates); The base coordinates are rho (transverse component) , z and phi Phi is restricted to be in the range [-PI,PI); See alsoOverview of the physics vector library ; Definition at line 42 of file Cylindrical3D.h. Public Types; typedef T Scalar;  . Public Member Functions;  Cylindrical3D ();  Default constructor with rho=z=phi=0. ;  ; template<class CoordSystem > ; constexpr Cylindrical3D (const CoordSystem &v);  Construct from any Vector or coordinate system implementing Rho(), Z() and Phi() ;  ;  Cylindrical3D (const Cylindrical3D &v);  copy constructor ;  ;  Cylindrical3D (Scalar rho, Scalar zz, Scalar phi);  Construct from rho eta and phi values. ;  ; Scalar Eta () const;  ; void GetCoordinates (Scalar &rho, Scalar &zz, Scalar &phi) const;  get internal data into 3 Scalar numbers ( rho, z , phi) ;  ; void GetCoordinates (Scalar dest[]) const;  get internal data into an array of 3 Scalar numbers ( rho, z , phi) ;  ; Scalar Mag2 () const;  ; void Negate ();  negate the vector ;  ; bool operator!= (const Cylindrical3D &rhs) const;  ; template<class CoordSystem > ; Cylindrical3D & operator= (const CoordSystem &c);  generic assignment operator from any coordinate system implementing Rho(), Z() and Phi() ;  ; Cylindrical3D & operator= (const Cylindrical3D &v);  assignment operator ;  ; bool operator== (const Cylindrical3D &rhs) const;  Exact comp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Cylindrical3D.html:95,Guid,Guide,95,doc/master/classROOT_1_1Math_1_1Cylindrical3D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Cylindrical3D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::CylindricalEta3D< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Attributes |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::CylindricalEta3D< T > Class Template ReferenceMath » Physics Vectors. ; template<class T>; class ROOT::Math::CylindricalEta3D< T >Class describing a cylindrical coordinate system based on eta (pseudorapidity) instead of z. ; Class describing a 3D Cylindrical Eta coordinate system (rho, eta, phi coordinates); The base coordinates are rho (transverse component) , eta and phi Phi is restricted to be in the range [-PI,PI); See alsoOverview of the physics vector library ; Definition at line 48 of file CylindricalEta3D.h. Public Types; typedef T Scalar;  . Public Member Functions;  CylindricalEta3D ();  Default constructor with rho=eta=phi=0. ;  ; template<class CoordSystem > ;  CylindricalEta3D (const CoordSystem &v);  Construct from any Vector or coordinate system implementing Rho(), Eta() and Phi() ;  ;  CylindricalEta3D (const CylindricalEta3D &v);  copy constructor ;  ;  CylindricalEta3D (Scalar rho, Scalar eta, Scalar phi);  Construct from rho eta and phi values. ;  ; T Eta () const;  ; void GetCoordinates (Scalar &rho, Scalar &eta, Scalar &phi) const;  get internal data into 3 Scalar numbers ;  ; void GetCoordinates (Scalar dest[]) const;  get internal data into an array of 3 Scalar numbers ;  ; T Mag2 () const;  ; void Negate ();  negate the vector ;  ; bool operator!= (const CylindricalEta3D &rhs) const;  ; template<class CoordSystem > ; CylindricalEta3D & operator= (const CoordSystem &c);  generic assignment operator from any coordinate system ;  ; CylindricalEta3D & operator= (const CylindricalEta3D &v);  assignment operator ;  ; bool operator== (const CylindricalEta3D &rhs) const;  Exact component-by-compo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1CylindricalEta3D.html:98,Guid,Guide,98,doc/master/classROOT_1_1Math_1_1CylindricalEta3D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1CylindricalEta3D.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::DefaultCoordinateSystemTag Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Math::DefaultCoordinateSystemTag Class ReferenceMath » Physics Vectors. ; DefaultCoordinateSystemTag Default tag for identifying any coordinate system. ; See alsoOverview of the physics vector library ; Definition at line 38 of file CoordinateSystemTags.h. #include <Math/GenVector/CoordinateSystemTags.h>; The documentation for this class was generated from the following file:; math/genvector/inc/Math/GenVector/CoordinateSystemTags.h. ROOTMathDefaultCoordinateSystemTag. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1DefaultCoordinateSystemTag.html:94,Guid,Guide,94,doc/master/classROOT_1_1Math_1_1DefaultCoordinateSystemTag.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1DefaultCoordinateSystemTag.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Delaunay2D Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; List of all members ; ROOT::Math::Delaunay2D Class ReferenceMath » MathCore. ; Class to generate a Delaunay triangulation of a 2D set of points. ; Algorithm based on CDT, a C++ library for generating constraint or conforming Delaunay triangulations.; After having found the triangles using the above library, barycentric coordinates are used to test whether a point is inside a triangle (inTriangle test) and for interpolation. All this below is implemented in the DoInterpolateNormalized function.; Given triangle ABC and point P, P can be expressed by; P.x = la * A.x + lb * B.x + lc * C.x P.y = la * A.y + lb * B.y + lc * C.y; with lc = 1 - la - lb; P.x = la * A.x + lb * B.x + (1-la-lb) * C.x P.y = la * A.y + lb * B.y + (1-la-lb) * C.y; Rearranging yields; la * (A.x - C.x) + lb * (B.x - C.x) = P.x - C.x la * (A.y - C.y) + lb * (B.y - C.y) = P.y - C.y; Thus; la = ( (B.y - C.y)*(P.x - C.x) + (C.x - B.x)*(P.y - C.y) ) / ( (B.y - C.y)*(A.x - C.x) + (C.x - B.x)*(A.y - C.y) ) lb = ( (C.y - A.y)*(P.x - C.x) + (A.x - C.x)*(P.y - C.y) ) / ( (B.y - C.y)*(A.x - C.x) + (C.x - B.x)*(A.y - C.y) ) lc = 1 - la - lb; We save the inverse denominator to speedup computation; invDenom = 1 / ( (B.y - C.y)*(A.x - C.x) + (C.x - B.x)*(A.y - C.y) ); P is in triangle (including edges if; 0 <= [la, lb, lc] <= 1; The interpolation of P.z is; P.z = la * A.z + lb * B.z + lc * C.z; To speed up localisation of points (to see to which triangle belong) a grid is laid over the internal coordinate space. A reference to triangle ABC is added to all grid cells that include ABC's bounding box. The size of the grid is defined to be 25x25; Optionally (if the compiler macro HAS_GCAL is defined ) the t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Delaunay2D.html:78,Guid,Guide,78,doc/master/classROOT_1_1Math_1_1Delaunay2D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Delaunay2D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Derivator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; List of all members ; ROOT::Math::Derivator Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Differentiation. ; Class for computing numerical derivative of a function. ; Presently this class is implemented only using the numerical derivatives algorithms provided by GSL using the implementation class ROOT::Math::GSLDerivator; This class does not support copying ; Definition at line 61 of file Derivator.h. Public Types; typedef double(* GSLFuncPointer) (double, void *);  signature for function pointers used by GSL ;  . Public Member Functions;  Derivator ();  Empty Construct for a Derivator class Need to set the function afterwards with Derivator::SetFunction. ;  ;  Derivator (const GSLFuncPointer &f, void *p=nullptr);  Construct using a GSL function pointer type. ;  ;  Derivator (const IGenFunction &f);  Construct using a ROOT::Math::IGenFunction interface. ;  ; virtual ~Derivator ();  destructor ;  ; double Eval (double x, double h=1E-8) const;  Computes the numerical derivative of a function f at a point x. ;  ; double EvalBackward (double x, double h=1E-8) const;  Computes the numerical derivative at a point x using an adaptive backward difference algorithm with a step size h. ;  ; double EvalCentral (double x, double h=1E-8) const;  Computes the numerical derivative at a point x using an adaptive central difference algorithm with a step size h. ;  ; double EvalForward (double x, double h=1E-8) const;  Computes the numerical derivative at a point x using an adaptive forward difference algorithm with a step size h. ;  ; void SetFunction (const GSLFuncPointer &f, void *p=nullptr);  Set the function f for evaluating the derivative using a GSL function pointer type. ;  ; void SetFunction (const IGenFunction &f);  Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Derivator.html:77,Guid,Guide,77,doc/master/classROOT_1_1Math_1_1Derivator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Derivator.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Determinant< n, idim > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::Determinant< n, idim > Class Template Reference. ; template<unsigned int n, unsigned int idim = n>; class ROOT::Math::Determinant< n, idim >Detrminant for a general squared matrix Function to compute the determinant from a square matrix ( \( \det(A)\)) of dimension idim and order n. ; AuthorT. Glebe ; Definition at line 49 of file Dfact.h. Static Public Member Functions; template<class T > ; static bool Dfact (MatRepStd< T, n, idim > &rhs, T &det);  ; template<class T > ; static bool Dfact (MatRepSym< T, n > &rhs, T &det);  . #include <Math/Dfact.h>; Member Function Documentation. ◆ Dfact() [1/2]. template<unsigned int n, unsigned int idim = n> . template<class T > . static bool ROOT::Math::Determinant< n, idim >::Dfact ; (; MatRepStd< T, n, idim > & ; rhs, . T & ; det . ). inlinestatic . Definition at line 53 of file Dfact.h. ◆ Dfact() [2/2]. template<unsigned int n, unsigned int idim = n> . template<class T > . static bool ROOT::Math::Determinant< n, idim >::Dfact ; (; MatRepSym< T, n > & ; rhs, . T & ; det . ). inlinestatic . Definition at line 157 of file Dfact.h. The documentation for this class was generated from the following file:; math/smatrix/inc/Math/Dfact.h. ROOTMathDeterminant. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Determinant.html:99,Guid,Guide,99,doc/master/classROOT_1_1Math_1_1Determinant.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Determinant.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::DisplacementVector2D< CoordSystem, Tag > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; ROOT::Math::DisplacementVector2D< CoordSystem, Tag > Class Template ReferenceMath » Physics Vectors. ; template<class CoordSystem, class Tag = DefaultCoordinateSystemTag>; class ROOT::Math::DisplacementVector2D< CoordSystem, Tag >Class describing a generic displacement vector in 2 dimensions. ; Class template describing a 2D displacement vector.; This class is templated on the type of Coordinate system. One example is the XYVector which is a vector based on double precision x,y data members by using the ROOT::Math::Cartesian2D<double> Coordinate system. The class is having also an extra template parameter, the coordinate system tag, to be able to identify (tag) vector described in different reference coordinate system, like global or local coordinate systems.; See alsoOverview of the physics vector library ; Definition at line 58 of file DisplacementVector2D.h. Public Types; typedef Tag CoordinateSystemTag;  ; typedef CoordSystem CoordinateType;  ; typedef CoordSystem::Scalar Scalar;  . Public Member Functions; constexpr DisplacementVector2D ();  Default constructor. ;  ; template<class OtherCoords > ; constexpr DisplacementVector2D (const DisplacementVector2D< OtherCoords, Tag > &v);  Construct from a displacement vector expressed in different coordinates, or using a different Scalar type, but with same coordinate system tag. ;  ; template<class ForeignVector > ; constexpr DisplacementVector2D (const ForeignVector &v);  Construct from a foreign 2D vector type, for example, Hep2Vector Precondition: v must implement methods x() and y() ;  ; template<class OtherCoords > ; constexpr DisplacementVector2D (const PositionVector2D< OtherCoords, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1DisplacementVector2D.html:117,Guid,Guide,117,doc/master/classROOT_1_1Math_1_1DisplacementVector2D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1DisplacementVector2D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::DisplacementVector3D< CoordSystem, Tag > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; ROOT::Math::DisplacementVector3D< CoordSystem, Tag > Class Template ReferenceMath » Physics Vectors. ; template<class CoordSystem, class Tag = DefaultCoordinateSystemTag>; class ROOT::Math::DisplacementVector3D< CoordSystem, Tag >Class describing a generic displacement vector in 3 dimensions. ; Class template describing a 3D displacement vector.; This class is templated on the type of Coordinate system. One example is the XYZVector which is a vector based on double precision x,y,z data members by using the ROOT::Math::Cartesian3D<double> Coordinate system. The class is having also an extra template parameter, the coordinate system tag, to be able to identify (tag) vector described in different reference coordinate system, like global or local coordinate systems.; See alsoOverview of the physics vector library ; Definition at line 58 of file DisplacementVector3D.h. Public Types; typedef Tag CoordinateSystemTag;  ; typedef CoordSystem CoordinateType;  ; typedef CoordSystem::Scalar Scalar;  . Public Member Functions; constexpr DisplacementVector3D ();  Default constructor. ;  ; template<class OtherCoords > ; constexpr DisplacementVector3D (const DisplacementVector3D< OtherCoords, Tag > &v);  Construct from a displacement vector expressed in different coordinates, or using a different Scalar type, but with same coordinate system tag. ;  ; template<class ForeignVector > ; constexpr DisplacementVector3D (const ForeignVector &v);  Construct from a foreign 3D vector type, for example, Hep3Vector Precondition: v must implement methods x(), y() and z() ;  ; template<class OtherCoords > ; constexpr DisplacementVector3D (const PositionVector3D< Other",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1DisplacementVector3D.html:117,Guid,Guide,117,doc/master/classROOT_1_1Math_1_1DisplacementVector3D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1DisplacementVector3D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::DistSampler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::DistSampler Class ReferenceabstractMath » MathCore » Interface classes for Random number generation. ; Interface class for generic sampling of a distribution, i.e. ; generating random numbers according to arbitrary distributions ; Definition at line 57 of file DistSampler.h. Public Member Functions;  DistSampler ();  default constructor ;  ; virtual ~DistSampler ();  virtual destructor ;  ; virtual bool Generate (unsigned int nevt, const int *nbins, ROOT::Fit::BinData &data, bool extend=true, bool expErr=true);  Generate a binned data set. ;  ; virtual bool Generate (unsigned int nevt, double *data, bool eventRow=false);  Generate a vector of events by filling the passed data vector. ;  ; bool Generate (unsigned int nevt, int nbins, double xmin, double xmax, ROOT::Fit::BinData &data, bool extend=true, bool expErr=true);  Same as before but passing the range in case of 1 dim data. ;  ; virtual bool Generate (unsigned int nevt, ROOT::Fit::UnBinData &data);  Generate a un-binned data set by filling the given data set object. ;  ; virtual TRandom * GetRandom ();  Get the random engine used by the sampler. ;  ; bool HasParentPdf () const;  Check if there is a parent distribution defined. ;  ; virtual bool Init (const char *="""");  Initialize the sampling generator with the given algorithm. ;  ; virtual bool Init (const DistSamplerOptions &opt);  Initialize the generators with the given DistSamplerOption object. ;  ; unsigned int NDim () const;  return the dimension of the parent distribution (and the data) ;  ; const ROOT::Math::IMultiGenFunction & ParentPdf () const;  Get the parent distribution function (must be called after setting the function). ;  ; const double * Sample ();  Sample one event and return an ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1DistSampler.html:79,Guid,Guide,79,doc/master/classROOT_1_1Math_1_1DistSampler.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1DistSampler.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::DistSamplerOptions Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::DistSamplerOptions Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms. ; DistSampler options class. ; Definition at line 31 of file DistSamplerOptions.h. Public Member Functions;  DistSamplerOptions (const DistSamplerOptions &opt);  ;  DistSamplerOptions (int dim=0);  ;  ~DistSamplerOptions ();  ; const std::string & Algorithm () const;  type of algorithm (method) ;  ; IOptions * ExtraOptions () const;  return extra options (NULL pointer if they are not present) ;  ; DistSamplerOptions & operator= (const DistSamplerOptions &opt);  assignment operators ;  ; void Print (std::ostream &os=std::cout) const;  print all the options ;  ; int PrintLevel () const;  non-static methods for retrieving options ;  ; const std::string & Sampler () const;  type of minimizer ;  ; template<class T > ; void SetAlgoOption (const char *name, T value);  set a specific algorithm option ;  ; void SetAlgorithm (const char *type);  set minimizer algorithm ;  ; void SetExtraOptions (const IOptions &opt);  set extra options (in this case pointer is cloned) ;  ; void SetPrintLevel (int level);  non-static methods for setting options ;  ; void SetSampler (const char *type);  set minimizer type ;  . Static Public Member Functions; static ROOT::Math::IOptions & Default (const char *name);  retrieve extra options - if not existing create a IOptions ;  ; static const std::string & DefaultAlgorithm1D ();  ; static const std::string & DefaultAlgorithmND ();  ; static int DefaultPrintLevel ();  ; static const std::string & DefaultSampler ();  ; static ROOT::Math::IOptions * FindDefault (const char *name);  ; static void PrintDefault (const char *name, std::ostream &os=std::cout);  p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1DistSamplerOptions.html:86,Guid,Guide,86,doc/master/classROOT_1_1Math_1_1DistSamplerOptions.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1DistSamplerOptions.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::DivOp< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::DivOp< T > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class T>; class ROOT::Math::DivOp< T >Division (element-wise) Operation Class. ; Definition at line 766 of file BinaryOperators.h. Static Public Member Functions; static T apply (const T &lhs, const T &rhs);  . #include <Math/BinaryOperators.h>; Member Function Documentation. ◆ apply(). template<class T > . static T ROOT::Math::DivOp< T >::apply ; (; const T & ; lhs, . const T & ; rhs . ). inlinestatic . Definition at line 768 of file BinaryOperators.h. The documentation for this class was generated from the following file:; math/smatrix/inc/Math/BinaryOperators.h. ROOTMathDivOp. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1DivOp.html:87,Guid,Guide,87,doc/master/classROOT_1_1Math_1_1DivOp.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1DivOp.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::EulerAngles Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::EulerAngles Class ReferenceMath » Physics Vectors. ; EulerAngles class describing rotation as three angles (Euler Angles). ; The Euler angles definition matches that of Classical Mechanics (Goldstein). It is also the same convention defined in mathworld and used in Mathematica and CLHEP. Note that the ROOT class TRotation defines a slightly different convention.; See alsoOverview of the physics vector library ; Definition at line 45 of file EulerAngles.h. Public Types; typedef double Scalar;  . Public Member Functions; constexpr EulerAngles ();  Default constructor. ;  ; template<class OtherRotation > ; constexpr EulerAngles (const OtherRotation &r);  Create from any other supported rotation (see gv_detail::convert ) ;  ; template<class IT > ; constexpr EulerAngles (IT begin, IT end);  Construct given a pair of pointers or iterators defining the beginning and end of an array of three Scalars, to be treated as the angles phi, theta and psi. ;  ;  EulerAngles (Scalar phi, Scalar theta, Scalar psi);  Constructor from phi, theta and psi. ;  ; template<class R > ; Scalar Distance (const R &r) const;  Distance between two rotations. ;  ; template<class IT > ; void GetComponents (IT begin) const;  Get the axis and then the angle into data specified by an iterator begin. ;  ; template<class IT > ; void GetComponents (IT begin, IT end) const;  Get the axis and then the angle into data specified by an iterator begin and another to the end of the desired data (4 past start). ;  ; void GetComponents (Scalar &phi, Scalar &theta, Scalar &psi) const;  Get the components phi, theta, psi into three Scalars. ;  ; EulerAngles Inverse () const;  Return inverse of a rotation. ;  ; void Invert ();  Invert a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1EulerAngles.html:79,Guid,Guide,79,doc/master/classROOT_1_1Math_1_1EulerAngles.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1EulerAngles.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::EvaluatorOneDim< MultiFuncType > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::EvaluatorOneDim< MultiFuncType > Struct Template Reference. ; template<class MultiFuncType>; struct ROOT::Math::EvaluatorOneDim< MultiFuncType >; Definition at line 29 of file OneDimFunctionAdapter.h. Static Public Member Functions; static double F (MultiFuncType f, const double *x, const double *=nullptr);  . #include <Math/OneDimFunctionAdapter.h>; Member Function Documentation. ◆ F(). template<class MultiFuncType > . static double ROOT::Math::EvaluatorOneDim< MultiFuncType >::F ; (; MultiFuncType ; f, . const double * ; x, . const double * ; = nullptr . ). inlinestatic . Definition at line 31 of file OneDimFunctionAdapter.h. The documentation for this struct was generated from the following file:; math/mathcore/inc/Math/OneDimFunctionAdapter.h. ROOTMathEvaluatorOneDim. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1EvaluatorOneDim.html:110,Guid,Guide,110,doc/master/structROOT_1_1Math_1_1EvaluatorOneDim.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1EvaluatorOneDim.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::EvaluatorOneDim< const ROOT::Math::IParamMultiFunction & > Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::EvaluatorOneDim< const ROOT::Math::IParamMultiFunction & > Struct Reference. . Definition at line 37 of file OneDimFunctionAdapter.h. Static Public Member Functions; static double F (const ROOT::Math::IParamMultiFunction &f, const double *x, const double *p=nullptr);  . #include <Math/OneDimFunctionAdapter.h>; Member Function Documentation. ◆ F(). static double ROOT::Math::EvaluatorOneDim< const ROOT::Math::IParamMultiFunction & >::F ; (; const ROOT::Math::IParamMultiFunction & ; f, . const double * ; x, . const double * ; p = nullptr . ). inlinestatic . Definition at line 38 of file OneDimFunctionAdapter.h. The documentation for this struct was generated from the following file:; math/mathcore/inc/Math/OneDimFunctionAdapter.h. ROOTMathEvaluatorOneDim< const ROOT::Math::IParamMultiFunction & >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1EvaluatorOneDim_3_01const_01ROOT_1_1Math_1_1IParamMultiFunction_01_6_01_4.html:127,Guid,Guide,127,doc/master/structROOT_1_1Math_1_1EvaluatorOneDim_3_01const_01ROOT_1_1Math_1_1IParamMultiFunction_01_6_01_4.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1EvaluatorOneDim_3_01const_01ROOT_1_1Math_1_1IParamMultiFunction_01_6_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Expr< ExprType, T, D, D2, R1 > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::Expr< ExprType, T, D, D2, R1 > Class Template Reference. ; template<class ExprType, class T, unsigned int D, unsigned int D2 = 1, class R1 = MatRepStd<T,D,D2>>; class ROOT::Math::Expr< ExprType, T, D, D2, R1 >; Definition at line 138 of file Expression.h. Public Types; enum  { kRows = D; , kCols = D2; };  ; typedef T value_type;  . Public Member Functions;  Expr (const ExprType &rhs);  ;  ~Expr ();  ; T apply (unsigned int i) const;  ; bool IsInUse (const T *p) const;  function to determine if any use operand is being used (has same memory address) ;  ; T operator() (unsigned int i, unsigned j) const;  ; std::ostream & print (std::ostream &os) const;  used by operator<<() simplify to use apply(i,j) ;  . Private Attributes; ExprType rhs_;  . #include <Math/Expression.h>; Member Typedef Documentation. ◆ value_type. template<class ExprType , class T , unsigned int D, unsigned int D2 = 1, class R1 = MatRepStd<T,D,D2>> . typedef T ROOT::Math::Expr< ExprType, T, D, D2, R1 >::value_type. Definition at line 140 of file Expression.h. Member Enumeration Documentation. ◆ anonymous enum. template<class ExprType , class T , unsigned int D, unsigned int D2 = 1, class R1 = MatRepStd<T,D,D2>> . anonymous enum. EnumeratorkRows ; kCols . Definition at line 174 of file Expression.h. Constructor & Destructor Documentation. ◆ Expr(). template<class ExprType , class T , unsigned int D, unsigned int D2 = 1, class R1 = MatRepStd<T,D,D2>> . ROOT::Math::Expr< ExprType, T, D, D2, R1 >::Expr ; (; const ExprType & ; rhs). inline . Definition at line 143 of file Expression.h. ◆ ~Expr(). template<class ExprType , class T , unsigned int D, unsigned int D2 = 1, class R1 = MatRepStd<T,D,D2>> . ROOT::Math::Expr< ExprType, T, D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Expr.html:107,Guid,Guide,107,doc/master/classROOT_1_1Math_1_1Expr.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Expr.html,2,"['Guid', 'simpl']","['Guide', 'simplify']"
Usability,. ROOT: ROOT::Math::Fabs< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::Fabs< T > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class T>; class ROOT::Math::Fabs< T >Unary abs Operation Class. ; Definition at line 119 of file UnaryOperators.h. Static Public Member Functions; static T apply (const T &rhs);  . #include <Math/UnaryOperators.h>; Member Function Documentation. ◆ apply(). template<class T > . static T ROOT::Math::Fabs< T >::apply ; (; const T & ; rhs). inlinestatic . Definition at line 121 of file UnaryOperators.h. The documentation for this class was generated from the following file:; math/smatrix/inc/Math/UnaryOperators.h. ROOTMathFabs. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Fabs.html:86,Guid,Guide,86,doc/master/classROOT_1_1Math_1_1Fabs.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Fabs.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Factory Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::Factory Class Reference. ; Factory class holding static functions to create the interfaces like ROOT::Math::Minimizer via the Plugin Manager. ; Definition at line 31 of file Factory.h. Static Public Member Functions; static ROOT::Math::DistSampler * CreateDistSampler (const std::string &samplerType="""");  static method to create the distribution sampler class given a string specifying the type Supported sampler types are: Unuran, Foam If no name is given use default values defined in DistSamplerOptions ;  ; static ROOT::Math::Minimizer * CreateMinimizer (const std::string &minimizerType="""", const std::string &algoType="""");  static method to create the corresponding Minimizer given the string Supported Minimizers types are: Minuit (TMinuit), Minuit2, GSLMultiMin, GSLMultiFit, GSLSimAn, Linear, Fumili, Genetic If no name is given use default values defined in ROOT::Math::MinimizerOptions See also there for the possible options and algorithms available ;  . #include <Math/Factory.h>; Member Function Documentation. ◆ CreateDistSampler(). ROOT::Math::DistSampler * Factory::CreateDistSampler ; (; const std::string & ; samplerType = """"). static . static method to create the distribution sampler class given a string specifying the type Supported sampler types are: Unuran, Foam If no name is given use default values defined in DistSamplerOptions ; Definition at line 167 of file Factory.cxx. ◆ CreateMinimizer(). ROOT::Math::Minimizer * Factory::CreateMinimizer ; (; const std::string & ; minimizerType = """", . const std::string & ; algoType = """" . ). static . static method to create the corresponding Minimizer given the string Supported Minimizers types are: Minuit (TMinuit), Minuit2, GSLMultiMin, GSLMultiFit, GSLSimAn, Linear, Fumili, Genetic If no name is given use",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Factory.html:75,Guid,Guide,75,doc/master/classROOT_1_1Math_1_1Factory.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Factory.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::FastInverter< 3 > Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::FastInverter< 3 > Class Reference. ; 3x3 direct matrix inversion using Cramer Rule use only for FastInverter ; Definition at line 266 of file Dinv.h. Static Public Member Functions; template<class T > ; static bool Dinv (MatRepSym< T, 3 > &rhs);  Inversion for a 3x3 symmetric matrix. ;  ; template<class MatrixRep > ; static bool Dinv (MatrixRep &rhs);  Inversion for a 3x3 matrix. ;  . #include <Math/Dinv.h>; Member Function Documentation. ◆ Dinv() [1/2]. template<class T > . bool ROOT::Math::FastInverter< 3 >::Dinv ; (; MatRepSym< T, 3 > & ; rhs). static . Inversion for a 3x3 symmetric matrix. ; Definition at line 42 of file CramerInversionSym.icc. ◆ Dinv() [2/2]. template<class MatrixRep > . bool ROOT::Math::FastInverter< 3 >::Dinv ; (; MatrixRep & ; rhs). static . Inversion for a 3x3 matrix. ; Definition at line 44 of file CramerInversion.icc. The documentation for this class was generated from the following files:; math/smatrix/inc/Math/Dinv.h; math/smatrix/inc/Math/CramerInversion.icc; math/smatrix/inc/Math/CramerInversionSym.icc. ROOTMathFastInverter< 3 >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1FastInverter_3_013_01_4.html:85,Guid,Guide,85,doc/master/classROOT_1_1Math_1_1FastInverter_3_013_01_4.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1FastInverter_3_013_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::FastInverter< 4 > Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::FastInverter< 4 > Class Reference. ; 4x4 matrix inversion using Cramers rule. ; Definition at line 282 of file Dinv.h. Static Public Member Functions; template<class T > ; static bool Dinv (MatRepSym< T, 4 > &rhs);  Inversion for a 4x4 symmetric matrix. ;  ; template<class MatrixRep > ; static bool Dinv (MatrixRep &rhs);  Inversion for a 4x4 matrix. ;  . #include <Math/Dinv.h>; Member Function Documentation. ◆ Dinv() [1/2]. template<class T > . bool ROOT::Math::FastInverter< 4 >::Dinv ; (; MatRepSym< T, 4 > & ; rhs). static . Inversion for a 4x4 symmetric matrix. ; Definition at line 128 of file CramerInversionSym.icc. ◆ Dinv() [2/2]. template<class MatrixRep > . bool ROOT::Math::FastInverter< 4 >::Dinv ; (; MatrixRep & ; rhs). static . Inversion for a 4x4 matrix. ; Definition at line 135 of file CramerInversion.icc. The documentation for this class was generated from the following files:; math/smatrix/inc/Math/Dinv.h; math/smatrix/inc/Math/CramerInversion.icc; math/smatrix/inc/Math/CramerInversionSym.icc. ROOTMathFastInverter< 4 >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1FastInverter_3_014_01_4.html:85,Guid,Guide,85,doc/master/classROOT_1_1Math_1_1FastInverter_3_014_01_4.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1FastInverter_3_014_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::FastInverter< 5 > Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::FastInverter< 5 > Class Reference. ; 5x5 Matrix inversion using Cramers rule. ; Definition at line 297 of file Dinv.h. Static Public Member Functions; template<class T > ; static bool Dinv (MatRepSym< T, 5 > &rhs);  Inversion for a 5x5 symmetric matrix. ;  ; template<class MatrixRep > ; static bool Dinv (MatrixRep &rhs);  Inversion for a 5x5 matrix. ;  . #include <Math/Dinv.h>; Member Function Documentation. ◆ Dinv() [1/2]. template<class T > . bool ROOT::Math::FastInverter< 5 >::Dinv ; (; MatRepSym< T, 5 > & ; rhs). static . Inversion for a 5x5 symmetric matrix. ; Definition at line 245 of file CramerInversionSym.icc. ◆ Dinv() [2/2]. template<class MatrixRep > . bool ROOT::Math::FastInverter< 5 >::Dinv ; (; MatrixRep & ; rhs). static . Inversion for a 5x5 matrix. ; Definition at line 277 of file CramerInversion.icc. The documentation for this class was generated from the following files:; math/smatrix/inc/Math/Dinv.h; math/smatrix/inc/Math/CramerInversion.icc; math/smatrix/inc/Math/CramerInversionSym.icc. ROOTMathFastInverter< 5 >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1FastInverter_3_015_01_4.html:85,Guid,Guide,85,doc/master/classROOT_1_1Math_1_1FastInverter_3_015_01_4.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1FastInverter_3_015_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::FastInverter< idim, n > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::FastInverter< idim, n > Class Template Reference. ; template<unsigned int idim, unsigned int n = idim>; class ROOT::Math::FastInverter< idim, n >Fast Matrix Inverter class Class to specialize calls to Dinv. ; Dinv computes the inverse of a square matrix if dimension idim and order n. The content of the matrix will be replaced by its inverse. In case the inversion fails, the matrix content is destroyed. Invert specializes Dinv by the matrix order. E.g. if the order of the matrix is less than 5 , the class implements Cramers rule. Be careful that for matrix with high condition the accuracy of the Cramer rule is much poorer; AuthorL. Moneta ; Definition at line 144 of file Dinv.h. Static Public Member Functions; template<class T > ; static bool Dinv (MatRepSym< T, idim > &rhs);  ; template<class MatrixRep > ; static bool Dinv (MatrixRep &rhs);  . #include <Math/Dinv.h>; Member Function Documentation. ◆ Dinv() [1/2]. template<unsigned int idim, unsigned int n = idim> . template<class T > . static bool ROOT::Math::FastInverter< idim, n >::Dinv ; (; MatRepSym< T, idim > & ; rhs). inlinestatic . Definition at line 152 of file Dinv.h. ◆ Dinv() [2/2]. template<unsigned int idim, unsigned int n = idim> . template<class MatrixRep > . static bool ROOT::Math::FastInverter< idim, n >::Dinv ; (; MatrixRep & ; rhs). inlinestatic . Definition at line 148 of file Dinv.h. The documentation for this class was generated from the following file:; math/smatrix/inc/Math/Dinv.h. ROOTMathFastInverter. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1FastInverter.html:100,Guid,Guide,100,doc/master/classROOT_1_1Math_1_1FastInverter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1FastInverter.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::FitTransformFunction< FMFunc > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::FitTransformFunction< FMFunc > Class Template Reference. ; template<class FMFunc>; class ROOT::Math::FitTransformFunction< FMFunc >Internal class used by GSLNLSMinimizer to implement the transformation of the chi2 function used by GSL Non-linear Least-square fitting The class is template on the FitMethodFunction type to support both gradient and non gradient functions. ; Definition at line 40 of file GSLNLSMinimizer.cxx. Public Member Functions;  FitTransformFunction (const FMFunc &f, std::unique_ptr< MinimTransformFunction > transFunc);  ; virtual ~FitTransformFunction ();  ; virtual IMultiGenFunction * Clone () const;  ; virtual double DataElement (const double *x, unsigned i, double *g=nullptr, double *=nullptr, bool=false) const;  ; void GradientTransformation (const double *x, const double *gext, double *gint) const;  transform gradient vector (external -> internal) at internal point x ;  ; void InvStepTransformation (const double *x, const double *sext, double *sint) const;  inverse transformation for steps (external -> internal) at external point x ;  ; void InvTransformation (const double *xext, double *xint) const;  inverse transformation (external -> internal) ;  ; void MatrixTransformation (const double *x, const double *cint, double *cext) const;  ; virtual unsigned int NDim () const;  ; unsigned int NTot () const;  ; const double * Transformation (const double *x) const;  . Private Member Functions;  FitTransformFunction (const FitTransformFunction &rhs)=delete;  ; virtual double DoDerivative (const double *, unsigned int) const;  ; virtual double DoEval (const double *x) const;  ; FitTransformFunction & operator= (const FitTransformFunction &rhs)=delete;  . Private A",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1FitTransformFunction.html:107,Guid,Guide,107,doc/master/classROOT_1_1Math_1_1FitTransformFunction.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1FitTransformFunction.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Functor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::Functor Class ReferenceMath » MathCore » Function Classes and Interfaces » Generic Function Evaluation Interfaces. ; Documentation for class Functor class. ; It is used to wrap in a very simple and convenient way multi-dimensional function objects. It can wrap all the following types: . any C++ callable object implementation double operator()( const double * ) . a free C function of type double ()(const double * ) . an std::function of type std::function<double (double const *)> . a member function with the correct signature like Foo::Eval(const double * ). In this case one pass the object pointer and a pointer to the member function (&Foo::Eval) . The function dimension is required when constructing the functor. ; Definition at line 47 of file Functor.h. Public Member Functions;  Functor ();  Default constructor. ;  ; template<class PtrObj , typename MemFn > ;  Functor (const PtrObj &p, MemFn memFn, unsigned int dim);  Construct from a pointer to member function (multi-dim type). ;  ;  Functor (std::function< double(double const *)> const &f, unsigned int dim);  Construct from a callable object of multi-dimension with the right signature (implementing double operator()(const double *x)). ;  ; Functor * Clone () const override;  Clone a function. ;  ; unsigned int NDim () const override;  Retrieve the dimension of the function. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionMultiDimTempl< double >; virtual ~IBaseFunctionMultiDimTempl ()=default;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  . Private Member Functions; double DoEval (const double *x) const override;  Implementation of the evaluation function. Mu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Functor.html:75,Guid,Guide,75,doc/master/classROOT_1_1Math_1_1Functor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Functor.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: ROOT::Math::Functor1D Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::Functor1D Class ReferenceMath » MathCore » Function Classes and Interfaces » Generic Function Evaluation Interfaces. ; Functor1D class for one-dimensional functions. ; It is used to wrap in a very simple and convenient way: . any C++ callable object implementation double operator()( double ) . a free C function of type double ()(double ) . a member function with the correct signature like Foo::Eval(double ). In this case one pass the object pointer and a pointer to the member function (&Foo::Eval) . Definition at line 95 of file Functor.h. Public Member Functions;  Functor1D ()=default;  Default constructor. ;  ; template<class PtrObj , typename MemFn > ;  Functor1D (const PtrObj &p, MemFn memFn);  ;  Functor1D (std::function< double(double)> const &f);  Construct from a callable object with the right signature implementing double operator() (double x). ;  ; Functor1D * Clone () const override;  Clone a function. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  . Private Member Functions; double DoEval (double x) const override;  implementation of the evaluation function. Must be implemented by derived classes ;  . Private Attributes; std::function< double(double)> fFunc;  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . #include <Math/Functor.h>. Inheritance diagram for ROOT::Math::Functor1D:. This browser is not able to show SVG: try Firefox, Chrome, Safa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Functor1D.html:77,Guid,Guide,77,doc/master/classROOT_1_1Math_1_1Functor1D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Functor1D.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,. ROOT: ROOT::Math::GSL1DMinimizerWrapper Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSL1DMinimizerWrapper Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » One-dimensional Minimization. ; wrapper class for gsl_min_fminimizer structure ; Definition at line 44 of file GSL1DMinimizerWrapper.h. Public Member Functions;  GSL1DMinimizerWrapper (const GSL1DMinimizerWrapper &)=delete;  ;  GSL1DMinimizerWrapper (const gsl_min_fminimizer_type *T);  ;  GSL1DMinimizerWrapper (GSL1DMinimizerWrapper &&)=delete;  ; virtual ~GSL1DMinimizerWrapper ();  ; gsl_min_fminimizer * Get () const;  ; GSL1DMinimizerWrapper & operator= (const GSL1DMinimizerWrapper &)=delete;  ; GSL1DMinimizerWrapper & operator= (GSL1DMinimizerWrapper &&)=delete;  . Private Attributes; gsl_min_fminimizer * fMinimizer;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSL1DMinimizerWrapper.h>; Constructor & Destructor Documentation. ◆ GSL1DMinimizerWrapper() [1/3]. ROOT::Math::GSL1DMinimizerWrapper::GSL1DMinimizerWrapper ; (; const gsl_min_fminimizer_type * ; T). inline . Definition at line 47 of file GSL1DMinimizerWrapper.h. ◆ ~GSL1DMinimizerWrapper(). virtual ROOT::Math::GSL1DMinimizerWrapper::~GSL1DMinimizerWrapper ; (; ). inlinevirtual . Definition at line 51 of file GSL1DMinimizerWrapper.h. ◆ GSL1DMinimizerWrapper() [2/3]. ROOT::Math::GSL1DMinimizerWrapper::GSL1DMinimizerWrapper ; (; const GSL1DMinimizerWrapper & ; ). delete . ◆ GSL1DMinimizerWrapper() [3/3]. ROOT::Math::GSL1DMinimizerWrapper::GSL1DMinimizerWrapper ; (; GSL1DMinimizerWrapper && ; ). delete . Member Function Documentation. ◆ Get(). gsl_min_fminimizer * ROOT::Math::GSL1DMinimizerWrapper::Get ; (; ); const. inline . Definition at line 61 of file GSL1DMinimizerWrapper.h. ◆ operator=() [1/2]. GSL1DMinimizerWr,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSL1DMinimizerWrapper.html:89,Guid,Guide,89,doc/master/classROOT_1_1Math_1_1GSL1DMinimizerWrapper.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSL1DMinimizerWrapper.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::GSLChebSeries Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLChebSeries Class Reference. ; wrapper class for C struct gsl_cheb_series ; Definition at line 44 of file GSLChebSeries.h. Public Member Functions;  GSLChebSeries (const GSLChebSeries &)=delete;  ;  GSLChebSeries (GSLChebSeries &&)=delete;  ;  GSLChebSeries (size_t n);  ; virtual ~GSLChebSeries ();  ; gsl_cheb_series * get () const;  ; GSLChebSeries & operator= (const GSLChebSeries &)=delete;  ; GSLChebSeries & operator= (GSLChebSeries &&)=delete;  . Private Attributes; gsl_cheb_series * m_cs;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLChebSeries.h>; Constructor & Destructor Documentation. ◆ GSLChebSeries() [1/3]. ROOT::Math::GSLChebSeries::GSLChebSeries ; (; size_t ; n). inline . Definition at line 47 of file GSLChebSeries.h. ◆ ~GSLChebSeries(). virtual ROOT::Math::GSLChebSeries::~GSLChebSeries ; (; ). inlinevirtual . Definition at line 52 of file GSLChebSeries.h. ◆ GSLChebSeries() [2/3]. ROOT::Math::GSLChebSeries::GSLChebSeries ; (; const GSLChebSeries & ; ). delete . ◆ GSLChebSeries() [3/3]. ROOT::Math::GSLChebSeries::GSLChebSeries ; (; GSLChebSeries && ; ). delete . Member Function Documentation. ◆ get(). gsl_cheb_series * ROOT::Math::GSLChebSeries::get ; (; ); const. inline . Definition at line 62 of file GSLChebSeries.h. ◆ operator=() [1/2]. GSLChebSeries & ROOT::Math::GSLChebSeries::operator= ; (; const GSLChebSeries & ; ). delete . ◆ operator=() [2/2]. GSLChebSeries & ROOT::Math::GSLChebSeries::operator= ; (; GSLChebSeries && ; ). delete . Member Data Documentation. ◆ m_cs. gsl_cheb_series* ROOT::Math::GSLChebSeries::m_cs. private . Definition at line 66 of file GSLChebSeries.h. math/mathmore/src/GSLChebSeries.h. ROOTMathGSLChebSeries. ROOT master - Reference,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLChebSeries.html:81,Guid,Guide,81,doc/master/classROOT_1_1Math_1_1GSLChebSeries.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLChebSeries.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLDerivator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::GSLDerivator Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Differentiation. ; Class for computing numerical derivative of a function based on the GSL numerical algorithm This class is implemented using the numerical derivatives algorithms provided by GSL (see GSL Online Manual ). ; Definition at line 62 of file GSLDerivator.h. Public Member Functions;  GSLDerivator ();  Default Constructor of a GSLDerivator class based on GSL numerical differentiation algorithms. ;  ; virtual ~GSLDerivator ();  destructor (no operations) ;  ; double EvalBackward (double x, double h);  Computes the numerical derivative at a point x using an adaptive backward difference algorithm with a step size h. ;  ; double EvalCentral (double x, double h);  Computes the numerical derivative at a point x using an adaptive central difference algorithm with a step size h. ;  ; double EvalForward (double x, double h);  Computes the numerical derivative at a point x using an adaptive forward difference algorithm with a step size h. ;  ; void SetFunction (const IGenFunction &f);  Set the function for calculating the derivatives. ;  ; void SetFunction (GSLFuncPointer f, void *p=nullptr);  Set the function f for evaluating the derivative using a GSL function pointer type. ;  . — Static methods —; int fStatus;  ; double fResult;  ; double fError;  ; GSLFunctionWrapper fFunction;  ; int Status () const;  return the error status of the last integral calculation ;  ; double Result () const;  return the result of the last derivative calculation ;  ; double Error () const;  return the estimate of the absolute error of the last derivative calculation ;  ; static double EvalCentral (const IGenFunction &f, double x, double h);  Computes the numerical derivative of a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLDerivator.html:80,Guid,Guide,80,doc/master/classROOT_1_1Math_1_1GSLDerivator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLDerivator.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLError Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; ROOT::Math::GSLError Class Reference. ; class to change GSL Error handler to use ROOT one. ; It is used only when building the dictionary (G__DICTIONARY is defined) and not in the stand-alone version of the library. In that case the default GSL error handler is used ; Definition at line 38 of file GSLError.cxx. Public Member Functions;  GSLError ();  . Static Public Member Functions; static void Handler (const char *reason, const char *file, int line, int gsl_errno);  . Constructor & Destructor Documentation. ◆ GSLError(). ROOT::Math::GSLError::GSLError ; (; ). inline . Definition at line 42 of file GSLError.cxx. Member Function Documentation. ◆ Handler(). static void ROOT::Math::GSLError::Handler ; (; const char * ; reason, . const char * ; file, . int ; line, . int ; gsl_errno . ). inlinestatic . Definition at line 47 of file GSLError.cxx. The documentation for this class was generated from the following file:; math/mathmore/src/GSLError.cxx. ROOTMathGSLError. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLError.html:76,Guid,Guide,76,doc/master/classROOT_1_1Math_1_1GSLError.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLError.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLFunctionAdapter< UserFunc > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; ROOT::Math::GSLFunctionAdapter< UserFunc > Class Template Reference. ; template<class UserFunc>; class ROOT::Math::GSLFunctionAdapter< UserFunc >Class for adapting any C++ functor class to C function pointers used by GSL. ; The templated C++ function class must implement:; double operator( double x) and if the derivatives are required: double Gradient( double x); This class defines static methods with will be used to fill the gsl_function and gsl_function_fdf structs used by GSL. See for examples the GSL online manual ; Definition at line 63 of file GSLFunctionAdapter.h. Public Member Functions;  GSLFunctionAdapter ();  ; virtual ~GSLFunctionAdapter ();  . Static Public Member Functions; static double Df (double x, void *p);  ; static double F (double x, void *p);  ; static void Fdf (double x, void *p, double *f, double *df);  . #include <Math/GSLFunctionAdapter.h>; Constructor & Destructor Documentation. ◆ GSLFunctionAdapter(). template<class UserFunc > . ROOT::Math::GSLFunctionAdapter< UserFunc >::GSLFunctionAdapter ; (; ). inline . Definition at line 67 of file GSLFunctionAdapter.h. ◆ ~GSLFunctionAdapter(). template<class UserFunc > . virtual ROOT::Math::GSLFunctionAdapter< UserFunc >::~GSLFunctionAdapter ; (; ). inlinevirtual . Definition at line 68 of file GSLFunctionAdapter.h. Member Function Documentation. ◆ Df(). template<class UserFunc > . static double ROOT::Math::GSLFunctionAdapter< UserFunc >::Df ; (; double ; x, . void * ; p . ). inlinestatic . Definition at line 77 of file GSLFunctionAdapter.h. ◆ F(). template<class UserFunc > . static double ROOT::Math::GSLFunctionAdapter< UserFunc >::F ; (; double ; x, . void * ; p . ). inlinestatic . Definition at line 70 of file GSLFunctionAdapter.h. ◆ Fdf(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLFunctionAdapter.html:107,Guid,Guide,107,doc/master/classROOT_1_1Math_1_1GSLFunctionAdapter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLFunctionAdapter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLFunctionDerivWrapper Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLFunctionDerivWrapper Class Reference. ; class to wrap a gsl_function_fdf (with derivatives) ; Definition at line 105 of file GSLFunctionWrapper.h. Public Member Functions;  GSLFunctionDerivWrapper ();  ; double Derivative (double x);  ; void Fdf (double x, double &f, double &df);  ; gsl_function_fdf * GetFunc ();  ; bool IsValid ();  check if function is valid (has been set) ;  ; double operator() (double x);  ; void SetDerivPointer (GSLFuncPointer f);  ; void SetFdfPointer (GSLFdfPointer f);  ; void SetFuncPointer (GSLFuncPointer f);  ; void SetParams (void *p);  . Private Attributes; gsl_function_fdf fFunc;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLFunctionWrapper.h>; Constructor & Destructor Documentation. ◆ GSLFunctionDerivWrapper(). ROOT::Math::GSLFunctionDerivWrapper::GSLFunctionDerivWrapper ; (; ). inline . Definition at line 109 of file GSLFunctionWrapper.h. Member Function Documentation. ◆ Derivative(). double ROOT::Math::GSLFunctionDerivWrapper::Derivative ; (; double ; x). inline . Definition at line 129 of file GSLFunctionWrapper.h. ◆ Fdf(). void ROOT::Math::GSLFunctionDerivWrapper::Fdf ; (; double ; x, . double & ; f, . double & ; df . ). inline . Definition at line 131 of file GSLFunctionWrapper.h. ◆ GetFunc(). gsl_function_fdf * ROOT::Math::GSLFunctionDerivWrapper::GetFunc ; (; ). inline . Definition at line 124 of file GSLFunctionWrapper.h. ◆ IsValid(). bool ROOT::Math::GSLFunctionDerivWrapper::IsValid ; (; ). inline . check if function is valid (has been set) ; Definition at line 136 of file GSLFunctionWrapper.h. ◆ operator()(). double ROOT::Math::GSLFunctionDerivWrapper::operator() ; (; double ; x). inline . Definition at line 127 of fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLFunctionDerivWrapper.html:91,Guid,Guide,91,doc/master/classROOT_1_1Math_1_1GSLFunctionDerivWrapper.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLFunctionDerivWrapper.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::GSLFunctionWrapper Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLFunctionWrapper Class Reference. ; Wrapper class to the gsl_function C structure. ; This class to fill the GSL C structure gsl_function with the C++ function objcet. Use the class ROOT::Math::GSLFunctionAdapter to adapt the C++ function object to the right signature (function pointer type) requested by GSL ; Definition at line 57 of file GSLFunctionWrapper.h. Public Member Functions;  GSLFunctionWrapper ();  ; GSLFuncPointer FunctionPtr ();  ; gsl_function * GetFunc ();  ; bool IsValid ();  check if function is valid (has been set) ;  ; double operator() (double x);  ; void SetFuncPointer (GSLFuncPointer f);  set in the GSL C struct the pointer to the function evaluation ;  ; template<class FuncType > ; void SetFunction (const FuncType &f);  fill the GSL C struct from a generic C++ callable object implementing operator() ;  ; void SetParams (void *p);  set in the GSL C struct the extra-object pointer ;  . Private Attributes; gsl_function fFunc;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLFunctionWrapper.h>; Constructor & Destructor Documentation. ◆ GSLFunctionWrapper(). ROOT::Math::GSLFunctionWrapper::GSLFunctionWrapper ; (; ). inline . Definition at line 61 of file GSLFunctionWrapper.h. Member Function Documentation. ◆ FunctionPtr(). GSLFuncPointer ROOT::Math::GSLFunctionWrapper::FunctionPtr ; (; ). inline . Definition at line 85 of file GSLFunctionWrapper.h. ◆ GetFunc(). gsl_function * ROOT::Math::GSLFunctionWrapper::GetFunc ; (; ). inline . Definition at line 83 of file GSLFunctionWrapper.h. ◆ IsValid(). bool ROOT::Math::GSLFunctionWrapper::IsValid ; (; ). inline . check if function is valid (has been set) ; Definition at line 91 of file GSLFunctionWrapper.h.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLFunctionWrapper.html:86,Guid,Guide,86,doc/master/classROOT_1_1Math_1_1GSLFunctionWrapper.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLFunctionWrapper.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::GSLIntegrationWorkspace Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLIntegrationWorkspace Class Reference. . Definition at line 44 of file GSLIntegrationWorkspace.h. Public Member Functions;  GSLIntegrationWorkspace (size_t n);  ;  ~GSLIntegrationWorkspace ();  ; gsl_integration_workspace * GetWS ();  . Private Attributes; gsl_integration_workspace * fWs;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLIntegrationWorkspace.h>; Constructor & Destructor Documentation. ◆ GSLIntegrationWorkspace(). ROOT::Math::GSLIntegrationWorkspace::GSLIntegrationWorkspace ; (; size_t ; n). inline . Definition at line 48 of file GSLIntegrationWorkspace.h. ◆ ~GSLIntegrationWorkspace(). ROOT::Math::GSLIntegrationWorkspace::~GSLIntegrationWorkspace ; (; ). inline . Definition at line 51 of file GSLIntegrationWorkspace.h. Member Function Documentation. ◆ GetWS(). gsl_integration_workspace * ROOT::Math::GSLIntegrationWorkspace::GetWS ; (; ). inline . Definition at line 55 of file GSLIntegrationWorkspace.h. Member Data Documentation. ◆ fWs. gsl_integration_workspace* ROOT::Math::GSLIntegrationWorkspace::fWs. private . Definition at line 58 of file GSLIntegrationWorkspace.h. math/mathmore/src/GSLIntegrationWorkspace.h. ROOTMathGSLIntegrationWorkspace. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLIntegrationWorkspace.html:91,Guid,Guide,91,doc/master/classROOT_1_1Math_1_1GSLIntegrationWorkspace.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLIntegrationWorkspace.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLIntegrator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLIntegrator Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; Class for performing numerical integration of a function in one dimension. ; It uses the numerical integration algorithms of GSL, which reimplements the algorithms used in the QUADPACK, a numerical integration package written in Fortran.; Various types of adaptive and non-adaptive integration are supported. These include integration over infinite and semi-infinite ranges and singular integrals.; The integration type is selected using the Integration::type enumeration in the class constructor. The default type is adaptive integration with singularity (ADAPTIVESINGULAR or QAGS in the QUADPACK convention) applying a Gauss-Kronrod 21-point integration rule. In the case of ADAPTIVE type, the integration rule can also be specified via the Integration::GKRule. The default rule is 31 points.; In the case of integration over infinite and semi-infinite ranges, the type used is always ADAPTIVESINGULAR applying a transformation from the original interval into (0,1).; The ADAPTIVESINGULAR type is the most sophicticated type. When performances are important, it is then recommended to use the NONADAPTIVE type in case of smooth functions or ADAPTIVE with a lower Gauss-Kronrod rule.; For detailed description on GSL integration algorithms see the GSL Manual. ; Definition at line 90 of file GSLIntegrator.h. Public Member Functions;  GSLIntegrator (const char *type, int rule, double absTol, double relTol, size_t size);  constructor of GSL Integrator. ;  ;  GSLIntegrator (const Integration::Type type, const Integration::GKRule rule, double absTol=1.E-9, double relTol=1E-6, size_t size=1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLIntegrator.html:81,Guid,Guide,81,doc/master/classROOT_1_1Math_1_1GSLIntegrator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLIntegrator.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLInterpolator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLInterpolator Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Interpolation Classes. ; Interpolation class based on GSL interpolation functions. ; Definition at line 55 of file GSLInterpolator.h. Public Member Functions;  GSLInterpolator (const GSLInterpolator &)=delete;  ;  GSLInterpolator (const Interpolation::Type type, const std::vector< double > &x, const std::vector< double > &y);  ;  GSLInterpolator (GSLInterpolator &&)=delete;  ;  GSLInterpolator (unsigned int ndata, Interpolation::Type type);  ; virtual ~GSLInterpolator ();  ; double Deriv (double x) const;  ; double Deriv2 (double x) const;  ; double Eval (double x) const;  ; bool Init (unsigned int ndata, const double *x, const double *y);  ; double Integ (double a, double b) const;  ; std::string Name ();  ; GSLInterpolator & operator= (const GSLInterpolator &)=delete;  ; GSLInterpolator & operator= (GSLInterpolator &&)=delete;  . Private Attributes; gsl_interp_accel * fAccel;  ; const gsl_interp_type * fInterpType;  ; bool fResetNErrors;  ; gsl_spline * fSpline;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLInterpolator.h>; Constructor & Destructor Documentation. ◆ GSLInterpolator() [1/4]. ROOT::Math::GSLInterpolator::GSLInterpolator ; (; unsigned int ; ndata, . Interpolation::Type ; type . ). Definition at line 41 of file GSLInterpolator.cxx. ◆ GSLInterpolator() [2/4]. ROOT::Math::GSLInterpolator::GSLInterpolator ; (; const Interpolation::Type ; type, . const std::vector< double > & ; x, . const std::vector< double > & ; y . ). ◆ ~GSLInterpolator(). ROOT::Math::GSLInterpolator::~GSLInterpolator ; (; ). virtual . Definition at line 115 of file GSLInterpolator.cxx. ◆ GSLInterpolat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLInterpolator.html:83,Guid,Guide,83,doc/master/classROOT_1_1Math_1_1GSLInterpolator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLInterpolator.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLMCIntegrationWorkspace Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::GSLMCIntegrationWorkspace Class Referenceabstract. . Definition at line 49 of file GSLMCIntegrationWorkspace.h. Public Member Functions;  GSLMCIntegrationWorkspace ();  ; virtual ~GSLMCIntegrationWorkspace ();  ; virtual void Clear ();  free the workspace deleting the GSL pointer ;  ; virtual bool Init (size_t dim)=0;  initialize the workspace creating the GSL pointer if it is not there ;  ; virtual size_t NDim () const;  ; virtual std::unique_ptr< ROOT::Math::IOptions > Options () const =0;  retrieve option pointer corresponding to parameters create a new object to be managed by the user ;  ; virtual bool ReInit ()=0;  re-initialize an existing the workspace ;  ; virtual void SetOptions (const ROOT::Math::IOptions &)=0;  set options ;  ; virtual MCIntegration::Type Type () const =0;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMCIntegrationWorkspace.h>. Inheritance diagram for ROOT::Math::GSLMCIntegrationWorkspace:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ GSLMCIntegrationWorkspace(). ROOT::Math::GSLMCIntegrationWorkspace::GSLMCIntegrationWorkspace ; (; ). inline . Definition at line 53 of file GSLMCIntegrationWorkspace.h. ◆ ~GSLMCIntegrationWorkspace(). virtual ROOT::Math::GSLMCIntegrationWorkspace::~GSLMCIntegrationWorkspace ; (; ). inlinevirtual . Definition at line 55 of file GSLMCIntegrationWorkspace.h. Member Function Documentation. ◆ Clear(). virtual void ROOT::Math::GSLMCIntegrationWorkspace::Clear ; (; ). inlinevirtual . free the workspace deleting the GSL pointer ; Reimplemented in ROOT::Math::GSLVegasIntegrationWorkspace, ROOT::Math::GSLMiserIntegrationWorkspace, and ROOT::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMCIntegrationWorkspace.html:93,Guid,Guide,93,doc/master/classROOT_1_1Math_1_1GSLMCIntegrationWorkspace.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMCIntegrationWorkspace.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: ROOT::Math::GSLMCIntegrator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLMCIntegrator Class Reference. . Definition at line 74 of file GSLMCIntegrator.h. Public Types; typedef double(* GSLMonteFuncPointer) (double *, size_t, void *);  ; typedef MCIntegration::Type Type;  . Public Member Functions;  GSLMCIntegrator (const char *type, double absTol, double relTol, unsigned int calls);  constructor of GSL MCIntegrator. ;  ;  GSLMCIntegrator (MCIntegration::Type type=MCIntegration::kVEGAS, double absTol=-1, double relTol=-1, unsigned int calls=0);  constructor of GSL MCIntegrator. ;  ;  ~GSLMCIntegrator () override;  destructor ;  ; double ChiSqr ();  returns chi-squared per degree of freedom for the estimate of the integral in the Vegas algorithm ;  ; double Error () const override;  return the estimate of the absolute Error of the last Integral calculation ;  ; std::unique_ptr< ROOT::Math::IOptions > ExtraOptions () const;  get the specific options (for Vegas or Miser) in term of string- name. ;  ; MCIntegration::Type GetType () const;  return the type (need to be called GetType to avoid a conflict with typedef) ;  ; const char * GetTypeName () const;  return the name ;  ; double Integral (const double *a, const double *b) override;  evaluate the integral using the previously defined function ;  ; double Integral (const GSLMonteFuncPointer &f, unsigned int dim, double *a, double *b, void *p=nullptr);  evaluate the Integral of a function f over the defined hypercube (a,b) ;  ; int NEval () const override;  return number of function evaluations in calculating the integral (This is an fixed by the user) ;  ; ROOT::Math::IntegratorMultiDimOptions Options () const override;  get the option used for the integration ;  ; double Result (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMCIntegrator.html:83,Guid,Guide,83,doc/master/classROOT_1_1Math_1_1GSLMCIntegrator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMCIntegrator.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLMinimizer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLMinimizer Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; GSLMinimizer class. ; Implementation of the ROOT::Math::Minimizer interface using the GSL multi-dimensional minimization algorithms.; See GSL doc from more info on the GSL minimization algorithms.; The class implements the ROOT::Math::Minimizer interface and can be instantiated using the ROOT plugin manager (plugin name is ""GSLMultiMin""). The various minimization algorithms (conjugatefr, conjugatepr, bfgs, etc..) can be passed as enumerations and also as a string. The default algorithm is conjugatefr (Fletcher-Reeves conjugate gradient algorithm). ; Definition at line 79 of file GSLMinimizer.h. Public Member Functions;  GSLMinimizer (const char *type);  Constructor with a string giving name of algorithm. ;  ;  GSLMinimizer (ROOT::Math::EGSLMinimizerType type=ROOT::Math::kConjugateFR);  Default constructor. ;  ;  ~GSLMinimizer () override;  Destructor. ;  ; double CovMatrix (unsigned int, unsigned int) const override;  return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ;  ; double Edm () const override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) ov",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMinimizer.html:80,Guid,Guide,80,doc/master/classROOT_1_1Math_1_1GSLMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMinimizer.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLMinimizer1D Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLMinimizer1D Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » One-dimensional Minimization. ; Minimizer for arbitrary one dimensional functions. ; Implemented using GSL, for detailed description see: GSL online doc; The algorithms uspported are only bracketing algorithm which do not use derivatives information. The algorithms which can be chosen at construction time are GOLDENSECTION, which is the simplest method but the slowest and BRENT (the default one) which combines the golden section with a parabolic interpolation.; This class does not support copying ; Definition at line 81 of file GSLMinimizer1D.h. Public Member Functions;  GSLMinimizer1D (const GSLMinimizer1D &)=delete;  ;  GSLMinimizer1D (GSLMinimizer1D &&)=delete;  ;  GSLMinimizer1D (Minim1D::Type type=Minim1D::kBRENT);  Construct the minimizer passing the minimizer type using the Minim1D::Algorithm enumeration. ;  ;  ~GSLMinimizer1D () override;  Destructor: free allocated resources. ;  ; double FValLower () const override;  Return function value at current lower bound of the minimization interval. ;  ; double FValMinimum () const override;  Return function value at current estimate of the minimum. ;  ; double FValUpper () const override;  Return function value at current upper bound of the minimization interval. ;  ; int Iterate ();  Perform a minimizer iteration and if an unexpected problem occurs then an error code will be returned. ;  ; int Iterations () const override;  Return number of iteration used to find minimum. ;  ; bool Minimize (int maxIter, double absTol, double relTol) override;  Find minimum position iterating until convergence specified by the absolute and relative tolerance or the maximum num",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMinimizer1D.html:82,Guid,Guide,82,doc/master/classROOT_1_1Math_1_1GSLMinimizer1D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMinimizer1D.html,2,"['Guid', 'simpl']","['Guide', 'simplest']"
Usability,". ROOT: ROOT::Math::GSLMiserIntegrationWorkspace Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLMiserIntegrationWorkspace Class Reference. ; Workspace for MISER. ; Definition at line 162 of file GSLMCIntegrationWorkspace.h. Public Member Functions;  GSLMiserIntegrationWorkspace (size_t dim=0);  ; void Clear () override;  free the workspace deleting the GSL pointer ;  ; gsl_monte_miser_state * GetWS ();  ; bool Init (size_t dim) override;  initialize the workspace creating the GSL pointer if it is not there ;  ; size_t NDim () const override;  ; std::unique_ptr< ROOT::Math::IOptions > Options () const override;  retrieve option pointer corresponding to parameters create a new object to be managed by the user ;  ; MiserParameters & Parameters ();  ; const MiserParameters & Parameters () const;  ; bool ReInit () override;  re-initialize an existing the workspace ;  ; virtual void SetOptions (const ROOT::Math::IOptions &opt) override;  set options ;  ; void SetParameters (const MiserParameters &p);  ; MCIntegration::Type Type () const override;  ;  Public Member Functions inherited from ROOT::Math::GSLMCIntegrationWorkspace;  GSLMCIntegrationWorkspace ();  ; virtual ~GSLMCIntegrationWorkspace ();  . Private Member Functions; void SetMiserParameters ();  . Private Attributes; bool fHaveNewParams;  ; MiserParameters fParams;  ; gsl_monte_miser_state * fWs;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMCIntegrationWorkspace.h>. Inheritance diagram for ROOT::Math::GSLMiserIntegrationWorkspace:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ GSLMiserIntegrationWorkspace(). ROOT::Math::GSLMiserIntegrationWorkspace::GSLMiserIntegrationWorksp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMiserIntegrationWorkspace.html:96,Guid,Guide,96,doc/master/classROOT_1_1Math_1_1GSLMiserIntegrationWorkspace.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMiserIntegrationWorkspace.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: ROOT::Math::GSLMonteFunctionAdapter< UserFunc > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::GSLMonteFunctionAdapter< UserFunc > Struct Template Reference. ; template<class UserFunc>; struct ROOT::Math::GSLMonteFunctionAdapter< UserFunc >; Definition at line 59 of file GSLMonteFunctionAdapter.h. Static Public Member Functions; static double F (double *x, size_t, void *p);  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMonteFunctionAdapter.h>; Member Function Documentation. ◆ F(). template<class UserFunc > . static double ROOT::Math::GSLMonteFunctionAdapter< UserFunc >::F ; (; double * ; x, . size_t ; , . void * ; p . ). inlinestatic . Definition at line 61 of file GSLMonteFunctionAdapter.h. The documentation for this struct was generated from the following file:; math/mathmore/src/GSLMonteFunctionAdapter.h. ROOTMathGSLMonteFunctionAdapter. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1GSLMonteFunctionAdapter.html:113,Guid,Guide,113,doc/master/structROOT_1_1Math_1_1GSLMonteFunctionAdapter.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1GSLMonteFunctionAdapter.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::GSLMonteFunctionWrapper Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLMonteFunctionWrapper Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration » Numerical Monte Carlo Integration Classes. ; wrapper to a multi-dim function withtout derivatives for Monte Carlo multi-dimensional integration algorithm ; Definition at line 57 of file GSLMonteFunctionWrapper.h. Public Member Functions;  GSLMonteFunctionWrapper ();  ; gsl_monte_function * GetFunc ();  ; double operator() (const double *x);  evaluate the function and derivatives ;  ; void SetDim (unsigned int n);  ; void SetFuncPointer (GSLMonteFuncPointer f);  ; template<class FuncType > ; void SetFunction (const FuncType &f);  Fill gsl function structure from a C++ Function class. ;  ; void SetParams (void *p);  . Private Attributes; gsl_monte_function fFunc;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMonteFunctionWrapper.h>; Constructor & Destructor Documentation. ◆ GSLMonteFunctionWrapper(). ROOT::Math::GSLMonteFunctionWrapper::GSLMonteFunctionWrapper ; (; ). inline . Definition at line 61 of file GSLMonteFunctionWrapper.h. Member Function Documentation. ◆ GetFunc(). gsl_monte_function * ROOT::Math::GSLMonteFunctionWrapper::GetFunc ; (; ). inline . Definition at line 82 of file GSLMonteFunctionWrapper.h. ◆ operator()(). double ROOT::Math::GSLMonteFunctionWrapper::operator() ; (; const double * ; x). inline . evaluate the function and derivatives ; Definition at line 85 of file GSLMonteFunctionWrapper.h. ◆ SetDim(). void ROOT::Math::GSLMonteFunctionWrapper::SetDim ; (; unsigned int ; n). inline . Definition at line 69 of file GSLMonteFunctionWrapper.h. ◆ SetFuncPointer(). void ROOT::Math::GSLMonteFunctionWrapper::SetFuncPointer ; (; GSL,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMonteFunctionWrapper.html:91,Guid,Guide,91,doc/master/classROOT_1_1Math_1_1GSLMonteFunctionWrapper.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMonteFunctionWrapper.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLMultiFit Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLMultiFit Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; GSLMultiFit, internal class for implementing GSL non linear least square GSL fitting. ; Definition at line 53 of file GSLMultiFit.h. Public Member Functions;  GSLMultiFit (const gsl_multifit_fdfsolver_type *type=nullptr);  Default constructor No need to specify the type so far since only one solver exists so far. ;  ;  GSLMultiFit (const GSLMultiFit &)=delete;  ;  GSLMultiFit (GSLMultiFit &&)=delete;  ;  ~GSLMultiFit ();  Destructor (no operations) ;  ; const double * CovarMatrix () const;  return covariance matrix of the parameters ;  ; void CreateSolver (unsigned int npoints, unsigned int npar);  create the minimizer from the type and size of number of fitting points and number of parameters ;  ; double Edm () const;  ; const double * Gradient () const;  gradient value at the minimum ;  ; int Iterate ();  ; std::string Name () const;  ; GSLMultiFit & operator= (const GSLMultiFit &rhs)=delete;  ; GSLMultiFit & operator= (GSLMultiFit &&rhs)=delete;  ; template<class Func > ; int Set (const std::vector< Func > &funcVec, const double *x);  set the solver parameters ;  ; int TestDelta (double absTol, double relTol) const;  test using abs and relative tolerance |dx| < absTol + relTol*|x| for every component ;  ; int TestGradient (double absTol) const;  test gradient (ask from solver gradient vector) ;  ; const double * X () const;  parameter values at the minimum ;  . Private Attributes; gsl_matrix * fCov;  ; GSLMultiFitFunctionWrapper fFunc;  ; gsl_multifit_fdfsolver * fSolver;  ; gsl_vector * fTmp;  ; const gsl_multifit_fdfsolver_type * fType;  ; gsl_vector * fVec;  . #include </home/sftnight/build/workspace/root-makedo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiFit.html:79,Guid,Guide,79,doc/master/classROOT_1_1Math_1_1GSLMultiFit.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiFit.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLMultiFitFunctionAdapter< FuncVector > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::GSLMultiFitFunctionAdapter< FuncVector > Class Template ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; template<class FuncVector>; class ROOT::Math::GSLMultiFitFunctionAdapter< FuncVector >Class for adapting a C++ functor class to C function pointers used by GSL MultiFit Algorithm The templated C++ function class must implement: ; double operator( const double * x) and if the derivatives are required: void Gradient( const double * x, double * g) and void FdF( const double * x, double &f, double * g); This class defines static methods with will be used to fill the gsl_multimin_function and gsl_multimin_function_fdf structs used by GSL. See for examples the GSL online manual ; Definition at line 69 of file GSLMultiFitFunctionAdapter.h. Static Public Member Functions; static int Df (const gsl_vector *x, void *p, gsl_matrix *h);  ; static int F (const gsl_vector *x, void *p, gsl_vector *f);  ; static int FDf (const gsl_vector *x, void *p, gsl_vector *f, gsl_matrix *h);  evaluate derivative and function at the same time ;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMultiFitFunctionAdapter.h>; Member Function Documentation. ◆ Df(). template<class FuncVector > . static int ROOT::Math::GSLMultiFitFunctionAdapter< FuncVector >::Df ; (; const gsl_vector * ; x, . void * ; p, . gsl_matrix * ; h . ). inlinestatic . Definition at line 86 of file GSLMultiFitFunctionAdapter.h. ◆ F(). template<class FuncVector > . static int ROOT::Math::GSLMultiFitFunctionAdapter< FuncVector >::F ; (; const gsl_vector * ; x, . void * ; p, . gsl_vector * ; f . ). inlinestatic . Definition at line 73 of file GSLMultiFitFunctionAda",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiFitFunctionAdapter.html:117,Guid,Guide,117,doc/master/classROOT_1_1Math_1_1GSLMultiFitFunctionAdapter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiFitFunctionAdapter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLMultiFitFunctionWrapper Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLMultiFitFunctionWrapper Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; wrapper to a multi-dim function withtout derivatives for multi-dimensional minimization algorithm ; Definition at line 58 of file GSLMultiFitFunctionWrapper.h. Public Member Functions;  GSLMultiFitFunctionWrapper ();  ; gsl_multifit_function_fdf * GetFunc ();  ; template<class FuncVector > ; void SetFunction (const FuncVector &f, unsigned int nres, unsigned int npar);  Fill gsl function structure from a C++ function iterator and size and number of residuals. ;  . Private Attributes; gsl_multifit_function_fdf fFunc;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMultiFitFunctionWrapper.h>; Constructor & Destructor Documentation. ◆ GSLMultiFitFunctionWrapper(). ROOT::Math::GSLMultiFitFunctionWrapper::GSLMultiFitFunctionWrapper ; (; ). inline . Definition at line 62 of file GSLMultiFitFunctionWrapper.h. Member Function Documentation. ◆ GetFunc(). gsl_multifit_function_fdf * ROOT::Math::GSLMultiFitFunctionWrapper::GetFunc ; (; ). inline . Definition at line 90 of file GSLMultiFitFunctionWrapper.h. ◆ SetFunction(). template<class FuncVector > . void ROOT::Math::GSLMultiFitFunctionWrapper::SetFunction ; (; const FuncVector & ; f, . unsigned int ; nres, . unsigned int ; npar . ). inline . Fill gsl function structure from a C++ function iterator and size and number of residuals. ; Definition at line 79 of file GSLMultiFitFunctionWrapper.h. Member Data Documentation. ◆ fFunc. gsl_multifit_function_fdf ROOT::Math::GSLMultiFitFunctionWrapper::fFunc. private . Definition at line 95 of file GSLMultiFitFunctionWrapper.h. math/mathmore/src/GS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiFitFunctionWrapper.html:94,Guid,Guide,94,doc/master/classROOT_1_1Math_1_1GSLMultiFitFunctionWrapper.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiFitFunctionWrapper.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::GSLMultiMinDerivFunctionWrapper Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLMultiMinDerivFunctionWrapper Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; Wrapper for a multi-dimensional function with derivatives used in GSL multidim minimization algorithm. ; Definition at line 104 of file GSLMultiMinFunctionWrapper.h. Public Member Functions;  GSLMultiMinDerivFunctionWrapper ();  ; gsl_multimin_function_fdf * GetFunc ();  ; bool IsValid ();  check if function is valid (has been set) ;  ; void SetDerivPointer (GSLMultiMinDfPointer f);  ; void SetDim (unsigned int n);  ; void SetFdfPointer (GSLMultiMinFdfPointer f);  ; void SetFuncPointer (GSLMultiMinFuncPointer f);  ; template<class FuncType > ; void SetFunction (const FuncType &f);  Fill gsl function structure from a C++ Function class. ;  ; void SetParams (void *p);  . Private Attributes; gsl_multimin_function_fdf fFunc;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMultiMinFunctionWrapper.h>; Constructor & Destructor Documentation. ◆ GSLMultiMinDerivFunctionWrapper(). ROOT::Math::GSLMultiMinDerivFunctionWrapper::GSLMultiMinDerivFunctionWrapper ; (; ). inline . Definition at line 108 of file GSLMultiMinFunctionWrapper.h. Member Function Documentation. ◆ GetFunc(). gsl_multimin_function_fdf * ROOT::Math::GSLMultiMinDerivFunctionWrapper::GetFunc ; (; ). inline . Definition at line 136 of file GSLMultiMinFunctionWrapper.h. ◆ IsValid(). bool ROOT::Math::GSLMultiMinDerivFunctionWrapper::IsValid ; (; ). inline . check if function is valid (has been set) ; Definition at line 147 of file GSLMultiMinFunctionWrapper.h. ◆ SetDerivPointer(). void ROOT::Math::GSLMultiMinDerivFunctionWrapper::SetDerivPointer ; (; GSLMultiMinDfPoin,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiMinDerivFunctionWrapper.html:99,Guid,Guide,99,doc/master/classROOT_1_1Math_1_1GSLMultiMinDerivFunctionWrapper.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiMinDerivFunctionWrapper.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLMultiMinFunctionAdapter< UserFunc > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::GSLMultiMinFunctionAdapter< UserFunc > Struct Template ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; template<class UserFunc>; struct ROOT::Math::GSLMultiMinFunctionAdapter< UserFunc >Class for adapting any multi-dimension C++ functor class to C function pointers used by GSL MultiMin algorithms. ; The templated C++ function class must implement:; double operator( const double * x) and if the derivatives are required: void Gradient( const double * x, double * g); This class defines static methods with will be used to fill the gsl_multimin_function and gsl_multimin_function_fdf structs used by GSL. See for examples the GSL online manual ; Definition at line 66 of file GSLMultiMinFunctionAdapter.h. Static Public Member Functions; static void Df (const gsl_vector *x, void *p, gsl_vector *g);  ; static double F (const gsl_vector *x, void *p);  ; static void Fdf (const gsl_vector *x, void *p, double *f, gsl_vector *g);  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMultiMinFunctionAdapter.h>; Member Function Documentation. ◆ Df(). template<class UserFunc > . static void ROOT::Math::GSLMultiMinFunctionAdapter< UserFunc >::Df ; (; const gsl_vector * ; x, . void * ; p, . gsl_vector * ; g . ). inlinestatic . Definition at line 76 of file GSLMultiMinFunctionAdapter.h. ◆ F(). template<class UserFunc > . static double ROOT::Math::GSLMultiMinFunctionAdapter< UserFunc >::F ; (; const gsl_vector * ; x, . void * ; p . ). inlinestatic . Definition at line 68 of file GSLMultiMinFunctionAdapter.h. ◆ Fdf(). template<class UserFunc > . static void ROOT::Math::GSLMultiMinFunctionAdapter< UserFunc >::Fdf ; (; const gsl_ve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1GSLMultiMinFunctionAdapter.html:116,Guid,Guide,116,doc/master/structROOT_1_1Math_1_1GSLMultiMinFunctionAdapter.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1GSLMultiMinFunctionAdapter.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::GSLMultiMinFunctionWrapper Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLMultiMinFunctionWrapper Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; wrapper to a multi-dim function withtout derivatives for multi-dimensional minimization algorithm ; Definition at line 58 of file GSLMultiMinFunctionWrapper.h. Public Member Functions;  GSLMultiMinFunctionWrapper ();  ; gsl_multimin_function * GetFunc ();  ; bool IsValid ();  ; void SetDim (unsigned int n);  ; void SetFuncPointer (GSLMultiMinFuncPointer f);  ; template<class FuncType > ; void SetFunction (const FuncType &f);  Fill gsl function structure from a C++ Function class. ;  ; void SetParams (void *p);  . Private Attributes; gsl_multimin_function fFunc;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMultiMinFunctionWrapper.h>; Constructor & Destructor Documentation. ◆ GSLMultiMinFunctionWrapper(). ROOT::Math::GSLMultiMinFunctionWrapper::GSLMultiMinFunctionWrapper ; (; ). inline . Definition at line 62 of file GSLMultiMinFunctionWrapper.h. Member Function Documentation. ◆ GetFunc(). gsl_multimin_function * ROOT::Math::GSLMultiMinFunctionWrapper::GetFunc ; (; ). inline . Definition at line 83 of file GSLMultiMinFunctionWrapper.h. ◆ IsValid(). bool ROOT::Math::GSLMultiMinFunctionWrapper::IsValid ; (; ). inline . Definition at line 85 of file GSLMultiMinFunctionWrapper.h. ◆ SetDim(). void ROOT::Math::GSLMultiMinFunctionWrapper::SetDim ; (; unsigned int ; n). inline . Definition at line 70 of file GSLMultiMinFunctionWrapper.h. ◆ SetFuncPointer(). void ROOT::Math::GSLMultiMinFunctionWrapper::SetFuncPointer ; (; GSLMultiMinFuncPointer ; f). inline . Definition at line 69 of file GSLMultiMinFunctionWrapper.h. ◆ SetFunction(). t,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiMinFunctionWrapper.html:94,Guid,Guide,94,doc/master/classROOT_1_1Math_1_1GSLMultiMinFunctionWrapper.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiMinFunctionWrapper.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLMultiMinimizer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLMultiMinimizer Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; GSLMultiMinimizer class , for minimizing multi-dimensional function using derivatives. ; Definition at line 54 of file GSLMultiMinimizer.h. Public Member Functions;  GSLMultiMinimizer (const GSLMultiMinimizer &)=delete;  ;  GSLMultiMinimizer (GSLMultiMinimizer &&)=delete;  ;  GSLMultiMinimizer (ROOT::Math::EGSLMinimizerType type);  Default constructor. ;  ;  ~GSLMultiMinimizer ();  Destructor. ;  ; void CreateMinimizer (unsigned int n);  create the minimizer from the type and size ;  ; double * Gradient () const;  gradient value at the minimum ;  ; int Iterate ();  ; double Minimum () const;  function value at the minimum ;  ; std::string Name () const;  ; GSLMultiMinimizer & operator= (const GSLMultiMinimizer &rhs)=delete;  ; GSLMultiMinimizer & operator= (GSLMultiMinimizer &&rhs)=delete;  ; int Restart ();  restart minimization from current point ;  ; int Set (const ROOT::Math::IMultiGradFunction &func, const double *x, double stepSize, double tol);  set the function to be minimize the initial minimizer parameters, step size and tolerance in the line search ;  ; int TestGradient (const double *g, double absTol) const;  test gradient (require a vector gradient) ;  ; int TestGradient (double absTol) const;  test gradient (ask from minimizer gradient vector) ;  ; double * X () const;  x values at the minimum ;  . Private Attributes; GSLMultiMinDerivFunctionWrapper fFunc;  ; gsl_multimin_fdfminimizer * fMinimizer;  ; const gsl_multimin_fdfminimizer_type * fType;  ; gsl_vector * fVec;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMultiMinimizer.h>",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiMinimizer.html:85,Guid,Guide,85,doc/master/classROOT_1_1Math_1_1GSLMultiMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiMinimizer.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLMultiRootBaseSolver Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; List of all members ; ROOT::Math::GSLMultiRootBaseSolver Class ReferenceabstractMath » MathCore | Math » MathMore » Numerical Algorithms » Multidimensional ROOT finding. ; GSLMultiRootBaseSolver, internal class for implementing GSL multi-root finders This is the base class for GSLMultiRootSolver (solver not using derivatives) and GSLMUltiRootDerivSolver (solver using derivatives) ; Definition at line 57 of file GSLMultiRootSolver.h. Public Member Functions; virtual ~GSLMultiRootBaseSolver ();  virtual Destructor ;  ; const double * Dx () const;  return function steps ;  ; const double * FVal () const;  return function values ;  ; bool InitSolver (const std::vector< ROOT::Math::IMultiGenFunction * > &funcVec, const double *x);  init the solver with function list and initial values ;  ; virtual int Iterate ()=0;  perform an iteration ;  ; virtual const std::string & Name () const =0;  return name ;  ; int TestDelta (double absTol, double relTol) const;  test using abs and relative tolerance |dx| < absTol + relTol*|x| for every component ;  ; int TestResidual (double absTol) const;  test using abs tolerance Sum |f|_i < absTol ;  ; const double * X () const;  solution values at the current iteration ;  . Private Member Functions; virtual gsl_vector * GetDx () const =0;  ; virtual gsl_vector * GetF () const =0;  ; virtual gsl_vector * GetRoot () const =0;  ; virtual int SetSolver (const std::vector< ROOT::Math::IMultiGenFunction * > &funcVec, const double *x)=0;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMultiRootSolver.h>. Inheritance diagram for ROOT::Math::GSLMultiRootBaseSolver:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootBaseSolver.html:90,Guid,Guide,90,doc/master/classROOT_1_1Math_1_1GSLMultiRootBaseSolver.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootBaseSolver.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLMultiRootDerivFunctionWrapper Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLMultiRootDerivFunctionWrapper Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multidimensional ROOT finding. ; wrapper to a multi-dim function with derivatives for multi roots algorithm ; Definition at line 96 of file GSLMultiRootFunctionWrapper.h. Public Member Functions;  GSLMultiRootDerivFunctionWrapper ();  ; gsl_multiroot_function_fdf * GetFunctions ();  ; template<class FuncVector > ; void SetFunctions (const FuncVector &f, unsigned int n);  Fill gsl function structure from a C++ function iterator and size and number of residuals. ;  . Private Attributes; gsl_multiroot_function_fdf fFunc;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMultiRootFunctionWrapper.h>; Constructor & Destructor Documentation. ◆ GSLMultiRootDerivFunctionWrapper(). ROOT::Math::GSLMultiRootDerivFunctionWrapper::GSLMultiRootDerivFunctionWrapper ; (; ). inline . Definition at line 100 of file GSLMultiRootFunctionWrapper.h. Member Function Documentation. ◆ GetFunctions(). gsl_multiroot_function_fdf * ROOT::Math::GSLMultiRootDerivFunctionWrapper::GetFunctions ; (; ). inline . Definition at line 122 of file GSLMultiRootFunctionWrapper.h. ◆ SetFunctions(). template<class FuncVector > . void ROOT::Math::GSLMultiRootDerivFunctionWrapper::SetFunctions ; (; const FuncVector & ; f, . unsigned int ; n . ). inline . Fill gsl function structure from a C++ function iterator and size and number of residuals. ; Definition at line 112 of file GSLMultiRootFunctionWrapper.h. Member Data Documentation. ◆ fFunc. gsl_multiroot_function_fdf ROOT::Math::GSLMultiRootDerivFunctionWrapper::fFunc. private . Definition at line 127 of file GSLMultiRootFunctionWrapper.h. math/m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootDerivFunctionWrapper.html:100,Guid,Guide,100,doc/master/classROOT_1_1Math_1_1GSLMultiRootDerivFunctionWrapper.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootDerivFunctionWrapper.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLMultiRootDerivSolver Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLMultiRootDerivSolver Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multidimensional ROOT finding. ; GSLMultiRootDerivSolver, internal class for implementing GSL multi-root finders using derivatives. ; Definition at line 255 of file GSLMultiRootSolver.h. Public Member Functions;  GSLMultiRootDerivSolver (const gsl_multiroot_fdfsolver_type *type, int n);  Constructor. ;  ;  GSLMultiRootDerivSolver (const GSLMultiRootDerivSolver &)=delete;  ;  GSLMultiRootDerivSolver (GSLMultiRootDerivSolver &&)=delete;  ;  ~GSLMultiRootDerivSolver () override;  Destructor (no operations) ;  ; void CreateSolver (const gsl_multiroot_fdfsolver_type *type, unsigned int n);  create the solver from the type and size of number of fitting points and number of parameters ;  ; gsl_vector * GetDx () const override;  return function steps ;  ; gsl_vector * GetF () const override;  return function values ;  ; gsl_vector * GetRoot () const override;  solution values at the current iteration ;  ; int Iterate () override;  perform an iteration ;  ; const std::string & Name () const override;  return name ;  ; GSLMultiRootDerivSolver & operator= (const GSLMultiRootDerivSolver &rhs)=delete;  ; GSLMultiRootDerivSolver & operator= (GSLMultiRootDerivSolver &&rhs)=delete;  ; int SetSolver (const std::vector< ROOT::Math::IMultiGenFunction * > &funcVec, const double *x) override;  set the solver parameters for the case of derivative ;  ;  Public Member Functions inherited from ROOT::Math::GSLMultiRootBaseSolver; virtual ~GSLMultiRootBaseSolver ();  virtual Destructor ;  ; const double * Dx () const;  return function steps ;  ; const double * FVal () const;  return function values ;  ; bool InitSolver (const std::vector< ROOT::Math::IMu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootDerivSolver.html:91,Guid,Guide,91,doc/master/classROOT_1_1Math_1_1GSLMultiRootDerivSolver.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootDerivSolver.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLMultiRootFinder Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLMultiRootFinder Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multidimensional ROOT finding. ; Class for Multidimensional root finding algorithms bassed on GSL. ; This class is used to solve a non-linear system of equations:; f1(x1,....xn) = 0 f2(x1,....xn) = 0 .................. fn(x1,....xn) = 0; See the GSL online manual for information on the GSL MultiRoot finding algorithms; The available GSL algorithms require the derivatives of the supplied functions or not (they are computed internally by GSL). In the first case the user needs to provide a list of multidimensional functions implementing the gradient interface (ROOT::Math::IMultiGradFunction) while in the second case it is enough to supply a list of functions impelmenting the ROOT::Math::IMultiGenFunction interface. The available algorithms requiring derivatives (see also the GSL documentation ) are the followings: . ROOT::Math::GSLMultiRootFinder::kHybridSJ with name ""HybridSJ"": modified Powell's hybrid method as implemented in HYBRJ in MINPACK . ROOT::Math::GSLMultiRootFinder::kHybridJ with name ""HybridJ"": unscaled version of the previous algorithm . ROOT::Math::GSLMultiRootFinder::kNewton with name ""Newton"": Newton method . ROOT::Math::GSLMultiRootFinder::kGNewton with name ""GNewton"": modified Newton method . The algorithms without derivatives (see also the GSL documentation ) are the followings: . ROOT::Math::GSLMultiRootFinder::kHybridS with name ""HybridS"": same as HybridSJ but using finate difference approximation for the derivatives . ROOT::Math::GSLMultiRootFinder::kHybrid with name ""Hybrid"": unscaled version of the previous algorithm . ROOT::Math::GSLMul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootFinder.html:86,Guid,Guide,86,doc/master/classROOT_1_1Math_1_1GSLMultiRootFinder.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootFinder.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLMultiRootFunctionAdapter< FuncVector > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::GSLMultiRootFunctionAdapter< FuncVector > Class Template ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multidimensional ROOT finding. ; template<class FuncVector>; class ROOT::Math::GSLMultiRootFunctionAdapter< FuncVector >Class for adapting a C++ functor class to C function pointers used by GSL MultiRoot Algorithm The templated C++ function class must implement: ; double operator( const double * x) and if the derivatives are required: void Gradient( const double * x, double * g) and void FdF( const double * x, double &f, double * g) ; Definition at line 68 of file GSLMultiRootFunctionAdapter.h. Static Public Member Functions; static int Df (const gsl_vector *x, void *p, gsl_matrix *h);  ; static int F (const gsl_vector *x, void *p, gsl_vector *f);  ; static int FDf (const gsl_vector *x, void *p, gsl_vector *f, gsl_matrix *h);  evaluate derivative and function at the same time ;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMultiRootFunctionAdapter.h>; Member Function Documentation. ◆ Df(). template<class FuncVector > . static int ROOT::Math::GSLMultiRootFunctionAdapter< FuncVector >::Df ; (; const gsl_vector * ; x, . void * ; p, . gsl_matrix * ; h . ). inlinestatic . Definition at line 87 of file GSLMultiRootFunctionAdapter.h. ◆ F(). template<class FuncVector > . static int ROOT::Math::GSLMultiRootFunctionAdapter< FuncVector >::F ; (; const gsl_vector * ; x, . void * ; p, . gsl_vector * ; f . ). inlinestatic . Definition at line 74 of file GSLMultiRootFunctionAdapter.h. ◆ FDf(). template<class FuncVector > . static int ROOT::Math::GSLMultiRootFunctionAdapter< FuncVector >::FDf ; (; const gsl_vector * ; x, . void * ; p, . gsl_ve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootFunctionAdapter.html:118,Guid,Guide,118,doc/master/classROOT_1_1Math_1_1GSLMultiRootFunctionAdapter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootFunctionAdapter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLMultiRootFunctionWrapper Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLMultiRootFunctionWrapper Class Reference. ; wrapper to a multi-dim function without derivatives for multi roots algorithm ; Definition at line 57 of file GSLMultiRootFunctionWrapper.h. Public Member Functions;  GSLMultiRootFunctionWrapper ();  ; gsl_multiroot_function * GetFunctions ();  ; template<class FuncVector > ; void SetFunctions (const FuncVector &f, unsigned int n);  Fill gsl function structure from a C++ function iterator and size and number of residuals. ;  . Private Attributes; gsl_multiroot_function fFunc;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMultiRootFunctionWrapper.h>; Constructor & Destructor Documentation. ◆ GSLMultiRootFunctionWrapper(). ROOT::Math::GSLMultiRootFunctionWrapper::GSLMultiRootFunctionWrapper ; (; ). inline . Definition at line 61 of file GSLMultiRootFunctionWrapper.h. Member Function Documentation. ◆ GetFunctions(). gsl_multiroot_function * ROOT::Math::GSLMultiRootFunctionWrapper::GetFunctions ; (; ). inline . Definition at line 79 of file GSLMultiRootFunctionWrapper.h. ◆ SetFunctions(). template<class FuncVector > . void ROOT::Math::GSLMultiRootFunctionWrapper::SetFunctions ; (; const FuncVector & ; f, . unsigned int ; n . ). inline . Fill gsl function structure from a C++ function iterator and size and number of residuals. ; Definition at line 71 of file GSLMultiRootFunctionWrapper.h. Member Data Documentation. ◆ fFunc. gsl_multiroot_function ROOT::Math::GSLMultiRootFunctionWrapper::fFunc. private . Definition at line 84 of file GSLMultiRootFunctionWrapper.h. math/mathmore/src/GSLMultiRootFunctionWrapper.h. ROOTMathGSLMultiRootFunctionWrapper. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:21 (GV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootFunctionWrapper.html:95,Guid,Guide,95,doc/master/classROOT_1_1Math_1_1GSLMultiRootFunctionWrapper.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootFunctionWrapper.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLMultiRootSolver Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLMultiRootSolver Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multidimensional ROOT finding. ; GSLMultiRootSolver, internal class for implementing GSL multi-root finders not using derivatives. ; Definition at line 155 of file GSLMultiRootSolver.h. Public Member Functions;  GSLMultiRootSolver (const gsl_multiroot_fsolver_type *type, int n);  Constructor from type and simension of system (number of functions) ;  ;  GSLMultiRootSolver (const GSLMultiRootSolver &)=delete;  ;  GSLMultiRootSolver (GSLMultiRootSolver &&)=delete;  ;  ~GSLMultiRootSolver () override;  Destructor (no operations) ;  ; void CreateSolver (const gsl_multiroot_fsolver_type *type, unsigned int n);  ; gsl_vector * GetDx () const override;  return function steps ;  ; gsl_vector * GetF () const override;  return function values ;  ; gsl_vector * GetRoot () const override;  solution values at the current iteration ;  ; int Iterate () override;  perform an iteration ;  ; const std::string & Name () const override;  return name ;  ; GSLMultiRootSolver & operator= (const GSLMultiRootSolver &rhs)=delete;  ; GSLMultiRootSolver & operator= (GSLMultiRootSolver &&rhs)=delete;  ; int SetSolver (const std::vector< ROOT::Math::IMultiGenFunction * > &funcVec, const double *x) override;  set the solver parameters ;  ;  Public Member Functions inherited from ROOT::Math::GSLMultiRootBaseSolver; virtual ~GSLMultiRootBaseSolver ();  virtual Destructor ;  ; const double * Dx () const;  return function steps ;  ; const double * FVal () const;  return function values ;  ; bool InitSolver (const std::vector< ROOT::Math::IMultiGenFunction * > &funcVec, const double *x);  init the solver with function list and initial values ;  ; int TestDelta (double absTo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootSolver.html:86,Guid,Guide,86,doc/master/classROOT_1_1Math_1_1GSLMultiRootSolver.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootSolver.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLNLSMinimizer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLNLSMinimizer Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; GSLNLSMinimizer class for Non Linear Least Square fitting It Uses the Levemberg-Marquardt algorithm from GSL Non Linear Least Square fitting. ; Definition at line 59 of file GSLNLSMinimizer.h. Public Member Functions;  GSLNLSMinimizer (int type=0);  Default constructor. ;  ;  ~GSLNLSMinimizer () override;  Destructor (no operations) ;  ; double CovMatrix (unsigned int, unsigned int) const override;  return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ;  ; int CovMatrixStatus () const override;  return covariance matrix status ;  ; double Edm () const override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; bool ProvidesError () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) override;  set the function to minimize ;  ;  Public Member Functions inherited from ROOT::Math::BasicMinimizer;  BasicMinimizer ();  Default constructor. ;  ;  ~BasicMinimizer () override;  Destructor. ;  ; bool FixVariable (unsigned int ivar) override;  fix an existing variable ;  ; bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSett",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLNLSMinimizer.html:83,Guid,Guide,83,doc/master/classROOT_1_1Math_1_1GSLNLSMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLNLSMinimizer.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLPlainIntegrationWorkspace Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLPlainIntegrationWorkspace Class Reference. . Definition at line 239 of file GSLMCIntegrationWorkspace.h. Public Member Functions;  GSLPlainIntegrationWorkspace ();  ; void Clear () override;  free the workspace deleting the GSL pointer ;  ; gsl_monte_plain_state * GetWS ();  ; bool Init (size_t dim) override;  initialize the workspace creating the GSL pointer if it is not there ;  ; size_t NDim () const override;  ; std::unique_ptr< ROOT::Math::IOptions > Options () const override;  retrieve option pointer corresponding to parameters create a new object to be managed by the user ;  ; bool ReInit () override;  re-initialize an existing the workspace ;  ; virtual void SetOptions (const ROOT::Math::IOptions &) override;  set options ;  ; MCIntegration::Type Type () const override;  ;  Public Member Functions inherited from ROOT::Math::GSLMCIntegrationWorkspace;  GSLMCIntegrationWorkspace ();  ; virtual ~GSLMCIntegrationWorkspace ();  . Private Attributes; gsl_monte_plain_state * fWs;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMCIntegrationWorkspace.h>. Inheritance diagram for ROOT::Math::GSLPlainIntegrationWorkspace:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ GSLPlainIntegrationWorkspace(). ROOT::Math::GSLPlainIntegrationWorkspace::GSLPlainIntegrationWorkspace ; (; ). inline . Definition at line 243 of file GSLMCIntegrationWorkspace.h. Member Function Documentation. ◆ Clear(). void ROOT::Math::GSLPlainIntegrationWorkspace::Clear ; (; ). inlineoverridevirtual . free the workspace deleting the GSL pointer ; Reimplemented from ROOT::Math::GSLMCIntegrationWorkspac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLPlainIntegrationWorkspace.html:96,Guid,Guide,96,doc/master/classROOT_1_1Math_1_1GSLPlainIntegrationWorkspace.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLPlainIntegrationWorkspace.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: ROOT::Math::GSLQRngNiederreiter2 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::GSLQRngNiederreiter2 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Niederreiter generator gsl_qrng_niederreiter_2 from here ; Definition at line 169 of file GSLQuasiRandom.h. Public Member Functions;  GSLQRngNiederreiter2 ();  ;  Public Member Functions inherited from ROOT::Math::GSLQuasiRandomEngine;  GSLQuasiRandomEngine ();  default constructor. ;  ;  GSLQuasiRandomEngine (const GSLQuasiRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLQuasiRandomEngine (GSLQRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLQuasiRandomEngine ();  call Terminate() ;  ; bool GenerateArray (double *begin, double *end) const;  Generate an array of quasi random numbers The iterators points to the random numbers. ;  ; void Initialize (unsigned int dimension);  initialize the generator giving the dimension of the sequence If no rng is present the default one based on Mersenne and Twister is created ;  ; std::string Name () const;  return name of generator ;  ; unsigned int NDim () const;  return the dimension of generator ;  ; double operator() () const;  Generate a random number between ]0,1[. ;  ; bool operator() (double *x) const;  Fill array x with random numbers between ]0,1[. ;  ; GSLQuasiRandomEngine & operator= (const GSLQuasiRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; unsigned int Size () const;  return the state size of generator ;  ; bool Skip (unsigned int n) const;  Skip the next n random numbers. ;  ; void Terminate ();  delete pointer to contained rng ;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Math::GSLQuasiRandomEngine; void SetType (GSLQRngWrapper *r);  internal method used b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLQRngNiederreiter2.html:88,Guid,Guide,88,doc/master/classROOT_1_1Math_1_1GSLQRngNiederreiter2.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLQRngNiederreiter2.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLQRngSobol Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::GSLQRngSobol Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Sobol generator gsl_qrng_sobol from here ; Definition at line 156 of file GSLQuasiRandom.h. Public Member Functions;  GSLQRngSobol ();  ;  Public Member Functions inherited from ROOT::Math::GSLQuasiRandomEngine;  GSLQuasiRandomEngine ();  default constructor. ;  ;  GSLQuasiRandomEngine (const GSLQuasiRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLQuasiRandomEngine (GSLQRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLQuasiRandomEngine ();  call Terminate() ;  ; bool GenerateArray (double *begin, double *end) const;  Generate an array of quasi random numbers The iterators points to the random numbers. ;  ; void Initialize (unsigned int dimension);  initialize the generator giving the dimension of the sequence If no rng is present the default one based on Mersenne and Twister is created ;  ; std::string Name () const;  return name of generator ;  ; unsigned int NDim () const;  return the dimension of generator ;  ; double operator() () const;  Generate a random number between ]0,1[. ;  ; bool operator() (double *x) const;  Fill array x with random numbers between ]0,1[. ;  ; GSLQuasiRandomEngine & operator= (const GSLQuasiRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; unsigned int Size () const;  return the state size of generator ;  ; bool Skip (unsigned int n) const;  Skip the next n random numbers. ;  ; void Terminate ();  delete pointer to contained rng ;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Math::GSLQuasiRandomEngine; void SetType (GSLQRngWrapper *r);  internal method used by the derived class to set the type of g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLQRngSobol.html:80,Guid,Guide,80,doc/master/classROOT_1_1Math_1_1GSLQRngSobol.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLQRngSobol.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::GSLQRngWrapper Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLQRngWrapper Class Reference. ; GSLQRngWrapper class to wrap gsl_qrng structure. ; Definition at line 26 of file GSLQRngWrapper.h. Public Member Functions;  GSLQRngWrapper ();  Default constructor. ;  ;  GSLQRngWrapper (const gsl_qrng *r);  construct from an existing gsl_qrng it is managed externally - so will not be deleted at the end ;  ;  GSLQRngWrapper (const gsl_qrng_type *type);  Constructor with type. ;  ;  GSLQRngWrapper (GSLQRngWrapper &r);  Copy constructor - clone the GSL object and manage it. ;  ;  ~GSLQRngWrapper ();  Destructor (free the rng if not done before) ;  ; void Allocate (unsigned int dimension);  ; unsigned int Dimension () const;  ; void Free ();  ; GSLQRngWrapper & operator= (const GSLQRngWrapper &rhs);  Assignment operator. ;  ; gsl_qrng * Rng ();  ; const gsl_qrng * Rng () const;  ; void SetDefaultType ();  ; void SetType (const gsl_qrng_type *type);  . Private Attributes; bool fOwn;  ; gsl_qrng * fRng;  ; const gsl_qrng_type * fRngType;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLQRngWrapper.h>; Constructor & Destructor Documentation. ◆ GSLQRngWrapper() [1/4]. ROOT::Math::GSLQRngWrapper::GSLQRngWrapper ; (; ). inline . Default constructor. ; Definition at line 34 of file GSLQRngWrapper.h. ◆ GSLQRngWrapper() [2/4]. ROOT::Math::GSLQRngWrapper::GSLQRngWrapper ; (; const gsl_qrng_type * ; type). inline . Constructor with type. ; Definition at line 44 of file GSLQRngWrapper.h. ◆ GSLQRngWrapper() [3/4]. ROOT::Math::GSLQRngWrapper::GSLQRngWrapper ; (; const gsl_qrng * ; r). inline . construct from an existing gsl_qrng it is managed externally - so will not be deleted at the end ; Definition at line 55 of file GSLQRngWrapper.h. ◆ GSLQRngWrapper(),MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLQRngWrapper.html:82,Guid,Guide,82,doc/master/classROOT_1_1Math_1_1GSLQRngWrapper.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLQRngWrapper.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLQuasiRandomEngine Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLQuasiRandomEngine Class ReferenceMath » MathCore » Interface classes for Random number generation. ; GSLQuasiRandomEngine Base class for all GSL quasi random engines, normally user instantiate the derived classes which creates internally the generator and uses the class ROOT::Math::QuasiRandom. ; Definition at line 52 of file GSLQuasiRandom.h. Public Member Functions;  GSLQuasiRandomEngine ();  default constructor. ;  ;  GSLQuasiRandomEngine (const GSLQuasiRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLQuasiRandomEngine (GSLQRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLQuasiRandomEngine ();  call Terminate() ;  ; bool GenerateArray (double *begin, double *end) const;  Generate an array of quasi random numbers The iterators points to the random numbers. ;  ; void Initialize (unsigned int dimension);  initialize the generator giving the dimension of the sequence If no rng is present the default one based on Mersenne and Twister is created ;  ; std::string Name () const;  return name of generator ;  ; unsigned int NDim () const;  return the dimension of generator ;  ; double operator() () const;  Generate a random number between ]0,1[. ;  ; bool operator() (double *x) const;  Fill array x with random numbers between ]0,1[. ;  ; GSLQuasiRandomEngine & operator= (const GSLQuasiRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; unsigned int Size () const;  return the state size of generator ;  ; bool Skip (unsigned int n) const;  Skip the next n random numbers. ;  ; void Terminate ();  delete pointer to contained rng ;  . Protected Member Functions; void SetType (GSLQRngWrapper *r);  internal method",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLQuasiRandomEngine.html:88,Guid,Guide,88,doc/master/classROOT_1_1Math_1_1GSLQuasiRandomEngine.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLQuasiRandomEngine.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRandomEngine Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Friends |; List of all members ; ROOT::Math::GSLRandomEngine Class ReferenceMath » MathCore » Interface classes for Random number generation. ; GSLRandomEngine Base class for all GSL random engines, normally user instantiate the derived classes which creates internally the generator. ; The main GSL generators (see here) are available as derived classes In addition to generate uniform numbers it provides method for generating numbers according to pre-defined distributions using the GSL functions from GSL random number distributions. ; Definition at line 65 of file GSLRndmEngines.h. Public Member Functions;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRandomEngine.html:83,Guid,Guide,83,doc/master/classROOT_1_1Math_1_1GSLRandomEngine.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRandomEngine.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRngCMRG Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngCMRG Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Combined multiple recursive generator (L'Ecuyer) see here ; Definition at line 454 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngCMRG ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random numbers. ;  ; double Rnd",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngCMRG.html:78,Guid,Guide,78,doc/master/classROOT_1_1Math_1_1GSLRngCMRG.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngCMRG.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRngGFSR4 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngGFSR4 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Lagged Fibonacci generator by Ziff see here ; Definition at line 441 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngGFSR4 ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random numbers. ;  ; double Rndm () const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngGFSR4.html:79,Guid,Guide,79,doc/master/classROOT_1_1Math_1_1GSLRngGFSR4.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngGFSR4.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRngMRG Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngMRG Class ReferenceMath » MathCore » Interface classes for Random number generation. ; 5-th order multiple recursive generator (L'Ecuyer, Blouin and Coutre) see here ; Definition at line 467 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngMRG ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random number",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMRG.html:77,Guid,Guide,77,doc/master/classROOT_1_1Math_1_1GSLRngMRG.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMRG.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRngMT Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngMT Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Mersenne-Twister generator gsl_rng_mt19937 from here ; Definition at line 341 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngMT ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random numbers. ;  ; double Rndm () const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMT.html:76,Guid,Guide,76,doc/master/classROOT_1_1Math_1_1GSLRngMT.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMT.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRngMinStd Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngMinStd Class ReferenceMath » MathCore » Interface classes for Random number generation. ; MINSTD generator (Park and Miller) see here ; Definition at line 507 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngMinStd ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random numbers. ;  ; double Rndm () con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMinStd.html:80,Guid,Guide,80,doc/master/classROOT_1_1Math_1_1GSLRngMinStd.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMinStd.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRngMixMax Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngMixMax Class ReferenceMath » MathCore » Interface classes for Random number generation. ; MixMax generator based on ROOT::Math::MixMaxEngine of N=240. ; Definition at line 517 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngMixMax ();  ;  ~GSLRngMixMax () override;  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMixMax.html:80,Guid,Guide,80,doc/master/classROOT_1_1Math_1_1GSLRngMixMax.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMixMax.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRngROOTWrapper< Engine > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; Public Attributes |; List of all members ; ROOT::Math::GSLRngROOTWrapper< Engine > Struct Template Reference. ; template<class Engine>; struct ROOT::Math::GSLRngROOTWrapper< Engine >class for wrapping ROOT Engines in gsl_rng types which can be used as extra GSL random number generators For this we need to implement functions which will be called by gsl_rng. ; The functions (Seed, Rndm, IntRndm) are passed in the gsl_rng_type and used to build a gsl_rng object. When gsl_rng is alloacated, only the memory state is allocated using calloc(1,size), which gives a memory block of the given bytes and it initializes to zero. Therefore no constructor of GSLRngROOTWrapper can be called and also we cannot call non-static member function of the class. The underlined ROOT engine is then built and deleted using the functions CreateEngine() and FreeEngine(), called by the specific GSLRandomEngine class that instantiates for the the generator (e.g. GSLRngMixMax) ; Definition at line 39 of file GSLRngROOTWrapper.h. Static Public Member Functions; static void CreateEngine (gsl_rng *r);  ; static void FreeEngine (gsl_rng *r);  ; static unsigned long IntRndm (void *p);  ; static unsigned long Max ();  ; static unsigned long Min ();  ; static std::string Name ();  ; static double Rndm (void *p);  ; static void Seed (void *p, unsigned long seed);  ; static size_t Size ();  . Public Attributes; Engine * fEngine = nullptr;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLRngROOTWrapper.h>; Member Function Documentation. ◆ CreateEngine(). template<class Engine > . static void ROOT::Math::GSLRngROOTWrapper< Engine >::CreateEngine ; (; gsl_rng * ; r). inlinestatic . Definition at line 46 of file GSLRngROOTWrapper.h. ◆ FreeEngi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1GSLRngROOTWrapper.html:105,Guid,Guide,105,doc/master/structROOT_1_1Math_1_1GSLRngROOTWrapper.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1GSLRngROOTWrapper.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRngRanLux Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngRanLux Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Old Ranlux generator (James, Luscher) (default luxury level, p = 223) (This is eequivalent to TRandom1 with default luxury level) see here ; Definition at line 355 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngRanLux ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Ite",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLux.html:80,Guid,Guide,80,doc/master/classROOT_1_1Math_1_1GSLRngRanLux.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLux.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRngRanLuxD1 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngRanLuxD1 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Double precision (48 bits) version of Second generation of Ranlux generator with luxury level of 1 (It throws away 202 value for every 12 used) see here ; Definition at line 399 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngRanLuxD1 ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxD1.html:82,Guid,Guide,82,doc/master/classROOT_1_1Math_1_1GSLRngRanLuxD1.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxD1.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRngRanLuxD2 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngRanLuxD2 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Double precision (48 bits) version of Second generation of Ranlux generator with luxury level of 2 (It throws away 397 value for every 12 used) see here ; Definition at line 413 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngRanLuxD2 ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxD2.html:82,Guid,Guide,82,doc/master/classROOT_1_1Math_1_1GSLRngRanLuxD2.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxD2.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRngRanLuxS1 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngRanLuxS1 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Second generation of Ranlux generator for single precision with luxury level of 1 (It throws away 202 values for every 12 used) see here ; Definition at line 369 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngRanLuxS1 ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxS1.html:82,Guid,Guide,82,doc/master/classROOT_1_1Math_1_1GSLRngRanLuxS1.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxS1.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRngRanLuxS2 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngRanLuxS2 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Second generation of Ranlux generator for Single precision with luxury level of 2 (It throws away 397 value for every 12 used) see here ; Definition at line 384 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngRanLuxS2 ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxS2.html:82,Guid,Guide,82,doc/master/classROOT_1_1Math_1_1GSLRngRanLuxS2.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxS2.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRngRanMar Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngRanMar Class ReferenceMath » MathCore » Interface classes for Random number generation. ; RANMAR generator see here ; Definition at line 494 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngRanMar ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random numbers. ;  ; double Rndm () const;  Generate a ra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanMar.html:80,Guid,Guide,80,doc/master/classROOT_1_1Math_1_1GSLRngRanMar.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanMar.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRngRand Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngRand Class ReferenceMath » MathCore » Interface classes for Random number generation. ; BSD rand() generator gsl_rmg_rand from here ; Definition at line 481 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngRand ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random numbers. ;  ; double Rndm () const;  G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRand.html:78,Guid,Guide,78,doc/master/classROOT_1_1Math_1_1GSLRngRand.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRand.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRngTaus Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngTaus Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Tausworthe generator by L'Ecuyer see here ; Definition at line 428 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngTaus ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random numbers. ;  ; double Rndm () const;  Gen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngTaus.html:78,Guid,Guide,78,doc/master/classROOT_1_1Math_1_1GSLRngTaus.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngTaus.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::GSLRngWrapper Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLRngWrapper Class Reference. ; GSLRngWrapper class to wrap gsl_rng structure. ; Definition at line 25 of file GSLRngWrapper.h. Public Member Functions;  GSLRngWrapper ();  Default constructor. ;  ;  GSLRngWrapper (const gsl_rng *r);  construct from an existing gsl_rng it is managed externally - so will not be deleted at the end ;  ;  GSLRngWrapper (const gsl_rng_type *type);  Constructor with type. ;  ;  GSLRngWrapper (GSLRngWrapper &r);  Copy constructor - clone the GSL object and manage it. ;  ;  ~GSLRngWrapper ();  Destructor (free the rng if not done before) ;  ; void Allocate ();  ; void Free ();  ; GSLRngWrapper & operator= (const GSLRngWrapper &rhs);  Assignment operator. ;  ; void PrintState () const;  ; gsl_rng * Rng ();  ; const gsl_rng * Rng () const;  ; void SetDefaultType ();  ; void SetType (const gsl_rng_type *type);  . Private Attributes; bool fOwn;  ; gsl_rng * fRng;  ; const gsl_rng_type * fRngType;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLRngWrapper.h>; Constructor & Destructor Documentation. ◆ GSLRngWrapper() [1/4]. ROOT::Math::GSLRngWrapper::GSLRngWrapper ; (; ). inline . Default constructor. ; Definition at line 33 of file GSLRngWrapper.h. ◆ GSLRngWrapper() [2/4]. ROOT::Math::GSLRngWrapper::GSLRngWrapper ; (; const gsl_rng_type * ; type). inline . Constructor with type. ; Definition at line 43 of file GSLRngWrapper.h. ◆ GSLRngWrapper() [3/4]. ROOT::Math::GSLRngWrapper::GSLRngWrapper ; (; const gsl_rng * ; r). inline . construct from an existing gsl_rng it is managed externally - so will not be deleted at the end ; Definition at line 54 of file GSLRngWrapper.h. ◆ GSLRngWrapper() [4/4]. ROOT::Math::GSLRngWrapper::GSLRngWrapper ; (; GSLRngWrapper,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngWrapper.html:81,Guid,Guide,81,doc/master/classROOT_1_1Math_1_1GSLRngWrapper.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngWrapper.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::GSLRootFSolver Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLRootFSolver Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » One-dimensional Root-Finding. ; Root-Finder implementation class using GSL. ; Definition at line 47 of file GSLRootFSolver.h. Public Member Functions;  GSLRootFSolver (const gsl_root_fsolver_type *type);  ; virtual ~GSLRootFSolver ();  ; gsl_root_fsolver * Solver () const;  . Private Attributes; gsl_root_fsolver * fSolver;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLRootFSolver.h>; Constructor & Destructor Documentation. ◆ GSLRootFSolver(). ROOT::Math::GSLRootFSolver::GSLRootFSolver ; (; const gsl_root_fsolver_type * ; type). inline . Definition at line 51 of file GSLRootFSolver.h. ◆ ~GSLRootFSolver(). virtual ROOT::Math::GSLRootFSolver::~GSLRootFSolver ; (; ). inlinevirtual . Definition at line 54 of file GSLRootFSolver.h. Member Function Documentation. ◆ Solver(). gsl_root_fsolver * ROOT::Math::GSLRootFSolver::Solver ; (; ); const. inline . Definition at line 65 of file GSLRootFSolver.h. Member Data Documentation. ◆ fSolver. gsl_root_fsolver* ROOT::Math::GSLRootFSolver::fSolver. private . Definition at line 69 of file GSLRootFSolver.h. math/mathmore/src/GSLRootFSolver.h. ROOTMathGSLRootFSolver. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:21 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRootFSolver.html:82,Guid,Guide,82,doc/master/classROOT_1_1Math_1_1GSLRootFSolver.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRootFSolver.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::GSLRootFdFSolver Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLRootFdFSolver Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » One-dimensional Root-Finding. ; Root-Finder with derivatives implementation class using GSL. ; Definition at line 47 of file GSLRootFdFSolver.h. Public Member Functions;  GSLRootFdFSolver (const gsl_root_fdfsolver_type *type);  ; virtual ~GSLRootFdFSolver ();  ; gsl_root_fdfsolver * Solver () const;  . Private Attributes; gsl_root_fdfsolver * fSolver;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLRootFdFSolver.h>; Constructor & Destructor Documentation. ◆ GSLRootFdFSolver(). ROOT::Math::GSLRootFdFSolver::GSLRootFdFSolver ; (; const gsl_root_fdfsolver_type * ; type). inline . Definition at line 51 of file GSLRootFdFSolver.h. ◆ ~GSLRootFdFSolver(). virtual ROOT::Math::GSLRootFdFSolver::~GSLRootFdFSolver ; (; ). inlinevirtual . Definition at line 54 of file GSLRootFdFSolver.h. Member Function Documentation. ◆ Solver(). gsl_root_fdfsolver * ROOT::Math::GSLRootFdFSolver::Solver ; (; ); const. inline . Definition at line 65 of file GSLRootFdFSolver.h. Member Data Documentation. ◆ fSolver. gsl_root_fdfsolver* ROOT::Math::GSLRootFdFSolver::fSolver. private . Definition at line 69 of file GSLRootFdFSolver.h. math/mathmore/src/GSLRootFdFSolver.h. ROOTMathGSLRootFdFSolver. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:21 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRootFdFSolver.html:84,Guid,Guide,84,doc/master/classROOT_1_1Math_1_1GSLRootFdFSolver.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRootFdFSolver.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRootFinder Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLRootFinder Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » One-dimensional Root-Finding. ; Base class for GSL Root-Finding algorithms for one dimensional functions which do not use function derivatives. ; For finding the roots users should not use this class directly but instantiate the derived classes, for example ROOT::Math::Roots::Brent for using the Brent algorithm. All the classes defining the alhorithms are defined in the header Math/RootFinderAlgorithm.h They possible types implementing root bracketing algorithms which they do not require function derivatives are: . ROOT::Math::Roots::Bisection . ROOT::Math::Roots::FalsePos . ROOT::Math::Roots::Brent . See also the specific classes for the documentation. See the GSL online manual for information on the GSL Root-Finding algorithms ; Definition at line 73 of file GSLRootFinder.h. Public Types; typedef double(* GSLFuncPointer) (double, void *);  . Public Member Functions;  GSLRootFinder ();  ;  GSLRootFinder (const GSLRootFinder &)=delete;  ;  GSLRootFinder (GSLRootFinder &&)=delete;  ;  ~GSLRootFinder () override;  ; int Iterate () override;  This method is implemented only by the GSLRootFinder and GSLRootFinderDeriv classes and will return an error if it's not one of them. ;  ; int Iterations () const override;  Return number of iterations. ;  ; const char * Name () const override;  double GSLRootFinder::XLower() const { return fXlow; } ;  ; GSLRootFinder & operator= (const GSLRootFinder &)=delete;  ; GSLRootFinder & operator= (GSLRootFinder &&)=delete;  ; double Root () const override;  Returns the previously calculated root. ;  ; bool SetFunction (const IGenFunction &f, double xlow, double xup) overrid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRootFinder.html:81,Guid,Guide,81,doc/master/classROOT_1_1Math_1_1GSLRootFinder.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRootFinder.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRootFinderDeriv Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLRootFinderDeriv Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » One-dimensional Root-Finding. ; Base class for GSL Root-Finding algorithms for one dimensional functions which use function derivatives. ; For finding the roots users should not use this class directly but instantiate the derived classes, for example ROOT::Math::Roots::Newton for using the Newton algorithm. All the classes defining the alhorithms are defined in the header Math/RootFinderAlgorithm.h They possible types implementing root bracketing algorithms which use function derivatives are: . ROOT::Math::Roots::Newton . ROOT::Math::Roots::Secant . ROOT::Math::Roots::Steffenson . See also those classes for the documentation. See the GSL online manual for information on the GSL Root-Finding algorithms ; Definition at line 74 of file GSLRootFinderDeriv.h. Public Types; typedef void(* GSLFdFPointer) (double, void *, double *, double *);  ; typedef double(* GSLFuncPointer) (double, void *);  . Public Member Functions;  GSLRootFinderDeriv ();  ;  GSLRootFinderDeriv (const GSLRootFinderDeriv &)=delete;  ;  GSLRootFinderDeriv (GSLRootFinderDeriv &&)=delete;  ;  ~GSLRootFinderDeriv () override;  ; int Iterate () override;  iterate (return GSL_SUCCESS in case of successful iteration) ;  ; int Iterations () const override;  Return number of iterations. ;  ; const char * Name () const override;  Return name of root finder algorithm. ;  ; GSLRootFinderDeriv & operator= (const GSLRootFinderDeriv &)=delete;  ; GSLRootFinderDeriv & operator= (GSLRootFinderDeriv &&)=delete;  ; double Root () const override;  Returns the previously calculated root. ;  ; bool SetFunction (const IGradFunction &f, double xstart",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRootFinderDeriv.html:86,Guid,Guide,86,doc/master/classROOT_1_1Math_1_1GSLRootFinderDeriv.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRootFinderDeriv.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLRootHelper Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; ROOT::Math::GSLRootHelper Namespace Reference. Helper functions to test convergence of Root-Finding algorithms. ; More... Functions; int TestDelta (double x1, double x0, double epsAbs, double epsRel);  ; int TestInterval (double xlow, double xup, double epsAbs, double epsRel);  ; int TestResidual (double f, double epsAbs);  . Detailed Description; Helper functions to test convergence of Root-Finding algorithms. ; Used by ROOT::Math::RootFinder class (see there for the doc) ; Function Documentation. ◆ TestDelta(). int ROOT::Math::GSLRootHelper::TestDelta ; (; double ; x1, . double ; x0, . double ; epsAbs, . double ; epsRel . ). Definition at line 47 of file GSLRootHelper.cxx. ◆ TestInterval(). int ROOT::Math::GSLRootHelper::TestInterval ; (; double ; xlow, . double ; xup, . double ; epsAbs, . double ; epsRel . ). Definition at line 42 of file GSLRootHelper.cxx. ◆ TestResidual(). int ROOT::Math::GSLRootHelper::TestResidual ; (; double ; f, . double ; epsAbs . ). Definition at line 52 of file GSLRootHelper.cxx. ROOTMathGSLRootHelper. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1GSLRootHelper.html:85,Guid,Guide,85,doc/master/namespaceROOT_1_1Math_1_1GSLRootHelper.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1GSLRootHelper.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLSimAn Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; ROOT::Math::GSLSimAn Namespace Reference. Functions; void Copy (void *source, void *dest);  ; void * CopyCtor (void *xp);  ; void Destroy (void *xp);  ; double Dist (void *xp, void *yp);  ; double E (void *xp);  ; void Print (void *xp);  ; void Step (const gsl_rng *r, void *xp, double step_size);  . Function Documentation. ◆ Copy(). void ROOT::Math::GSLSimAn::Copy ; (; void * ; source, . void * ; dest . ). Definition at line 149 of file GSLSimAnnealing.cxx. ◆ CopyCtor(). void * ROOT::Math::GSLSimAn::CopyCtor ; (; void * ; xp). Definition at line 157 of file GSLSimAnnealing.cxx. ◆ Destroy(). void ROOT::Math::GSLSimAn::Destroy ; (; void * ; xp). Definition at line 163 of file GSLSimAnnealing.cxx. ◆ Dist(). double ROOT::Math::GSLSimAn::Dist ; (; void * ; xp, . void * ; yp . ). Definition at line 129 of file GSLSimAnnealing.cxx. ◆ E(). double ROOT::Math::GSLSimAn::E ; (; void * ; xp). Definition at line 110 of file GSLSimAnnealing.cxx. ◆ Print(). void ROOT::Math::GSLSimAn::Print ; (; void * ; xp). Definition at line 139 of file GSLSimAnnealing.cxx. ◆ Step(). void ROOT::Math::GSLSimAn::Step ; (; const gsl_rng * ; r, . void * ; xp, . double ; step_size . ). Definition at line 117 of file GSLSimAnnealing.cxx. ROOTMathGSLSimAn. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1GSLSimAn.html:80,Guid,Guide,80,doc/master/namespaceROOT_1_1Math_1_1GSLSimAn.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1GSLSimAn.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLSimAnFunc Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLSimAnFunc Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; GSLSimAnFunc class description. ; Interface class for the objetive function to be used in simulated annealing If user wants to re-implement some of the methods (like the one defining the metric) which are used by the the simulated annealing algorithm must build a user derived class. NOTE: Derived classes must re-implement the assignment and copy constructor to call them of the parent class ; Definition at line 50 of file GSLSimAnnealing.h. Public Member Functions;  GSLSimAnFunc (const ROOT::Math::IMultiGenFunction &func, const double *x);  construct from an interface of a multi-dimensional function ;  ;  GSLSimAnFunc (const ROOT::Math::IMultiGenFunction &func, const double *x, const double *scale);  construct from an interface of a multi-dimensional function Use optionally a scale factor (for each coordinate) which can be used to scale the step sizes (this is used for example by the minimization algorithm) ;  ; virtual ~GSLSimAnFunc ();  virtual destructor (no operations) ;  ; virtual GSLSimAnFunc * Clone () const;  clone method. ;  ; virtual double Distance (const GSLSimAnFunc &func) const;  calculate the distance (metric) between this one and another configuration Presently a cartesian metric is used. ;  ; virtual double Energy () const;  evaluate the energy ( objective function value) re-implement by derived classes if needed to be modified ;  ; virtual GSLSimAnFunc & FastCopy (const GSLSimAnFunc &f);  fast copy method called by GSL simulated annealing internally copy only the things which have been changed must be re-implemented by derived classes if needed ;  ; unsigned int NDim ()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLSimAnFunc.html:80,Guid,Guide,80,doc/master/classROOT_1_1Math_1_1GSLSimAnFunc.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLSimAnFunc.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLSimAnMinimizer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLSimAnMinimizer Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; GSLSimAnMinimizer class for minimization using simulated annealing using the algorithm from GSL. ; It implements the ROOT::Minimizer interface and a plug-in (name ""GSLSimAn"") exists to instantiate this class via the plug-in manager Configuration (Setting/getting) the options is done through the methods defined in the ROOT::Math::Minimizer class. The user needs to call the base class method ROOT::Math::Minimizer::SetOptions to set the corresponding options. Here is some code example for increasing n_tries from 200 (default) to 1000 ROOT::Math::GenAlgoOptions simanOpt;; simanOpt.SetValue(""n_tries"", 1000);; ROOT::Math::MinimizerOptions opt;; opt.SetExtraOptions(simanOpt);; minimizer->SetOptions(opt);; ROOT::Math::GenAlgoOptionsclass implementing generic options for a numerical algorithm Just store the options in a map of strin...Definition GenAlgoOptions.h:32; ROOT::Math::IOptions::SetValuevoid SetValue(const char *name, double val)generic methods for retrieving optionsDefinition IOptions.h:42; ROOT::Math::MinimizerOptionsMinimizer options.Definition MinimizerOptions.h:40; ROOT::Math::MinimizerOptions::SetExtraOptionsvoid SetExtraOptions(const IOptions &opt)set extra options (in this case pointer is cloned)Definition MinimizerOptions.cxx:210. Definition at line 75 of file GSLSimAnMinimizer.h. Public Member Functions;  GSLSimAnMinimizer (int type=0);  Default constructor. ;  ;  ~GSLSimAnMinimizer () override;  Destructor (no operations) ;  ; bool Minimize () override;  method to perform the minimization ;  ; const GSLSimAnParams & MinimizerParameters () const;  Get current minimiz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLSimAnMinimizer.html:85,Guid,Guide,85,doc/master/classROOT_1_1Math_1_1GSLSimAnMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLSimAnMinimizer.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLSimAnParams Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Math::GSLSimAnParams Struct ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; structure holding the simulated annealing parameters ; Definition at line 161 of file GSLSimAnnealing.h. Public Member Functions;  GSLSimAnParams ();  . Public Attributes; int iters_fixed_T;  ; double k;  parameters for the Boltzman distribution ;  ; double mu_t;  ; int n_tries;  ; double step_size;  ; double t_initial;  ; double t_min;  . #include <Math/GSLSimAnnealing.h>; Constructor & Destructor Documentation. ◆ GSLSimAnParams(). ROOT::Math::GSLSimAnParams::GSLSimAnParams ; (; ). inline . Definition at line 164 of file GSLSimAnnealing.h. Member Data Documentation. ◆ iters_fixed_T. int ROOT::Math::GSLSimAnParams::iters_fixed_T. Definition at line 177 of file GSLSimAnnealing.h. ◆ k. double ROOT::Math::GSLSimAnParams::k. parameters for the Boltzman distribution ; Definition at line 180 of file GSLSimAnnealing.h. ◆ mu_t. double ROOT::Math::GSLSimAnParams::mu_t. Definition at line 182 of file GSLSimAnnealing.h. ◆ n_tries. int ROOT::Math::GSLSimAnParams::n_tries. Definition at line 176 of file GSLSimAnnealing.h. ◆ step_size. double ROOT::Math::GSLSimAnParams::step_size. Definition at line 178 of file GSLSimAnnealing.h. ◆ t_initial. double ROOT::Math::GSLSimAnParams::t_initial. Definition at line 181 of file GSLSimAnnealing.h. ◆ t_min. double ROOT::Math::GSLSimAnParams::t_min. Definition at line 183 of file GSLSimAnnealing.h. Collaboration diagram for ROOT::Math::GSLSimAnParams:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; math/mathmore/inc/Math/GSLSimAnnealing.h. ROOTMathGSLSimAnParams. ROO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1GSLSimAnParams.html:83,Guid,Guide,83,doc/master/structROOT_1_1Math_1_1GSLSimAnParams.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1GSLSimAnParams.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLSimAnnealing Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLSimAnnealing Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; GSLSimAnnealing class for performing a simulated annealing search of a multidimensional function. ; Definition at line 193 of file GSLSimAnnealing.h. Public Member Functions;  GSLSimAnnealing ();  Default constructor. ;  ;  GSLSimAnnealing (const GSLSimAnnealing &)=delete;  ;  GSLSimAnnealing (GSLSimAnnealing &&)=delete;  ;  ~GSLSimAnnealing ();  Destructor (no operations) ;  ; GSLSimAnnealing & operator= (const GSLSimAnnealing &rhs)=delete;  ; GSLSimAnnealing & operator= (GSLSimAnnealing &&rhs)=delete;  ; GSLSimAnParams & Params ();  ; const GSLSimAnParams & Params () const;  ; void SetParams (const GSLSimAnParams &params);  ; int Solve (const ROOT::Math::IMultiGenFunction &func, const double *x0, const double *scale, double *xmin, bool debug=false);  solve the simulated annealing given a multi-dim function, the initial vector parameters and a vector containing the scaling factors for the parameters ;  ; int Solve (GSLSimAnFunc &func, bool debug=false);  solve the simulated annealing given a GSLSimAnFunc object The object will contain the initial state at the beginning and the final minimum state at the end ;  . Private Attributes; GSLSimAnParams fParams;  . #include <Math/GSLSimAnnealing.h>; Constructor & Destructor Documentation. ◆ GSLSimAnnealing() [1/3]. ROOT::Math::GSLSimAnnealing::GSLSimAnnealing ; (; ). Default constructor. ; Definition at line 174 of file GSLSimAnnealing.cxx. ◆ ~GSLSimAnnealing(). ROOT::Math::GSLSimAnnealing::~GSLSimAnnealing ; (; ). inline . Destructor (no operations) ; Definition at line 205 of file GSLSimAnnealing.h. ◆ GSLSimAnnealing() [2/3]. ROOT::Math::GSLSimAnnealing::GSLSimAnn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLSimAnnealing.html:83,Guid,Guide,83,doc/master/classROOT_1_1Math_1_1GSLSimAnnealing.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLSimAnnealing.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GSLVegasIntegrationWorkspace Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLVegasIntegrationWorkspace Class Reference. ; workspace for VEGAS ; Definition at line 85 of file GSLMCIntegrationWorkspace.h. Public Member Functions;  GSLVegasIntegrationWorkspace (size_t dim=0);  ; double Chisq () const;  ; void Clear () override;  free the workspace deleting the GSL pointer ;  ; gsl_monte_vegas_state * GetWS ();  ; bool Init (size_t dim) override;  initialize the workspace creating the GSL pointer if it is not there ;  ; size_t NDim () const override;  ; std::unique_ptr< IOptions > Options () const override;  retrieve option pointer corresponding to parameters create a new object to be managed by the user ;  ; VegasParameters & Parameters ();  ; const VegasParameters & Parameters () const;  ; bool ReInit () override;  re-initialize an existing the workspace ;  ; double Result () const;  ; virtual void SetOptions (const ROOT::Math::IOptions &opt) override;  set options ;  ; void SetParameters (const struct VegasParameters &p);  ; double Sigma () const;  ; MCIntegration::Type Type () const override;  ;  Public Member Functions inherited from ROOT::Math::GSLMCIntegrationWorkspace;  GSLMCIntegrationWorkspace ();  ; virtual ~GSLMCIntegrationWorkspace ();  . Private Member Functions; void SetVegasParameters ();  . Private Attributes; VegasParameters fParams;  ; gsl_monte_vegas_state * fWs;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMCIntegrationWorkspace.h>. Inheritance diagram for ROOT::Math::GSLVegasIntegrationWorkspace:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ GSLVegasIntegrationWorkspace(). ROOT::Math::GSLVega",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLVegasIntegrationWorkspace.html:96,Guid,Guide,96,doc/master/classROOT_1_1Math_1_1GSLVegasIntegrationWorkspace.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLVegasIntegrationWorkspace.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: ROOT::Math::GaussIntegrator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; List of all members ; ROOT::Math::GaussIntegrator Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; User class for performing function integration. ; It will use the Gauss Method for function integration in a given interval. This class is implemented from TF1::Integral(). ; Definition at line 40 of file GaussIntegrator.h. Public Member Functions;  GaussIntegrator (double absTol=-1, double relTol=-1);  Default Constructor. ;  ;  ~GaussIntegrator () override;  Destructor. ;  ; void AbsValue (bool flag);  Static function: set the fgAbsValue flag. ;  ; double Error () const override;  Return the estimate of the absolute Error of the last Integral calculation. ;  ; double Integral () override;  Returns Integral of function on an infinite interval. ;  ; double Integral (const std::vector< double > &pts) override;  This method is not implemented. ;  ; double Integral (double a, double b) override;  Returns Integral of function between a and b. ;  ; double IntegralCauchy (double a, double b, double c) override;  This method is not implemented. ;  ; double IntegralLow (double b) override;  Returns Integral of function on a lower semi-infinite interval. ;  ; double IntegralUp (double a) override;  Returns Integral of function on an upper semi-infinite interval. ;  ; ROOT::Math::IntegratorOneDimOptions Options () const override;  get the option used for the integration ;  ; double Result () const override;  Returns the result of the last Integral calculation. ;  ; void SetAbsTolerance (double eps) override;  This method is not implemented. ;  ; void SetFunction (const IGenFunction &) override;  Set integration function (flag control if function must be copied inside).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GaussIntegrator.html:83,Guid,Guide,83,doc/master/classROOT_1_1Math_1_1GaussIntegrator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GaussIntegrator.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GaussLegendreIntegrator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; ROOT::Math::GaussLegendreIntegrator Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; User class for performing function integration. ; It will use the Gauss-Legendre Method for function integration in a given interval. This class is implemented from TF1::Integral(). ; Definition at line 37 of file GaussLegendreIntegrator.h. Public Member Functions;  GaussLegendreIntegrator (int num=10, double eps=1e-12);  Basic constructor of GaussLegendreIntegrator. ;  ;  ~GaussLegendreIntegrator () override;  Default Destructor. ;  ; int GetNumberPoints () const;  ; void GetWeightVectors (double *x, double *w) const;  Returns the arrays x and w containing the abscissa and weight of the Gauss-Legendre n-point quadrature formula. ;  ; int NEval () const override;  return number of function evaluations in calculating the integral This is equivalent to the number of points ;  ; ROOT::Math::IntegratorOneDimOptions Options () const override;  get the option used for the integration ;  ; void SetAbsTolerance (double) override;  This method is not implemented. ;  ; void SetNumberPoints (int num);  Set the number of points used in the calculation of the integral. ;  ; void SetOptions (const ROOT::Math::IntegratorOneDimOptions &opt) override;  set the options (should be re-implemented by derived classes -if more options than tolerance exist ;  ; void SetRelTolerance (double) override;  Set the desired relative Error. ;  ;  Public Member Functions inherited from ROOT::Math::GaussIntegrator;  GaussIntegrator (double absTol=-1, double relTol=-1);  Default Constructor. ;  ;  ~GaussIntegrator () override;  Destructor. ;  ; void AbsValue (bool flag);  Static function: set the fgAbsValue ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GaussLegendreIntegrator.html:91,Guid,Guide,91,doc/master/classROOT_1_1Math_1_1GaussLegendreIntegrator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GaussLegendreIntegrator.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GenAlgoOptUtil Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; ROOT::Math::GenAlgoOptUtil Namespace Reference. Functions; IOptions * DoFindDefault (std::string &algoname, OptionsMap &gOpts);  . Variables; static OptionsMap gAlgoOptions;  . Function Documentation. ◆ DoFindDefault(). IOptions * ROOT::Math::GenAlgoOptUtil::DoFindDefault ; (; std::string & ; algoname, . OptionsMap & ; gOpts . ). Definition at line 33 of file GenAlgoOptions.cxx. Variable Documentation. ◆ gAlgoOptions. OptionsMap ROOT::Math::GenAlgoOptUtil::gAlgoOptions. static . Definition at line 30 of file GenAlgoOptions.cxx. ROOTMathGenAlgoOptUtil. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1GenAlgoOptUtil.html:86,Guid,Guide,86,doc/master/namespaceROOT_1_1Math_1_1GenAlgoOptUtil.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1GenAlgoOptUtil.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GenAlgoOptions Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GenAlgoOptions Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms. ; class implementing generic options for a numerical algorithm Just store the options in a map of string-value pairs ; Definition at line 32 of file GenAlgoOptions.h. Public Member Functions;  GenAlgoOptions ();  ;  ~GenAlgoOptions () override;  ; IOptions * Clone () const override;  generic methods for retrieving options ;  ; std::vector< std::string > GetAllIntKeys ();  ; std::vector< std::string > GetAllNamedKeys ();  ; std::vector< std::string > GetAllRealKeys ();  ; bool GetIntValue (const char *name, int &val) const override;  ; bool GetNamedValue (const char *name, std::string &val) const override;  ; bool GetRealValue (const char *name, double &val) const override;  ; void Print (std::ostream &os=std::cout) const override;  print options ;  ; void SetIntValue (const char *name, int val) override;  ; void SetNamedValue (const char *name, const char *val) override;  ; void SetRealValue (const char *name, double val) override;  Method that needs to be re-implemented by the derived classes. ;  ;  Public Member Functions inherited from ROOT::Math::IOptions;  IOptions ();  ; virtual ~IOptions ();  ; template<typename T > ; bool GetValue (const char *name, T &t) const;  ; int IValue (const char *name) const;  ; std::string NamedValue (const char *name) const;  ; double RValue (const char *name) const;  ; void SetValue (const char *name, const char *val);  ; void SetValue (const char *name, double val);  generic methods for retrieving options ;  ; void SetValue (const char *name, int val);  . Static Public Member Functions; static IOptions & Default (const char *algoname);  ; st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GenAlgoOptions.html:82,Guid,Guide,82,doc/master/classROOT_1_1Math_1_1GenAlgoOptions.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GenAlgoOptions.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GenVector Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; ROOT::Math::GenVector Namespace Reference. Functions; void Throw (const char *s);  function throwing exception, by creating internally a GenVector_exception only when needed ;  . Function Documentation. ◆ Throw(). void ROOT::Math::GenVector::Throw ; (; const char * ; s). inline . function throwing exception, by creating internally a GenVector_exception only when needed ; Definition at line 80 of file GenVector_exception.h. ROOTMathGenVector. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1GenVector.html:81,Guid,Guide,81,doc/master/namespaceROOT_1_1Math_1_1GenVector.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1GenVector.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::GenVector_detail Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; ROOT::Math::GenVector_detail Namespace Reference. Classes; class  BitReproducible;  ; class  BitReproducibleException;  . ROOTMathGenVector_detail. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1GenVector__detail.html:88,Guid,Guide,88,doc/master/namespaceROOT_1_1Math_1_1GenVector__detail.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1GenVector__detail.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GenVector_exception Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Private Member Functions |; Friends |; List of all members ; ROOT::Math::GenVector_exception Class Reference. . Definition at line 36 of file GenVector_exception.h. Public Member Functions;  GenVector_exception (const std::string &s);  . Static Public Member Functions; static bool DisableThrow ();  ; static bool EnableThrow ();  . Static Private Member Functions; static bool & IsOn ();  . Friends; void GenVector::Throw (const char *);  ; void Throw (GenVector_exception &);  throw explicitly GenVector exceptions ;  . #include <Math/GenVector/GenVector_exception.h>. Inheritance diagram for ROOT::Math::GenVector_exception:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ GenVector_exception(). ROOT::Math::GenVector_exception::GenVector_exception ; (; const std::string & ; s). inline . Definition at line 38 of file GenVector_exception.h. Member Function Documentation. ◆ DisableThrow(). static bool ROOT::Math::GenVector_exception::DisableThrow ; (; ). inlinestatic . Definition at line 49 of file GenVector_exception.h. ◆ EnableThrow(). static bool ROOT::Math::GenVector_exception::EnableThrow ; (; ). inlinestatic . Definition at line 43 of file GenVector_exception.h. ◆ IsOn(). static bool & ROOT::Math::GenVector_exception::IsOn ; (; ). inlinestaticprivate . Definition at line 60 of file GenVector_exception.h. Friends And Related Symbol Documentation. ◆ GenVector::Throw. void GenVector::Throw ; (; const char * ; ). friend . ◆ Throw. void Throw ; (; GenVector_exception & ; e). friend . throw explicitly GenVector exceptions ; Definition at line 72 of file GenVector_exception.h. math/genvector/inc/Math/GenVector/GenVector_exception.h. ROOTMathGenVector_exception. R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GenVector__exception.html:87,Guid,Guide,87,doc/master/classROOT_1_1Math_1_1GenVector__exception.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GenVector__exception.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GeneralHessianCalc< T > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::GeneralHessianCalc< T > Struct Template Reference. ; template<class T>; struct ROOT::Math::GeneralHessianCalc< T >; Definition at line 308 of file WrappedMultiTF1.h. Static Public Member Functions; static bool Hessian (TF1 *, const T *, const double *, T *);  ; static bool IsAvailable (TF1 *);  . #include <Math/WrappedMultiTF1.h>; Member Function Documentation. ◆ Hessian(). template<class T > . static bool ROOT::Math::GeneralHessianCalc< T >::Hessian ; (; TF1 * ; , . const T * ; , . const double * ; , . T * ;  . ). inlinestatic . Definition at line 309 of file WrappedMultiTF1.h. ◆ IsAvailable(). template<class T > . static bool ROOT::Math::GeneralHessianCalc< T >::IsAvailable ; (; TF1 * ; ). inlinestatic . Definition at line 314 of file WrappedMultiTF1.h. The documentation for this struct was generated from the following file:; hist/hist/inc/Math/WrappedMultiTF1.h. ROOTMathGeneralHessianCalc. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1GeneralHessianCalc.html:101,Guid,Guide,101,doc/master/structROOT_1_1Math_1_1GeneralHessianCalc.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1GeneralHessianCalc.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GeneralHessianCalc< double > Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::GeneralHessianCalc< double > Struct Reference. . Definition at line 318 of file WrappedMultiTF1.h. Static Public Member Functions; static bool Hessian (TF1 *func, const double *x, const double *par, double *h);  ; static bool IsAvailable (TF1 *func);  . #include <Math/WrappedMultiTF1.h>; Member Function Documentation. ◆ Hessian(). static bool ROOT::Math::GeneralHessianCalc< double >::Hessian ; (; TF1 * ; func, . const double * ; x, . const double * ; par, . double * ; h . ). inlinestatic . Definition at line 319 of file WrappedMultiTF1.h. ◆ IsAvailable(). static bool ROOT::Math::GeneralHessianCalc< double >::IsAvailable ; (; TF1 * ; func). inlinestatic . Definition at line 337 of file WrappedMultiTF1.h. The documentation for this struct was generated from the following file:; hist/hist/inc/Math/WrappedMultiTF1.h. ROOTMathGeneralHessianCalc< double >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1GeneralHessianCalc_3_01double_01_4.html:97,Guid,Guide,97,doc/master/structROOT_1_1Math_1_1GeneralHessianCalc_3_01double_01_4.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1GeneralHessianCalc_3_01double_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GeneralLinearFunctionDerivation< T > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::GeneralLinearFunctionDerivation< T > Struct Template Reference. ; template<class T>; struct ROOT::Math::GeneralLinearFunctionDerivation< T >Auxiliar class to bypass the (provisional) lack of vectorization in TFormula::EvalPar. ; WrappedMultiTF1Templ::DoParameterDerivation calls TFormula::EvalPar in the case of a general linear function built with TFormula using ++; as EvalPar is not vectorized, in order to generalize DoParameterDerivative with a general type T, we use this auxiliar class to branch the code in compile time with the double specialization (that can call EvalPar) and the general implementation (that throws an error in the case of general linear function). ; Definition at line 203 of file WrappedMultiTF1.h. Static Public Member Functions; static T DoParameterDerivative (const WrappedMultiTF1Templ< T > *, const T *, unsigned int);  . #include <Math/WrappedMultiTF1.h>; Member Function Documentation. ◆ DoParameterDerivative(). template<class T > . static T ROOT::Math::GeneralLinearFunctionDerivation< T >::DoParameterDerivative ; (; const WrappedMultiTF1Templ< T > * ; , . const T * ; , . unsigned int ;  . ). inlinestatic . Definition at line 204 of file WrappedMultiTF1.h. The documentation for this struct was generated from the following file:; hist/hist/inc/Math/WrappedMultiTF1.h. ROOTMathGeneralLinearFunctionDerivation. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1GeneralLinearFunctionDerivation.html:114,Guid,Guide,114,doc/master/structROOT_1_1Math_1_1GeneralLinearFunctionDerivation.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1GeneralLinearFunctionDerivation.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GeneralLinearFunctionDerivation< double > Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::GeneralLinearFunctionDerivation< double > Struct Reference. . Definition at line 214 of file WrappedMultiTF1.h. Static Public Member Functions; static double DoParameterDerivative (const WrappedMultiTF1Templ< double > *wrappedFunc, const double *x, unsigned int ipar);  . #include <Math/WrappedMultiTF1.h>; Member Function Documentation. ◆ DoParameterDerivative(). static double ROOT::Math::GeneralLinearFunctionDerivation< double >::DoParameterDerivative ; (; const WrappedMultiTF1Templ< double > * ; wrappedFunc, . const double * ; x, . unsigned int ; ipar . ). inlinestatic . Definition at line 216 of file WrappedMultiTF1.h. The documentation for this struct was generated from the following file:; hist/hist/inc/Math/WrappedMultiTF1.h. ROOTMathGeneralLinearFunctionDerivation< double >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1GeneralLinearFunctionDerivation_3_01double_01_4.html:110,Guid,Guide,110,doc/master/structROOT_1_1Math_1_1GeneralLinearFunctionDerivation_3_01double_01_4.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1GeneralLinearFunctionDerivation_3_01double_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GeneticMinimizer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; ROOT::Math::GeneticMinimizer Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; GeneticMinimizer. ; Minimizer class based on the Gentic algorithm implemented in TMVA ; Definition at line 61 of file GeneticMinimizer.h. Public Member Functions;  GeneticMinimizer (int i=0);  ;  ~GeneticMinimizer () override;  ; void Clear () override;  reset for consecutive minimization - implement if needed ;  ; double CovMatrix (unsigned int i, unsigned int j) const override;  return covariance matrices element for variables ivar,jvar if the variable is fixed the return value is zero The ordering of the variables is the same as in the parameter and errors vectors ;  ; double Edm () const override;  return expected distance reached from the minimum (re-implement if minimizer provides it ;  ; const double * Errors () const override;  return errors at the minimum ;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; const GeneticMinimizerParameters & MinimizerParameters () const;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total (re-implement if minimizer supports bounded parameters) ;  ; ROOT::Math::MinimizerOptions Options () const override;  retrieve the minimizer opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html:84,Guid,Guide,84,doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GeneticMinimizerParameters Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Math::GeneticMinimizerParameters Struct Reference. . Definition at line 35 of file GeneticMinimizer.h. Public Member Functions;  GeneticMinimizerParameters ();  . Public Attributes; Double_t fConvCrit;  ; Int_t fCycles;  ; Int_t fNsteps;  ; Int_t fPopSize;  ; Double_t fSC_factor;  ; Int_t fSC_rate;  ; Int_t fSC_steps;  ; Int_t fSeed;  . #include <Math/GeneticMinimizer.h>; Constructor & Destructor Documentation. ◆ GeneticMinimizerParameters(). ROOT::Math::GeneticMinimizerParameters::GeneticMinimizerParameters ; (; ). Definition at line 82 of file GeneticMinimizer.cxx. Member Data Documentation. ◆ fConvCrit. Double_t ROOT::Math::GeneticMinimizerParameters::fConvCrit. Definition at line 43 of file GeneticMinimizer.h. ◆ fCycles. Int_t ROOT::Math::GeneticMinimizerParameters::fCycles. Definition at line 39 of file GeneticMinimizer.h. ◆ fNsteps. Int_t ROOT::Math::GeneticMinimizerParameters::fNsteps. Definition at line 38 of file GeneticMinimizer.h. ◆ fPopSize. Int_t ROOT::Math::GeneticMinimizerParameters::fPopSize. Definition at line 37 of file GeneticMinimizer.h. ◆ fSC_factor. Double_t ROOT::Math::GeneticMinimizerParameters::fSC_factor. Definition at line 42 of file GeneticMinimizer.h. ◆ fSC_rate. Int_t ROOT::Math::GeneticMinimizerParameters::fSC_rate. Definition at line 41 of file GeneticMinimizer.h. ◆ fSC_steps. Int_t ROOT::Math::GeneticMinimizerParameters::fSC_steps. Definition at line 40 of file GeneticMinimizer.h. ◆ fSeed. Int_t ROOT::Math::GeneticMinimizerParameters::fSeed. Definition at line 44 of file GeneticMinimizer.h. Collaboration diagram for ROOT::Math::GeneticMinimizerParameters:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was genera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1GeneticMinimizerParameters.html:95,Guid,Guide,95,doc/master/structROOT_1_1Math_1_1GeneticMinimizerParameters.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1GeneticMinimizerParameters.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::GlobalCoordinateSystemTag Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Math::GlobalCoordinateSystemTag Class ReferenceMath » Physics Vectors. ; Tag for identifying vectors based on a global coordinate system. ; See alsoOverview of the physics vector library ; Definition at line 49 of file CoordinateSystemTags.h. #include <Math/GenVector/CoordinateSystemTags.h>; The documentation for this class was generated from the following file:; math/genvector/inc/Math/GenVector/CoordinateSystemTags.h. ROOTMathGlobalCoordinateSystemTag. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GlobalCoordinateSystemTag.html:93,Guid,Guide,93,doc/master/classROOT_1_1Math_1_1GlobalCoordinateSystemTag.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GlobalCoordinateSystemTag.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GoFTest Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GoFTest Class ReferenceMath » MathCore » Goodness of Fit Tests. ; GoFTest class implementing the 1 sample and 2 sample goodness of fit tests for uni-variate distributions and data. ; The class implements the AndersonDarling and the KolmogorovSmirnov tests; In the case of the 1-sample test the user needs to provide:; input data; theoretical distribution. The distribution can be provided as a function object (functor) or an object implementing the ROOT::Math::IGenFunction interface. One can provide either the PDF (default) of the CDF (cumulative distribution) One can also provide a pre-defined function. In that case one needs to give also the distribution parameters otherwise the default values will be used. The pre-defined distributions are:; kGaussian with default parameter mean=0, sigma=1; kExponential with default parameter rate=1; kLogNormal with default parameter meanlog=0, sigmalog=1. Note that one should not use data computed distribution parameters, otherwise the test will be biased. The 1-sample KS test using data computed quantities is called Lilliefors test (see https://en.wikipedia.org/wiki/Lilliefors_test) . Definition at line 65 of file GoFTest.h. Public Types; enum  EDistribution { ;   kUndefined; , kUserDefined; , kGaussian; , kLogNormal; , ;   kExponential. };  H0 distributions for using only with 1-sample tests. More...;  ; enum  ETestType { kAD; , kAD2s; , kKS; , kKS2s; };  Goodness of Fit test types for using with the class's unary functions as a shorthand for the in-built methods. More...;  ; enum  EUserDistribution { kCDF; , kPDF; };  User input distribution option. More...;  . Public Member Functions;  GoFT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GoFTest.html:75,Guid,Guide,75,doc/master/classROOT_1_1Math_1_1GoFTest.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GoFTest.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GradFunctor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GradFunctor Class ReferenceMath » MathCore » Function Classes and Interfaces » Generic Function Evaluation Interfaces. ; GradFunctor class for Multidimensional gradient functions. ; It is used to wrap in a very C++ callable object to make gradient functions. It can be constructed in three different way: . from an object implementing both double operator()( const double * ) for the function evaluation and double Derivative(const double *, int icoord) for the partial derivatives . from an object implementing any member function like Foo::XXX(const double *) for the function evaluation and any member function like Foo::XXX(const double *, int icoord) for the partial derivatives . from two function objects implementing double operator()( const double * ) for the function evaluation and another function object implementing double operator() (const double *, int icoord) for the partial derivatives . from two function objects . The function dimension is required when constructing the functor. ; Definition at line 142 of file Functor.h. Public Member Functions;  GradFunctor ()=default;  Default constructor. ;  ; template<typename Func > ;  GradFunctor (const Func &f, unsigned int dim);  construct from a callable object of multi-dimension implementing operator()(const double *x) and Derivative(const double * x,icoord) ;  ; template<class PtrObj , typename MemFn , typename DerivMemFn , std::enable_if_t< std::is_floating_point< decltype((std::declval< std::remove_pointer_t< PtrObj > >().*std::declval< DerivMemFn >())(std::declval< const double * >(), std::declval< int >()))>::value , bool > ;  GradFunctor (const PtrObj &p, MemFn memFn, DerivMemFn gradFn, unsigned int dim);  Construct from a pointer to member function a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GradFunctor.html:79,Guid,Guide,79,doc/master/classROOT_1_1Math_1_1GradFunctor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GradFunctor.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::GradFunctor1D Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GradFunctor1D Class ReferenceMath » MathCore » Function Classes and Interfaces » Generic Function Evaluation Interfaces. ; GradFunctor1D class for one-dimensional gradient functions. ; It is used to wrap in a very C++ callable object to make a 1D gradient functions. It can be constructed in three different way: . from an object implementing both double operator()( double ) for the function evaluation and double Derivative(double ) for the partial derivatives . from an object implementing any member function like Foo::XXX(double ) for the function evaluation and any other member function like Foo::YYY(double ) for the derivative. . from an 2 function objects implementing double operator()( double ) . One object provides the function evaluation, the other the derivative. . Definition at line 269 of file Functor.h. Public Member Functions;  GradFunctor1D ()=default;  Default constructor. ;  ; template<typename Func > ;  GradFunctor1D (const Func &f);  Construct from an object with the right signature, implementing both operator() (double x) and Derivative(double x). ;  ; template<class PtrObj , typename MemFn , typename GradMemFn > ;  GradFunctor1D (const PtrObj &p, MemFn memFn, GradMemFn gradFn);  construct from a pointer to class and two pointers to member functions, one for the function evaluation and the other for the derivative. ;  ;  GradFunctor1D (std::function< double(double)> const &f, std::function< double(double)> const &g);  Specialized constructor from 2 function objects implementing double operator()(double x). ;  ; GradFunctor1D * Clone () const override;  Clone a function. ;  ;  Public Member Functions inherited from ROOT::Math::IGradientFunctionOneDim; double Derivative (const double *x) cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GradFunctor1D.html:81,Guid,Guide,81,doc/master/classROOT_1_1Math_1_1GradFunctor1D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GradFunctor1D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::IBaseFunctionMultiDimTempl< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; List of all members ; ROOT::Math::IBaseFunctionMultiDimTempl< T > Class Template ReferenceabstractMath » MathCore » Function Classes and Interfaces » Generic Function Evaluation Interfaces. ; template<class T>; class ROOT::Math::IBaseFunctionMultiDimTempl< T >Documentation for the abstract class IBaseFunctionMultiDim. ; Interface (abstract class) for generic functions objects of multi-dimension Provides a method to evaluate the function given a vector of coordinate values, by implementing operator() (const double *). In addition it defines the interface for copying functions via the pure virtual method Clone() and the interface for getting the function dimension via the NDim() method. Derived classes must implement the pure private virtual method DoEval(const double *) for the function evaluation in addition to NDim() and Clone(). ; Definition at line 61 of file IFunction.h. Public Types; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . Public Member Functions; virtual ~IBaseFunctionMultiDimTempl ()=default;  ; virtual IBaseFunctionMultiDimTempl< T > * Clone () const =0;  Clone a function. ;  ; virtual bool HasGradient () const;  ; virtual unsigned int NDim () const =0;  Retrieve the dimension of the function. ;  ; T operator() (const T *x) const;  Evaluate the function at a point x[]. ;  . Private Member Functions; virtual T DoEval (const T *x) const =0;  Implementation of the evaluation function. Must be implemented by derived classes. ;  . #include <Math/IFunction.h>. Inheritance diagram for ROOT::Math::IBaseFunctionMultiDimTempl< T >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ BackendType. template<cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IBaseFunctionMultiDimTempl.html:108,Guid,Guide,108,doc/master/classROOT_1_1Math_1_1IBaseFunctionMultiDimTempl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IBaseFunctionMultiDimTempl.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::IBaseFunctionOneDim Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; List of all members ; ROOT::Math::IBaseFunctionOneDim Class ReferenceabstractMath » MathCore » Function Classes and Interfaces » Generic Function Evaluation Interfaces. ; Interface (abstract class) for generic functions objects of one-dimension Provides a method to evaluate the function given a value (simple double) by implementing operator() (const double ). ; In addition it defines the interface for copying functions via the pure virtual method Clone(). Derived classes must implement the pure virtual private method DoEval(double ) for the function evaluation in addition to Clone(). An interface for evaluating the function passing a vector (like for multidim functions) is also provided ; Definition at line 112 of file IFunction.h. Public Types; typedef IBaseFunctionOneDim BaseFunc;  . Public Member Functions; virtual ~IBaseFunctionOneDim ()=default;  ; virtual IBaseFunctionOneDim * Clone () const =0;  Clone a function. ;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  . Private Member Functions; virtual double DoEval (double x) const =0;  implementation of the evaluation function. Must be implemented by derived classes ;  . #include <Math/IFunction.h>. Inheritance diagram for ROOT::Math::IBaseFunctionOneDim:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ BaseFunc. typedef IBaseFunctionOneDim ROOT::Math::IBaseFunctionOneDim::BaseFunc. Definition at line 116 of file IFunction.h. Constructor & Destructor Documentation. ◆ ~IBaseFunctionOneDim(). virtual ROOT::Math::IBaseFunctionOneDim::~IBaseFunctionOneDim ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IBaseFunctionOneDim.html:87,Guid,Guide,87,doc/master/classROOT_1_1Math_1_1IBaseFunctionOneDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IBaseFunctionOneDim.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: ROOT::Math::IBaseParam Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::IBaseParam Class ReferenceabstractMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; Documentation for the abstract class IBaseParam. ; It defines the interface for dealing with the function parameters This is used only for internal convenience, to avoid redefining the Parameter API for the one and the multi-dim functions. Concrete class should derive from ROOT::Math::IParamFunction and not from this class. ; Definition at line 51 of file IParamFunction.h. Public Member Functions; virtual ~IBaseParam ();  Virtual Destructor (no operations) ;  ; virtual unsigned int NPar () const =0;  Return the number of Parameters. ;  ; virtual std::string ParameterName (unsigned int i) const;  Return the name of the i-th parameter (starting from zero) Overwrite if want to avoid the default name (""Par_0, Par_1, ..."") ;  ; virtual const double * Parameters () const =0;  Access the parameter values. ;  ; virtual void SetParameters (const double *p)=0;  Set the parameter values. ;  . #include <Math/IParamFunction.h>. Inheritance diagram for ROOT::Math::IBaseParam:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~IBaseParam(). virtual ROOT::Math::IBaseParam::~IBaseParam ; (; ). inlinevirtual . Virtual Destructor (no operations) ; Definition at line 59 of file IParamFunction.h. Member Function Documentation. ◆ NPar(). virtual unsigned int ROOT::Math::IBaseParam::NPar ; (; ); const. pure virtual . Return the number of Parameters. ; Implemented in ROOT::Math::ParamFunction< IParamGradFunction >, ROOT::Math::WrappedMultiTF1Templ< T >, ROOT::Math::WrappedTF1, ROOT::Math::MultiDimParamFunctionAdapter, ROOT::Math::MultiDimParamGradFunctionAdapter, RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IBaseParam.html:78,Guid,Guide,78,doc/master/classROOT_1_1Math_1_1IBaseParam.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IBaseParam.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::IGradientFunctionMultiDimTempl< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; List of all members ; ROOT::Math::IGradientFunctionMultiDimTempl< T > Class Template ReferenceabstractMath » MathCore » Function Classes and Interfaces » Generic Function Evaluation Interfaces. ; template<class T>; class ROOT::Math::IGradientFunctionMultiDimTempl< T >Interface (abstract class) for multi-dimensional functions providing a gradient calculation. ; The method ROOT::Math::IFunction::Gradient calculates the full gradient vector, ROOT::Math::IFunction::Derivative calculates the partial derivative for each coordinate and ROOT::Math::Fdf calculates the gradient and the function value at the same time. The pure private virtual method DoDerivative() must be implemented by the derived classes, while Gradient and FdF are by default implemented using DoDerivative, butthey can be overloaded by the derived classes to improve the efficiency in the derivative calculation.; Gradient interface (abstract class) defining the signature for calculating the gradient of a multi-dimensional function. Three methods are provided:; Gradient(const double *x, double * grad) evaluate the full gradient vector at the vector value x; Derivative(const double * x, int icoord) evaluate the partial derivative for the icoord coordinate; FdF(const double *x, double &f, double * g) evaluate at the same time gradient and function/ . Definition at line 168 of file IFunction.h. Public Types; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  ; typedef IGradientFunctionMultiDimTempl< T > BaseGrad;  ;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . Public Member Functions; T Derivative (const T *x, unsigned int icoord, T *previous_grad, T *pre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IGradientFunctionMultiDimTempl.html:112,Guid,Guide,112,doc/master/classROOT_1_1Math_1_1IGradientFunctionMultiDimTempl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IGradientFunctionMultiDimTempl.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::IGradientFunctionOneDim Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; List of all members ; ROOT::Math::IGradientFunctionOneDim Class ReferenceabstractMath » MathCore » Function Classes and Interfaces » Generic Function Evaluation Interfaces. ; Interface (abstract class) for one-dimensional functions providing a gradient calculation. ; The method ROOT::Math::IFunction::Derivative calculates the derivative and ROOT::Math::Fdf calculates the derivative and the function values at the same time. The pure private virtual method DoDerivative() must be implemented by the derived classes, while FdF is by default implemented using DoDerivative, but it can be overloaded by the derived classes to improve the efficiency in the derivative calculation.; Specialized Gradient interface(abstract class) for one dimensional functions It provides a method to evaluate the derivative of the function, Derivative and a method to evaluate at the same time the function and the derivative FdF ; Definition at line 254 of file IFunction.h. Public Types; typedef IBaseFunctionOneDim BaseFunc;  ; typedef IGradientFunctionOneDim BaseGrad;  ;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . Public Member Functions; double Derivative (const double *x) const;  Compatibility method with multi-dimensional interface for partial derivative. ;  ; double Derivative (double x) const;  Return the derivative of the function at a point x Use the private method DoDerivative. ;  ; void FdF (const double *x, double &f, double *df) const;  Compatibility method with multi-dimensional interface for Gradient and function evaluation. ;  ; virtual void FdF (double x, double &f, double &df) const;  Optimized method to evaluate at the same time the function value and derivative at a point x. ;  ; void Gradi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IGradientFunctionOneDim.html:91,Guid,Guide,91,doc/master/classROOT_1_1Math_1_1IGradientFunctionOneDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IGradientFunctionOneDim.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::IGradientMultiDimTempl< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Math::IGradientMultiDimTempl< T > Class Template Reference. ; template<class T>; class ROOT::Math::IGradientMultiDimTempl< T >; Definition at line 27 of file IFunctionfwd.h.; The documentation for this class was generated from the following file:; math/mathcore/inc/Math/IFunctionfwd.h. ROOTMathIGradientMultiDimTempl. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:21 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IGradientMultiDimTempl.html:104,Guid,Guide,104,doc/master/classROOT_1_1Math_1_1IGradientMultiDimTempl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IGradientMultiDimTempl.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::IMinimizer1D Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::IMinimizer1D Class ReferenceabstractMath » MathCore | Math » MathMore » Numerical Algorithms » One-dimensional Minimization. ; Interface class for numerical methods for one-dimensional minimization. ; Definition at line 39 of file IMinimizer1D.h. Public Member Functions;  IMinimizer1D ();  ; virtual ~IMinimizer1D ();  ; virtual double FValLower () const =0;  Return function value at current lower bound of the minimization interval. ;  ; virtual double FValMinimum () const =0;  Return function value at current estimate of the minimum. ;  ; virtual double FValUpper () const =0;  Return function value at current upper bound of the minimization interval. ;  ; virtual int Iterations () const =0;  Return number of iteration used to find minimum. ;  ; virtual bool Minimize (int maxIter, double absTol, double relTol)=0;  Find minimum position iterating until convergence specified by the absolute and relative tolerance or the maximum number of iteration is reached Return true if iterations converged successfully @param maxIter maximum number of iteration @param absTol desired absolute error in the minimum position @param absTol desired relative error in the minimum position. ;  ; virtual const char * Name () const =0;  Return name of minimization algorithm. ;  ; virtual int Status () const =0;  Returns the status of the previous estimate. ;  ; virtual double XLower () const =0;  Return current lower bound of the minimization interval. ;  ; virtual double XMinimum () const =0;  Return current estimate of the position of the minimum. ;  ; virtual double XUpper () const =0;  Return current upper bound of the minimization interval. ;  . #include <Math/IMinimizer1D.h>. Inheritance diagram for ROOT::Math::IMinimizer1D:. This browser is not able to show SVG: try Firefox, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IMinimizer1D.html:80,Guid,Guide,80,doc/master/classROOT_1_1Math_1_1IMinimizer1D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IMinimizer1D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::IOptions Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; List of all members ; ROOT::Math::IOptions Class ReferenceabstractMath » MathCore | Math » MathMore » Numerical Algorithms. ; Generic interface for defining configuration options of a numerical algorithm. ; Definition at line 28 of file IOptions.h. Public Member Functions;  IOptions ();  ; virtual ~IOptions ();  ; virtual IOptions * Clone () const =0;  ; virtual bool GetIntValue (const char *, int &) const;  ; virtual bool GetNamedValue (const char *, std::string &) const;  ; virtual bool GetRealValue (const char *, double &) const;  ; template<typename T > ; bool GetValue (const char *name, T &t) const;  ; int IValue (const char *name) const;  ; std::string NamedValue (const char *name) const;  ; virtual void Print (std::ostream &=std::cout) const;  print options ;  ; double RValue (const char *name) const;  ; virtual void SetIntValue (const char *, int);  ; virtual void SetNamedValue (const char *, const char *);  ; virtual void SetRealValue (const char *, double);  method which need to be re-implemented by the derived classes ;  ; void SetValue (const char *name, const char *val);  ; void SetValue (const char *name, double val);  generic methods for retrieving options ;  ; void SetValue (const char *name, int val);  . Private Member Functions; bool DoGetValue (const char *name, double &val) const;  ; bool DoGetValue (const char *name, int &val) const;  ; bool DoGetValue (const char *name, std::string &val) const;  . #include <Math/IOptions.h>. Inheritance diagram for ROOT::Math::IOptions:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ IOptions(). ROOT::Math::IOptions::IOptions ; (; ). inline . Definition at line 32 of file IOptions.h. ◆ ~IOptions(). virtual ROOT::Math::IOp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IOptions.html:76,Guid,Guide,76,doc/master/classROOT_1_1Math_1_1IOptions.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IOptions.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::IParametricFunctionMultiDimTempl< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; List of all members ; ROOT::Math::IParametricFunctionMultiDimTempl< T > Class Template ReferenceabstractMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; template<class T>; class ROOT::Math::IParametricFunctionMultiDimTempl< T >IParamFunction interface (abstract class) describing multi-dimensional parametric functions It is a derived class from ROOT::Math::IBaseFunctionMultiDim and ROOT::Math::IBaseParam. ; Provides the interface for evaluating a function passing a coordinate vector and a parameter vector. ; Definition at line 107 of file IParamFunction.h. Public Types; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . Public Member Functions; T operator() (const T *x) const;  ; T operator() (const T *x, const double *p) const;  Evaluate function at a point x and for given parameters p. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; virtual ~IBaseFunctionMultiDimTempl ()=default;  ; virtual IBaseFunctionMultiDimTempl< T > * Clone () const =0;  Clone a function. ;  ; virtual bool HasGradient () const;  ; virtual unsigned int NDim () const =0;  Retrieve the dimension of the function. ;  ; T operator() (const T *x) const;  Evaluate the function at a point x[]. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseParam; virtual ~IBaseParam ();  Virtual Destructor (no operations) ;  ; virtual unsigned int NPar () const =0;  Return the number of Parameters. ;  ; virtual std::string ParameterName (unsigned int i) const;  Return the name of the i-th parameter (starting f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricFunctionMultiDimTempl.html:114,Guid,Guide,114,doc/master/classROOT_1_1Math_1_1IParametricFunctionMultiDimTempl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricFunctionMultiDimTempl.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::IParametricFunctionOneDim Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; List of all members ; ROOT::Math::IParametricFunctionOneDim Class ReferenceabstractMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; Specialized IParamFunction interface (abstract class) for one-dimensional parametric functions It is a derived class from ROOT::Math::IBaseFunctionOneDim and ROOT::Math::IBaseParam. ; Definition at line 159 of file IParamFunction.h. Public Types; typedef IBaseFunctionOneDim BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . Public Member Functions; double operator() (const double *x, const double *p) const;  multidim-like interface ;  ; double operator() (double x, const double *p) const;  Evaluate function at a point x and for given parameters p. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual IBaseFunctionOneDim * Clone () const =0;  Clone a function. ;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseParam; virtual ~IBaseParam ();  Virtual Destructor (no operations) ;  ; virtual unsigned int NPar () const =0;  Return the number of Parameters. ;  ; virtual std::string ParameterName (unsigned int i) const;  Return the name of the i-th parameter (starting from zero) Overwrite if want to avoid the default name (""Par_0, Par_1, ..."") ;  ; virtual const double * Parameters () const =0;  Access the parameter values. ;  ; virtual void SetParameters (const double *p)=0;  Set the parameter values. ;  . Private ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricFunctionOneDim.html:93,Guid,Guide,93,doc/master/classROOT_1_1Math_1_1IParametricFunctionOneDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricFunctionOneDim.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::IParametricGradFunctionMultiDimTempl< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; List of all members ; ROOT::Math::IParametricGradFunctionMultiDimTempl< T > Class Template ReferenceabstractMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; template<class T>; class ROOT::Math::IParametricGradFunctionMultiDimTempl< T >Interface (abstract class) for parametric gradient multi-dimensional functions providing in addition to function evaluation with respect to the coordinates also the gradient with respect to the parameters, via the method ParameterGradient. ; It is a derived class from ROOT::Math::IParametricFunctionMultiDim.; The pure private virtual method DoParameterGradient must be implemented by the derived classes in addition to those inherited by the base abstract classes. ; Definition at line 227 of file IParamFunction.h. Public Types; using BaseFunc = typename IParametricFunctionMultiDimTempl< T >::BaseFunc;  ; using BaseGradFunc = IGradientFunctionMultiDimTempl< T >;  ; using BaseParamFunc = IParametricFunctionMultiDimTempl< T >;  ;  Public Types inherited from ROOT::Math::IParametricFunctionMultiDimTempl< T >; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . Public Member Functions;  ~IParametricGradFunctionMultiDimTempl () override;  Virtual Destructor (no operations) ;  ; virtual bool HasParameterHessian () const;  ; T operator() (const T *x) const;  ; T operator() (const T *x, const double *p) const;  ; T ParameterDerivative (const T *x, const double *p, unsigned int ipar=0) const;  Evaluate the partial derivative w.r.t a parameter ipar from values and parameters. ;  ; T ParameterD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricGradFunctionMultiDimTempl.html:118,Guid,Guide,118,doc/master/classROOT_1_1Math_1_1IParametricGradFunctionMultiDimTempl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricGradFunctionMultiDimTempl.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::IParametricGradFunctionOneDim Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; List of all members ; ROOT::Math::IParametricGradFunctionOneDim Class ReferenceabstractMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; Interface (abstract class) for parametric one-dimensional gradient functions providing in addition to function evaluation with respect the coordinates also the gradient with respect to the parameters, via the method ParameterGradient. ; It is a derived class from ROOT::Math::IParametricFunctionOneDim.; The pure private virtual method DoParameterGradient must be implemented by the derived classes in addition to those inherited by the base abstract classes. ; Definition at line 327 of file IParamFunction.h. Public Types; typedef IParametricFunctionOneDim::BaseFunc BaseFunc;  ; typedef IGradientFunctionOneDim BaseGradFunc;  ; typedef IParametricFunctionOneDim BaseParamFunc;  ;  Public Types inherited from ROOT::Math::IParametricFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . Public Member Functions;  ~IParametricGradFunctionOneDim () override;  Virtual Destructor (no operations) ;  ; double ParameterDerivative (const double *x, const double *p, unsigned int ipar=0) const;  Partial derivative with respect a parameter Compatibility interface with multi-dimensional functions. ;  ; double ParameterDerivative (const double *x, unsigned int ipar=0) const;  Evaluate partial derivative using cached parameter values (multi-dim like interface) ;  ; double ParameterDerivative (double x, const double *p, unsigned int ipar=0) const;  Partial derivative with respect a parameter. ;  ; double ParameterDerivative (double x, unsigned int ipar=0) const;  Evalua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricGradFunctionOneDim.html:97,Guid,Guide,97,doc/master/classROOT_1_1Math_1_1IParametricGradFunctionOneDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricGradFunctionOneDim.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::IRootFinderMethod Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::IRootFinderMethod Class ReferenceabstractMath » MathCore | Math » MathMore » Numerical Algorithms » One-dimensional Root-Finding. ; Interface for finding function roots of one-dimensional functions. ; Definition at line 34 of file IRootFinderMethod.h. Public Member Functions;  IRootFinderMethod ();  Default Constructor. ;  ; virtual ~IRootFinderMethod ();  Default Destructor. ;  ; virtual int Iterate ();  This method is implemented only by the GSLRootFinder and GSLRootFinderDeriv classes and will return an error if it's not one of them. ;  ; virtual int Iterations () const;  Return number of iterations used to find the root Must be implemented by derived classes. ;  ; virtual const char * Name () const =0;  Return name of root finder algorithm. ;  ; virtual double Root () const =0;  Returns the previously calculated root. ;  ; virtual bool SetFunction (const ROOT::Math::IGenFunction &, double, double);  Sets the function for the rest of the algorithms. ;  ; virtual bool SetFunction (const ROOT::Math::IGradFunction &, double);  Sets the function for algorithms using derivatives. ;  ; virtual bool Solve (int maxIter=100, double absTol=1E-8, double relTol=1E-10)=0;  Stimates the root for the function. ;  ; virtual int Status () const =0;  Returns the status of the previous estimate. ;  . #include <Math/IRootFinderMethod.h>. Inheritance diagram for ROOT::Math::IRootFinderMethod:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~IRootFinderMethod(). virtual ROOT::Math::IRootFinderMethod::~IRootFinderMethod ; (; ). inlinevirtual . Default Destructor. ; Definition at line 37 of file IRootFinderMethod.h. ◆ IRootFinderMethod(). ROOT::Math::IRootFinderMethod::IRootFinderMe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IRootFinderMethod.html:85,Guid,Guide,85,doc/master/classROOT_1_1Math_1_1IRootFinderMethod.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IRootFinderMethod.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Impl Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Functions ; ROOT::Math::Impl Namespace Reference. Classes; class  Plane3D;  Class describing a geometrical plane in 3 dimensions. More...;  ; class  Transform3D;  Basic 3D Transformation class describing a rotation and then a translation The internal data are a 3D rotation data (represented as a 3x3 matrix) and a 3D vector data. More...;  ; class  Translation3D;  Class describing a 3 dimensional translation. More...;  . Functions; template<typename Scalar > ; Scalar Eta_FromRhoZ (Scalar rho, Scalar z);  Calculate eta given rho and zeta. ;  ; template<typename Scalar > ; Scalar Eta_FromTheta (Scalar theta, Scalar r);  Implementation of eta from -log(tan(theta/2)). ;  ; template<class T > ; Transform3D< T > operator* (const AxisAngle &r, const Transform3D< T > &t);  ; template<class T > ; Transform3D< T > operator* (const AxisAngle &r, const Translation3D< T > &t);  ; template<class T > ; Transform3D< T > operator* (const EulerAngles &r, const Transform3D< T > &t);  ; template<class T > ; Transform3D< T > operator* (const EulerAngles &r, const Translation3D< T > &t);  ; template<class T > ; Transform3D< T > operator* (const Quaternion &r, const Transform3D< T > &t);  ; template<class T > ; Transform3D< T > operator* (const Quaternion &r, const Translation3D< T > &t);  ; template<class T > ; Transform3D< T > operator* (const Rotation3D &r, const Transform3D< T > &t);  combine a rotation and a transformation to give a transform3d First the transformation then the rotation ;  ; template<class T > ; Transform3D< T > operator* (const Rotation3D &r, const Translation3D< T > &t);  combine a translation and a rotation to give a transform3d First the translation then the rotation ;  ; template<class T > ; Transform3D< T > operator* (const RotationX &r, const Transform3D< T > &t);  ; template<class T > ; Transform3D< T > operator* (const Rotat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Impl.html:76,Guid,Guide,76,doc/master/namespaceROOT_1_1Math_1_1Impl.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Impl.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Impl::Plane3D< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::Impl::Plane3D< T > Class Template ReferenceMath » Physics Vectors. ; template<typename T = double>; class ROOT::Math::Impl::Plane3D< T >Class describing a geometrical plane in 3 dimensions. ; A Plane3D is a 2 dimensional surface spanned by two linearly independent vectors. The plane is described by the equation \( a*x + b*y + c*z + d = 0 \) where (a,b,c) are the components of the normal vector to the plane \( n = (a,b,c) \) and \( d = - n \dot x \), where x is any point belonging to plane. More information on the mathematics describing a plane in 3D is available on MathWord. The Plane3D class contains the 4 scalar values in T which represent the four coefficients, fA, fB, fC, fD. fA, fB, fC are the normal components normalized to 1, i.e. fA**2 + fB**2 + fC**2 = 1; See alsoOverview of the physics vector library ; Definition at line 53 of file Plane3D.h. Public Types; typedef PositionVector3D< Cartesian3D< T >, DefaultCoordinateSystemTag > Point;  ; typedef T Scalar;  ; typedef DisplacementVector3D< Cartesian3D< T >, DefaultCoordinateSystemTag > Vector;  . Public Member Functions;  Plane3D ();  default constructor create plane z = 0 ;  ; template<class T1 , class T2 , class U > ;  Plane3D (const DisplacementVector3D< T1, U > &n, const PositionVector3D< T2, U > &p);  Construct from a generic DisplacementVector3D (normal vector) and PositionVector3D (point coplanar to the plane) ;  ;  Plane3D (const Plane3D &)=default;  ;  Plane3D (const Point &p1, const Point &p2, const Point &p3);  constructor from three Cartesian point belonging to the plane ;  ; template<class T1 , class T2 , class T3 , class U > ;  Plane3D (const PositionVector3D< T1, U > &p1, co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Impl_1_1Plane3D.html:95,Guid,Guide,95,doc/master/classROOT_1_1Math_1_1Impl_1_1Plane3D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Impl_1_1Plane3D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Impl::Transform3D< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::Impl::Transform3D< T > Class Template ReferenceMath » Physics Vectors. ; template<typename T = double>; class ROOT::Math::Impl::Transform3D< T >Basic 3D Transformation class describing a rotation and then a translation The internal data are a 3D rotation data (represented as a 3x3 matrix) and a 3D vector data. ; They are represented and held in this class like a 3x4 matrix (a simple array of 12 numbers).; The class can be constructed from any 3D rotation object (ROOT::Math::Rotation3D, ROOT::Math::AxisAngle, ROOT::Math::Quaternion, etc...) and/or a 3D Vector (ROOT::Math::DislacementVector3D or via ROOT::Math::Translation ) representing a Translation. The Transformation is defined by applying first the rotation and then the translation. A transformation defined by applying first a translation and then a rotation is equivalent to the transformation obtained applying first the rotation and then a translation equivalent to the rotated vector. The operator * can be used to obtain directly such transformations, in addition to combine various transformations. Keep in mind that the operator * (like in the case of rotations ) is not commutative. The operator * is used (in addition to operator() ) to apply a transformations on the vector (DisplacementVector3D and LorentzVector classes) and point (PositionVector3D) classes. In the case of Vector objects the transformation only rotates them and does not translate them. Only Point objects are able to be both rotated and translated.; See alsoOverview of the physics vector library ; Definition at line 80 of file Transform3D.h. Public Types; enum  ETransform3DMatrixIndex { ;   kXX = 0; , kXY = 1; , kXZ = 2; , kDX = 3; , ;   kYX = 4; , k",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Impl_1_1Transform3D.html:99,Guid,Guide,99,doc/master/classROOT_1_1Math_1_1Impl_1_1Transform3D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Impl_1_1Transform3D.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: ROOT::Math::Impl::Translation3D< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::Impl::Translation3D< T > Class Template ReferenceMath » Physics Vectors. ; template<typename T = double>; class ROOT::Math::Impl::Translation3D< T >Class describing a 3 dimensional translation. ; It can be combined (using the operator *) with the ROOT::Math::Rotation3D classes and ROOT::Math::Transform3D to obtained combined transformations and to operate on points and vectors. Note that a the translation applied to a Vector object (DisplacementVector3D and LorentzVector classes) performs a noop, i.e. it returns the same vector. A translation can be applied only to the Point objects (PositionVector3D classes).; See alsoOverview of the physics vector library ; Definition at line 53 of file Translation3D.h. Public Types; typedef T Scalar;  ; typedef DisplacementVector3D< Cartesian3D< T >, DefaultCoordinateSystemTag > Vector;  . Public Member Functions;  Translation3D ();  Default constructor ( zero translation ) ;  ; template<class CoordSystem , class Tag > ; constexpr Translation3D (const DisplacementVector3D< CoordSystem, Tag > &v);  Construct from any Displacement vector in ant tag and coordinate system. ;  ; template<class CoordSystem , class Tag > ;  Translation3D (const PositionVector3D< CoordSystem, Tag > &p1, const PositionVector3D< CoordSystem, Tag > &p2);  Construct transformation from one coordinate system defined one point (the origin) to a new coordinate system defined by other point (origin ) ;  ; template<class IT > ;  Translation3D (IT begin, IT end);  Construct given a pair of pointers or iterators defining the beginning and end of an array of 3 Scalars representing the z,y,z of the translation vector. ;  ;  Translation3D (T dx, T dy, T dz);  Construct from x,y,z values representing ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Impl_1_1Translation3D.html:101,Guid,Guide,101,doc/master/classROOT_1_1Math_1_1Impl_1_1Translation3D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Impl_1_1Translation3D.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::IntegMultiDim Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Variables ; ROOT::Math::IntegMultiDim Namespace Reference. Variables; static double gDefaultAbsTolerance = 0.0;  ; static int gDefaultIntegrator = IntegrationMultiDim::kADAPTIVE;  ; static unsigned int gDefaultNCalls = 100000;  ; static double gDefaultRelTolerance = 1.E-09;  ; static unsigned int gDefaultWKSize = 100000;  . Variable Documentation. ◆ gDefaultAbsTolerance. double ROOT::Math::IntegMultiDim::gDefaultAbsTolerance = 0.0. static . Definition at line 52 of file IntegratorOptions.cxx. ◆ gDefaultIntegrator. int ROOT::Math::IntegMultiDim::gDefaultIntegrator = IntegrationMultiDim::kADAPTIVE. static . Definition at line 49 of file IntegratorOptions.cxx. ◆ gDefaultNCalls. unsigned int ROOT::Math::IntegMultiDim::gDefaultNCalls = 100000. static . Definition at line 55 of file IntegratorOptions.cxx. ◆ gDefaultRelTolerance. double ROOT::Math::IntegMultiDim::gDefaultRelTolerance = 1.E-09. static . Definition at line 53 of file IntegratorOptions.cxx. ◆ gDefaultWKSize. unsigned int ROOT::Math::IntegMultiDim::gDefaultWKSize = 100000. static . Definition at line 54 of file IntegratorOptions.cxx. ROOTMathIntegMultiDim. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1IntegMultiDim.html:85,Guid,Guide,85,doc/master/namespaceROOT_1_1Math_1_1IntegMultiDim.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1IntegMultiDim.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::IntegOneDim Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Variables ; ROOT::Math::IntegOneDim Namespace Reference. Variables; static double gDefaultAbsTolerance = 1.E-09;  ; static int gDefaultIntegrator = IntegrationOneDim::kGAUSS;  ; static unsigned int gDefaultNPoints = gDefaultNPointsGSLAdaptive;  ; static unsigned int gDefaultNPointsGSLAdaptive = 3;  ; static unsigned int gDefaultNPointsLegendre = 10;  ; static double gDefaultRelTolerance = 1.E-09;  ; static unsigned int gDefaultWKSize = 1000;  . Variable Documentation. ◆ gDefaultAbsTolerance. double ROOT::Math::IntegOneDim::gDefaultAbsTolerance = 1.E-09. static . Definition at line 37 of file IntegratorOptions.cxx. ◆ gDefaultIntegrator. int ROOT::Math::IntegOneDim::gDefaultIntegrator = IntegrationOneDim::kGAUSS. static . Definition at line 35 of file IntegratorOptions.cxx. ◆ gDefaultNPoints. unsigned int ROOT::Math::IntegOneDim::gDefaultNPoints = gDefaultNPointsGSLAdaptive. static . Definition at line 42 of file IntegratorOptions.cxx. ◆ gDefaultNPointsGSLAdaptive. unsigned int ROOT::Math::IntegOneDim::gDefaultNPointsGSLAdaptive = 3. static . Definition at line 41 of file IntegratorOptions.cxx. ◆ gDefaultNPointsLegendre. unsigned int ROOT::Math::IntegOneDim::gDefaultNPointsLegendre = 10. static . Definition at line 40 of file IntegratorOptions.cxx. ◆ gDefaultRelTolerance. double ROOT::Math::IntegOneDim::gDefaultRelTolerance = 1.E-09. static . Definition at line 38 of file IntegratorOptions.cxx. ◆ gDefaultWKSize. unsigned int ROOT::Math::IntegOneDim::gDefaultWKSize = 1000. static . Definition at line 39 of file IntegratorOptions.cxx. ROOTMathIntegOneDim. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1IntegOneDim.html:83,Guid,Guide,83,doc/master/namespaceROOT_1_1Math_1_1IntegOneDim.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1IntegOneDim.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::IntegOptionsUtil Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Functions ; ROOT::Math::IntegOptionsUtil Namespace Reference. Classes; struct  OptionTrait;  ; struct  OptionTrait< IntegratorMultiDimOptions >;  ; struct  OptionTrait< IntegratorOneDimOptions >;  . Functions; template<class OptionType > ; void Print (std::ostream &os, const OptionType &opt);  ; template<class OptionType > ; void PrintDefault (const char *name, std::ostream &os);  print default options ;  . Function Documentation. ◆ Print(). template<class OptionType > . void ROOT::Math::IntegOptionsUtil::Print ; (; std::ostream & ; os, . const OptionType & ; opt . ). Definition at line 91 of file IntegratorOptions.cxx. ◆ PrintDefault(). template<class OptionType > . void ROOT::Math::IntegOptionsUtil::PrintDefault ; (; const char * ; name, . std::ostream & ; os . ). print default options ; Definition at line 108 of file IntegratorOptions.cxx. ROOTMathIntegOptionsUtil. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1IntegOptionsUtil.html:88,Guid,Guide,88,doc/master/namespaceROOT_1_1Math_1_1IntegOptionsUtil.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1IntegOptionsUtil.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::IntegrandTransform Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::IntegrandTransform Class Reference. ; Auxiliary inner class for mapping infinite and semi-infinite integrals. ; Definition at line 234 of file GaussIntegrator.h. Public Types; enum  ESemiInfinitySign { kMinus = -1; , kPlus = +1; };  ;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . Public Member Functions;  IntegrandTransform (const double boundary, ESemiInfinitySign sign, const IGenFunction *integrand);  ;  IntegrandTransform (const IGenFunction *integrand);  ; IGenFunction * Clone () const override;  Clone a function. ;  ; double DoEval (double x) const override;  implementation of the evaluation function. Must be implemented by derived classes ;  ; double operator() (double x) const;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  . Private Member Functions; double DoEval (double x, double boundary, int sign) const;  . Private Attributes; double fBoundary;  ; bool fInfiniteInterval;  ; const IGenFunction * fIntegrand;  ; ESemiInfinitySign fSign;  . #include <Math/GaussIntegrator.h>. Inheritance diagram for ROOT::Math::IntegrandTransform:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ESemiInfinitySign. enum ROOT::Math::IntegrandTransform::ESemiInfinitySign. EnumeratorkMinus ; kPlus . Definition at line 236 of file GaussIntegrator.h. Constructor & Destructor Documentation. ◆ In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegrandTransform.html:86,Guid,Guide,86,doc/master/classROOT_1_1Math_1_1IntegrandTransform.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegrandTransform.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Integration Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Enumerations ; ROOT::Math::Integration Namespace Reference. Enumerations; enum  GKRule { ;   kGAUSS15 = 1; , kGAUSS21 = 2; , kGAUSS31 = 3; , kGAUSS41 = 4; , ;   kGAUSS51 = 5; , kGAUSS61 = 6. };  enumeration specifying the Gauss-KronRod integration rule for ADAPTIVE integration type More...;  . ROOTMathIntegration. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Integration.html:83,Guid,Guide,83,doc/master/namespaceROOT_1_1Math_1_1Integration.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Integration.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::IntegrationMultiDim Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Enumerations ; ROOT::Math::IntegrationMultiDim Namespace Reference. Enumerations; enum  Type { ;   kDEFAULT = -1; , kADAPTIVE; , kVEGAS; , kMISER; , ;   kPLAIN. };  enumeration specifying the integration types. More...;  . ROOTMathIntegrationMultiDim. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1IntegrationMultiDim.html:91,Guid,Guide,91,doc/master/namespaceROOT_1_1Math_1_1IntegrationMultiDim.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1IntegrationMultiDim.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::IntegrationOneDim Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Enumerations ; ROOT::Math::IntegrationOneDim Namespace Reference. Enumerations; enum  Type { ;   kDEFAULT = -1; , kGAUSS; , kLEGENDRE; , kADAPTIVE; , ;   kADAPTIVESINGULAR; , kNONADAPTIVE. };  enumeration specifying the integration types. More...;  . ROOTMathIntegrationOneDim. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1IntegrationOneDim.html:89,Guid,Guide,89,doc/master/namespaceROOT_1_1Math_1_1IntegrationOneDim.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1IntegrationOneDim.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::IntegratorMultiDim Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::IntegratorMultiDim Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; User class for performing multidimensional integration. ; By default uses adaptive multi-dimensional integration using the algorithm from Genz Mallik implemented in the class ROOT::Math::AdaptiveIntegratorMultiDim otherwise it can uses via the plug-in manager the MC integration class (ROOT::Math::GSLMCIntegration) from MathMore. ; Definition at line 47 of file IntegratorMultiDim.h. Public Types; typedef IntegrationMultiDim::Type Type;  . Public Member Functions;  IntegratorMultiDim (const IMultiGenFunction &f, IntegrationMultiDim::Type type=IntegrationMultiDim::kDEFAULT, double absTol=-1, double relTol=-1, unsigned int ncall=0);  Generic Constructor of multi dimensional Integrator passing a function. ;  ;  IntegratorMultiDim (IntegrationMultiDim::Type type=IntegrationMultiDim::kDEFAULT, double absTol=-1, double relTol=-1, unsigned int ncall=0);  Generic constructor of multi dimensional Integrator. ;  ; virtual ~IntegratorMultiDim ();  Template Constructor of multi dimensional Integrator passing a generic function. ;  ; double Error () const;  return integration error ;  ; VirtualIntegratorMultiDim * GetIntegrator ();  return a pointer to integrator object ;  ; double Integral (const double *xmin, const double *xmax);  evaluate the integral with the previously given function between xmin[] and xmax[] ;  ; double Integral (const IMultiGenFunction &f, const double *xmin, const double *xmax);  evaluate the integral passing a new function ;  ; template<class Function > ; double Integral (Function &f, unsigned in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html:86,Guid,Guide,86,doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::IntegratorMultiDimOptions Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; ROOT::Math::IntegratorMultiDimOptions Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; Numerical multi dimensional integration options. ; Definition at line 194 of file IntegratorOptions.h. Public Member Functions;  IntegratorMultiDimOptions (const IntegratorMultiDimOptions &rhs);  copy constructor ;  ;  IntegratorMultiDimOptions (IOptions *extraOpts=nullptr);  constructor using the default options can pass a pointer to extra options (N.B. ;  ;  ~IntegratorMultiDimOptions () override;  ; std::string Integrator () const override;  name of multi-dim integrator ;  ; IntegrationMultiDim::Type IntegratorType () const;  type of the integrator (return the enumeration type) ;  ; unsigned int NCalls () const;  maximum number of function calls ;  ; IntegratorMultiDimOptions & operator= (const IntegratorMultiDimOptions &rhs);  assignment operator ;  ; void Print (std::ostream &os=std::cout) const;  print all the options ;  ; void SetIntegrator (const char *name);  set multi-dim integrator name ;  ; void SetNCalls (unsigned int calls);  set maximum number of function calls ;  ;  Public Member Functions inherited from ROOT::Math::BaseIntegratorOptions;  BaseIntegratorOptions (const BaseIntegratorOptions &opt);  ; virtual ~BaseIntegratorOptions ();  protected constructor to avoid user creating this class ;  ; double AbsTolerance () const;  non-static methods for retrieving options ;  ; IOptions * ExtraOptions () const;  return extra options ;  ; BaseIntegratorOptions & operator= (const BaseIntegratorOptions &opt);  assignment operators ;  ; double RelTolerance () const;  absolute tolerance ;  ; void SetAbsTolerance (double tol);  non-static methods for setting options ;  ; void SetExtra,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDimOptions.html:93,Guid,Guide,93,doc/master/classROOT_1_1Math_1_1IntegratorMultiDimOptions.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDimOptions.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::IntegratorOneDim Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::IntegratorOneDim Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; User Class for performing numerical integration of a function in one dimension. ; It uses the plug-in manager to load advanced numerical integration algorithms from GSL, which reimplements the algorithms used in the QUADPACK, a numerical integration package written in Fortran.; Various types of adaptive and non-adaptive integration are supported. These include integration over infinite and semi-infinite ranges and singular integrals.; The integration type is selected using the Integration::type enumeration in the class constructor. The default type is adaptive integration with singularity (ADAPTIVESINGULAR or QAGS in the QUADPACK convention) applying a Gauss-Kronrod 21-point integration rule. In the case of ADAPTIVE type, the integration rule can also be specified via the Integration::GKRule. The default rule is 31 points.; In the case of integration over infinite and semi-infinite ranges, the type used is always ADAPTIVESINGULAR applying a transformation from the original interval into (0,1).; The ADAPTIVESINGULAR type is the most sophisticated type. When performances are important, it is then recommended to use the NONADAPTIVE type in case of smooth functions or ADAPTIVE with a lower Gauss-Kronrod rule.; For detailed description on GSL integration algorithms see the GSL Manual. ; Definition at line 98 of file Integrator.h. Public Types; typedef IntegrationOneDim::Type Type;  . Public Member Functions;  IntegratorOneDim (const IGenFunction &f, IntegrationOneDim::Type type=IntegrationOneDim::kDEFAULT, double ab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html:84,Guid,Guide,84,doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::IntegratorOneDimOptions Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; ROOT::Math::IntegratorOneDimOptions Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; Numerical one dimensional integration options. ; Definition at line 113 of file IntegratorOptions.h. Public Member Functions;  IntegratorOneDimOptions (const IntegratorOneDimOptions &rhs);  copy constructor ;  ;  IntegratorOneDimOptions (IOptions *extraOpts=nullptr);  constructor using the default options can pass a pointer to extra options (N.B. ;  ;  ~IntegratorOneDimOptions () override;  ; std::string Integrator () const override;  name of 1D integrator ;  ; IntegrationOneDim::Type IntegratorType () const;  type of the integrator (return the enumeration type) ;  ; unsigned int NPoints () const;  Number of points used by current integration rule. ;  ; IntegratorOneDimOptions & operator= (const IntegratorOneDimOptions &rhs);  assignment operator ;  ; void Print (std::ostream &os=std::cout) const;  print all the options ;  ; void SetIntegrator (const char *name);  set 1D integrator name ;  ; void SetNPoints (unsigned int n);  Set number of points for active integration rule. ;  ;  Public Member Functions inherited from ROOT::Math::BaseIntegratorOptions;  BaseIntegratorOptions (const BaseIntegratorOptions &opt);  ; virtual ~BaseIntegratorOptions ();  protected constructor to avoid user creating this class ;  ; double AbsTolerance () const;  non-static methods for retrieving options ;  ; IOptions * ExtraOptions () const;  return extra options ;  ; BaseIntegratorOptions & operator= (const BaseIntegratorOptions &opt);  assignment operators ;  ; double RelTolerance () const;  absolute tolerance ;  ; void SetAbsTolerance (double tol);  non-static methods for setting options ;  ; void SetExtraOptio,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorOneDimOptions.html:91,Guid,Guide,91,doc/master/classROOT_1_1Math_1_1IntegratorOneDimOptions.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorOneDimOptions.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::Internal Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; ROOT::Math::Internal Namespace Reference. Functions; TF1 * CopyTF1Ptr (const TF1 *funcToCopy);  ; double DerivPrecision (double eps);  . Function Documentation. ◆ CopyTF1Ptr(). TF1 * ROOT::Math::Internal::CopyTF1Ptr ; (; const TF1 * ; funcToCopy). Definition at line 33 of file WrappedTF1.cxx. ◆ DerivPrecision(). double ROOT::Math::Internal::DerivPrecision ; (; double ; eps). Definition at line 25 of file WrappedTF1.cxx. ROOTMathInternal. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Internal.html:80,Guid,Guide,80,doc/master/namespaceROOT_1_1Math_1_1Internal.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Internal.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Interpolation Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Enumerations ; ROOT::Math::Interpolation Namespace Reference. Enumerations; enum  Type { ;   kLINEAR; , kPOLYNOMIAL; , kCSPLINE; , kCSPLINE_PERIODIC; , ;   kAKIMA; , kAKIMA_PERIODIC. };  Enumeration defining the types of interpolation methods availables. More...;  . ROOTMathInterpolation. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Interpolation.html:85,Guid,Guide,85,doc/master/namespaceROOT_1_1Math_1_1Interpolation.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Interpolation.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Interpolator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::Interpolator Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Interpolation Classes. ; Class for performing function interpolation of points. ; The class is instantiated with an interpolation methods, passed as an enumeration in the constructor. See Interpolation::Type for the available interpolation algorithms, which are implemented using GSL. See also the <A HREF=http://www.gnu.org/software/gsl/manual/html_node/Interpolation.html"">GSL manual for more information. The class provides additional methods for computing derivatives and integrals of interpolating functions.; This class does not support copying. ; Definition at line 66 of file Interpolator.h. Public Member Functions;  Interpolator (const Interpolator &)=delete;  ;  Interpolator (const std::vector< double > &x, const std::vector< double > &y, Interpolation::Type type=Interpolation::kCSPLINE);  Constructs an interpolator class from vector of data points \( (x_i, y_i )\) and with Interpolation::Type type. ;  ;  Interpolator (Interpolator &&)=delete;  ;  Interpolator (unsigned int ndata=0, Interpolation::Type type=Interpolation::kCSPLINE);  Constructs an interpolator class from number of data points and with Interpolation::Type type. ;  ; virtual ~Interpolator ();  ; double Deriv (double x) const;  Return the derivative of the interpolated function at point x. ;  ; double Deriv2 (double x) const;  Return the second derivative of the interpolated function at point x. ;  ; double Eval (double x) const;  Return the interpolated value at point x. ;  ; double Integ (double a, double b) const;  Return the Integral of the interpolated function over the range [a,b]. ;  ; Interpolator & operator= (const Interpolator &)=delete;  ; Interpolator & operator= (Interp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Interpolator.html:80,Guid,Guide,80,doc/master/classROOT_1_1Math_1_1Interpolator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Interpolator.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Inverter< 0 > Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::Inverter< 0 > Class Reference. ; Inverter<0>. ; In case of zero order, do nothing.; AuthorT. Glebe ; Definition at line 167 of file Dinv.h. Static Public Member Functions; template<class MatrixRep > ; static bool Dinv (MatrixRep &);  . #include <Math/Dinv.h>; Member Function Documentation. ◆ Dinv(). template<class MatrixRep > . static bool ROOT::Math::Inverter< 0 >::Dinv ; (; MatrixRep & ; ). inlinestatic . Definition at line 171 of file Dinv.h. The documentation for this class was generated from the following file:; math/smatrix/inc/Math/Dinv.h. ROOTMathInverter< 0 >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Inverter_3_010_01_4.html:81,Guid,Guide,81,doc/master/classROOT_1_1Math_1_1Inverter_3_010_01_4.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Inverter_3_010_01_4.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::Inverter< 1 > Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::Inverter< 1 > Class Reference. ; 1x1 matrix inversion \(a_{11} \to 1/a_{11}\) ; AuthorT. Glebe ; Definition at line 184 of file Dinv.h. Static Public Member Functions; template<class MatrixRep > ; static bool Dinv (MatrixRep &rhs);  . #include <Math/Dinv.h>; Member Function Documentation. ◆ Dinv(). template<class MatrixRep > . static bool ROOT::Math::Inverter< 1 >::Dinv ; (; MatrixRep & ; rhs). inlinestatic . Definition at line 188 of file Dinv.h. The documentation for this class was generated from the following file:; math/smatrix/inc/Math/Dinv.h. ROOTMathInverter< 1 >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Inverter_3_011_01_4.html:81,Guid,Guide,81,doc/master/classROOT_1_1Math_1_1Inverter_3_011_01_4.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Inverter_3_011_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Inverter< 2 > Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::Inverter< 2 > Class Reference. ; 2x2 matrix inversion using Cramers rule. ; AuthorT. Glebe ; Definition at line 209 of file Dinv.h. Static Public Member Functions; template<class T > ; static bool Dinv (MatRepSym< T, 2 > &rep);  ; template<class MatrixRep > ; static bool Dinv (MatrixRep &rhs);  . #include <Math/Dinv.h>; Member Function Documentation. ◆ Dinv() [1/2]. template<class T > . static bool ROOT::Math::Inverter< 2 >::Dinv ; (; MatRepSym< T, 2 > & ; rep). inlinestatic . Definition at line 236 of file Dinv.h. ◆ Dinv() [2/2]. template<class MatrixRep > . static bool ROOT::Math::Inverter< 2 >::Dinv ; (; MatrixRep & ; rhs). inlinestatic . Definition at line 213 of file Dinv.h. The documentation for this class was generated from the following file:; math/smatrix/inc/Math/Dinv.h. ROOTMathInverter< 2 >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Inverter_3_012_01_4.html:81,Guid,Guide,81,doc/master/classROOT_1_1Math_1_1Inverter_3_012_01_4.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Inverter_3_012_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Inverter< idim, n > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::Inverter< idim, n > Class Template Reference. ; template<unsigned int idim, unsigned int n = idim>; class ROOT::Math::Inverter< idim, n >Matrix Inverter class Class to specialize calls to Dinv. ; Dinv computes the inverse of a square matrix if dimension idim and order n. The content of the matrix will be replaced by its inverse. In case the inversion fails, the matrix content is destroyed. Invert specializes Dinv by the matrix order. E.g. if the order of the matrix is two, the routine Inverter<2> is called which implements Cramers rule.; AuthorT. Glebe ; Definition at line 69 of file Dinv.h. Static Public Member Functions; template<class T > ; static int DfactMatrix (MatRepStd< T, idim, n > &rhs, T &det, unsigned int *work);  LU Factorization method for inversion of general square matrices (see implementation in Math/MatrixInversion.icc) ;  ; template<class T > ; static int DfinvMatrix (MatRepStd< T, idim, n > &rhs, unsigned int *work);  LU inversion of general square matrices. ;  ; template<class T > ; static bool Dinv (MatRepSym< T, idim > &rhs);  symmetric matrix inversion using Bunch-kaufman pivoting method implementation in Math/MatrixInversion.icc ;  ; template<class MatrixRep > ; static bool Dinv (MatrixRep &rhs);  matrix inversion for a generic square matrix using LU factorization (code originally from CERNLIB and then ported in C++ for CLHEP) implementation is in file Math/MatrixInversion.icc ;  ; template<class T > ; static void InvertBunchKaufman (MatRepSym< T, idim > &rhs, int &ifail);  Bunch-Kaufman method for inversion of symmetric matrices. ;  . #include <Math/Dinv.h>; Member Function Documentation. ◆ DfactMatrix(). template<unsigned int idim, unsigned int n> . template<class T > . int ROOT::Math::Inverter< idim, n >::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Inverter.html:96,Guid,Guide,96,doc/master/classROOT_1_1Math_1_1Inverter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Inverter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::KDTree< _DataPoint > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::KDTree< _DataPoint > Class Template Reference. ; template<class _DataPoint>; class ROOT::Math::KDTree< _DataPoint >; Definition at line 35 of file KDTree.h. Classes; class  BaseNode;  ; class  BinNode;  ; class  ComparePoints;  ; class  Cut;  ; class  HeadNode;  ; class  iterator;  ; class  SplitNode;  ; class  TerminalNode;  . Public Types; typedef BinNode Bin;  ; enum  eSplitOption { kEffective = 0; , kBinContent; };  ; typedef _DataPoint point_type;  ; typedef _DataPoint::value_type value_type;  . Public Member Functions;  KDTree (UInt_t iBucketSize);  ;  ~KDTree ();  ; void EmptyBins ();  ; iterator End ();  ; const iterator End () const;  ; const Bin * FindBin (const point_type &rPoint) const;  ; iterator First ();  ; const iterator First () const;  ; void Freeze ();  ; Double_t GetBucketSize () const;  ; void GetClosestPoints (const point_type &rRef, UInt_t nPoints, std::vector< std::pair< const _DataPoint *, Double_t > > &vFoundPoints) const;  ; Double_t GetEffectiveEntries () const;  ; UInt_t GetEntries () const;  ; KDTree< _DataPoint > * GetFrozenCopy ();  ; UInt_t GetNBins () const;  ; void GetPointsWithinDist (const point_type &rRef, value_type fDist, std::vector< const point_type * > &vFoundPoints) const;  ; Double_t GetTotalSumw () const;  ; Double_t GetTotalSumw2 () const;  ; Bool_t Insert (const point_type &rData);  ; Bool_t IsFrozen () const;  ; iterator Last ();  ; const iterator Last () const;  ; void Print ();  ; void Reset ();  ; void SetOwner (Bool_t bIsOwner=true);  ; void SetSplitOption (eSplitOption opt);  . Static Public Member Functions; static UInt_t Dimension ();  . Private Member Functions;  KDTree ();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1KDTree.html:97,Guid,Guide,97,doc/master/classROOT_1_1Math_1_1KDTree.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1KDTree.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::KahanSum< T, N > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::KahanSum< T, N > Class Template Reference. ; template<typename T = double, unsigned int N = 1>; class ROOT::Math::KahanSum< T, N >The Kahan summation is a compensated summation algorithm, which significantly reduces numerical errors when adding a sequence of finite-precision floating point numbers. ; This is done by keeping a separate running compensation (a variable to accumulate small errors). Auto-vectorisable accumulation; This class can internally use multiple accumulators (template parameter N). When filled from a collection that supports index access from a contiguous block of memory, compilers such as gcc, clang and icc can auto-vectorise the accumulation. This happens by cycling through the internal accumulators based on the value of ""`index % N`"", so N accumulators can be filled from a block of N numbers in a single instruction.; The usage of multiple accumulators might slightly increase the precision in comparison to the single-accumulator version with N = 1. This depends on the order and magnitude of the numbers being accumulated. Therefore, in rare cases, the accumulation result can change in dependence of N, even when the data are identical. The magnitude of such differences is well below the precision of the floating point type, and will therefore mostly show in the compensation sum(see Carry()). Increasing the number of accumulators therefore only makes sense to speed up the accumulation, but not to increase precision.; Parameters. TThe type of the values to be accumulated. ; NNumber of accumulators. Defaults to 1. Ideal values are the widths of a vector register on the relevant architecture. Depending on the instruction set, good values are:; AVX2-float: 8; AVX2-double: 4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1KahanSum.html:93,Guid,Guide,93,doc/master/classROOT_1_1Math_1_1KahanSum.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1KahanSum.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::LCGEngine Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::LCGEngine Class Reference. . Definition at line 33 of file LCGEngine.h. Public Types; typedef TRandomEngine BaseType;  ; typedef uint32_t Result_t;  ; typedef uint32_t StateInt_t;  . Public Member Functions;  LCGEngine ();  ;  ~LCGEngine () override;  ; uint32_t IntRndm ();  ; double operator() ();  ; double Rndm () override;  ; void SetSeed (uint32_t seed);  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static unsigned int MaxInt ();  maximum integer that can be generated ;  ; static unsigned int MinInt ();  minimum integer that can be generated ;  ; static std::string Name ();  Name of the generator. ;  ; static int Size ();  Size of the generator state. ;  . Protected Member Functions; int Counter () const;  ; void GetState (std::vector< uint32_t > &state);  ; void SetState (const std::vector< uint32_t > &state);  . Private Member Functions; double Rndm_impl ();  . Private Attributes; uint32_t fSeed;  . #include <Math/LCGEngine.h>. Inheritance diagram for ROOT::Math::LCGEngine:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ BaseType. typedef TRandomEngine ROOT::Math::LCGEngine::BaseType. Definition at line 38 of file LCGEngine.h. ◆ Result_t. typedef uint32_t ROOT::Math::LCGEngine::Result_t. Definition at line 39 of file LCGEngine.h. ◆ StateInt_t. typedef uint32_t ROOT::Math::LCGEngine::StateInt_t. Definition at line 40 of file LCGEngine.h. Constructor & Destructor Documentation. ◆ LCGEngine(). ROOT::Math::LCGEngine::LCGEngine ; (; ). inline . Definition at line 42 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1LCGEngine.html:77,Guid,Guide,77,doc/master/classROOT_1_1Math_1_1LCGEngine.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1LCGEngine.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::LSResidualFunc< Func > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::LSResidualFunc< Func > Class Template ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; template<class Func>; class ROOT::Math::LSResidualFunc< Func >LSResidualFunc class description. ; Internal class used for accessing the residuals of the Least Square function and their derivatives which are estimated numerically using GSL numerical derivation. The class contains a pointer to the fit method function and an index specifying the i-th residual and wraps it in a multi-dim gradient function interface ROOT::Math::IGradientFunctionMultiDim. The class is used by ROOT::Math::GSLNLSMinimizer (GSL non linear least square fitter) ; Definition at line 135 of file GSLNLSMinimizer.cxx. Public Member Functions;  LSResidualFunc ();  ;  LSResidualFunc (const Func &func, unsigned int i);  ;  LSResidualFunc (const LSResidualFunc< Func > &rhs);  ; IMultiGenFunction * Clone () const override;  Clone a function. ;  ; void FdF (const double *x, double &f, double *g) const override;  ; void Gradient (const double *x, double *g) const override;  ; unsigned int NDim () const override;  Retrieve the dimension of the function. ;  ; LSResidualFunc< Func > & operator= (const LSResidualFunc< Func > &rhs);  ;  Public Member Functions inherited from ROOT::Math::IGradientFunctionMultiDimTempl< T >; T Derivative (const T *x, unsigned int icoord, T *previous_grad, T *previous_g2, T *previous_gstep) const;  In some cases, the derivative algorithm will use information from the previous step, these can be passed in with this overload. ;  ; T Derivative (const T *x, unsigned int icoord=0) const;  Return the partial derivative with respect to the passed coordinate. ;  ; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1LSResidualFunc.html:99,Guid,Guide,99,doc/master/classROOT_1_1Math_1_1LSResidualFunc.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1LSResidualFunc.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::LocalCoordinateSystemTag Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Math::LocalCoordinateSystemTag Class ReferenceMath » Physics Vectors. ; Tag for identifying vectors based on a local coordinate system. ; See alsoOverview of the physics vector library ; Definition at line 59 of file CoordinateSystemTags.h. #include <Math/GenVector/CoordinateSystemTags.h>; The documentation for this class was generated from the following file:; math/genvector/inc/Math/GenVector/CoordinateSystemTags.h. ROOTMathLocalCoordinateSystemTag. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1LocalCoordinateSystemTag.html:92,Guid,Guide,92,doc/master/classROOT_1_1Math_1_1LocalCoordinateSystemTag.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1LocalCoordinateSystemTag.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::LorentzRotation Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::LorentzRotation Class ReferenceMath » Physics Vectors. ; Lorentz transformation class with the (4D) transformation represented by a 4x4 orthosymplectic matrix. ; See also Boost, BoostX, BoostY and BoostZ for classes representing specialized Lorentz transformations. Also, the 3-D rotation classes can be considered to be special Lorentz transformations which do not mix space and time components.; See alsoOverview of the physics vector library ; Definition at line 55 of file LorentzRotation.h. Public Types; enum  ELorentzRotationMatrixIndex { ;   kXX = 0; , kXY = 1; , kXZ = 2; , kXT = 3; , ;   kYX = 4; , kYY = 5; , kYZ = 6; , kYT = 7; , ;   kZX = 8; , kZY = 9; , kZZ = 10; , kZT = 11; , ;   kTX = 12; , kTY = 13; , kTZ = 14; , kTT = 15. };  ; typedef double Scalar;  . Public Member Functions;  LorentzRotation ();  Default constructor (identity transformation) ;  ;  LorentzRotation (AxisAngle const &a);  ;  LorentzRotation (Boost const &b);  Construct from a pure boost. ;  ;  LorentzRotation (BoostX const &bx);  ;  LorentzRotation (BoostY const &by);  ;  LorentzRotation (BoostZ const &bz);  ; template<class Foreign4Vector > ;  LorentzRotation (const Foreign4Vector &v1, const Foreign4Vector &v2, const Foreign4Vector &v3, const Foreign4Vector &v4);  Construct from four orthosymplectic vectors (which must have methods x(), y(), z() and t()) which will be used as the columns of the Lorentz rotation matrix. ;  ; template<class ForeignMatrix > ; constexpr LorentzRotation (const ForeignMatrix &m);  Construct from a linear algebra matrix of size at least 4x4, which must support operator()(i,j) to obtain elements (0,3) thru (3,3). ;  ;  LorentzRotation (EulerAngles const &e);  ; template<class IT > ;  LorentzRotation (IT begin, IT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1LorentzRotation.html:83,Guid,Guide,83,doc/master/classROOT_1_1Math_1_1LorentzRotation.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1LorentzRotation.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::LorentzVector< CoordSystem > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; ROOT::Math::LorentzVector< CoordSystem > Class Template ReferenceMath » Physics Vectors. ; template<class CoordSystem>; class ROOT::Math::LorentzVector< CoordSystem >Class describing a generic LorentzVector in the 4D space-time, using the specified coordinate system for the spatial vector part. ; The metric used for the LorentzVector is (-,-,-,+). In the case of LorentzVector we don't distinguish the concepts of points and displacement vectors as in the 3D case, since the main use case for 4D Vectors is to describe the kinematics of relativistic particles. A LorentzVector behaves like a DisplacementVector in 4D. The Minkowski components could be viewed as v and t, or for kinematic 4-vectors, as p and E.; ROOT provides specialisations and aliases to them of the ROOT::Math::LorentzVector template:; ROOT::Math::PtEtaPhiMVector based on pt (rho),eta,phi and M (t) coordinates in double precision; ROOT::Math::PtEtaPhiEVector based on pt (rho),eta,phi and E (t) coordinates in double precision; ROOT::Math::PxPyPzMVector based on px,py,pz and M (mass) coordinates in double precision; ROOT::Math::PxPyPzEVector based on px,py,pz and E (energy) coordinates in double precision; ROOT::Math::XYZTVector based on x,y,z,t coordinates (cartesian) in double precision (same as PxPyPzEVector); ROOT::Math::XYZTVectorF based on x,y,z,t coordinates (cartesian) in float precision (same as PxPyPzEVector but float). See alsoOverview of the physics vector library ; Definition at line 59 of file LorentzVector.h. Public Types; typedef DisplacementVector3D< Cartesian3D< Scalar > > BetaVector;  ; typedef CoordSystem CoordinateType;  ; typedef CoordSystem::Scalar Scalar;  . Public Member Functions;  LorentzVect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1LorentzVector.html:105,Guid,Guide,105,doc/master/classROOT_1_1Math_1_1LorentzVector.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1LorentzVector.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::MCIntegration Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Enumerations ; ROOT::Math::MCIntegration Namespace Reference. Enumerations; enum  Mode { kIMPORTANCE; , kSTRATIFIED; , kIMPORTANCE_ONLY; };  . Enumeration Type Documentation. ◆ Mode. enum ROOT::Math::MCIntegration::Mode. EnumeratorkIMPORTANCE ; kSTRATIFIED ; kIMPORTANCE_ONLY . Definition at line 49 of file MCIntegrationTypes.h. ROOTMathMCIntegration. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1MCIntegration.html:85,Guid,Guide,85,doc/master/namespaceROOT_1_1Math_1_1MCIntegration.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1MCIntegration.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::MatRepStd< T, D1, D2 > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::MatRepStd< T, D1, D2 > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class T, unsigned int D1, unsigned int D2 = D1>; class ROOT::Math::MatRepStd< T, D1, D2 >Expression wrapper class for Matrix objects. ; Definition at line 54 of file MatrixRepresentationsStatic.h. Public Types; enum  { kRows = D1; , kCols = D2; , kSize = D1*D2; };  ; typedef T value_type;  . Public Member Functions; T apply (unsigned int i) const;  ; T * Array ();  ; const T * Array () const;  ; T & operator() (unsigned int i, unsigned int j);  ; const T & operator() (unsigned int i, unsigned int j) const;  ; template<class R > ; MatRepStd< T, D1, D2 > & operator+= (const R &rhs);  ; template<class R > ; MatRepStd< T, D1, D2 > & operator-= (const R &rhs);  ; template<class R > ; MatRepStd< T, D1, D2 > & operator= (const R &rhs);  ; template<class R > ; bool operator== (const R &rhs) const;  ; T & operator[] (unsigned int i);  ; const T & operator[] (unsigned int i) const;  . Private Attributes; T fArray [kSize];  . #include <Math/MatrixRepresentationsStatic.h>; Member Typedef Documentation. ◆ value_type. template<class T , unsigned int D1, unsigned int D2 = D1> . typedef T ROOT::Math::MatRepStd< T, D1, D2 >::value_type. Definition at line 58 of file MatrixRepresentationsStatic.h. Member Enumeration Documentation. ◆ anonymous enum. template<class T , unsigned int D1, unsigned int D2 = D1> . anonymous enum. EnumeratorkRows return no. of matrix rows . kCols return no. of matrix columns . kSize return no of elements: rows*columns . Definition at line 103 of file MatrixRepresentationsStatic.h. Member Function Documentation. ◆ apply(). template<class T , unsigned int D1, unsigned int D2 = D1> . T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MatRepStd.html:99,Guid,Guide,99,doc/master/classROOT_1_1Math_1_1MatRepStd.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MatRepStd.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::MatRepSym< T, D > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::MatRepSym< T, D > Class Template ReferenceMath » SMatrix Package » SMatrix Storage Representation. ; template<class T, unsigned int D>; class ROOT::Math::MatRepSym< T, D >MatRepSym Matrix storage representation for a symmetric matrix of dimension NxN This class is a template on the contained type and on the symmetric matrix size, N. ; It has as data member an array of type T of size N*(N+1)/2, containing the lower diagonal block of the matrix. The order follows the lower diagonal block, still in a row-major convention. For example for a symmetric 3x3 matrix the order of the 6 elements \( \left[a_0,a_1.....a_5 \right]\) is: ; \[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_3 \\; a_1 & a_2 & a_4 \\; a_3 & a_4 & a_5 \end{array} \right); \]. Definition at line 213 of file MatrixRepresentationsStatic.h. Public Types; enum  { kRows = D; , kCols = D; , kSize = D*(D+1)/2; };  ; typedef T value_type;  . Public Member Functions;  MatRepSym ();  ; T apply (unsigned int i) const;  ; T * Array ();  ; const T * Array () const;  ; T & operator() (unsigned int i, unsigned int j);  ; T const & operator() (unsigned int i, unsigned int j) const;  ; MatRepSym< T, D > & operator+= (const MatRepSym &rhs);  ; template<class R > ; MatRepSym< T, D > & operator+= (const R &);  self addition : only symmetric to symmetric allowed ;  ; MatRepSym< T, D > & operator-= (const MatRepSym &rhs);  ; template<class R > ; MatRepSym< T, D > & operator-= (const R &);  self subtraction : only symmetric to symmetric allowed ;  ; MatRepSym< T, D > & operator= (const MatRepSym &rhs);  ; template<class R > ; MatRepSym< T, D > & operator= (const R &);  assignment : only symmetric to symmetric allowed ;  ; template<c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MatRepSym.html:94,Guid,Guide,94,doc/master/classROOT_1_1Math_1_1MatRepSym.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MatRepSym.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::MathMoreLib Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::MathMoreLib Class Reference. . Definition at line 60 of file PdfFuncMathMore.h. Static Public Member Functions; static void Load ();  . #include <Math/PdfFuncMathMore.h>; Member Function Documentation. ◆ Load(). void ROOT::Math::MathMoreLib::Load ; (; ). static . Definition at line 73 of file PdfFuncMathMore.cxx. The documentation for this class was generated from the following files:; math/mathmore/inc/Math/PdfFuncMathMore.h; math/mathmore/src/PdfFuncMathMore.cxx. ROOTMathMathMoreLib. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MathMoreLib.html:79,Guid,Guide,79,doc/master/classROOT_1_1Math_1_1MathMoreLib.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MathMoreLib.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::MatrixMulOp< MatrixA, MatrixB, T, D > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Math::MatrixMulOp< MatrixA, MatrixB, T, D > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class MatrixA, class MatrixB, class T, unsigned int D>; class ROOT::Math::MatrixMulOp< MatrixA, MatrixB, T, D >Class for Matrix-Matrix multiplication. ; Definition at line 348 of file MatrixFunctions.h. Public Member Functions;  MatrixMulOp (const MatrixA &lhs, const MatrixB &rhs);  ;  ~MatrixMulOp ();  ; T apply (unsigned int i) const;  calc \(\sum_{j} a_{ik} * b_{kj}\) ;  ; bool IsInUse (const T *p) const;  ; T operator() (unsigned int i, unsigned j) const;  . Protected Attributes; const MatrixA & lhs_;  ; const MatrixB & rhs_;  . #include <Math/MatrixFunctions.h>; Constructor & Destructor Documentation. ◆ MatrixMulOp(). template<class MatrixA , class MatrixB , class T , unsigned int D> . ROOT::Math::MatrixMulOp< MatrixA, MatrixB, T, D >::MatrixMulOp ; (; const MatrixA & ; lhs, . const MatrixB & ; rhs . ). inline . Definition at line 351 of file MatrixFunctions.h. ◆ ~MatrixMulOp(). template<class MatrixA , class MatrixB , class T , unsigned int D> . ROOT::Math::MatrixMulOp< MatrixA, MatrixB, T, D >::~MatrixMulOp ; (; ). inline . Definition at line 355 of file MatrixFunctions.h. Member Function Documentation. ◆ apply(). template<class MatrixA , class MatrixB , class T , unsigned int D> . T ROOT::Math::MatrixMulOp< MatrixA, MatrixB, T, D >::apply ; (; unsigned int ; i); const. inline . calc \(\sum_{j} a_{ik} * b_{kj}\) ; Definition at line 358 of file MatrixFunctions.h. ◆ IsInUse(). template<class MatrixA , class MatrixB , class T , unsigned int D> . bool ROOT::Math::MatrixMulOp< MatrixA, MatrixB, T, D >::IsInUse ; (; const T * ; p); const. inline . Definition at line 366 of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MatrixMulOp.html:114,Guid,Guide,114,doc/master/classROOT_1_1Math_1_1MatrixMulOp.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MatrixMulOp.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::MersenneTwisterEngine Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::MersenneTwisterEngine Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Random number generator class based on M. ; Matsumoto and T. Nishimura, Mersenne Twister: A 623-dimensionally equidistributed uniform pseudorandom number generator ACM Transactions on Modeling and Computer Simulation, Vol. 8, No. 1, January 1998, pp 3–30.; For more information see the Mersenne Twister homepage [http://www.math.keio.ac.jp/~matumoto/emt.html]; Advantage:. large period 2**19937 -1; relatively fast (slightly slower than TRandom1 and TRandom2 but much faster than TRandom1). Note that this is a 32 bit implementation. Only 32 bits of the returned double numbers are random. in case more precision is needed, one should use an engine providing at least 48 random bits.; Drawback: a relative large internal state of 624 integers ; Definition at line 50 of file MersenneTwisterEngine.h. Public Types; typedef TRandomEngine BaseType;  ; typedef uint32_t Result_t;  ; typedef uint32_t StateInt_t;  . Public Member Functions;  MersenneTwisterEngine (uint32_t seed=4357);  ;  ~MersenneTwisterEngine () override;  ; uint32_t IntRndm ();  ; double operator() ();  ; double Rndm () override;  ; void SetSeed (Result_t seed);  set the seed x ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static unsigned int MaxInt ();  maximum integer that can be generated ;  ; static unsigned int MinInt ();  minimum integer that can be generated ;  ; static std::string Name ();  ; static int Size ();  . Protected Member Functions; int Counter ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MersenneTwisterEngine.html:89,Guid,Guide,89,doc/master/classROOT_1_1Math_1_1MersenneTwisterEngine.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MersenneTwisterEngine.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::MinOp< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::MinOp< T > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class T>; class ROOT::Math::MinOp< T >Subtraction Operation Class. ; Definition at line 287 of file BinaryOperators.h. Static Public Member Functions; static T apply (const T &lhs, const T &rhs);  . #include <Math/BinaryOperators.h>; Member Function Documentation. ◆ apply(). template<class T > . static T ROOT::Math::MinOp< T >::apply ; (; const T & ; lhs, . const T & ; rhs . ). inlinestatic . Definition at line 289 of file BinaryOperators.h. The documentation for this class was generated from the following file:; math/smatrix/inc/Math/BinaryOperators.h. ROOTMathMinOp. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MinOp.html:87,Guid,Guide,87,doc/master/classROOT_1_1Math_1_1MinOp.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MinOp.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Minim Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Variables ; ROOT::Math::Minim Namespace Reference. Variables; static double gDefaultErrorDef = 1.;  ; static IOptions * gDefaultExtraOptions = nullptr;  ; static int gDefaultMaxCalls = 0;  ; static int gDefaultMaxIter = 0;  ; static std::string gDefaultMinimAlgo = ""Migrad"";  ; static std::string gDefaultMinimizer;  ; static double gDefaultPrecision = -1;  ; static int gDefaultPrintLevel = 0;  ; static int gDefaultStrategy = 1;  ; static double gDefaultTolerance = 1.E-2;  . Variable Documentation. ◆ gDefaultErrorDef. double ROOT::Math::Minim::gDefaultErrorDef = 1. static . Definition at line 32 of file MinimizerOptions.cxx. ◆ gDefaultExtraOptions. IOptions* ROOT::Math::Minim::gDefaultExtraOptions = nullptr. static . Definition at line 39 of file MinimizerOptions.cxx. ◆ gDefaultMaxCalls. int ROOT::Math::Minim::gDefaultMaxCalls = 0. static . Definition at line 35 of file MinimizerOptions.cxx. ◆ gDefaultMaxIter. int ROOT::Math::Minim::gDefaultMaxIter = 0. static . Definition at line 36 of file MinimizerOptions.cxx. ◆ gDefaultMinimAlgo. std::string ROOT::Math::Minim::gDefaultMinimAlgo = ""Migrad"". static . Definition at line 31 of file MinimizerOptions.cxx. ◆ gDefaultMinimizer. std::string ROOT::Math::Minim::gDefaultMinimizer. static . Definition at line 30 of file MinimizerOptions.cxx. ◆ gDefaultPrecision. double ROOT::Math::Minim::gDefaultPrecision = -1. static . Definition at line 34 of file MinimizerOptions.cxx. ◆ gDefaultPrintLevel. int ROOT::Math::Minim::gDefaultPrintLevel = 0. static . Definition at line 38 of file MinimizerOptions.cxx. ◆ gDefaultStrategy. int ROOT::Math::Minim::gDefaultStrategy = 1. static . Definition at line 37 of file MinimizerOptions.cxx. ◆ gDefaultTolerance. double ROOT::Math::Minim::gDefaultTolerance = 1.E-2. static . Definition at line 33 of file MinimizerOptions.cxx. ROOTMathMinim. ROOT master - Reference Guide Gen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Minim.html:77,Guid,Guide,77,doc/master/namespaceROOT_1_1Math_1_1Minim.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Minim.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Minim1D Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Enumerations ; ROOT::Math::Minim1D Namespace Reference. Enumerations; enum  Type { kGOLDENSECTION; , kBRENT; };  Enumeration with One Dimensional Minimizer Algorithms. More...;  . ROOTMathMinim1D. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Minim1D.html:79,Guid,Guide,79,doc/master/namespaceROOT_1_1Math_1_1Minim1D.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Minim1D.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::MinimTransformFunction Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::MinimTransformFunction Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; MinimTransformFunction class to perform a transformations on the variables to deal with fixed or limited variables (support both double and single bounds) The class manages the passed function pointer. ; Definition at line 41 of file MinimTransformFunction.h. Public Types; typedef ROOT::Math::IMultiGradFunction::BaseFunc BaseFunc;  ; typedef ROOT::Math::IMultiGradFunction BaseGradFunc;  ;  Public Types inherited from ROOT::Math::IGradientFunctionMultiDimTempl< T >; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  ; typedef IGradientFunctionMultiDimTempl< T > BaseGrad;  ;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . Public Member Functions;  MinimTransformFunction (const IMultiGradFunction *f, const std::vector< ROOT::Math::EMinimVariableType > &types, const std::vector< double > &values, const std::map< unsigned int, std::pair< double, double > > &bounds);  Constructor from a IMultiGradFunction interface that is externally managed vector specifying the variable types (free, bounded or fixed, defined in enum EMinimVariableTypes ) variable values (used for the fixed ones) and a map with the bounds (for the bounded variables) ;  ;  ~MinimTransformFunction () override;  Destructor (no operation) ;  ; IMultiGenFunction * Clone () const override;  clone: not supported (since unique_ptr used in the fVariables) ;  ; void GradientTransformation (const double *x, const double *gExt, double *gInt) const;  transform gradient vector (external -> internal) at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimTransformFunction.html:90,Guid,Guide,90,doc/master/classROOT_1_1Math_1_1MinimTransformFunction.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimTransformFunction.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::MinimTransformVariable Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::MinimTransformVariable Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; MinimTransformVariable class Contains meta information of the variables such as bounds, fix flags and deals with transformation of the variable The class does not contain the values and the step size (error) of the variable This is an internal class used by the MinimTransformFunction class. ; Definition at line 48 of file MinimTransformVariable.h. Public Member Functions;  MinimTransformVariable ();  Default Constructor for an unlimited variable. ;  ;  MinimTransformVariable (const MinimTransformVariable &rhs);  ;  MinimTransformVariable (double lower, double upper, SinVariableTransformation *trafo);  ;  MinimTransformVariable (double lower, SqrtLowVariableTransformation *trafo);  ;  MinimTransformVariable (double upper, SqrtUpVariableTransformation *trafo);  ;  MinimTransformVariable (double value);  ; double DerivativeIntToExt (double x) const;  ; double ExternalToInternal (double x) const;  ; double FixValue () const;  ; bool HasLowerBound () const;  ; bool HasUpperBound () const;  ; double InternalToExternal (double x) const;  ; bool IsFixed () const;  ; bool IsLimited () const;  ; double LowerBound () const;  ; MinimTransformVariable & operator= (const MinimTransformVariable &rhs);  ; double UpperBound () const;  . Private Attributes; bool fBounds;  has double bound ;  ; bool fFix;  fix variable ;  ; bool fLowBound;  has lower bound ;  ; double fLower;  lower parameter limit ;  ; std::unique_ptr< MinimizerVariableTransformation > fTransform;  pointer to the minimizer transformation ;  ; bool fUpBound;  has upper bound param ;  ; double fUpper;  upper parameter limit ;  . #include <Math/Minim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimTransformVariable.html:90,Guid,Guide,90,doc/master/classROOT_1_1Math_1_1MinimTransformVariable.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimTransformVariable.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Minimizer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Math::Minimizer Class ReferenceabstractMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; Abstract Minimizer class, defining the interface for the various minimizer (like Minuit2, Minuit, GSL, etc..) in ROOT. ; Plug-in's exist in ROOT to be able to instantiate the derived classes without linking the library using the static function ROOT::Math::Factory::CreateMinimizer.; Here is the list of all possible minimizers and their respective methods (algorithms) that can be instantiated: The name shown below can be used to create them. More documentation can be found in the respective class. Minuit (class TMinuitMinimizer); Migrad (default); MigradImproved (Migrad with adding a method to improve minimization when ends-up in a local minimum, see par. 6.3 of Minuit tutorial on Function Minimization); Simplex; Minimize (a combination of Simplex + Migrad); Minimize; Scan; Seek. Minuit2 (class ROOT::Minuit2::Minuit2Minimizer); Migrad (default); Simplex; Minimize; Fumili (Fumili2); Scan. Fumili (class TFumiliMinimizer); GSLMultiMin (class ROOT::Math::GSLMinimizer) available when ROOT is built with mathmore support; BFGS2 (Default); BFGS; ConjugateFR; ConjugatePR; SteepestDescent. GSLMultiFit (class ROOT::Math::GSLNLMinimizer) available when ROOT is built mathmore support; GSLSimAn (class ROOT::Math::GSLSimAnMinimizer) available when ROOT is built with mathmore support; Genetic (class ROOT::Math::GeneticMinimizer); RMinimizer (class ROOT::Math::RMinimizer) available when ROOT is built with r support; BFGS (default); L-BFGS-S; Nelder-Mead; CG; and more methods, see the Details in the documentation of the function optimix of the optmix R package. The Minimizer class provides the interface to perform the minimization",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html:77,Guid,Guide,77,doc/master/classROOT_1_1Math_1_1Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::MinimizerOptions Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::MinimizerOptions Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; Minimizer options. ; Class defining the options for the minimizer. It contains also static methods for setting the default Minimizer option values that will be used by default by all Minimizer instances. To see the current default options do: ROOT::Math::MinimizerOptions::PrintDefault();. Definition at line 40 of file MinimizerOptions.h. Public Member Functions;  MinimizerOptions ();  ;  MinimizerOptions (const MinimizerOptions &opt);  ;  ~MinimizerOptions ();  ; double ErrorDef () const;  error definition ;  ; const IOptions * ExtraOptions () const;  return extra options (NULL pointer if they are not present) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; const std::string & MinimizerAlgorithm () const;  type of algorithm ;  ; const std::string & MinimizerType () const;  type of minimizer ;  ; MinimizerOptions & operator= (const MinimizerOptions &opt);  assignment operators ;  ; double Precision () const;  precision in the objective function calculation (value <=0 means left to default) ;  ; void Print (std::ostream &os=std::cout) const;  print all the options ;  ; int PrintLevel () const;  non-static methods for retrieving options ;  ; void ResetToDefaultOptions ();  non-static methods for setting options ;  ; void SetErrorDef (double err);  set error def ;  ; void SetExtraOptions (const IOptions &opt);  set extra options (in this case pointer is cloned) ;  ; void SetMaxFunctionCalls (unsigned int maxfcn);  set maximum of function calls ;  ; void SetMaxIterations (unsigned int maxite,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimizerOptions.html:84,Guid,Guide,84,doc/master/classROOT_1_1Math_1_1MinimizerOptions.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimizerOptions.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::MinimizerVariableTransformation Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::MinimizerVariableTransformation Class ReferenceabstractMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; Base class for MinimizerVariable transformations defining the functions to deal with bounded parameters. ; Definition at line 20 of file MinimizerVariableTransformation.h. Public Member Functions; virtual ~MinimizerVariableTransformation ();  ; virtual double DInt2Ext (double value, double lower, double upper) const =0;  ; virtual double Ext2int (double value, double lower, double upper) const =0;  ; virtual double Int2ext (double value, double lower, double upper) const =0;  . #include <Math/MinimizerVariableTransformation.h>. Inheritance diagram for ROOT::Math::MinimizerVariableTransformation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~MinimizerVariableTransformation(). virtual ROOT::Math::MinimizerVariableTransformation::~MinimizerVariableTransformation ; (; ). inlinevirtual . Definition at line 24 of file MinimizerVariableTransformation.h. Member Function Documentation. ◆ DInt2Ext(). virtual double ROOT::Math::MinimizerVariableTransformation::DInt2Ext ; (; double ; value, . double ; lower, . double ; upper . ); const. pure virtual . Implemented in ROOT::Math::SinVariableTransformation, ROOT::Math::SqrtLowVariableTransformation, and ROOT::Math::SqrtUpVariableTransformation. ◆ Ext2int(). virtual double ROOT::Math::MinimizerVariableTransformation::Ext2int ; (; double ; value, . double ; lower, . double ; upper . ); const. pure virtual . Implemented in ROOT::Math::SinVariableTransformation, ROOT::Math::SqrtLowVariableTransformation, and ROOT::Math::SqrtUpVariableTransformation. ◆ Int2ext(). virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimizerVariableTransformation.html:99,Guid,Guide,99,doc/master/classROOT_1_1Math_1_1MinimizerVariableTransformation.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimizerVariableTransformation.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::Minus< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::Minus< T > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class T>; class ROOT::Math::Minus< T >Unary Minus Operation Class. ; Definition at line 44 of file UnaryOperators.h. Static Public Member Functions; static T apply (const T &rhs);  . #include <Math/UnaryOperators.h>; Member Function Documentation. ◆ apply(). template<class T > . static T ROOT::Math::Minus< T >::apply ; (; const T & ; rhs). inlinestatic . Definition at line 46 of file UnaryOperators.h. The documentation for this class was generated from the following file:; math/smatrix/inc/Math/UnaryOperators.h. ROOTMathMinus. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minus.html:87,Guid,Guide,87,doc/master/classROOT_1_1Math_1_1Minus.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minus.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::MinusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepStd< T, D1, D2 > > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::MinusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepStd< T, D1, D2 > > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, class A>; struct ROOT::Math::MinusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepStd< T, D1, D2 > >Specialization for symmetrix -= general : NOT Allowed operation. ; Definition at line 345 of file HelperOps.h. Static Public Member Functions; static void Evaluate (SMatrix< T, D1, D2, MatRepSym< T, D1 > > &, const Expr< A, T, D1, D2, MatRepStd< T, D1, D2 > > &);  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, class A > . static void ROOT::Math::MinusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepStd< T, D1, D2 > >::Evaluate ; (; SMatrix< T, D1, D2, MatRepSym< T, D1 > > & ; , . const Expr< A, T, D1, D2, MatRepStd< T, D1, D2 > > & ;  . ). inlinestatic . Definition at line 347 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathMinusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepStd< T, D1, D2 > >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1MinusEquals_3_01T_00_01D1_00_01D2_00_01A_00_01MatRepSym_3_01T_00_01D1_01_4ad9d4d8067a43d465b917221840bb9ae.html:149,Guid,Guide,149,doc/master/structROOT_1_1Math_1_1MinusEquals_3_01T_00_01D1_00_01D2_00_01A_00_01MatRepSym_3_01T_00_01D1_01_4ad9d4d8067a43d465b917221840bb9ae.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1MinusEquals_3_01T_00_01D1_00_01D2_00_01A_00_01MatRepSym_3_01T_00_01D1_01_4ad9d4d8067a43d465b917221840bb9ae.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::MinusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepSym< T, D1 > > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::MinusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepSym< T, D1 > > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, class A>; struct ROOT::Math::MinusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepSym< T, D1 > >Specialization for symmetric matrices. ; Evaluate the expression performing a -= operation for symmetric matrices Need to have a separate functions to avoid to modify two times the off-diagonal elements (i.e applying two times the expression) Need to check whether creating a temporary object with the expression result (like in op: A -= A + B ) ; Definition at line 315 of file HelperOps.h. Static Public Member Functions; static void Evaluate (SMatrix< T, D1, D2, MatRepSym< T, D1 > > &lhs, const Expr< A, T, D1, D2, MatRepSym< T, D1 > > &rhs);  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, class A > . static void ROOT::Math::MinusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepSym< T, D1 > >::Evaluate ; (; SMatrix< T, D1, D2, MatRepSym< T, D1 > > & ; lhs, . const Expr< A, T, D1, D2, MatRepSym< T, D1 > > & ; rhs . ). inlinestatic . Definition at line 317 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathMinusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepSym< T, D1 > >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1MinusEquals_3_01T_00_01D1_00_01D2_00_01A_00_01MatRepSym_3_01T_00_01D1_01_430c9cf3013fba6ff738c698e3426727e.html:145,Guid,Guide,145,doc/master/structROOT_1_1Math_1_1MinusEquals_3_01T_00_01D1_00_01D2_00_01A_00_01MatRepSym_3_01T_00_01D1_01_430c9cf3013fba6ff738c698e3426727e.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1MinusEquals_3_01T_00_01D1_00_01D2_00_01A_00_01MatRepSym_3_01T_00_01D1_01_430c9cf3013fba6ff738c698e3426727e.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::MinusEquals< T, D1, D2, A, R1, R2 > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::MinusEquals< T, D1, D2, A, R1, R2 > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, class A, class R1, class R2>; struct ROOT::Math::MinusEquals< T, D1, D2, A, R1, R2 >Evaluate the expression performing a -= operation Need to check whether creating a temporary object with the expression result (like in op: A -= A * B ) ; Definition at line 279 of file HelperOps.h. Static Public Member Functions; static void Evaluate (SMatrix< T, D1, D2, R1 > &lhs, const Expr< A, T, D1, D2, R2 > &rhs);  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, class A , class R1 , class R2 > . static void ROOT::Math::MinusEquals< T, D1, D2, A, R1, R2 >::Evaluate ; (; SMatrix< T, D1, D2, R1 > & ; lhs, . const Expr< A, T, D1, D2, R2 > & ; rhs . ). inlinestatic . Definition at line 281 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathMinusEquals. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1MinusEquals.html:113,Guid,Guide,113,doc/master/structROOT_1_1Math_1_1MinusEquals.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1MinusEquals.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::MiserParameters Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Math::MiserParameters Struct ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration » Numerical Monte Carlo Integration Classes. ; Structure collecting parameters for MISER multidimensional integration. ; Definition at line 77 of file MCParameters.h. Public Member Functions;  MiserParameters (const ROOT::Math::IOptions &opt, size_t dim=10);  ;  MiserParameters (size_t dim=10);  ; std::unique_ptr< ROOT::Math::IOptions > MakeIOptions () const;  convert to options (return object is managed by the user) ;  ; MiserParameters & operator= (const ROOT::Math::IOptions &opt);  ; void SetDefaultValues (size_t dim=10);  default MISER parameters (copied from gsl/monte/vegas.c) ;  . Public Attributes; double alpha;  ; double dither;  ; double estimate_frac;  ; size_t min_calls;  ; size_t min_calls_per_bisection;  . #include <Math/MCParameters.h>; Constructor & Destructor Documentation. ◆ MiserParameters() [1/2]. ROOT::Math::MiserParameters::MiserParameters ; (; size_t ; dim = 10). inline . Definition at line 86 of file MCParameters.h. ◆ MiserParameters() [2/2]. ROOT::Math::MiserParameters::MiserParameters ; (; const ROOT::Math::IOptions & ; opt, . size_t ; dim = 10 . ). Definition at line 98 of file MCParameters.cxx. Member Function Documentation. ◆ MakeIOptions(). std::unique_ptr< ROOT::Math::IOptions > ROOT::Math::MiserParameters::MakeIOptions ; (; ); const. convert to options (return object is managed by the user) ; Definition at line 122 of file MCParameters.cxx. ◆ operator=(). MiserParameters & ROOT::Math::MiserParameters::operator= ; (; const ROOT::Math::IOptions & ; opt). Definition at line 103 of file MCParameters.cxx. ◆ SetDefaultValues(). void ROOT::Math::MiserParameters::SetDefaultValues ; (; size_t ; dim ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1MiserParameters.html:84,Guid,Guide,84,doc/master/structROOT_1_1Math_1_1MiserParameters.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1MiserParameters.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::MixMaxEngine< N, SkipNumber > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::MixMaxEngine< N, SkipNumber > Class Template ReferenceMath » MathCore » Interface classes for Random number generation. ; template<int N, int SkipNumber>; class ROOT::Math::MixMaxEngine< N, SkipNumber >MixMaxEngine is a wrapper class for the MIXMAX Random number generator. ; MIXMAX is a matrix-recursive random number generator introduced by G. Savvidy.; The real implementation of the generator, written in C, is in the mixmax.h and mixmax.cxx files. This generator code is available also at hepforge: http://mixmax.hepforge.org The MIXMAX code has been created and developed by Konstantin Savvidy and it is released under GNU Lesser General Public License v3.; This wrapper class provides 3 different variants of MIXMAX according to the template para extra parameter N. The extra parameter, SkipNumber, is used to perform additional iterations of the generator before returning the random numbers. For example, when SkipNumber = 2, the generator will have two extra iterations that will be discarder. MIXMAX with N = 240. This is a new version of the generator (version 2.0beta) described in the 2016 paper (3rd reference), with special number \(s=487013230256099140\), \(m=2^{51}+1\) and having a period of \(10^{4389}\).; MIXMAX with N = 17, from the 2.0 beta version with \(s=0\) and \(m=2^{36}+1\). The period of the generator is \(10^{294}\).; MIXMAX with N = 256 from the 1.0 version. The period is (for SkipNumber=0) \(10^{4682}\). For this generator we recommend in ROOT using a default value of `SkipNumber=2, while for the previous two generators skipping is not needed. This table describes the properties of the MIX",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MixMaxEngine.html:106,Guid,Guide,106,doc/master/classROOT_1_1Math_1_1MixMaxEngine.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MixMaxEngine.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::MixMaxEngineImpl< N > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::MixMaxEngineImpl< N > Class Template Reference. ; template<int N>; class ROOT::Math::MixMaxEngineImpl< N >; Definition at line 52 of file MixMaxEngineImpl.h. Public Member Functions;  MixMaxEngineImpl (uint64_t);  ;  ~MixMaxEngineImpl ();  ; int Counter ();  ; void GetState (std::vector< uint64_t > &);  ; double IntRndm ();  ; void Iterate ();  ; double Rndm ();  ; void SetCounter (int);  ; void SetSeed (uint64_t);  ; void SetState (const std::vector< uint64_t > &);  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathcore/src/MixMaxEngineImpl.h>; Constructor & Destructor Documentation. ◆ MixMaxEngineImpl(). template<int N> . ROOT::Math::MixMaxEngineImpl< N >::MixMaxEngineImpl ; (; uint64_t ; ). inline . Definition at line 54 of file MixMaxEngineImpl.h. ◆ ~MixMaxEngineImpl(). template<int N> . ROOT::Math::MixMaxEngineImpl< N >::~MixMaxEngineImpl ; (; ). inline . Definition at line 57 of file MixMaxEngineImpl.h. Member Function Documentation. ◆ Counter(). template<int N> . int ROOT::Math::MixMaxEngineImpl< N >::Counter ; (; ). inline . Definition at line 63 of file MixMaxEngineImpl.h. ◆ GetState(). template<int N> . void ROOT::Math::MixMaxEngineImpl< N >::GetState ; (; std::vector< uint64_t > & ; ). inline . Definition at line 62 of file MixMaxEngineImpl.h. ◆ IntRndm(). template<int N> . double ROOT::Math::MixMaxEngineImpl< N >::IntRndm ; (; ). inline . Definition at line 60 of file MixMaxEngineImpl.h. ◆ Iterate(). template<int N> . void ROOT::Math::MixMaxEngineImpl< N >::Iterate ; (; ). inline . Definition at line 65 of file MixMaxEngineImpl.h. ◆ Rndm(). template<int N> . double ROOT::Math::MixMaxEngineImpl< N >::Rndm ; (; ). inline . Definition at line 59 of file MixMaxEngineImpl.h. ◆ SetCounte,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MixMaxEngineImpl.html:98,Guid,Guide,98,doc/master/classROOT_1_1Math_1_1MixMaxEngineImpl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MixMaxEngineImpl.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::MixMaxEngineImpl< ROOT_MM_N > Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::MixMaxEngineImpl< ROOT_MM_N > Class Reference. . Definition at line 70 of file MixMaxEngineImpl.h. Public Types; typedef MixMaxEngine< ROOT_MM_N, 0 >::Result_t Result_t;  ; typedef MixMaxEngine< ROOT_MM_N, 0 >::StateInt_t StateInt_t;  . Public Member Functions;  MixMaxEngineImpl (uint64_t seed);  ;  ~MixMaxEngineImpl ();  ; void Branch (uint32_t *seedvec);  ; int Counter () const;  ; void GetState (std::vector< StateInt_t > &state) const;  ; Result_t IntRndm ();  ; void Iterate ();  ; void ReadState (const char filename[]);  ; double Rndm ();  ; void RndmArray (int n, double *array);  ; void SetCounter (int val);  ; void SetSeed (Result_t seed);  ; void SetSeedFast (Result_t seed);  ; void SetState (const std::vector< StateInt_t > &state);  . Static Public Member Functions; static int Size ();  . Private Attributes; rng_state_t * fRngState;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathcore/src/MixMaxEngineImpl.h>; Member Typedef Documentation. ◆ Result_t. typedef MixMaxEngine<ROOT_MM_N,0>::Result_t ROOT::Math::MixMaxEngineImpl< ROOT_MM_N >::Result_t. Definition at line 75 of file MixMaxEngineImpl.h. ◆ StateInt_t. typedef MixMaxEngine<ROOT_MM_N,0>::StateInt_t ROOT::Math::MixMaxEngineImpl< ROOT_MM_N >::StateInt_t. Definition at line 74 of file MixMaxEngineImpl.h. Constructor & Destructor Documentation. ◆ MixMaxEngineImpl(). ROOT::Math::MixMaxEngineImpl< ROOT_MM_N >::MixMaxEngineImpl ; (; uint64_t ; seed). inline . Definition at line 77 of file MixMaxEngineImpl.h. ◆ ~MixMaxEngineImpl(). ROOT::Math::MixMaxEngineImpl< ROOT_MM_N >::~MixMaxEngineImpl ; (; ). inline . Definition at line 81 of file MixMaxEngineImpl.h. Member F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MixMaxEngineImpl_3_01ROOT__MM__N_01_4.html:97,Guid,Guide,97,doc/master/classROOT_1_1Math_1_1MixMaxEngineImpl_3_01ROOT__MM__N_01_4.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MixMaxEngineImpl_3_01ROOT__MM__N_01_4.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::MulOp< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::MulOp< T > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class T>; class ROOT::Math::MulOp< T >Multiplication (element-wise) Operation Class. ; Definition at line 529 of file BinaryOperators.h. Static Public Member Functions; static T apply (const T &lhs, const T &rhs);  . #include <Math/BinaryOperators.h>; Member Function Documentation. ◆ apply(). template<class T > . static T ROOT::Math::MulOp< T >::apply ; (; const T & ; lhs, . const T & ; rhs . ). inlinestatic . Definition at line 531 of file BinaryOperators.h. The documentation for this class was generated from the following file:; math/smatrix/inc/Math/BinaryOperators.h. ROOTMathMulOp. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MulOp.html:87,Guid,Guide,87,doc/master/classROOT_1_1Math_1_1MulOp.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MulOp.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::MultPolicy< T, R1, R2 > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; List of all members ; ROOT::Math::MultPolicy< T, R1, R2 > Struct Template Reference. ; template<class T, class R1, class R2>; struct ROOT::Math::MultPolicy< T, R1, R2 >matrix-matrix multiplication policy ; Definition at line 31 of file BinaryOpPolicy.h. Public Types; enum  { N1 = R1::kRows; , N2 = R2::kCols; };  ; typedef MatRepStd< T, N1, N2 > RepType;  . #include <Math/BinaryOpPolicy.h>; Member Typedef Documentation. ◆ RepType. template<class T , class R1 , class R2 > . typedef MatRepStd<T, N1, N2> ROOT::Math::MultPolicy< T, R1, R2 >::RepType. Definition at line 37 of file BinaryOpPolicy.h. Member Enumeration Documentation. ◆ anonymous enum. template<class T , class R1 , class R2 > . anonymous enum. EnumeratorN1 ; N2 . Definition at line 33 of file BinaryOpPolicy.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/BinaryOpPolicy.h. ROOTMathMultPolicy. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1MultPolicy.html:101,Guid,Guide,101,doc/master/structROOT_1_1Math_1_1MultPolicy.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1MultPolicy.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::MultiDimParamFunctionAdapter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::MultiDimParamFunctionAdapter Class ReferenceMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; MultiDimParamFunctionAdapter class to wrap a one-dimensional parametric function in a multi dimensional parametric function interface This is used typically in fitting where internally the function is stored as multidimensional. ; To wrap a non-parametric one-dim function in a multi-dim interface one can use simply a ROOT::Math::WrappedFunction<ROOT::Math::IGenFunction> or ROOT::Math::Functor and ROOT::Math::GradFunctor for gradient functions; This class differs from WrappedParamFunction in the fact that the parameters are not stored in the adapter class and optionally it keeps a cloned and managed copy of the adapter class. ; Definition at line 41 of file MultiDimParamFunctionAdapter.h. Public Types; typedef IParamMultiFunction::BaseFunc BaseFunc;  ;  Public Types inherited from ROOT::Math::IParametricFunctionMultiDimTempl< double >; typedef IBaseFunctionMultiDimTempl< double > BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . Public Member Functions;  MultiDimParamFunctionAdapter (const IParamFunction &f);  Constructor from a parametric one dim function interface from a const reference Own the function in this case. ;  ;  MultiDimParamFunctionAdapter (const MultiDimParamFunctionAdapter &rhs);  Copy constructor. ;  ;  MultiDimParamFunctionAdapter (IParamFunction &f);  Constructor from a parametric one dim function interface from a non-const reference Do not own the function in this case. ;  ;  ~MultiDimParamFunctionAdapter,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiDimParamFunctionAdapter.html:96,Guid,Guide,96,doc/master/classROOT_1_1Math_1_1MultiDimParamFunctionAdapter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiDimParamFunctionAdapter.html,2,"['Guid', 'simpl']","['Guide', 'simply']"
Usability,. ROOT: ROOT::Math::MultiDimParamGradFunctionAdapter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::MultiDimParamGradFunctionAdapter Class ReferenceMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; MultiDimParamGradFunctionAdapter class to wrap a one-dimensional parametric gradient function in a multi dimensional parametric gradient function interface This is used typically in fitting where internally the function is stored as multidimensional. ; To wrap a non-parametric one-dim gradient function in a multi-dim interface one can use simply a a ROOT::Math::GradFunctor; The parameters are not stored in the adapter class and by default the pointer to the 1D function is owned. This means that deleting the class deletes also the 1D function and copying the class copies also the 1D function This class differs from WrappedParamFunction in the fact that the parameters are not stored in the adapter class and optionally it keeps a cloned and managed copy of the adapter class. ; Definition at line 172 of file MultiDimParamFunctionAdapter.h. Public Types; typedef IParamMultiGradFunction::BaseFunc BaseFunc;  ;  Public Types inherited from ROOT::Math::IParametricGradFunctionMultiDimTempl< T >; using BaseFunc = typename IParametricFunctionMultiDimTempl< T >::BaseFunc;  ; using BaseGradFunc = IGradientFunctionMultiDimTempl< T >;  ; using BaseParamFunc = IParametricFunctionMultiDimTempl< T >;  ;  Public Types inherited from ROOT::Math::IParametricFunctionMultiDimTempl< T >; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . Public Member Functions;  MultiDimParamGradFunctionAdapter (const,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiDimParamGradFunctionAdapter.html:100,Guid,Guide,100,doc/master/classROOT_1_1Math_1_1MultiDimParamGradFunctionAdapter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiDimParamGradFunctionAdapter.html,2,"['Guid', 'simpl']","['Guide', 'simply']"
Usability,". ROOT: ROOT::Math::MultiGenFunctionFitness Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::MultiGenFunctionFitness Class Reference. . Definition at line 18 of file GeneticMinimizer.cxx. Public Member Functions;  MultiGenFunctionFitness (const ROOT::Math::IMultiGenFunction &function);  ; Double_t EstimatorFunction (std::vector< double > &factors) override;  ; Double_t Evaluate (const std::vector< double > &factors) const;  ; void FixParameter (unsigned int ipar, double value, bool fix=true);  ; unsigned int NCalls () const;  ; unsigned int NDims () const;  ; unsigned int NTotal () const;  ; const std::vector< double > & Transform (const std::vector< double > &factors) const;  ;  Public Member Functions inherited from TMVA::IFitterTarget;  IFitterTarget ();  constructor ;  ; virtual ~IFitterTarget ();  ; virtual TClass * IsA () const;  ; virtual void ProgressNotifier (TString, TString);  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; std::vector< int > fFixedParFlag;  ; const ROOT::Math::IMultiGenFunction & fFunc;  ; unsigned int fNCalls;  ; unsigned int fNFree;  ; std::vector< double > fValues;  . Additional Inherited Members;  Static Public Member Functions inherited from TMVA::IFitterTarget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Inheritance diagram for ROOT::Math::MultiGenFunctionFitness:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ MultiGenFunctionFitness(). ROOT::Math::MultiGenFunctionFitness::MultiGenFunctionFitness ; (; const ROOT::Math::IMultiGenFunction & ; function). inline . Definition at line 27 of file GeneticMinimizer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiGenFunctionFitness.html:91,Guid,Guide,91,doc/master/classROOT_1_1Math_1_1MultiGenFunctionFitness.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiGenFunctionFitness.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::MultiNumGradFunction Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; ROOT::Math::MultiNumGradFunction Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; MultiNumGradFunction class to wrap a normal function in a gradient function using numerical gradient calculation provided by the class Derivator (based on GSL numerical derivation) ; Definition at line 49 of file MultiNumGradFunction.h. Public Member Functions;  MultiNumGradFunction (const IMultiGenFunction &f);  Constructor from a IMultiGenFunction interface. ;  ; template<class FuncType > ;  MultiNumGradFunction (FuncType f, int n);  Constructor from a generic function (pointer or reference) and number of dimension implementing operator () (double * x) ;  ;  ~MultiNumGradFunction () override;  Destructor (no operations) ;  ; IMultiGenFunction * Clone () const override;  Clone a function. ;  ; unsigned int NCalls () const;  ; unsigned int NDim () const override;  Retrieve the dimension of the function. ;  ; void SetOwnership (bool on=true);  ;  Public Member Functions inherited from ROOT::Math::IGradientFunctionMultiDimTempl< T >; T Derivative (const T *x, unsigned int icoord, T *previous_grad, T *previous_g2, T *previous_gstep) const;  In some cases, the derivative algorithm will use information from the previous step, these can be passed in with this overload. ;  ; T Derivative (const T *x, unsigned int icoord=0) const;  Return the partial derivative with respect to the passed coordinate. ;  ; virtual void FdF (const T *x, T &f, T *df) const;  Optimized method to evaluate at the same time the function value and derivative at a point x. ;  ; virtual void Gradient (const T *x, T *grad) const;  Evaluate all the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiNumGradFunction.html:88,Guid,Guide,88,doc/master/classROOT_1_1Math_1_1MultiNumGradFunction.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiNumGradFunction.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::NullTypeFunc1D Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Math::NullTypeFunc1D Struct Reference. . Definition at line 26 of file WrappedFunction.h. #include <Math/WrappedFunction.h>; The documentation for this struct was generated from the following file:; math/mathcore/inc/Math/WrappedFunction.h. ROOTMathNullTypeFunc1D. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1NullTypeFunc1D.html:83,Guid,Guide,83,doc/master/structROOT_1_1Math_1_1NullTypeFunc1D.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1NullTypeFunc1D.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::OneDimMultiFunctionAdapter< MultiFuncType > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::OneDimMultiFunctionAdapter< MultiFuncType > Class Template ReferenceMath » MathCore » Function Classes and Interfaces » Generic Function Evaluation Interfaces. ; template<class MultiFuncType = const ROOT::Math::IMultiGenFunction &>; class ROOT::Math::OneDimMultiFunctionAdapter< MultiFuncType >OneDimMultiFunctionAdapter class to wrap a multidimensional function in one dimensional one. ; Given a f(x1,x2,x3,....xn) transforms in a f( x_i) given the coordinate intex i and the vector x[] of the coordinates. It provides the possibility to copy and own the data array of the coordinates or to maintain internally a pointer to an external array for being more efficient. In this last case the user must guarantee the life of the given passed pointer ; Definition at line 56 of file OneDimFunctionAdapter.h. Public Member Functions;  OneDimMultiFunctionAdapter (const OneDimMultiFunctionAdapter &rhs);  ;  OneDimMultiFunctionAdapter (MultiFuncType f, const double *x, unsigned int icoord=0, const double *p=nullptr);  Constructor from the function object , pointer to an external array of x values and coordinate we want to adapt. ;  ;  OneDimMultiFunctionAdapter (MultiFuncType f, unsigned int dim=1, unsigned int icoord=0, const double *p=nullptr);  Constructor from the function object , dimension of the function and and coordinate we want to adapt. ;  ;  ~OneDimMultiFunctionAdapter () override;  Destructor (no operations) ;  ; OneDimMultiFunctionAdapter * Clone () const override;  clone ;  ; void SetCoord (int icoord);  ; void SetX (const double *x);  set values ;  ; void SetX (double *x);  set pointer without copying the values ;  ; template<class Iterator > ; void SetX (Iterator begin,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1OneDimMultiFunctionAdapter.html:120,Guid,Guide,120,doc/master/classROOT_1_1Math_1_1OneDimMultiFunctionAdapter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1OneDimMultiFunctionAdapter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::OneDimParamFunctionAdapter< ParamFuncType > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::OneDimParamFunctionAdapter< ParamFuncType > Class Template ReferenceMath » MathCore » Function Classes and Interfaces » Generic Function Evaluation Interfaces. ; template<class ParamFuncType = ROOT::Math::IParamMultiFunction &>; class ROOT::Math::OneDimParamFunctionAdapter< ParamFuncType >OneDimParamFunctionAdapter class to wrap a multi-dim parametric function in one dimensional one. ; Given a f(x[],p1,...pn) transforms in a f( p_i) given the param index i and the vectors x[] and p[] of the coordinates and parameters It has to be used carefully, since for efficiency reason it does not copy the parameter object but re-uses the given pointer for the p[] vector. The ParamFuncType reference by default is not const because the operator()(x,p) is not a const method ; Definition at line 213 of file OneDimFunctionAdapter.h. Public Member Functions;  OneDimParamFunctionAdapter (ParamFuncType f, const double *x, const double *p, unsigned int ipar=0);  Constructor from the function object , x value and coordinate we want to adapt. ;  ;  ~OneDimParamFunctionAdapter () override;  Destructor (no operations) ;  ; OneDimParamFunctionAdapter * Clone () const override;  clone ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  . Private Member Functions; double DoEval (double x) const override;  evaluate function at the values x[] given in the constructor and as function of the coordinate fCoord. ;  . Private Attributes",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1OneDimParamFunctionAdapter.html:120,Guid,Guide,120,doc/master/classROOT_1_1Math_1_1OneDimParamFunctionAdapter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1OneDimParamFunctionAdapter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::PDFIntegral Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::PDFIntegral Class Reference. . Definition at line 77 of file GoFTest.cxx. Public Member Functions;  PDFIntegral (const IGenFunction &pdf, Double_t xmin=0, Double_t xmax=-1);  ;  ~PDFIntegral () override;  ; IGenFunction * Clone () const override;  Clone a function. ;  ; Double_t DoEval (Double_t x) const override;  implementation of the evaluation function. Must be implemented by derived classes ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  . Private Attributes; IntegratorOneDim fIntegral;  ; Double_t fNorm;  ; const IGenFunction * fPDF;  ; Double_t fXmax;  ; Double_t fXmin;  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . Inheritance diagram for ROOT::Math::PDFIntegral:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~PDFIntegral(). ROOT::Math::PDFIntegral::~PDFIntegral ; (; ). inlineoverride . Definition at line 85 of file GoFTest.cxx. ◆ PDFIntegral(). ROOT::Math::PDFIntegral::PDFIntegral ; (; const IGenFunction & ; pdf, . Double_t ; xmin = 0, . Double_t ; xmax = -1 . ). inline . Definition at line 87 of file GoFTest.cxx. Member Function Documentation. ◆ Clone(). IGenFunction * ROOT::Math::PDFIntegral::Clone ; (; ); const. inlineoverridevirtual . Clone a function. ; Each derived class will implement their version of the private DoClone method. ; Implements ROOT::Math::IBaseFunctionOneDim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1PDFIntegral.html:79,Guid,Guide,79,doc/master/classROOT_1_1Math_1_1PDFIntegral.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1PDFIntegral.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::ParamFunction< IPFType > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Attributes |; Private Attributes |; List of all members ; ROOT::Math::ParamFunction< IPFType > Class Template ReferenceMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; template<class IPFType>; class ROOT::Math::ParamFunction< IPFType >Base template class for all Parametric Functions. ; The template argument is the type of parameteric function interface is implementing like Parameteric 1D, Multi-Dim or gradient parametric.; A parameteric function is a Generic Function with parameters, so it is a function object which carries a state, the parameters. The parameters are described with a standard vector of doubles.; This class contains the default implementations for the methods defined in the IParamFunction interface for dealing with parameters Specific parameteric function classes should derive from this class if they want to profit from default implementations for the abstract methods. The derived classes need to implement only the DoEvalPar( x, p) and Clone() methods for non-gradient parameteric functions or DoParameterDerivative(x,p,ipar) for gradient par functions ; Definition at line 67 of file ParamFunction.h. Public Types; typedef IPFType::BaseFunc BaseFunc;  ; typedef IPFType BaseParFunc;  . Public Member Functions;  ParamFunction (unsigned int npar=0);  Construct a parameteric function with npar parameters. ;  ; virtual ~ParamFunction ();  ; unsigned int NPar () const;  Return the number of parameters. ;  ; virtual const double * Parameters () const;  Access the parameter values. ;  ; virtual void SetParameters (const double *p);  Set the parameter values. ;  . Protected Attributes; std::vector< double > fParams;  . Private Attributes; unsigned int fNpar;  Return true if the calculation of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1ParamFunction.html:101,Guid,Guide,101,doc/master/classROOT_1_1Math_1_1ParamFunction.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1ParamFunction.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::ParamFunctionBase< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::ParamFunctionBase< T > Class Template ReferenceabstractN-D parametric functions. ; template<class T>; class ROOT::Math::ParamFunctionBase< T >class defining the signature for multi-dim parametric functions ; Definition at line 45 of file ParamFunctor.h. Public Member Functions; virtual ~ParamFunctionBase ();  ; virtual ParamFunctionBase * Clone () const =0;  ; virtual T operator() (const T *x, const double *p)=0;  ; virtual T operator() (T *x, double *p)=0;  . #include <Math/ParamFunctor.h>; Constructor & Destructor Documentation. ◆ ~ParamFunctionBase(). template<class T > . virtual ROOT::Math::ParamFunctionBase< T >::~ParamFunctionBase ; (; ). inlinevirtual . Definition at line 47 of file ParamFunctor.h. Member Function Documentation. ◆ Clone(). template<class T > . virtual ParamFunctionBase * ROOT::Math::ParamFunctionBase< T >::Clone ; (; ); const. pure virtual . ◆ operator()() [1/2]. template<class T > . virtual T ROOT::Math::ParamFunctionBase< T >::operator() ; (; const T * ; x, . const double * ; p . ). pure virtual . ◆ operator()() [2/2]. template<class T > . virtual T ROOT::Math::ParamFunctionBase< T >::operator() ; (; T * ; x, . double * ; p . ). pure virtual . The documentation for this class was generated from the following file:; math/mathcore/inc/Math/ParamFunctor.h. ROOTMathParamFunctionBase. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1ParamFunctionBase.html:99,Guid,Guide,99,doc/master/classROOT_1_1Math_1_1ParamFunctionBase.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1ParamFunctionBase.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::ParamFunctorHandler< ParentFunctor, Func > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::Math::ParamFunctorHandler< ParentFunctor, Func > Class Template ReferenceN-D parametric functions. ; template<class ParentFunctor, class Func>; class ROOT::Math::ParamFunctorHandler< ParentFunctor, Func >ParamFunctor Handler class is responsible for wrapping any other functor and pointer to free C functions. ; It can be created from any function implementing the correct signature corresponding to the requested type ; Definition at line 66 of file ParamFunctor.h. Classes; struct  FuncEvaluator;  ; struct  FuncEvaluator< F *, T >;  ; struct  FuncEvaluator< F *const, T >;  . Public Member Functions;  ParamFunctorHandler (const Func &fun);  ; virtual ~ParamFunctorHandler ();  ; ParamFunctorHandler * Clone () const;  ; EvalType operator() (const EvalType *x, const double *p);  ; EvalType operator() (EvalType *x, double *p);  ; EvalType operator() (EvalType x, double *p);  . Private Types; typedef ParentFunctor::Impl Base;  ; typedef ParentFunctor::EvalType EvalType;  . Private Attributes; Func fFunc;  . #include <Math/ParamFunctor.h>. Inheritance diagram for ROOT::Math::ParamFunctorHandler< ParentFunctor, Func >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Base. template<class ParentFunctor , class Func > . typedef ParentFunctor::Impl ROOT::Math::ParamFunctorHandler< ParentFunctor, Func >::Base. private . Definition at line 69 of file ParamFunctor.h. ◆ EvalType. template<class ParentFunctor , class Func > . typedef ParentFunctor::EvalType ROOT::Math::ParamFunctorHandler< ParentFunctor, Func >::EvalType. private . Definition at line 68 of file ParamFunctor.h. Constructor & Destructor Documentation",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1ParamFunctorHandler.html:119,Guid,Guide,119,doc/master/classROOT_1_1Math_1_1ParamFunctorHandler.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1ParamFunctorHandler.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::ParamFunctorTempl< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::ParamFunctorTempl< T > Class Template ReferenceMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; template<class T>; class ROOT::Math::ParamFunctorTempl< T >Param Functor class for Multidimensional functions. ; It is used to wrap in a very simple and convenient way any other C++ callable object (implementation double operator( const double *, const double * ) ) or a member function with the correct signature, like Foo::EvalPar(const double *, const double *) ; Definition at line 274 of file ParamFunctor.h. Public Types; typedef T EvalType;  ; typedef T(* FreeFunc) (T *, double *);  ; typedef ParamFunctionBase< T > Impl;  . Public Member Functions;  ParamFunctorTempl ();  Default constructor. ;  ; template<typename Func > ;  ParamFunctorTempl (const Func &f);  construct from another generic Functor of multi-dimension ;  ;  ParamFunctorTempl (const ParamFunctorTempl &rhs);  Copy constructor. ;  ; template<class PtrObj , typename MemFn > ;  ParamFunctorTempl (const PtrObj &p, MemFn memFn);  construct from a pointer to member function (multi-dim type) ;  ;  ParamFunctorTempl (const std::function< T(const T *f, const Double_t *param)> &func);  ;  ParamFunctorTempl (FreeFunc f);  ; virtual ~ParamFunctorTempl ();  Destructor (no operations) ;  ; bool Empty () const;  ; void * GetImpl ();  ; T operator() (const T *x, const double *p);  ; T operator() (T *x, double *p);  ; ParamFunctorTempl & operator= (const ParamFunctorTempl &rhs);  Assignment operator. ;  ; void SetFunction (Impl *f);  . Private Attributes; Impl * fImpl;  . #include <Math/ParamFunctor.h>; Member Typedef Documentation. ◆ EvalType. template<class T > . typedef T ROOT::Math::ParamFunctorTempl< T >",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1ParamFunctorTempl.html:99,Guid,Guide,99,doc/master/classROOT_1_1Math_1_1ParamFunctorTempl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1ParamFunctorTempl.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: ROOT::Math::ParamMemFunHandler< ParentFunctor, PointerToObj, PointerToMemFn > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::ParamMemFunHandler< ParentFunctor, PointerToObj, PointerToMemFn > Class Template ReferenceN-D parametric functions. ; template<class ParentFunctor, typename PointerToObj, typename PointerToMemFn>; class ROOT::Math::ParamMemFunHandler< ParentFunctor, PointerToObj, PointerToMemFn >ParamFunctor Handler to Wrap pointers to member functions. ; Definition at line 174 of file ParamFunctor.h. Classes; struct  MemFuncEvaluator;  . Public Member Functions;  ParamMemFunHandler (const PointerToObj &pObj, PointerToMemFn pMemFn);  constructor from a pointer to the class and a pointer to the function ;  ; virtual ~ParamMemFunHandler ();  ; ParamMemFunHandler * Clone () const;  ; double operator() (const double *x, const double *p);  ; double operator() (double *x, double *p);  ; double operator() (double x, double *p);  . Private Types; typedef ParentFunctor::Impl Base;  . Private Member Functions;  ParamMemFunHandler (const ParamMemFunHandler &)=delete;  ; ParamMemFunHandler & operator= (const ParamMemFunHandler &)=delete;  . Private Attributes; PointerToMemFn fMemFn;  ; PointerToObj fObj;  . #include <Math/ParamFunctor.h>. Inheritance diagram for ROOT::Math::ParamMemFunHandler< ParentFunctor, PointerToObj, PointerToMemFn >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Base. template<class ParentFunctor , typename PointerToObj , typename PointerToMemFn > . typedef ParentFunctor::Impl ROOT::Math::ParamMemFunHandler< ParentFunctor, PointerToObj, PointerToMemFn >::Base. private . Definition at line 176 of file ParamFunctor.h. Constructor & Destructor Do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1ParamMemFunHandler.html:142,Guid,Guide,142,doc/master/classROOT_1_1Math_1_1ParamMemFunHandler.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1ParamMemFunHandler.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::PlaceExpr< T, D1, D2, D3, D4, A, MatRepSym< T, D1 >, MatRepStd< T, D3, D4 > > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::PlaceExpr< T, D1, D2, D3, D4, A, MatRepSym< T, D1 >, MatRepStd< T, D3, D4 > > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, unsigned int D3, unsigned int D4, class A>; struct ROOT::Math::PlaceExpr< T, D1, D2, D3, D4, A, MatRepSym< T, D1 >, MatRepStd< T, D3, D4 > >; Definition at line 407 of file HelperOps.h. Static Public Member Functions; static void Evaluate (SMatrix< T, D1, D2, MatRepSym< T, D1 > > &, const Expr< A, T, D3, D4, MatRepStd< T, D3, D4 > > &, unsigned int, unsigned int);  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, unsigned int D3, unsigned int D4, class A > . static void ROOT::Math::PlaceExpr< T, D1, D2, D3, D4, A, MatRepSym< T, D1 >, MatRepStd< T, D3, D4 > >::Evaluate ; (; SMatrix< T, D1, D2, MatRepSym< T, D1 > > & ; , . const Expr< A, T, D3, D4, MatRepStd< T, D3, D4 > > & ; , . unsigned int ; , . unsigned int ;  . ). inlinestatic . Definition at line 408 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathPlaceExpr< T, D1, D2, D3, D4, A, MatRepSym< T, D1 >, MatRepStd< T, D3, D4 > >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1PlaceExpr_3_01T_00_01D1_00_01D2_00_01D3_00_01D4_00_01A_00_01MatRepSym_3_01bbbf80e649b356e9c71644b2b3a2891b.html:155,Guid,Guide,155,doc/master/structROOT_1_1Math_1_1PlaceExpr_3_01T_00_01D1_00_01D2_00_01D3_00_01D4_00_01A_00_01MatRepSym_3_01bbbf80e649b356e9c71644b2b3a2891b.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1PlaceExpr_3_01T_00_01D1_00_01D2_00_01D3_00_01D4_00_01A_00_01MatRepSym_3_01bbbf80e649b356e9c71644b2b3a2891b.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::PlaceExpr< T, D1, D2, D3, D4, A, MatRepSym< T, D1 >, MatRepSym< T, D3 > > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::PlaceExpr< T, D1, D2, D3, D4, A, MatRepSym< T, D1 >, MatRepSym< T, D3 > > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, unsigned int D3, unsigned int D4, class A>; struct ROOT::Math::PlaceExpr< T, D1, D2, D3, D4, A, MatRepSym< T, D1 >, MatRepSym< T, D3 > >; Definition at line 438 of file HelperOps.h. Static Public Member Functions; static void Evaluate (SMatrix< T, D1, D2, MatRepSym< T, D1 > > &lhs, const Expr< A, T, D3, D4, MatRepSym< T, D3 > > &rhs, unsigned int row, unsigned int col);  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, unsigned int D3, unsigned int D4, class A > . static void ROOT::Math::PlaceExpr< T, D1, D2, D3, D4, A, MatRepSym< T, D1 >, MatRepSym< T, D3 > >::Evaluate ; (; SMatrix< T, D1, D2, MatRepSym< T, D1 > > & ; lhs, . const Expr< A, T, D3, D4, MatRepSym< T, D3 > > & ; rhs, . unsigned int ; row, . unsigned int ; col . ). inlinestatic . Definition at line 439 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathPlaceExpr< T, D1, D2, D3, D4, A, MatRepSym< T, D1 >, MatRepSym< T, D3 > >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1PlaceExpr_3_01T_00_01D1_00_01D2_00_01D3_00_01D4_00_01A_00_01MatRepSym_3_01e871d0c5723de551219df5c2a31b167b.html:151,Guid,Guide,151,doc/master/structROOT_1_1Math_1_1PlaceExpr_3_01T_00_01D1_00_01D2_00_01D3_00_01D4_00_01A_00_01MatRepSym_3_01e871d0c5723de551219df5c2a31b167b.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1PlaceExpr_3_01T_00_01D1_00_01D2_00_01D3_00_01D4_00_01A_00_01MatRepSym_3_01e871d0c5723de551219df5c2a31b167b.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::PlaceExpr< T, D1, D2, D3, D4, A, R1, R2 > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::PlaceExpr< T, D1, D2, D3, D4, A, R1, R2 > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, unsigned int D3, unsigned int D4, class A, class R1, class R2>; struct ROOT::Math::PlaceExpr< T, D1, D2, D3, D4, A, R1, R2 >; Definition at line 379 of file HelperOps.h. Static Public Member Functions; static void Evaluate (SMatrix< T, D1, D2, R1 > &lhs, const Expr< A, T, D3, D4, R2 > &rhs, unsigned int row, unsigned int col);  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, unsigned int D3, unsigned int D4, class A , class R1 , class R2 > . static void ROOT::Math::PlaceExpr< T, D1, D2, D3, D4, A, R1, R2 >::Evaluate ; (; SMatrix< T, D1, D2, R1 > & ; lhs, . const Expr< A, T, D3, D4, R2 > & ; rhs, . unsigned int ; row, . unsigned int ; col . ). inlinestatic . Definition at line 380 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathPlaceExpr. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1PlaceExpr.html:119,Guid,Guide,119,doc/master/structROOT_1_1Math_1_1PlaceExpr.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1PlaceExpr.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::PlaceMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepStd< T, D3, D4 > > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::PlaceMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepStd< T, D3, D4 > > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, unsigned int D3, unsigned int D4>; struct ROOT::Math::PlaceMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepStd< T, D3, D4 > >; Definition at line 395 of file HelperOps.h. Static Public Member Functions; static void Evaluate (SMatrix< T, D1, D2, MatRepSym< T, D1 > > &, const SMatrix< T, D3, D4, MatRepStd< T, D3, D4 > > &, unsigned int, unsigned int);  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, unsigned int D3, unsigned int D4> . static void ROOT::Math::PlaceMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepStd< T, D3, D4 > >::Evaluate ; (; SMatrix< T, D1, D2, MatRepSym< T, D1 > > & ; , . const SMatrix< T, D3, D4, MatRepStd< T, D3, D4 > > & ; , . unsigned int ; , . unsigned int ;  . ). inlinestatic . Definition at line 396 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathPlaceMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepStd< T, D3, D4 > >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1PlaceMatrix_3_01T_00_01D1_00_01D2_00_01D3_00_01D4_00_01MatRepSym_3_01T_00_9bfe951e8bbfe3f976b2661125c16c80.html:154,Guid,Guide,154,doc/master/structROOT_1_1Math_1_1PlaceMatrix_3_01T_00_01D1_00_01D2_00_01D3_00_01D4_00_01MatRepSym_3_01T_00_9bfe951e8bbfe3f976b2661125c16c80.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1PlaceMatrix_3_01T_00_01D1_00_01D2_00_01D3_00_01D4_00_01MatRepSym_3_01T_00_9bfe951e8bbfe3f976b2661125c16c80.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::PlaceMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepSym< T, D3 > > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::PlaceMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepSym< T, D3 > > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, unsigned int D3, unsigned int D4>; struct ROOT::Math::PlaceMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepSym< T, D3 > >; Definition at line 420 of file HelperOps.h. Static Public Member Functions; static void Evaluate (SMatrix< T, D1, D2, MatRepSym< T, D1 > > &lhs, const SMatrix< T, D3, D4, MatRepSym< T, D3 > > &rhs, unsigned int row, unsigned int col);  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, unsigned int D3, unsigned int D4> . static void ROOT::Math::PlaceMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepSym< T, D3 > >::Evaluate ; (; SMatrix< T, D1, D2, MatRepSym< T, D1 > > & ; lhs, . const SMatrix< T, D3, D4, MatRepSym< T, D3 > > & ; rhs, . unsigned int ; row, . unsigned int ; col . ). inlinestatic . Definition at line 421 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathPlaceMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepSym< T, D3 > >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1PlaceMatrix_3_01T_00_01D1_00_01D2_00_01D3_00_01D4_00_01MatRepSym_3_01T_00_d20a681b5cea15d2ec1d7c5ae41f4728.html:150,Guid,Guide,150,doc/master/structROOT_1_1Math_1_1PlaceMatrix_3_01T_00_01D1_00_01D2_00_01D3_00_01D4_00_01MatRepSym_3_01T_00_d20a681b5cea15d2ec1d7c5ae41f4728.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1PlaceMatrix_3_01T_00_01D1_00_01D2_00_01D3_00_01D4_00_01MatRepSym_3_01T_00_d20a681b5cea15d2ec1d7c5ae41f4728.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::PlaceMatrix< T, D1, D2, D3, D4, R1, R2 > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::PlaceMatrix< T, D1, D2, D3, D4, R1, R2 > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, unsigned int D3, unsigned int D4, class R1, class R2>; struct ROOT::Math::PlaceMatrix< T, D1, D2, D3, D4, R1, R2 >Structure to deal when a submatrix is placed in a matrix. ; We have different cases according to the matrix representation ; Definition at line 361 of file HelperOps.h. Static Public Member Functions; static void Evaluate (SMatrix< T, D1, D2, R1 > &lhs, const SMatrix< T, D3, D4, R2 > &rhs, unsigned int row, unsigned int col);  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, unsigned int D3, unsigned int D4, class R1 , class R2 > . static void ROOT::Math::PlaceMatrix< T, D1, D2, D3, D4, R1, R2 >::Evaluate ; (; SMatrix< T, D1, D2, R1 > & ; lhs, . const SMatrix< T, D3, D4, R2 > & ; rhs, . unsigned int ; row, . unsigned int ; col . ). inlinestatic . Definition at line 363 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathPlaceMatrix. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1PlaceMatrix.html:118,Guid,Guide,118,doc/master/structROOT_1_1Math_1_1PlaceMatrix.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1PlaceMatrix.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::PlainParameters Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Math::PlainParameters Struct Reference. . Definition at line 101 of file MCParameters.h. #include <Math/MCParameters.h>; The documentation for this struct was generated from the following file:; math/mathmore/inc/Math/MCParameters.h. ROOTMathPlainParameters. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1PlainParameters.html:84,Guid,Guide,84,doc/master/structROOT_1_1Math_1_1PlainParameters.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1PlainParameters.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::PlusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepStd< T, D1, D2 > > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::PlusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepStd< T, D1, D2 > > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, class A>; struct ROOT::Math::PlusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepStd< T, D1, D2 > >Specialization for symmetrix += general : NOT Allowed operation. ; Definition at line 261 of file HelperOps.h. Static Public Member Functions; static void Evaluate (SMatrix< T, D1, D2, MatRepSym< T, D1 > > &, const Expr< A, T, D1, D2, MatRepStd< T, D1, D2 > > &);  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, class A > . static void ROOT::Math::PlusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepStd< T, D1, D2 > >::Evaluate ; (; SMatrix< T, D1, D2, MatRepSym< T, D1 > > & ; , . const Expr< A, T, D1, D2, MatRepStd< T, D1, D2 > > & ;  . ). inlinestatic . Definition at line 263 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathPlusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepStd< T, D1, D2 > >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1PlusEquals_3_01T_00_01D1_00_01D2_00_01A_00_01MatRepSym_3_01T_00_01D1_01_4_5eeb62950eb424c35f6b8a98dbf18743.html:148,Guid,Guide,148,doc/master/structROOT_1_1Math_1_1PlusEquals_3_01T_00_01D1_00_01D2_00_01A_00_01MatRepSym_3_01T_00_01D1_01_4_5eeb62950eb424c35f6b8a98dbf18743.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1PlusEquals_3_01T_00_01D1_00_01D2_00_01A_00_01MatRepSym_3_01T_00_01D1_01_4_5eeb62950eb424c35f6b8a98dbf18743.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::PlusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepSym< T, D1 > > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::PlusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepSym< T, D1 > > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, class A>; struct ROOT::Math::PlusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepSym< T, D1 > >Specialization for symmetric matrices Evaluate the expression performing a += operation for symmetric matrices Need to have a separate functions to avoid to modify two times the off-diagonal elements (i.e applying two times the expression) Need to check whether creating a temporary object with the expression result (like in op: A += A * B ) ; Definition at line 232 of file HelperOps.h. Static Public Member Functions; static void Evaluate (SMatrix< T, D1, D2, MatRepSym< T, D1 > > &lhs, const Expr< A, T, D1, D2, MatRepSym< T, D1 > > &rhs);  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, class A > . static void ROOT::Math::PlusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepSym< T, D1 > >::Evaluate ; (; SMatrix< T, D1, D2, MatRepSym< T, D1 > > & ; lhs, . const Expr< A, T, D1, D2, MatRepSym< T, D1 > > & ; rhs . ). inlinestatic . Definition at line 234 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathPlusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepSym< T, D1 > >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1PlusEquals_3_01T_00_01D1_00_01D2_00_01A_00_01MatRepSym_3_01T_00_01D1_01_4_ab389af18e6c21fe987654dcf40e7fea.html:144,Guid,Guide,144,doc/master/structROOT_1_1Math_1_1PlusEquals_3_01T_00_01D1_00_01D2_00_01A_00_01MatRepSym_3_01T_00_01D1_01_4_ab389af18e6c21fe987654dcf40e7fea.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1PlusEquals_3_01T_00_01D1_00_01D2_00_01A_00_01MatRepSym_3_01T_00_01D1_01_4_ab389af18e6c21fe987654dcf40e7fea.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::PlusEquals< T, D1, D2, A, R1, R2 > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::PlusEquals< T, D1, D2, A, R1, R2 > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, class A, class R1, class R2>; struct ROOT::Math::PlusEquals< T, D1, D2, A, R1, R2 >Evaluate the expression performing a += operation Need to check whether creating a temporary object with the expression result (like in op: A += A * B ) ; Definition at line 195 of file HelperOps.h. Static Public Member Functions; static void Evaluate (SMatrix< T, D1, D2, R1 > &lhs, const Expr< A, T, D1, D2, R2 > &rhs);  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, class A , class R1 , class R2 > . static void ROOT::Math::PlusEquals< T, D1, D2, A, R1, R2 >::Evaluate ; (; SMatrix< T, D1, D2, R1 > & ; lhs, . const Expr< A, T, D1, D2, R2 > & ; rhs . ). inlinestatic . Definition at line 197 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathPlusEquals. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1PlusEquals.html:112,Guid,Guide,112,doc/master/structROOT_1_1Math_1_1PlusEquals.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1PlusEquals.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Polar2D< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Attributes |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::Polar2D< T > Class Template ReferenceMath » Physics Vectors. ; template<class T>; class ROOT::Math::Polar2D< T >Class describing a polar 2D coordinate system based on r and phi Phi is restricted to be in the range [-PI,PI) ; See alsoOverview of the physics vector library; Class describing a 2D Polar coordinate system; (r, phi coordinates) ; Definition at line 45 of file Polar2D.h. Public Types; typedef T Scalar;  . Public Member Functions;  Polar2D ();  Default constructor with r=1,phi=0. ;  ; template<class CoordSystem > ; constexpr Polar2D (const CoordSystem &v);  Construct from any Vector or coordinate system implementing R() and Phi() ;  ;  Polar2D (const Polar2D &v);  copy constructor ;  ;  Polar2D (T r, T phi);  Construct from the polar coordinates: r and phi. ;  ; void GetCoordinates (Scalar &r, Scalar &phi) const;  get internal data into 2 Scalar numbers ;  ; Scalar Mag2 () const;  ; void Negate ();  negate the vector ;  ; bool operator!= (const Polar2D &rhs) const;  ; template<class CoordSystem > ; Polar2D & operator= (const CoordSystem &c);  generic assignment operator from any coordinate system ;  ; Polar2D & operator= (const Polar2D &v);  assignment operator ;  ; bool operator== (const Polar2D &rhs) const;  Exact equality. ;  ; Scalar Phi () const;  ; Scalar R () const;  ; void Rotate (T angle);  rotate the vector ;  ; void Scale (T a);  scale by a scalar quantity - for polar coordinates r changes ;  ; void SetCoordinates (Scalar r, Scalar phi);  Set internal data based on 2 Scalar numbers. ;  ; void SetPhi (const T &phi);  set the phi coordinate value keeping r constant ;  ; void SetR (const T &r);  set the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Polar2D.html:89,Guid,Guide,89,doc/master/classROOT_1_1Math_1_1Polar2D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Polar2D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Polar3D< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Attributes |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::Polar3D< T > Class Template ReferenceMath » Physics Vectors. ; template<class T>; class ROOT::Math::Polar3D< T >Class describing a polar coordinate system based on r, theta and phi Phi is restricted to be in the range [-PI,PI) ; Class describing a 3D Polar coordinate system (r, theta, phi coordinates); See alsoOverview of the physics vector library ; Definition at line 45 of file Polar3D.h. Public Types; typedef T Scalar;  . Public Member Functions;  Polar3D ();  Default constructor with r=theta=phi=0. ;  ; template<class CoordSystem > ; constexpr Polar3D (const CoordSystem &v);  Construct from any Vector or coordinate system implementing R(), Theta() and Phi() ;  ;  Polar3D (const Polar3D &v);  copy constructor ;  ;  Polar3D (T r, T theta, T phi);  Construct from the polar coordinates: r, theta and phi. ;  ; Scalar Eta () const;  ; void GetCoordinates (Scalar &r, Scalar &theta, Scalar &phi) const;  get internal data into 3 Scalar numbers ;  ; void GetCoordinates (Scalar dest[]) const;  get internal data into an array of 3 Scalar numbers ;  ; Scalar Mag2 () const;  ; void Negate ();  negate the vector ;  ; bool operator!= (const Polar3D &rhs) const;  ; template<class CoordSystem > ; Polar3D & operator= (const CoordSystem &c);  generic assignment operator from any coordinate system ;  ; Polar3D & operator= (const Polar3D &v);  assignment operator ;  ; bool operator== (const Polar3D &rhs) const;  Exact equality. ;  ; Scalar Perp2 () const;  ; Scalar Phi () const;  ; Scalar R () const;  ; Scalar Rho () const;  ; void Scale (T a);  scale by a scalar quantity - for polar coordinates r changes ;  ; void SetCoordinates (const S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Polar3D.html:89,Guid,Guide,89,doc/master/classROOT_1_1Math_1_1Polar3D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Polar3D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Polynomial Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::Polynomial Class ReferenceMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; Parametric Function class describing polynomials of order n. ; P(x) = p[0] + p[1]*x + p[2]*x**2 + ....... + p[n]*x**n; The class implements also the derivatives, dP(x)/dx and the dP(x)/dp[i].; The class provides also the method to find the roots of the polynomial. It uses analytical methods up to quartic polynomials.; Implements both the Parameteric function interface and the gradient interface since it provides the analytical gradient with respect to x ; Definition at line 64 of file Polynomial.h. Public Types; typedef ParamFunction< IParamGradFunction > ParFunc;  ;  Public Types inherited from ROOT::Math::ParamFunction< IParamGradFunction >; typedef IPFType::BaseFunc BaseFunc;  ; typedef IParamGradFunction BaseParFunc;  ;  Public Types inherited from ROOT::Math::IParametricGradFunctionOneDim; typedef IParametricFunctionOneDim::BaseFunc BaseFunc;  ; typedef IGradientFunctionOneDim BaseGradFunc;  ; typedef IParametricFunctionOneDim BaseParamFunc;  ;  Public Types inherited from ROOT::Math::IParametricFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  ;  Public Types inherited from ROOT::Math::IGradientFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  ; typedef IGradientFunctionOneDim BaseGrad;  . Public Member Functions;  Polynomial (double a, double b);  Construct a Polynomial of degree 1 : a*x + b. ;  ;  Polynomial (double a, double b, double c);  Construct a Polynomial of degree 2 : a*x**2 + b*x + c. ;  ;  Polynomial (double a, double b, double c, double d);  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Polynomial.html:78,Guid,Guide,78,doc/master/classROOT_1_1Math_1_1Polynomial.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Polynomial.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::PositionVector2D< CoordSystem, Tag > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; ROOT::Math::PositionVector2D< CoordSystem, Tag > Class Template ReferenceMath » Physics Vectors. ; template<class CoordSystem, class Tag = DefaultCoordinateSystemTag>; class ROOT::Math::PositionVector2D< CoordSystem, Tag >Class describing a generic position vector (point) in 2 dimensions. ; Class describing a 2D Position vector.; This class is templated on the type of Coordinate system. One example is the XYPoint which is a vector based on double precision x,y data members by using the ROOT::Math::Cartesian2D<double> Coordinate system. The class is having also an extra template parameter, the coordinate system tag, to be able to identify (tag) vector described in different reference coordinate system, like global or local coordinate systems.; See alsoOverview of the physics vector library ; Definition at line 50 of file PositionVector2D.h. Public Types; typedef Tag CoordinateSystemTag;  ; typedef CoordSystem CoordinateType;  ; typedef CoordSystem::Scalar Scalar;  . Public Member Functions; constexpr PositionVector2D ();  Default constructor. ;  ; template<class T > ; constexpr PositionVector2D (const DisplacementVector2D< T, Tag > &p);  Construct from an arbitrary displacement vector. ;  ; template<class ForeignVector > ; constexpr PositionVector2D (const ForeignVector &v);  Construct from a foreign 2D vector type, for example, Hep2Vector Precondition: v must implement methods x() and y() ;  ; template<class T > ; constexpr PositionVector2D (const PositionVector2D< T, Tag > &v);  Construct from a position vector expressed in different coordinates, or using a different Scalar type. ;  ; constexpr PositionVector2D (const Scalar &a, const Scalar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1PositionVector2D.html:113,Guid,Guide,113,doc/master/classROOT_1_1Math_1_1PositionVector2D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1PositionVector2D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::PositionVector3D< CoordSystem, Tag > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; ROOT::Math::PositionVector3D< CoordSystem, Tag > Class Template ReferenceMath » Physics Vectors. ; template<class CoordSystem, class Tag = DefaultCoordinateSystemTag>; class ROOT::Math::PositionVector3D< CoordSystem, Tag >Class describing a generic position vector (point) in 3 dimensions. ; Class describing a 3D Position vector.; This class is templated on the type of Coordinate system. One example is the XYZPoint which is a vector based on double precision x,y,z data members by using the ROOT::Math::Cartesian3D<double> Coordinate system. The class is having also an extra template parameter, the coordinate system tag, to be able to identify (tag) vector described in different reference coordinate system, like global or local coordinate systems.; See alsoOverview of the physics vector library ; Definition at line 55 of file PositionVector3D.h. Public Types; typedef Tag CoordinateSystemTag;  ; typedef CoordSystem CoordinateType;  ; typedef CoordSystem::Scalar Scalar;  . Public Member Functions; constexpr PositionVector3D ();  Default constructor. ;  ; template<class T > ; constexpr PositionVector3D (const DisplacementVector3D< T, Tag > &p);  Construct from an arbitrary displacement vector. ;  ; template<class ForeignVector > ; constexpr PositionVector3D (const ForeignVector &v);  Construct from a foreign 3D vector type, for example, Hep3Vector Precondition: v must implement methods x(), y() and z() ;  ; template<class T > ; constexpr PositionVector3D (const PositionVector3D< T, Tag > &v);  Construct from a position vector expressed in different coordinates, or using a different Scalar type. ;  ; constexpr PositionVector3D (const Scalar &a, cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1PositionVector3D.html:113,Guid,Guide,113,doc/master/classROOT_1_1Math_1_1PositionVector3D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1PositionVector3D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::PtEtaPhiE4D< ScalarType > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Attributes |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::PtEtaPhiE4D< ScalarType > Class Template ReferenceMath » Physics Vectors. ; template<class ScalarType>; class ROOT::Math::PtEtaPhiE4D< ScalarType >Class describing a 4D cylindrical coordinate system using Pt , Phi, Eta and E (or rho, phi, eta , T) The metric used is (-,-,-,+). ; Phi is restricted to be in the range [-PI,PI); See alsoOverview of the physics vector library ; Definition at line 54 of file PtEtaPhiE4D.h. Public Types; typedef ScalarType Scalar;  . Public Member Functions;  PtEtaPhiE4D ();  Default constructor gives zero 4-vector. ;  ; template<class CoordSystem > ; constexpr PtEtaPhiE4D (const CoordSystem &c);  Generic constructor from any 4D coordinate system implementing Pt(), Eta(), Phi() and E() ;  ;  PtEtaPhiE4D (const PtEtaPhiE4D &v);  copy constructor ;  ;  PtEtaPhiE4D (Scalar pt, Scalar eta, Scalar phi, Scalar e);  Constructor from pt, eta, phi, e values. ;  ; Scalar E () const;  ; Scalar Et () const;  transverse energy ;  ; Scalar Et2 () const;  transverse energy squared ;  ; Scalar Eta () const;  ; void GetCoordinates (Scalar &pt, Scalar &eta, Scalar &phi, Scalar &e) const;  get internal data into 4 Scalar numbers ;  ; void GetCoordinates (Scalar dest[]) const;  get internal data into an array of 4 Scalar numbers ;  ; Scalar M () const;  invariant mass ;  ; Scalar M2 () const;  vector magnitude squared (or mass squared) ;  ; Scalar Mag () const;  ; Scalar Mag2 () const;  ; Scalar Mt () const;  transverse mass ;  ; Scalar Mt2 () const;  transverse mass squared ;  ; void Negate ();  negate the 4-vector ;  ; bool operator!= (const PtEtaPhiE4D &rhs) const;  ; template<class CoordSystem > ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1PtEtaPhiE4D.html:102,Guid,Guide,102,doc/master/classROOT_1_1Math_1_1PtEtaPhiE4D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1PtEtaPhiE4D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::PtEtaPhiM4D< ScalarType > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Attributes |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::PtEtaPhiM4D< ScalarType > Class Template ReferenceMath » Physics Vectors. ; template<class ScalarType>; class ROOT::Math::PtEtaPhiM4D< ScalarType >Class describing a 4D cylindrical coordinate system using Pt , Phi, Eta and M (mass) The metric used is (-,-,-,+). ; Spacelike particles (M2 < 0) are described with negative mass values, but in this case m2 must always be less than P2 to preserve a positive value of E2 Phi is restricted to be in the range [-PI,PI); See alsoOverview of the physics vector library ; Definition at line 54 of file PtEtaPhiM4D.h. Public Types; typedef ScalarType Scalar;  . Public Member Functions;  PtEtaPhiM4D ();  Default constructor gives zero 4-vector (with zero mass) ;  ; template<class CoordSystem > ; constexpr PtEtaPhiM4D (const CoordSystem &c);  Generic constructor from any 4D coordinate system implementing Pt(), Eta(), Phi() and M() ;  ;  PtEtaPhiM4D (const PtEtaPhiM4D &v);  copy constructor ;  ;  PtEtaPhiM4D (Scalar pt, Scalar eta, Scalar phi, Scalar mass);  Constructor from pt, eta, phi, mass values. ;  ; Scalar E () const;  Energy (timelike component of momentum-energy 4-vector) ;  ; Scalar E2 () const;  energy squared ;  ; Scalar Et () const;  transverse energy ;  ; Scalar Et2 () const;  transverse energy squared ;  ; Scalar Eta () const;  ; void GetCoordinates (Scalar &pt, Scalar &eta, Scalar &phi, Scalar &mass) const;  get internal data into 4 Scalar numbers ;  ; void GetCoordinates (Scalar dest[]) const;  get internal data into an array of 4 Scalar numbers ;  ; Scalar M () const;  M() is the invariant mass; in this coordinate system it can be negagative if set that way. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1PtEtaPhiM4D.html:102,Guid,Guide,102,doc/master/classROOT_1_1Math_1_1PtEtaPhiM4D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1PtEtaPhiM4D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::PxPyPzE4D< ScalarType > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Attributes |; Private Attributes |; List of all members ; ROOT::Math::PxPyPzE4D< ScalarType > Class Template ReferenceMath » Physics Vectors. ; template<class ScalarType = double>; class ROOT::Math::PxPyPzE4D< ScalarType >Class describing a 4D cartesian coordinate system (x, y, z, t coordinates) or momentum-energy vectors stored as (Px, Py, Pz, E). ; The metric used is (-,-,-,+); See alsoOverview of the physics vector library ; Definition at line 44 of file PxPyPzE4D.h. Public Types; typedef ScalarType Scalar;  . Public Member Functions;  PxPyPzE4D ();  Default constructor with x=y=z=t=0. ;  ; template<class CoordSystem > ; constexpr PxPyPzE4D (const CoordSystem &v);  construct from any vector or coordinate system class implementing x(), y() and z() and t() ;  ;  PxPyPzE4D (const PxPyPzE4D &v);  copy constructor ;  ;  PxPyPzE4D (Scalar px, Scalar py, Scalar pz, Scalar e);  Constructor from x, y , z , t values. ;  ; Scalar E () const;  ; Scalar Et () const;  transverse energy ;  ; Scalar Et2 () const;  transverse energy squared ;  ; Scalar Eta () const;  pseudorapidity ;  ; void GetCoordinates (Scalar &px, Scalar &py, Scalar &pz, Scalar &e) const;  get internal data into 4 Scalar numbers ;  ; void GetCoordinates (Scalar dest[]) const;  get internal data into an array of 4 Scalar numbers ;  ; Scalar M () const;  invariant mass ;  ; Scalar M2 () const;  vector magnitude squared (or mass squared) ;  ; Scalar Mag () const;  ; Scalar Mag2 () const;  ; Scalar Mt () const;  transverse mass ;  ; Scalar Mt2 () const;  transverse mass squared ;  ; void Negate ();  negate the 4-vector ;  ; bool operator!= (const PxPyPzE4D &rhs) const;  ; template<class AnyCoordSystem > ; PxPyPzE4D & operator= (const AnyCoordSystem &v);  Assignment from a generic coordi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1PxPyPzE4D.html:100,Guid,Guide,100,doc/master/classROOT_1_1Math_1_1PxPyPzE4D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1PxPyPzE4D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::PxPyPzM4D< ScalarType > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Attributes |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::PxPyPzM4D< ScalarType > Class Template ReferenceMath » Physics Vectors. ; template<class ScalarType = double>; class ROOT::Math::PxPyPzM4D< ScalarType >Class describing a 4D coordinate system or momentum-energy vectors stored as (Px, Py, Pz, M). ; This system is useful to describe ultra-relativistic particles (like electrons at LHC) to avoid numerical errors evaluating the mass when E >>> m The metric used is (-,-,-,+) Spacelike particles (M2 < 0) are described with negative mass values, but in this case m2 must always be less than P2 to preserve a positive value of E2; See alsoOverview of the physics vector library ; Definition at line 49 of file PxPyPzM4D.h. Public Types; typedef ScalarType Scalar;  . Public Member Functions;  PxPyPzM4D ();  Default constructor with x=y=z=m=0. ;  ; template<class CoordSystem > ; constexpr PxPyPzM4D (const CoordSystem &v);  construct from any 4D coordinate system class implementing X(), Y(), X() and M() ;  ;  PxPyPzM4D (const PxPyPzM4D &v);  copy constructor ;  ;  PxPyPzM4D (Scalar px, Scalar py, Scalar pz, Scalar m);  Constructor from x, y , z , m values. ;  ; Scalar E () const;  Energy. ;  ; Scalar E2 () const;  energy squared ;  ; Scalar Et () const;  transverse energy ;  ; Scalar Et2 () const;  transverse energy squared ;  ; Scalar Eta () const;  pseudorapidity ;  ; void GetCoordinates (Scalar &px, Scalar &py, Scalar &pz, Scalar &m) const;  get internal data into 4 Scalar numbers ;  ; void GetCoordinates (Scalar dest[]) const;  get internal data into an array of 4 Scalar numbers ;  ; Scalar M () const;  ; Scalar M2 () const;  vector magnitude squared (or mass squared) In case of negative mass (spacelike pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1PxPyPzM4D.html:100,Guid,Guide,100,doc/master/classROOT_1_1Math_1_1PxPyPzM4D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1PxPyPzM4D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::QuasiRandom< Engine > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::QuasiRandom< Engine > Class Template ReferenceMath » MathCore » Interface classes for Random number generation | Math » MathMore » QuasiRandom number generators and distributions. ; template<class Engine>; class ROOT::Math::QuasiRandom< Engine >User class for MathMore random numbers template on the Engine type. ; The API of this class followed that of the class ROOT::Math::Random It must be implemented using as Engine one of the derived classes of ROOT::Math::GSLQuasiRandomEngine, like ROOT::Math::GSLQrngSobol ; Definition at line 60 of file QuasiRandom.h. Public Member Functions;  QuasiRandom (const Engine &e, unsigned int dimension=1);  Create a QuasiRandom generator based on a provided generic engine. ;  ;  QuasiRandom (unsigned int dimension=1);  Create a QuasiRandom generator. ;  ;  ~QuasiRandom ();  Destructor: call Terminate() function of engine to free any allocated resource. ;  ; unsigned int EngineSize () const;  Return the size of the generator state. ;  ; std::string Name () const;  Return the name of the generator. ;  ; unsigned int NDim () const;  Return the dimension of the generator. ;  ; double Next ();  Generate next quasi random numbers point (1 - dimension) ;  ; bool Next (double *x);  Generate next quasi random numbers points. ;  ; double Rndm ();  Generate quasi random numbers between ]0,1[ 0 and 1 are excluded Function to be compatible with ROOT TRandom compatibility. ;  ; bool RndmArray (int n, double *array);  Generate an array of random numbers between ]0,1[ Function to preserve ROOT Trandom compatibility The array will be filled as x1,y1,z1,....x2,y2,z2,... ;  ; bool Skip (unsigned int n);  skip the next n number and jumb directly to the current state + n ;  ; std::string Type () const;  Re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1QuasiRandom.html:98,Guid,Guide,98,doc/master/classROOT_1_1Math_1_1QuasiRandom.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1QuasiRandom.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Quaternion Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::Quaternion Class ReferenceMath » Physics Vectors. ; Rotation class with the (3D) rotation represented by a unit quaternion (u, i, j, k). ; This is the optimal representation for multiplication of multiple rotations, and for computation of group-manifold-invariant distance between two rotations. See also ROOT::Math::AxisAngle, ROOT::Math::EulerAngles, and ROOT::Math::Rotation3D.; See alsoOverview of the physics vector library ; Definition at line 49 of file Quaternion.h. Public Types; typedef double Scalar;  ; typedef DisplacementVector3D< Cartesian3D< double >, DefaultCoordinateSystemTag > XYZVector;  Rotation operation on a cartesian vector. ;  . Public Member Functions;  Quaternion ();  Default constructor (identity rotation) ;  ; template<class OtherRotation > ; constexpr Quaternion (const OtherRotation &r);  Construct from another supported rotation type (see gv_detail::convert ) ;  ; template<class IT > ;  Quaternion (IT begin, IT end);  Construct given a pair of pointers or iterators defining the beginning and end of an array of four Scalars. ;  ;  Quaternion (Scalar u, Scalar i, Scalar j, Scalar k);  Construct from four Scalars representing the coefficients of u, i, j, k. ;  ; Scalar Distance (const Quaternion &q) const;  Distance between two rotations in Quaternion form Note: The rotation group is isomorphic to a 3-sphere with diametrically opposite points identified. ;  ; template<class IT > ; void GetComponents (IT begin) const;  Get the components into data specified by an iterator begin. ;  ; template<class IT > ; void GetComponents (IT begin, IT end) const;  Get the components into data specified by an iterator begin and another to the end of the desired data (4 past start). ;  ; void GetComponents (Scalar &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Quaternion.html:78,Guid,Guide,78,doc/master/classROOT_1_1Math_1_1Quaternion.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Quaternion.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RMinimizer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; Private Attributes |; List of all members ; ROOT::Math::RMinimizer Class Reference. ; RMinimizer class. ; Minimizer class that uses the ROOT/R interface to pass functions and minimize them in R.; The class implements the ROOT::Math::Minimizer interface and can be instantiated using the ROOT plugin manager (plugin name is ""RMinimizer""). The various minimization algorithms (BFGS, Nelder-Mead, SANN, etc..) can be passed as an option. The default algorithm is BFGS.; The library for this and future R/ROOT classes is currently libRtools.so ; Definition at line 33 of file RMinimizer.h. Public Member Functions;  RMinimizer (Option_t *method);  Default constructor. ;  ;  ~RMinimizer () override;  Destructor. ;  ; double CovMatrix (unsigned int ivar, unsigned int jvar) const override;  return covariance matrices element for variables ivar,jvar if the variable is fixed the return value is zero The ordering of the variables is the same as in the parameter and errors vectors ;  ; const double * Errors () const override;  return errors at the minimum ;  ; bool GetCovMatrix (double *covMat) const override;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; double HessMatrix (unsigned int i, unsigned int j) const;  Returns the ith jth component of the Hessian matrix. ;  ; bool Minimize () override;  Function to find the minimum. ;  ; unsigned int NCalls () const override;  Returns the number of function calls. ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ;  Public Member Functions inherited from ROOT::Math::BasicMinimizer;  BasicMinimizer ();  Default constructor. ;  ;  ~BasicMinimizer () override;  Destructor. ;  ; bool FixVariable (unsigned int ivar) override;  fix an exist",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RMinimizer.html:78,Guid,Guide,78,doc/master/classROOT_1_1Math_1_1RMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RMinimizer.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Random< Engine > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::Random< Engine > Class Template ReferenceMath » MathCore » Interface classes for Random number generation. ; template<class Engine>; class ROOT::Math::Random< Engine >Documentation for the Random class. ; Definition at line 43 of file Random.h. Public Types; typedef Engine::BaseType EngineBaseType;  ; typedef RandomFunctions< Engine, EngineBaseType > RndmFunctions;  . Public Member Functions;  Random ();  ;  Random (unsigned int seed);  ; double Beta (double a, double b);  Beta distribution. ;  ; unsigned int Binomial (unsigned int ntot, double prob);  discrete distributions ;  ; double BreitWigner (double mean=0., double gamma=1);  Breit Wigner distribution. ;  ; double ChiSquare (double nu);  chi-square ;  ; void Circle (double &x, double &y, double r=1);  generate random numbers in a 2D circle of radius 1 ;  ; unsigned int EngineSize () const;  Return the size of the generator state. ;  ; double Exp (double tau);  Exponential distribution. ;  ; double FDist (double nu1, double nu2);  F-distribution. ;  ; RandomFunctions< Engine, EngineBaseType > & Functions ();  ; double Gamma (double a, double b);  Gamma distribution. ;  ; double Gaus (double mean=0, double sigma=1);  ; uint64_t Integer ();  ; double Landau (double m=0, double s=1);  Landau distribution. ;  ; double Logistic (double a);  Logistic distribution. ;  ; double LogNormal (double zeta, double sigma);  Log-normal distribution. ;  ; std::vector< unsigned int > Multinomial (unsigned int ntot, const std::vector< double > &p);  Multinomial distribution. ;  ; unsigned int NegativeBinomial (double n, double prob);  Negative Binomial distribution First parameter is n, second is probability To be consistent with Rando",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Random.html:93,Guid,Guide,93,doc/master/classROOT_1_1Math_1_1Random.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Random.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RandomFunctions< Engine, EngineBaseType > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::RandomFunctions< Engine, EngineBaseType > Class Template Reference. ; template<class Engine, class EngineBaseType>; class ROOT::Math::RandomFunctions< Engine, EngineBaseType >; Definition at line 140 of file RandomFunctions.h. Public Member Functions;  RandomFunctions (Engine &rng);  ;  ~RandomFunctions ();  destructor (no op) we do not maintain the engine) ;  ; double Beta (double, double);  ; int Binomial (int ntot, double prob);  Generate binomial numbers. ;  ; double BreitWigner (double mean, double gamma);  Return a number distributed following a BreitWigner function with mean and gamma. ;  ; double ChiSquare (double);  ; void Circle (double &x, double &y, double r);  Generates random vectors, uniformly distributed over a circle of given radius. ;  ; double Exp (double tau);  Returns an exponential deviate. ;  ; double FDist (double, double);  ; double Gamma (double, double);  methods which are only for GSL random generators ;  ; double Gaus (double mean, double sigma);  generate Gaussian number using default method ;  ; double GausACR (double mean, double sigma);  generate random numbers according to the Acceptance-Complement-Ratio method ;  ; double GausBM (double mean, double sigma);  generate Gaussian number using Box-Muller method ;  ; double Landau (double mu, double sigma);  Generate a random number following a Landau distribution with location parameter mu and scale parameter sigma: Landau( (x-mu)/sigma ) ;  ; double Logistic (double);  ; double LogNormal (double, double);  ; std::vector< unsigned int > MultiNomial (unsigned int, const std::vector< double > &);  ; unsigned int NegativeBinomial (double, double);  ; double operator() ();  non-virtual method",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RandomFunctions.html:118,Guid,Guide,118,doc/master/classROOT_1_1Math_1_1RandomFunctions.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RandomFunctions.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RandomFunctions< EngineType, ROOT::Math::GSLRandomEngine > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::RandomFunctions< EngineType, ROOT::Math::GSLRandomEngine > Class Template ReferenceMath » MathCore » Interface classes for Random number generation. ; template<class EngineType>; class ROOT::Math::RandomFunctions< EngineType, ROOT::Math::GSLRandomEngine >Specialized implementation of the Random functions based on the GSL library. ; These will work onlmy with a GSLRandomEngine type ; Definition at line 43 of file GSLRandomFunctions.h. Public Member Functions;  RandomFunctions ();  ;  RandomFunctions (EngineType &rng);  ; double Beta (double a, double b);  Beta distribution. ;  ; unsigned int Binomial (unsigned int ntot, double prob);  Binomial distribution. ;  ; double BreitWigner (double mean=0., double gamma=1);  Breit Wigner distribution. ;  ; double ChiSquare (double nu);  Chi square distribution. ;  ; void Circle (double &x, double &y, double r=1);  generate random numbers in a 2D circle of radious 1 ;  ; EngineType & Engine ();  ; double Exp (double tau);  Exponential distribution. ;  ; double FDist (double nu1, double nu2);  F distribution. ;  ; double Gamma (double a, double b);  Gamma distribution. ;  ; double Gaus (double mean=0, double sigma=1);  Gaussian distribution. ;  ; double GausBM (double mean=0, double sigma=1);  Gaussian distribution (Box-Muller method) ;  ; double GausR (double mean=0, double sigma=1);  Gaussian distribution (Ratio Method) ;  ; void Gaussian2D (double sigmaX, double sigmaY, double rho, double &x, double &y);  Bivariate Gaussian distribution with correlation. ;  ; void GaussianND (size_t n, const double *meanVec, const double *covMatrix, double *x, double *lmat=nullptr);  Multi-variate Gaussian distribution with correlation. ;  ; double GaussianTail (double a, double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RandomFunctions_3_01EngineType_00_01ROOT_1_1Math_1_1GSLRandomEngine_01_4.html:135,Guid,Guide,135,doc/master/classROOT_1_1Math_1_1RandomFunctions_3_01EngineType_00_01ROOT_1_1Math_1_1GSLRandomEngine_01_4.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RandomFunctions_3_01EngineType_00_01ROOT_1_1Math_1_1GSLRandomEngine_01_4.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::RandomFunctionsImpl< EngineBaseType > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::RandomFunctionsImpl< EngineBaseType > Class Template Reference. ; template<class EngineBaseType>; class ROOT::Math::RandomFunctionsImpl< EngineBaseType >Definition of the generic implementation class for the RandomFunctions. ; Needs to have specialized implementations on the different type of engines ; Definition at line 58 of file RandomFunctions.h. Public Member Functions; void SetEngine (void *);  . #include <Math/RandomFunctions.h>; Member Function Documentation. ◆ SetEngine(). template<class EngineBaseType > . void ROOT::Math::RandomFunctionsImpl< EngineBaseType >::SetEngine ; (; void * ; ). inline . Definition at line 60 of file RandomFunctions.h. The documentation for this class was generated from the following file:; math/mathcore/inc/Math/RandomFunctions.h. ROOTMathRandomFunctionsImpl. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RandomFunctionsImpl.html:114,Guid,Guide,114,doc/master/classROOT_1_1Math_1_1RandomFunctionsImpl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RandomFunctionsImpl.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RandomFunctionsImpl< TRandomEngine > Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; ROOT::Math::RandomFunctionsImpl< TRandomEngine > Class Reference. ; Implementation class for the RandomFunction for all the engined that derives from TRandomEngine class, which defines an interface which has TRandomEngine::Rndm() In this way we can have a common implementation for the RandomFunctions. ; Definition at line 70 of file RandomFunctions.h. Public Member Functions;  RandomFunctionsImpl ();  class constructor ;  ; int Binomial (int ntot, double prob);  Generate binomial numbers. ;  ; double BreitWigner (double mean, double gamma);  Return a number distributed following a BreitWigner function with mean and gamma. ;  ; void Circle (double &x, double &y, double r);  Generates random vectors, uniformly distributed over a circle of given radius. ;  ; double Exp (double tau);  Returns an exponential deviate. ;  ; double GausACR (double mean, double sigma);  generate random numbers according to the Acceptance-Complement-Ratio method ;  ; double GausBM (double mean, double sigma);  generate Gaussian number using Box-Muller method ;  ; double Landau (double mu, double sigma);  Generate a random number following a Landau distribution with location parameter mu and scale parameter sigma: Landau( (x-mu)/sigma ) ;  ; int Poisson (double mean);  Generates a random integer N according to a Poisson law. ;  ; double PoissonD (double mean);  Generates a random number according to a Poisson law. ;  ; void Rannor (double &a, double &b);  Generate numbers distributed following a gaussian with mean=0 and sigma=1. ;  ; void SetEngine (void *r);  ; void Sphere (double &x, double &y, double &z, double r);  Generates random vectors, uniformly distributed over the surface of a sphere of given radius. ;  ; doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RandomFunctionsImpl_3_01TRandomEngine_01_4.html:104,Guid,Guide,104,doc/master/classROOT_1_1Math_1_1RandomFunctionsImpl_3_01TRandomEngine_01_4.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RandomFunctionsImpl_3_01TRandomEngine_01_4.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RanluxppCompatEngineGslRanlxd< p > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::Math::RanluxppCompatEngineGslRanlxd< p > Class Template Referencefinal. ; template<int p>; class ROOT::Math::RanluxppCompatEngineGslRanlxd< p >Compatibility engine for gsl_rng_ranlxd* from the GNU Scientific Library. ; Definition at line 137 of file RanluxppEngine.h. Public Member Functions;  RanluxppCompatEngineGslRanlxd (uint64_t seed=1);  ;  ~RanluxppCompatEngineGslRanlxd () override;  ; uint64_t IntRndm ();  Generate a random integer value with 48 bits. ;  ; double operator() ();  Generate a floating point random number (non-virtual method) ;  ; double Rndm () override;  Generate a floating point random number with 48 bits of randomness. ;  ; void SetSeed (uint64_t seed);  Initialize and seed the state of the generator. ;  ; void Skip (uint64_t n);  Skip n random numbers without generating them. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static const char * Name ();  Get name of the generator. ;  . Private Types; using ImplType = RanluxppEngineImpl< 48, p >;  . Private Attributes; std::unique_ptr< ImplType > fImpl;  . #include <Math/RanluxppEngine.h>. Inheritance diagram for ROOT::Math::RanluxppCompatEngineGslRanlxd< p >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ImplType. template<int p> . using ROOT::Math::RanluxppCompatEngineGslRanlxd< p >::ImplType = RanluxppEngineImpl<48, p>. private . Definition at line 140 of file RanluxppEngine.h. Constructor & Destructor Documentation. ◆ RanluxppCompatEngineGslRanlxd(). template<int p> . ROOT::Math::RanluxppCompatEngineGslRanlxd< p >::Ranl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineGslRanlxd.html:111,Guid,Guide,111,doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineGslRanlxd.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineGslRanlxd.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RanluxppCompatEngineGslRanlxs< p > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::Math::RanluxppCompatEngineGslRanlxs< p > Class Template Referencefinal. ; template<int p>; class ROOT::Math::RanluxppCompatEngineGslRanlxs< p >Compatibility engine for gsl_rng_ranlxs* from the GNU Scientific Library. ; Definition at line 100 of file RanluxppEngine.h. Public Member Functions;  RanluxppCompatEngineGslRanlxs (uint64_t seed=1);  ;  ~RanluxppCompatEngineGslRanlxs () override;  ; uint64_t IntRndm ();  Generate a random integer value with 24 bits. ;  ; double operator() ();  Generate a floating point random number (non-virtual method) ;  ; double Rndm () override;  Generate a floating point random number with 24 bits of randomness. ;  ; void SetSeed (uint64_t seed);  Initialize and seed the state of the generator. ;  ; void Skip (uint64_t n);  Skip n random numbers without generating them. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static const char * Name ();  Get name of the generator. ;  . Private Types; using ImplType = RanluxppEngineImpl< 24, p >;  . Private Attributes; std::unique_ptr< ImplType > fImpl;  . #include <Math/RanluxppEngine.h>. Inheritance diagram for ROOT::Math::RanluxppCompatEngineGslRanlxs< p >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ImplType. template<int p> . using ROOT::Math::RanluxppCompatEngineGslRanlxs< p >::ImplType = RanluxppEngineImpl<24, p>. private . Definition at line 103 of file RanluxppEngine.h. Constructor & Destructor Documentation. ◆ RanluxppCompatEngineGslRanlxs(). template<int p> . ROOT::Math::RanluxppCompatEngineGslRanlxs< p >::Ranl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineGslRanlxs.html:111,Guid,Guide,111,doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineGslRanlxs.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineGslRanlxs.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RanluxppCompatEngineJames< p > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::Math::RanluxppCompatEngineJames< p > Class Template Referencefinal. ; template<int p>; class ROOT::Math::RanluxppCompatEngineJames< p >; Definition at line 61 of file RanluxppEngine.h. Public Member Functions;  RanluxppCompatEngineJames (uint64_t seed=314159265);  ;  ~RanluxppCompatEngineJames () override;  ; uint64_t IntRndm ();  Generate a random integer value with 24 bits. ;  ; double operator() ();  Generate a floating point random number (non-virtual method) ;  ; double Rndm () override;  Generate a floating point random number with 24 bits of randomness. ;  ; void SetSeed (uint64_t seed);  Initialize and seed the state of the generator. ;  ; void Skip (uint64_t n);  Skip n random numbers without generating them. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static const char * Name ();  Get name of the generator. ;  . Private Types; using ImplType = RanluxppEngineImpl< 24, p >;  . Private Attributes; std::unique_ptr< ImplType > fImpl;  . #include <Math/RanluxppEngine.h>. Inheritance diagram for ROOT::Math::RanluxppCompatEngineJames< p >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ImplType. template<int p> . using ROOT::Math::RanluxppCompatEngineJames< p >::ImplType = RanluxppEngineImpl<24, p>. private . Definition at line 64 of file RanluxppEngine.h. Constructor & Destructor Documentation. ◆ RanluxppCompatEngineJames(). template<int p> . ROOT::Math::RanluxppCompatEngineJames< p >::RanluxppCompatEngineJames ; (; uint64_t ; seed = 314159265). Definition at line 445 of file RanluxppEngineIm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineJames.html:107,Guid,Guide,107,doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineJames.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineJames.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RanluxppCompatEngineLuescherImpl< w, p > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::RanluxppCompatEngineLuescherImpl< w, p > Class Template Reference. ; template<int w, int p>; class ROOT::Math::RanluxppCompatEngineLuescherImpl< w, p >; Definition at line 575 of file RanluxppEngineImpl.cxx. Public Member Functions; uint64_t NextRandomBits ();  Return the next random bits, generate a new block if necessary. ;  ; double NextRandomFloat ();  Return a floating point number, converted from the next random bits. ;  ; void SetSeed (uint32_t s, bool ranlxd);  Initialize and seed the state of the generator as in Lüscher's ranlxs. ;  ; void Skip (uint64_t n);  Skip n random numbers without generating them. ;  . Private Attributes; int fNextState = 0;  The index of the next state. ;  ; RanluxppEngineImpl< w, p > fStates [4];  The states of this generator. ;  . Member Function Documentation. ◆ NextRandomBits(). template<int w, int p> . uint64_t ROOT::Math::RanluxppCompatEngineLuescherImpl< w, p >::NextRandomBits ; (; ). inline . Return the next random bits, generate a new block if necessary. ; Definition at line 583 of file RanluxppEngineImpl.cxx. ◆ NextRandomFloat(). template<int w, int p> . double ROOT::Math::RanluxppCompatEngineLuescherImpl< w, p >::NextRandomFloat ; (; ). inline . Return a floating point number, converted from the next random bits. ; Definition at line 591 of file RanluxppEngineImpl.cxx. ◆ SetSeed(). template<int w, int p> . void ROOT::Math::RanluxppCompatEngineLuescherImpl< w, p >::SetSeed ; (; uint32_t ; s, . bool ; ranlxd . ). inline . Initialize and seed the state of the generator as in Lüscher's ranlxs. ; Definition at line 599 of file RanluxppEngineImpl.cxx. ◆ Skip(). template<int w, int p> . void ROOT::Math::RanluxppCompatEngineLuescherImpl< w, p >::Skip ; (; uint6",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineLuescherImpl.html:117,Guid,Guide,117,doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineLuescherImpl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineLuescherImpl.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RanluxppCompatEngineLuescherRanlxd< p > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::Math::RanluxppCompatEngineLuescherRanlxd< p > Class Template Referencefinal. ; template<int p>; class ROOT::Math::RanluxppCompatEngineLuescherRanlxd< p >Compatibility engine for Lüscher's ranlxd implementation written in C. ; Definition at line 212 of file RanluxppEngine.h. Public Member Functions;  RanluxppCompatEngineLuescherRanlxd (uint64_t seed=314159265);  ;  ~RanluxppCompatEngineLuescherRanlxd () override;  ; uint64_t IntRndm ();  Generate a random integer value with 48 bits. ;  ; double operator() ();  Generate a floating point random number (non-virtual method) ;  ; double Rndm () override;  Generate a floating point random number with 48 bits of randomness. ;  ; void SetSeed (uint64_t seed);  Initialize and seed the state of the generator. ;  ; void Skip (uint64_t n);  Skip n random numbers without generating them. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static const char * Name ();  Get name of the generator. ;  . Private Types; using ImplType = RanluxppCompatEngineLuescherImpl< 48, p >;  . Private Attributes; std::unique_ptr< ImplType > fImpl;  . #include <Math/RanluxppEngine.h>. Inheritance diagram for ROOT::Math::RanluxppCompatEngineLuescherRanlxd< p >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ImplType. template<int p> . using ROOT::Math::RanluxppCompatEngineLuescherRanlxd< p >::ImplType = RanluxppCompatEngineLuescherImpl<48, p>. private . Definition at line 215 of file RanluxppEngine.h. Constructor & Destructor Documentation. ◆ RanluxppCompatEngineLuescherRanlxd(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineLuescherRanlxd.html:116,Guid,Guide,116,doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineLuescherRanlxd.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineLuescherRanlxd.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RanluxppCompatEngineLuescherRanlxs< p > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::Math::RanluxppCompatEngineLuescherRanlxs< p > Class Template Referencefinal. ; template<int p>; class ROOT::Math::RanluxppCompatEngineLuescherRanlxs< p >Compatibility engine for Lüscher's ranlxs implementation written in C. ; Definition at line 175 of file RanluxppEngine.h. Public Member Functions;  RanluxppCompatEngineLuescherRanlxs (uint64_t seed=314159265);  ;  ~RanluxppCompatEngineLuescherRanlxs () override;  ; uint64_t IntRndm ();  Generate a random integer value with 24 bits. ;  ; double operator() ();  Generate a floating point random number (non-virtual method) ;  ; double Rndm () override;  Generate a floating point random number with 24 bits of randomness. ;  ; void SetSeed (uint64_t seed);  Initialize and seed the state of the generator. ;  ; void Skip (uint64_t n);  Skip n random numbers without generating them. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static const char * Name ();  Get name of the generator. ;  . Private Types; using ImplType = RanluxppCompatEngineLuescherImpl< 24, p >;  . Private Attributes; std::unique_ptr< ImplType > fImpl;  . #include <Math/RanluxppEngine.h>. Inheritance diagram for ROOT::Math::RanluxppCompatEngineLuescherRanlxs< p >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ImplType. template<int p> . using ROOT::Math::RanluxppCompatEngineLuescherRanlxs< p >::ImplType = RanluxppCompatEngineLuescherImpl<24, p>. private . Definition at line 178 of file RanluxppEngine.h. Constructor & Destructor Documentation. ◆ RanluxppCompatEngineLuescherRanlxs(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineLuescherRanlxs.html:116,Guid,Guide,116,doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineLuescherRanlxs.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineLuescherRanlxs.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RanluxppCompatEngineStdRanlux24 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::Math::RanluxppCompatEngineStdRanlux24 Class Referencefinal. ; Compatibility engine for std::ranlux24 from the C++ standard. ; Definition at line 245 of file RanluxppEngine.h. Public Member Functions;  RanluxppCompatEngineStdRanlux24 (uint64_t seed=19780503);  ;  ~RanluxppCompatEngineStdRanlux24 () override;  ; uint64_t IntRndm ();  Generate a random integer value with 24 bits. ;  ; double operator() ();  Generate a floating point random number (non-virtual method) ;  ; double Rndm () override;  Generate a floating point random number with 24 bits of randomness. ;  ; void SetSeed (uint64_t seed);  Initialize and seed the state of the generator. ;  ; void Skip (uint64_t n);  Skip n random numbers without generating them. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static const char * Name ();  Get name of the generator. ;  . Private Types; using ImplType = RanluxppEngineImpl< 24, 223, 23 >;  . Private Attributes; std::unique_ptr< ImplType > fImpl;  . #include <Math/RanluxppEngine.h>. Inheritance diagram for ROOT::Math::RanluxppCompatEngineStdRanlux24:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ImplType. using ROOT::Math::RanluxppCompatEngineStdRanlux24::ImplType = RanluxppEngineImpl<24, 223, 23>. private . Definition at line 248 of file RanluxppEngine.h. Constructor & Destructor Documentation. ◆ RanluxppCompatEngineStdRanlux24(). ROOT::Math::RanluxppCompatEngineStdRanlux24::RanluxppCompatEngineStdRanlux24 ; (; uint64_t ; seed = 19780503). Definition at line 749 of file RanluxppEngineImpl.cxx. ◆ ~Ranlu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineStdRanlux24.html:99,Guid,Guide,99,doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineStdRanlux24.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineStdRanlux24.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RanluxppCompatEngineStdRanlux48 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::Math::RanluxppCompatEngineStdRanlux48 Class Referencefinal. ; Compatibility engine for std::ranlux48 from the C++ standard. ; Definition at line 273 of file RanluxppEngine.h. Public Member Functions;  RanluxppCompatEngineStdRanlux48 (uint64_t seed=19780503);  ;  ~RanluxppCompatEngineStdRanlux48 () override;  ; uint64_t IntRndm ();  Generate a random integer value with 48 bits. ;  ; double operator() ();  Generate a floating point random number (non-virtual method) ;  ; double Rndm () override;  Generate a floating point random number with 48 bits of randomness. ;  ; void SetSeed (uint64_t seed);  Initialize and seed the state of the generator. ;  ; void Skip (uint64_t n);  Skip n random numbers without generating them. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static const char * Name ();  Get name of the generator. ;  . Private Types; using ImplType = RanluxppEngineImpl< 48, 2 *389, 11 >;  . Private Attributes; std::unique_ptr< ImplType > fImpl;  . #include <Math/RanluxppEngine.h>. Inheritance diagram for ROOT::Math::RanluxppCompatEngineStdRanlux48:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ImplType. using ROOT::Math::RanluxppCompatEngineStdRanlux48::ImplType = RanluxppEngineImpl<48, 2 * 389, 11>. private . Definition at line 276 of file RanluxppEngine.h. Constructor & Destructor Documentation. ◆ RanluxppCompatEngineStdRanlux48(). ROOT::Math::RanluxppCompatEngineStdRanlux48::RanluxppCompatEngineStdRanlux48 ; (; uint64_t ; seed = 19780503). Definition at line 782 of file RanluxppEngineImpl.cxx. ◆",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineStdRanlux48.html:99,Guid,Guide,99,doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineStdRanlux48.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineStdRanlux48.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RanluxppEngine< p > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::Math::RanluxppEngine< p > Class Template Referencefinal. ; template<int p>; class ROOT::Math::RanluxppEngine< p >Implementation of the RANLUX++ generator. ; RANLUX++ is an LCG equivalent of RANLUX using 576 bit numbers.; The idea of the generator (such as the initialization method) and the algorithm for the modulo operation are described in A. Sibidanov, A revision of the subtract-with-borrow random numbergenerators, Computer Physics Communications*, 221(2017), 299-303, preprint https://arxiv.org/pdf/1705.03123.pdf; The code is loosely based on the Assembly implementation by A. Sibidanov available at https://github.com/sibidanov/ranluxpp/.; Compared to the original generator, this implementation contains a fix to ensure that the modulo operation of the LCG always returns the smallest value congruent to the modulus (based on notes by M. Lüscher). Also, the generator converts the LCG state back to RANLUX numbers (implementation based on notes by M. Lüscher). This avoids a bias in the generated numbers because the upper bits of the LCG state, that is smaller than the modulus \( m = 2^{576} - 2^{240} + 1 \) (not a power of 2!), have a higher probability of being 0 than 1. And finally, this implementation draws 48 random bits for each generated floating point number (instead of 52 bits as in the original generator) to maintain the theoretical properties from understanding the original transition function of RANLUX as a chaotic dynamical system. ; Definition at line 27 of file RanluxppEngine.h. Public Member Functions;  RanluxppEngine (uint64_t seed=314159265);  ;  ~RanluxppEngine () override;  ; uint64_t IntRndm ();  Generate a random integer value with 48 bits. ;  ; double opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppEngine.html:96,Guid,Guide,96,doc/master/classROOT_1_1Math_1_1RanluxppEngine.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppEngine.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RanluxppEngineImpl< w, p, u > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; ROOT::Math::RanluxppEngineImpl< w, p, u > Class Template Reference. ; template<int w, int p, int u>; class ROOT::Math::RanluxppEngineImpl< w, p, u >; Definition at line 149 of file RanluxppEngineImpl.cxx. Public Member Functions; uint64_t NextRandomBits ();  Return the next random bits, generate a new block if necessary. ;  ; double NextRandomFloat ();  Return a floating point number, converted from the next random bits. ;  ; void SetSeedGsl (uint32_t s, bool ranlxd);  Initialize and seed the state of the generator as in gsl_rng_ranlx*. ;  ; void SetSeedJames (uint64_t s);  Initialize and seed the state of the generator as in James' implementation. ;  ; void SetSeedSibidanov (uint64_t s);  Initialize and seed the state of the generator as proposed by Sibidanov. ;  ; void SetSeedStd24 (uint64_t s);  Initialize and seed the state of the generator as described by the C++ standard. ;  ; void SetSeedStd48 (uint64_t s);  Initialize and seed the state of the generator as described by the C++ standard. ;  ; void Skip (uint64_t n);  Skip n random numbers without generating them. ;  . Private Member Functions; void Advance ();  Produce next block of random bits. ;  ; void Advance (const uint64_t *a);  Advance with given multiplier. ;  ; void Skip24 ();  Skip 24 RANLUX numbers. ;  . Private Attributes; unsigned fCarry;  Carry bit of the RANLUX state. ;  ; int fPosition = 0;  Current position in bits. ;  ; uint64_t fState [9];  RANLUX state of the generator. ;  . Static Private Attributes; static constexpr const uint64_t * kA = RanluxppData<p>::kA;  ; static constexpr int kMaxPos = (u == 0) ? 9 * 64 : u * w;  . Friends; class RanluxppCompatEngineLuescherImpl< w, p >",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppEngineImpl.html:106,Guid,Guide,106,doc/master/classROOT_1_1Math_1_1RanluxppEngineImpl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppEngineImpl.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RetrieveMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepStd< T, D3, D4 > > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::RetrieveMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepStd< T, D3, D4 > > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, unsigned int D3, unsigned int D4>; struct ROOT::Math::RetrieveMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepStd< T, D3, D4 > >; Definition at line 481 of file HelperOps.h. Static Public Member Functions; static void Evaluate (SMatrix< T, D1, D2, MatRepSym< T, D1 > > &, const SMatrix< T, D3, D4, MatRepStd< T, D3, D4 > > &, unsigned int, unsigned int);  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, unsigned int D3, unsigned int D4> . static void ROOT::Math::RetrieveMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepStd< T, D3, D4 > >::Evaluate ; (; SMatrix< T, D1, D2, MatRepSym< T, D1 > > & ; , . const SMatrix< T, D3, D4, MatRepStd< T, D3, D4 > > & ; , . unsigned int ; , . unsigned int ;  . ). inlinestatic . Definition at line 482 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathRetrieveMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepStd< T, D3, D4 > >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1RetrieveMatrix_3_01T_00_01D1_00_01D2_00_01D3_00_01D4_00_01MatRepSym_3_01T_e30ff0328f3a8a31d82ee857be0ae304.html:157,Guid,Guide,157,doc/master/structROOT_1_1Math_1_1RetrieveMatrix_3_01T_00_01D1_00_01D2_00_01D3_00_01D4_00_01MatRepSym_3_01T_e30ff0328f3a8a31d82ee857be0ae304.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1RetrieveMatrix_3_01T_00_01D1_00_01D2_00_01D3_00_01D4_00_01MatRepSym_3_01T_e30ff0328f3a8a31d82ee857be0ae304.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RetrieveMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepSym< T, D3 > > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::RetrieveMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepSym< T, D3 > > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, unsigned int D3, unsigned int D4>; struct ROOT::Math::RetrieveMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepSym< T, D3 > >; Definition at line 493 of file HelperOps.h. Static Public Member Functions; static void Evaluate (SMatrix< T, D1, D2, MatRepSym< T, D1 > > &lhs, const SMatrix< T, D3, D4, MatRepSym< T, D3 > > &rhs, unsigned int row, unsigned int col);  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, unsigned int D3, unsigned int D4> . static void ROOT::Math::RetrieveMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepSym< T, D3 > >::Evaluate ; (; SMatrix< T, D1, D2, MatRepSym< T, D1 > > & ; lhs, . const SMatrix< T, D3, D4, MatRepSym< T, D3 > > & ; rhs, . unsigned int ; row, . unsigned int ; col . ). inlinestatic . Definition at line 494 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathRetrieveMatrix< T, D1, D2, D3, D4, MatRepSym< T, D1 >, MatRepSym< T, D3 > >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1RetrieveMatrix_3_01T_00_01D1_00_01D2_00_01D3_00_01D4_00_01MatRepSym_3_01T_4ccba38a48d60cbc2ebb58dc0ce640f3.html:153,Guid,Guide,153,doc/master/structROOT_1_1Math_1_1RetrieveMatrix_3_01T_00_01D1_00_01D2_00_01D3_00_01D4_00_01MatRepSym_3_01T_4ccba38a48d60cbc2ebb58dc0ce640f3.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1RetrieveMatrix_3_01T_00_01D1_00_01D2_00_01D3_00_01D4_00_01MatRepSym_3_01T_4ccba38a48d60cbc2ebb58dc0ce640f3.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RetrieveMatrix< T, D1, D2, D3, D4, R1, R2 > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::RetrieveMatrix< T, D1, D2, D3, D4, R1, R2 > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, unsigned int D3, unsigned int D4, class R1, class R2>; struct ROOT::Math::RetrieveMatrix< T, D1, D2, D3, D4, R1, R2 >Structure for getting sub matrices We have different cases according to the matrix representations. ; Definition at line 461 of file HelperOps.h. Static Public Member Functions; static void Evaluate (SMatrix< T, D1, D2, R1 > &lhs, const SMatrix< T, D3, D4, R2 > &rhs, unsigned int row, unsigned int col);  . #include <Math/HelperOps.h>; Member Function Documentation. ◆ Evaluate(). template<class T , unsigned int D1, unsigned int D2, unsigned int D3, unsigned int D4, class R1 , class R2 > . static void ROOT::Math::RetrieveMatrix< T, D1, D2, D3, D4, R1, R2 >::Evaluate ; (; SMatrix< T, D1, D2, R1 > & ; lhs, . const SMatrix< T, D3, D4, R2 > & ; rhs, . unsigned int ; row, . unsigned int ; col . ). inlinestatic . Definition at line 463 of file HelperOps.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/HelperOps.h. ROOTMathRetrieveMatrix. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1RetrieveMatrix.html:121,Guid,Guide,121,doc/master/structROOT_1_1Math_1_1RetrieveMatrix.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1RetrieveMatrix.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RichardsonDerivator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Math::RichardsonDerivator Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Differentiation. ; User class for calculating the derivatives of a function. ; It can calculate first (method Derivative1), second (method Derivative2) and third (method Derivative3) of a function.; It uses the Richardson extrapolation method for function derivation in a given interval. The method use 2 derivative estimates (one computed with step h and one computed with step h/2) to compute a third, more accurate estimation. It is equivalent to the 5-point method, which can be obtained with a Taylor expansion. A step size should be given, depending on x and f(x). An optimal step size value minimizes the truncation error of the expansion and the rounding error in evaluating x+h and f(x+h). A too small h will yield a too large rounding error while a too large h will give a large truncation error in the derivative approximation. A good discussion can be found in discussed in Chapter 5.7 of Numerical Recipes in C. By default a value of 0.001 is uses, acceptable in many cases.; This class is implemented using code previously in TF1::Derivate{,2,3}(). Now TF1 uses this class. ; Definition at line 55 of file RichardsonDerivator.h. Public Member Functions;  RichardsonDerivator (const RichardsonDerivator &rhs);  Copy constructor. ;  ;  RichardsonDerivator (const ROOT::Math::IGenFunction &f, double h=0.001, bool copyFunc=false);  Construct from function and step size. ;  ;  RichardsonDerivator (double h=0.001);  Default Constructor. ;  ;  ~RichardsonDerivator ();  Destructor: Removes function if needed. ;  ; double Derivative1 (const IGenFunction &f, double x, double h);  First Derivative calculation passing function object and step",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RichardsonDerivator.html:87,Guid,Guide,87,doc/master/classROOT_1_1Math_1_1RichardsonDerivator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RichardsonDerivator.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RootFinder Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::RootFinder Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » One-dimensional Root-Finding. ; User Class to find the Root of one dimensional functions. ; The GSL Methods are implemented in MathMore and they are loaded automatically via the plug-in manager; The possible types of Root-finding algorithms are: . Root Bracketing Algorithms which do not require function derivatives . RootFinder::kBRENT (default method implemented in MathCore) . RootFinder::kGSL_BISECTION . RootFinder::kGSL_FALSE_POS . RootFinder::kGSL_BRENT . Root Finding Algorithms using Derivatives . RootFinder::kGSL_NEWTON . RootFinder::kGSL_SECANT . RootFinder::kGSL_STEFFENSON . This class does not cupport copying ; Definition at line 73 of file RootFinder.h. Public Types; enum  EType { ;   kBRENT; , kGSL_BISECTION; , kGSL_FALSE_POS; , kGSL_BRENT; , ;   kGSL_NEWTON; , kGSL_SECANT; , kGSL_STEFFENSON. };  . Public Member Functions;  RootFinder (const RootFinder &)=delete;  ;  RootFinder (RootFinder &&)=delete;  ;  RootFinder (RootFinder::EType type=RootFinder::kBRENT);  Construct a Root-Finder algorithm. ;  ; virtual ~RootFinder ();  ; int Iterate ();  Perform a single iteration and return the Status. ;  ; int Iterations () const;  Return the number of iteration performed to find the Root. ;  ; const char * Name () const;  Return the current and latest estimate of the lower value of the Root-finding interval (for bracketing algorithms) ;  ; RootFinder & operator= (const RootFinder &rhs)=delete;  ; RootFinder & operator= (RootFinder &&rhs)=delete;  ; double Root () const;  Return the current and latest estimate of the Root. ;  ; bool SetFunction (const IGenFunction &f, double xlow, double xup);  Provide to the solver the function and th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RootFinder.html:78,Guid,Guide,78,doc/master/classROOT_1_1Math_1_1RootFinder.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RootFinder.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Roots Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; ROOT::Math::Roots Namespace Reference. Root-Finding Algorithms. ; More... Classes; class  Bisection;  Roots::Bisection Bisection algorithm, simplest algorithm for bracketing the roots of a function, but slowest one. More...;  ; class  Brent;  Brent-Dekker algorithm which combines an interpolation strategy with the bisection algorithm See the GSL manual for more information. More...;  ; class  FalsePos;  False Position algorithm based on linear interpolation. More...;  ; class  Newton;  a Newton algorithm, which computes the derivative at each iteration See the GSL manual for more information More...;  ; class  Secant;  Secant algorithm, simplified version of Newton method, which does not require the derivative at every step. More...;  ; class  Steffenson;  Steffenson method, providing the fastes convergence. More...;  . Detailed Description; Root-Finding Algorithms. . ROOTMathRoots. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Roots.html:77,Guid,Guide,77,doc/master/namespaceROOT_1_1Math_1_1Roots.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Roots.html,4,"['Guid', 'simpl']","['Guide', 'simplest', 'simplified']"
Usability,". ROOT: ROOT::Math::Rotation3D Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::Rotation3D Class ReferenceMath » Physics Vectors. ; Rotation class with the (3D) rotation represented by a 3x3 orthogonal matrix. ; This is the optimal representation for application to vectors. See also ROOT::Math::AxisAngle, ROOT::Math::EulerAngles, and ROOT::Math::Quaternion for classes which have conversion operators to Rotation3D.; All Rotations types (not only Rotation3D) can be applied to all 3D Vector classes (like ROOT::Math::DisplacementVector3D and ROOT::Math::PositionVector3D) and also to the 4D Vectors (ROOT::Math::LorentzVector classes), acting on the 3D components. A rotation operation is applied by using the operator() or the operator *. With the operator * is possible also to combine rotations. Note that the operator is NOT commutative, the order how the rotations are applied is relevant.; See alsoOverview of the physics vector library ; Definition at line 67 of file Rotation3D.h. Public Types; enum  ERotation3DMatrixIndex { ;   kXX = 0; , kXY = 1; , kXZ = 2; , kYX = 3; , ;   kYY = 4; , kYZ = 5; , kZX = 6; , kZY = 7; , ;   kZZ = 8. };  ; typedef double Scalar;  . Public Member Functions;  Rotation3D ();  Default constructor (identity rotation) ;  ;  Rotation3D (AxisAngle const &a);  Construct from an AxisAngle. ;  ; template<class ForeignMatrix > ; constexpr Rotation3D (const ForeignMatrix &m);  Construct from a linear algebra matrix of size at least 3x3, which must support operator()(i,j) to obtain elements (0,0) thru (2,2). ;  ; template<class ForeignVector > ;  Rotation3D (const ForeignVector &v1, const ForeignVector &v2, const ForeignVector &v3);  Construct from three orthonormal vectors (which must have methods x(), y() and z()) which will be used as the columns of the rotation matrix. ;  ;  Rotatio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Rotation3D.html:78,Guid,Guide,78,doc/master/classROOT_1_1Math_1_1Rotation3D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Rotation3D.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RotationX Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::RotationX Class ReferenceMath » Physics Vectors. ; Rotation class representing a 3D rotation about the X axis by the angle of rotation. ; For efficiency reason, in addition to the angle, the sine and cosine of the angle are held; See alsoOverview of the physics vector library ; Definition at line 45 of file RotationX.h. Public Types; typedef double Scalar;  . Public Member Functions;  RotationX ();  Default constructor (identity rotation) ;  ;  RotationX (Scalar angle);  Construct from an angle. ;  ; Scalar Angle () const;  Angle of rotation. ;  ; Scalar CosAngle () const;  ; void GetAngle (Scalar &angle) const;  Get the angle. ;  ; void GetComponents (Scalar &angle) const;  ; RotationX Inverse () const;  Return inverse of a rotation. ;  ; void Invert ();  Invert a rotation in place. ;  ; bool operator!= (const RotationX &rhs) const;  ; template<class CoordSystem , class U > ; DisplacementVector3D< CoordSystem, U > operator() (const DisplacementVector3D< CoordSystem, U > &v) const;  Rotation operation on a cartesian vector. ;  ; template<class ForeignVector > ; ForeignVector operator() (const ForeignVector &v) const;  Rotation operation on an arbitrary vector v. ;  ; template<class CoordSystem > ; LorentzVector< CoordSystem > operator() (const LorentzVector< CoordSystem > &v) const;  Rotation operation on a Lorentz vector in any 4D coordinate system. ;  ; template<class CoordSystem , class U > ; PositionVector3D< CoordSystem, U > operator() (const PositionVector3D< CoordSystem, U > &v) const;  Rotation operation on a position vector in any coordinate system. ;  ; template<class AVector > ; AVector operator* (const AVector &v) const;  Overload operator * for rotation on a vector. ;  ; RotationX operator* (const RotationX &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RotationX.html:77,Guid,Guide,77,doc/master/classROOT_1_1Math_1_1RotationX.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RotationX.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RotationY Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::RotationY Class ReferenceMath » Physics Vectors. ; Rotation class representing a 3D rotation about the Y axis by the angle of rotation. ; For efficiency reason, in addition to the angle, the sine and cosine of the angle are held; See alsoOverview of the physics vector library ; Definition at line 45 of file RotationY.h. Public Types; typedef double Scalar;  . Public Member Functions;  RotationY ();  Default constructor (identity rotation) ;  ;  RotationY (Scalar angle);  Construct from an angle. ;  ; Scalar Angle () const;  Angle of rotation. ;  ; Scalar CosAngle () const;  ; void GetAngle (Scalar &angle) const;  Get the angle. ;  ; void GetComponents (Scalar &angle) const;  ; RotationY Inverse () const;  Return inverse of a rotation. ;  ; void Invert ();  Invert a rotation in place. ;  ; bool operator!= (const RotationY &rhs) const;  ; template<class CoordSystem , class U > ; DisplacementVector3D< CoordSystem, U > operator() (const DisplacementVector3D< CoordSystem, U > &v) const;  Rotation operation on a displacement vector in any coordinate system. ;  ; template<class ForeignVector > ; ForeignVector operator() (const ForeignVector &v) const;  Rotation operation on an arbitrary vector v. ;  ; template<class CoordSystem > ; LorentzVector< CoordSystem > operator() (const LorentzVector< CoordSystem > &v) const;  Rotation operation on a Lorentz vector in any 4D coordinate system. ;  ; template<class CoordSystem , class U > ; PositionVector3D< CoordSystem, U > operator() (const PositionVector3D< CoordSystem, U > &v) const;  Rotation operation on a position vector in any coordinate system. ;  ; template<class AVector > ; AVector operator* (const AVector &v) const;  Overload operator * for rotation on a vector. ;  ; RotationY ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RotationY.html:77,Guid,Guide,77,doc/master/classROOT_1_1Math_1_1RotationY.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RotationY.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RotationZ Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::RotationZ Class ReferenceMath » Physics Vectors. ; Rotation class representing a 3D rotation about the Z axis by the angle of rotation. ; For efficiency reason, in addition to the angle, the sine and cosine of the angle are held; See alsoOverview of the physics vector library ; Definition at line 45 of file RotationZ.h. Public Types; typedef double Scalar;  . Public Member Functions;  RotationZ ();  Default constructor (identity rotation) ;  ;  RotationZ (Scalar angle);  Construct from an angle. ;  ; Scalar Angle () const;  Angle of rotation. ;  ; Scalar CosAngle () const;  ; void GetAngle (Scalar &angle) const;  Get the angle. ;  ; void GetComponents (Scalar &angle) const;  ; RotationZ Inverse () const;  Return inverse of a rotation. ;  ; void Invert ();  Invert a rotation in place. ;  ; bool operator!= (const RotationZ &rhs) const;  ; template<class CoordSystem , class U > ; DisplacementVector3D< CoordSystem, U > operator() (const DisplacementVector3D< CoordSystem, U > &v) const;  Rotation operation on a displacement vector in any coordinate system. ;  ; template<class ForeignVector > ; ForeignVector operator() (const ForeignVector &v) const;  Rotation operation on an arbitrary vector v. ;  ; template<class CoordSystem > ; LorentzVector< CoordSystem > operator() (const LorentzVector< CoordSystem > &v) const;  Rotation operation on a Lorentz vector in any 4D coordinate system. ;  ; template<class CoordSystem , class U > ; PositionVector3D< CoordSystem, U > operator() (const PositionVector3D< CoordSystem, U > &v) const;  Rotation operation on a position vector in any coordinate system. ;  ; template<class AVector > ; AVector operator* (const AVector &v) const;  Overload operator * for rotation on a vector. ;  ; RotationZ ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RotationZ.html:77,Guid,Guide,77,doc/master/classROOT_1_1Math_1_1RotationZ.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RotationZ.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RotationZYX Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::RotationZYX Class ReferenceMath » Physics Vectors. ; Rotation class with the (3D) rotation represented by angles describing first a rotation of an angle phi (yaw) about the Z axis, followed by a rotation of an angle theta (pitch) about the Y axis, followed by a third rotation of an angle psi (roll) about the X axis. ; Note that the rotations are extrinsic rotations happening around a fixed coordinate system. This is different than the convention of the ROOT::Math::EulerAngles class, where the rotation are intrinsic. Also it has not to be confused with the typical Goldstein definition of the Euler Angles (Z-X-Z or 313 sequence) which is used by the ROOT::Math::EulerAngles class, while the sequence here is Z-Y-X or 321. Applying a RotationZYX(phi, theta, psi) to a vector is then equal to applying RotationX(psi) * RotationY(theta) * RotationZ(phi) to the same vector.; See alsoOverview of the physics vector library ; Definition at line 63 of file RotationZYX.h. Public Types; typedef double Scalar;  . Public Member Functions;  RotationZYX ();  Default constructor. ;  ; template<class OtherRotation > ; constexpr RotationZYX (const OtherRotation &r);  Construct from another supported rotation type (see gv_detail::convert ) ;  ; template<class IT > ;  RotationZYX (IT begin, IT end);  Construct given a pair of pointers or iterators defining the beginning and end of an array of three Scalars, to be treated as the angles phi, theta and psi. ;  ;  RotationZYX (Scalar phi, Scalar theta, Scalar psi);  Constructor from phi, theta and psi. ;  ; template<class R > ; Scalar Distance (const R &r) const;  Distance between two rotations. ;  ; template<class IT > ; void GetComponents (IT begin) const;  Get ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RotationZYX.html:79,Guid,Guide,79,doc/master/classROOT_1_1Math_1_1RotationZYX.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RotationZYX.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::RowOffsets< D > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Math::RowOffsets< D > Struct Template Reference. ; template<unsigned int D>; struct ROOT::Math::RowOffsets< D >Static structure to keep the conversion from (i,j) to offsets in the storage data for a symmetric matrix. ; Definition at line 131 of file MatrixRepresentationsStatic.h. Public Member Functions;  RowOffsets ();  ; int apply (unsigned int i) const;  ; int operator() (unsigned int i, unsigned int j) const;  . Public Attributes; int fOff [D *D];  . #include <Math/MatrixRepresentationsStatic.h>; Constructor & Destructor Documentation. ◆ RowOffsets(). template<unsigned int D> . ROOT::Math::RowOffsets< D >::RowOffsets ; (; ). inline . Definition at line 132 of file MatrixRepresentationsStatic.h. Member Function Documentation. ◆ apply(). template<unsigned int D> . int ROOT::Math::RowOffsets< D >::apply ; (; unsigned int ; i); const. inline . Definition at line 145 of file MatrixRepresentationsStatic.h. ◆ operator()(). template<unsigned int D> . int ROOT::Math::RowOffsets< D >::operator() ; (; unsigned int ; i, . unsigned int ; j . ); const. inline . Definition at line 144 of file MatrixRepresentationsStatic.h. Member Data Documentation. ◆ fOff. template<unsigned int D> . int ROOT::Math::RowOffsets< D >::fOff[D *D]. Definition at line 146 of file MatrixRepresentationsStatic.h. Collaboration diagram for ROOT::Math::RowOffsets< D >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/MatrixRepresentationsStatic.h. ROOTMathRowOffsets. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1RowOffsets.html:93,Guid,Guide,93,doc/master/structROOT_1_1Math_1_1RowOffsets.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1RowOffsets.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::SDeterminant< n, idim > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::SDeterminant< n, idim > Class Template Reference. ; template<unsigned int n, unsigned int idim = n>; class ROOT::Math::SDeterminant< n, idim >Dsfact. ; Compute determinant of a symmetric, positive definite matrix of dimension \(idim\) and order \(n\).; AuthorT. Glebe ; Definition at line 49 of file Dsfact.h. Static Public Member Functions; template<class T > ; static bool Dsfact (MatRepStd< T, n, idim > &rhs, T &det);  ; template<class T > ; static bool Dsfact (MatRepSym< T, n > &rhs, T &det);  . #include <Math/Dsfact.h>; Member Function Documentation. ◆ Dsfact() [1/2]. template<unsigned int n, unsigned int idim = n> . template<class T > . static bool ROOT::Math::SDeterminant< n, idim >::Dsfact ; (; MatRepStd< T, n, idim > & ; rhs, . T & ; det . ). inlinestatic . Definition at line 53 of file Dsfact.h. ◆ Dsfact() [2/2]. template<unsigned int n, unsigned int idim = n> . template<class T > . static bool ROOT::Math::SDeterminant< n, idim >::Dsfact ; (; MatRepSym< T, n > & ; rhs, . T & ; det . ). inlinestatic . Definition at line 118 of file Dsfact.h. The documentation for this class was generated from the following file:; math/smatrix/inc/Math/Dsfact.h. ROOTMathSDeterminant. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1SDeterminant.html:100,Guid,Guide,100,doc/master/classROOT_1_1Math_1_1SDeterminant.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1SDeterminant.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::SInverter< T, n, idim > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::SInverter< T, n, idim > Class Template Reference. ; template<class T, int n, int idim>; class ROOT::Math::SInverter< T, n, idim >Dsinv. ; Compute inverse of a symmetric, positive definite matrix of dimension \(idim\) and order \(n\).; AuthorT. Glebe ; Definition at line 44 of file Dsinv.h. Static Public Member Functions; static bool Dsinv (MatRepSym< T, n > &rhs);  ; template<class MatrixRep > ; static bool Dsinv (MatrixRep &rhs);  . #include <Math/Dsinv.h>; Member Function Documentation. ◆ Dsinv() [1/2]. template<class T , int n, int idim> . static bool ROOT::Math::SInverter< T, n, idim >::Dsinv ; (; MatRepSym< T, n > & ; rhs). inlinestatic . Definition at line 144 of file Dsinv.h. ◆ Dsinv() [2/2]. template<class T , int n, int idim> . template<class MatrixRep > . static bool ROOT::Math::SInverter< T, n, idim >::Dsinv ; (; MatrixRep & ; rhs). inlinestatic . Definition at line 49 of file Dsinv.h. The documentation for this class was generated from the following file:; math/smatrix/inc/Math/Dsinv.h. ROOTMathSInverter. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1SInverter.html:100,Guid,Guide,100,doc/master/classROOT_1_1Math_1_1SInverter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1SInverter.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::SMatrix< T, D1, D2, R > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; List of all members ; ROOT::Math::SMatrix< T, D1, D2, R > Class Template ReferenceMath » SMatrix Package » Matrix and Vector classes. ; template<class T, unsigned int D1, unsigned int D2 = D1, class R = MatRepStd<T, D1, D2>>; class ROOT::Math::SMatrix< T, D1, D2, R >SMatrix: a generic fixed size D1 x D2 Matrix class. ; The class is template on the scalar type, on the matrix sizes: D1 = number of rows and D2 = number of columns amd on the representation storage type. By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T), but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only D*(D+1)/2.; See SMatrix Class Properties.; Original author is Thorsten Glebe HERA-B Collaboration, MPI Heidelberg (Germany); AuthorsT. Glebe, L. Moneta and J. Palacios ; Definition at line 101 of file SMatrix.h. Classes; class  SMatrixRow;  ; class  SMatrixRow_const;  . Public Types; — Matrix dimension —; enum  { kRows = D1; , kCols = D2; , kSize = D1*D2; };  Enumeration defining the matrix dimension, number of rows, columns and size = rows*columns) More...;  ; — Typedefs —; typedef T value_type;  contained scalar type ;  ; typedef R rep_type;  storage representation type ;  ; typedef T * iterator;  STL iterator interface. ;  ; typedef const T * const_iterator;  STL const_iterator interface. ;  . Public Member Functions; — Constructors and Assignment —;  SMatrix ();  Default constructor: ;  ;  SMatrix (SMatrixNoInit);  construct from without initialization ;  ;  SMatrix (SMatrixIdentity);  construct from an identity matrix ;  ;  SMatrix (const SMatrix< T, D1, D2, R > &rhs);  copy constructor (from a matrix of the same representation ;  ; template<class R2 > ;  SMatrix (const SMatrix< T, D1, D2, R2 > &rhs);  construct from a matrix with different representa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1SMatrix.html:100,Guid,Guide,100,doc/master/classROOT_1_1Math_1_1SMatrix.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1SMatrix.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::SMatrixIdentity Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Math::SMatrixIdentity Struct Reference. . Definition at line 72 of file SMatrix.h. #include <Math/SMatrix.h>; The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/SMatrix.h. ROOTMathSMatrixIdentity. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:24 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1SMatrixIdentity.html:84,Guid,Guide,84,doc/master/structROOT_1_1Math_1_1SMatrixIdentity.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1SMatrixIdentity.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::SMatrixNoInit Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Math::SMatrixNoInit Struct Reference. . Definition at line 73 of file SMatrix.h. #include <Math/SMatrix.h>; The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/SMatrix.h. ROOTMathSMatrixNoInit. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:24 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1SMatrixNoInit.html:82,Guid,Guide,82,doc/master/structROOT_1_1Math_1_1SMatrixNoInit.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1SMatrixNoInit.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::SVector< T, D > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; List of all members ; ROOT::Math::SVector< T, D > Class Template ReferenceMath » SMatrix Package » Matrix and Vector classes. ; template<class T, unsigned int D>; class ROOT::Math::SVector< T, D >SVector: a generic fixed size Vector class. ; The class is template on the scalar type and on the vector size D. See SVector Class Properties; Original author is Thorsten Glebe HERA-B Collaboration, MPI Heidelberg (Germany); AuthorsT. Glebe, L. Moneta and J. Palacios ; Definition at line 75 of file SVector.h. Public Types; — Typedefs —; typedef T value_type;  contained scalar type ;  ; typedef T * iterator;  STL iterator interface. ;  ; typedef const T * const_iterator;  STL const_iterator interface. ;  . Public Member Functions; — Constructors —;  SVector ();  Default constructor: vector filled with zero values. ;  ; template<class A > ;  SVector (const VecExpr< A, T, D > &rhs);  construct from a vector expression ;  ;  SVector (const SVector< T, D > &rhs);  copy constructor ;  ;  SVector (const T *a, unsigned int len);  fill from array with len must be equal to D! ;  ;  SVector (const_iterator begin, const_iterator end);  fill from a SVector iterator of type T* (for ambiguities iterator cannot be generic ) ;  ;  SVector (const T &a1);  construct a vector of size 1 from a single scalar value ;  ;  SVector (const T &a1, const T &a2);  construct a vector of size 2 from 2 scalar values ;  ;  SVector (const T &a1, const T &a2, const T &a3);  construct a vector of size 3 from 3 scalar values ;  ;  SVector (const T &a1, const T &a2, const T &a3, const T &a4);  construct a vector of size 4 from 4 scalar values ;  ;  SVector (const T &a1, const T &a2, const T &a3, const T &a4, const T &a5);  construct a vector of size 5 from 5 scalar values ;  ;  SVector (const T &a1, const T &a2, const T &a3, const T &a4, const T &a5,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1SVector.html:92,Guid,Guide,92,doc/master/classROOT_1_1Math_1_1SVector.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1SVector.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::Sampler Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Variables ; ROOT::Math::Sampler Namespace Reference. Variables; static std::string gDefaultAlgorithm1D = ""auto"";  ; static std::string gDefaultAlgorithmND = ""vnrou"";  ; static int gDefaultPrintLevel = 0;  ; static std::string gDefaultSampler = ""Unuran"";  . Variable Documentation. ◆ gDefaultAlgorithm1D. std::string ROOT::Math::Sampler::gDefaultAlgorithm1D = ""auto"". static . Definition at line 25 of file DistSamplerOptions.cxx. ◆ gDefaultAlgorithmND. std::string ROOT::Math::Sampler::gDefaultAlgorithmND = ""vnrou"". static . Definition at line 26 of file DistSamplerOptions.cxx. ◆ gDefaultPrintLevel. int ROOT::Math::Sampler::gDefaultPrintLevel = 0. static . Definition at line 27 of file DistSamplerOptions.cxx. ◆ gDefaultSampler. std::string ROOT::Math::Sampler::gDefaultSampler = ""Unuran"". static . Definition at line 24 of file DistSamplerOptions.cxx. ROOTMathSampler. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Sampler.html:79,Guid,Guide,79,doc/master/namespaceROOT_1_1Math_1_1Sampler.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Sampler.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::SinVariableTransformation Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::SinVariableTransformation Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; Sin Transformation class for dealing with double bounded variables. ; Definition at line 38 of file MinimizerVariableTransformation.h. Public Member Functions;  ~SinVariableTransformation () override;  ; double DInt2Ext (double value, double lower, double upper) const override;  ; double Ext2int (double value, double lower, double upper) const override;  ; double Int2ext (double value, double lower, double upper) const override;  ;  Public Member Functions inherited from ROOT::Math::MinimizerVariableTransformation; virtual ~MinimizerVariableTransformation ();  . #include <Math/MinimizerVariableTransformation.h>. Inheritance diagram for ROOT::Math::SinVariableTransformation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~SinVariableTransformation(). ROOT::Math::SinVariableTransformation::~SinVariableTransformation ; (; ). inlineoverride . Definition at line 42 of file MinimizerVariableTransformation.h. Member Function Documentation. ◆ DInt2Ext(). double ROOT::Math::SinVariableTransformation::DInt2Ext ; (; double ; value, . double ; lower, . double ; upper . ); const. overridevirtual . Implements ROOT::Math::MinimizerVariableTransformation.; Definition at line 50 of file MinimizerVariableTransformation.cxx. ◆ Ext2int(). double ROOT::Math::SinVariableTransformation::Ext2int ; (; double ; value, . double ; lower, . double ; upper . ); const. overridevirtual . Implements ROOT::Math::MinimizerVariableTransformation.; Definition at line 23 of file MinimizerVariableTransformation.cxx. ◆ Int2ext(). double ROOT::Math::SinVariableT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1SinVariableTransformation.html:93,Guid,Guide,93,doc/master/classROOT_1_1Math_1_1SinVariableTransformation.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1SinVariableTransformation.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::SkipFunction< 0 > Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::SkipFunction< 0 > Struct Reference. . Definition at line 84 of file MixMaxEngine.icc. Static Public Member Functions; template<class Engine > ; static void Apply (Engine *, int, int);  . Member Function Documentation. ◆ Apply(). template<class Engine > . static void ROOT::Math::SkipFunction< 0 >::Apply ; (; Engine * ; , . int ; , . int ;  . ). inlinestatic . Definition at line 86 of file MixMaxEngine.icc. The documentation for this struct was generated from the following file:; math/mathcore/inc/Math/MixMaxEngine.icc. ROOTMathSkipFunction< 0 >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1SkipFunction_3_010_01_4.html:86,Guid,Guide,86,doc/master/structROOT_1_1Math_1_1SkipFunction_3_010_01_4.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1SkipFunction_3_010_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::SkipFunction< SkipNumber > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::SkipFunction< SkipNumber > Struct Template Reference. ; template<int SkipNumber>; struct ROOT::Math::SkipFunction< SkipNumber >; Definition at line 73 of file MixMaxEngine.icc. Static Public Member Functions; template<class Engine > ; static void Apply (Engine *rng, int counter, int n);  . Member Function Documentation. ◆ Apply(). template<int SkipNumber> . template<class Engine > . static void ROOT::Math::SkipFunction< SkipNumber >::Apply ; (; Engine * ; rng, . int ; counter, . int ; n . ). inlinestatic . Definition at line 75 of file MixMaxEngine.icc. The documentation for this struct was generated from the following file:; math/mathcore/inc/Math/MixMaxEngine.icc. ROOTMathSkipFunction. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1SkipFunction.html:104,Guid,Guide,104,doc/master/structROOT_1_1Math_1_1SkipFunction.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1SkipFunction.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::Sqr< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::Sqr< T > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class T>; class ROOT::Math::Sqr< T >Unary Square Operation Class. ; Definition at line 194 of file UnaryOperators.h. Static Public Member Functions; static T apply (const T &rhs);  . #include <Math/UnaryOperators.h>; Member Function Documentation. ◆ apply(). template<class T > . static T ROOT::Math::Sqr< T >::apply ; (; const T & ; rhs). inlinestatic . Definition at line 196 of file UnaryOperators.h. The documentation for this class was generated from the following file:; math/smatrix/inc/Math/UnaryOperators.h. ROOTMathSqr. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:24 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Sqr.html:85,Guid,Guide,85,doc/master/classROOT_1_1Math_1_1Sqr.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Sqr.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::Sqrt< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::Sqrt< T > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class T>; class ROOT::Math::Sqrt< T >Unary Square Root Operation Class. ; Definition at line 269 of file UnaryOperators.h. Static Public Member Functions; static T apply (const T &rhs);  . #include <Math/UnaryOperators.h>; Member Function Documentation. ◆ apply(). template<class T > . static T ROOT::Math::Sqrt< T >::apply ; (; const T & ; rhs). inlinestatic . Definition at line 271 of file UnaryOperators.h. The documentation for this class was generated from the following file:; math/smatrix/inc/Math/UnaryOperators.h. ROOTMathSqrt. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:24 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Sqrt.html:86,Guid,Guide,86,doc/master/classROOT_1_1Math_1_1Sqrt.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Sqrt.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::SqrtLowVariableTransformation Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::SqrtLowVariableTransformation Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; Sqrt Transformation class for dealing with lower bounded variables. ; Definition at line 58 of file MinimizerVariableTransformation.h. Public Member Functions;  ~SqrtLowVariableTransformation () override;  ; double DInt2Ext (double value, double lower, double upper) const override;  ; double Ext2int (double value, double lower, double upper) const override;  ; double Int2ext (double value, double lower, double upper) const override;  ;  Public Member Functions inherited from ROOT::Math::MinimizerVariableTransformation; virtual ~MinimizerVariableTransformation ();  . #include <Math/MinimizerVariableTransformation.h>. Inheritance diagram for ROOT::Math::SqrtLowVariableTransformation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~SqrtLowVariableTransformation(). ROOT::Math::SqrtLowVariableTransformation::~SqrtLowVariableTransformation ; (; ). inlineoverride . Definition at line 61 of file MinimizerVariableTransformation.h. Member Function Documentation. ◆ DInt2Ext(). double ROOT::Math::SqrtLowVariableTransformation::DInt2Ext ; (; double ; value, . double ; lower, . double ; upper . ); const. overridevirtual . Implements ROOT::Math::MinimizerVariableTransformation.; Definition at line 76 of file MinimizerVariableTransformation.cxx. ◆ Ext2int(). double ROOT::Math::SqrtLowVariableTransformation::Ext2int ; (; double ; value, . double ; lower, . double ; upper . ); const. overridevirtual . Implements ROOT::Math::MinimizerVariableTransformation.; Definition at line 66 of file MinimizerVariableTransformation.cxx. ◆ Int2ex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1SqrtLowVariableTransformation.html:97,Guid,Guide,97,doc/master/classROOT_1_1Math_1_1SqrtLowVariableTransformation.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1SqrtLowVariableTransformation.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::SqrtUpVariableTransformation Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::SqrtUpVariableTransformation Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; Sqrt Transformation class for dealing with upper bounded variables. ; Definition at line 74 of file MinimizerVariableTransformation.h. Public Member Functions;  ~SqrtUpVariableTransformation () override;  ; double DInt2Ext (double value, double lower, double upper) const override;  ; double Ext2int (double value, double lower, double upper) const override;  ; double Int2ext (double value, double lower, double upper) const override;  ;  Public Member Functions inherited from ROOT::Math::MinimizerVariableTransformation; virtual ~MinimizerVariableTransformation ();  . #include <Math/MinimizerVariableTransformation.h>. Inheritance diagram for ROOT::Math::SqrtUpVariableTransformation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~SqrtUpVariableTransformation(). ROOT::Math::SqrtUpVariableTransformation::~SqrtUpVariableTransformation ; (; ). inlineoverride . Definition at line 77 of file MinimizerVariableTransformation.h. Member Function Documentation. ◆ DInt2Ext(). double ROOT::Math::SqrtUpVariableTransformation::DInt2Ext ; (; double ; value, . double ; lower, . double ; upper . ); const. overridevirtual . Implements ROOT::Math::MinimizerVariableTransformation.; Definition at line 100 of file MinimizerVariableTransformation.cxx. ◆ Ext2int(). double ROOT::Math::SqrtUpVariableTransformation::Ext2int ; (; double ; value, . double ; lower, . double ; upper . ); const. overridevirtual . Implements ROOT::Math::MinimizerVariableTransformation.; Definition at line 92 of file MinimizerVariableTransformation.cxx. ◆ Int2ext(). dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1SqrtUpVariableTransformation.html:96,Guid,Guide,96,doc/master/classROOT_1_1Math_1_1SqrtUpVariableTransformation.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1SqrtUpVariableTransformation.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::StdEngine< Generator > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::StdEngine< Generator > Class Template ReferenceMath » MathCore » Interface classes for Random number generation. ; template<class Generator>; class ROOT::Math::StdEngine< Generator >Class to wrap engines from the C++ standard random library in the ROOT Random interface. ; These cases are then used by the generic TRandomGen class to provide TRandom interrace generators for the C++ random generators.; See for examples the TRandomMT64 and TRandomRanlux48 generators which are typede's to TRandomGen instantiated with some random engine from the C++ standard library. ; Definition at line 73 of file StdEngine.h. Public Types; typedef StdRandomEngine BaseType;  ; typedef Generator::result_type Result_t;  . Public Member Functions;  StdEngine ();  ; Result_t IntRndm ();  ; double operator() ();  ; double Rndm ();  ; void SetSeed (Result_t seed);  . Static Public Member Functions; static uint64_t MaxInt ();  ; static const char * Name ();  . Private Attributes; double fCONS;  ; Generator fGen;  . #include <Math/StdEngine.h>; Member Typedef Documentation. ◆ BaseType. template<class Generator > . typedef StdRandomEngine ROOT::Math::StdEngine< Generator >::BaseType. Definition at line 78 of file StdEngine.h. ◆ Result_t. template<class Generator > . typedef Generator::result_type ROOT::Math::StdEngine< Generator >::Result_t. Definition at line 79 of file StdEngine.h. Constructor & Destructor Documentation. ◆ StdEngine(). template<class Generator > . ROOT::Math::StdEngine< Generator >::StdEngine ; (; ). inline . Definition at line 81 of file StdEngine.h. Member Function Documentation. ◆ IntRndm(). template<class Generator > . Result_t ROOT::Math::StdEngine< Generator >::IntRndm ; (,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1StdEngine.html:99,Guid,Guide,99,doc/master/classROOT_1_1Math_1_1StdEngine.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1StdEngine.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::StdEngineType< Generator > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::StdEngineType< Generator > Struct Template Reference. ; template<class Generator>; struct ROOT::Math::StdEngineType< Generator >; Definition at line 26 of file StdEngine.h. Static Public Member Functions; static const char * Name ();  . #include <Math/StdEngine.h>; Member Function Documentation. ◆ Name(). template<class Generator > . static const char * ROOT::Math::StdEngineType< Generator >::Name ; (; ). inlinestatic . Definition at line 27 of file StdEngine.h. The documentation for this struct was generated from the following file:; math/mathcore/inc/Math/StdEngine.h. ROOTMathStdEngineType. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:24 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1StdEngineType.html:104,Guid,Guide,104,doc/master/structROOT_1_1Math_1_1StdEngineType.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1StdEngineType.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::StdRandomEngine Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Math::StdRandomEngine Class Reference. . Definition at line 23 of file StdEngine.h. #include <Math/StdEngine.h>; The documentation for this class was generated from the following file:; math/mathcore/inc/Math/StdEngine.h. ROOTMathStdRandomEngine. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:24 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1StdRandomEngine.html:83,Guid,Guide,83,doc/master/classROOT_1_1Math_1_1StdRandomEngine.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1StdRandomEngine.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::TDataPoint< K, _val_type > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::TDataPoint< K, _val_type > Class Template Reference. ; template<unsigned int K, typename _val_type = float>; class ROOT::Math::TDataPoint< K, _val_type >; Definition at line 27 of file TDataPoint.h. Public Types; enum  { kDimension = K; };  ; typedef _val_type value_type;  . Public Member Functions;  TDataPoint ();  ; template<typename _coord_typ > ;  TDataPoint (const _coord_typ *pData, _val_type fWeight=1);  ; template<typename _coord_type > ;  TDataPoint (const _coord_type *pData, _val_type fWeight);  ; template<typename _val > ; value_type Distance (const TDataPoint< K, _val > &rPoint) const;  ; template<typename _val > ; _val_type Distance (const TDataPoint< K, _val > &rPoint) const;  ; value_type GetCoordinate (unsigned int iAxis) const;  ; value_type GetWeight () const;  ; Bool_t Less (TDataPoint &rPoint, unsigned int iAxis) const;  ; void SetCoordinate (unsigned int iAxis, _val_type fValue);  ; void SetWeight (float fWeight);  . Static Public Member Functions; static UInt_t Dimension ();  . Private Attributes; value_type m_fWeight;  weight at this point ;  ; value_type m_vCoordinates [K];  coordinates ;  . #include <Math/TDataPoint.h>; Member Typedef Documentation. ◆ value_type. template<unsigned int K, typename _val_type = float> . typedef _val_type ROOT::Math::TDataPoint< K, _val_type >::value_type. Definition at line 30 of file TDataPoint.h. Member Enumeration Documentation. ◆ anonymous enum. template<unsigned int K, typename _val_type = float> . anonymous enum. EnumeratorkDimension . Definition at line 31 of file TDataPoint.h. Constructor & Destructor Documentation. ◆ TDataPoint() [1/3]. template<unsigned int K, typename _val_type > . ROOT::Math::TDat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1TDataPoint.html:103,Guid,Guide,103,doc/master/classROOT_1_1Math_1_1TDataPoint.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1TDataPoint.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::TDataPointN< _val_type > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; ROOT::Math::TDataPointN< _val_type > Class Template Reference. ; template<typename _val_type = float>; class ROOT::Math::TDataPointN< _val_type >; Definition at line 30 of file TDataPointN.h. Public Types; typedef _val_type value_type;  . Public Member Functions;  TDataPointN ();  ; template<typename _coord_typ > ;  TDataPointN (const _coord_typ *pData, value_type fWeight=1);  ; template<typename _coord_type > ;  TDataPointN (const _coord_type *pData, _val_type fWeight);  ; template<typename _val > ;  TDataPointN (const TDataPointN< _val > &);  ; virtual ~TDataPointN ();  ; template<typename _val > ; _val_type Distance (const TDataPointN< _val > &rPoint) const;  ; _val_type GetCoordinate (unsigned int iAxis) const;  ; _val_type GetWeight () const;  ; bool Less (TDataPointN &rPoint, unsigned int iAxis) const;  ; void SetCoordinate (unsigned int iAxis, value_type fValue);  ; void SetWeight (float fWeight);  . Static Public Member Functions; static UInt_t Dimension ();  ; static void SetDimension (UInt_t dim);  . Private Attributes; value_type m_fWeight;  ; value_type * m_vCoordinates;  . Static Private Attributes; static UInt_t kDimension = 0;  . #include <Math/TDataPointN.h>; Member Typedef Documentation. ◆ value_type. template<typename _val_type = float> . typedef _val_type ROOT::Math::TDataPointN< _val_type >::value_type. Definition at line 36 of file TDataPointN.h. Constructor & Destructor Documentation. ◆ TDataPointN() [1/4]. template<typename _val_type > . ROOT::Math::TDataPointN< _val_type >::TDataPointN. Definition at line 30 of file TDataPointN.icc. ◆ TDataPointN() [2/4]. template<typename _val_type = float> . template<typename _coord_typ > ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1TDataPointN.html:101,Guid,Guide,101,doc/master/classROOT_1_1Math_1_1TDataPointN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1TDataPointN.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::TRandomEngine Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::TRandomEngine Class Referenceabstract. . Definition at line 19 of file TRandomEngine.h. Public Member Functions; virtual ~TRandomEngine ();  ; virtual double Rndm ()=0;  . #include <Math/TRandomEngine.h>. Inheritance diagram for ROOT::Math::TRandomEngine:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~TRandomEngine(). virtual ROOT::Math::TRandomEngine::~TRandomEngine ; (; ). inlinevirtual . Definition at line 22 of file TRandomEngine.h. Member Function Documentation. ◆ Rndm(). virtual double ROOT::Math::TRandomEngine::Rndm ; (; ). pure virtual . Implemented in ROOT::Math::LCGEngine, ROOT::Math::MersenneTwisterEngine, ROOT::Math::MixMaxEngine< N, SkipNumber >, ROOT::Math::RanluxppEngine< p >, ROOT::Math::RanluxppCompatEngineJames< p >, ROOT::Math::RanluxppCompatEngineGslRanlxs< p >, ROOT::Math::RanluxppCompatEngineGslRanlxd< p >, ROOT::Math::RanluxppCompatEngineLuescherRanlxs< p >, ROOT::Math::RanluxppCompatEngineLuescherRanlxd< p >, ROOT::Math::RanluxppCompatEngineStdRanlux24, ROOT::Math::RanluxppCompatEngineStdRanlux48, TRandom, TRandom1, TRandom1, TRandom2, TRandom2, TRandom3, TRandom3, TRandomGen< Engine >, and TRandomGen< Engine >. The documentation for this class was generated from the following file:; math/mathcore/inc/Math/TRandomEngine.h. ROOTMathTRandomEngine. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:24 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1TRandomEngine.html:81,Guid,Guide,81,doc/master/classROOT_1_1Math_1_1TRandomEngine.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1TRandomEngine.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::TensorMulOp< Vector1, Vector2 > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Math::TensorMulOp< Vector1, Vector2 > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class Vector1, class Vector2>; class ROOT::Math::TensorMulOp< Vector1, Vector2 >Class for Tensor Multiplication (outer product) of two vectors giving a matrix. ; Definition at line 837 of file MatrixFunctions.h. Public Member Functions;  TensorMulOp (const Vector1 &lhs, const Vector2 &rhs);  ;  ~TensorMulOp ();  ; Vector1::value_type apply (unsigned int i) const;  Vector2::kSize is the number of columns in the resulting matrix. ;  ; bool IsInUse (const typename Vector1::value_type *) const;  ; Vector1::value_type operator() (unsigned int i, unsigned j) const;  . Protected Attributes; const Vector1 & lhs_;  ; const Vector2 & rhs_;  . #include <Math/MatrixFunctions.h>; Constructor & Destructor Documentation. ◆ TensorMulOp(). template<class Vector1 , class Vector2 > . ROOT::Math::TensorMulOp< Vector1, Vector2 >::TensorMulOp ; (; const Vector1 & ; lhs, . const Vector2 & ; rhs . ). inline . Definition at line 840 of file MatrixFunctions.h. ◆ ~TensorMulOp(). template<class Vector1 , class Vector2 > . ROOT::Math::TensorMulOp< Vector1, Vector2 >::~TensorMulOp ; (; ). inline . Definition at line 845 of file MatrixFunctions.h. Member Function Documentation. ◆ apply(). template<class Vector1 , class Vector2 > . Vector1::value_type ROOT::Math::TensorMulOp< Vector1, Vector2 >::apply ; (; unsigned int ; i); const. inline . Vector2::kSize is the number of columns in the resulting matrix. ; Definition at line 848 of file MatrixFunctions.h. ◆ IsInUse(). template<class Vector1 , class Vector2 > . bool ROOT::Math::TensorMulOp< Vector1, Vector2 >::IsInUse ; (; const typename Vector1::value_type * ; ); cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1TensorMulOp.html:108,Guid,Guide,108,doc/master/classROOT_1_1Math_1_1TensorMulOp.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1TensorMulOp.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::TranspPolicy< T, D1, D2, MatRepSym< T, D1 > > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; List of all members ; ROOT::Math::TranspPolicy< T, D1, D2, MatRepSym< T, D1 > > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2>; struct ROOT::Math::TranspPolicy< T, D1, D2, MatRepSym< T, D1 > >; Definition at line 73 of file BinaryOpPolicy.h. Public Types; typedef MatRepSym< T, D1 > RepType;  . #include <Math/BinaryOpPolicy.h>; Member Typedef Documentation. ◆ RepType. template<class T , unsigned int D1, unsigned int D2> . typedef MatRepSym<T, D1> ROOT::Math::TranspPolicy< T, D1, D2, MatRepSym< T, D1 > >::RepType. Definition at line 75 of file BinaryOpPolicy.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/BinaryOpPolicy.h. ROOTMathTranspPolicy< T, D1, D2, MatRepSym< T, D1 > >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:24 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1TranspPolicy_3_01T_00_01D1_00_01D2_00_01MatRepSym_3_01T_00_01D1_01_4_01_4.html:123,Guid,Guide,123,doc/master/structROOT_1_1Math_1_1TranspPolicy_3_01T_00_01D1_00_01D2_00_01MatRepSym_3_01T_00_01D1_01_4_01_4.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1TranspPolicy_3_01T_00_01D1_00_01D2_00_01MatRepSym_3_01T_00_01D1_01_4_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::TranspPolicy< T, D1, D2, R > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; List of all members ; ROOT::Math::TranspPolicy< T, D1, D2, R > Struct Template Reference. ; template<class T, unsigned int D1, unsigned int D2, class R>; struct ROOT::Math::TranspPolicy< T, D1, D2, R >matrix transpose policy ; Definition at line 63 of file BinaryOpPolicy.h. Public Types; enum  { N1 = R::kRows; , N2 = R::kCols; };  ; typedef MatRepStd< T, N2, N1 > RepType;  . #include <Math/BinaryOpPolicy.h>; Member Typedef Documentation. ◆ RepType. template<class T , unsigned int D1, unsigned int D2, class R > . typedef MatRepStd<T, N2, N1> ROOT::Math::TranspPolicy< T, D1, D2, R >::RepType. Definition at line 69 of file BinaryOpPolicy.h. Member Enumeration Documentation. ◆ anonymous enum. template<class T , unsigned int D1, unsigned int D2, class R > . anonymous enum. EnumeratorN1 ; N2 . Definition at line 65 of file BinaryOpPolicy.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/BinaryOpPolicy.h. ROOTMathTranspPolicy. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:24 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1TranspPolicy.html:106,Guid,Guide,106,doc/master/structROOT_1_1Math_1_1TranspPolicy.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1TranspPolicy.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::TransposeOp< Matrix, T, D1, D2 > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Math::TransposeOp< Matrix, T, D1, D2 > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class Matrix, class T, unsigned int D1, unsigned int D2 = D1>; class ROOT::Math::TransposeOp< Matrix, T, D1, D2 >Class for Transpose Operations. ; Definition at line 503 of file MatrixFunctions.h. Public Member Functions;  TransposeOp (const Matrix &rhs);  ;  ~TransposeOp ();  ; T apply (unsigned int i) const;  ; bool IsInUse (const T *p) const;  ; T operator() (unsigned int i, unsigned j) const;  . Protected Attributes; const Matrix & rhs_;  . #include <Math/MatrixFunctions.h>; Constructor & Destructor Documentation. ◆ TransposeOp(). template<class Matrix , class T , unsigned int D1, unsigned int D2 = D1> . ROOT::Math::TransposeOp< Matrix, T, D1, D2 >::TransposeOp ; (; const Matrix & ; rhs). inline . Definition at line 506 of file MatrixFunctions.h. ◆ ~TransposeOp(). template<class Matrix , class T , unsigned int D1, unsigned int D2 = D1> . ROOT::Math::TransposeOp< Matrix, T, D1, D2 >::~TransposeOp ; (; ). inline . Definition at line 510 of file MatrixFunctions.h. Member Function Documentation. ◆ apply(). template<class Matrix , class T , unsigned int D1, unsigned int D2 = D1> . T ROOT::Math::TransposeOp< Matrix, T, D1, D2 >::apply ; (; unsigned int ; i); const. inline . Definition at line 513 of file MatrixFunctions.h. ◆ IsInUse(). template<class Matrix , class T , unsigned int D1, unsigned int D2 = D1> . bool ROOT::Math::TransposeOp< Matrix, T, D1, D2 >::IsInUse ; (; const T * ; p); const. inline . Definition at line 520 of file MatrixFunctions.h. ◆ operator()(). template<class Matrix , class T , unsigned int D1, unsigned int D2 = D1> . T ROOT::Math::TransposeOp< Matrix, T, D1, D2 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1TransposeOp.html:109,Guid,Guide,109,doc/master/classROOT_1_1Math_1_1TransposeOp.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1TransposeOp.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::UnaryOp< Operator, RHS, T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Math::UnaryOp< Operator, RHS, T > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class Operator, class RHS, class T>; class ROOT::Math::UnaryOp< Operator, RHS, T >UnaryOperation class A class representing unary operators in the parse tree. ; The objects are stored by reference; AuthorT. Glebe ; Definition at line 361 of file Expression.h. Public Member Functions;  UnaryOp (Operator, const RHS &rhs);  ;  ~UnaryOp ();  ; T apply (unsigned int i) const;  ; bool IsInUse (const T *p) const;  ; T operator() (unsigned int i, unsigned int j) const;  . Protected Attributes; const RHS & rhs_;  . #include <Math/Expression.h>; Constructor & Destructor Documentation. ◆ UnaryOp(). template<class Operator , class RHS , class T > . ROOT::Math::UnaryOp< Operator, RHS, T >::UnaryOp ; (; Operator ; , . const RHS & ; rhs . ). inline . Definition at line 364 of file Expression.h. ◆ ~UnaryOp(). template<class Operator , class RHS , class T > . ROOT::Math::UnaryOp< Operator, RHS, T >::~UnaryOp ; (; ). inline . Definition at line 368 of file Expression.h. Member Function Documentation. ◆ apply(). template<class Operator , class RHS , class T > . T ROOT::Math::UnaryOp< Operator, RHS, T >::apply ; (; unsigned int ; i); const. inline . Definition at line 371 of file Expression.h. ◆ IsInUse(). template<class Operator , class RHS , class T > . bool ROOT::Math::UnaryOp< Operator, RHS, T >::IsInUse ; (; const T * ; p); const. inline . Definition at line 378 of file Expression.h. ◆ operator()(). template<class Operator , class RHS , class T > . T ROOT::Math::UnaryOp< Operator, RHS, T >::operator() ; (; unsigned int ; i, . unsigned int ; j . ); const. inline . Definition at line 374 of file Expression.h. M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1UnaryOp.html:104,Guid,Guide,104,doc/master/classROOT_1_1Math_1_1UnaryOp.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1UnaryOp.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::Util Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; ROOT::Math::Util Namespace Reference. namespace defining Utility functions needed by mathcore ; More... Functions; template<class T > ; T EvalLog (T x);  safe evaluation of log(x) with a protections against negative or zero argument to the log smooth linear extrapolation below function values smaller than epsilon (better than a simple cut-off) ;  ; template<class T > ; std::string ToString (const T &val);  Utility function for conversion to strings. ;  . Detailed Description; namespace defining Utility functions needed by mathcore ; Function Documentation. ◆ EvalLog(). template<class T > . T ROOT::Math::Util::EvalLog ; (; T ; x). inline . safe evaluation of log(x) with a protections against negative or zero argument to the log smooth linear extrapolation below function values smaller than epsilon (better than a simple cut-off) ; Definition at line 64 of file Util.h. ◆ ToString(). template<class T > . std::string ROOT::Math::Util::ToString ; (; const T & ; val). Utility function for conversion to strings. ; Definition at line 50 of file Util.h. ROOTMathUtil. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Util.html:76,Guid,Guide,76,doc/master/namespaceROOT_1_1Math_1_1Util.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Util.html,4,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: ROOT::Math::Vavilov Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; ROOT::Math::Vavilov Class ReferenceabstractMath » MathCore | Math » MathMore » Statistical functions. ; Base class describing a Vavilov distribution. ; The Vavilov distribution is defined in P.V. Vavilov: Ionization losses of high-energy heavy particles, Sov. Phys. JETP 5 (1957) 749 [Zh. Eksp. Teor. Fiz. 32 (1957) 920].; The probability density function of the Vavilov distribution as function of Landau's parameter is given by: ; \[ p(\lambda_L; \kappa, \beta^2) =; \frac{1}{2 \pi i}\int_{c-i\infty}^{c+i\infty} \phi(s) e^{\lambda_L s} ds\]. where \(\phi(s) = e^{C} e^{\psi(s)}\) with \( C = \kappa (1+\beta^2 \gamma )\) and \(\psi(s)= s \ln \kappa + (s+\beta^2 \kappa); \cdot \left ( \int \limits_{0}^{1}; \frac{1 - e^{\frac{-st}{\kappa}}}{t} \,d t- \gamma \right ); - \kappa \, e^{\frac{-s}{\kappa}}\). \( \gamma = 0.5772156649\dots\) is Euler's constant.; For the class Vavilov, Pdf returns the Vavilov distribution as function of Landau's parameter \(\lambda_L = \lambda_V/\kappa - \ln \kappa\), which is the convention used in the CERNLIB routines, and in the tables by S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons: Tabulation of the Vavilov distribution, pp 187-203 in: National Research Council (U.S.), Committee on Nuclear Science: Studies in penetration of charged particles in matter, Nat. Akad. Sci. Publication 1133, Nucl. Sci. Series Report No. 39, Washington (Nat. Akad. Sci.) 1964, 388 pp. Available from Google books; Therefore, for small values of \(\kappa < 0.01\), pdf approaches the Landau distribution.; For values \(\kappa > 10\), the Gauss approximation should be used with \(\mu\) and \(\sigma\) given by Vavilov::Mean(kappa, beta2) and sqrt(Vavilov::Variance(kappa, beta2).; The original Vavilov pdf is obtained ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Vavilov.html:75,Guid,Guide,75,doc/master/classROOT_1_1Math_1_1Vavilov.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Vavilov.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::VavilovAccurate Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; ROOT::Math::VavilovAccurate Class ReferenceMath » MathCore | Math » MathMore » Statistical functions. ; Class describing a Vavilov distribution. ; The probability density function of the Vavilov distribution as function of Landau's parameter is given by: ; \[ p(\lambda_L; \kappa, \beta^2) =; \frac{1}{2 \pi i}\int_{c-i\infty}^{c+i\infty} \phi(s) e^{\lambda_L s} ds\]. where \(\phi(s) = e^{C} e^{\psi(s)}\) with \( C = \kappa (1+\beta^2 \gamma )\) and \(\psi(s)= s \ln \kappa + (s+\beta^2 \kappa); \cdot \left ( \int \limits_{0}^{1}; \frac{1 - e^{\frac{-st}{\kappa}}}{t} \,d t- \gamma \right ); - \kappa \, e^{\frac{-s}{\kappa}}\). \( \gamma = 0.5772156649\dots\) is Euler's constant.; For the class VavilovAccurate, Pdf returns the Vavilov distribution as function of Landau's parameter \(\lambda_L = \lambda_V/\kappa - \ln \kappa\), which is the convention used in the CERNLIB routines, and in the tables by S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons: Tabulation of the Vavilov distribution, pp 187-203 in: National Research Council (U.S.), Committee on Nuclear Science: Studies in penetration of charged particles in matter, Nat. Akad. Sci. Publication 1133, Nucl. Sci. Series Report No. 39, Washington (Nat. Akad. Sci.) 1964, 388 pp. Available from Google books; Therefore, for small values of \(\kappa < 0.01\), pdf approaches the Landau distribution.; For values \(\kappa > 10\), the Gauss approximation should be used with \(\mu\) and \(\sigma\) given by Vavilov::mean(kappa, beta2) and sqrt(Vavilov::variance(kappa, beta2).; The original Vavilov pdf is obtained by v.Pdf(lambdaV/kappa-log(kappa))/kappa.; For",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VavilovAccurate.html:83,Guid,Guide,83,doc/master/classROOT_1_1Math_1_1VavilovAccurate.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VavilovAccurate.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::VavilovAccurateCdf Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::VavilovAccurateCdf Class ReferenceMath » MathCore | Math » MathMore » Statistical functions. ; Class describing the Vavilov cdf. ; The probability density function of the Vavilov distribution is given by: ; \[ p(\lambda; \kappa, \beta^2) =; \frac{1}{2 \pi i}\int_{c-i\infty}^{c+i\infty} \phi(s) e^{\lambda s} ds\]. where \(\phi(s) = e^{C} e^{\psi(s)}\) with \( C = \kappa (1+\beta^2 \gamma )\) and ; \[\psi(s) = s \ln \kappa + (s+\beta^2 \kappa); \cdot \left ( \int \limits_{0}^{1}; \frac{1 - e^{\frac{-st}{\kappa}}}{t} \, dt - \gamma \right ); - \kappa \, e^{\frac{-s}{\kappa}}\]. . \( \gamma = 0.5772156649\dots\) is Euler's constant.; The parameters are:; 0: Norm: Normalization constant; 1: x0: Location parameter; 2: xi: Width parameter; 3: kappa: Parameter \(\kappa\) of the Vavilov distribution; 4: beta2: Parameter \(\beta^2\) of the Vavilov distribution. Benno List, June 2010 ; Definition at line 72 of file VavilovAccurateCdf.h. Public Member Functions;  VavilovAccurateCdf ();  Default constructor. ;  ;  VavilovAccurateCdf (const double *p);  Constructor with parameter values. ;  ;  ~VavilovAccurateCdf () override;  Destructor. ;  ; IBaseFunctionOneDim * Clone () const override;  Return a clone of the object. ;  ; double DoEval (double x) const override;  Evaluate the function. ;  ; double DoEvalPar (double x, const double *p) const override;  Evaluate the function, using parameters p. ;  ; unsigned int NPar () const override;  Return the number of Parameters. ;  ; std::string ParameterName (unsigned int i) const override;  Return the name of the i-th parameter (starting from zero) Overwrite if want to avoid the default name (""Par_0, Par_1, ..."") ;  ; const double * Parameters () const override;  Access the parameter values. ;  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VavilovAccurateCdf.html:86,Guid,Guide,86,doc/master/classROOT_1_1Math_1_1VavilovAccurateCdf.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VavilovAccurateCdf.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::VavilovAccuratePdf Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::VavilovAccuratePdf Class ReferenceMath » MathCore | Math » MathMore » Statistical functions. ; Class describing the Vavilov pdf. ; The probability density function of the Vavilov distribution is given by: ; \[ p(\lambda; \kappa, \beta^2) =; \frac{1}{2 \pi i}\int_{c-i\infty}^{c+i\infty} \phi(s) e^{\lambda s} ds\]. where \(\phi(s) = e^{C} e^{\psi(s)}\) with \( C = \kappa (1+\beta^2 \gamma )\) and ; \[\psi(s) = s \ln \kappa + (s+\beta^2 \kappa); \cdot \left ( \int \limits_{0}^{1}; \frac{1 - e^{\frac{-st}{\kappa}}}{t} \, dt- \gamma \right ); - \kappa \, e^{\frac{-s}{\kappa}}\]. . \( \gamma = 0.5772156649\dots\) is Euler's constant.; The parameters are:; 0: Norm: Normalization constant; 1: x0: Location parameter; 2: xi: Width parameter; 3: kappa: Parameter \(\kappa\) of the Vavilov distribution; 4: beta2: Parameter \(\beta^2\) of the Vavilov distribution. Benno List, June 2010 ; Definition at line 72 of file VavilovAccuratePdf.h. Public Member Functions;  VavilovAccuratePdf ();  Default constructor. ;  ;  VavilovAccuratePdf (const double *p);  Constructor with parameter values. ;  ;  ~VavilovAccuratePdf () override;  Destructor. ;  ; IBaseFunctionOneDim * Clone () const override;  Return a clone of the object. ;  ; double DoEval (double x) const override;  Evaluate the function. ;  ; double DoEvalPar (double x, const double *p) const override;  Evaluate the function, using parameters p. ;  ; unsigned int NPar () const override;  Return the number of Parameters. ;  ; std::string ParameterName (unsigned int i) const override;  Return the name of the i-th parameter (starting from zero) ;  ; const double * Parameters () const override;  Access the parameter values. ;  ; void SetParameters (const double *p) override;  Set the parameter va",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VavilovAccuratePdf.html:86,Guid,Guide,86,doc/master/classROOT_1_1Math_1_1VavilovAccuratePdf.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VavilovAccuratePdf.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::VavilovAccurateQuantile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::VavilovAccurateQuantile Class ReferenceMath » MathCore | Math » MathMore » Statistical functions. ; Class describing the Vavilov quantile function. ; The probability density function of the Vavilov distribution is given by: ; \[ p(\lambda; \kappa, \beta^2) =; \frac{1}{2 \pi i}\int_{c-i\infty}^{c+i\infty} \phi(s) e^{\lambda s} ds\]. where \(\phi(s) = e^{C} e^{\psi(s)}\) with \( C = \kappa (1+\beta^2 \gamma )\) and ; \[\psi(s) = s \ln \kappa + (s+\beta^2 \kappa); \cdot \left ( \int \limits_{0}^{1}; \frac{1 - e^{\frac{-st}{\kappa}}}{t} \, dt- \gamma \right ); - \kappa \, e^{\frac{-s}{\kappa}}\]. . \( \gamma = 0.5772156649\dots\) is Euler's constant.; The parameters are:; 0: Norm: Normalization constant; 1: x0: Location parameter; 2: xi: Width parameter; 3: kappa: Parameter \(\kappa\) of the Vavilov distribution; 4: beta2: Parameter \(\beta^2\) of the Vavilov distribution. Benno List, June 2010 ; Definition at line 72 of file VavilovAccurateQuantile.h. Public Member Functions;  VavilovAccurateQuantile ();  Default constructor. ;  ;  VavilovAccurateQuantile (const double *p);  Constructor with parameter values. ;  ;  ~VavilovAccurateQuantile () override;  Destructor. ;  ; IBaseFunctionOneDim * Clone () const override;  Return a clone of the object. ;  ; double DoEval (double x) const override;  Evaluate the function. ;  ; double DoEvalPar (double x, const double *p) const override;  Evaluate the function, using parameters p. ;  ; unsigned int NPar () const override;  Return the number of Parameters. ;  ; std::string ParameterName (unsigned int i) const override;  Return the name of the i-th parameter (starting from zero) ;  ; const double * Parameters () const override;  Access the parameter values. ;  ; void SetParameters (cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VavilovAccurateQuantile.html:91,Guid,Guide,91,doc/master/classROOT_1_1Math_1_1VavilovAccurateQuantile.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VavilovAccurateQuantile.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::VavilovFast Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; ROOT::Math::VavilovFast Class ReferenceMath » MathCore | Math » MathMore » Statistical functions. ; Class describing a Vavilov distribution. ; The probability density function of the Vavilov distribution as function of Landau's parameter is given by: ; \[ p(\lambda_L; \kappa, \beta^2) =; \frac{1}{2 \pi i}\int_{c-i\infty}^{c+i\infty} \phi(s) e^{\lambda_L s} ds\]. where \(\phi(s) = e^{C} e^{\psi(s)}\) with \( C = \kappa (1+\beta^2 \gamma )\) and \(\psi(s)= s \ln \kappa + (s+\beta^2 \kappa); \cdot \left ( \int \limits_{0}^{1}; \frac{1 - e^{\frac{-st}{\kappa}}}{t} \,d t- \gamma \right ); - \kappa \, e^{\frac{-s}{\kappa}}\). \( \gamma = 0.5772156649\dots\) is Euler's constant.; For the class VavilovFast, Pdf returns the Vavilov distribution as function of Landau's parameter \(\lambda_L = \lambda_V/\kappa - \ln \kappa\), which is the convention used in the CERNLIB routines, and in the tables by S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons: Tabulation of the Vavilov distribution, pp 187-203 in: National Research Council (U.S.), Committee on Nuclear Science: Studies in penetration of charged particles in matter, Nat. Akad. Sci. Publication 1133, Nucl. Sci. Series Report No. 39, Washington (Nat. Akad. Sci.) 1964, 388 pp. Available from Google books; Therefore, for small values of \(\kappa < 0.01\), pdf approaches the Landau distribution.; For values \(\kappa > 10\), the Gauss approximation should be used with \(\mu\) and \(\sigma\) given by Vavilov::mean(kappa, beta2) and sqrt(Vavilov::variance(kappa, beta2).; For values \(\kappa > 10\), the Gauss approximation should be used with \(\mu\) and \(\sigma\) given by Vavilov::mean(kappa, beta2) and sqrt(Vavilov::variance",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VavilovFast.html:79,Guid,Guide,79,doc/master/classROOT_1_1Math_1_1VavilovFast.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VavilovFast.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::VecExpr< ExprType, T, D > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::VecExpr< ExprType, T, D > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class ExprType, class T, unsigned int D>; class ROOT::Math::VecExpr< ExprType, T, D >Expression wrapper class for Vector objects. ; Definition at line 64 of file Expression.h. Public Types; enum  { kRows = D; };  ; typedef T value_type;  . Public Member Functions;  VecExpr (const ExprType &rhs);  ;  ~VecExpr ();  ; T apply (unsigned int i) const;  ; bool IsInUse (const T *p) const;  function to determine if any use operand is being used (has same memory address) ;  ; T operator() (unsigned int i) const;  ; std::ostream & print (std::ostream &os) const;  used by operator<<() ;  . Private Attributes; ExprType rhs_;  . #include <Math/Expression.h>; Member Typedef Documentation. ◆ value_type. template<class ExprType , class T , unsigned int D> . typedef T ROOT::Math::VecExpr< ExprType, T, D >::value_type. Definition at line 67 of file Expression.h. Member Enumeration Documentation. ◆ anonymous enum. template<class ExprType , class T , unsigned int D> . anonymous enum. EnumeratorkRows . Definition at line 93 of file Expression.h. Constructor & Destructor Documentation. ◆ VecExpr(). template<class ExprType , class T , unsigned int D> . ROOT::Math::VecExpr< ExprType, T, D >::VecExpr ; (; const ExprType & ; rhs). inline . Definition at line 70 of file Expression.h. ◆ ~VecExpr(). template<class ExprType , class T , unsigned int D> . ROOT::Math::VecExpr< ExprType, T, D >::~VecExpr ; (; ). inline . Definition at line 74 of file Expression.h. Member Function Documentation. ◆ apply(). template<class ExprType , class T , unsigned int D> . T ROOT::Math::VecExpr< ExprType, T, D >::apply ; (; unsigned",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VecExpr.html:102,Guid,Guide,102,doc/master/classROOT_1_1Math_1_1VecExpr.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VecExpr.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::VectorMatrixColOp< Vector, Matrix, D1 > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Math::VectorMatrixColOp< Vector, Matrix, D1 > Class Template ReferenceMath » SMatrix Package » Expression Template Classes. ; template<class Vector, class Matrix, unsigned int D1>; class ROOT::Math::VectorMatrixColOp< Vector, Matrix, D1 >Class for Vector-Matrix multiplication. ; Definition at line 174 of file MatrixFunctions.h. Public Types; typedef Vector::value_type T;  . Public Member Functions;  VectorMatrixColOp (const Vector &lhs, const Matrix &rhs);  ;  ~VectorMatrixColOp ();  ; Matrix::value_type apply (unsigned int i) const;  calc \( \sum_{j} a_{ij} * v_j \) ;  ; bool IsInUse (const T *p) const;  . Protected Attributes; const Vector & lhs_;  ; const Matrix & rhs_;  . #include <Math/MatrixFunctions.h>; Member Typedef Documentation. ◆ T. template<class Vector , class Matrix , unsigned int D1> . typedef Vector::value_type ROOT::Math::VectorMatrixColOp< Vector, Matrix, D1 >::T. Definition at line 177 of file MatrixFunctions.h. Constructor & Destructor Documentation. ◆ VectorMatrixColOp(). template<class Vector , class Matrix , unsigned int D1> . ROOT::Math::VectorMatrixColOp< Vector, Matrix, D1 >::VectorMatrixColOp ; (; const Vector & ; lhs, . const Matrix & ; rhs . ). inline . Definition at line 179 of file MatrixFunctions.h. ◆ ~VectorMatrixColOp(). template<class Vector , class Matrix , unsigned int D1> . ROOT::Math::VectorMatrixColOp< Vector, Matrix, D1 >::~VectorMatrixColOp ; (; ). inline . Definition at line 183 of file MatrixFunctions.h. Member Function Documentation. ◆ apply(). template<class Vector , class Matrix , unsigned int D1> . Matrix::value_type ROOT::Math::VectorMatrixColOp< Vector, Matrix, D1 >::apply ; (; unsigned int ; i); const. inline . calc \( \sum_{j} a_{ij} *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VectorMatrixColOp.html:116,Guid,Guide,116,doc/master/classROOT_1_1Math_1_1VectorMatrixColOp.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VectorMatrixColOp.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::VectorMatrixRowOp< Matrix, Vector, D2 > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Math::VectorMatrixRowOp< Matrix, Vector, D2 > Class Template Reference. ; template<class Matrix, class Vector, unsigned int D2>; class ROOT::Math::VectorMatrixRowOp< Matrix, Vector, D2 >; Definition at line 109 of file MatrixFunctions.h. Public Types; typedef Vector::value_type T;  . Public Member Functions;  VectorMatrixRowOp (const Matrix &lhs, const Vector &rhs);  ;  ~VectorMatrixRowOp ();  ; Matrix::value_type apply (unsigned int i) const;  calc \( \sum_{j} a_{ij} * v_j \) ;  ; bool IsInUse (const T *p) const;  . Protected Attributes; const Matrix & lhs_;  ; const Vector & rhs_;  . #include <Math/MatrixFunctions.h>; Member Typedef Documentation. ◆ T. template<class Matrix , class Vector , unsigned int D2> . typedef Vector::value_type ROOT::Math::VectorMatrixRowOp< Matrix, Vector, D2 >::T. Definition at line 112 of file MatrixFunctions.h. Constructor & Destructor Documentation. ◆ VectorMatrixRowOp(). template<class Matrix , class Vector , unsigned int D2> . ROOT::Math::VectorMatrixRowOp< Matrix, Vector, D2 >::VectorMatrixRowOp ; (; const Matrix & ; lhs, . const Vector & ; rhs . ). inline . Definition at line 115 of file MatrixFunctions.h. ◆ ~VectorMatrixRowOp(). template<class Matrix , class Vector , unsigned int D2> . ROOT::Math::VectorMatrixRowOp< Matrix, Vector, D2 >::~VectorMatrixRowOp ; (; ). inline . Definition at line 119 of file MatrixFunctions.h. Member Function Documentation. ◆ apply(). template<class Matrix , class Vector , unsigned int D2> . Matrix::value_type ROOT::Math::VectorMatrixRowOp< Matrix, Vector, D2 >::apply ; (; unsigned int ; i); const. inline . calc \( \sum_{j} a_{ij} * v_j \) ; Definition at line 122 of file MatrixFunctions.h. ◆ IsInUse(). template<class Matr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VectorMatrixRowOp.html:116,Guid,Guide,116,doc/master/classROOT_1_1Math_1_1VectorMatrixRowOp.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VectorMatrixRowOp.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::VectorUtil Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; ROOT::Math::VectorUtil Namespace ReferenceMath » Physics Vectors. Global Helper functions for generic Vector classes. ; More... Functions; template<class Vector1 , class Vector2 > ; double Angle (const Vector1 &v1, const Vector2 &v2);  Find Angle between two vectors. ;  ; template<class LVector , class BoostVector > ; LVector boost (const LVector &v, const BoostVector &b);  Boost a generic Lorentz Vector class using a generic 3D Vector class describing the boost The only requirement on the vector is that implements the X(), Y(), Z(), T() and SetXYZT methods. ;  ; template<class LVector , class T > ; LVector boostX (const LVector &v, T beta);  Boost a generic Lorentz Vector class along the X direction with a factor beta The only requirement on the vector is that implements the X(), Y(), Z(), T() and SetXYZT methods. ;  ; template<class LVector > ; LVector boostY (const LVector &v, double beta);  Boost a generic Lorentz Vector class along the Y direction with a factor beta The only requirement on the vector is that implements the X(), Y(), Z(), T() methods and be constructed from x,y,z,t values The beta of the boost must be <= 1 or a nul Lorentz Vector will be returned. ;  ; template<class LVector > ; LVector boostZ (const LVector &v, double beta);  Boost a generic Lorentz Vector class along the Z direction with a factor beta The only requirement on the vector is that implements the X(), Y(), Z(), T() methods and be constructed from x,y,z,t values The beta of the boost must be <= 1 or a nul Lorentz Vector will be returned. ;  ; template<class Vector1 , class Vector2 > ; double CosTheta (const Vector1 &v1, const Vector2 &v2);  Find CosTheta Angle between two generic 3D vectors pre-requisite: vectors implement the X(), Y() and Z() ;  ; template<class Vector1 , class Vector2 > ; Vector1::Scalar DeltaPhi (const Vector1 &v1, const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1VectorUtil.html:82,Guid,Guide,82,doc/master/namespaceROOT_1_1Math_1_1VectorUtil.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1VectorUtil.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::Math::VegasParameters Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Math::VegasParameters Struct ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration » Numerical Monte Carlo Integration Classes. ; Structures collecting parameters for VEGAS multidimensional integration For implementation of default parameters see file mathmore/src/GSLMCIntegrationWorkspace.h. ; Definition at line 46 of file MCParameters.h. Public Member Functions;  VegasParameters ();  ;  VegasParameters (const ROOT::Math::IOptions &opt);  ; std::unique_ptr< ROOT::Math::IOptions > MakeIOptions () const;  Convert to options. ;  ; VegasParameters & operator= (const ROOT::Math::IOptions &opt);  ; void SetDefaultValues ();  default VEGAS parameters (copied from gsl/monte/vegas.c) ;  . Public Attributes; double alpha;  ; size_t iterations;  ; int mode;  ; int stage;  ; int verbose;  . #include <Math/MCParameters.h>; Constructor & Destructor Documentation. ◆ VegasParameters() [1/2]. ROOT::Math::VegasParameters::VegasParameters ; (; ). inline . Definition at line 54 of file MCParameters.h. ◆ VegasParameters() [2/2]. ROOT::Math::VegasParameters::VegasParameters ; (; const ROOT::Math::IOptions & ; opt). Definition at line 48 of file MCParameters.cxx. Member Function Documentation. ◆ MakeIOptions(). std::unique_ptr< ROOT::Math::IOptions > ROOT::Math::VegasParameters::MakeIOptions ; (; ); const. Convert to options. ; Definition at line 72 of file MCParameters.cxx. ◆ operator=(). VegasParameters & ROOT::Math::VegasParameters::operator= ; (; const ROOT::Math::IOptions & ; opt). Definition at line 53 of file MCParameters.cxx. ◆ SetDefaultValues(). void ROOT::Math::VegasParameters::SetDefaultValues ; (; ). default VEGAS parameters (copied from gsl/monte/vegas.c) ; Definition at line 39 of file MCParameters.cxx. Membe,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1VegasParameters.html:84,Guid,Guide,84,doc/master/structROOT_1_1Math_1_1VegasParameters.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1VegasParameters.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::VirtualIntegrator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::VirtualIntegrator Class ReferenceabstractMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; Abstract class for all numerical integration methods (1D and multi-dim) Interface defining the common methods for the numerical integrator classes of one and multi dimensions The derived class VirtualIntegratorOneDim defines the methods for one-dimensional integration. ; The derived class VirtualIntegratorMultiDim defines the method for multi-dimensional integration. The concrete classes for one dimension (e.g. GSLIntegrator) or multi-dimension (e.g. GSLMCIntegrator) can be created using the plug-in manager. Users should not use directly this class but the concrete classes ROOT::Math::IntegratorOneDim or ROOT::Math::IntegratorMultiDim ; Definition at line 48 of file VirtualIntegrator.h. Public Member Functions; virtual ~VirtualIntegrator ();  destructor: no operation ;  ; virtual double Error () const =0;  return the estimate of the absolute Error of the last Integral calculation ;  ; virtual int NEval () const;  return number of function evaluations in calculating the integral (if integrator do not implement this function returns -1) ;  ; virtual double Result () const =0;  return the Result of the last Integral calculation ;  ; virtual void SetAbsTolerance (double)=0;  set the desired absolute Error ;  ; virtual void SetRelTolerance (double)=0;  set the desired relative Error ;  ; virtual int Status () const =0;  return the Error Status of the last Integral calculation ;  . #include <Math/VirtualIntegrator.h>. Inheritance diagram for ROOT::Math::VirtualIntegrator:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~VirtualIntegrator(). virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VirtualIntegrator.html:85,Guid,Guide,85,doc/master/classROOT_1_1Math_1_1VirtualIntegrator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VirtualIntegrator.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::VirtualIntegratorMultiDim Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::VirtualIntegratorMultiDim Class ReferenceabstractMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; Interface (abstract) class for multi numerical integration It must be implemented by the concrete Integrator classes like ROOT::Math::GSLMCIntegrator. ; Plug-in's exist in ROOT to be able to instantiate the derived classes via the plug-in manager. Users should not use directly this class but the concrete classes ROOT::Math::IntegratorMultiDim. ; Definition at line 160 of file VirtualIntegrator.h. Public Member Functions;  ~VirtualIntegratorMultiDim () override;  destructor: no operation ;  ; virtual double Integral (const double *, const double *)=0;  evaluate multi-dim integral ;  ; virtual ROOT::Math::IntegratorMultiDimOptions Options () const =0;  get the option used for the integration implement by derived class otherwise return default ones ;  ; virtual void SetFunction (const IMultiGenFunction &)=0;  setting a multi-dim function ;  ; virtual void SetOptions (const ROOT::Math::IntegratorMultiDimOptions &opt);  set the options (if needed must be re-implemented by derived classes) ;  ; virtual ROOT::Math::IntegrationMultiDim::Type Type () const;  return type of integrator ;  ;  Public Member Functions inherited from ROOT::Math::VirtualIntegrator; virtual ~VirtualIntegrator ();  destructor: no operation ;  ; virtual double Error () const =0;  return the estimate of the absolute Error of the last Integral calculation ;  ; virtual int NEval () const;  return number of function evaluations in calculating the integral (if integrator do not implement this function returns -1) ;  ; virtual double Result () const =0;  return the Result of the last Integral calculation ;  ; virtual void SetAbsTolerance (double)=0;  set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VirtualIntegratorMultiDim.html:93,Guid,Guide,93,doc/master/classROOT_1_1Math_1_1VirtualIntegratorMultiDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VirtualIntegratorMultiDim.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::VirtualIntegratorOneDim Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::VirtualIntegratorOneDim Class ReferenceabstractMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; Interface (abstract) class for 1D numerical integration It must be implemented by the concrete Integrator classes like ROOT::Math::GSLIntegrator. ; Plug-in's exist in ROOT to be able to instantiate the derived classes via the plug-in manager. Users should not use directly this class but the concrete classes ROOT::Math::IntegratorOneDim. ; Definition at line 101 of file VirtualIntegrator.h. Public Member Functions;  ~VirtualIntegratorOneDim () override;  destructor: no operation ;  ; virtual double Integral ()=0;  evaluate un-defined integral (between -inf, + inf) ;  ; virtual double Integral (const std::vector< double > &pts)=0;  evaluate integral with singular points ;  ; virtual double Integral (double a, double b)=0;  evaluate integral ;  ; virtual double IntegralCauchy (double a, double b, double c)=0;  evaluate Cauchy integral ;  ; virtual double IntegralLow (double b)=0;  evaluate integral over the (-inf, b) ;  ; virtual double IntegralUp (double a)=0;  evaluate integral over the (a, +inf) ;  ; virtual ROOT::Math::IntegratorOneDimOptions Options () const =0;  get the option used for the integration must be implemented by derived class ;  ; virtual void SetFunction (const IGenFunction &)=0;  set integration function ;  ; virtual void SetOptions (const ROOT::Math::IntegratorOneDimOptions &opt);  set the options (should be re-implemented by derived classes -if more options than tolerance exist ;  ; virtual ROOT::Math::IntegrationOneDim::Type Type () const;  return type of integrator ;  ;  Public Member Functions inherited from ROOT::Math::VirtualIntegrator; virtual ~VirtualIntegrator ();  destructor: no operation ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VirtualIntegratorOneDim.html:91,Guid,Guide,91,doc/master/classROOT_1_1Math_1_1VirtualIntegratorOneDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VirtualIntegratorOneDim.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::WrappedFunction< Func > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::WrappedFunction< Func > Class Template ReferenceMath » MathCore » Function Classes and Interfaces » Generic Function Evaluation Interfaces. ; template<typename Func = FreeFunctionPtr>; class ROOT::Math::WrappedFunction< Func >Template class to wrap any C++ callable object which takes one argument i.e. ; implementing operator() (double x) in a One-dimensional function interface. It provides a ROOT::Math::IGenFunction-like signature; Note: If you want to wrap just the reference (to avoid copying) you need to use Func& or const Func & as template parameter. The former should be used when the operator() is not a const method of Func ; Definition at line 45 of file WrappedFunction.h. Public Member Functions;  WrappedFunction (Func f);  construct from the pointer to the object and the member function ;  ; WrappedFunction * Clone () const override;  clone (required by the interface) ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  . Private Member Functions; double DoEval (double x) const override;  implementation of the evaluation function. Must be implemented by derived classes ;  . Private Attributes; Func fFunc;  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . #include <Math/WrappedFunction.h>. Inheritance diagram for ROOT::Math::WrappedFunction< Func >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedFunction.html:100,Guid,Guide,100,doc/master/classROOT_1_1Math_1_1WrappedFunction.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedFunction.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::WrappedMemFunction< FuncObj, MemFuncPtr > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::WrappedMemFunction< FuncObj, MemFuncPtr > Class Template ReferenceMath » MathCore » Function Classes and Interfaces » Generic Function Evaluation Interfaces. ; template<typename FuncObj, typename MemFuncPtr>; class ROOT::Math::WrappedMemFunction< FuncObj, MemFuncPtr >Template class to wrap any member function of a class taking a double and returning a double in a 1D function interface For example, if you have a class like: struct X { double Eval(double x); }; you can wrapped in the following way: WrappedMemFunction<X, double ( X::* ) (double) > f;. ; Definition at line 95 of file WrappedFunction.h. Public Member Functions;  WrappedMemFunction (FuncObj &obj, MemFuncPtr memFn);  construct from the pointer to the object and the member function ;  ; WrappedMemFunction * Clone () const override;  clone (required by the interface) ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  . Private Member Functions; double DoEval (double x) const override;  implementation of the evaluation function. Must be implemented by derived classes ;  . Private Attributes; MemFuncPtr fMemFunc;  ; FuncObj * fObj;  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . #include <Math/WrappedFunction.h>. Inheritance diagram for ROOT::Math::WrappedMemFunction< FuncObj, MemFuncPtr >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedMemFunction.html:118,Guid,Guide,118,doc/master/classROOT_1_1Math_1_1WrappedMemFunction.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedMemFunction.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::WrappedMemMultiFunction< FuncObj, MemFuncPtr > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::WrappedMemMultiFunction< FuncObj, MemFuncPtr > Class Template Reference. ; template<typename FuncObj, typename MemFuncPtr>; class ROOT::Math::WrappedMemMultiFunction< FuncObj, MemFuncPtr >; Definition at line 182 of file WrappedFunction.h. Public Member Functions;  WrappedMemMultiFunction (FuncObj &obj, MemFuncPtr memFn, unsigned int dim=1);  construct from the pointer to the object and the member function ;  ; WrappedMemMultiFunction * Clone () const override;  clone (required by the interface) ;  ; unsigned int NDim () const override;  Retrieve the dimension of the function. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; virtual ~IBaseFunctionMultiDimTempl ()=default;  ; virtual bool HasGradient () const;  ; T operator() (const T *x) const;  Evaluate the function at a point x[]. ;  . Private Member Functions; double DoEval (const double *x) const override;  . Private Attributes; unsigned int fDim;  ; MemFuncPtr fMemFunc;  ; FuncObj * fObj;  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . #include <Math/WrappedFunction.h>. Inheritance diagram for ROOT::Math::WrappedMemMultiFunction< FuncObj, MemFuncPtr >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ WrappedMemMultiFunction(). template<typename FuncObj , typename MemFuncPtr > . ROOT::Math::WrappedMemMultiFunction< FuncObj, MemFuncPtr >::WrappedMemMultiFunction ; (; FuncObj & ; obj, . MemFuncPtr ; memFn, . unsigned int ; dim = 1 . ). inline . cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedMemMultiFunction.html:123,Guid,Guide,123,doc/master/classROOT_1_1Math_1_1WrappedMemMultiFunction.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedMemMultiFunction.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::WrappedMultiFunction< Func > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::WrappedMultiFunction< Func > Class Template ReferenceMath » MathCore » Function Classes and Interfaces » Generic Function Evaluation Interfaces. ; template<typename Func = FreeMultiFunctionPtr>; class ROOT::Math::WrappedMultiFunction< Func >Template class to wrap any C++ callable object implementing operator() (const double * x) in a multi-dimensional function interface. ; It provides a ROOT::Math::IGenMultiFunction-like signature; Note: If you want to wrap just the reference (to avoid copying) you need to use Func& or const Func & as template parameter. The former should be used when the operator() is not a const method of Func ; Definition at line 143 of file WrappedFunction.h. Public Member Functions;  WrappedMultiFunction (Func f, unsigned int dim=1);  construct from the pointer to the object and the member function ;  ; WrappedMultiFunction * Clone () const override;  clone (required by the interface) ;  ; unsigned int NDim () const override;  Retrieve the dimension of the function. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; virtual ~IBaseFunctionMultiDimTempl ()=default;  ; virtual bool HasGradient () const;  ; T operator() (const T *x) const;  Evaluate the function at a point x[]. ;  . Private Member Functions; double DoEval (const double *x) const override;  . Private Attributes; unsigned int fDim;  ; Func fFunc;  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . #include <Math/WrappedFunction.h>. Inheritance diagram for ROOT::Math::WrappedMultiFunction< Func >:. This browser is not able to show ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedMultiFunction.html:105,Guid,Guide,105,doc/master/classROOT_1_1Math_1_1WrappedMultiFunction.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedMultiFunction.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::WrappedMultiTF1Templ< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::WrappedMultiTF1Templ< T > Class Template ReferenceMath » MathCore » Function Classes and Interfaces. ; template<class T>; class ROOT::Math::WrappedMultiTF1Templ< T >Class to Wrap a ROOT Function class (like TF1) in a IParamMultiFunction interface of multi-dimensions to be used in the ROOT::Math numerical algorithm. ; This wrapper class does not own the TF1 pointer, so it assumes it exists during the wrapper lifetime. The class copy the TF1 pointer only when it owns it.; The class from ROOT version 6.03 does not contain anymore a copy of the parameters. The parameters are stored in the TF1 class. ; Definition at line 48 of file WrappedMultiTF1.h. Public Types; typedef ROOT::Math::IParametricFunctionMultiDimTempl< T >::BaseFunc BaseFunc;  ; typedef ROOT::Math::IParametricGradFunctionMultiDimTempl< T > BaseParamFunc;  ;  Public Types inherited from ROOT::Math::IParametricGradFunctionMultiDimTempl< T >; using BaseFunc = typename IParametricFunctionMultiDimTempl< T >::BaseFunc;  ; using BaseGradFunc = IGradientFunctionMultiDimTempl< T >;  ; using BaseParamFunc = IParametricFunctionMultiDimTempl< T >;  ;  Public Types inherited from ROOT::Math::IParametricFunctionMultiDimTempl< T >; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . Public Member Functions;  WrappedMultiTF1Templ (const WrappedMultiTF1Templ< T > &rhs);  Copy constructor. ;  ;  WrappedMultiTF1Templ (TF1 &f, unsigned int dim=0);  constructor from a function pointer to a TF1 If dim = 0 dimension is taken from TF1::GetNdim(). ;  ;  ~WrappedMultiTF1Templ () override;  Destructor (no operations). ;  ; WrappedMult",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedMultiTF1Templ.html:102,Guid,Guide,102,doc/master/classROOT_1_1Math_1_1WrappedMultiTF1Templ.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedMultiTF1Templ.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::WrappedParamFunction< FuncPtr > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::WrappedParamFunction< FuncPtr > Class Template ReferenceMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; template<typename FuncPtr = FreeParamMultiFunctionPtr>; class ROOT::Math::WrappedParamFunction< FuncPtr >WrappedParamFunction class to wrap any multi-dimensional function object implementing the operator()(const double * x, const double * p) in an interface-like IParamFunction with a vector storing and caching internally the parameter values. ; Definition at line 44 of file WrappedParamFunction.h. Public Member Functions; template<class Iterator > ;  WrappedParamFunction (FuncPtr func, unsigned int dim, Iterator begin, Iterator end);  Constructor a wrapped function from a pointer to a callable object, the function dimension and an iterator specifying begin and end of parameters. ;  ;  WrappedParamFunction (FuncPtr func, unsigned int dim=1, unsigned int npar=0, double *par=nullptr);  Constructor a wrapped function from a pointer to a callable object, the function dimension and number of parameters which are set to zero by default. ;  ; IMultiGenFunction * Clone () const override;  clone the function ;  ; unsigned int NDim () const override;  Retrieve the dimension of the function. ;  ; unsigned int NPar () const override;  Return the number of Parameters. ;  ; const double * Parameters () const override;  Access the parameter values. ;  ; void SetParameters (const double *p) override;  Set the parameter values. ;  ;  Public Member Functions inherited from ROOT::Math::IParametricFunctionMultiDimTempl< double >; double operator() (const double *x) const;  ; double operator() (const double *x, const double *p) const;  Evaluate functi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedParamFunction.html:108,Guid,Guide,108,doc/master/classROOT_1_1Math_1_1WrappedParamFunction.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedParamFunction.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::WrappedParamFunctionGen< FuncPtr > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::WrappedParamFunctionGen< FuncPtr > Class Template ReferenceMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; template<typename FuncPtr = FreeMultiFunctionPtr>; class ROOT::Math::WrappedParamFunctionGen< FuncPtr >WrappedParamGenFunction class to wrap any multi-dimensional function implementing the operator()(const double * ) in an interface-like IParamFunction, by fixing some of the variables and define them as parameters. ; i.e. transform any multi-dim function in a parametric function ; Definition at line 143 of file WrappedParamFunction.h. Public Member Functions;  WrappedParamFunctionGen (const FuncPtr &func, unsigned int dim, unsigned int npar, const double *par, const unsigned int *idx);  Constructor a wrapped function from a pointer to a generic callable object implementation operator()(const double *), the new function dimension, the number of parameters (number of fixed variables) and an array specifying the index of the fixed variables which became parameters in the new API. ;  ;  WrappedParamFunctionGen (FuncPtr &func, unsigned int dim, unsigned int npar, const double *par, const unsigned int *idx);  Constructor as before but taking now a non - const pointer to a callable object. ;  ; IMultiGenFunction * Clone () const override;  clone the function ;  ; unsigned int NDim () const override;  Retrieve the dimension of the function. ;  ; unsigned int NPar () const override;  Return the number of Parameters. ;  ; const double * Parameters () const override;  Access the parameter values. ;  ; void SetParameters (const double *p) override;  Set the parameter values. ;  ;  Public Member Functions inherited from ROOT::Math::IPar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedParamFunctionGen.html:111,Guid,Guide,111,doc/master/classROOT_1_1Math_1_1WrappedParamFunctionGen.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedParamFunctionGen.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::WrappedTF1 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::WrappedTF1 Class ReferenceMath » MathCore » Function Classes and Interfaces. ; Class to Wrap a ROOT Function class (like TF1) in a IParamFunction interface of one dimensions to be used in the ROOT::Math numerical algorithms The wrapper does not own bby default the TF1 pointer, so it assumes it exists during the wrapper lifetime. ; The class from ROOT version 6.03 does not contain anymore a copy of the parameters. The parameters are stored in the TF1 class. ; Definition at line 39 of file WrappedTF1.h. Public Types; typedef ROOT::Math::IParamGradFunction::BaseFunc BaseFunc;  ; typedef ROOT::Math::IParamGradFunction BaseGradFunc;  ; typedef ROOT::Math::IGradientFunctionOneDim IGrad;  ;  Public Types inherited from ROOT::Math::IParametricGradFunctionOneDim; typedef IParametricFunctionOneDim::BaseFunc BaseFunc;  ; typedef IGradientFunctionOneDim BaseGradFunc;  ; typedef IParametricFunctionOneDim BaseParamFunc;  ;  Public Types inherited from ROOT::Math::IParametricFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  ;  Public Types inherited from ROOT::Math::IGradientFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  ; typedef IGradientFunctionOneDim BaseGrad;  . Public Member Functions;  WrappedTF1 (const WrappedTF1 &rhs);  Copy constructor. ;  ;  WrappedTF1 (TF1 &f);  constructor from a TF1 function pointer. ;  ;  ~WrappedTF1 () override;  Destructor (no operations). ;  ; WrappedTF1 & operator= (const WrappedTF1 &rhs);  Assignment operator. ;  ; interface inherited from IFunction; ROOT::Math::IGenFunction * Clone () const override;  Clone the wrapper but not the original function. ;  ;  Public Member Functions inherited from ROOT::Math::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedTF1.html:78,Guid,Guide,78,doc/master/classROOT_1_1Math_1_1WrappedTF1.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedTF1.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::detail Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Enumerations |; Functions ; ROOT::Math::detail Namespace Reference. Classes; class  manipulator;  . Enumerations; enum  manip_t { open; , sep; , close; , bitforbit; };  . Functions; template<class char_t , class traits_t > ; char_t get_manip (std::basic_ios< char_t, traits_t > &ios, manip_t m);  ; int ios_data (int k);  ; template<class char_t , class traits_t > ; std::basic_ostream< char_t, traits_t > & operator<< (std::basic_ostream< char_t, traits_t > &os, detail::manipulator< char_t > const &manip);  ; template<class char_t , class traits_t > ; std::basic_istream< char_t, traits_t > & operator>> (std::basic_istream< char_t, traits_t > &is, detail::manipulator< char_t > const &manip);  ; template<class char_t , class traits_t > ; std::basic_istream< char_t, traits_t > & require_delim (std::basic_istream< char_t, traits_t > &is, manip_t m);  ; template<class char_t , class traits_t > ; void set_manip (std::basic_ios< char_t, traits_t > &ios, manip_t m, char_t ch);  . Enumeration Type Documentation. ◆ manip_t. enum ROOT::Math::detail::manip_t. Enumeratoropen ; sep ; close ; bitforbit . Definition at line 35 of file GenVectorIO.h. Function Documentation. ◆ get_manip(). template<class char_t , class traits_t > . char_t ROOT::Math::detail::get_manip ; (; std::basic_ios< char_t, traits_t > & ; ios, . manip_t ; m . ). inline . Definition at line 54 of file GenVectorIO.h. ◆ ios_data(). int ROOT::Math::detail::ios_data ; (; int ; k). inline . Definition at line 39 of file GenVectorIO.h. ◆ operator<<(). template<class char_t , class traits_t > . std::basic_ostream< char_t, traits_t > & ROOT::Math::detail::operator<< ; (; std::basic_ostream< char_t, traits_t > & ; os, . detail::manipulator< char_t > const & ; manip . ). inline . Definition at line 113 of file GenVectorIO.h. ◆ operator>>(). template<class char_t , class traits_t > . std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1detail.html:78,Guid,Guide,78,doc/master/namespaceROOT_1_1Math_1_1detail.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1detail.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::detail::manipulator< char_t > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::detail::manipulator< char_t > Class Template Reference. ; template<class char_t>; class ROOT::Math::detail::manipulator< char_t >; Definition at line 85 of file GenVectorIO.h. Public Member Functions;  manipulator (manip_t m, char_t ch=0);  ; template<class traits_t > ; void set (std::basic_ios< char_t, traits_t > &ios) const;  . Private Attributes; char_t fChar;  ; manip_t fMan;  . #include <Math/GenVector/GenVectorIO.h>; Constructor & Destructor Documentation. ◆ manipulator(). template<class char_t > . ROOT::Math::detail::manipulator< char_t >::manipulator ; (; manip_t ; m, . char_t ; ch = 0 . ). inlineexplicit . Definition at line 89 of file GenVectorIO.h. Member Function Documentation. ◆ set(). template<class char_t > . template<class traits_t > . void ROOT::Math::detail::manipulator< char_t >::set ; (; std::basic_ios< char_t, traits_t > & ; ios); const. inline . Definition at line 98 of file GenVectorIO.h. Member Data Documentation. ◆ fChar. template<class char_t > . char_t ROOT::Math::detail::manipulator< char_t >::fChar. private . Definition at line 105 of file GenVectorIO.h. ◆ fMan. template<class char_t > . manip_t ROOT::Math::detail::manipulator< char_t >::fMan. private . Definition at line 104 of file GenVectorIO.h. math/genvector/inc/Math/GenVector/GenVectorIO.h. ROOTMathdetailmanipulator. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1detail_1_1manipulator.html:106,Guid,Guide,106,doc/master/classROOT_1_1Math_1_1detail_1_1manipulator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1detail_1_1manipulator.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::gv_detail Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Enumerations |; Functions ; ROOT::Math::gv_detail Namespace Reference. Classes; struct  ERROR_This_Rotation_Conversion_is_NOT_Supported;  . Enumerations; enum  ERotation3DMatrixIndex { ;   kXX = Rotation3D::kXX; , kXY = Rotation3D::kXY; , kXZ = Rotation3D::kXZ; , kYX = Rotation3D::kYX; , ;   kYY = Rotation3D::kYY; , kYZ = Rotation3D::kYZ; , kZX = Rotation3D::kZX; , kZY = Rotation3D::kZY; , ;   kZZ = Rotation3D::kZZ; , kXX = Rotation3D::kXX; , kXY = Rotation3D::kXY; , kXZ = Rotation3D::kXZ; , ;   kYX = Rotation3D::kYX; , kYY = Rotation3D::kYY; , kYZ = Rotation3D::kYZ; , kZX = Rotation3D::kZX; , ;   kZY = Rotation3D::kZY; , kZZ = Rotation3D::kZZ. };  ; enum  ERotation3DMatrixIndex { ;   kXX = Rotation3D::kXX; , kXY = Rotation3D::kXY; , kXZ = Rotation3D::kXZ; , kYX = Rotation3D::kYX; , ;   kYY = Rotation3D::kYY; , kYZ = Rotation3D::kYZ; , kZX = Rotation3D::kZX; , kZY = Rotation3D::kZY; , ;   kZZ = Rotation3D::kZZ; , kXX = Rotation3D::kXX; , kXY = Rotation3D::kXY; , kXZ = Rotation3D::kXZ; , ;   kYX = Rotation3D::kYX; , kYY = Rotation3D::kYY; , kYZ = Rotation3D::kYZ; , kZX = Rotation3D::kZX; , ;   kZY = Rotation3D::kZY; , kZZ = Rotation3D::kZZ. };  . Functions; void convert (AxisAngle const &from, EulerAngles &to);  ; void convert (AxisAngle const &from, Quaternion &to);  ; void convert (AxisAngle const &from, Rotation3D &to);  ; void convert (AxisAngle const &from, RotationZYX &to);  ; void convert (EulerAngles const &from, AxisAngle &to);  ; void convert (EulerAngles const &from, Quaternion &to);  ; void convert (EulerAngles const &from, Rotation3D &to);  ; void convert (EulerAngles const &from, RotationZYX &to);  ; void convert (Quaternion const &from, AxisAngle &to);  ; void convert (Quaternion const &from, EulerAngles &to);  ; void convert (Quaternion const &from, Rotation3D &to);  ; void convert (Quaternion const &from, Rotat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1gv__detail.html:81,Guid,Guide,81,doc/master/namespaceROOT_1_1Math_1_1gv__detail.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1gv__detail.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::meta_col_dot< 0 > Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::meta_col_dot< 0 > Struct Reference. . Definition at line 157 of file MatrixFunctions.h. Static Public Member Functions; template<class Matrix , class Vector > ; static Matrix::value_type f (const Matrix &lhs, const Vector &rhs, const unsigned int offset);  . #include <Math/MatrixFunctions.h>; Member Function Documentation. ◆ f(). template<class Matrix , class Vector > . static Matrix::value_type ROOT::Math::meta_col_dot< 0 >::f ; (; const Matrix & ; lhs, . const Vector & ; rhs, . const unsigned int ; offset . ). inlinestatic . Definition at line 159 of file MatrixFunctions.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/MatrixFunctions.h. ROOTMathmeta_col_dot< 0 >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__col__dot_3_010_01_4.html:86,Guid,Guide,86,doc/master/structROOT_1_1Math_1_1meta__col__dot_3_010_01_4.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__col__dot_3_010_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::meta_col_dot< I > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::meta_col_dot< I > Struct Template Reference. ; template<unsigned int I>; struct ROOT::Math::meta_col_dot< I >; Definition at line 143 of file MatrixFunctions.h. Static Public Member Functions; template<class Matrix , class Vector > ; static Matrix::value_type f (const Matrix &lhs, const Vector &rhs, const unsigned int offset);  . #include <Math/MatrixFunctions.h>; Member Function Documentation. ◆ f(). template<unsigned int I> . template<class Matrix , class Vector > . static Matrix::value_type ROOT::Math::meta_col_dot< I >::f ; (; const Matrix & ; lhs, . const Vector & ; rhs, . const unsigned int ; offset . ). inlinestatic . Definition at line 145 of file MatrixFunctions.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/MatrixFunctions.h. ROOTMathmeta_col_dot. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__col__dot.html:95,Guid,Guide,95,doc/master/structROOT_1_1Math_1_1meta__col__dot.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__col__dot.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::meta_dot< 0 > Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::meta_dot< 0 > Struct Reference. . Definition at line 146 of file Functions.h. Static Public Member Functions; template<class A , class B , class T > ; static T f (const A &lhs, const B &rhs, const T &);  . #include <Math/Functions.h>; Member Function Documentation. ◆ f(). template<class A , class B , class T > . static T ROOT::Math::meta_dot< 0 >::f ; (; const A & ; lhs, . const B & ; rhs, . const T & ;  . ). inlinestatic . Definition at line 148 of file Functions.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/Functions.h. ROOTMathmeta_dot< 0 >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__dot_3_010_01_4.html:82,Guid,Guide,82,doc/master/structROOT_1_1Math_1_1meta__dot_3_010_01_4.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__dot_3_010_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::meta_dot< I > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::meta_dot< I > Struct Template Reference. ; template<unsigned int I>; struct ROOT::Math::meta_dot< I >; Definition at line 134 of file Functions.h. Static Public Member Functions; template<class A , class B , class T > ; static T f (const A &lhs, const B &rhs, const T &x);  . #include <Math/Functions.h>; Member Function Documentation. ◆ f(). template<unsigned int I> . template<class A , class B , class T > . static T ROOT::Math::meta_dot< I >::f ; (; const A & ; lhs, . const B & ; rhs, . const T & ; x . ). inlinestatic . Definition at line 136 of file Functions.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/Functions.h. ROOTMathmeta_dot. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__dot.html:91,Guid,Guide,91,doc/master/structROOT_1_1Math_1_1meta__dot.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__dot.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::meta_mag< 0 > Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::meta_mag< 0 > Struct Reference. . Definition at line 211 of file Functions.h. Static Public Member Functions; template<class A , class T > ; static T f (const A &rhs, const T &);  . #include <Math/Functions.h>; Member Function Documentation. ◆ f(). template<class A , class T > . static T ROOT::Math::meta_mag< 0 >::f ; (; const A & ; rhs, . const T & ;  . ). inlinestatic . Definition at line 213 of file Functions.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/Functions.h. ROOTMathmeta_mag< 0 >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__mag_3_010_01_4.html:82,Guid,Guide,82,doc/master/structROOT_1_1Math_1_1meta__mag_3_010_01_4.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__mag_3_010_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::meta_mag< I > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::meta_mag< I > Struct Template Reference. ; template<unsigned int I>; struct ROOT::Math::meta_mag< I >; Definition at line 199 of file Functions.h. Static Public Member Functions; template<class A , class T > ; static T f (const A &rhs, const T &x);  . #include <Math/Functions.h>; Member Function Documentation. ◆ f(). template<unsigned int I> . template<class A , class T > . static T ROOT::Math::meta_mag< I >::f ; (; const A & ; rhs, . const T & ; x . ). inlinestatic . Definition at line 201 of file Functions.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/Functions.h. ROOTMathmeta_mag. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__mag.html:91,Guid,Guide,91,doc/master/structROOT_1_1Math_1_1meta__mag.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__mag.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::meta_matrix_dot< 0 > Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::meta_matrix_dot< 0 > Struct Reference. . Definition at line 319 of file MatrixFunctions.h. Static Public Member Functions; template<class MatrixA , class MatrixB > ; static MatrixA::value_type f (const MatrixA &lhs, const MatrixB &rhs, const unsigned int offset);  ; template<class MatrixA , class MatrixB > ; static MatrixA::value_type g (const MatrixA &lhs, const MatrixB &rhs, unsigned int i, unsigned int j);  . #include <Math/MatrixFunctions.h>; Member Function Documentation. ◆ f(). template<class MatrixA , class MatrixB > . static MatrixA::value_type ROOT::Math::meta_matrix_dot< 0 >::f ; (; const MatrixA & ; lhs, . const MatrixB & ; rhs, . const unsigned int ; offset . ). inlinestatic . Definition at line 322 of file MatrixFunctions.h. ◆ g(). template<class MatrixA , class MatrixB > . static MatrixA::value_type ROOT::Math::meta_matrix_dot< 0 >::g ; (; const MatrixA & ; lhs, . const MatrixB & ; rhs, . unsigned int ; i, . unsigned int ; j . ). inlinestatic . Definition at line 331 of file MatrixFunctions.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/MatrixFunctions.h. ROOTMathmeta_matrix_dot< 0 >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__matrix__dot_3_010_01_4.html:89,Guid,Guide,89,doc/master/structROOT_1_1Math_1_1meta__matrix__dot_3_010_01_4.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__matrix__dot_3_010_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::meta_matrix_dot< I > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::meta_matrix_dot< I > Struct Template Reference. ; template<unsigned int I>; struct ROOT::Math::meta_matrix_dot< I >; Definition at line 292 of file MatrixFunctions.h. Static Public Member Functions; template<class MatrixA , class MatrixB > ; static MatrixA::value_type f (const MatrixA &lhs, const MatrixB &rhs, const unsigned int offset);  ; template<class MatrixA , class MatrixB > ; static MatrixA::value_type g (const MatrixA &lhs, const MatrixB &rhs, unsigned int i, unsigned int j);  . #include <Math/MatrixFunctions.h>; Member Function Documentation. ◆ f(). template<unsigned int I> . template<class MatrixA , class MatrixB > . static MatrixA::value_type ROOT::Math::meta_matrix_dot< I >::f ; (; const MatrixA & ; lhs, . const MatrixB & ; rhs, . const unsigned int ; offset . ). inlinestatic . Definition at line 295 of file MatrixFunctions.h. ◆ g(). template<unsigned int I> . template<class MatrixA , class MatrixB > . static MatrixA::value_type ROOT::Math::meta_matrix_dot< I >::g ; (; const MatrixA & ; lhs, . const MatrixB & ; rhs, . unsigned int ; i, . unsigned int ; j . ). inlinestatic . Definition at line 305 of file MatrixFunctions.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/MatrixFunctions.h. ROOTMathmeta_matrix_dot. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__matrix__dot.html:98,Guid,Guide,98,doc/master/structROOT_1_1Math_1_1meta__matrix__dot.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__matrix__dot.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::meta_row_dot< 0 > Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::meta_row_dot< 0 > Struct Reference. . Definition at line 97 of file MatrixFunctions.h. Static Public Member Functions; template<class A , class B > ; static A::value_type f (const A &lhs, const B &rhs, const unsigned int offset);  . #include <Math/MatrixFunctions.h>; Member Function Documentation. ◆ f(). template<class A , class B > . static A::value_type ROOT::Math::meta_row_dot< 0 >::f ; (; const A & ; lhs, . const B & ; rhs, . const unsigned int ; offset . ). inlinestatic . Definition at line 99 of file MatrixFunctions.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/MatrixFunctions.h. ROOTMathmeta_row_dot< 0 >. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__row__dot_3_010_01_4.html:86,Guid,Guide,86,doc/master/structROOT_1_1Math_1_1meta__row__dot_3_010_01_4.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__row__dot_3_010_01_4.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::meta_row_dot< I > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::meta_row_dot< I > Struct Template Reference. ; template<unsigned int I>; struct ROOT::Math::meta_row_dot< I >; Definition at line 84 of file MatrixFunctions.h. Static Public Member Functions; template<class A , class B > ; static A::value_type f (const A &lhs, const B &rhs, const unsigned int offset);  . #include <Math/MatrixFunctions.h>; Member Function Documentation. ◆ f(). template<unsigned int I> . template<class A , class B > . static A::value_type ROOT::Math::meta_row_dot< I >::f ; (; const A & ; lhs, . const B & ; rhs, . const unsigned int ; offset . ). inlinestatic . Definition at line 86 of file MatrixFunctions.h. The documentation for this struct was generated from the following file:; math/smatrix/inc/Math/MatrixFunctions.h. ROOTMathmeta_row_dot. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__row__dot.html:95,Guid,Guide,95,doc/master/structROOT_1_1Math_1_1meta__row__dot.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1meta__row__dot.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Math::rowOffsetsUtils Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Functions ; ROOT::Math::rowOffsetsUtils Namespace Reference. Classes; struct  indices;  ; struct  make_indices;  ; struct  make_indices_impl;  ; struct  make_indices_impl< I, indices< Indices... >, N >;  ; struct  make_indices_impl< N, indices< Indices... >, N >;  . Functions; template<int I0, class F , int... I> ; constexpr std::array< decltype(std::declval< F >()(std::declval< int >())), sizeof...(I)> do_make (F f, indices< I... >);  ; template<int N, int I0 = 0, class F > ; constexpr std::array< decltype(std::declval< F >()(std::declval< int >())), N > make (F f);  . Function Documentation. ◆ do_make(). template<int I0, class F , int... I> . constexpr std::array< decltype(std::declval< F >()(std::declval< int >())), sizeof...(I)> ROOT::Math::rowOffsetsUtils::do_make ; (; F ; f, . indices< I... > ;  . ). constexpr . Definition at line 178 of file MatrixRepresentationsStatic.h. ◆ make(). template<int N, int I0 = 0, class F > . constexpr std::array< decltype(std::declval< F >()(std::declval< int >())), N > ROOT::Math::rowOffsetsUtils::make ; (; F ; f). constexpr . Definition at line 186 of file MatrixRepresentationsStatic.h. ROOTMathrowOffsetsUtils. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1rowOffsetsUtils.html:87,Guid,Guide,87,doc/master/namespaceROOT_1_1Math_1_1rowOffsetsUtils.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1rowOffsetsUtils.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::MathMore Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; ROOT::MathMore Namespace Reference. Functions; double chisquared_quantile (double z, double r);  Re-implementation in MathMore of the Inverse ( \(D^{-1}(z)\)) of the cumulative distribution function of the lower tail of the \(\chi^2\) distribution with \(r\) degrees of freedom (ROOT::Math::chisquared_cdf). ;  ; double gamma_quantile (double z, double alpha, double theta);  Re-implementation in MathMore of the Inverse ( \(D^{-1}(z)\)) of the cumulative distribution function of the lower tail of the gamma distribution (ROOT::Math::gamma_cdf). ;  . ROOTMathMore. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1MathMore.html:74,Guid,Guide,74,doc/master/namespaceROOT_1_1MathMore.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1MathMore.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::MathMore Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; ROOT::MathMore Namespace Reference. Functions; double chisquared_quantile (double z, double r);  Re-implementation in MathMore of the Inverse ( \(D^{-1}(z)\)) of the cumulative distribution function of the lower tail of the \(\chi^2\) distribution with \(r\) degrees of freedom (ROOT::Math::chisquared_cdf). ;  ; double gamma_quantile (double z, double alpha, double theta);  Re-implementation in MathMore of the Inverse ( \(D^{-1}(z)\)) of the cumulative distribution function of the lower tail of the gamma distribution (ROOT::Math::gamma_cdf). ;  . ROOTMathMore. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:14:02 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1MathMore.html:73,Guid,Guide,73,doc/v632/namespaceROOT_1_1MathMore.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1MathMore.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::Meta Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; ROOT::Meta Namespace Reference. Namespaces; namespace  Selection;  . ROOTMeta. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Meta.html:70,Guid,Guide,70,doc/master/namespaceROOT_1_1Meta.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Meta.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::Meta Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; ROOT::Meta Namespace Reference. Namespaces; namespace  Selection;  . ROOTMeta. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:14:02 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Meta.html:69,Guid,Guide,69,doc/v632/namespaceROOT_1_1Meta.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Meta.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Minuit Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Enumerations ; ROOT::Minuit Namespace Reference. Enumerations; enum  EMinimizerType { ;   kMigrad; , kSimplex; , kCombined; , kMigradImproved; , ;   kScan; , kSeek. };  . Enumeration Type Documentation. ◆ EMinimizerType. enum ROOT::Minuit::EMinimizerType. EnumeratorkMigrad ; kSimplex ; kCombined ; kMigradImproved ; kScan ; kSeek . Definition at line 31 of file TMinuitMinimizer.h. ROOTMinuit. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Minuit.html:72,Guid,Guide,72,doc/master/namespaceROOT_1_1Minuit.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Minuit.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Minuit Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Enumerations ; ROOT::Minuit Namespace Reference. Enumerations; enum  EMinimizerType { ;   kMigrad; , kSimplex; , kCombined; , kMigradImproved; , ;   kScan; , kSeek. };  . Enumeration Type Documentation. ◆ EMinimizerType. enum ROOT::Minuit::EMinimizerType. EnumeratorkMigrad ; kSimplex ; kCombined ; kMigradImproved ; kScan ; kSeek . Definition at line 31 of file TMinuitMinimizer.h. ROOTMinuit. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:14:02 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Minuit.html:71,Guid,Guide,71,doc/v632/namespaceROOT_1_1Minuit.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Minuit.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::Minuit2 Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT::Minuit2 Namespace Reference. Classes; class  ABObj;  ; class  ABObj< sym, LASymMatrix, double >;  ; class  ABObj< vec, LAVector, double >;  ; class  ABProd;  ; class  ABSum;  ; class  AlgebraicProdType;  ; class  AlgebraicProdType< gen, gen >;  ; class  AlgebraicProdType< gen, sym >;  ; class  AlgebraicProdType< gen, vec >;  ; class  AlgebraicProdType< sym, gen >;  ; class  AlgebraicProdType< sym, sym >;  ; class  AlgebraicProdType< sym, vec >;  ; class  AlgebraicProdType< T, T >;  ; class  AlgebraicProdType< vec, gen >;  ; class  AlgebraicProdType< vec, sym >;  ; class  AlgebraicSumType;  ; class  AlgebraicSumType< gen, vec >;  ; class  AlgebraicSumType< sym, vec >;  ; class  AlgebraicSumType< T, T >;  ; class  AlgebraicSumType< vec, gen >;  ; class  AlgebraicSumType< vec, sym >;  ; class  AnalyticalGradientCalculator;  ; class  BFGSErrorUpdator;  Update of the covariance matrix for the Variable Metric minimizer (MIGRAD) More...;  ; class  BFGSMinimizerType;  ; class  CombinedMinimizer;  Combined minimizer: combination of Migrad and Simplex. More...;  ; class  CombinedMinimumBuilder;  ; class  ContoursError;  ; class  DavidonErrorUpdator;  Update of the covariance matrix for the Variable Metric minimizer (MIGRAD) More...;  ; struct  DerivatorElement;  ; class  ExternalInternalGradientCalculator;  Similar to the AnalyticalGradientCalculator, the ExternalInternalGradientCalculator supplies Minuit with an externally calculated gradient. More...;  ; class  FCNAdapter;  template wrapped class for adapting to FCNBase signature More...;  ; class  FCNBase;  Interface (abstract class) defining the function to be minimized, which has to be implemented by the user. More...;  ; class  FCNGradAdapter;  template wrapped class for adapting to FCNBase signature a IGradFunction More...;  ; cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Minuit2.html:73,Guid,Guide,73,doc/master/namespaceROOT_1_1Minuit2.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Minuit2.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Minuit2 Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT::Minuit2 Namespace Reference. Classes; class  ABObj;  ; class  ABObj< sym, LASymMatrix, double >;  ; class  ABObj< vec, LAVector, double >;  ; class  ABProd;  ; class  ABSum;  ; class  AlgebraicProdType;  ; class  AlgebraicProdType< gen, gen >;  ; class  AlgebraicProdType< gen, sym >;  ; class  AlgebraicProdType< gen, vec >;  ; class  AlgebraicProdType< sym, gen >;  ; class  AlgebraicProdType< sym, sym >;  ; class  AlgebraicProdType< sym, vec >;  ; class  AlgebraicProdType< T, T >;  ; class  AlgebraicProdType< vec, gen >;  ; class  AlgebraicProdType< vec, sym >;  ; class  AlgebraicSumType;  ; class  AlgebraicSumType< gen, vec >;  ; class  AlgebraicSumType< sym, vec >;  ; class  AlgebraicSumType< T, T >;  ; class  AlgebraicSumType< vec, gen >;  ; class  AlgebraicSumType< vec, sym >;  ; class  AnalyticalGradientCalculator;  ; class  BFGSErrorUpdator;  Update of the covariance matrix for the Variable Metric minimizer (MIGRAD) More...;  ; class  BFGSMinimizerType;  ; class  CombinedMinimizer;  Combined minimizer: combination of Migrad and Simplex. More...;  ; class  CombinedMinimumBuilder;  ; class  ContoursError;  ; class  DavidonErrorUpdator;  Update of the covariance matrix for the Variable Metric minimizer (MIGRAD) More...;  ; struct  DerivatorElement;  ; class  ExternalInternalGradientCalculator;  Similar to the AnalyticalGradientCalculator, the ExternalInternalGradientCalculator supplies Minuit with an externally calculated gradient. More...;  ; class  FCNAdapter;  template wrapped class for adapting to FCNBase signature More...;  ; class  FCNBase;  Interface (abstract class) defining the function to be minimized, which has to be implemented by the user. More...;  ; class  FCNGradAdapter;  template wrapped class for adapting to FCNBase signature a IGradFunction More...;  ; cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Minuit2.html:72,Guid,Guide,72,doc/v632/namespaceROOT_1_1Minuit2.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Minuit2.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Minuit2::Minuit2Minimizer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Minuit2::Minuit2Minimizer Class ReferenceMath » Minuit2 Minimization Library. ; Minuit2Minimizer class implementing the ROOT::Math::Minimizer interface for Minuit2 minimization algorithm. ; In ROOT it can be instantiated using the plug-in manager (plug-in ""Minuit2"") Using a string (used by the plugin manager) or via an enumeration an one can set all the possible minimization algorithms (Migrad, Simplex, Combined, Scan and Fumili).; Refer to the guide for an introduction how Minuit works. ; Definition at line 54 of file Minuit2Minimizer.h. Public Member Functions;  Minuit2Minimizer (const char *type);  Constructor with a char (used by PM) ;  ;  Minuit2Minimizer (ROOT::Minuit2::EMinimizerType type=ROOT::Minuit2::kMigrad);  Default constructor. ;  ;  ~Minuit2Minimizer () override;  Destructor (no operations) ;  ; void Clear () override;  reset for consecutive minimization - implement if needed ;  ; bool Contour (unsigned int i, unsigned int j, unsigned int &npoints, double *xi, double *xj) override;  find the contour points (xi,xj) of the function for parameter i and j around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; double Correlation (unsigned int i, unsigned int j) const override;  return correlation coefficient between variable i and j. ;  ; double CovMatrix (unsigned int i, unsigned int j) const override;  return covariance matrix elements if the variable is fixed or const the value is zero The ordering of the variables is the same as in errors and parameter value. ;  ; int CovMatrixStatus () const override;  return the status of the covariance matrix status = -1 : not available (inversion failed or Hesse failed) status = 0 : available but not positive defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html:87,Guid,Guide,87,doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,3,"['Guid', 'Simpl', 'guid']","['Guide', 'Simplex', 'guide']"
Usability,". ROOT: ROOT::Quartz Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Functions |; Variables ; ROOT::Quartz Namespace Reference. Classes; class  CGAAStateGuard;  ; class  CGStateGuard;  ; class  TextLine;  . Functions; void DrawBox (CGContextRef ctx, Int_t x1, Int_t y1, Int_t x2, Int_t y2, bool hollow);  ; void DrawFillArea (CGContextRef ctx, Int_t n, TPoint *xy, Bool_t drawShadow);  ; void DrawLine (CGContextRef ctx, Int_t x1, Int_t y1, Int_t x2, Int_t y2);  ; void DrawMarkerDot (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFourSquaresPlus (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFourSquaresX (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullCross (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullCrossX (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullDiamond (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullDotLarge (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullDotMedium (CGContextRef ctx, unsigned n, const TPoint *xy);  ; void DrawMarkerFullDotSmall (CGContextRef ctx, unsigned n, const TPoint *xy);  ; void DrawMarkerFullDoubleDiamond (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullFourTrianglesPlus (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullFourTrianglesX (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullSquare (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullStar (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullThreeTriangles (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Quartz.html:72,Guid,Guide,72,doc/master/namespaceROOT_1_1Quartz.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Quartz.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::Quartz Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Functions |; Variables ; ROOT::Quartz Namespace Reference. Classes; class  CGAAStateGuard;  ; class  CGStateGuard;  ; class  TextLine;  . Functions; void DrawBox (CGContextRef ctx, Int_t x1, Int_t y1, Int_t x2, Int_t y2, bool hollow);  ; void DrawFillArea (CGContextRef ctx, Int_t n, TPoint *xy, Bool_t drawShadow);  ; void DrawLine (CGContextRef ctx, Int_t x1, Int_t y1, Int_t x2, Int_t y2);  ; void DrawMarkerDot (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFourSquaresPlus (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFourSquaresX (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullCross (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullCrossX (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullDiamond (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullDotLarge (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullDotMedium (CGContextRef ctx, unsigned n, const TPoint *xy);  ; void DrawMarkerFullDotSmall (CGContextRef ctx, unsigned n, const TPoint *xy);  ; void DrawMarkerFullDoubleDiamond (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullFourTrianglesPlus (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullFourTrianglesX (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullSquare (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullStar (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; void DrawMarkerFullThreeTriangles (CGContextRef ctx, unsigned n, const TPoint *xy, Size_t markerSize);  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Quartz.html:71,Guid,Guide,71,doc/v632/namespaceROOT_1_1Quartz.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Quartz.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::R Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs |; Functions |; Variables ; ROOT::R Namespace Reference. namespace associated R package for ROOT. ; More... Classes; class  class_;  ; class  TRDataFrame;  This is a class to create DataFrames from ROOT to R. More...;  ; class  TRFunctionExport;  This is a class to pass functions from ROOT to R. More...;  ; class  TRFunctionImport;  This is a class to pass functions from ROOT to R. More...;  ; class  TRInterface;  ROOT R was implemented using the R Project library and the modules Rcpp and RInside More...;  ; class  TRObject;  This is a class to get ROOT's objects from R's objects. More...;  . Typedefs; typedef Rcpp::TRInternalFunction_Impl< Rcpp::PreserveStorage > TRInternalFunction;  . Functions; template<class T > ; void function (const Char_t *name_, T fun, const Char_t *docstring=0);  ; const Rcpp::internal::NamedPlaceHolder & Label (Rcpp::_);  ; char * R_completion_generator (const char *text, int state);  ; char ** R_custom_completion (const char *text, int start, int end);  . Variables; const Rcpp::internal::NamedPlaceHolder & Label;  ; VARIABLE_IS_NOT_USED SEXP ModuleSymRef = NULL;  ; SEXP RComp_assignBufferSym;  ; SEXP RComp_assignEndSym;  ; SEXP RComp_assignStartSym;  ; SEXP RComp_assignTokenSym;  ; SEXP RComp_completeTokenSym;  ; SEXP RComp_getFileCompSym;  ; SEXP RComp_retrieveCompsSym;  ; SEXP rcompgen_rho;  . Detailed Description; namespace associated R package for ROOT. ; Typedef Documentation. ◆ TRInternalFunction. typedef Rcpp::TRInternalFunction_Impl<Rcpp::PreserveStorage> ROOT::R::TRInternalFunction. Definition at line 61 of file TRInternalFunction.h. Function Documentation. ◆ function(). template<class T > . void ROOT::R::function ; (; const Char_t * ; name_, . T ; fun, . const Char_t * ; docstring = 0 . ). Definition at line 167 of file RExports.h. ◆ Label(). const Rcpp::internal::NamedPlaceHolder & ROOT::R::La",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1R.html:67,Guid,Guide,67,doc/master/namespaceROOT_1_1R.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1R.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::R Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs |; Functions |; Variables ; ROOT::R Namespace Reference. namespace associated R package for ROOT. ; More... Classes; class  class_;  ; class  TRDataFrame;  This is a class to create DataFrames from ROOT to R. More...;  ; class  TRFunctionExport;  This is a class to pass functions from ROOT to R. More...;  ; class  TRFunctionImport;  This is a class to pass functions from ROOT to R. More...;  ; class  TRInterface;  ROOT R was implemented using the R Project library and the modules Rcpp and RInside More...;  ; class  TRObject;  This is a class to get ROOT's objects from R's objects. More...;  . Typedefs; typedef Rcpp::TRInternalFunction_Impl< Rcpp::PreserveStorage > TRInternalFunction;  . Functions; template<class T > ; void function (const Char_t *name_, T fun, const Char_t *docstring=0);  ; const Rcpp::internal::NamedPlaceHolder & Label (Rcpp::_);  ; char * R_completion_generator (const char *text, int state);  ; char ** R_custom_completion (const char *text, int start, int end);  . Variables; const Rcpp::internal::NamedPlaceHolder & Label;  ; VARIABLE_IS_NOT_USED SEXP ModuleSymRef = NULL;  ; SEXP RComp_assignBufferSym;  ; SEXP RComp_assignEndSym;  ; SEXP RComp_assignStartSym;  ; SEXP RComp_assignTokenSym;  ; SEXP RComp_completeTokenSym;  ; SEXP RComp_getFileCompSym;  ; SEXP RComp_retrieveCompsSym;  ; SEXP rcompgen_rho;  . Detailed Description; namespace associated R package for ROOT. ; Typedef Documentation. ◆ TRInternalFunction. typedef Rcpp::TRInternalFunction_Impl<Rcpp::PreserveStorage> ROOT::R::TRInternalFunction. Definition at line 61 of file TRInternalFunction.h. Function Documentation. ◆ function(). template<class T > . void ROOT::R::function ; (; const Char_t * ; name_, . T ; fun, . const Char_t * ; docstring = 0 . ). Definition at line 167 of file RExports.h. ◆ Label(). const Rcpp::internal::NamedPlaceHolder & ROOT::R::Lab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1R.html:66,Guid,Guide,66,doc/v632/namespaceROOT_1_1R.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1R.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::R::TRDataFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Friends |; List of all members ; ROOT::R::TRDataFrame Class ReferenceR Interface for Statistical Computing. ; This is a class to create DataFrames from ROOT to R. ; TRDataFrame class; DataFrame is a very important datatype in R and in ROOTR we have a class to manipulate; dataframes called TRDataFrame, with a lot of very useful operators overloaded to work with TRDataFrame's objects; in a similar way that in the R environment but from c++ in ROOT.; Example:. Lets to create need data to play with dataframe features. Creating variables. TVectorD v1(3);; std::vector<Double_t> v2(3);; std::array<Int_t,3> v3{ {1,2,3} };; std::list<std::string> names;; TVectorT< Double_t >; v2@ v2Definition rootcling_impl.cxx:3702; v3@ v3Definition rootcling_impl.cxx:3703; v1@ v1Definition rootcling_impl.cxx:3701; Assigning values . v1[0]=1;; v1[1]=2;; v1[2]=3;; ; v2[0]=0.101;; v2[1]=0.202;; v2[2]=0.303;; ; names.push_back(""v1"");; names.push_back(""v2"");; names.push_back(""v3"");; ; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; ROOT::R::TRInterfaceROOT R was implemented using the R Project library and the modules Rcpp and RInsideDefinition TRInterface.h:136; ROOT::R::TRInterface::Instancestatic TRInterface & Instance()static method to get an TRInterface instance referenceDefinition TRInterface.cxx:187; In R the dataframe have associate to every column a label, in ROOTR you can have the same label using the class ROOT::R::Label to create a TRDataFrame where you data have a label associate. Cre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1R_1_1TRDataFrame.html:76,Guid,Guide,76,doc/master/classROOT_1_1R_1_1TRDataFrame.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1R_1_1TRDataFrame.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::R::TRFunctionExport Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Friends |; List of all members ; ROOT::R::TRFunctionExport Class ReferenceR Interface for Statistical Computing. ; This is a class to pass functions from ROOT to R. ; TRFunctionExport class; The TRFunctionExport class lets you pass ROOT's functions to R's environment. The next example was based in ; https://root.cern/doc/master/NumericalMinimization_8C.html ; http://stat.ethz.ch/R-manual/R-devel/library/stats/html/optim.html. Let \( f(x,y)=(x-1)^{2} + 100(y-x^{2})^{2} \) , which is called the Rosenbrock function.; It's known that this function has a minimum when \( y = x^{2}\) , and \( x = 1.\) Let's get the minimum using R's optim package through ROOTR's interface. In the code this function was called ""Double_t RosenBrock(const TVectorD xx )"", because for optim, the input in your function definition must be a single vector.; The Gradient is formed by; \( \frac{\partial f}{\partial x} = -400x(y - x^{2}) - 2(1 - x) \); \( \frac{\partial f}{\partial y} = 200(y - x^{2}); \); The ""TVectorD RosenBrockGrad(const TVectorD xx )"" function must have a single vector as the argument a it will return a single vetor.; #include<TRInterface.h>; ; //in the next function the pointer *double must be changed by TVectorD, because the pointer has no; //sense in R's environment.; Double_t RosenBrock(const TVectorD xx ); {; const Double_t x = xx[0];; const Double_t y = xx[1];; const Double_t tmp1 = y-x*x;; const Double_t tmp2 = 1-x;; return 100*tmp1*tmp1+tmp2*tmp2;; }; ; TVectorD RosenBrockGrad(const TVectorD xx ); {; const Double_t x = xx[0];; const Double_t y = xx[1];; TVectorD grad(2);; grad[0]=-400 * x * (y - x * x) - 2 * (1 - x);; grad[1]=200 * (y - x * x);; return grad;; }; ; ; void Minimization(); {; ROOT::R::TRInterface &r=ROOT::R::TRInterface::In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1R_1_1TRFunctionExport.html:81,Guid,Guide,81,doc/master/classROOT_1_1R_1_1TRFunctionExport.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1R_1_1TRFunctionExport.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::R::TRFunctionImport Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; ROOT::R::TRFunctionImport Class ReferenceR Interface for Statistical Computing. ; This is a class to pass functions from ROOT to R. ; TRFunctionImport class; The TRFunctionImport class lets you call R's functions to ROOT's environment; The object associated to this class have a set of overloaded operators to use the object like function. #include<TRInterface.h>; ; using namespace ROOT::R;; void Function(); {; TRInterface &r = TRInterface::Instance();; r.SetVerbose(1);; ////////////////////////////////////////; //defining functions to be used from R//; ////////////////////////////////////////; TRFunctionImport c(""c"");; TRFunctionImport list(""list"");; TRFunctionImport asformula(""as.formula"");; TRFunctionImport nls(""nls"");; TRFunctionImport confint(""confint"");; TRFunctionImport summary(""summary"");; TRFunctionImport print(""print"");; TRFunctionImport plot(""plot"");; TRFunctionImport lines(""lines"");; TRFunctionImport devnew(""dev.new"");; TRFunctionImport devoff(""dev.off"");; TRFunctionImport min(""min"");; TRFunctionImport max(""max"");; TRFunctionImport seq(""seq"");; TRFunctionImport predict(""predict"");; ; r<<""options(device='png')"";//enable plot in png file; ; ////////////////////////; //doing the procedure //; ////////////////////////; TRObject xdata = c(-2,-1.64,-1.33,-0.7,0,0.45,1.2,1.64,2.32,2.9);; TRObject ydata = c(0.699369,0.700462,0.695354,1.03905,1.97389,2.41143,1.91091,0.919576,-0.730975,-1.42001);; ; TRDataFrame data;; data[""xdata""]=xdata;; data[""ydata""]=ydata;; ; //fit = nls(ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata), start=list(p1=1,p2=0.2)) <- R code; TRObject fit = nls(asformula(""ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata)""),Label[""data""]=data, Label[""start""]=list(L",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1R_1_1TRFunctionImport.html:81,Guid,Guide,81,doc/master/classROOT_1_1R_1_1TRFunctionImport.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1R_1_1TRFunctionImport.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::R::TRInterface Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; ROOT::R::TRInterface Class ReferenceR Interface for Statistical Computing. ; ROOT R was implemented using the R Project library and the modules Rcpp and RInside ; TRInterface class; The TRInterface class lets you process R code from ROOT.; You can call R libraries and their functions, plot results in R or ROOT,; and use the power of ROOT and R at the same time.; It also lets you pass scalars, vectors and matrices from ROOT to R; and from R to ROOT using TRObject; but you can to use overloaded operators [],<< and >> ; to work with ROOTR like work with streams of data. TRInterface class can not be instantiated directly, but you can create objects using the static methods TRInterface& Instance() and TRInterface* InstancePtr() to create your own objects. Show an example below: Create an exponential fit, the idea is to create a set of numbers x,y with noise from ROOT, pass them to R and fit the data to \( x^3 \), get the fitted coefficient(power) and plot the data, the known function and the fitted function. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();; ; // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();; ; // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }; ; TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);; ; // create second graph; TF1 *f_known=new TF1(""f_known"",""pow(x,3)"",0,1);; TGraph *gr2 = new TGraph(f_known);; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1R_1_1TRInterface.html:76,Guid,Guide,76,doc/master/classROOT_1_1R_1_1TRInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1R_1_1TRInterface.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::R::TRObject Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::R::TRObject Class ReferenceR Interface for Statistical Computing. ; This is a class to get ROOT's objects from R's objects. ; TRObject class; The TRObject class lets you obtain ROOT's objects from R's objects.; It has some basic template operators to convert R's objects into ROOT's datatypes. A simple example. #include<TRInterface.h>; void Proxy(); {; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; ROOT::R::TRObject obj;; obj=r.Eval(""seq(1,10)"");; TVectorD v=obj;; v.Print();; }; Proxyvoid Proxy()Definition Proxy.C:4; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TRInterface.h; ROOT::R::TRInterfaceROOT R was implemented using the R Project library and the modules Rcpp and RInsideDefinition TRInterface.h:136; ROOT::R::TRInterface::Instancestatic TRInterface & Instance()static method to get an TRInterface instance referenceDefinition TRInterface.cxx:187; ROOT::R::TRObjectThis is a class to get ROOT's objects from R's objects.Definition TRObject.h:70; TObject::Printvirtual void Print(Option_t *option="""") constThis method must be overridden when a class wants to print itself.Definition TObject.cxx:642; TVectorT< Double_t >; v@ vDefinition rootcling_impl.cxx:3699; Output Vector (10) is as follows; ; | 1 |; ------------------; 0 |1; 1 |2; 2 |3; 3 |4; 4 |5; 5 |6; 6 |7; 7 |8; 8 |9; 9 |10; Users Guide ; https://oproject.org/pages/ROOT R Users Guide. Definition at line 70 of file TRObject.h. Public Member Functions;  TRObject ();  Default constructor. ;  ;  TRObject (SEXP robj);  Construct a TRObject ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1R_1_1TRObject.html:73,Guid,Guide,73,doc/master/classROOT_1_1R_1_1TRObject.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1R_1_1TRObject.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: ROOT::RBrowser Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; ROOT::RBrowser Class ReferenceWeb Widgets » Browsable object | Web Widgets. ; Web-based ROOT files and objects browser. . Definition at line 27 of file RBrowser.hxx. Public Member Functions;  RBrowser (bool use_rcanvas=false);  constructor ;  ; virtual ~RBrowser ();  destructor ;  ; bool ActivateWidget (const std::string &title, const std::string &kind="""");  Activate widget in RBrowser One should specify title and (optionally) kind of widget like ""tcanvas"" or ""geom"". ;  ; void AddRCanvas ();  ; void AddTCanvas ();  ; void ClearOnClose (const std::shared_ptr< void > &handle);  Set handle which will be cleared when connection is closed. ;  ; bool GetCatchWindowShow () const;  Is RWebWindow::Show calls catched for embeding of created widgets. ;  ; bool GetUseRCanvas () const;  ; std::string GetWindowUrl (bool remote);  Return URL parameter for the window showing ROOT Browser See ROOT::RWebWindow::GetUrl docu for more details. ;  ; void Hide ();  hide Browser ;  ; void SetCatchWindowShow (bool on=true);  Enable/disable catch of RWebWindow::Show calls to embed created widgets, default on. ;  ; void SetUseRCanvas (bool on=true);  ; void SetWorkingPath (const std::string &path);  Set working path in the browser. ;  ; void Show (const RWebDisplayArgs &args="""", bool always_start_new_browser=false);  show Browser in specified place ;  . Protected Member Functions; std::shared_ptr< RBrowserWidget > AddCatchedWidget (RWebWindow *win, const std::string &kind);  Add widget catched from external scripts. ;  ; void AddInitWidget (const std::string &kind);  Create new widget and send init message to the client. ;  ; std::shared_ptr< RBrowserWidget > AddWidget (const std::string &kind);  Creates new widget. ;  ; void CheckWidgtesMo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowser.html:70,Guid,Guide,70,doc/master/classROOT_1_1RBrowser.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowser.html,3,"['Clear', 'Guid', 'clear']","['ClearOnClose', 'Guide', 'cleared']"
Usability,". ROOT: ROOT::RBrowser Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; ROOT::RBrowser Class ReferenceWeb Widgets » Browsable object. ; Web-based ROOT files and objects browser. . Definition at line 27 of file RBrowser.hxx. Public Member Functions;  RBrowser (bool use_rcanvas=false);  constructor ;  ; virtual ~RBrowser ();  destructor ;  ; bool ActivateWidget (const std::string &title, const std::string &kind="""");  Activate widget in RBrowser One should specify title and (optionally) kind of widget like ""tcanvas"" or ""geom"". ;  ; void AddRCanvas ();  ; void AddTCanvas ();  ; void ClearOnClose (const std::shared_ptr< void > &handle);  Set handle which will be cleared when connection is closed. ;  ; bool GetCatchWindowShow () const;  Is RWebWindow::Show calls catched for embeding of created widgets. ;  ; bool GetUseRCanvas () const;  ; std::string GetWindowUrl (bool remote);  Return URL parameter for the window showing ROOT Browser See ROOT::RWebWindow::GetUrl docu for more details. ;  ; void Hide ();  hide Browser ;  ; void SetCatchWindowShow (bool on=true);  Enable/disable catch of RWebWindow::Show calls to embed created widgets, default on. ;  ; void SetUseRCanvas (bool on=true);  ; void SetWorkingPath (const std::string &path);  Set working path in the browser. ;  ; void Show (const RWebDisplayArgs &args="""", bool always_start_new_browser=false);  show Browser in specified place ;  . Protected Member Functions; std::shared_ptr< RBrowserWidget > AddCatchedWidget (RWebWindow *win, const std::string &kind);  Add widget catched from external scripts. ;  ; void AddInitWidget (const std::string &kind);  Create new widget and send init message to the client. ;  ; std::shared_ptr< RBrowserWidget > AddWidget (const std::string &kind);  Creates new widget. ;  ; void CheckWidgtesModified ();  Che",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowser.html:69,Guid,Guide,69,doc/v632/classROOT_1_1RBrowser.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowser.html,3,"['Clear', 'Guid', 'clear']","['ClearOnClose', 'Guide', 'cleared']"
Usability,". ROOT: ROOT::RBrowserCatchedWidget Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RBrowserCatchedWidget Class Reference. . Definition at line 235 of file RBrowser.cxx. Public Member Functions;  RBrowserCatchedWidget (const std::string &name, RWebWindow *win, const std::string &kind);  ; std::string GetKind () const override;  ; std::string GetTitle () override;  ; std::string GetUrl () override;  ; bool IsValid () override;  ; void Show (const std::string &) override;  ;  Public Member Functions inherited from ROOT::RBrowserWidget;  RBrowserWidget (const std::string &name);  ; virtual ~RBrowserWidget ()=default;  ; virtual void CheckModified ();  ; virtual bool DrawElement (std::shared_ptr< Browsable::RElement > &, const std::string &="""");  ; RBrowser * GetBrowser () const;  ; const std::string & GetName () const;  ; const Browsable::RElementPath_t & GetPath () const;  ; virtual void ResetConn ();  ; virtual std::string SendWidgetContent ();  ; std::string SendWidgetTitle ();  Returns string which can be send to browser client to set/change title of the widget tab. ;  ; virtual void SetActive ();  ; void SetPath (const Browsable::RElementPath_t &path);  . Public Attributes; std::string fCatchedKind;  ; RWebWindow * fWindow {nullptr};  . Inheritance diagram for ROOT::RBrowserCatchedWidget:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RBrowserCatchedWidget(). ROOT::RBrowserCatchedWidget::RBrowserCatchedWidget ; (; const std::string & ; name, . RWebWindow * ; win, . const std::string & ; kind . ). inline . Definition at line 251 of file RBrowser.cxx. Member Function Documentation. ◆ GetKind(). std::string ROOT::RBrowserCatchedWidget::GetKind ; (; ); const. inlineoverridevirtual . Implements ROOT::RBrowserWidget.; Definition at li",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowserCatchedWidget.html:83,Guid,Guide,83,doc/master/classROOT_1_1RBrowserCatchedWidget.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowserCatchedWidget.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RBrowserCatchedWidget Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RBrowserCatchedWidget Class Reference. . Definition at line 235 of file RBrowser.cxx. Public Member Functions;  RBrowserCatchedWidget (const std::string &name, RWebWindow *win, const std::string &kind);  ; std::string GetKind () const override;  ; std::string GetTitle () override;  ; std::string GetUrl () override;  ; void Show (const std::string &) override;  ;  Public Member Functions inherited from ROOT::RBrowserWidget;  RBrowserWidget (const std::string &name);  ; virtual ~RBrowserWidget ()=default;  ; virtual void CheckModified ();  ; virtual bool DrawElement (std::shared_ptr< Browsable::RElement > &, const std::string &="""");  ; RBrowser * GetBrowser () const;  ; const std::string & GetName () const;  ; const Browsable::RElementPath_t & GetPath () const;  ; virtual void ResetConn ();  ; virtual std::string SendWidgetContent ();  ; std::string SendWidgetTitle ();  Returns string which can be send to browser client to set/change title of the widget tab. ;  ; virtual void SetActive ();  ; void SetPath (const Browsable::RElementPath_t &path);  . Public Attributes; std::string fCatchedKind;  ; RWebWindow * fWindow {nullptr};  . Inheritance diagram for ROOT::RBrowserCatchedWidget:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RBrowserCatchedWidget(). ROOT::RBrowserCatchedWidget::RBrowserCatchedWidget ; (; const std::string & ; name, . RWebWindow * ; win, . const std::string & ; kind . ). inline . Definition at line 249 of file RBrowser.cxx. Member Function Documentation. ◆ GetKind(). std::string ROOT::RBrowserCatchedWidget::GetKind ; (; ); const. inlineoverridevirtual . Implements ROOT::RBrowserWidget.; Definition at line 243 of file RBrowser.cxx. ◆",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserCatchedWidget.html:82,Guid,Guide,82,doc/v632/classROOT_1_1RBrowserCatchedWidget.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserCatchedWidget.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RBrowserData Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::RBrowserData Class ReferenceWeb Widgets » Browsable object. ; Way to browse (hopefully) everything in ROOT. ; Definition at line 37 of file RBrowserData.hxx. Public Member Functions;  RBrowserData ();  Default constructor. ;  ;  RBrowserData (std::shared_ptr< Browsable::RElement > elem);  ; virtual ~RBrowserData ();  Destructor. ;  ; void ClearCache ();  Clear internal objects cache. ;  ; void CreateDefaultElements ();  Create default elements shown in the RBrowser. ;  ; Browsable::RElementPath_t DecomposePath (const std::string &path, bool relative_to_work_element);  Decompose path to elements Returns array of names for each element in the path, first element either ""/"" or ""."" If returned array empty - it is error. ;  ; std::shared_ptr< Browsable::RElement > GetElement (const std::string &str);  Returns element with path, specified as string. ;  ; std::shared_ptr< Browsable::RElement > GetElementFromTop (const Browsable::RElementPath_t &path);  Returns element with path, specified as Browsable::RElementPath_t. ;  ; std::shared_ptr< Browsable::RElement > GetSubElement (const Browsable::RElementPath_t &path);  Returns sub-element starting from top, using cached data. ;  ; const Browsable::RElementPath_t & GetWorkingPath () const;  ; std::string ProcessRequest (const RBrowserRequest &request);  Process browser request, returns string with JSON of RBrowserReply data. ;  ; bool RemoveFromCache (const Browsable::RElementPath_t &path);  Remove path (and all sub-paths) from cache Returns true if any element was removed. ;  ; bool RemoveFromCache (void *obj);  Remove object from cache If nullptr specified - removes no-longer-valid elements Returns true if any element was removed. ;  ; void SetTopElement (std::shared",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowserData.html:74,Guid,Guide,74,doc/master/classROOT_1_1RBrowserData.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowserData.html,3,"['Clear', 'Guid']","['Clear', 'ClearCache', 'Guide']"
Usability,". ROOT: ROOT::RBrowserData Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::RBrowserData Class ReferenceWeb Widgets » Browsable object. ; Way to browse (hopefully) everything in ROOT. ; Definition at line 37 of file RBrowserData.hxx. Public Member Functions;  RBrowserData ();  Default constructor. ;  ;  RBrowserData (std::shared_ptr< Browsable::RElement > elem);  ; virtual ~RBrowserData ();  Destructor. ;  ; void ClearCache ();  Clear internal objects cache. ;  ; void CreateDefaultElements ();  Create default elements shown in the RBrowser. ;  ; Browsable::RElementPath_t DecomposePath (const std::string &path, bool relative_to_work_element);  Decompose path to elements Returns array of names for each element in the path, first element either ""/"" or ""."" If returned array empty - it is error. ;  ; std::shared_ptr< Browsable::RElement > GetElement (const std::string &str);  Returns element with path, specified as string. ;  ; std::shared_ptr< Browsable::RElement > GetElementFromTop (const Browsable::RElementPath_t &path);  Returns element with path, specified as Browsable::RElementPath_t. ;  ; std::shared_ptr< Browsable::RElement > GetSubElement (const Browsable::RElementPath_t &path);  Returns sub-element starting from top, using cached data. ;  ; const Browsable::RElementPath_t & GetWorkingPath () const;  ; std::string ProcessRequest (const RBrowserRequest &request);  Process browser request, returns string with JSON of RBrowserReply data. ;  ; bool RemoveFromCache (const Browsable::RElementPath_t &path);  Remove path (and all sub-paths) from cache Returns true if any element was removed. ;  ; bool RemoveFromCache (void *obj);  Remove object from cache If nullptr specified - removes no-longer-valid elements Returns true if any element was removed. ;  ; void SetTopElement (std::shared_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserData.html:73,Guid,Guide,73,doc/v632/classROOT_1_1RBrowserData.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserData.html,3,"['Clear', 'Guid']","['Clear', 'ClearCache', 'Guide']"
Usability,". ROOT: ROOT::RBrowserDataCleanup Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::RBrowserDataCleanup Class Reference. . Definition at line 43 of file RBrowserData.cxx. Public Member Functions;  RBrowserDataCleanup (RBrowserData &_data);  ; void RecursiveRemove (TObject *obj) override;  Recursively remove this object from a list. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowserDataCleanup.html:81,Guid,Guide,81,doc/master/classROOT_1_1RBrowserDataCleanup.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowserDataCleanup.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RBrowserDataCleanup Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::RBrowserDataCleanup Class Reference. . Definition at line 43 of file RBrowserData.cxx. Public Member Functions;  RBrowserDataCleanup (RBrowserData &_data);  ; void RecursiveRemove (TObject *obj) override;  Recursively remove this object from a list. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserDataCleanup.html:80,Guid,Guide,80,doc/v632/classROOT_1_1RBrowserDataCleanup.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserDataCleanup.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RBrowserEditorWidget Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RBrowserEditorWidget Class Reference. . Definition at line 60 of file RBrowser.cxx. Public Member Functions;  RBrowserEditorWidget (const std::string &name, bool is_editor=true);  ; virtual ~RBrowserEditorWidget ()=default;  ; bool DrawElement (std::shared_ptr< Browsable::RElement > &elem, const std::string &="""") override;  ; std::string GetKind () const override;  ; std::string GetTitle () override;  ; std::string GetUrl () override;  ; void ResetConn () override;  ; std::string SendWidgetContent () override;  ; void Show (const std::string &) override;  ;  Public Member Functions inherited from ROOT::RBrowserWidget;  RBrowserWidget (const std::string &name);  ; virtual ~RBrowserWidget ()=default;  ; virtual void CheckModified ();  ; RBrowser * GetBrowser () const;  ; const std::string & GetName () const;  ; const Browsable::RElementPath_t & GetPath () const;  ; virtual bool IsValid ();  ; std::string SendWidgetTitle ();  Returns string which can be send to browser client to set/change title of the widget tab. ;  ; virtual void SetActive ();  ; void SetPath (const Browsable::RElementPath_t &path);  . Public Attributes; std::string fContent;  ; std::string fFileName;  ; bool fFirstSend {false};  ! if editor content was send at least once ;  ; bool fIsEditor {true};  ! either editor or image viewer ;  ; std::string fItemPath;  ! item path in the browser ;  ; std::string fTitle;  . Inheritance diagram for ROOT::RBrowserEditorWidget:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RBrowserEditorWidget(). ROOT::RBrowserEditorWidget::RBrowserEditorWidget ; (; const std::string & ; name, . bool ; is_editor = true . ). inline . Definition at line 70 of file",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowserEditorWidget.html:82,Guid,Guide,82,doc/master/classROOT_1_1RBrowserEditorWidget.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowserEditorWidget.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RBrowserEditorWidget Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RBrowserEditorWidget Class Reference. . Definition at line 60 of file RBrowser.cxx. Public Member Functions;  RBrowserEditorWidget (const std::string &name, bool is_editor=true);  ; virtual ~RBrowserEditorWidget ()=default;  ; bool DrawElement (std::shared_ptr< Browsable::RElement > &elem, const std::string &="""") override;  ; std::string GetKind () const override;  ; std::string GetTitle () override;  ; std::string GetUrl () override;  ; void ResetConn () override;  ; std::string SendWidgetContent () override;  ; void Show (const std::string &) override;  ;  Public Member Functions inherited from ROOT::RBrowserWidget;  RBrowserWidget (const std::string &name);  ; virtual ~RBrowserWidget ()=default;  ; virtual void CheckModified ();  ; RBrowser * GetBrowser () const;  ; const std::string & GetName () const;  ; const Browsable::RElementPath_t & GetPath () const;  ; std::string SendWidgetTitle ();  Returns string which can be send to browser client to set/change title of the widget tab. ;  ; virtual void SetActive ();  ; void SetPath (const Browsable::RElementPath_t &path);  . Public Attributes; std::string fContent;  ; std::string fFileName;  ; bool fFirstSend {false};  ! if editor content was send at least once ;  ; bool fIsEditor {true};  ! either editor or image viewer ;  ; std::string fItemPath;  ! item path in the browser ;  ; std::string fTitle;  . Inheritance diagram for ROOT::RBrowserEditorWidget:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RBrowserEditorWidget(). ROOT::RBrowserEditorWidget::RBrowserEditorWidget ; (; const std::string & ; name, . bool ; is_editor = true . ). inline . Definition at line 70 of file RBrowser.cxx. ◆ ~RBrowserEdi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserEditorWidget.html:81,Guid,Guide,81,doc/v632/classROOT_1_1RBrowserEditorWidget.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserEditorWidget.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RBrowserInfoWidget Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RBrowserInfoWidget Class Reference. . Definition at line 136 of file RBrowser.cxx. Public Types; enum  { kMaxContentLen = 10000000; };  . Public Member Functions;  RBrowserInfoWidget (const std::string &name);  ; virtual ~RBrowserInfoWidget ()=default;  ; bool DrawElement (std::shared_ptr< Browsable::RElement > &, const std::string &="""") override;  ; std::string GetKind () const override;  ; std::string GetTitle () override;  ; std::string GetUrl () override;  ; void Refresh ();  ; void RefreshFromLogs (const std::string &promt, const std::vector< std::string > &logs);  ; void ResetConn () override;  ; std::string SendWidgetContent () override;  ; void Show (const std::string &) override;  ;  Public Member Functions inherited from ROOT::RBrowserWidget;  RBrowserWidget (const std::string &name);  ; virtual ~RBrowserWidget ()=default;  ; virtual void CheckModified ();  ; RBrowser * GetBrowser () const;  ; const std::string & GetName () const;  ; const Browsable::RElementPath_t & GetPath () const;  ; virtual bool IsValid ();  ; std::string SendWidgetTitle ();  Returns string which can be send to browser client to set/change title of the widget tab. ;  ; virtual void SetActive ();  ; void SetPath (const Browsable::RElementPath_t &path);  . Public Attributes; std::string fContent;  ; bool fFirstSend {false};  ! if editor content was send at least once ;  ; std::string fTitle;  . Inheritance diagram for ROOT::RBrowserInfoWidget:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkMaxContentLen . Definition at line 139 of file RBrowser.cxx. Constructor & Destructor Documentation. ◆ RBrowserInfoWidget(). ROOT::R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowserInfoWidget.html:80,Guid,Guide,80,doc/master/classROOT_1_1RBrowserInfoWidget.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowserInfoWidget.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RBrowserInfoWidget Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RBrowserInfoWidget Class Reference. . Definition at line 136 of file RBrowser.cxx. Public Types; enum  { kMaxContentLen = 10000000; };  . Public Member Functions;  RBrowserInfoWidget (const std::string &name);  ; virtual ~RBrowserInfoWidget ()=default;  ; bool DrawElement (std::shared_ptr< Browsable::RElement > &, const std::string &="""") override;  ; std::string GetKind () const override;  ; std::string GetTitle () override;  ; std::string GetUrl () override;  ; void Refresh ();  ; void RefreshFromLogs (const std::string &promt, const std::vector< std::string > &logs);  ; void ResetConn () override;  ; std::string SendWidgetContent () override;  ; void Show (const std::string &) override;  ;  Public Member Functions inherited from ROOT::RBrowserWidget;  RBrowserWidget (const std::string &name);  ; virtual ~RBrowserWidget ()=default;  ; virtual void CheckModified ();  ; RBrowser * GetBrowser () const;  ; const std::string & GetName () const;  ; const Browsable::RElementPath_t & GetPath () const;  ; std::string SendWidgetTitle ();  Returns string which can be send to browser client to set/change title of the widget tab. ;  ; virtual void SetActive ();  ; void SetPath (const Browsable::RElementPath_t &path);  . Public Attributes; std::string fContent;  ; bool fFirstSend {false};  ! if editor content was send at least once ;  ; std::string fTitle;  . Inheritance diagram for ROOT::RBrowserInfoWidget:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkMaxContentLen . Definition at line 139 of file RBrowser.cxx. Constructor & Destructor Documentation. ◆ RBrowserInfoWidget(). ROOT::RBrowserInfoWidget::RBrowserIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserInfoWidget.html:79,Guid,Guide,79,doc/v632/classROOT_1_1RBrowserInfoWidget.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserInfoWidget.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RBrowserReply Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; ROOT::RBrowserReply Class ReferenceWeb Widgets » Browsable object. ; Reply on browser request. ; Definition at line 27 of file RBrowserReply.hxx. Public Attributes; int first {0};  first node in returned list ;  ; int nchilds {0};  total number of childs in the node ;  ; std::vector< const Browsable::RItem * > nodes;  list of pointers, no ownership! ;  ; std::vector< std::string > path;  reply path ;  . #include <ROOT/RBrowserReply.hxx>; Member Data Documentation. ◆ first. int ROOT::RBrowserReply::first {0}. first node in returned list ; Definition at line 31 of file RBrowserReply.hxx. ◆ nchilds. int ROOT::RBrowserReply::nchilds {0}. total number of childs in the node ; Definition at line 30 of file RBrowserReply.hxx. ◆ nodes. std::vector<const Browsable::RItem *> ROOT::RBrowserReply::nodes. list of pointers, no ownership! ; Definition at line 32 of file RBrowserReply.hxx. ◆ path. std::vector<std::string> ROOT::RBrowserReply::path. reply path ; Definition at line 29 of file RBrowserReply.hxx. Libraries for ROOT::RBrowserReply:. [legend]; The documentation for this class was generated from the following file:; gui/browserv7/inc/ROOT/RBrowserReply.hxx. ROOTRBrowserReply. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:58 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowserReply.html:75,Guid,Guide,75,doc/master/classROOT_1_1RBrowserReply.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowserReply.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::RBrowserReply Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; ROOT::RBrowserReply Class ReferenceWeb Widgets » Browsable object. ; Reply on browser request. ; Definition at line 27 of file RBrowserReply.hxx. Public Attributes; int first {0};  first node in returned list ;  ; int nchilds {0};  total number of childs in the node ;  ; std::vector< const Browsable::RItem * > nodes;  list of pointers, no ownership! ;  ; std::vector< std::string > path;  reply path ;  . #include <ROOT/RBrowserReply.hxx>; Member Data Documentation. ◆ first. int ROOT::RBrowserReply::first {0}. first node in returned list ; Definition at line 31 of file RBrowserReply.hxx. ◆ nchilds. int ROOT::RBrowserReply::nchilds {0}. total number of childs in the node ; Definition at line 30 of file RBrowserReply.hxx. ◆ nodes. std::vector<const Browsable::RItem *> ROOT::RBrowserReply::nodes. list of pointers, no ownership! ; Definition at line 32 of file RBrowserReply.hxx. ◆ path. std::vector<std::string> ROOT::RBrowserReply::path. reply path ; Definition at line 29 of file RBrowserReply.hxx. Libraries for ROOT::RBrowserReply:. [legend]; The documentation for this class was generated from the following file:; gui/browserv7/inc/ROOT/RBrowserReply.hxx. ROOTRBrowserReply. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:35 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserReply.html:74,Guid,Guide,74,doc/v632/classROOT_1_1RBrowserReply.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserReply.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::RBrowserRequest Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; ROOT::RBrowserRequest Class ReferenceWeb Widgets » Browsable object. ; Request send from client to get content of path element. ; Definition at line 26 of file RBrowserRequest.hxx. Public Attributes; int first {0};  first child to request ;  ; bool hidden {false};  show hidden files ;  ; int lastcycle {0};  show only last cycle, -1 - off, 0 - not change, +1 on, ;  ; int number {0};  number of childs to request, 0 - all childs ;  ; std::vector< std::string > path;  requested path ;  ; std::string regex;  applied regex ;  ; bool reload {false};  force items reload ;  ; bool reverse {false};  reverse item order ;  ; std::string sort;  kind of sorting ;  . #include <ROOT/RBrowserRequest.hxx>; Member Data Documentation. ◆ first. int ROOT::RBrowserRequest::first {0}. first child to request ; Definition at line 29 of file RBrowserRequest.hxx. ◆ hidden. bool ROOT::RBrowserRequest::hidden {false}. show hidden files ; Definition at line 33 of file RBrowserRequest.hxx. ◆ lastcycle. int ROOT::RBrowserRequest::lastcycle {0}. show only last cycle, -1 - off, 0 - not change, +1 on, ; Definition at line 35 of file RBrowserRequest.hxx. ◆ number. int ROOT::RBrowserRequest::number {0}. number of childs to request, 0 - all childs ; Definition at line 30 of file RBrowserRequest.hxx. ◆ path. std::vector<std::string> ROOT::RBrowserRequest::path. requested path ; Definition at line 28 of file RBrowserRequest.hxx. ◆ regex. std::string ROOT::RBrowserRequest::regex. applied regex ; Definition at line 36 of file RBrowserRequest.hxx. ◆ reload. bool ROOT::RBrowserRequest::reload {false}. force items reload ; Definition at line 34 of file RBrowserRequest.hxx. ◆ reverse. bool ROOT::RBrowserRequest::reverse {false}. reverse item order ; Definition at line 32 of file RBrowserRequest.hxx. ◆ sort. std::string ROO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowserRequest.html:77,Guid,Guide,77,doc/master/classROOT_1_1RBrowserRequest.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowserRequest.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RBrowserRequest Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; ROOT::RBrowserRequest Class ReferenceWeb Widgets » Browsable object. ; Request send from client to get content of path element. ; Definition at line 26 of file RBrowserRequest.hxx. Public Attributes; int first {0};  first child to request ;  ; bool hidden {false};  show hidden files ;  ; int lastcycle {0};  show only last cycle, -1 - off, 0 - not change, +1 on, ;  ; int number {0};  number of childs to request, 0 - all childs ;  ; std::vector< std::string > path;  requested path ;  ; std::string regex;  applied regex ;  ; bool reload {false};  force items reload ;  ; bool reverse {false};  reverse item order ;  ; std::string sort;  kind of sorting ;  . #include <ROOT/RBrowserRequest.hxx>; Member Data Documentation. ◆ first. int ROOT::RBrowserRequest::first {0}. first child to request ; Definition at line 29 of file RBrowserRequest.hxx. ◆ hidden. bool ROOT::RBrowserRequest::hidden {false}. show hidden files ; Definition at line 33 of file RBrowserRequest.hxx. ◆ lastcycle. int ROOT::RBrowserRequest::lastcycle {0}. show only last cycle, -1 - off, 0 - not change, +1 on, ; Definition at line 35 of file RBrowserRequest.hxx. ◆ number. int ROOT::RBrowserRequest::number {0}. number of childs to request, 0 - all childs ; Definition at line 30 of file RBrowserRequest.hxx. ◆ path. std::vector<std::string> ROOT::RBrowserRequest::path. requested path ; Definition at line 28 of file RBrowserRequest.hxx. ◆ regex. std::string ROOT::RBrowserRequest::regex. applied regex ; Definition at line 36 of file RBrowserRequest.hxx. ◆ reload. bool ROOT::RBrowserRequest::reload {false}. force items reload ; Definition at line 34 of file RBrowserRequest.hxx. ◆ reverse. bool ROOT::RBrowserRequest::reverse {false}. reverse item order ; Definition at line 32 of file RBrowserRequest.hxx. ◆ sort. std::string ROOT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserRequest.html:76,Guid,Guide,76,doc/v632/classROOT_1_1RBrowserRequest.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserRequest.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RBrowserTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RBrowserTimer Class Reference. . Definition at line 47 of file RBrowser.cxx. Public Member Functions;  RBrowserTimer (Long_t milliSec, Bool_t mode, RBrowser &br);  !< browser processing postponed requests ;  ; void Timeout () override;  timeout handler used to process postponed requests in main ROOT thread ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void Se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowserTimer.html:75,Guid,Guide,75,doc/master/classROOT_1_1RBrowserTimer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowserTimer.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RBrowserTimer Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RBrowserTimer Class Reference. . Definition at line 47 of file RBrowser.cxx. Public Member Functions;  RBrowserTimer (Long_t milliSec, Bool_t mode, RBrowser &br);  !< browser processing postponed requests ;  ; void Timeout () override;  timeout handler used to process postponed requests in main ROOT thread ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserTimer.html:74,Guid,Guide,74,doc/v632/classROOT_1_1RBrowserTimer.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserTimer.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RBrowserWidget Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::RBrowserWidget Class ReferenceabstractWeb Widgets » Browsable object. ; Abstract Web-based widget, which can be used in the RBrowser Used to embed canvas, geometry viewer and potentially any other widgets. ; Definition at line 32 of file RBrowserWidget.hxx. Public Member Functions;  RBrowserWidget (const std::string &name);  ; virtual ~RBrowserWidget ()=default;  ; virtual void CheckModified ();  ; virtual bool DrawElement (std::shared_ptr< Browsable::RElement > &, const std::string &="""");  ; RBrowser * GetBrowser () const;  ; virtual std::string GetKind () const =0;  ; const std::string & GetName () const;  ; const Browsable::RElementPath_t & GetPath () const;  ; virtual std::string GetTitle ();  ; virtual std::string GetUrl ()=0;  ; virtual bool IsValid ();  ; virtual void ResetConn ();  ; virtual std::string SendWidgetContent ();  ; std::string SendWidgetTitle ();  Returns string which can be send to browser client to set/change title of the widget tab. ;  ; virtual void SetActive ();  ; void SetPath (const Browsable::RElementPath_t &path);  ; virtual void Show (const std::string &)=0;  . Private Attributes; RBrowser * fBrowser {nullptr};  ; std::string fName;  ! widget name ;  ; Browsable::RElementPath_t fPath;  ! path of drawn element ;  . Friends; class RBrowser;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/gui/browserv7/src/RBrowserWidget.hxx>. Inheritance diagram for ROOT::RBrowserWidget:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RBrowserWidget(). ROOT::RBrowserWidget::RBrowserWidget ; (; const std::string & ; name). inlineexplicit . Definition at line 44 of file RBrowserWidget.hxx. ◆ ~RB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowserWidget.html:76,Guid,Guide,76,doc/master/classROOT_1_1RBrowserWidget.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowserWidget.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RBrowserWidget Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::RBrowserWidget Class ReferenceabstractWeb Widgets » Browsable object. ; Abstract Web-based widget, which can be used in the RBrowser Used to embed canvas, geometry viewer and potentially any other widgets. ; Definition at line 32 of file RBrowserWidget.hxx. Public Member Functions;  RBrowserWidget (const std::string &name);  ; virtual ~RBrowserWidget ()=default;  ; virtual void CheckModified ();  ; virtual bool DrawElement (std::shared_ptr< Browsable::RElement > &, const std::string &="""");  ; RBrowser * GetBrowser () const;  ; virtual std::string GetKind () const =0;  ; const std::string & GetName () const;  ; const Browsable::RElementPath_t & GetPath () const;  ; virtual std::string GetTitle ();  ; virtual std::string GetUrl ()=0;  ; virtual void ResetConn ();  ; virtual std::string SendWidgetContent ();  ; std::string SendWidgetTitle ();  Returns string which can be send to browser client to set/change title of the widget tab. ;  ; virtual void SetActive ();  ; void SetPath (const Browsable::RElementPath_t &path);  ; virtual void Show (const std::string &)=0;  . Private Attributes; RBrowser * fBrowser {nullptr};  ; std::string fName;  ! widget name ;  ; Browsable::RElementPath_t fPath;  ! path of drawn element ;  . Friends; class RBrowser;  . #include </home/sftnight/build/workspace/root-makedoc-v632/rootspi/rdoc/src/v6-32-00-patches/gui/browserv7/src/RBrowserWidget.hxx>. Inheritance diagram for ROOT::RBrowserWidget:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RBrowserWidget(). ROOT::RBrowserWidget::RBrowserWidget ; (; const std::string & ; name). inlineexplicit . Definition at line 44 of file RBrowserWidget.hxx. ◆ ~RBrowserWidget(). virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserWidget.html:75,Guid,Guide,75,doc/v632/classROOT_1_1RBrowserWidget.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserWidget.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RBrowserWidgetProvider Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Protected Member Functions |; List of all members ; ROOT::RBrowserWidgetProvider Class Referenceabstract. . Definition at line 72 of file RBrowserWidget.hxx. Public Member Functions;  RBrowserWidgetProvider (const std::string &kind);  Constructor. ;  ; virtual ~RBrowserWidgetProvider ();  Destructor. ;  . Static Public Member Functions; static std::shared_ptr< RBrowserWidget > CreateWidget (const std::string &kind, const std::string &name);  Create specified widget. ;  ; static std::shared_ptr< RBrowserWidget > CreateWidgetFor (const std::string &kind, const std::string &name, std::shared_ptr< Browsable::RElement > &element);  Create specified widget for existing object. ;  . Protected Types; using ProvidersMap_t = std::map< std::string, RBrowserWidgetProvider * >;  . Protected Member Functions; virtual std::shared_ptr< RBrowserWidget > Create (const std::string &)=0;  ; virtual std::shared_ptr< RBrowserWidget > CreateFor (const std::string &, std::shared_ptr< Browsable::RElement > &);  . Static Protected Member Functions; static ProvidersMap_t & GetMap ();  Returns static map of existing providers. ;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/gui/browserv7/src/RBrowserWidget.hxx>. Inheritance diagram for ROOT::RBrowserWidgetProvider:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ProvidersMap_t. using ROOT::RBrowserWidgetProvider::ProvidersMap_t = std::map<std::string, RBrowserWidgetProvider*>. protected . Definition at line 74 of file RBrowserWidget.hxx. Constructor & Destructor Documentation. ◆ RBrowserWidgetProvider(). RBrowserWidgetProvider::RBrowserWidgetProvider ; (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowserWidgetProvider.html:84,Guid,Guide,84,doc/master/classROOT_1_1RBrowserWidgetProvider.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowserWidgetProvider.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RBrowserWidgetProvider Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Protected Member Functions |; List of all members ; ROOT::RBrowserWidgetProvider Class Referenceabstract. . Definition at line 70 of file RBrowserWidget.hxx. Public Member Functions;  RBrowserWidgetProvider (const std::string &kind);  Constructor. ;  ; virtual ~RBrowserWidgetProvider ();  Destructor. ;  . Static Public Member Functions; static std::shared_ptr< RBrowserWidget > CreateWidget (const std::string &kind, const std::string &name);  Create specified widget. ;  ; static std::shared_ptr< RBrowserWidget > CreateWidgetFor (const std::string &kind, const std::string &name, std::shared_ptr< Browsable::RElement > &element);  Create specified widget for existing object. ;  . Protected Types; using ProvidersMap_t = std::map< std::string, RBrowserWidgetProvider * >;  . Protected Member Functions; virtual std::shared_ptr< RBrowserWidget > Create (const std::string &)=0;  ; virtual std::shared_ptr< RBrowserWidget > CreateFor (const std::string &, std::shared_ptr< Browsable::RElement > &);  . Static Protected Member Functions; static ProvidersMap_t & GetMap ();  Returns static map of existing providers. ;  . #include </home/sftnight/build/workspace/root-makedoc-v632/rootspi/rdoc/src/v6-32-00-patches/gui/browserv7/src/RBrowserWidget.hxx>. Inheritance diagram for ROOT::RBrowserWidgetProvider:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ProvidersMap_t. using ROOT::RBrowserWidgetProvider::ProvidersMap_t = std::map<std::string, RBrowserWidgetProvider*>. protected . Definition at line 72 of file RBrowserWidget.hxx. Constructor & Destructor Documentation. ◆ RBrowserWidgetProvider(). RBrowserWidgetProvider::RBrowserWidgetProvi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserWidgetProvider.html:83,Guid,Guide,83,doc/v632/classROOT_1_1RBrowserWidgetProvider.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserWidgetProvider.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RCompressionSetting Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Static Public Member Functions |; List of all members ; ROOT::RCompressionSetting Struct Reference. ; The global settings depend on a global variable named R__ZipMode which can be modified by a global function named R__SetZipMode. ; Both are defined in Bits.h. The default is to use the global setting and the default of the global setting is to use the ZLIB compression algorithm.; The LZMA algorithm (from the XZ package) is also available. The LZMA compression usually results in greater compression factors, but takes more CPU time and memory when compressing. LZMA memory usage is particularly high for compression levels 8 and 9.; Finally, the LZ4 package results in worse compression ratios than ZLIB but achieves much faster decompression rates. The current algorithms support level 1 to 9. The higher the level the greater the compression and more CPU time and memory resources used during compression. Level 0 means no compression.; Recommendation for the compression algorithm's levels:; ZLIB is recommended to be used with compression level 1 [101]; LZMA is recommended to be used with compression level 7-8 (higher is better, since in the case of LZMA we don't care about compression/decompression speed) [207 - 208]; LZ4 is recommended to be used with compression level 4 [404]; ZSTD is recommended to be used with compression level 5 [505] . Definition at line 46 of file Compression.h. Classes; struct  EAlgorithm;  ; struct  EDefaults;  ; struct  ELevel;  . Static Public Member Functions; static EAlgorithm::EValues AlgorithmFromCompressionSettings (int compSettings);  ; static std::string AlgorithmToString (EAlgorithm::EValues algorithm);  . #include <Compression.h>; Member Function Documentation. ◆ AlgorithmFromCompressionSettings(). static EAlgorithm::EValues ROOT::RCompressionSetting::AlgorithmFromCompressi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RCompressionSetting.html:82,Guid,Guide,82,doc/master/structROOT_1_1RCompressionSetting.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RCompressionSetting.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RCompressionSetting Struct Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Static Public Member Functions |; List of all members ; ROOT::RCompressionSetting Struct Reference. ; The global settings depend on a global variable named R__ZipMode which can be modified by a global function named R__SetZipMode. ; Both are defined in Bits.h. The default is to use the global setting and the default of the global setting is to use the ZLIB compression algorithm.; The LZMA algorithm (from the XZ package) is also available. The LZMA compression usually results in greater compression factors, but takes more CPU time and memory when compressing. LZMA memory usage is particularly high for compression levels 8 and 9.; Finally, the LZ4 package results in worse compression ratios than ZLIB but achieves much faster decompression rates. The current algorithms support level 1 to 9. The higher the level the greater the compression and more CPU time and memory resources used during compression. Level 0 means no compression.; Recommendation for the compression algorithm's levels:; ZLIB is recommended to be used with compression level 1 [101]; LZMA is recommended to be used with compression level 7-8 (higher is better, since in the case of LZMA we don't care about compression/decompression speed) [207 - 208]; LZ4 is recommended to be used with compression level 4 [404]; ZSTD is recommended to be used with compression level 5 [505] . Definition at line 45 of file Compression.h. Classes; struct  EAlgorithm;  ; struct  EDefaults;  ; struct  ELevel;  . Static Public Member Functions; static std::string AlgorithmToString (EAlgorithm::EValues algorithm);  . #include <Compression.h>; Member Function Documentation. ◆ AlgorithmToString(). static std::string ROOT::RCompressionSetting::AlgorithmToString ; (; EAlgorithm::EValues ; algorithm). static . The documentation for this struct was generated from the follow",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/structROOT_1_1RCompressionSetting.html:81,Guid,Guide,81,doc/v632/structROOT_1_1RCompressionSetting.html,https://root.cern,https://root.cern/doc/v632/structROOT_1_1RCompressionSetting.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RCompressionSetting::EAlgorithm Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; List of all members ; ROOT::RCompressionSetting::EAlgorithm Struct Reference. . Definition at line 86 of file Compression.h. Public Types; enum  EValues { ;   kInherit = -1; , kUseGlobal = 0; , kZLIB; , kLZMA; , ;   kOldCompressionAlgo; , kLZ4; , kZSTD; , kUndefined. };  Note: this is only temporarily a struct and will become a enum class hence the name convention used. More...;  . #include <Compression.h>; Member Enumeration Documentation. ◆ EValues. enum ROOT::RCompressionSetting::EAlgorithm::EValues. Note: this is only temporarily a struct and will become a enum class hence the name convention used. . EnumeratorkInherit Some objects use this value to denote that the compression algorithm should be inherited from the parent object (e.g., TBranch should get the algorithm from the TTree) . kUseGlobal Use the global compression algorithm. . kZLIB Use ZLIB compression. . kLZMA Use LZMA compression. . kOldCompressionAlgo Use the old compression algorithm. . kLZ4 Use LZ4 compression. . kZSTD Use ZSTD compression. . kUndefined Undefined compression algorithm (must be kept the last of the list in case a new algorithm is added). . Definition at line 88 of file Compression.h. The documentation for this struct was generated from the following file:; core/zip/inc/Compression.h. ROOTRCompressionSettingEAlgorithm. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:58 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html:94,Guid,Guide,94,doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::RCompressionSetting::EAlgorithm Struct Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; List of all members ; ROOT::RCompressionSetting::EAlgorithm Struct Reference. . Definition at line 83 of file Compression.h. Public Types; enum  EValues { ;   kInherit = -1; , kUseGlobal = 0; , kZLIB; , kLZMA; , ;   kOldCompressionAlgo; , kLZ4; , kZSTD; , kUndefined. };  Note: this is only temporarily a struct and will become a enum class hence the name. More...;  . #include <Compression.h>; Member Enumeration Documentation. ◆ EValues. enum ROOT::RCompressionSetting::EAlgorithm::EValues. Note: this is only temporarily a struct and will become a enum class hence the name. ; convention used. . EnumeratorkInherit Some objects use this value to denote that the compression algorithm should be inherited from the parent object (e.g., TBranch should get the algorithm from the TTree) . kUseGlobal Use the global compression algorithm. . kZLIB Use ZLIB compression. . kLZMA Use LZMA compression. . kOldCompressionAlgo Use the old compression algorithm. . kLZ4 Use LZ4 compression. . kZSTD Use ZSTD compression. . kUndefined Undefined compression algorithm (must be kept the last of the list in case a new algorithm is added). . Definition at line 85 of file Compression.h. The documentation for this struct was generated from the following file:; core/zip/inc/Compression.h. ROOTRCompressionSettingEAlgorithm. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:36 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html:93,Guid,Guide,93,doc/v632/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html,https://root.cern,https://root.cern/doc/v632/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::RCompressionSetting::EDefaults Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; List of all members ; ROOT::RCompressionSetting::EDefaults Struct Reference. . Definition at line 47 of file Compression.h. Public Types; enum  EValues { ;   kUseGlobal = 0; , kUseCompiledDefault = 101; , kUseAnalysis = 404; , kUseGeneralPurpose = 505; , ;   kUseSmallest = 207. };  Note: this is only temporarily a struct and will become a enum class hence the name convention used. More...;  . #include <Compression.h>; Member Enumeration Documentation. ◆ EValues. enum ROOT::RCompressionSetting::EDefaults::EValues. Note: this is only temporarily a struct and will become a enum class hence the name convention used. . EnumeratorkUseGlobal Use the global compression setting for this process; may be affected by rootrc. . kUseCompiledDefault Use the compile-time default setting. . kUseAnalysis Use the default analysis setting; fast reading but poor compression ratio. . kUseGeneralPurpose Use the new recommended general-purpose setting; it is a best trade-off between compression ratio/decompression speed. . kUseSmallest Use the setting that results in the smallest files; very slow read and write. . Definition at line 49 of file Compression.h. The documentation for this struct was generated from the following file:; core/zip/inc/Compression.h. ROOTRCompressionSettingEDefaults. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:58 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EDefaults.html:93,Guid,Guide,93,doc/master/structROOT_1_1RCompressionSetting_1_1EDefaults.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EDefaults.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::RCompressionSetting::ELevel Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; List of all members ; ROOT::RCompressionSetting::ELevel Struct Reference. . Definition at line 63 of file Compression.h. Public Types; enum  EValues { ;   kInherit = -1; , kUncompressed = 0; , kUseMin = 1; , kDefaultZLIB = 1; , ;   kDefaultLZ4 = 4; , kDefaultZSTD = 5; , kDefaultOld = 6; , kDefaultLZMA = 7. };  Note: this is only temporarily a struct and will become a enum class hence the name convention used. More...;  . #include <Compression.h>; Member Enumeration Documentation. ◆ EValues. enum ROOT::RCompressionSetting::ELevel::EValues. Note: this is only temporarily a struct and will become a enum class hence the name convention used. . EnumeratorkInherit Some objects use this value to denote that the compression algorithm should be inherited from the parent object. . kUncompressed Compression level reserved for ""uncompressed state"". . kUseMin Compression level reserved when we are not sure what to use (1 is for the fastest compression) . kDefaultZLIB Compression level reserved for ZLIB compression algorithm (fastest compression) . kDefaultLZ4 Compression level reserved for LZ4 compression algorithm (trade-off between file ratio/decompression speed) . kDefaultZSTD Compression level reserved for ZSTD compression algorithm (trade-off between file ratio/decompression speed) . kDefaultOld Compression level reserved for old ROOT compression algorithm. . kDefaultLZMA Compression level reserved for LZMA compression algorithm (slowest compression with smallest files) . Definition at line 65 of file Compression.h. The documentation for this struct was generated from the following file:; core/zip/inc/Compression.h. ROOTRCompressionSettingELevel. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:58 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1ELevel.html:90,Guid,Guide,90,doc/master/structROOT_1_1RCompressionSetting_1_1ELevel.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1ELevel.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Functions ; ROOT::RDF Namespace Reference. Namespaces; namespace  Experimental;  ; namespace  Internal;  . Classes; class  RArrowDS;  RDataFrame data source class to interface with Apache Arrow. More...;  ; class  RCsvDS;  RDataFrame data source class for reading CSV files. More...;  ; class  RCutFlowReport;  ; class  RDataSource;  RDataSource defines an API that RDataFrame can use to read arbitrary data formats. More...;  ; class  RDFDescription;  A DFDescription contains useful information about a given RDataFrame computation graph. More...;  ; class  RDFTypeNameGetter;  Helper to get the contents of a given column. More...;  ; class  RDisplay;  This class is the textual representation of the content of a columnar dataset. More...;  ; class  RInterface;  The public interface to the RDataFrame federation of classes. More...;  ; class  RInterfaceBase;  ; class  RLazyDS;  A RDataSource implementation which is built on top of result proxies. More...;  ; class  RResultHandle;  A type-erased version of RResultPtr and RResultMap. More...;  ; class  RResultPtr;  Smart pointer for the return type of actions. More...;  ; class  RSampleInfo;  This type represents a sample identifier, to be used in conjunction with RDataFrame features such as DefinePerSample() and per-sample callbacks. More...;  ; struct  RSnapshotOptions;  A collection of options to steer the creation of the dataset on file. More...;  ; class  RSqliteDS;  RSqliteDS is an RDF data source implementation for SQL result sets from sqlite3 files. More...;  ; class  RTrivialDS;  A simple data-source implementation, for demo purposes. More...;  ; class  RVariationsDescription;  A descriptor for the systematic variations known to a given RDataFrame node. More...;  ; class  TCutInfo;  ; class  TH1DModel;  A struct which stores the parameters of a TH1D. More...;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1RDF.html:69,Guid,Guide,69,doc/master/namespaceROOT_1_1RDF.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1RDF.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Functions ; ROOT::RDF Namespace Reference. Namespaces; namespace  Experimental;  ; namespace  Internal;  . Classes; class  RArrowDS;  RDataFrame data source class to interface with Apache Arrow. More...;  ; class  RCsvDS;  RDataFrame data source class for reading CSV files. More...;  ; class  RCutFlowReport;  ; class  RDataSource;  RDataSource defines an API that RDataFrame can use to read arbitrary data formats. More...;  ; class  RDFDescription;  A DFDescription contains useful information about a given RDataFrame computation graph. More...;  ; class  RDFTypeNameGetter;  Helper to get the contents of a given column. More...;  ; class  RDisplay;  This class is the textual representation of the content of a columnar dataset. More...;  ; class  RInterface;  The public interface to the RDataFrame federation of classes. More...;  ; class  RInterfaceBase;  ; class  RLazyDS;  A RDataSource implementation which is built on top of result proxies. More...;  ; class  RResultHandle;  A type-erased version of RResultPtr and RResultMap. More...;  ; class  RResultPtr;  Smart pointer for the return type of actions. More...;  ; class  RSampleInfo;  This type represents a sample identifier, to be used in conjunction with RDataFrame features such as DefinePerSample() and per-sample callbacks. More...;  ; struct  RSnapshotOptions;  A collection of options to steer the creation of the dataset on file. More...;  ; class  RSqliteDS;  RSqliteDS is an RDF data source implementation for SQL result sets from sqlite3 files. More...;  ; class  RTrivialDS;  A simple data-source implementation, for demo purposes. More...;  ; class  RVariationsDescription;  A descriptor for the systematic variations known to a given RDataFrame node. More...;  ; class  TCutInfo;  ; class  TH1DModel;  A struct which stores the parameters of a TH1D. More...;  ; c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1RDF.html:68,Guid,Guide,68,doc/v632/namespaceROOT_1_1RDF.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1RDF.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF::Experimental Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs |; Functions ; ROOT::RDF::Experimental Namespace Reference. Classes; class  ProgressBarAction;  ; class  ProgressHelper;  RDF progress helper. More...;  ; class  RDatasetSpec;  The dataset specification for RDataFrame. More...;  ; class  RMetaData;  Class behaving as a heterogenuous dictionary to store the metadata of a dataset. More...;  ; class  RResultMap;  ; class  RSample;  Class representing a sample which is a grouping of trees and their fileglobs, and, optionally, the sample's metadata information via the RMetaData object. More...;  . Typedefs; using SnapshotPtr_t = ROOT::RDF::RResultPtr< ROOT::RDF::RInterface< ROOT::Detail::RDF::RLoopManager, void > >;  . Functions; void AddProgressBar (ROOT::RDataFrame df);  Add ProgressBar to an RDataFrame. ;  ; void AddProgressBar (ROOT::RDF::RNode df);  Add ProgressBar to a ROOT::RDF::RNode. ;  ; RDataFrame FromRNTuple (ROOT::RNTuple *ntuple);  ; RDataFrame FromRNTuple (std::string_view ntupleName, const std::vector< std::string > &fileNames);  ; RDataFrame FromRNTuple (std::string_view ntupleName, std::string_view fileName);  ; ROOT::RDataFrame FromSpec (const std::string &jsonFile);  Factory method to create an RDataFrame from a JSON specification file. ;  ; template<typename T > ; RResultMap< T > VariationsFor (RResultPtr< T > resPtr);  Produce all required systematic variations for the given result. ;  ; SnapshotPtr_t VariationsFor (SnapshotPtr_t resPtr);  . Typedef Documentation. ◆ SnapshotPtr_t. using ROOT::RDF::Experimental::SnapshotPtr_t = typedef ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void> >. Definition at line 269 of file RDFHelpers.hxx. Function Documentation. ◆ AddProgressBar() [1/2]. void ROOT::RDF::Experimental::AddProgressBar ; (; ROOT::RDataFrame ; df). Add ProgressBar to an RDataFrame. ; Parameters. [in]dfRDataFram",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1RDF_1_1Experimental.html:83,Guid,Guide,83,doc/master/namespaceROOT_1_1RDF_1_1Experimental.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1RDF_1_1Experimental.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF::Experimental::RDatasetSpec Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::RDF::Experimental::RDatasetSpec Class ReferenceDataframe. ; The dataset specification for RDataFrame. ; This class allows users to create the dataset specification for RDataFrame to which they add samples (using the RSample class object) with tree names and file names, and, optionally, the metadata information (using the RMetaData class objects). Adding global friend trees and/or setting the range of events to be processed are also available.; Note, there exists yet another method to build RDataFrame from the dataset information using the JSON file format: FromSpec(). ; Definition at line 47 of file RDatasetSpec.hxx. Classes; struct  REntryRange;  . Public Member Functions;  RDatasetSpec ()=default;  ; RDatasetSpec & AddSample (RSample sample);  Add sample (RSample class object) to the RDatasetSpec object. ;  ; Long64_t GetEntryRangeBegin () const;  Returns the first entry as defined by the global range provided in the specification. ;  ; Long64_t GetEntryRangeEnd () const;  Returns the last entry as defined by the global range provided in the specification. ;  ; const std::vector< std::string > GetFileNameGlobs () const;  Returns the collection of the dataset's paths to files, or globs if specified in input. ;  ; const ROOT::TreeUtils::RFriendInfo & GetFriendInfo () const;  Returns the reference to the friend tree information. ;  ; const std::vector< RMetaData > GetMetaData () const;  Returns the collection of the dataset's metadata (RMetaData class objects). ;  ; const std::vector< std::string > GetSampleNames () const;  Returns the collection of the dataset's sample names. ;  ; const std::vector< std::string > GetTreeNames () const;  Returns the collection of the dataset's tr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html:93,Guid,Guide,93,doc/master/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF::Experimental::RResultMap< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::RDF::Experimental::RResultMap< T > Class Template Reference. ; template<typename T>; class ROOT::RDF::Experimental::RResultMap< T >; Definition at line 98 of file RResultMap.hxx. Public Types; using const_iterator = typename decltype(fMap)::const_iterator;  ; using iterator = typename decltype(fMap)::iterator;  . Public Member Functions; iterator begin ();  Iterator to walk through key-value pairs of all variations for a given object. ;  ; const_iterator cbegin ();  ; const_iterator cend () const;  ; iterator end ();  ; const std::vector< std::string > & GetKeys () const;  ; T & operator[] (const std::string &key);  . Private Member Functions;  RResultMap (std::shared_ptr< T > &&nominalResult, std::vector< std::shared_ptr< T > > &&variedResults, std::vector< std::string > &&keys, ROOT::Detail::RDF::RLoopManager &lm, std::shared_ptr< ROOT::Internal::RDF::RActionBase > nominalAction, std::shared_ptr< ROOT::Internal::RDF::RActionBase > variedAction);  ; void RunEventLoopIfNeeded ();  . Private Attributes; std::vector< std::string > fKeys;  ; ROOT::Detail::RDF::RLoopManager * fLoopManager;  ; std::unordered_map< std::string, std::shared_ptr< T > > fMap;  ; std::shared_ptr< ROOT::Internal::RDF::RActionBase > fNominalAction;  ; std::shared_ptr< ROOT::Internal::RDF::RActionBase > fVariedAction;  . Friends; class ::ROOT::RDF::RResultHandle;  ; std::unique_ptr< ROOT::Detail::RDF::RMergeableVariations< T > > ROOT::Detail::RDF::GetMergeableValue (RResultMap< T > &rmap);  ; RResultMap ROOT::Internal::RDF::CloneResultAndAction (const RResultMap< T > &inmap);  ; RResultMap ROOT::Internal::RDF::MakeResultMap (std::shared_ptr< T > nominalResult, std::vector< std::shared_ptr< T ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1Experimental_1_1RResultMap.html:105,Guid,Guide,105,doc/master/classROOT_1_1RDF_1_1Experimental_1_1RResultMap.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1Experimental_1_1RResultMap.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF::RCsvDS Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; ROOT::RDF::RCsvDS Class ReferencefinalDataframe. ; RDataFrame data source class for reading CSV files. ; The RCsvDS class implements a CSV file reader for RDataFrame.; A RDataFrame that reads from a CSV file can be constructed using the factory method ROOT::RDF::FromCSV, which accepts five parameters:; Path to the CSV file.; Boolean that specifies whether the first row of the CSV file contains headers or not (optional, default true). If false, header names will be automatically generated as Col0, Col1, ..., ColN.; Delimiter (optional, default ',').; Chunk size (optional, default is -1 to read all) - number of lines to read at a time; Column Types (optional, default is an empty map). A map with column names as keys and their type (expressed as a single character, see below) as values. The type of columns that do not appear in the map is inferred from the data. The supported types are:; Integer: stored as a 64-bit long long int; can be specified in the column types map with 'L'.; Floating point number: stored with double precision; specified with 'D'.; Boolean: matches the literals true and false; specified with 'O'.; String: stored as an std::string, matches anything that does not fall into any of the previous types; specified with 'T'. These are some formatting rules expected by the RCsvDS implementation:; All records must have the same number of fields, in the same order.; Any field may be quoted. ""1997"",""Ford"",""E350"". Fields with embedded delimiters (e.g. comma) must be quoted. 1997,Ford,E350,""Super, luxurious truck"". Fields with double-quote characters must be quoted, and each of the embedded double-quote characters must be represented by a pair of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RCsvDS.html:73,Guid,Guide,73,doc/master/classROOT_1_1RDF_1_1RCsvDS.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RCsvDS.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::RDF::RCutFlowReport Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::RDF::RCutFlowReport Class Reference. . Definition at line 49 of file RCutFlowReport.hxx. Public Types; using const_iterator = typename std::vector< TCutInfo >::const_iterator;  . Public Member Functions; const TCutInfo & At (std::string_view cutName);  ; const_iterator begin () const;  ; const_iterator end () const;  ; const TCutInfo & operator[] (std::string_view cutName);  ; void Print ();  . Private Member Functions; void AddCut (TCutInfo &&ci);  . Private Attributes; std::vector< TCutInfo > fCutInfos;  . Friends; class ROOT::Detail::RDF::RFilterBase;  . #include <ROOT/RDF/RCutFlowReport.hxx>; Member Typedef Documentation. ◆ const_iterator. using ROOT::RDF::RCutFlowReport::const_iterator = typename std::vector<TCutInfo>::const_iterator. Definition at line 57 of file RCutFlowReport.hxx. Member Function Documentation. ◆ AddCut(). void ROOT::RDF::RCutFlowReport::AddCut ; (; TCutInfo && ; ci). inlineprivate . Definition at line 54 of file RCutFlowReport.hxx. ◆ At(). const TCutInfo & ROOT::RDF::RCutFlowReport::At ; (; std::string_view ; cutName). inline . Definition at line 60 of file RCutFlowReport.hxx. ◆ begin(). const_iterator ROOT::RDF::RCutFlowReport::begin ; (; ); const. inline . Definition at line 61 of file RCutFlowReport.hxx. ◆ end(). const_iterator ROOT::RDF::RCutFlowReport::end ; (; ); const. inline . Definition at line 62 of file RCutFlowReport.hxx. ◆ operator[](). const TCutInfo & ROOT::RDF::RCutFlowReport::operator[] ; (; std::string_view ; cutName). Definition at line 33 of file RCutFlowReport.cxx. ◆ Print(). void ROOT::RDF::RCutFlowReport::Print ; (; ). Definition at line 21 of file RCutFlowReport.cxx. Friends And Related Symbol Documentation. ◆ ROOT::Detail::RDF::RFilter,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RCutFlowReport.html:81,Guid,Guide,81,doc/master/classROOT_1_1RDF_1_1RCutFlowReport.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RCutFlowReport.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF::RDFDescription Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::RDF::RDFDescription Class ReferenceDataframe. ; A DFDescription contains useful information about a given RDataFrame computation graph. ; A DFDescription is returned by the Describe() RDataFrame method. Each DFDescription object can output either a brief or full description. ; Definition at line 27 of file RDFDescription.hxx. Public Member Functions;  RDFDescription (const std::string &briefDescription, const std::string &fullDescription, unsigned int filecount);  ; std::string AsString (bool shortFormat=false) const;  ; unsigned int GetNFiles () const;  ; void Print (bool shortFormat=false) const;  . Private Attributes; std::string fBriefDescription;  ; unsigned int fFileCount;  ; std::string fFullDescription;  . Friends; std::ostream & operator<< (std::ostream &os, const RDFDescription &description);  . #include <ROOT/RDF/RDFDescription.hxx>; Constructor & Destructor Documentation. ◆ RDFDescription(). ROOT::RDF::RDFDescription::RDFDescription ; (; const std::string & ; briefDescription, . const std::string & ; fullDescription, . unsigned int ; filecount . ). Definition at line 17 of file RDFDescription.cxx. Member Function Documentation. ◆ AsString(). std::string ROOT::RDF::RDFDescription::AsString ; (; bool ; shortFormat = false); const. Definition at line 21 of file RDFDescription.cxx. ◆ GetNFiles(). unsigned int ROOT::RDF::RDFDescription::GetNFiles ; (; ); const. inline . Definition at line 38 of file RDFDescription.hxx. ◆ Print(). void ROOT::RDF::RDFDescription::Print ; (; bool ; shortFormat = false); const. Definition at line 29 of file RDFDescription.cxx. Friends And Related Symbol Documentation. ◆ operator<<. std::ostream & operator<< ; (; std::ostream & ; os, . const RDFDescription & ; description . ). friend . Definit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RDFDescription.html:81,Guid,Guide,81,doc/master/classROOT_1_1RDF_1_1RDFDescription.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RDFDescription.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF::RDataSource Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Types |; Protected Member Functions |; List of all members ; ROOT::RDF::RDataSource Class ReferenceabstractDataframe. ; RDataSource defines an API that RDataFrame can use to read arbitrary data formats. ; A concrete RDataSource implementation (i.e. a class that inherits from RDataSource and implements all of its pure methods) provides an adaptor that RDataFrame can leverage to read any kind of tabular data formats. RDataFrame calls into RDataSource to retrieve information about the data, retrieve (thread-local) readers or ""cursors"" for selected columns and to advance the readers to the desired data entry.; The sequence of calls that RDataFrame (or any other client of a RDataSource) performs is the following:. SetNSlots() : inform RDataSource of the desired level of parallelism; GetColumnReaders() : retrieve from RDataSource per-thread readers for the desired columns; Initialize() : inform RDataSource that an event-loop is about to start; GetEntryRanges() : retrieve from RDataSource a set of ranges of entries that can be processed concurrently; InitSlot() : inform RDataSource that a certain thread is about to start working on a certain range of entries; SetEntry() : inform RDataSource that a certain thread is about to start working on a certain entry; FinalizeSlot() : inform RDataSource that a certain thread finished working on a certain range of entries; Finalize() : inform RDataSource that an event-loop finished. RDataSource implementations must support running multiple event-loops consecutively (although sequentially) on the same dataset.; SetNSlots() is called once per RDataSource object, typically when it is associated to a RDataFrame.; GetColumnReaders() can be called several times, potentially with the same arguments, also in-between event-loops, but not during an event-loop.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RDataSource.html:78,Guid,Guide,78,doc/master/classROOT_1_1RDF_1_1RDataSource.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RDataSource.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF::RDisplay Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; ROOT::RDF::RDisplay Class ReferenceDataframe. ; This class is the textual representation of the content of a columnar dataset. ; This class is provided to the user, and it can be used to print on screen the entries of the dataset requested through the Display action in a compact representation or to return the full representation of the events as a string. In order to apply proper formatting the content is buffered in memory as strings. ; Definition at line 65 of file RDisplay.hxx. Public Member Functions;  RDisplay (const VecStr_t &columnNames, const VecStr_t &types, size_t nMaxCollectionElements);  Creates an RDisplay to print the event values. ;  ; std::string AsString () const;  Returns the representation as a string. ;  ; void Print () const;  Prints the representation to the standard output. ;  . Private Types; using DElement_t = ROOT::Internal::RDF::RDisplayElement;  ; using VecStr_t = std::vector< std::string >;  . Private Member Functions; void AddCollectionToRow (const VecStr_t &collection);  Adds a collection to the table. ;  ; bool AddInterpreterString (std::stringstream &, bool &element, const int &index);  Appends a string if the T type is boolean. ;  ; bool AddInterpreterString (std::stringstream &, ROOT::RVec< char > &charArr, const int &index);  AddInterpreterString overload for arrays of chars. ;  ; template<typename T , std::enable_if_t< ROOT::Internal::RDF::IsDataContainer< T >::value &&std::is_arithmetic_v< typename T::value_type > &&!std::is_same_v< typename T::value_type, bool >, int > = 0> ; bool AddInterpreterString (std::stringstream &, T &collection, const int &index);  Represent a collection of values as a collection of strings. ;  ; templa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RDisplay.html:75,Guid,Guide,75,doc/master/classROOT_1_1RDF_1_1RDisplay.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RDisplay.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF::RInterface< Proxied, DataSource > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::RDF::RInterface< Proxied, DataSource > Class Template ReferenceDataframe. ; template<typename Proxied, typename DataSource = void>; class ROOT::RDF::RInterface< Proxied, DataSource >The public interface to the RDataFrame federation of classes. ; Template Parameters. ProxiedOne of the ""node"" base types (e.g. RLoopManager, RFilterBase). The user never specifies this type manually. ; DataSourceThe type of the RDataSource which is providing the data to the data frame. There is no source by default. The documentation of each method features a one liner illustrating how to use the method, for example showing how the majority of the template parameters are automatically deduced requiring no or very little effort by the user. ; Definition at line 113 of file RInterface.hxx. Public Member Functions;  RInterface (const RInterface &)=default;  Copy-ctor for RInterface. ;  ; template<typename T = Proxied, typename = std::enable_if_t<std::is_same<T, RLoopManager>::value, int>> ;  RInterface (const std::shared_ptr< RLoopManager > &proxied);  Build a RInterface from a RLoopManager. ;  ;  RInterface (RInterface &&)=default;  Move-ctor for RInterface. ;  ; template<typename AccFun , typename MergeFun , typename R = typename TTraits::CallableTraits<AccFun>::ret_type, typename ArgTypes = typename TTraits::CallableTraits<AccFun>::arg_types, typename ArgTypesNoDecay = typename TTraits::CallableTraits<AccFun>::arg_types_nodecay, typename U = TTraits::TakeFirstParameter_t<ArgTypes>, typename T = TTraits::TakeFirstParameter_t<TTraits::RemoveFirstParameter_t<ArgTypes>>> ; RResultPtr< U > Aggregate (AccFun aggregator, MergeFun merger, std::string_view c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html:109,Guid,Guide,109,doc/master/classROOT_1_1RDF_1_1RInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF::RInterfaceBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; ROOT::RDF::RInterfaceBase Class Reference. . Definition at line 52 of file RInterfaceBase.hxx. Public Member Functions;  RInterfaceBase (RDFDetail::RLoopManager &lm, const RDFInternal::RColumnRegister &colRegister);  ;  RInterfaceBase (std::shared_ptr< RDFDetail::RLoopManager > lm);  ; RDFDescription Describe ();  Return information about the dataframe. ;  ; ColumnNames_t GetColumnNames ();  Returns the names of the available columns. ;  ; std::string GetColumnType (std::string_view column);  Return the type of a given column as a string. ;  ; ColumnNames_t GetDefinedColumnNames ();  Returns the names of the defined columns. ;  ; unsigned int GetNFiles ();  ; unsigned int GetNRuns () const;  Gets the number of event loops run. ;  ; unsigned int GetNSlots () const;  Gets the number of data processing slots. ;  ; RVariationsDescription GetVariations () const;  Return a descriptor for the systematic variations registered in this branch of the computation graph. ;  ; bool HasColumn (std::string_view columnName);  Checks if a column is present in the dataset. ;  . Protected Member Functions; void AddDefaultColumns ();  ; template<typename... ColumnTypes> ; void CheckAndFillDSColumns (ColumnNames_t validCols, TTraits::TypeList< ColumnTypes... > typeList);  ; void CheckIMTDisabled (std::string_view callerName);  ; template<typename ActionTag , typename... ColTypes, typename ActionResultType , typename RDFNode , typename HelperArgType = ActionResultType, std::enable_if_t< RDFInternal::RNeedJitting< ColTypes... >::value, int > = 0> ; RResultPtr< ActionResultType > CreateAction (const ColumnNames_t &columns, const std::shared_ptr< ActionResultType > &r, const std::shared_ptr< HelperArgType > &helperArg, const std::shared_pt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterfaceBase.html:81,Guid,Guide,81,doc/master/classROOT_1_1RDF_1_1RInterfaceBase.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterfaceBase.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF::RResultPtr< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Attributes |; Private Types |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::RDF::RResultPtr< T > Class Template ReferenceDataframe. ; template<typename T>; class ROOT::RDF::RResultPtr< T >Smart pointer for the return type of actions. ; A wrapper around the result of RDataFrame actions able to trigger calculations lazily. Template Parameters. TType of the action result. A smart pointer which allows to access the result of a RDataFrame action. The methods of the encapsulated object can be accessed via the arrow operator. Upon invocation of the arrow operator or dereferencing (operator*), the loop on the events and calculations of all scheduled actions are executed if needed. It is possible to iterate on the result proxy if the proxied object is a collection. for (auto& myItem : myResultProxy) { ... };; If iteration is not supported by the type of the proxied object, a compilation error is thrown. ; Definition at line 119 of file RResultPtr.hxx. Public Types; using Value_t = T;  Convenience alias to simplify access to proxied type. ;  . Public Member Functions;  RResultPtr ()=default;  ;  RResultPtr (const RResultPtr &)=default;  ; template<typename T2 , std::enable_if_t< std::is_constructible< std::shared_ptr< T >, std::shared_ptr< T2 > >::value, int > = 0> ;  RResultPtr (const RResultPtr< T2 > &r);  Convert a RResultPtr<T2> to a RResultPtr<T>. ;  ;  RResultPtr (RResultPtr &&)=default;  ; RIterationHelper< T >::Iterator_t begin ();  Return an iterator to the beginning of the contained object if this makes sense, throw a compilation error otherwise. ;  ; RIterationHelper< T >::Iterator_t end ();  Return an iterator to the end of the contained object if this makes sense, throw a compilation error otherwise. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RResultPtr.html:91,Guid,Guide,91,doc/master/classROOT_1_1RDF_1_1RResultPtr.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RResultPtr.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF::RSampleInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::RDF::RSampleInfo Class Reference. ; This type represents a sample identifier, to be used in conjunction with RDataFrame features such as DefinePerSample() and per-sample callbacks. ; When the input data comes from a TTree, the string representation of RSampleInfo (which is returned by AsString() and that can be queried e.g. with Contains()) is of the form ""<filename>/<treename>"".; In multi-thread runs, different tasks might process different entry ranges of the same sample, so RSampleInfo also provides methods to inspect which part of a sample is being taken into consideration. ; Definition at line 35 of file RSampleInfo.hxx. Public Member Functions;  RSampleInfo ()=default;  ;  RSampleInfo (const RSampleInfo &)=default;  ;  RSampleInfo (RSampleInfo &&)=default;  ;  RSampleInfo (std::string_view id, std::pair< ULong64_t, ULong64_t > entryRange, const ROOT::RDF::Experimental::RSample *sample=nullptr);  ;  ~RSampleInfo ()=default;  ; const std::string & AsString () const;  Return a string representation of the sample name. ;  ; bool Contains (std::string_view substr) const;  Check whether the sample name contains the given substring. ;  ; bool Empty () const;  Check whether the sample name is empty. ;  ; std::pair< ULong64_t, ULong64_t > EntryRange () const;  Return the entry range in the sample that is being taken into consideration. ;  ; double GetD (const std::string &key) const;  Return the metadata value of type double given the key. ;  ; int GetI (const std::string &key) const;  Return the metadata value of type int given the key. ;  ; std::string GetS (const std::string &key) const;  Return the metadata value of type string given the key. ;  ; unsigned int GetSampleId () const;  Get the sample id as an int. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RSampleInfo.html:78,Guid,Guide,78,doc/master/classROOT_1_1RDF_1_1RSampleInfo.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RSampleInfo.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF::RSnapshotOptions Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RDF::RSnapshotOptions Struct Reference. ; A collection of options to steer the creation of the dataset on file. ; Definition at line 22 of file RSnapshotOptions.hxx. Public Types; using ECAlgo = ROOT::RCompressionSetting::EAlgorithm::EValues;  . Public Member Functions;  RSnapshotOptions ()=default;  ;  RSnapshotOptions (const RSnapshotOptions &)=default;  ;  RSnapshotOptions (RSnapshotOptions &&)=default;  ;  RSnapshotOptions (std::string_view mode, ECAlgo comprAlgo, int comprLevel, int autoFlush, int splitLevel, bool lazy, bool overwriteIfExists=false, bool vector2RVec=true);  . Public Attributes; int fAutoFlush = 0;  AutoFlush value for output tree. ;  ; ECAlgo fCompressionAlgorithm;  Compression algorithm of output file. ;  ; int fCompressionLevel = 1;  Compression level of output file. ;  ; bool fLazy = false;  Do not start the event loop when Snapshot is called. ;  ; std::string fMode = ""RECREATE"";  Mode of creation of output file. ;  ; bool fOverwriteIfExists = false;  If fMode is ""UPDATE"", overwrite object in output file if it already exists. ;  ; int fSplitLevel = 99;  Split level of output tree. ;  ; bool fVector2RVec = true;  If set to true will convert std::vector columns to RVec when saving to disk. ;  . #include <ROOT/RSnapshotOptions.hxx>; Member Typedef Documentation. ◆ ECAlgo. using ROOT::RDF::RSnapshotOptions::ECAlgo = ROOT::RCompressionSetting::EAlgorithm::EValues. Definition at line 23 of file RSnapshotOptions.hxx. Constructor & Destructor Documentation. ◆ RSnapshotOptions() [1/4]. ROOT::RDF::RSnapshotOptions::RSnapshotOptions ; (; ). default . ◆ RSnapshotOptions() [2/4]. ROOT::RDF::RSnapshotOptions::RSnapshotOptions ; (; const RSnapshotOptions & ; ). default . ◆ RSnapshotOptions() [3/4]. ROOT::RDF::RS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RDF_1_1RSnapshotOptions.html:84,Guid,Guide,84,doc/master/structROOT_1_1RDF_1_1RSnapshotOptions.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RDF_1_1RSnapshotOptions.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::RDF::RVariationsDescription Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::RDF::RVariationsDescription Class Reference. ; A descriptor for the systematic variations known to a given RDataFrame node. ; Definition at line 28 of file RVariationsDescription.hxx. Public Member Functions;  RVariationsDescription (const Variations_t &variations);  ; std::string AsString () const;  ; void Print () const;  . Private Types; using Variations_t = std::vector< const ROOT::Internal::RDF::RVariationBase * >;  . Private Attributes; std::string fStringRepr;  . #include <ROOT/RDF/RVariationsDescription.hxx>; Member Typedef Documentation. ◆ Variations_t. using ROOT::RDF::RVariationsDescription::Variations_t = std::vector<const ROOT::Internal::RDF::RVariationBase *>. private . Definition at line 30 of file RVariationsDescription.hxx. Constructor & Destructor Documentation. ◆ RVariationsDescription(). ROOT::RDF::RVariationsDescription::RVariationsDescription ; (; const Variations_t & ; variations). Definition at line 49 of file RVariationsDescription.cxx. Member Function Documentation. ◆ AsString(). std::string ROOT::RDF::RVariationsDescription::AsString ; (; ); const. inline . Definition at line 35 of file RVariationsDescription.hxx. ◆ Print(). void ROOT::RDF::RVariationsDescription::Print ; (; ); const. Definition at line 53 of file RVariationsDescription.cxx. Member Data Documentation. ◆ fStringRepr. std::string ROOT::RDF::RVariationsDescription::fStringRepr. private . Definition at line 29 of file RVariationsDescription.hxx. Libraries for ROOT::RDF::RVariationsDescription:. [legend]; The documentation for this class was generated from the following files:; tree/dataframe/inc/ROOT/RDF/RVariationsDescription.hxx; tree/dataframe/src/RVariationsDescription.cxx. ROOTRDFRVariationsDescription. ROOT master - Ref,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RVariationsDescription.html:89,Guid,Guide,89,doc/master/classROOT_1_1RDF_1_1RVariationsDescription.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RVariationsDescription.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF::TH1DModel Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RDF::TH1DModel Class ReferenceDataframe. ; A struct which stores the parameters of a TH1D. ; Definition at line 30 of file HistoModels.hxx. Public Member Functions;  TH1DModel ()=default;  ;  TH1DModel (const ::TH1D &h);  ;  TH1DModel (const char *name, const char *title, int nbinsx, const double *xbins);  ;  TH1DModel (const char *name, const char *title, int nbinsx, const float *xbins);  ;  TH1DModel (const char *name, const char *title, int nbinsx, double xlow, double xup);  ;  TH1DModel (const TH1DModel &)=default;  ;  ~TH1DModel ();  ; std::shared_ptr<::TH1D > GetHistogram () const;  . Public Attributes; std::vector< double > fBinXEdges;  ; TString fName;  ; int fNbinsX = 128;  ; TString fTitle;  ; double fXLow = 0.;  ; double fXUp = 64.;  . #include <ROOT/RDF/HistoModels.hxx>; Constructor & Destructor Documentation. ◆ TH1DModel() [1/6]. ROOT::RDF::TH1DModel::TH1DModel ; (; ). default . ◆ TH1DModel() [2/6]. ROOT::RDF::TH1DModel::TH1DModel ; (; const TH1DModel & ; ). default . ◆ ~TH1DModel(). ROOT::RDF::TH1DModel::~TH1DModel ; (; ). Definition at line 114 of file RDFHistoModels.cxx. ◆ TH1DModel() [3/6]. ROOT::RDF::TH1DModel::TH1DModel ; (; const ::TH1D & ; h). Definition at line 85 of file RDFHistoModels.cxx. ◆ TH1DModel() [4/6]. ROOT::RDF::TH1DModel::TH1DModel ; (; const char * ; name, . const char * ; title, . int ; nbinsx, . double ; xlow, . double ; xup . ). Definition at line 89 of file RDFHistoModels.cxx. ◆ TH1DModel() [5/6]. ROOT::RDF::TH1DModel::TH1DModel ; (; const char * ; name, . const char * ; title, . int ; nbinsx, . const float * ; xbins . ). Definition at line 93 of file RDFHistoModels.cxx. ◆ TH1DModel() [6/6]. ROOT::RDF::TH1DModel::TH1DModel ; (; const char * ; name, . const char * ; title, . int ; nbinsx, . const double * ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RDF_1_1TH1DModel.html:76,Guid,Guide,76,doc/master/structROOT_1_1RDF_1_1TH1DModel.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RDF_1_1TH1DModel.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF::TH2DModel Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RDF::TH2DModel Class ReferenceDataframe. ; A struct which stores the parameters of a TH2D. ; Definition at line 48 of file HistoModels.hxx. Public Member Functions;  TH2DModel ()=default;  ;  TH2DModel (const ::TH2D &h);  ;  TH2DModel (const char *name, const char *title, int nbinsx, const double *xbins, int nbinsy, const double *ybins);  ;  TH2DModel (const char *name, const char *title, int nbinsx, const double *xbins, int nbinsy, double ylow, double yup);  ;  TH2DModel (const char *name, const char *title, int nbinsx, const float *xbins, int nbinsy, const float *ybins);  ;  TH2DModel (const char *name, const char *title, int nbinsx, double xlow, double xup, int nbinsy, const double *ybins);  ;  TH2DModel (const char *name, const char *title, int nbinsx, double xlow, double xup, int nbinsy, double ylow, double yup);  ;  TH2DModel (const TH2DModel &)=default;  ;  ~TH2DModel ();  ; std::shared_ptr<::TH2D > GetHistogram () const;  . Public Attributes; std::vector< double > fBinXEdges;  ; std::vector< double > fBinYEdges;  ; TString fName;  ; int fNbinsX = 128;  ; int fNbinsY = 128;  ; TString fTitle;  ; double fXLow = 0.;  ; double fXUp = 64.;  ; double fYLow = 0.;  ; double fYUp = 64.;  . #include <ROOT/RDF/HistoModels.hxx>; Constructor & Destructor Documentation. ◆ TH2DModel() [1/8]. ROOT::RDF::TH2DModel::TH2DModel ; (; ). default . ◆ TH2DModel() [2/8]. ROOT::RDF::TH2DModel::TH2DModel ; (; const TH2DModel & ; ). default . ◆ ~TH2DModel(). ROOT::RDF::TH2DModel::~TH2DModel ; (; ). Definition at line 172 of file RDFHistoModels.cxx. ◆ TH2DModel() [3/8]. ROOT::RDF::TH2DModel::TH2DModel ; (; const ::TH2D & ; h). Definition at line 118 of file RDFHistoModels.cxx. ◆ TH2DModel() [4/8]. ROOT::RDF::TH2DModel::TH2DModel ; (; const char * ; name, . const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RDF_1_1TH2DModel.html:76,Guid,Guide,76,doc/master/structROOT_1_1RDF_1_1TH2DModel.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RDF_1_1TH2DModel.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF::TH3DModel Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RDF::TH3DModel Class ReferenceDataframe. ; A struct which stores the parameters of a TH3D. ; Definition at line 73 of file HistoModels.hxx. Public Member Functions;  TH3DModel ()=default;  ;  TH3DModel (const ::TH3D &h);  ;  TH3DModel (const char *name, const char *title, int nbinsx, const double *xbins, int nbinsy, const double *ybins, int nbinsz, const double *zbins);  ;  TH3DModel (const char *name, const char *title, int nbinsx, const float *xbins, int nbinsy, const float *ybins, int nbinsz, const float *zbins);  ;  TH3DModel (const char *name, const char *title, int nbinsx, double xlow, double xup, int nbinsy, double ylow, double yup, int nbinsz, double zlow, double zup);  ;  TH3DModel (const TH3DModel &)=default;  ;  ~TH3DModel ();  ; std::shared_ptr<::TH3D > GetHistogram () const;  . Public Attributes; std::vector< double > fBinXEdges;  ; std::vector< double > fBinYEdges;  ; std::vector< double > fBinZEdges;  ; TString fName;  ; int fNbinsX = 128;  ; int fNbinsY = 128;  ; int fNbinsZ = 128;  ; TString fTitle;  ; double fXLow = 0.;  ; double fXUp = 64.;  ; double fYLow = 0.;  ; double fYUp = 64.;  ; double fZLow = 0.;  ; double fZUp = 64.;  . #include <ROOT/RDF/HistoModels.hxx>; Constructor & Destructor Documentation. ◆ TH3DModel() [1/6]. ROOT::RDF::TH3DModel::TH3DModel ; (; ). default . ◆ TH3DModel() [2/6]. ROOT::RDF::TH3DModel::TH3DModel ; (; const TH3DModel & ; ). default . ◆ ~TH3DModel(). ROOT::RDF::TH3DModel::~TH3DModel ; (; ). Definition at line 217 of file RDFHistoModels.cxx. ◆ TH3DModel() [3/6]. ROOT::RDF::TH3DModel::TH3DModel ; (; const ::TH3D & ; h). Definition at line 176 of file RDFHistoModels.cxx. ◆ TH3DModel() [4/6]. ROOT::RDF::TH3DModel::TH3DModel ; (; const char * ; name, . const char * ; title, . int ; nbinsx, . double ; x",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RDF_1_1TH3DModel.html:76,Guid,Guide,76,doc/master/structROOT_1_1RDF_1_1TH3DModel.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RDF_1_1TH3DModel.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF::THnDModel Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RDF::THnDModel Class ReferenceDataframe. ; A struct which stores the parameters of a THnD. ; Definition at line 102 of file HistoModels.hxx. Public Member Functions;  THnDModel ()=default;  ;  THnDModel (const ::THnD &h);  ;  THnDModel (const char *name, const char *title, int dim, const int *nbins, const double *xmin, const double *xmax);  ;  THnDModel (const char *name, const char *title, int dim, const int *nbins, const std::vector< std::vector< double > > &xbins);  ;  THnDModel (const char *name, const char *title, int dim, const std::vector< int > &nbins, const std::vector< double > &xmin, const std::vector< double > &xmax);  ;  THnDModel (const char *name, const char *title, int dim, const std::vector< int > &nbins, const std::vector< std::vector< double > > &xbins);  ;  THnDModel (const THnDModel &)=default;  ;  ~THnDModel ();  ; std::shared_ptr<::THnD > GetHistogram () const;  . Public Attributes; std::vector< std::vector< double > > fBinEdges;  ; int fDim;  ; TString fName;  ; std::vector< int > fNbins;  ; TString fTitle;  ; std::vector< double > fXmax;  ; std::vector< double > fXmin;  . #include <ROOT/RDF/HistoModels.hxx>; Constructor & Destructor Documentation. ◆ THnDModel() [1/7]. ROOT::RDF::THnDModel::THnDModel ; (; ). default . ◆ THnDModel() [2/7]. ROOT::RDF::THnDModel::THnDModel ; (; const THnDModel & ; ). default . ◆ ~THnDModel(). ROOT::RDF::THnDModel::~THnDModel ; (; ). Definition at line 284 of file RDFHistoModels.cxx. ◆ THnDModel() [3/7]. ROOT::RDF::THnDModel::THnDModel ; (; const ::THnD & ; h). Definition at line 221 of file RDFHistoModels.cxx. ◆ THnDModel() [4/7]. ROOT::RDF::THnDModel::THnDModel ; (; const char * ; name, . const char * ; title, . int ; dim, . const int * ; nbins, . const double * ; xmin, . const double * ; x",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RDF_1_1THnDModel.html:76,Guid,Guide,76,doc/master/structROOT_1_1RDF_1_1THnDModel.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RDF_1_1THnDModel.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF::TProfile1DModel Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RDF::TProfile1DModel Class ReferenceDataframe. ; A struct which stores the parameters of a TProfile. ; Definition at line 126 of file HistoModels.hxx. Public Member Functions;  TProfile1DModel ()=default;  ;  TProfile1DModel (const ::TProfile &h);  ;  TProfile1DModel (const char *name, const char *title, int nbinsx, const double *xbins, const char *option="""");  ;  TProfile1DModel (const char *name, const char *title, int nbinsx, const double *xbins, double ylow, double yup, const char *option="""");  ;  TProfile1DModel (const char *name, const char *title, int nbinsx, const float *xbins, const char *option="""");  ;  TProfile1DModel (const char *name, const char *title, int nbinsx, double xlow, double xup, const char *option="""");  ;  TProfile1DModel (const char *name, const char *title, int nbinsx, double xlow, double xup, double ylow, double yup, const char *option="""");  ;  TProfile1DModel (const TProfile1DModel &)=default;  ;  ~TProfile1DModel ();  ; std::shared_ptr<::TProfile > GetProfile () const;  . Public Attributes; std::vector< double > fBinXEdges;  ; TString fName;  ; int fNbinsX = 128;  ; TString fOption;  ; TString fTitle;  ; double fXLow = 0.;  ; double fXUp = 64.;  ; double fYLow = 0.;  ; double fYUp = 0.;  . #include <ROOT/RDF/HistoModels.hxx>; Constructor & Destructor Documentation. ◆ TProfile1DModel() [1/8]. ROOT::RDF::TProfile1DModel::TProfile1DModel ; (; ). default . ◆ TProfile1DModel() [2/8]. ROOT::RDF::TProfile1DModel::TProfile1DModel ; (; const TProfile1DModel & ; ). default . ◆ ~TProfile1DModel(). ROOT::RDF::TProfile1DModel::~TProfile1DModel ; (; ). Definition at line 336 of file RDFHistoModels.cxx. ◆ TProfile1DModel() [3/8]. ROOT::RDF::TProfile1DModel::TProfile1DModel ; (; const ::TProfile & ; h). Definition at line 288 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RDF_1_1TProfile1DModel.html:82,Guid,Guide,82,doc/master/structROOT_1_1RDF_1_1TProfile1DModel.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RDF_1_1TProfile1DModel.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDF::TProfile2DModel Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RDF::TProfile2DModel Class ReferenceDataframe. ; A struct which stores the parameters of a TProfile2D. ; Definition at line 151 of file HistoModels.hxx. Public Member Functions;  TProfile2DModel ()=default;  ;  TProfile2DModel (const ::TProfile2D &h);  ;  TProfile2DModel (const char *name, const char *title, int nbinsx, const double *xbins, int nbinsy, const double *ybins, const char *option="""");  ;  TProfile2DModel (const char *name, const char *title, int nbinsx, const double *xbins, int nbinsy, double ylow, double yup, const char *option="""");  ;  TProfile2DModel (const char *name, const char *title, int nbinsx, double xlow, double xup, int nbinsy, const double *ybins, const char *option="""");  ;  TProfile2DModel (const char *name, const char *title, int nbinsx, double xlow, double xup, int nbinsy, double ylow, double yup, const char *option="""");  ;  TProfile2DModel (const char *name, const char *title, int nbinsx, double xlow, double xup, int nbinsy, double ylow, double yup, double zlow, double zup, const char *option="""");  ;  TProfile2DModel (const TProfile2DModel &)=default;  ;  ~TProfile2DModel ();  ; std::shared_ptr<::TProfile2D > GetProfile () const;  . Public Attributes; std::vector< double > fBinXEdges;  ; std::vector< double > fBinYEdges;  ; TString fName;  ; int fNbinsX = 128;  ; int fNbinsY = 128;  ; TString fOption;  ; TString fTitle;  ; double fXLow = 0.;  ; double fXUp = 64.;  ; double fYLow = 0.;  ; double fYUp = 64.;  ; double fZLow = 0.;  ; double fZUp = 0.;  . #include <ROOT/RDF/HistoModels.hxx>; Constructor & Destructor Documentation. ◆ TProfile2DModel() [1/8]. ROOT::RDF::TProfile2DModel::TProfile2DModel ; (; ). default . ◆ TProfile2DModel() [2/8]. ROOT::RDF::TProfile2DModel::TProfile2DModel ; (; const TProfile2DModel &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RDF_1_1TProfile2DModel.html:82,Guid,Guide,82,doc/master/structROOT_1_1RDF_1_1TProfile2DModel.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RDF_1_1TProfile2DModel.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RDataFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::RDataFrame Class ReferenceDataframe. ; ROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree , CSV and other data formats, in C++ or Python. ; In addition, multi-threading and other low-level optimisations allow users to exploit all the resources available on their machines completely transparently.; Skip to the class reference or keep reading for the user guide.; In a nutshell: ROOT::EnableImplicitMT(); // Tell ROOT you want to go parallel; ROOT::RDataFrame d(""myTree"", ""file_*.root""); // Interface to TTree and TChain; auto myHisto = d.Histo1D(""Branch_A""); // This books the (lazy) filling of a histogram; myHisto->Draw(); // Event loop is run here, upon first access to a result; d#define d(i)Definition RSha256.hxx:102; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; ROOT::EnableImplicitMTvoid EnableImplicitMT(UInt_t numthreads=0)Enable ROOT's implicit multi-threading for all objects and methods that provide an internal paralleli...Definition TROOT.cxx:539; Calculations are expressed in terms of a type-safe functional chain of actions and transformations, RDataFrame takes care of their execution. The implementation automatically puts in place several low level optimisations such as multi-thread parallelization and caching. For the impatient user; You can directly see RDataFrame in action in our tutorials, in C++ or Python. Table of Contents. Cheat sheet; Introduction; Crash course; Working with collections; Transformations: manipulating data; Actions: getting results; Distributed execution in Python; Performance tips and parallel execution; More features; Systematic variations; RDataFrame objects as function arguments and re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDataFrame.html:72,Guid,Guide,72,doc/master/classROOT_1_1RDataFrame.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDataFrame.html,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,". ROOT: ROOT::RDataFrame Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::RDataFrame Class ReferenceDataframe. ; ROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree , CSV and other data formats, in C++ or Python. ; In addition, multi-threading and other low-level optimisations allow users to exploit all the resources available on their machines completely transparently.; Skip to the class reference or keep reading for the user guide.; In a nutshell: ROOT::EnableImplicitMT(); // Tell ROOT you want to go parallel; ROOT::RDataFrame d(""myTree"", ""file_*.root""); // Interface to TTree and TChain; auto myHisto = d.Histo1D(""Branch_A""); // This books the (lazy) filling of a histogram; myHisto->Draw(); // Event loop is run here, upon first access to a result; d#define d(i)Definition RSha256.hxx:102; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; ROOT::EnableImplicitMTvoid EnableImplicitMT(UInt_t numthreads=0)Enable ROOT's implicit multi-threading for all objects and methods that provide an internal paralleli...Definition TROOT.cxx:539; Calculations are expressed in terms of a type-safe functional chain of actions and transformations, RDataFrame takes care of their execution. The implementation automatically puts in place several low level optimisations such as multi-thread parallelization and caching. For the impatient user; You can directly see RDataFrame in action in our tutorials, in C++ or Python. Table of Contents. Cheat sheet; Introduction; Crash course; Working with collections; Transformations: manipulating data; Actions: getting results; Distributed execution in Python; Performance tips and parallel execution; More features; Systematic variations; RDataFrame objects as function arguments and ret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html:71,Guid,Guide,71,doc/v632/classROOT_1_1RDataFrame.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,". ROOT: ROOT::RFileDialog Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; ROOT::RFileDialog Class ReferenceWeb Widgets » Browsable object | Web Widgets. ; Web-based FileDialog. ; Initial message send to client to configure layout. ; Definition at line 41 of file RFileDialog.hxx. Public Types; enum  EDialogTypes { kOpenFile; , kSaveAs; , kNewFile; };  . Public Member Functions;  RFileDialog (EDialogTypes kind=kOpenFile, const std::string &title="""", const std::string &fname="""");  constructor When title not specified, default will be used ;  ; virtual ~RFileDialog ();  destructor ;  ; bool GetCanChangePath () const;  Returns true if working path can be change with gui elements. ;  ; const std::string & GetFileName () const;  ; const auto & GetNameFilters () const;  Returns array of name filters. ;  ; std::string GetSelectedFilter () const;  Returns selected filter Can differ from specified value - if it does not match to existing entry in NameFilters. ;  ; const EDialogTypes & GetType () const;  ; std::string GetWorkingPath () const;  Returns current working path. ;  ; void Hide ();  Hide ROOT Browser. ;  ; bool IsCompleted () const;  ; void SetCallback (RFileDialogCallback_t callback);  Assign callback. ;  ; void SetCanChangePath (bool on=true);  Configure if working path in dialog can be changed via gui elements. ;  ; void SetNameFilters (const std::vector< std::string > &arr);  Set array of name filters like ""Text files (*.txt)"", ""Any files (*)"", ""Image files (*png *.jpg)"" Should be specified before starting dialog. ;  ; void SetSelectedFilter (const std::string &name);  Configure selected filter Has to be one of the string from NameFilters entry. ;  ; void SetWorkingPath (const std::string &);  Ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RFileDialog.html:73,Guid,Guide,73,doc/master/classROOT_1_1RFileDialog.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RFileDialog.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RFileDialog Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; ROOT::RFileDialog Class ReferenceWeb Widgets » Browsable object. ; Web-based FileDialog. ; web-based FileDialog.; Initial message send to client to configure layout. ; Definition at line 41 of file RFileDialog.hxx. Public Types; enum  EDialogTypes { kOpenFile; , kSaveAs; , kNewFile; };  . Public Member Functions;  RFileDialog (EDialogTypes kind=kOpenFile, const std::string &title="""", const std::string &fname="""");  constructor When title not specified, default will be used ;  ; virtual ~RFileDialog ();  destructor ;  ; bool GetCanChangePath () const;  Returns true if working path can be change with gui elements. ;  ; const std::string & GetFileName () const;  ; const auto & GetNameFilters () const;  Returns array of name filters. ;  ; std::string GetSelectedFilter () const;  Returns selected filter Can differ from specified value - if it does not match to existing entry in NameFilters. ;  ; const EDialogTypes & GetType () const;  ; std::string GetWorkingPath () const;  Returns current working path. ;  ; void Hide ();  Hide ROOT Browser. ;  ; bool IsCompleted () const;  ; void SetCallback (RFileDialogCallback_t callback);  Assign callback. ;  ; void SetCanChangePath (bool on=true);  Configure if working path in dialog can be changed via gui elements. ;  ; void SetNameFilters (const std::vector< std::string > &arr);  Set array of name filters like ""Text files (*.txt)"", ""Any files (*)"", ""Image files (*png *.jpg)"" Should be specified before starting dialog. ;  ; void SetSelectedFilter (const std::string &name);  Configure selected filter Has to be one of the string from NameFilters entry. ;  ; void SetWorkingPath (const std::string",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RFileDialog.html:72,Guid,Guide,72,doc/v632/classROOT_1_1RFileDialog.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RFileDialog.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeoItem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::RGeoItem Class ReferenceWeb Widgets » Browsable object. ; Representation of single item in the geometry browser. ; Definition at line 91 of file RGeomData.hxx. Public Member Functions;  RGeoItem ()=default;  Default constructor. ;  ;  RGeoItem (const std::string &_name, int _nchilds, int _nodeid, const std::string &_color, const std::string &_material="""", int _vis=0, int _pvis=0);  ;  ~RGeoItem () override=default;  ; void SetTop (bool on=true);  ;  Public Member Functions inherited from ROOT::Browsable::RItem;  RItem ()=default;  ;  RItem (const std::string &_name, int _nchilds=0, const std::string &_icon="""");  ; virtual ~RItem ()=default;  ; virtual bool Compare (const RItem *b, const std::string &) const;  ; const std::string & GetIcon () const;  ; const std::string & GetMTime () const;  ; const std::string & GetName () const;  ; const std::string & GetSize () const;  ; const std::string & GetTitle () const;  ; virtual bool IsFolder () const;  ; virtual bool IsHidden () const;  ; void SetChecked (bool on=true);  ; void SetExpanded (bool on=true);  ; void SetIcon (const std::string &_icon);  ; void SetMTime (const std::string &_mtime);  ; void SetName (const std::string &_name);  ; void SetSize (const std::string &_size);  ; void SetSize (Long64_t _size);  ; void SetTitle (const std::string &_title);  . Protected Attributes; std::string color;  color ;  ; int id {0};  node id ;  ; std::string material;  material ;  ; int pvis {0};  visibility of physical node ;  ; bool top {false};  indicates if node selected as top ;  ; int vis {0};  visibility of logical node ;  ;  Protected Attributes inherited from ROOT::Browsable::RItem; bool checked {false};  is checked, not yet used ;  ; bool expanded {false};  is expanded ;  ; std::string fsize;  item siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeoItem.html:70,Guid,Guide,70,doc/master/classROOT_1_1RGeoItem.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeoItem.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeoItem Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::RGeoItem Class ReferenceWeb Widgets » Browsable object. ; Representation of single item in the geometry browser. ; Definition at line 91 of file RGeomData.hxx. Public Member Functions;  RGeoItem ()=default;  Default constructor. ;  ;  RGeoItem (const std::string &_name, int _nchilds, int _nodeid, const std::string &_color, const std::string &_material="""", int _vis=0, int _pvis=0);  ;  ~RGeoItem () override=default;  ; void SetTop (bool on=true);  ;  Public Member Functions inherited from ROOT::Browsable::RItem;  RItem ()=default;  ;  RItem (const std::string &_name, int _nchilds=0, const std::string &_icon="""");  ; virtual ~RItem ()=default;  ; virtual bool Compare (const RItem *b, const std::string &) const;  ; const std::string & GetIcon () const;  ; const std::string & GetMTime () const;  ; const std::string & GetName () const;  ; const std::string & GetSize () const;  ; const std::string & GetTitle () const;  ; virtual bool IsFolder () const;  ; virtual bool IsHidden () const;  ; void SetChecked (bool on=true);  ; void SetExpanded (bool on=true);  ; void SetIcon (const std::string &_icon);  ; void SetMTime (const std::string &_mtime);  ; void SetName (const std::string &_name);  ; void SetSize (const std::string &_size);  ; void SetSize (Long64_t _size);  ; void SetTitle (const std::string &_title);  . Protected Attributes; std::string color;  color ;  ; int id {0};  node id ;  ; std::string material;  material ;  ; int pvis {0};  visibility of physical node ;  ; bool top {false};  indicates if node selected as top ;  ; int vis {0};  visibility of logical node ;  ;  Protected Attributes inherited from ROOT::Browsable::RItem; bool checked {false};  is checked, not yet used ;  ; bool expanded {false};  is expanded ;  ; std::string fsize;  item size",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeoItem.html:69,Guid,Guide,69,doc/v632/classROOT_1_1RGeoItem.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeoItem.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeoPainter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::RGeoPainter Class Reference. . Definition at line 20 of file RGeoPainter.hxx. Public Member Functions;  RGeoPainter (TGeoManager *manager);  ;  ~RGeoPainter () override;  ; void AddSize3D (Int_t, Int_t, Int_t) override;  ; TVirtualGeoTrack * AddTrack (Int_t, Int_t, TObject *) override;  ; void AddTrackPoint (Double_t *, Double_t *, Bool_t=kFALSE) override;  ; void BombTranslation (const Double_t *, Double_t *) override;  ; void CheckBoundaryErrors (Int_t=1000000, Double_t=-1.) override;  ; void CheckBoundaryReference (Int_t=-1) override;  ; void CheckGeometry (Int_t, Double_t, Double_t, Double_t) const override;  ; void CheckGeometryFull (Bool_t=kTRUE, Bool_t=kTRUE, Int_t=10000, const Double_t *=nullptr) override;  ; void CheckOverlaps (const TGeoVolume *, Double_t=0.1, Option_t *="""") const override;  ; void CheckPoint (Double_t=0, Double_t=0, Double_t=0, Option_t *="""", Double_t=0.) override;  ; void CheckShape (TGeoShape *, Int_t, Int_t, Option_t *) override;  ; Int_t CountVisibleNodes () override;  ; void DefaultAngles () override;  ; void DefaultColors () override;  ; Int_t DistanceToPrimitiveVol (TGeoVolume *, Int_t, Int_t) override;  ; void Draw (Option_t *="""") override;  Default Draw method for all objects. ;  ; void DrawBatemanSol (TGeoBatemanSol *, Option_t *="""") override;  ; void DrawCurrentPoint (Int_t) override;  ; void DrawOnly (Option_t *="""") override;  ; void DrawOverlap (void *, Option_t *="""") override;  ; void DrawPanel () override;  ; void DrawPath (const char *, Option_t *="""") override;  ; void DrawPolygon (const TGeoPolygon *) override;  ; void DrawShape (TGeoShape *, Option_t *="""") override;  ; void DrawVolume (TGeoVolume *, Option_t *="""") override;  ; void EditGeometry (Option_t *="""") override;  ; void EstimateCameraMove (Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeoPainter.html:73,Guid,Guide,73,doc/master/classROOT_1_1RGeoPainter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeoPainter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeoPainter Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::RGeoPainter Class Reference. . Definition at line 20 of file RGeoPainter.hxx. Public Member Functions;  RGeoPainter (TGeoManager *manager);  ;  ~RGeoPainter () override;  ; void AddSize3D (Int_t, Int_t, Int_t) override;  ; TVirtualGeoTrack * AddTrack (Int_t, Int_t, TObject *) override;  ; void AddTrackPoint (Double_t *, Double_t *, Bool_t=kFALSE) override;  ; void BombTranslation (const Double_t *, Double_t *) override;  ; void CheckBoundaryErrors (Int_t=1000000, Double_t=-1.) override;  ; void CheckBoundaryReference (Int_t=-1) override;  ; void CheckGeometry (Int_t, Double_t, Double_t, Double_t) const override;  ; void CheckGeometryFull (Bool_t=kTRUE, Bool_t=kTRUE, Int_t=10000, const Double_t *=nullptr) override;  ; void CheckOverlaps (const TGeoVolume *, Double_t=0.1, Option_t *="""") const override;  ; void CheckPoint (Double_t=0, Double_t=0, Double_t=0, Option_t *="""", Double_t=0.) override;  ; void CheckShape (TGeoShape *, Int_t, Int_t, Option_t *) override;  ; Int_t CountVisibleNodes () override;  ; void DefaultAngles () override;  ; void DefaultColors () override;  ; Int_t DistanceToPrimitiveVol (TGeoVolume *, Int_t, Int_t) override;  ; void Draw (Option_t *="""") override;  Default Draw method for all objects. ;  ; void DrawBatemanSol (TGeoBatemanSol *, Option_t *="""") override;  ; void DrawCurrentPoint (Int_t) override;  ; void DrawOnly (Option_t *="""") override;  ; void DrawOverlap (void *, Option_t *="""") override;  ; void DrawPanel () override;  ; void DrawPath (const char *, Option_t *="""") override;  ; void DrawPolygon (const TGeoPolygon *) override;  ; void DrawShape (TGeoShape *, Option_t *="""") override;  ; void DrawVolume (TGeoVolume *, Option_t *="""") override;  ; void EditGeometry (Option_t *="""") override;  ; void EstimateCameraMove (Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeoPainter.html:72,Guid,Guide,72,doc/v632/classROOT_1_1RGeoPainter.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeoPainter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomBrowserIter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::RGeomBrowserIter Class Reference. ; Iterator of hierarchical geometry structures. ; Definition at line 60 of file RGeomData.cxx. Public Member Functions;  RGeomBrowserIter (RGeomDescription &desc);  ; std::vector< int > CurrentIds () const;  Returns array of ids to currently selected node. ;  ; bool Enter ();  ; const std::string & GetColor () const;  ; const std::string & GetMaterial () const;  ; const std::string & GetName () const;  ; int GetNodeId () const;  ; int GetVisible () const;  ; bool HasChilds () const;  ; bool IsValid () const;  ; bool Leave ();  ; bool Navigate (const std::string &path);  Navigate to specified path - path specified as string and should start with ""/"". ;  ; bool Navigate (const std::vector< std::string > &path);  Navigate to specified path .  ; bool Navigate (TGeoVolume *vol);  Navigate to specified volume - find first occurrence. ;  ; bool Next ();  ; bool NextNode ();  ; int NumChilds () const;  ; bool Reset ();  . Private Attributes; unsigned fChild {0};  ; RGeomDescription & fDesc;  ; int fNodeId {0};  ; int fParentId {-1};  ; std::vector< int > fStackChilds;  ; std::vector< int > fStackParents;  . Constructor & Destructor Documentation. ◆ RGeomBrowserIter(). ROOT::RGeomBrowserIter::RGeomBrowserIter ; (; RGeomDescription & ; desc). inline . Definition at line 71 of file RGeomData.cxx. Member Function Documentation. ◆ CurrentIds(). std::vector< int > ROOT::RGeomBrowserIter::CurrentIds ; (; ); const. inline . Returns array of ids to currently selected node. ; Definition at line 248 of file RGeomData.cxx. ◆ Enter(). bool ROOT::RGeomBrowserIter::Enter ; (; ). inline . Definition at line 89 of file RGeomData.cxx. ◆ GetColor(). const std::string & ROOT::RGeomBrowserIter::GetColor ; (; ); const. inline . Definition",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomBrowserIter.html:78,Guid,Guide,78,doc/master/classROOT_1_1RGeomBrowserIter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomBrowserIter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomBrowserIter Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::RGeomBrowserIter Class Reference. ; Iterator of hierarchical geometry structures. ; Definition at line 60 of file RGeomData.cxx. Public Member Functions;  RGeomBrowserIter (RGeomDescription &desc);  ; std::vector< int > CurrentIds () const;  Returns array of ids to currently selected node. ;  ; bool Enter ();  ; const std::string & GetColor () const;  ; const std::string & GetMaterial () const;  ; const std::string & GetName () const;  ; int GetNodeId () const;  ; int GetVisible () const;  ; bool HasChilds () const;  ; bool IsValid () const;  ; bool Leave ();  ; bool Navigate (const std::string &path);  Navigate to specified path - path specified as string and should start with ""/"". ;  ; bool Navigate (const std::vector< std::string > &path);  Navigate to specified path .  ; bool Navigate (TGeoVolume *vol);  Navigate to specified volume - find first occurrence. ;  ; bool Next ();  ; bool NextNode ();  ; int NumChilds () const;  ; bool Reset ();  . Private Attributes; unsigned fChild {0};  ; RGeomDescription & fDesc;  ; int fNodeId {0};  ; int fParentId {-1};  ; std::vector< int > fStackChilds;  ; std::vector< int > fStackParents;  . Constructor & Destructor Documentation. ◆ RGeomBrowserIter(). ROOT::RGeomBrowserIter::RGeomBrowserIter ; (; RGeomDescription & ; desc). inline . Definition at line 71 of file RGeomData.cxx. Member Function Documentation. ◆ CurrentIds(). std::vector< int > ROOT::RGeomBrowserIter::CurrentIds ; (; ); const. inline . Returns array of ids to currently selected node. ; Definition at line 248 of file RGeomData.cxx. ◆ Enter(). bool ROOT::RGeomBrowserIter::Enter ; (; ). inline . Definition at line 89 of file RGeomData.cxx. ◆ GetColor(). const std::string & ROOT::RGeomBrowserIter::GetColor ; (; ); const. inline . Definition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomBrowserIter.html:77,Guid,Guide,77,doc/v632/classROOT_1_1RGeomBrowserIter.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomBrowserIter.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomConfig Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; ROOT::RGeomConfig Class Reference. ; Configuration parameters which can be configured on the client Send as is to-from client. ; Definition at line 162 of file RGeomData.hxx. Public Attributes; int build_shapes {1};  when shapes build on server 0 - never, 1 - TGeoComposite, 2 - plus non-cylindrical, 3 - all ;  ; std::string drawopt;  draw options for TGeoPainter ;  ; int maxnumfaces {0};  maximal number of faces ;  ; int maxnumnodes {0};  maximal number of nodes ;  ; int nsegm {0};  number of segments for cylindrical shapes ;  ; bool showtop {false};  show geometry top volume, off by default ;  ; int vislevel {0};  visible level ;  . #include <ROOT/RGeomData.hxx>; Member Data Documentation. ◆ build_shapes. int ROOT::RGeomConfig::build_shapes {1}. when shapes build on server 0 - never, 1 - TGeoComposite, 2 - plus non-cylindrical, 3 - all ; Definition at line 168 of file RGeomData.hxx. ◆ drawopt. std::string ROOT::RGeomConfig::drawopt. draw options for TGeoPainter ; Definition at line 170 of file RGeomData.hxx. ◆ maxnumfaces. int ROOT::RGeomConfig::maxnumfaces {0}. maximal number of faces ; Definition at line 166 of file RGeomData.hxx. ◆ maxnumnodes. int ROOT::RGeomConfig::maxnumnodes {0}. maximal number of nodes ; Definition at line 165 of file RGeomData.hxx. ◆ nsegm. int ROOT::RGeomConfig::nsegm {0}. number of segments for cylindrical shapes ; Definition at line 169 of file RGeomData.hxx. ◆ showtop. bool ROOT::RGeomConfig::showtop {false}. show geometry top volume, off by default ; Definition at line 167 of file RGeomData.hxx. ◆ vislevel. int ROOT::RGeomConfig::vislevel {0}. visible level ; Definition at line 164 of file RGeomData.hxx. Libraries for ROOT::RGeomConfig:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomConfig.html:73,Guid,Guide,73,doc/master/classROOT_1_1RGeomConfig.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomConfig.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomConfig Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; ROOT::RGeomConfig Class Reference. ; Configuration parameters which can be configured on the client Send as is to-from client. ; Definition at line 162 of file RGeomData.hxx. Public Attributes; int build_shapes {1};  when shapes build on server 0 - never, 1 - TGeoComposite, 2 - plus non-cylindrical, 3 - all ;  ; std::string drawopt;  draw options for TGeoPainter ;  ; int maxnumfaces {0};  maximal number of faces ;  ; int maxnumnodes {0};  maximal number of nodes ;  ; int nsegm {0};  number of segments for cylindrical shapes ;  ; bool showtop {false};  show geometry top volume, off by default ;  ; int vislevel {0};  visible level ;  . #include <ROOT/RGeomData.hxx>; Member Data Documentation. ◆ build_shapes. int ROOT::RGeomConfig::build_shapes {1}. when shapes build on server 0 - never, 1 - TGeoComposite, 2 - plus non-cylindrical, 3 - all ; Definition at line 168 of file RGeomData.hxx. ◆ drawopt. std::string ROOT::RGeomConfig::drawopt. draw options for TGeoPainter ; Definition at line 170 of file RGeomData.hxx. ◆ maxnumfaces. int ROOT::RGeomConfig::maxnumfaces {0}. maximal number of faces ; Definition at line 166 of file RGeomData.hxx. ◆ maxnumnodes. int ROOT::RGeomConfig::maxnumnodes {0}. maximal number of nodes ; Definition at line 165 of file RGeomData.hxx. ◆ nsegm. int ROOT::RGeomConfig::nsegm {0}. number of segments for cylindrical shapes ; Definition at line 169 of file RGeomData.hxx. ◆ showtop. bool ROOT::RGeomConfig::showtop {false}. show geometry top volume, off by default ; Definition at line 167 of file RGeomData.hxx. ◆ vislevel. int ROOT::RGeomConfig::vislevel {0}. visible level ; Definition at line 164 of file RGeomData.hxx. Libraries for ROOT::RGeomConfig:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomDa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomConfig.html:72,Guid,Guide,72,doc/v632/classROOT_1_1RGeomConfig.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomConfig.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomDescription Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::RGeomDescription Class Reference. . Definition at line 210 of file RGeomData.hxx. Classes; class  ShapeDescr;  . Public Member Functions;  RGeomDescription ()=default;  ; void AddSignalHandler (const void *handler, RGeomSignalFunc_t func);  Add signal handler. ;  ; void Build (TGeoManager *mgr, const std::string &volname="""");  Collect information about geometry hierarchy into flat list like it done in JSROOT ClonedNodes.createClones. ;  ; void Build (TGeoVolume *vol);  Collect information about geometry from single volume like it done in JSROOT ClonedNodes.createClones. ;  ; bool ChangeConfiguration (const std::string &json);  Change configuration by client Returns true if any parameter was really changed. ;  ; bool ChangeNodeVisibility (const std::vector< std::string > &path, bool on);  Change visibility for specified element Returns true if changes was performed. ;  ; bool ClearAllPhysVisibility ();  Reset all custom visibility settings. ;  ; void ClearCache ();  Clear cached data, need to be clear when connection broken. ;  ; void ClearDrawData ();  Clear raw data. Will be rebuild when next connection will be established. ;  ; bool ClearPhysNodeVisibility (const std::vector< std::string > &path);  Reset custom visibility of physical node by path. ;  ; int FindNodeId (const std::vector< int > &stack);  Returns nodeid for given stack array, returns -1 in case of failure. ;  ; std::string GetActiveItem () const;  ; std::vector< int > GetClickedItem () const;  ; std::string GetDrawJson () const;  ; std::string GetDrawOptions () const;  Returns draw options, used for JSROOT TGeoPainter. ;  ; std::vector< int > GetHighlightedItem () const;  ; int GetJsonComp () const;  Returns JSON compression le",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomDescription.html:78,Guid,Guide,78,doc/master/classROOT_1_1RGeomDescription.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomDescription.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomDescription Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::RGeomDescription Class Reference. . Definition at line 210 of file RGeomData.hxx. Classes; class  ShapeDescr;  . Public Member Functions;  RGeomDescription ()=default;  ; void AddSignalHandler (const void *handler, RGeomSignalFunc_t func);  Add signal handler. ;  ; void Build (TGeoManager *mgr, const std::string &volname="""");  Collect information about geometry hierarchy into flat list like it done in JSROOT ClonedNodes.createClones. ;  ; void Build (TGeoVolume *vol);  Collect information about geometry from single volume like it done in JSROOT ClonedNodes.createClones. ;  ; bool ChangeConfiguration (const std::string &json);  Change configuration by client Returns true if any parameter was really changed. ;  ; bool ChangeNodeVisibility (const std::vector< std::string > &path, bool on);  Change visibility for specified element Returns true if changes was performed. ;  ; bool ClearAllPhysVisibility ();  Reset all custom visibility settings. ;  ; void ClearCache ();  Clear cached data, need to be clear when connection broken. ;  ; void ClearDrawData ();  Clear raw data. Will be rebuild when next connection will be established. ;  ; bool ClearPhysNodeVisibility (const std::vector< std::string > &path);  Reset custom visibility of physical node by path. ;  ; int FindNodeId (const std::vector< int > &stack);  Returns nodeid for given stack array, returns -1 in case of failure. ;  ; std::string GetActiveItem () const;  ; std::vector< int > GetClickedItem () const;  ; std::string GetDrawJson () const;  ; std::string GetDrawOptions () const;  Returns draw options, used for JSROOT TGeoPainter. ;  ; std::vector< int > GetHighlightedItem () const;  ; int GetJsonComp () const;  Returns JSON compression lev",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomDescription.html:77,Guid,Guide,77,doc/v632/classROOT_1_1RGeomDescription.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomDescription.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::RGeomDrawing Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; ROOT::RGeomDrawing Class Reference. ; Object with full description for drawing geometry It includes list of visible items and list of nodes required to build them. ; Definition at line 177 of file RGeomData.hxx. Public Attributes; RGeomConfig * cfg {nullptr};  current configurations ;  ; std::vector< RGeomNode * > nodes;  all used nodes to display visible items and not known for client ;  ; int numnodes {0};  total number of nodes in description ;  ; std::vector< RGeomVisible > visibles;  all visible items ;  . #include <ROOT/RGeomData.hxx>; Member Data Documentation. ◆ cfg. RGeomConfig* ROOT::RGeomDrawing::cfg {nullptr}. current configurations ; Definition at line 179 of file RGeomData.hxx. ◆ nodes. std::vector<RGeomNode*> ROOT::RGeomDrawing::nodes. all used nodes to display visible items and not known for client ; Definition at line 181 of file RGeomData.hxx. ◆ numnodes. int ROOT::RGeomDrawing::numnodes {0}. total number of nodes in description ; Definition at line 180 of file RGeomData.hxx. ◆ visibles. std::vector<RGeomVisible> ROOT::RGeomDrawing::visibles. all visible items ; Definition at line 182 of file RGeomData.hxx. Libraries for ROOT::RGeomDrawing:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomData.hxx. ROOTRGeomDrawing. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:59 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomDrawing.html:74,Guid,Guide,74,doc/master/classROOT_1_1RGeomDrawing.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomDrawing.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::RGeomDrawing Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; ROOT::RGeomDrawing Class Reference. ; Object with full description for drawing geometry It includes list of visible items and list of nodes required to build them. ; Definition at line 177 of file RGeomData.hxx. Public Attributes; RGeomConfig * cfg {nullptr};  current configurations ;  ; std::vector< RGeomNode * > nodes;  all used nodes to display visible items and not known for client ;  ; int numnodes {0};  total number of nodes in description ;  ; std::vector< RGeomVisible > visibles;  all visible items ;  . #include <ROOT/RGeomData.hxx>; Member Data Documentation. ◆ cfg. RGeomConfig* ROOT::RGeomDrawing::cfg {nullptr}. current configurations ; Definition at line 179 of file RGeomData.hxx. ◆ nodes. std::vector<RGeomNode*> ROOT::RGeomDrawing::nodes. all used nodes to display visible items and not known for client ; Definition at line 181 of file RGeomData.hxx. ◆ numnodes. int ROOT::RGeomDrawing::numnodes {0}. total number of nodes in description ; Definition at line 180 of file RGeomData.hxx. ◆ visibles. std::vector<RGeomVisible> ROOT::RGeomDrawing::visibles. all visible items ; Definition at line 182 of file RGeomData.hxx. Libraries for ROOT::RGeomDrawing:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomData.hxx. ROOTRGeomDrawing. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:36 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomDrawing.html:73,Guid,Guide,73,doc/v632/classROOT_1_1RGeomDrawing.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomDrawing.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomHierarchy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; ROOT::RGeomHierarchy Class ReferenceWeb Widgets. ; Web-based ROOT geometry hierarchy viewer. ; Definition at line 26 of file RGeomHierarchy.hxx. Public Member Functions;  RGeomHierarchy (RGeomDescription &desc, bool use_server_threads=false);  constructor ;  ; virtual ~RGeomHierarchy ();  destructor ;  ; void BrowseTo (const std::string &itemname);  Let browse to specified location. ;  ; void ClearOnClose (const std::shared_ptr< void > &handle);  Set handle which will be cleared when connection is closed Must be called after window is shown. ;  ; RGeomDescription & Description ();  ; void Show (const RWebDisplayArgs &args="""");  Show hierarchy in web window. ;  ; void Update ();  Update client - reload hierarchy. ;  . Protected Member Functions; void ProcessSignal (const std::string &kind);  Process signals from geometry description object. ;  ; void WebWindowCallback (unsigned connid, const std::string &arg);  Process data from client. ;  . Protected Attributes; RGeomDescription & fDesc;  ! geometry description, shared with external ;  ; std::shared_ptr< RWebWindow > fWebWindow;  ! web window to show geometry ;  . #include <ROOT/RGeomHierarchy.hxx>; Constructor & Destructor Documentation. ◆ RGeomHierarchy(). RGeomHierarchy::RGeomHierarchy ; (; RGeomDescription & ; desc, . bool ; use_server_threads = false . ). constructor ; Definition at line 32 of file RGeomHierarchy.cxx. ◆ ~RGeomHierarchy(). RGeomHierarchy::~RGeomHierarchy ; (; ). virtual . destructor ; Definition at line 48 of file RGeomHierarchy.cxx. Member Function Documentation. ◆ BrowseTo(). void RGeomHierarchy::BrowseTo ; (; const std::string & ; itemname). Let browse to specified location. ; Definition at line 156 of file RGeomHierarchy.cxx. ◆ ClearOnClose(). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomHierarchy.html:76,Guid,Guide,76,doc/master/classROOT_1_1RGeomHierarchy.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomHierarchy.html,3,"['Clear', 'Guid', 'clear']","['ClearOnClose', 'Guide', 'cleared']"
Usability,". ROOT: ROOT::RGeomHierarchy Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; ROOT::RGeomHierarchy Class Reference. . Definition at line 26 of file RGeomHierarchy.hxx. Public Member Functions;  RGeomHierarchy (RGeomDescription &desc, bool use_server_threads=false);  constructor ;  ; virtual ~RGeomHierarchy ();  destructor ;  ; void BrowseTo (const std::string &itemname);  Let browse to specified location. ;  ; void ClearOnClose (const std::shared_ptr< void > &handle);  Set handle which will be cleared when connection is closed Must be called after window is shown. ;  ; RGeomDescription & Description ();  ; void Show (const RWebDisplayArgs &args="""");  Show hierarchy in web window. ;  ; void Update ();  Update client - reload hierarchy. ;  . Protected Member Functions; void ProcessSignal (const std::string &kind);  Process signals from geometry description object. ;  ; void WebWindowCallback (unsigned connid, const std::string &arg);  Process data from client. ;  . Protected Attributes; RGeomDescription & fDesc;  ! geometry description, shared with external ;  ; std::shared_ptr< RWebWindow > fWebWindow;  ! web window to show geometry ;  . #include <ROOT/RGeomHierarchy.hxx>; Constructor & Destructor Documentation. ◆ RGeomHierarchy(). RGeomHierarchy::RGeomHierarchy ; (; RGeomDescription & ; desc, . bool ; use_server_threads = false . ). constructor ; Definition at line 24 of file RGeomHierarchy.cxx. ◆ ~RGeomHierarchy(). RGeomHierarchy::~RGeomHierarchy ; (; ). virtual . destructor ; Definition at line 41 of file RGeomHierarchy.cxx. Member Function Documentation. ◆ BrowseTo(). void RGeomHierarchy::BrowseTo ; (; const std::string & ; itemname). Let browse to specified location. ; Definition at line 149 of file RGeomHierarchy.cxx. ◆ ClearOnClose(). void RGeomHierarchy::ClearOnClose ; (; const std::shared",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomHierarchy.html:75,Guid,Guide,75,doc/v632/classROOT_1_1RGeomHierarchy.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomHierarchy.html,3,"['Clear', 'Guid', 'clear']","['ClearOnClose', 'Guide', 'cleared']"
Usability,". ROOT: ROOT::RGeomNode Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RGeomNode Class Reference. ; Full node description including matrices and other attributes. ; Definition at line 71 of file RGeomData.hxx. Public Member Functions;  RGeomNode (int _id=0);  ; bool CanDisplay () const;  True when there is shape and it can be displayed. ;  ;  Public Member Functions inherited from ROOT::RGeomNodeBase;  RGeomNodeBase (int _id=0);  ; const char * GetArg (int kind);  Returns argument for regexp. ;  ; bool IsVisible () const;  . Public Attributes; int idshift {-1};  ! used to jump over then scan all geom hierarchy ;  ; std::vector< float > matr;  matrix for the node, can have reduced number of elements ;  ; int nfaces {0};  ! number of shape faces ;  ; float opacity {1.};  ! opacity of the color ;  ; bool useflag {false};  ! extra flag, used for selection ;  ; double vol {0};  ! volume estimation ;  ;  Public Attributes inherited from ROOT::RGeomNodeBase; std::vector< int > chlds;  list of childs id ;  ; std::string color;  rgb code in hex format ;  ; int id {0};  node id, index in array ;  ; std::string material;  name of the material ;  ; std::string name;  node name ;  ; bool nochlds {false};  how far in hierarchy depth should be scanned ;  ; int sortid {0};  ! place in sorted array, to check cuts, or id of original node when used search structures ;  ; int vis {0};  visibility flag, 0 - off, 1 - only when level==0, 99 - always ;  . #include <ROOT/RGeomData.hxx>. Inheritance diagram for ROOT::RGeomNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RGeomNode(). ROOT::RGeomNode::RGeomNode ; (; int ; _id = 0). inline . Definition at line 80 of file RGeomData.hxx. Member Function Documentation. ◆ CanDisplay(). bool ROOT::RGeomNode::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomNode.html:71,Guid,Guide,71,doc/master/classROOT_1_1RGeomNode.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomNode.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomNode Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RGeomNode Class Reference. ; Full node description including matrices and other attributes. ; Definition at line 71 of file RGeomData.hxx. Public Member Functions;  RGeomNode (int _id=0);  ; bool CanDisplay () const;  True when there is shape and it can be displayed. ;  ;  Public Member Functions inherited from ROOT::RGeomNodeBase;  RGeomNodeBase (int _id=0);  ; const char * GetArg (int kind);  Returns argument for regexp. ;  ; bool IsVisible () const;  . Public Attributes; int idshift {-1};  ! used to jump over then scan all geom hierarchy ;  ; std::vector< float > matr;  matrix for the node, can have reduced number of elements ;  ; int nfaces {0};  ! number of shape faces ;  ; float opacity {1.};  ! opacity of the color ;  ; bool useflag {false};  ! extra flag, used for selection ;  ; double vol {0};  ! volume estimation ;  ;  Public Attributes inherited from ROOT::RGeomNodeBase; std::vector< int > chlds;  list of childs id ;  ; std::string color;  rgb code in hex format ;  ; int id {0};  node id, index in array ;  ; std::string material;  name of the material ;  ; std::string name;  node name ;  ; bool nochlds {false};  how far in hierarchy depth should be scanned ;  ; int sortid {0};  ! place in sorted array, to check cuts, or id of original node when used search structures ;  ; int vis {0};  visibility flag, 0 - off, 1 - only when level==0, 99 - always ;  . #include <ROOT/RGeomData.hxx>. Inheritance diagram for ROOT::RGeomNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RGeomNode(). ROOT::RGeomNode::RGeomNode ; (; int ; _id = 0). inline . Definition at line 80 of file RGeomData.hxx. Member Function Documentation. ◆ CanDisplay(). bool ROOT::RGeomNode::C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomNode.html:70,Guid,Guide,70,doc/v632/classROOT_1_1RGeomNode.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomNode.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomNodeBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RGeomNodeBase Class Reference. ; Base description of geometry node, required only to build hierarchy. ; Definition at line 44 of file RGeomData.hxx. Public Member Functions;  RGeomNodeBase (int _id=0);  ; const char * GetArg (int kind);  Returns argument for regexp. ;  ; bool IsVisible () const;  . Public Attributes; std::vector< int > chlds;  list of childs id ;  ; std::string color;  rgb code in hex format ;  ; int id {0};  node id, index in array ;  ; std::string material;  name of the material ;  ; std::string name;  node name ;  ; bool nochlds {false};  how far in hierarchy depth should be scanned ;  ; int sortid {0};  ! place in sorted array, to check cuts, or id of original node when used search structures ;  ; int vis {0};  visibility flag, 0 - off, 1 - only when level==0, 99 - always ;  . #include <ROOT/RGeomData.hxx>. Inheritance diagram for ROOT::RGeomNodeBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RGeomNodeBase(). ROOT::RGeomNodeBase::RGeomNodeBase ; (; int ; _id = 0). inline . Definition at line 56 of file RGeomData.hxx. Member Function Documentation. ◆ GetArg(). const char * ROOT::RGeomNodeBase::GetArg ; (; int ; kind). inline . Returns argument for regexp. ; Definition at line 61 of file RGeomData.hxx. ◆ IsVisible(). bool ROOT::RGeomNodeBase::IsVisible ; (; ); const. inline . Definition at line 58 of file RGeomData.hxx. Member Data Documentation. ◆ chlds. std::vector<int> ROOT::RGeomNodeBase::chlds. list of childs id ; Definition at line 48 of file RGeomData.hxx. ◆ color. std::string ROOT::RGeomNodeBase::color. rgb code in hex format ; Definition at line 52 of file RGeomData.hxx. ◆ id. int ROOT::RGeomNodeBase::id {0}. node id, index",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomNodeBase.html:75,Guid,Guide,75,doc/master/classROOT_1_1RGeomNodeBase.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomNodeBase.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomNodeBase Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RGeomNodeBase Class Reference. ; Base description of geometry node, required only to build hierarchy. ; Definition at line 44 of file RGeomData.hxx. Public Member Functions;  RGeomNodeBase (int _id=0);  ; const char * GetArg (int kind);  Returns argument for regexp. ;  ; bool IsVisible () const;  . Public Attributes; std::vector< int > chlds;  list of childs id ;  ; std::string color;  rgb code in hex format ;  ; int id {0};  node id, index in array ;  ; std::string material;  name of the material ;  ; std::string name;  node name ;  ; bool nochlds {false};  how far in hierarchy depth should be scanned ;  ; int sortid {0};  ! place in sorted array, to check cuts, or id of original node when used search structures ;  ; int vis {0};  visibility flag, 0 - off, 1 - only when level==0, 99 - always ;  . #include <ROOT/RGeomData.hxx>. Inheritance diagram for ROOT::RGeomNodeBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RGeomNodeBase(). ROOT::RGeomNodeBase::RGeomNodeBase ; (; int ; _id = 0). inline . Definition at line 56 of file RGeomData.hxx. Member Function Documentation. ◆ GetArg(). const char * ROOT::RGeomNodeBase::GetArg ; (; int ; kind). inline . Returns argument for regexp. ; Definition at line 61 of file RGeomData.hxx. ◆ IsVisible(). bool ROOT::RGeomNodeBase::IsVisible ; (; ); const. inline . Definition at line 58 of file RGeomData.hxx. Member Data Documentation. ◆ chlds. std::vector<int> ROOT::RGeomNodeBase::chlds. list of childs id ; Definition at line 48 of file RGeomData.hxx. ◆ color. std::string ROOT::RGeomNodeBase::color. rgb code in hex format ; Definition at line 52 of file RGeomData.hxx. ◆ id. int ROOT::RGeomNodeBase::id {0}. node id, index ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomNodeBase.html:74,Guid,Guide,74,doc/v632/classROOT_1_1RGeomNodeBase.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomNodeBase.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::RGeomNodeInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; ROOT::RGeomNodeInfo Class Reference. ; Node information including rendering data. ; Definition at line 187 of file RGeomData.hxx. Public Attributes; std::string node_name;  node name ;  ; std::string node_type;  node class name ;  ; std::vector< std::string > path;  full path to node ;  ; RGeomRenderInfo * ri {nullptr};  rendering information (if applicable) ;  ; std::string shape_name;  shape class name (if any) ;  ; std::string shape_type;  shape type (if any) ;  . #include <ROOT/RGeomData.hxx>; Member Data Documentation. ◆ node_name. std::string ROOT::RGeomNodeInfo::node_name. node name ; Definition at line 191 of file RGeomData.hxx. ◆ node_type. std::string ROOT::RGeomNodeInfo::node_type. node class name ; Definition at line 190 of file RGeomData.hxx. ◆ path. std::vector<std::string> ROOT::RGeomNodeInfo::path. full path to node ; Definition at line 189 of file RGeomData.hxx. ◆ ri. RGeomRenderInfo* ROOT::RGeomNodeInfo::ri {nullptr}. rendering information (if applicable) ; Definition at line 195 of file RGeomData.hxx. ◆ shape_name. std::string ROOT::RGeomNodeInfo::shape_name. shape class name (if any) ; Definition at line 193 of file RGeomData.hxx. ◆ shape_type. std::string ROOT::RGeomNodeInfo::shape_type. shape type (if any) ; Definition at line 192 of file RGeomData.hxx. Libraries for ROOT::RGeomNodeInfo:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomData.hxx. ROOTRGeomNodeInfo. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:59 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomNodeInfo.html:75,Guid,Guide,75,doc/master/classROOT_1_1RGeomNodeInfo.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomNodeInfo.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::RGeomNodeInfo Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; ROOT::RGeomNodeInfo Class Reference. ; Node information including rendering data. ; Definition at line 187 of file RGeomData.hxx. Public Attributes; std::string node_name;  node name ;  ; std::string node_type;  node class name ;  ; std::vector< std::string > path;  full path to node ;  ; RGeomRenderInfo * ri {nullptr};  rendering information (if applicable) ;  ; std::string shape_name;  shape class name (if any) ;  ; std::string shape_type;  shape type (if any) ;  . #include <ROOT/RGeomData.hxx>; Member Data Documentation. ◆ node_name. std::string ROOT::RGeomNodeInfo::node_name. node name ; Definition at line 191 of file RGeomData.hxx. ◆ node_type. std::string ROOT::RGeomNodeInfo::node_type. node class name ; Definition at line 190 of file RGeomData.hxx. ◆ path. std::vector<std::string> ROOT::RGeomNodeInfo::path. full path to node ; Definition at line 189 of file RGeomData.hxx. ◆ ri. RGeomRenderInfo* ROOT::RGeomNodeInfo::ri {nullptr}. rendering information (if applicable) ; Definition at line 195 of file RGeomData.hxx. ◆ shape_name. std::string ROOT::RGeomNodeInfo::shape_name. shape class name (if any) ; Definition at line 193 of file RGeomData.hxx. ◆ shape_type. std::string ROOT::RGeomNodeInfo::shape_type. shape type (if any) ; Definition at line 192 of file RGeomData.hxx. Libraries for ROOT::RGeomNodeInfo:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomData.hxx. ROOTRGeomNodeInfo. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:36 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomNodeInfo.html:74,Guid,Guide,74,doc/v632/classROOT_1_1RGeomNodeInfo.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomNodeInfo.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomNodeVisibility Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RGeomNodeVisibility Class Reference. ; Custom settings for physical Node visibility. ; Definition at line 199 of file RGeomData.hxx. Public Member Functions;  RGeomNodeVisibility (const std::vector< int > &_stack, bool _visible);  . Public Attributes; std::vector< int > stack;  path to the node ;  ; bool visible {false};  visible flag ;  . #include <ROOT/RGeomData.hxx>; Constructor & Destructor Documentation. ◆ RGeomNodeVisibility(). ROOT::RGeomNodeVisibility::RGeomNodeVisibility ; (; const std::vector< int > & ; _stack, . bool ; _visible . ). inline . Definition at line 203 of file RGeomData.hxx. Member Data Documentation. ◆ stack. std::vector<int> ROOT::RGeomNodeVisibility::stack. path to the node ; Definition at line 201 of file RGeomData.hxx. ◆ visible. bool ROOT::RGeomNodeVisibility::visible {false}. visible flag ; Definition at line 202 of file RGeomData.hxx. Libraries for ROOT::RGeomNodeVisibility:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomData.hxx. ROOTRGeomNodeVisibility. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:59 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomNodeVisibility.html:81,Guid,Guide,81,doc/master/classROOT_1_1RGeomNodeVisibility.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomNodeVisibility.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomNodeVisibility Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RGeomNodeVisibility Class Reference. ; Custom settings for physical Node visibility. ; Definition at line 199 of file RGeomData.hxx. Public Member Functions;  RGeomNodeVisibility (const std::vector< int > &_stack, bool _visible);  . Public Attributes; std::vector< int > stack;  path to the node ;  ; bool visible {false};  visible flag ;  . #include <ROOT/RGeomData.hxx>; Constructor & Destructor Documentation. ◆ RGeomNodeVisibility(). ROOT::RGeomNodeVisibility::RGeomNodeVisibility ; (; const std::vector< int > & ; _stack, . bool ; _visible . ). inline . Definition at line 203 of file RGeomData.hxx. Member Data Documentation. ◆ stack. std::vector<int> ROOT::RGeomNodeVisibility::stack. path to the node ; Definition at line 201 of file RGeomData.hxx. ◆ visible. bool ROOT::RGeomNodeVisibility::visible {false}. visible flag ; Definition at line 202 of file RGeomData.hxx. Libraries for ROOT::RGeomNodeVisibility:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomData.hxx. ROOTRGeomNodeVisibility. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:36 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomNodeVisibility.html:80,Guid,Guide,80,doc/v632/classROOT_1_1RGeomNodeVisibility.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomNodeVisibility.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomRawRenderInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RGeomRawRenderInfo Class Reference. ; Render info with raw data. ; Definition at line 127 of file RGeomData.hxx. Public Member Functions;  ~RGeomRawRenderInfo () override=default;  ;  Public Member Functions inherited from ROOT::RGeomRenderInfo; virtual ~RGeomRenderInfo ()=default;  virtual destructor required for the I/O ;  . Public Attributes; std::vector< int > idx;  vertex indexes, always triangles ;  ; std::vector< unsigned char > raw;  float vertices as raw data, JSON_base64 ;  . #include <ROOT/RGeomData.hxx>. Inheritance diagram for ROOT::RGeomRawRenderInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~RGeomRawRenderInfo(). ROOT::RGeomRawRenderInfo::~RGeomRawRenderInfo ; (; ). overridedefault . Member Data Documentation. ◆ idx. std::vector<int> ROOT::RGeomRawRenderInfo::idx. vertex indexes, always triangles ; Definition at line 130 of file RGeomData.hxx. ◆ raw. std::vector<unsigned char> ROOT::RGeomRawRenderInfo::raw. float vertices as raw data, JSON_base64 ; Definition at line 129 of file RGeomData.hxx. Libraries for ROOT::RGeomRawRenderInfo:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomData.hxx. ROOTRGeomRawRenderInfo. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:59 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomRawRenderInfo.html:80,Guid,Guide,80,doc/master/classROOT_1_1RGeomRawRenderInfo.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomRawRenderInfo.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomRawRenderInfo Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RGeomRawRenderInfo Class Reference. ; Render info with raw data. ; Definition at line 127 of file RGeomData.hxx. Public Member Functions;  ~RGeomRawRenderInfo () override=default;  ;  Public Member Functions inherited from ROOT::RGeomRenderInfo; virtual ~RGeomRenderInfo ()=default;  virtual destructor required for the I/O ;  . Public Attributes; std::vector< int > idx;  vertex indexes, always triangles ;  ; std::vector< unsigned char > raw;  float vertices as raw data, JSON_base64 ;  . #include <ROOT/RGeomData.hxx>. Inheritance diagram for ROOT::RGeomRawRenderInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~RGeomRawRenderInfo(). ROOT::RGeomRawRenderInfo::~RGeomRawRenderInfo ; (; ). overridedefault . Member Data Documentation. ◆ idx. std::vector<int> ROOT::RGeomRawRenderInfo::idx. vertex indexes, always triangles ; Definition at line 130 of file RGeomData.hxx. ◆ raw. std::vector<unsigned char> ROOT::RGeomRawRenderInfo::raw. float vertices as raw data, JSON_base64 ; Definition at line 129 of file RGeomData.hxx. Libraries for ROOT::RGeomRawRenderInfo:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomData.hxx. ROOTRGeomRawRenderInfo. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:36 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomRawRenderInfo.html:79,Guid,Guide,79,doc/v632/classROOT_1_1RGeomRawRenderInfo.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomRawRenderInfo.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomRenderInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::RGeomRenderInfo Class Reference. ; Base class for render info block. ; Definition at line 120 of file RGeomData.hxx. Public Member Functions; virtual ~RGeomRenderInfo ()=default;  virtual destructor required for the I/O ;  . #include <ROOT/RGeomData.hxx>. Inheritance diagram for ROOT::RGeomRenderInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~RGeomRenderInfo(). virtual ROOT::RGeomRenderInfo::~RGeomRenderInfo ; (; ). virtualdefault . virtual destructor required for the I/O . The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomData.hxx. ROOTRGeomRenderInfo. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:59 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomRenderInfo.html:77,Guid,Guide,77,doc/master/classROOT_1_1RGeomRenderInfo.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomRenderInfo.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomRenderInfo Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::RGeomRenderInfo Class Reference. ; Base class for render info block. ; Definition at line 120 of file RGeomData.hxx. Public Member Functions; virtual ~RGeomRenderInfo ()=default;  virtual destructor required for the I/O ;  . #include <ROOT/RGeomData.hxx>. Inheritance diagram for ROOT::RGeomRenderInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~RGeomRenderInfo(). virtual ROOT::RGeomRenderInfo::~RGeomRenderInfo ; (; ). virtualdefault . virtual destructor required for the I/O . The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomData.hxx. ROOTRGeomRenderInfo. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:36 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomRenderInfo.html:76,Guid,Guide,76,doc/v632/classROOT_1_1RGeomRenderInfo.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomRenderInfo.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomShapeRenderInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RGeomShapeRenderInfo Class Reference. ; Render info with shape itself - client can produce shape better. ; Definition at line 135 of file RGeomData.hxx. Public Member Functions;  ~RGeomShapeRenderInfo () override=default;  ;  Public Member Functions inherited from ROOT::RGeomRenderInfo; virtual ~RGeomRenderInfo ()=default;  virtual destructor required for the I/O ;  . Public Attributes; TGeoShape * shape {nullptr};  original shape - can be much less than binary data ;  . #include <ROOT/RGeomData.hxx>. Inheritance diagram for ROOT::RGeomShapeRenderInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~RGeomShapeRenderInfo(). ROOT::RGeomShapeRenderInfo::~RGeomShapeRenderInfo ; (; ). overridedefault . Member Data Documentation. ◆ shape. TGeoShape* ROOT::RGeomShapeRenderInfo::shape {nullptr}. original shape - can be much less than binary data ; Definition at line 137 of file RGeomData.hxx. Libraries for ROOT::RGeomShapeRenderInfo:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomData.hxx. ROOTRGeomShapeRenderInfo. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:59 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomShapeRenderInfo.html:82,Guid,Guide,82,doc/master/classROOT_1_1RGeomShapeRenderInfo.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomShapeRenderInfo.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomShapeRenderInfo Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RGeomShapeRenderInfo Class Reference. ; Render info with shape itself - client can produce shape better. ; Definition at line 135 of file RGeomData.hxx. Public Member Functions;  ~RGeomShapeRenderInfo () override=default;  ;  Public Member Functions inherited from ROOT::RGeomRenderInfo; virtual ~RGeomRenderInfo ()=default;  virtual destructor required for the I/O ;  . Public Attributes; TGeoShape * shape {nullptr};  original shape - can be much less than binary data ;  . #include <ROOT/RGeomData.hxx>. Inheritance diagram for ROOT::RGeomShapeRenderInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~RGeomShapeRenderInfo(). ROOT::RGeomShapeRenderInfo::~RGeomShapeRenderInfo ; (; ). overridedefault . Member Data Documentation. ◆ shape. TGeoShape* ROOT::RGeomShapeRenderInfo::shape {nullptr}. original shape - can be much less than binary data ; Definition at line 137 of file RGeomData.hxx. Libraries for ROOT::RGeomShapeRenderInfo:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomData.hxx. ROOTRGeomShapeRenderInfo. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:36 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomShapeRenderInfo.html:81,Guid,Guide,81,doc/v632/classROOT_1_1RGeomShapeRenderInfo.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomShapeRenderInfo.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomViewer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; ROOT::RGeomViewer Class ReferenceWeb Widgets. ; Web-based ROOT geometry viewer. ; Definition at line 27 of file RGeomViewer.hxx. Public Member Functions;  RGeomViewer (TGeoManager *mgr=nullptr, const std::string &volname="""");  constructor ;  ; virtual ~RGeomViewer ();  destructor ;  ; void ClearOnClose (const std::shared_ptr< void > &handle);  Set handle which will be cleared when connection is closed Must be called after window is shown. ;  ; RGeomDescription & Description ();  ; bool GetShowColumns () const;  ; bool GetShowHierarchy () const;  Returns default hierarchy browser visibility. ;  ; const std::string & GetTitle () const;  ; std::string GetWindowAddr () const;  Return web window address (name) used for geometry viewer. ;  ; std::string GetWindowUrl (bool remote);  Return web window URL which can be used for connection See ROOT::RWebWindow::GetUrl docu for more details. ;  ; void SaveAsMacro (const std::string &fname);  Save viewer configuration as macro. ;  ; void SaveImage (const std::string &fname=""geometry.png"", int width=0, int height=0);  Produce PNG image of the geometry If web-browser is shown and drawing completed, image is requested from the browser. ;  ; void SelectVolume (const std::string &volname);  Select visible top volume, all other volumes will be disabled. ;  ; void SetDrawOptions (const std::string &opt);  Configures draw option for geometry Normally has effect before first drawing of the geometry When geometry displayed, only ""axis"" and ""rotate"" options are updated. ;  ; void SetGeometry (TGeoManager *mgr, const std::string &volname="""");  assign new geometry to the viewer ;  ; void SetLimits (int nnodes=5000, int nfaces=100000);  Configures maximal number of visible nodes and faces. ;  ; vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomViewer.html:73,Guid,Guide,73,doc/master/classROOT_1_1RGeomViewer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomViewer.html,3,"['Clear', 'Guid', 'clear']","['ClearOnClose', 'Guide', 'cleared']"
Usability,". ROOT: ROOT::RGeomViewer Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; ROOT::RGeomViewer Class Reference. . Definition at line 27 of file RGeomViewer.hxx. Public Member Functions;  RGeomViewer (TGeoManager *mgr=nullptr, const std::string &volname="""");  constructor ;  ; virtual ~RGeomViewer ();  destructor ;  ; void ClearOnClose (const std::shared_ptr< void > &handle);  Set handle which will be cleared when connection is closed Must be called after window is shown. ;  ; RGeomDescription & Description ();  ; bool GetShowColumns () const;  ; bool GetShowHierarchy () const;  Returns default hierarchy browser visibility. ;  ; const std::string & GetTitle () const;  ; std::string GetWindowAddr () const;  Return web window address (name) used for geometry viewer. ;  ; std::string GetWindowUrl (bool remote);  Return web window URL which can be used for connection See ROOT::RWebWindow::GetUrl docu for more details. ;  ; void SaveAsMacro (const std::string &fname);  Save viewer configuration as macro. ;  ; void SaveImage (const std::string &fname=""geometry.png"", int width=0, int height=0);  Produce PNG image of the geometry If web-browser is shown and drawing completed, image is requested from the browser. ;  ; void SelectVolume (const std::string &volname);  Select visible top volume, all other volumes will be disabled. ;  ; void SetDrawOptions (const std::string &opt);  Configures draw option for geometry Normally has effect before first drawing of the geometry When geometry displayed, only ""axis"" and ""rotate"" options are updated. ;  ; void SetGeometry (TGeoManager *mgr, const std::string &volname="""");  assign new geometry to the viewer ;  ; void SetLimits (int nnodes=5000, int nfaces=100000);  Configures maximal number of visible nodes and faces. ;  ; void SetOnlyVolume (TGeoVolume *vol);  Draw only",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomViewer.html:72,Guid,Guide,72,doc/v632/classROOT_1_1RGeomViewer.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomViewer.html,3,"['Clear', 'Guid', 'clear']","['ClearOnClose', 'Guide', 'cleared']"
Usability,". ROOT: ROOT::RGeomVisible Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RGeomVisible Class Reference. ; RGeomVisible contains description of visible node It is path to the node plus reference to shape rendering data. ; Definition at line 145 of file RGeomData.hxx. Public Member Functions;  RGeomVisible ()=default;  ;  RGeomVisible (int _nodeid, int _seqid, const std::vector< int > &_stack);  . Public Attributes; std::string color;  color in rgb format ;  ; int nodeid {0};  selected node id, ;  ; double opacity {1};  opacity ;  ; RGeomRenderInfo * ri {nullptr};  render information for the shape, can be same for different nodes ;  ; int seqid {0};  sequence id, used for merging later ;  ; std::vector< int > stack;  path to the node, index in list of childs ;  . #include <ROOT/RGeomData.hxx>; Constructor & Destructor Documentation. ◆ RGeomVisible() [1/2]. ROOT::RGeomVisible::RGeomVisible ; (; ). default . ◆ RGeomVisible() [2/2]. ROOT::RGeomVisible::RGeomVisible ; (; int ; _nodeid, . int ; _seqid, . const std::vector< int > & ; _stack . ). inline . Definition at line 155 of file RGeomData.hxx. Member Data Documentation. ◆ color. std::string ROOT::RGeomVisible::color. color in rgb format ; Definition at line 150 of file RGeomData.hxx. ◆ nodeid. int ROOT::RGeomVisible::nodeid {0}. selected node id, ; Definition at line 147 of file RGeomData.hxx. ◆ opacity. double ROOT::RGeomVisible::opacity {1}. opacity ; Definition at line 151 of file RGeomData.hxx. ◆ ri. RGeomRenderInfo* ROOT::RGeomVisible::ri {nullptr}. render information for the shape, can be same for different nodes ; Definition at line 152 of file RGeomData.hxx. ◆ seqid. int ROOT::RGeomVisible::seqid {0}. sequence id, used for merging later ; Definition at line 148 of file RGeomData.hxx. ◆ stack. std::vector<int> ROOT::RGeomVisible::stack. path to the node, index in l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomVisible.html:74,Guid,Guide,74,doc/master/classROOT_1_1RGeomVisible.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomVisible.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RGeomVisible Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RGeomVisible Class Reference. ; RGeomVisible contains description of visible node It is path to the node plus reference to shape rendering data. ; Definition at line 145 of file RGeomData.hxx. Public Member Functions;  RGeomVisible ()=default;  ;  RGeomVisible (int _nodeid, int _seqid, const std::vector< int > &_stack);  . Public Attributes; std::string color;  color in rgb format ;  ; int nodeid {0};  selected node id, ;  ; double opacity {1};  opacity ;  ; RGeomRenderInfo * ri {nullptr};  render information for the shape, can be same for different nodes ;  ; int seqid {0};  sequence id, used for merging later ;  ; std::vector< int > stack;  path to the node, index in list of childs ;  . #include <ROOT/RGeomData.hxx>; Constructor & Destructor Documentation. ◆ RGeomVisible() [1/2]. ROOT::RGeomVisible::RGeomVisible ; (; ). default . ◆ RGeomVisible() [2/2]. ROOT::RGeomVisible::RGeomVisible ; (; int ; _nodeid, . int ; _seqid, . const std::vector< int > & ; _stack . ). inline . Definition at line 155 of file RGeomData.hxx. Member Data Documentation. ◆ color. std::string ROOT::RGeomVisible::color. color in rgb format ; Definition at line 150 of file RGeomData.hxx. ◆ nodeid. int ROOT::RGeomVisible::nodeid {0}. selected node id, ; Definition at line 147 of file RGeomData.hxx. ◆ opacity. double ROOT::RGeomVisible::opacity {1}. opacity ; Definition at line 151 of file RGeomData.hxx. ◆ ri. RGeomRenderInfo* ROOT::RGeomVisible::ri {nullptr}. render information for the shape, can be same for different nodes ; Definition at line 152 of file RGeomData.hxx. ◆ seqid. int ROOT::RGeomVisible::seqid {0}. sequence id, used for merging later ; Definition at line 148 of file RGeomData.hxx. ◆ stack. std::vector<int> ROOT::RGeomVisible::stack. path to the node, index in li",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomVisible.html:73,Guid,Guide,73,doc/v632/classROOT_1_1RGeomVisible.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomVisible.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RNTuple Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Private Attributes |; Friends |; List of all members ; ROOT::RNTuple Class ReferencefinalNTuple-related classes. ; Representation of an RNTuple data set in a ROOT file. ; The class points to the header and footer keys, which in turn have the references to the pages (via page lists). Only the RNTuple key will be listed in the list of keys. Like TBaskets, the pages are ""invisible"" keys. Byte offset references in the RNTuple header and footer reference directly the data part of page records, skipping the TFile key part.; In the list of keys, this object appears as ""ROOT::RNTuple"". It is the user-facing representation of an RNTuple data set in a ROOT file and it provides an API entry point to an RNTuple stored in a ROOT file. Its main purpose is to construct a page source for an RNTuple, which in turn can be used to read an RNTuple with an RDF or an RNTupleReader.; For instance, for an RNTuple called ""Events"" in a ROOT file, usage can be auto f = TFile::Open(""data.root"");; auto ntpl = f->Get<ROOT::RNTuple>(""Events"");; auto reader = RNTupleReader::Open(ntpl);; f#define f(i)Definition RSha256.hxx:104; ROOT::RNTupleRepresentation of an RNTuple data set in a ROOT file.Definition RNTuple.hxx:69; TFile::Openstatic TFile * Open(const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0)Create / open a file.Definition TFile.cxx:4089. Definition at line 69 of file RNTuple.hxx. Public Member Functions;  RNTuple ()=default;  ;  ~RNTuple ()=default;  ; std::uint64_t GetLenFooter () const;  ; std::uint64_t GetLenHeader () const;  ; std::uint64_t GetMaxKeySize () const;  ; std::uint64_t GetNBytesFooter () const;  ; std::uint64_t GetNBytesHeader () const;  ; std::uint",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RNTuple.html:69,Guid,Guide,69,doc/master/classROOT_1_1RNTuple.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RNTuple.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::RNTupleCardinality< SizeT > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RNTupleCardinality< SizeT > Struct Template Reference. ; template<typename SizeT>; struct ROOT::RNTupleCardinality< SizeT >Helper types to present an offset column as array of collection sizes. ; See RField<RNTupleCardinality<SizeT>> for details. ; Definition at line 32 of file RNTupleUtil.hxx. Public Types; using ValueType = SizeT;  . Public Member Functions;  RNTupleCardinality ();  ; constexpr RNTupleCardinality (ValueType value);  ;  operator ValueType () const;  ; RNTupleCardinality & operator= (const ValueType value);  . Public Attributes; ValueType fValue;  . #include <ROOT/RNTupleUtil.hxx>; Member Typedef Documentation. ◆ ValueType. template<typename SizeT > . using ROOT::RNTupleCardinality< SizeT >::ValueType = SizeT. Definition at line 36 of file RNTupleUtil.hxx. Constructor & Destructor Documentation. ◆ RNTupleCardinality() [1/2]. template<typename SizeT > . ROOT::RNTupleCardinality< SizeT >::RNTupleCardinality ; (; ). inline . Definition at line 38 of file RNTupleUtil.hxx. ◆ RNTupleCardinality() [2/2]. template<typename SizeT > . constexpr ROOT::RNTupleCardinality< SizeT >::RNTupleCardinality ; (; ValueType ; value). inlineexplicitconstexpr . Definition at line 39 of file RNTupleUtil.hxx. Member Function Documentation. ◆ operator ValueType(). template<typename SizeT > . ROOT::RNTupleCardinality< SizeT >::operator ValueType ; (; ); const. inline . Definition at line 45 of file RNTupleUtil.hxx. ◆ operator=(). template<typename SizeT > . RNTupleCardinality & ROOT::RNTupleCardinality< SizeT >::operator= ; (; const ValueType ; value). inline . Definition at line 40 of file RNTupleUtil.hxx. Member Data Documentation. ◆ fValue. template<typename SizeT > . ValueType ROOT::RNTupleCardinality< SizeT >::fV,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RNTupleCardinality.html:99,Guid,Guide,99,doc/master/structROOT_1_1RNTupleCardinality.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RNTupleCardinality.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::ROpaqueTaskArena Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::ROpaqueTaskArena Class Reference. . Definition at line 4 of file ROpaqueTaskArena.hxx. #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/core/imt/src/ROpaqueTaskArena.hxx>. Inheritance diagram for ROOT::ROpaqueTaskArena:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]. core/imt/src/ROpaqueTaskArena.hxx. ROOTROpaqueTaskArena. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:59 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1ROpaqueTaskArena.html:78,Guid,Guide,78,doc/master/classROOT_1_1ROpaqueTaskArena.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1ROpaqueTaskArena.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::ROpaqueTaskArena Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::ROpaqueTaskArena Class Reference. . Definition at line 4 of file ROpaqueTaskArena.hxx. #include </home/sftnight/build/workspace/root-makedoc-v632/rootspi/rdoc/src/v6-32-00-patches/core/imt/src/ROpaqueTaskArena.hxx>. Inheritance diagram for ROOT::ROpaqueTaskArena:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]. core/imt/src/ROpaqueTaskArena.hxx. ROOTROpaqueTaskArena. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:36 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1ROpaqueTaskArena.html:77,Guid,Guide,77,doc/v632/classROOT_1_1ROpaqueTaskArena.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1ROpaqueTaskArena.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::RQt5CreatorReg Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::RQt5CreatorReg Struct Reference. . Definition at line 284 of file rootqt5.cpp. Public Member Functions;  RQt5CreatorReg ();  . Constructor & Destructor Documentation. ◆ RQt5CreatorReg(). ROOT::RQt5CreatorReg::RQt5CreatorReg ; (; ). inline . Definition at line 285 of file rootqt5.cpp. The documentation for this struct was generated from the following file:; gui/qt5webdisplay/rootqt5.cpp. ROOTRQt5CreatorReg. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:59 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RQt5CreatorReg.html:77,Guid,Guide,77,doc/master/structROOT_1_1RQt5CreatorReg.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RQt5CreatorReg.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::RQt5CreatorReg Struct Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::RQt5CreatorReg Struct Reference. . Definition at line 284 of file rootqt5.cpp. Public Member Functions;  RQt5CreatorReg ();  . Constructor & Destructor Documentation. ◆ RQt5CreatorReg(). ROOT::RQt5CreatorReg::RQt5CreatorReg ; (; ). inline . Definition at line 285 of file rootqt5.cpp. The documentation for this struct was generated from the following file:; gui/qt5webdisplay/rootqt5.cpp. ROOTRQt5CreatorReg. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:36 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/structROOT_1_1RQt5CreatorReg.html:76,Guid,Guide,76,doc/v632/structROOT_1_1RQt5CreatorReg.html,https://root.cern,https://root.cern/doc/v632/structROOT_1_1RQt5CreatorReg.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::RQt5WebDisplayHandle Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; ROOT::RQt5WebDisplayHandle Class ReferenceWeb Display » QT5 Web Display. . Definition at line 92 of file rootqt5.cpp. Classes; class  Qt5Creator;  . Public Member Functions;  RQt5WebDisplayHandle (const std::string &url);  ;  ~RQt5WebDisplayHandle () override;  ; bool Resize (int width, int height) override;  resize web window - if possible ;  ;  Public Member Functions inherited from ROOT::RWebDisplayHandle;  RWebDisplayHandle (const std::string &url);  constructor ;  ; virtual ~RWebDisplayHandle ()=default;  required virtual destructor for correct cleanup at the end ;  ; const std::string & GetContent () const;  get content ;  ; const std::string & GetUrl () const;  returns url of start web display ;  ; void SetContent (const std::string &cont);  set content ;  . Static Public Member Functions; static void AddCreator ();  ;  Static Public Member Functions inherited from ROOT::RWebDisplayHandle; static bool CanProduceImages (const std::string &browser="""");  Returns true if image production for specified browser kind is supported If browser not specified - use currently configured browser or try to test existing web browsers. ;  ; static std::unique_ptr< RWebDisplayHandle > Display (const RWebDisplayArgs &args);  Create web display. ;  ; static bool DisplayUrl (const std::string &url);  Display provided url in configured web browser. ;  ; static std::string GetImageFormat (const std::string &fname);  Detect image format There is special handling of "".screenshot.pdf"" and "".screenshot.png"" extensions Creation of such files relies on headless browser functionality and fully supported only by Chrome browser. ;  ; static bool NeedHttpServer (const RWebDisplayArgs &args);  Check if http server required f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RQt5WebDisplayHandle.html:82,Guid,Guide,82,doc/master/classROOT_1_1RQt5WebDisplayHandle.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RQt5WebDisplayHandle.html,1,['Guid'],['Guide']
Usability,". ROOT: ROOT::RQt5WebDisplayHandle Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; ROOT::RQt5WebDisplayHandle Class ReferenceWeb Display » QT5 Web Display. . Definition at line 92 of file rootqt5.cpp. Classes; class  Qt5Creator;  . Public Member Functions;  RQt5WebDisplayHandle (const std::string &url);  ;  ~RQt5WebDisplayHandle () override;  ; bool Resize (int width, int height) override;  resize web window - if possible ;  ;  Public Member Functions inherited from ROOT::RWebDisplayHandle;  RWebDisplayHandle (const std::string &url);  constructor ;  ; virtual ~RWebDisplayHandle ()=default;  required virtual destructor for correct cleanup at the end ;  ; const std::string & GetContent () const;  get content ;  ; const std::string & GetUrl () const;  returns url of start web display ;  ; void SetContent (const std::string &cont);  set content ;  . Static Public Member Functions; static void AddCreator ();  ;  Static Public Member Functions inherited from ROOT::RWebDisplayHandle; static bool CanProduceImages (const std::string &browser="""");  Returns true if image production for specified browser kind is supported If browser not specified - use currently configured browser or try to test existing web browsers. ;  ; static std::unique_ptr< RWebDisplayHandle > Display (const RWebDisplayArgs &args);  Create web display. ;  ; static bool DisplayUrl (const std::string &url);  Display provided url in configured web browser. ;  ; static bool NeedHttpServer (const RWebDisplayArgs &args);  Check if http server required for display. ;  ; static bool ProduceImage (const std::string &fname, const std::string &json, int width=800, int height=600, const char *batch_file=nullptr);  Produce image file using JSON data as source Invokes JSROOT drawing functionality in headless browser - Google Chrome ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RQt5WebDisplayHandle.html:81,Guid,Guide,81,doc/v632/classROOT_1_1RQt5WebDisplayHandle.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RQt5WebDisplayHandle.html,1,['Guid'],['Guide']
Usability,. ROOT: ROOT::RQt6CreatorReg Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::RQt6CreatorReg Struct Reference. . Definition at line 243 of file rootqt6.cpp. Public Member Functions;  RQt6CreatorReg ();  . Constructor & Destructor Documentation. ◆ RQt6CreatorReg(). ROOT::RQt6CreatorReg::RQt6CreatorReg ; (; ). inline . Definition at line 244 of file rootqt6.cpp. The documentation for this struct was generated from the following file:; gui/qt6webdisplay/rootqt6.cpp. ROOTRQt6CreatorReg. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:59 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RQt6CreatorReg.html:77,Guid,Guide,77,doc/master/structROOT_1_1RQt6CreatorReg.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RQt6CreatorReg.html,2,['Guid'],['Guide']
Usability,. ROOT: ROOT::RQt6CreatorReg Struct Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::RQt6CreatorReg Struct Reference. . Definition at line 243 of file rootqt6.cpp. Public Member Functions;  RQt6CreatorReg ();  . Constructor & Destructor Documentation. ◆ RQt6CreatorReg(). ROOT::RQt6CreatorReg::RQt6CreatorReg ; (; ). inline . Definition at line 244 of file rootqt6.cpp. The documentation for this struct was generated from the following file:; gui/qt6webdisplay/rootqt6.cpp. ROOTRQt6CreatorReg. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:36 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/structROOT_1_1RQt6CreatorReg.html:76,Guid,Guide,76,doc/v632/structROOT_1_1RQt6CreatorReg.html,https://root.cern,https://root.cern/doc/v632/structROOT_1_1RQt6CreatorReg.html,2,['Guid'],['Guide']
Usability,". ROOT: ROOT::RQt6WebDisplayHandle Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; ROOT::RQt6WebDisplayHandle Class ReferenceWeb Display » QT6 Web Display. . Definition at line 68 of file rootqt6.cpp. Classes; class  Qt6Creator;  . Public Member Functions;  RQt6WebDisplayHandle (const std::string &url);  ;  ~RQt6WebDisplayHandle () override;  ; bool Resize (int width, int height) override;  resize web window - if possible ;  ;  Public Member Functions inherited from ROOT::RWebDisplayHandle;  RWebDisplayHandle (const std::string &url);  constructor ;  ; virtual ~RWebDisplayHandle ()=default;  required virtual destructor for correct cleanup at the end ;  ; const std::string & GetContent () const;  get content ;  ; const std::string & GetUrl () const;  returns url of start web display ;  ; void SetContent (const std::string &cont);  set content ;  . Static Public Member Functions; static void AddCreator ();  ;  Static Public Member Functions inherited from ROOT::RWebDisplayHandle; static bool CanProduceImages (const std::string &browser="""");  Returns true if image production for specified browser kind is supported If browser not specified - use currently configured browser or try to test existing web browsers. ;  ; static std::unique_ptr< RWebDisplayHandle > Display (const RWebDisplayArgs &args);  Create web display. ;  ; static bool DisplayUrl (const std::string &url);  Display provided url in configured web browser. ;  ; static std::string GetImageFormat (const std::string &fname);  Detect image format There is special handling of "".screenshot.pdf"" and "".screenshot.png"" extensions Creation of such files relies on headless browser functionality and fully supported only by Chrome browser. ;  ; static bool NeedHttpServer (const RWebDisplayArgs &args);  Check if http server required f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RQt6WebDisplayHandle.html:82,Guid,Guide,82,doc/master/classROOT_1_1RQt6WebDisplayHandle.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RQt6WebDisplayHandle.html,1,['Guid'],['Guide']
