quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Deployability,This pull request **introduces 4 alerts** and **fixes 72** when merging 3ec1c6803da5ece22f14cb3b17685f07b4444ba9 into ce07d5c086c846252d200132d21e719819ba2296 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-86ba37531ceb7753fd4246cb683c3fa432ae2964). **new alerts:**. * 2 for Resource not released in destructor; * 1 for &#39;import \*&#39; may pollute namespace; * 1 for Multiplication result converted to larger type. **fixed alerts:**. * 34 for Comparison of narrow type with wide type in loop condition; * 14 for Multiplication result converted to larger type; * 9 for &#39;input&#39; function used in Python 2; * 9 for Resource not released in destructor; * 4 for Comparison result is always the same; * 1 for Unused import; * 1 for Result of integer division may be truncated,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1355#issuecomment-899867464:308,release,released,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/1355#issuecomment-899867464,2,['release'],['released']
Deployability,"This pull request **introduces 4 alerts** when merging 0a565343307aa6a5a7f012f2779cf5c02ad4e8b7 into 7132d99e9e794094b5c2b924605f0b1878ac21e2 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-1bd2fb9a693c7ffb539f7915b7c52929af869e36). **new alerts:**. * 2 for Resource not released in destructor; * 2 for &#39;new&#39; object freed with &#39;delete\[\]&#39;; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ‚èª completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1322389470:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1322389470,1,['release'],['released']
Deployability,This pull request **introduces 4 alerts** when merging 0a575667060f6369c7cbc14c0e0c48215eba269a into 3ec1c6803da5ece22f14cb3b17685f07b4444ba9 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-3d2228e63f322f8b24e86847e086ca35ac965d42). **new alerts:**. * 3 for Resource not released in destructor; * 1 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-903146247:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-903146247,1,['release'],['released']
Deployability,This pull request **introduces 4 alerts** when merging 637eb274c32fb5c7fdca7e91ee87192597838671 into bd586f6503fd6bdb94f18c51d308c6171070bfb3 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-2fdd443b42b0493a8fe88d37d96e95800ec73425). **new alerts:**. * 2 for Resource not released in destructor; * 2 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-933000397:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-933000397,1,['release'],['released']
Deployability,This pull request **introduces 4 alerts** when merging 7aacabbb21611ddef01784812130778d5006690d into 58c580b84860fff31340e3fa3593257a2dd7fb3f - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b3443d9e57183f00339618362a76ce60b2a68b6c). **new alerts:**. * 2 for Resource not released in destructor; * 2 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-932851913:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-932851913,1,['release'],['released']
Deployability,This pull request **introduces 4 alerts** when merging dfdd090f453cb1beb6fb51ed55c831eecfebb42b into 58c580b84860fff31340e3fa3593257a2dd7fb3f - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-c4807a1cbabf8717bcb1157b75476979099cd326). **new alerts:**. * 2 for Resource not released in destructor; * 2 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-932870005:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-932870005,1,['release'],['released']
Deployability,This pull request **introduces 45 alerts** when merging 3f0247625a9510232edf439297d7295888c6a3ed into 328a1b747a4785d13b749e7fb6cc4589fd1b9529 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b7247622daf2ab4c1473f91e3781594485b33b10). **new alerts:**. * 45 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1095335429:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1095335429,1,['release'],['released']
Deployability,This pull request **introduces 46 alerts** when merging 233fd6b7275bf06c3e9b6f4e5006dfd0424a9725 into c1006128e2e8165490fcd83f4aaa8ea2d46f040f - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-df7fb781c79ee13a7d5e535318f9c4e2b3e32ae0). **new alerts:**. * 46 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1586#issuecomment-1083217431:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1586#issuecomment-1083217431,1,['release'],['released']
Deployability,This pull request **introduces 6 alerts** when merging 464e1beb057da2b7151212930d34d6560428189d into 9f25ad60ed031fa4e1c7d1d009016cc91f6ab587 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-9453c2facae7dceb3523fbef2285786e3545355b). **new alerts:**. * 4 for Comparison of narrow type with wide type in loop condition; * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-933257525:359,release,released,359,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-933257525,1,['release'],['released']
Deployability,This pull request **introduces 6 alerts** when merging 937053653902cac3508fddbe1859128e6caffb82 into 45214cddb5a5819f0acef68e6316c4dca54ea5b3 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-66a4ce528e149b819eeed9f0e010fa223f793657). **new alerts:**. * 4 for Resource not released in destructor; * 1 for Non\-virtual destructor in base class; * 1 for Constant return type on member,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1245545711:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1245545711,1,['release'],['released']
Deployability,This pull request **introduces 7 alerts** when merging 88e9e9f32d1d797eacd114a96387f18c2adaf62d into b1a47bbbbf48dbcf5ceb754bc52c4e00057c3fd6 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-c9af5862483834bcf116dd973649d46a8ca541d6). **new alerts:**. * 5 for Comparison of narrow type with wide type in loop condition; * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1399#issuecomment-939210059:359,release,released,359,https://su2code.github.io,https://github.com/su2code/SU2/pull/1399#issuecomment-939210059,1,['release'],['released']
Deployability,This pull request **introduces 8 alerts** when merging 0e416349defcd44406a1374700a131fdbd7b3a63 into 54e74cc214aba3217c7b1c6632b8d1e82da58f6d - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-a094eb31c33304cd8f9feb72d2c8028be65a833b). **new alerts:**. * 6 for Comparison of narrow type with wide type in loop condition; * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-936729789:359,release,released,359,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-936729789,1,['release'],['released']
Deployability,This pull request **introduces 8 alerts** when merging 35e0d76ea50f660ea28a188e92394be61139d11b into 54e74cc214aba3217c7b1c6632b8d1e82da58f6d - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-eeee53f19ea512400f066f3c9205eaaf8f85119b). **new alerts:**. * 6 for Comparison of narrow type with wide type in loop condition; * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-937431599:359,release,released,359,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-937431599,1,['release'],['released']
Deployability,This pull request **introduces 8 alerts** when merging 505b44923aa55f797de71930580fda5f1065b914 into 9f25ad60ed031fa4e1c7d1d009016cc91f6ab587 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-7890ae5a72f2339118332b019cc81b77a08deaa3). **new alerts:**. * 6 for Comparison of narrow type with wide type in loop condition; * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-933698963:359,release,released,359,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-933698963,1,['release'],['released']
Deployability,"This sound like your OpenMPI installation is broken, did you compiled it by yourself?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2091#issuecomment-1657210923:29,install,installation,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/2091#issuecomment-1657210923,1,['install'],['installation']
Deployability,"This sounds like a question that would be great for the forum at cfd-online.com/Forums/su2/; I'm not 100% sure what you mean by ""patching of quadrilateral mesh"" in this context; however someone reading the forum may be able to help, and posting to the forum will allow more people to benefit from the answers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/158#issuecomment-99255184:129,patch,patching,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/158#issuecomment-99255184,1,['patch'],['patching']
Deployability,"This works awesome. Except one thing.; I'm trying to build SU2 using Meson inside a Singularity container. However, the configuring of ninja doesn't work there. ; It looks for `python` but if not installed, this is not there, only python3 command is there. It works on my desktop because I have python2 installed there. However, from the documentation it seems I only need python3, in reality it uses both. Last part of the output of the Singularity build:; [meson_output.txt](https://github.com/su2code/SU2/files/3502142/meson_output.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-521301556:196,install,installed,196,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-521301556,2,['install'],['installed']
Deployability,This works for a single case. I will try running a shape optimization with this and update this thread. It was a smart way of setting this. Thanks.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/970#issuecomment-626908235:84,update,update,84,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-626908235,1,['update'],['update']
Deployability,"Those two cases are not part of the regression suite, and so they were probably not updated as some of the options were renamed.; You can have a look at the other turbomachinery examples (at least two of them are part of the regressions) it should be simple to adapt those options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1086#issuecomment-706417999:84,update,updated,84,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086#issuecomment-706417999,2,['update'],['updated']
Deployability,"Those would come from package openmpi-dev. From: thw1021 [mailto:notifications@github.com]; Sent: Monday, July 22, 2019 9:13 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Dave Taflin <d.taflin@tecplot.com>; Comment <comment@noreply.github.com>; Subject: Re: [su2code/SU2] C++ compiler cannot create executables (#738). Sorry. Do you mean that although I have installed OpenMPI, I still have to install mpicc and mpicxx ? I am not familiar with such problems.; When I run which mpicc and which mpicxx in the container, there is no outputs. But on the host machine, I can see /usr/bin/mpicc and /usr/bin/mpicxx. Maybe this the reason. ‚Äî; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/738?email_source=notifications&email_token=AADV2HHQUIUX3M4FOVSIWTTQAXL7JA5CNFSM4IFZ52EKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2QLXTI#issuecomment-513850317>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AADV2HGXH2W6SXJCN4OLCXLQAXL7JANCNFSM4IFZ52EA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513851975:363,install,installed,363,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513851975,2,['install'],"['install', 'installed']"
Deployability,"Tim,; I think the Makefile.in are useful also in the developer branch. First for; cases where you install a new machine. Second, for new users who are; already opensource-expirienced and tend to work with develop branch.; Best; Eran; On Sat, Sep 22, 2018 at 20:00 Tim Albring <notifications@github.com> wrote:. > What if we remove all the generated files (Makefile.in) from the; > repository except for the master branch ? In my opinion that makes; > perfectly sense since developers (so all people which use branches other; > than master) usually have autotools installed.; >; > ‚Äî; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/586#issuecomment-423765856>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/APKNm-t5IxKPOTuYcY_X58jdqUrmZuEFks5udojGgaJpZM4W1Vuz>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-423795781:98,install,install,98,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-423795781,2,['install'],"['install', 'installed']"
Deployability,Time to merge this in. Please update your branches with develop when you can and report any issues.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-284552031:30,update,update,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-284552031,1,['update'],['update']
Deployability,"To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access eithe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1492,install,install,1492,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['install'],['install']
Deployability,"To fill in more information in case anyone comes in from google (or wants to chase down a seemingly very rare problem):; The issue appears to be related to Mnlx_ofed and/or gluster. It has spanned two different OSes (Cent8 and Ubuntu 20) with the associated updates to the entire software stack.; As this fix works (despite how cringy it is to remove a ""close"" call), I will keep using that on our systems as it allows SU2 to function.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-1013138302:258,update,updates,258,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-1013138302,1,['update'],['updates']
Deployability,To keep the authorship and traceability of the changes I will merge this with the failing testcases and update them in a separate PR (since we have to do other transition-related fixes).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1132#issuecomment-755500463:104,update,update,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-755500463,1,['update'],['update']
Deployability,"To prepare for v7, I have now updated most of the tutorials to take advantage of the new features in this PR. I have also completed a sweep through all regression tests using this branch and have verified that the tests are ok. So, from my point of view, this is ready to be merged, other than updating the final residuals for a few tests which are pending. I will keep looking into the LSQ issues, so for now, we should be cautious with that option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-558013706:30,update,updated,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-558013706,1,['update'],['updated']
Deployability,"Tom, I noticed that in under SU2_PY you have a parse_config.py that takes the cpp and hpp files and parses the data and returns it to the python UI. What is the data structure for this, is this like a data dictionary, key, value pair? can you give me the data structure for this so that I can reuse this in the web app. . Also may be provide me sample datastructure so that I can test it out in the weblayer. Having this in a weblayer is good idea, we can deploy this weblayer so that anyone accessing the web app can use this to create this configuration and use it as a starter.. I can implement a bottle application in python and deploy it in heroku and it can be used across. Thanks for your help. Krishna",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172#issuecomment-126140571:456,deploy,deploy,456,https://su2code.github.io,https://github.com/su2code/SU2/pull/172#issuecomment-126140571,3,"['configurat', 'deploy']","['configuration', 'deploy']"
Deployability,"Tom,. I have completed the basic html 5/ javascript based configuration generator. Please go thru the readme.md of SU2_IDE/Configuration-gen folder in develop branch and follow the instructions. Let me know if I am going the right direction. Thanks; Krishna",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172#issuecomment-127882798:58,configurat,configuration,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/172#issuecomment-127882798,2,"['Configurat', 'configurat']","['Configuration-gen', 'configuration']"
Deployability,Try changing regression.yml to compile with Mutation and we'll see if we need to update the docker images.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1935#issuecomment-1440660479:81,update,update,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/1935#issuecomment-1440660479,1,['update'],['update']
Deployability,"Try the following:; git checkout -- . (this removes any uncommitted changes so please check if you have anything you want to keep); git checkout develop (assuming this checks out from su2code instead of your fork); git pull; git submodule update externals/CoDi (repeat for all submodules that show changes here on github); git check ""this branch""; git commit -a (this will commit the submodules updated above); git push. If this doesn't work, while on this branch do:; cd externals/CoDi; git checkout ""sha from develop"" (you can copy from init submodules python script); cd ../../; git commit -a; git push",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142#issuecomment-1793703594:239,update,update,239,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142#issuecomment-1793703594,2,['update'],"['update', 'updated']"
Deployability,"Two options: one (most recent commit, 23ed002) which requires running ./bootstrap for all new installs, and in commit ce9cd2b that updates automake but doesn't require ./bootstrap (through including updated Makefile.in's, etc). ; updated automake found here: https://ftp.gnu.org/gnu/automake/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-426853815:94,install,installs,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-426853815,4,"['install', 'update']","['installs', 'updated', 'updates']"
Deployability,U2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:8965,Install,Installing,8965,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"U2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2.py'; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2ad.py'; ```; This is good news. However, I would have liked to use the official pacman packages. Why did this happen? Is there a way I could build it ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:9653,Install,Installing,9653,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,U2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackage,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:3021,Install,Installing,3021,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,U2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slim,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:3279,Install,Installing,3279,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,U2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTA,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:2640,Install,Installing,2640,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"Unfortunately, there is an issue with doing a tiny update at the end of the simulation. To illustrate the numbers, lets assume that CL is converged to the `TARGET_CL` to within 10^-6. . In this case the finite-difference update is tiny: \alpha is changed by 10^-7 degrees (this is because `DCL_DALPHA` is usually between 0.5 and 0.05 and change in alpha = `(TARGET_CL-CL)/DCL_DALPHA`) . The change in CL resulting from this finite-difference step is small (10^-8) enough that if the solution isn't extremely converged (in this case, change in CL over two consecutive iterations is < 10^-9), the gradients calculated will be incorrect. . Anecdotally, the reduction in density residual in the simulation would have to be ~8 orders to get these gradients to be correct. This could add a large number of iterations and/or time to solution, especially for 3D RANS cases. Additionally, I am not sure what the best way to force this level of convergence would be. . Which brings me back to my original problem of trying to output the solution before the finite difference step. Well, I can definitely output the solution at the end of the fixed Cl mode, but it just gets overwritten when the solver finally exits after the finite difference step. The easiest way around this would be if there is a way to disable the output of the volume files after the solver exits. Something that could be changed from the CFluidIteration ideally. . I am sorry this feature is causing this issue. Unfortunately, even the way it is currently implemented in develop (without my changes, but after the new output structure) is plagued with the same problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-540421163:51,update,update,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-540421163,2,['update'],['update']
Deployability,Update to my comment above ~~But Nemo does not implement its own BC_Sym_Plane and uses the standard FVM implementation~~ ...turns out Nemo uses its own implementation. So Please re-use / adapt the one in CFVMSolver,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1625#issuecomment-1117417733:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1625#issuecomment-1117417733,1,['Update'],['Update']
Deployability,"Update to the current version of SU2 please, we updated the Metis partitioning strategy here: https://github.com/su2code/SU2/pull/1059",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1307#issuecomment-866983616:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307#issuecomment-866983616,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"Update/Solution: [d42692f](https://github.com/su2code/SU2/pull/1536/commits/d42692ff23874d84be2c735c3d9b678f77cb1155) and [44bc57b](https://github.com/su2code/SU2/pull/1536/commits/44bc57b8fa4a799dea3a0b84b0ba142cdae78a96) add the Intermediate storage of the adjoint solution and the storage for the external(OF) contribution to the pressure drop adjoint which solves the issue described in this post :blush: . So for CHT the situation is this:. For prescribed massflow I do get a good gradient agreement (DA vs FD). Below a picture with avgTemp and massflow OF; ![image](https://user-images.githubusercontent.com/31306376/152950660-a44bc925-22df-4195-b82b-1704c3f8b258.png). But if I switch to prescribed massflow and look at the avgTemp and pressureDrop OF then the gradient is again bad; ![image](https://user-images.githubusercontent.com/31306376/152951575-2df956a8-1c20-43e9-a68d-a19199025656.png). Here an comparison of sensitivities (wrt to mdot and dp OF (top/bottom)) for massflow and pressure drop precsribed flows (red/orange). The expectation is, that for massflow prescription, the sensitivity wrt to the massflow OF would be zero ... but we see that the sensitivities are very similar to the pressure-drop prescribed flow, so the hypothesis now is, for multizone the algorithm for some reason does not incorporate the pressure-drop adjoint which works like a charm for singlezone ; ![image](https://user-images.githubusercontent.com/31306376/152971870-9c37081b-0e5a-45b7-b320-04a10aafd293.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1032360593:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1032360593,1,['Update'],['Update']
Deployability,Update: Everything seems to work correctly now.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194#issuecomment-2033753653:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194#issuecomment-2033753653,1,['Update'],['Update']
Deployability,"Update: This should be fixed in #2011, apologies this took so long to get round it in what is a very simple fix.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/857#issuecomment-1701148094:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1701148094,1,['Update'],['Update']
Deployability,"Update: Wally found an index issue with the Ds calculation. Now model works for neutral and ionized flows, as long as free-stream concentrations are non-zero. Forward work is to fix it so that free-stream concentrations can be zero and not cause a problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1397531390:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1397531390,1,['Update'],['Update']
Deployability,"Update: model runs with air-5 and air-7 but diverges in ~10 iterations. Need to check implementation, look for bugs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1396289511:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1396289511,1,['Update'],['Update']
Deployability,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-600991354:0,Update,Updated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354,3,"['Update', 'integrat', 'update']","['Updated', 'integrated', 'update']"
Deployability,Updated name of PR to reflect requested changes,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2001#issuecomment-1495495238:0,Update,Updated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2001#issuecomment-1495495238,1,['Update'],['Updated']
Deployability,Updates were just pushed to the related PR.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-595945548:0,Update,Updates,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-595945548,1,['Update'],['Updates']
Deployability,UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6497,Install,Installing,6497,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"Vajjala,; you may want to try to use the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > ‚Äî; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H554WAUPB",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-621078198:945,install,installation,945,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198,1,['install'],['installation']
Deployability,"Very nice job, Tim. I can report that it works fine for me on Mac and a linux cluster. One suggestion to make our transition easier: if you agree, can you please add a 'bootstrap_meson' file in the root that will set up the build system like our current 'bootstrap' script? I am thinking just something like:; ```; git submodule update --init --recursive; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; since I found that I usually need to get meson and ninja on my systems. This should also be familiar to folks given our current workflow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-516687563:329,update,update,329,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-516687563,1,['update'],['update']
Deployability,WIP and I think there will be some updates on tomorrow's developers meeting.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-655044357:35,update,updates,35,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-655044357,1,['update'],['updates']
Deployability,"Was playing around with the turbomachinery cases with the new multi-zone config. I like the new changes, makes it much clearer!. Just a remark, don't know if this is on purpose, but for the configuration parameter TURBOMACHINERY_KIND, you still need to supply them in the general configuration file for both zones (so in case of a two zone problem: TURBOMACHINERY_KIND = CENTRIFUGAL CENTRIFUGAL). Wouldnt it make more sense to have this per zone specified in the respective configuration file?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/715#issuecomment-514208185:190,configurat,configuration,190,https://su2code.github.io,https://github.com/su2code/SU2/pull/715#issuecomment-514208185,6,['configurat'],['configuration']
Deployability,"We can compute the HBoperator alternatively without using the complex; variables too for now by replacing the routine if fixing this issue is; complex so that we have a working version of HB. Complex numbers and; vectors are used for elegance but I agree with Francisco that getting the; code compiled without any issues is more important. We can keep it; commented for now and I'll push the updated subroutine soon for a working; version of HB and make sure that it is compiled without errors on Mac. Thanks,; Sravya. On Sat, Nov 12, 2016 at 7:24 AM, Tim Albring notifications@github.com; wrote:. > From what I see there is no easy way to resolve this. The problem is that; > the multiplication operator of the complex type in LLVM uses copysign which; > is a function that only excepts double and int... so that means it is not; > possible to instantiate complex with anything else than these types ...; > from my point of view it is not a very smart design decision. We should; > maybe enable the code section depending on the compiler. A possible; > solution would be to implement our own operators, which we would directly; > in codi then.; > ; > ‚Äî; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > https://github.com/su2code/SU2/issues/319#issuecomment-260128156, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AHenIObXD9Yd0margHrl2xNq7641i7uWks5q9doigaJpZM4KYAX3; > .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/319#issuecomment-260167765:392,update,updated,392,https://su2code.github.io,https://github.com/su2code/SU2/issues/319#issuecomment-260167765,1,['update'],['updated']
Deployability,"We have also encountered the significant memory requirements of the discrete adjoint. Actually, this requirement prevented the use of fine mesh (of 10-20M cells) in optimizations process. This is not the case while using continuous adjoint but the effectiveness of the discrete adjoint is higher by far.; I think this is a very important issue in the actual use of the method. Unfortunately, I do not have any solution to suggest.; Best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/594#issuecomment-427554385:221,continuous,continuous,221,https://su2code.github.io,https://github.com/su2code/SU2/issues/594#issuecomment-427554385,1,['continuous'],['continuous']
Deployability,"We have not found that to be necessary because the interface is mostly unchanged, but if you are aware of anything please open a pull request to the website repository with updates, we welcome all contributors.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2361#issuecomment-2395582565:173,update,updates,173,https://su2code.github.io,https://github.com/su2code/SU2/issues/2361#issuecomment-2395582565,1,['update'],['updates']
Deployability,"We have releases every month and the official build system is meson.; If this (or any other) feature is fundamental to you, I kindly suggest that you follow the pull requests, and/or test the develop branch prior to each release to make sure it still works.; -DNDEBUG should be added to the compiler flags (CXXFLAGS) not to the preconfigure options (with meson this is done automatically).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-601083184:8,release,releases,8,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-601083184,2,['release'],"['release', 'releases']"
Deployability,"We have resolved this issue: the problem was with the particular combination of MPI implementation and compiler. The problem appeared with Intel MPI (mpigcc for the Intel(R) MPI Library 2017 Update 2 for Linux*) and GCC 6.3.0. Switching to an OpenMPI implementation fixed the issue. As this may be a machine-specific problem, we will close the issue, but please be advised of possible problems with this combination.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/477#issuecomment-361351607:191,Update,Update,191,https://su2code.github.io,https://github.com/su2code/SU2/issues/477#issuecomment-361351607,1,['Update'],['Update']
Deployability,"We use ""develop"" as the staging branch, update your branch with develop when you push the changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1951#issuecomment-1465050844:40,update,update,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/1951#issuecomment-1465050844,1,['update'],['update']
Deployability,Well happy new year to you as well üéâ ü•≥ üçæ ; I guess you did a find and replace over the repo for 2012-2020 -> 2012-2021. I briefly scrolled over the diff in case we are really unlucky and somewhere for some reason used that somewhere else. Maybe you had a more elaborate method :). When I saw the `+-2`'s at a merge I first thought I missed a release :D,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1239#issuecomment-802823863:342,release,release,342,https://su2code.github.io,https://github.com/su2code/SU2/pull/1239#issuecomment-802823863,1,['release'],['release']
Deployability,Well thanks for reverting the latest two commits with RealReverseIndex and the CoDiPack update and merging this. I guess that work will go on in another PR,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1284#issuecomment-850848108:88,update,update,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284#issuecomment-850848108,1,['update'],['update']
Deployability,"Were there [a few update candidates left over](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/SU2_CFD/src/variable_direct_elasticity.cpp#L160 ""Update candidate: Destructor for CFEM_ElasVariable"")?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/26#issuecomment-307589790:18,update,update,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/26#issuecomment-307589790,2,"['Update', 'update']","['Update', 'update']"
Deployability,"We‚Äôre carrying on as usual: please submit PRs to the develop branch when ready. We‚Äôll have more regular releases going forward, and these fixes can be in a maintanence release before long.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/508#issuecomment-365829775:104,release,releases,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/508#issuecomment-365829775,2,['release'],"['release', 'releases']"
Deployability,"What about mpicc and mpicxx? You are trying to build a parallel executable, so is MPI installed?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513848082:86,install,installed,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513848082,1,['install'],['installed']
Deployability,What if we remove all the generated files (Makefile.in) from the repository except for the master branch ? In my opinion that makes perfectly sense since developers (so all people which use branches other than master) usually have autotools installed.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-423765856:241,install,installed,241,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-423765856,1,['install'],['installed']
Deployability,"What is your goal in including LAPACK?. You might want to see the issue I raised ( #478 ). I asked what the LAPACK compile option does, and the short answer is that it doesn't do anything for the master and develop branches. The long answer is that several integrations, such as the higher-order finite element branch, use LAPACK but in different ways.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/481#issuecomment-355588717:257,integrat,integrations,257,https://su2code.github.io,https://github.com/su2code/SU2/issues/481#issuecomment-355588717,1,['integrat'],['integrations']
Deployability,Whats the status here? Release v7.0.5 will be out tmrw :),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1004#issuecomment-635341008:23,Release,Release,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/1004#issuecomment-635341008,1,['Release'],['Release']
Deployability,"When I enter the ""shape_optimization.py -f unsteady_naca0012_opt.cfg"" in the commend the error is:; ```; Traceback (most recent call last):; File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 116, in <module>; main(); File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 34, in main; shape_optimization( options.filename ,; File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 51, in shape_optimization; config = SU2.io.Config(filename); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\io\config.py"", line 88, in __init__; super(Config,self).__init__(*args,**kwarg); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_bunch.py"", line 83, in __init__; super(OrderedBunch,self).__init__(*args,**kwarg); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_dict.py"", line 48, in __init__; self.__update(*args, **kwds); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_dict.py"", line 174, in update; for key, value in other:; TypeError: 'NoneType' object is not iterable; ```; When I enter the ""parallel_computation.py -f turb_naca0012.cfg -n NP in the commend the error is:; ```; Traceback (most recent call last):; File ""C:\Users\74351\Desktop\SU2\SU2\bin\parallel_computation.py"", line 110, in <module>; main(); File ""C:\Users\74351\Desktop\SU2\SU2\bin\parallel_computation.py"", line 53, in main; raise Exception(""No config file provided. Use -f flag""); Exception: No config file provided. Use -f flag; ```; Any solvers related to "".py"" cannot be executed, but I can run any cases with SU2_CFD. So I wonder if this situation is a problem with the Python Wrapper? . I will be very appreciated if I could get some feedback on this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1567#issuecomment-1074910200:977,update,update,977,https://su2code.github.io,https://github.com/su2code/SU2/issues/1567#issuecomment-1074910200,2,['update'],['update']
Deployability,Which meson version is used ?; Is it possible to upgrade it ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1507#issuecomment-1018746746:49,upgrade,upgrade,49,https://su2code.github.io,https://github.com/su2code/SU2/issues/1507#issuecomment-1018746746,1,['upgrade'],['upgrade']
Deployability,Will be available in the next release thanks to @bigfooted,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1463#issuecomment-1013344430:30,release,release,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/1463#issuecomment-1013344430,1,['release'],['release']
Deployability,Will it be a good idea to provide the optional control of these under-relaxation parameters to the users in configuration (.cfg) file? (ANSYS-Fluent does have such controls). It may be useful sometimes.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-543913900:108,configurat,configuration,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-543913900,1,['configurat'],['configuration']
Deployability,With commit [1836f11](https://github.com/su2code/SU2/pull/1536/commits/1836f111c0759eb50946ba6b68ac281ef4b1b717) the gradients (for massflow prescribed in the primal) can now be validated really well (tested for AvgTemp and PRESSURE_DROP OF's). . BUT only for serial execution ... for multiple processes the adjoint diverges after a few iterations. I need to give that parallel treatment another thought.; UPDATE: With [ce164a2](https://github.com/su2code/SU2/pull/1536/commits/ce164a232d6c0f845784f37e45336f7276746d61) also the parallel execution works fine. Please read my explanation attempt in the commit message (in case you are interested) and let me know what you think,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657:406,UPDATE,UPDATE,406,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657,1,['UPDATE'],['UPDATE']
Deployability,"Would you mind letting us know where the double pointer is that has this problem? ; If you are using the master branch or an older release, you may also want to check if this problem was solved on the current developer branch - there have been a few recent updates to clean up allocation/deallocation. ; If you would like to submit your fix as a pull request (benefits include being recorded by Github as a contributer to this code), please look over the developer docs for instructions on code style, which branch to use, etc: https://github.com/su2code/SU2/wiki/Gitting-Started",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/273#issuecomment-216085558:131,release,release,131,https://su2code.github.io,https://github.com/su2code/SU2/issues/273#issuecomment-216085558,2,"['release', 'update']","['release', 'updates']"
Deployability,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619584815:749,update,updated,749,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815,1,['update'],['updated']
Deployability,"Yeah this issue is not unique to Arch Linux or to my machine specifically either!. I have tried this on at least 3 different ubuntu machines, with different versions, from 16.04 to 20.04. A few of my friends and juniors have tried as well, same error. I have built mpich several times, thinking I installed it improperly, to no avail. I would suggest, if you want to use mpich, use version 6.2 FALCON. I have it installed on one of my machines and it works just fine. I am not sure why there is such less support for this issue, you can see I sent multiple replies last time but did not get any response after some time so I just dropped it, thinking it will get resolved eventually. Please reopen this issue since this has not been resolved and is faced by multiple people. Thanks and regards,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721308181:297,install,installed,297,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721308181,2,['install'],['installed']
Deployability,"Yeah, looks like python 3.7 did the trick. I can update the installation documentation. The init.py script checks that the python version is at least. Should we have it check that it's at least 3.7 instead?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/937#issuecomment-613571585:49,update,update,49,https://su2code.github.io,https://github.com/su2code/SU2/issues/937#issuecomment-613571585,2,"['install', 'update']","['installation', 'update']"
Deployability,"Yeah... It sounded more like an hardware limitation than a software implementation (mpi) issue. About the hybrid solver, you are running into load balancing issues (there are more threads than work packets, i.e. edge groups) it will be better for larger meshes, and maybe an 8x8 division works better than 4x16.; As you are using JST you can also try running at higher CFL to shift work to the linear solver which has no load balancing issues regardless of the group size parameter (the adaptive CFL mode may be necessary to get through the initial transient). Let us know if the new hardware solves the problem.; I will let you know via this issue when we have a release where the hybrid implementation might scale better on unstructured grids.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593573398:664,release,release,664,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593573398,1,['release'],['release']
Deployability,"Yep, I think there is something going on with MPI-IO. Check if any special flags are necessary to enable MPI-IO for your system when installing the flavor of MPI that you are using.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-624243375:133,install,installing,133,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624243375,1,['install'],['installing']
Deployability,"Yes but it would be kind of you to check if a feature of a future release is going in the direction of what you need.; Compiled libraries would be easy to handle via pkg config.; But your choices of words sound a bit unfriendly so I honestly don't care, we can also close the issue until the next release.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645668805:66,release,release,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645668805,2,['release'],['release']
Deployability,"Yes it definitely is confusing. Then we have to use set_ffd_design_var.py giving i,j,k which are not really 'units' in x,y,z. The website should be updated to show this. I am wondering how does SU2_DEF will determine the ""logic axis"". Won't a simple x,y,z approach have been simpler?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/977#issuecomment-626875076:148,update,updated,148,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626875076,2,['update'],['updated']
Deployability,"Yes there is a `lapack.pc` file in each of those folders.; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ cat /usr/lib/pkgconfig/lapack.pc ; libdir=/usr/lib; includedir=/usr/include. Name: LAPACK; Description: FORTRAN reference implementation of LAPACK Linear Algebra PACKage; Version: 3.9.0; URL: http://www.netlib.org/lapack/; Libs: -L${libdir} -llapack; Requires.private: blas; ```; The output of `pkg-config openblas --version` is 0.3.8, but it shows a message as well:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ pkg-config openblas --version; pkg-config: --version specified with other options or module names, assuming --modversion.; 0.3.8; ```; I also installed using the same meson arguments on an Ubuntu system (Python v3.7.5, mpich v3.3.2) which did not need the `$PKG_CONFIG_PATH` variable to be set. So all this is a little confusing for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632009282:666,install,installed,666,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632009282,1,['install'],['installed']
Deployability,"Yes, I agree that if this factor 100 should remain in the code, than it is the configuration file of the tutorial that should be modified with a lower turbulence intensity Tu to get the proper results. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1719#issuecomment-1191863697:79,configurat,configuration,79,https://su2code.github.io,https://github.com/su2code/SU2/issues/1719#issuecomment-1191863697,1,['configurat'],['configuration']
Deployability,"Yes, I have activated the option for the force breakdown in my configuration file and currently running it. I'll update you with the findings I get.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1175#issuecomment-765907601:63,configurat,configuration,63,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175#issuecomment-765907601,2,"['configurat', 'update']","['configuration', 'update']"
Deployability,"Yes, I'd say that the V&V regression tests should definitely start from the converged solutions that were used to produce the results on the V&V website. . But for cases that do not have V&V documentation, the regression tests are imo merely a way to detect and prevent unwanted changes/side-effects (so, what you said). If they need to be more than that, they should be upgraded to a V&V with proper documentation. For the cases that are not VandV I'd rather have a 'start' + 'restart' regression test, with restarts from the 'start' results. In that way the restart files are always generated from the current code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784#issuecomment-1304306759:371,upgrade,upgraded,371,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784#issuecomment-1304306759,1,['upgrade'],['upgraded']
Deployability,"Yes, all those automatically generated files should be removed, so everything in the folder .idea (including the folder), and the entire cmake-build-debug folder. If they come from coolprop, tell it to install into another directory outside of SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1268887325:202,install,install,202,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1268887325,1,['install'],['install']
Deployability,"Yes, extra warnings had to be disabled once we updated the compiler used for regressions. As a workaround you remove the offending options from meson.build. While we sort it out.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1701#issuecomment-1176700894:47,update,updated,47,https://su2code.github.io,https://github.com/su2code/SU2/issues/1701#issuecomment-1176700894,1,['update'],['updated']
Deployability,"Yes, nothing more from me on this. Once this is merged, the comparison in PR #1260 should become simpler too. I've just updated this branch with develop, we can merge once the regression tests pass again.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-827981242:120,update,updated,120,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-827981242,2,['update'],['updated']
Deployability,"Yes, the minimum required version is now 4.7 (which has full C++11 support). But only for the AD binaries!; We have to move forward, otherwise it is not possible to include current and future changes that improve the performance. But I can provide a patch to make it work with gcc < 4.7 if necessary.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/350#issuecomment-271090352:250,patch,patch,250,https://su2code.github.io,https://github.com/su2code/SU2/pull/350#issuecomment-271090352,1,['patch'],['patch']
Deployability,"Yes. I did have installed g++.; ```; (base) root@a5502ebdff64:/home# g++ --version; g++ (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0; Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```; ```; (base) root@a5502ebdff64:/home/SU2# apt-get install gcc g++; Reading package lists... Done; Building dependency tree ; Reading state information... Done; g++ is already the newest version (4:7.4.0-1ubuntu2.3).; gcc is already the newest version (4:7.4.0-1ubuntu2.3).; 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847853:16,install,installed,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847853,5,"['install', 'upgrade']","['install', 'installed', 'upgraded']"
Deployability,Yes. Thank you all. I installed libopenmpi-dev and openmpi-common. I don't know which one is the key but I can see SU2_RUN and SU2_HOME environment variables displayed at the conclusion of configure.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513853762:22,install,installed,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513853762,1,['install'],['installed']
Deployability,"Yet another doubt on the same subject: I just realized that SU2V7.31 (I; have not tested it on later SU2 releases) accepts imposing both adiabatic; walls plus isothermal boundary condition on some walls (when running Menter; model), but when I simply impose only isothermal conditions (leaving; commented out the adiabatic markers), I get the message: SU2 process; returned error '1'. Is there a workaround for this? Kind regards. On Thu, Sep 28, 2023 at 8:25‚ÄØPM Pedro Gomes ***@***.***>; wrote:. > you are correct, there is a discussion on CFD-online about it. we impose 0; > heat flux, but report an ""apparent heat flux"" most codes will simply give; > you back the imposed heat flux value you specify, nevertheless there will; > probably be a temperature gradient close to the wall; >; > ‚Äî; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1740118992>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUUZNE6B63SH7XJLY2DX4YBMZANCNFSM6AAAAAA3QKLVDU>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1775968391:105,release,releases,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1775968391,2,['release'],['releases']
Deployability,"You are installing it in the folder SU2_install/ according to ""--prefix=$PWD/SU2_Install""; So i think your last line should be:; exec /SU2_Install/bin/$1 $2. However I have no experience with this singularity so i could be wrong.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-515372015:8,install,installing,8,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-515372015,1,['install'],['installing']
Deployability,"You can use the --prefix option (most ""build from source"" software works; like that).; Do you know of a portable way to determine the user name?. On Mon, 11 May 2020, 21:04 Max Le, <notifications@github.com> wrote:. >; > -; >; > When installing SU2 from fresh or recompiling to update changes, the; > installation process always requires root permission to finish. The reason; > is that the binaries are installed in /usr/local/bin, which needs root; > access. The installation went well, it is just that I don't feel like; > entering root password everytime.; > -; >; > A way to go around this would be to have the binaries installed in the; > bin folder in the home folder, so on Linux that would be /home/user/bin.; > Even better, we can have it creates a separate SU2bin folder, where only; > the binaries from SU2 will be stored. Of course, doing this would change; > the environmental variables as well.; > -; >; > What do you all think? Is this too much hassle?; >; > ‚Äî; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/979>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN3VS6AOUOBHLOHSCULRRBK6DANCNFSM4M6GX6DA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/979#issuecomment-626952122:234,install,installing,234,https://su2code.github.io,https://github.com/su2code/SU2/issues/979#issuecomment-626952122,6,"['install', 'update']","['installation', 'installed', 'installing', 'update']"
Deployability,"You could try making a soft link (ln -s) in that directory for mpirun that points to the mpirun-mpich-mp (does it work if you call that directly btw?). Otherwise, you could try a different MPI installation, e.g., openmpi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/938#issuecomment-617582095:193,install,installation,193,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-617582095,1,['install'],['installation']
Deployability,"You have to add that particular branch to the .travis.yml file.; See https://travis-ci.org/su2code/SU2/requests (Branch ""feature_STLwriter"" not included per configuration.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/748#issuecomment-526150574:157,configurat,configuration,157,https://su2code.github.io,https://github.com/su2code/SU2/issues/748#issuecomment-526150574,1,['configurat'],['configuration']
Deployability,You just have to update the files in the TestCases repository (`TestCases/cont_adj_euler/naca0012/of_grad_directdiff.dat.ref` and `TestCases/cont_adj_euler/naca0012/of_grad_cd_disc.dat.ref`),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/444#issuecomment-332825983:17,update,update,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/444#issuecomment-332825983,1,['update'],['update']
Deployability,"You mentioned issues with the develop branch, those are likely due to compilation differences.; Yes run to convergence with both branches and compare please. I expect integrated quantities will be exactly the same.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1659015548:167,integrat,integrated,167,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1659015548,1,['integrat'],['integrated']
Deployability,You need to specify an installation direction for which you have permissions via meson option `--prefix`; Further information here: https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/; In the SU2 section of CFD Online (https://www.cfd-online.com/Forums/su2/) you can find a lot of useful info about compiling / installing / running SU2 on clusters.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/936#issuecomment-613013547:23,install,installation,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/936#issuecomment-613013547,2,['install'],"['installation', 'installing']"
Deployability,You will need to install it for python3 if you plan to use that. So use:; pip3 install mpi4py; or ; python3 -m pip install mpi4py,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-515374119:17,install,install,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-515374119,3,['install'],['install']
Deployability,"You've reminded me that there is an old python script (parse_config.py) which parses the c++ config structure code - I couldn't get it to run right away, but maybe you can update that script to generate your list automatically from the c++ code, and so not require much change (and also not require you to manually write out all the defaults). . Personally I think that we should keep the default definitions in the C++ as it is now, as this keeps the executables self-contained among other things. ; By the way, I think you meant SetConfig_Options().",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-377420170:172,update,update,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-377420170,1,['update'],['update']
Deployability,"[...]; > If either you or @frx-wintermute are interested in complementing the feature by adding an option to prefer system libraries (via pkg-config, no paths because 99.9% of users will not know what to do) instead of the versions shipped with SU2, please go ahead and open a PR. Hello @pcarruscag!. To be honest, my daydream is: I would love to see SU2 shipping nothing in 'externals/' (or just empty subdirectories such as 'externals/meson/' ); then those external dependencies are by default downloaded from external repositories or tar archives. This defaul behavior would be obtained by configuring with the './meson.py' script and then by building with './ninja'. But, if a user wants to build SU2 from source and prefers to use system-wide Meson and Ninja and system-wide versions of the external dependencies, it would be possible to avoid downloading these external dependencies. By running './preconfigure.py' with appropriate options, it would be possible to decide which external dependencies to **not** download. At that point, system-wide Meson and Ninja could be used to build SU2 from source. And the 'meson.build' file would do the following:. * for each required or enabled (at configure time) dependency **\<foo\>**, it would check whether it is found in 'externals/**\<foo\>**/'; if not, it would check whether it can be found as a system-wide installation (perhaps via pkgconfig); if not, it would exit with error; * for each dependency which is not required nor enabled at configure time, it would avoid using it at all. I think this daydream is achievable, and I hope that other people consider it as a useful goal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1646970778:1365,install,installation,1365,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1646970778,1,['install'],['installation']
Deployability,"[; [errors_SU2_71.pdf](https://github.com/su2code/SU2/files/6914931/errors_SU2_71.pdf); Hi ; Attached is a printout of errors (part of it, it keeps repeating). It seems to me that it is not related to the problem that was resolved by the patch, mentioned above: it happens before during the compilation, It happens also both with and without the patch. This one is from the master version, downloaded a few days ago. Had the same errors from develop branch, a few days earlier. Needless to say that this issue arises only with GCC that is not up-to-date. On my web-connected laptop, everything compiles and links fine. Sorry for the delay in response and the format of the printout. It takes time to get data out of the disconnected network.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-890774781:238,patch,patch,238,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-890774781,2,['patch'],['patch']
Deployability,"[Here](https://github.com/su2code/SU2/files/3302370/benchmark.zip) are some comparisons for a case where the linear solver does little work (so not much benefit from this PR) and another where the linear solver has to work harder (18 iterations per iteration on average) and this makes a substantial difference.; I have started updated the residuals of things that seem consequence of round-off error, only one case requires closer inspection where things change several orders of magnitude (for the best).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-503201187:328,update,updated,328,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-503201187,1,['update'],['updated']
Deployability,"_3.2.1/include'; CGNS_LD='/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a'; CPP='gcc -E'; CPPFLAGS=''; CXX='g++'; CXXDEPMODE='depmode=gcc3'; CXXFLAGS='-g -O2'; CYGPATH_W='echo'; DEFS='-DPACKAGE_NAME=\""SU2\"" -DPACKAGE_TARNAME=\""SU2\"" -DPACKAGE_VERSION=\""4.1.0\"" -DPACKAGE_STRING=\""SU2\ 4.1.0\"" -DPACKAGE_BUGREPORT=\""su2code-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""https://github.com/su2code\"" -DPACKAGE=\""SU2\"" -DVERSION=\""4.1.0\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DSIZEOF_SHORT_INT=2 -DSIZEOF_INT=4 -DSIZEOF_UNSIGNED_INT=4 -DSIZEOF_LONG_INT=8 -DSIZEOF_FLOAT=4 -DSIZEOF_DOUBLE=8 -DSIZEOF_VOID_P=8'; DEPDIR='.deps'; DIRECTDIFF_CXX=''; DIRECTDIFF_LIBS=''; ECHO_C=''; ECHO_N='-n'; ECHO_T=''; EGREP='/bin/grep -E'; EXEEXT=''; GREP='/bin/grep'; HDF5_CXX=''; HDF5_LD=''; INSTALL_DATA='${INSTALL} -m 644'; INSTALL_PROGRAM='${INSTALL}'; INSTALL_SCRIPT='${INSTALL}'; INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'; JSONCPP_CXX=''; JSONCPP_LD=''; LAPACK_CXX=''; LAPACK_LD=''; LDFLAGS=''; LIBOBJS=''; LIBS=''; LTLIBOBJS=''; MAKEINFO='${SHELL} /home/antodech/SU2-4.1.0/missing --run makeinfo'; METIS_INCLUDE=''; METIS_LIB=''; MKDIR_P='/bin/mkdir -p'; MUTATIONPP_CXX=''; MUTATIONPP_LD=''; OBJEXT='o'; PACKAGE='SU2'; PACKAGE_BUGREPORT='su2code-dev@lists.stanford.edu'; PACKAGE_NAME='SU2'; PACKAGE_STRING='SU2 4.1.0'; PACKAGE_TARNAME='SU2'; PACKAGE_URL='https://github.com/su2code'; PACKAGE_VERSION='4.1.0'; PARMETIS_INCLUDE=''; PARMETIS_LIB=''; PATH_SEPARATOR=':'; RANLIB='ranlib'; REVERSE_CXX=''; REVERSE_LIBS=''; SET_MAKE=''; SHELL='/bin/sh'; STRIP=''; SU2_METIS_CPPFLAGS=''; SU2_PARMETIS_CPPFLAGS=''; SZIP_CXX=''; SZIP_LD=''; TECIO_CPPFLAGS=''; TECIO_INCLUDE=''; VERSION='4.1.0'; ZLIB_CXX=''; ZLIB_LD=''; ac_ct_CC='gcc'; ac_ct_CXX='g++'; am__EXEEXT_FALSE=''; am__EXEEXT_TRUE='#'; am__fastdepCC_FALSE='#'; am__fastdepCC_TRUE=''; am__fastdepCXX_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:23950,INSTALL,INSTALL,23950,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,3,['INSTALL'],['INSTALL']
Deployability,"_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1702,install,install,1702,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['install'],['install']
Deployability,_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/S,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:8830,Install,Installing,8830,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTAL,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:2896,Install,Installing,2896,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"``; Installing _amgio.; The Meson build system; Version: 0.52.999; Source dir: /opt/su2/SU2_src; Build dir: /opt/su2/SU2_src/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; expor",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:1935,Update,Update,1935,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['Update'],['Update']
Deployability,"```/SU2/SU2_BASE/../SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'```. Use pip to install mpi4py. PS: just saw you already did that, sorry.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-515360878:100,install,install,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-515360878,1,['install'],['install']
Deployability,"```diff; $ git --no-pager diff --cached ; diff --git a/meson.build b/meson.build; index ca86992ea..b68a03c52 100644; --- a/meson.build; +++ b/meson.build; @@ -1,15 +1,12 @@; project('SU2', 'c', 'cpp',; version: '7.5.1 ""Blackbird""',; + meson_version: '0.61.1',; license: 'LGPL2',; default_options: ['buildtype=release',; 'warning_level=0',; 'c_std=c99',; 'cpp_std=c++11']); ; -if meson.version() != '0.61.1'; - error('SU2 must be configured with the extended Meson script (./meson.py) in the SU2 root directory.'); -endif; -; pymod = import('python'); python = pymod.find_installation(); ; ```. I used this patch, and then ran the following:. ```; $ meson setup builddir --wipe; The Meson build system; Version: 1.0.1; Source dir: /tmp/SU2; Build dir: /tmp/SU2/builddir; Build type: native build. meson.build:1:0: ERROR: Meson version is 1.0.1 but project requires 0.61.1; ```. Using the >= comparison, it configures fine, and downloads a git submodule for mutationpp/coolprop on demand. From a hasty look around, it seems like the other git submodules are used as externals/ directories, not meson subprojects. Another project I know uses e.g. ```; if not fs.exists('submoduledir/README.md'); error('Missing the `submoduledir` submodule! Run `git submodule update --init` to fix this.'); endif; ```. for each submodule before it gets processed by meson. This is less automatic than wrapping it in meson.py, but does provide pretty clear directions... the sticking point is if people download tarballs. You currently point people to github's autogenerated archives, which is NOT sufficient as it doesn't have submodules included. I would actually suggest using `meson dist --include-subprojects --no-tests` to produce your own tarballs and attach them as additional releases artifacts. Meson *does* include submodules (whether or not they are subprojects) automatically to the tarball it creates.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434:309,release,release,309,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434,8,"['patch', 'release', 'update']","['patch', 'release', 'releases', 'update']"
Deployability,"`update testcases, streamwise pin converges well` Thanks for checking @pcarruscag :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1679#issuecomment-1177421770:1,update,update,1,https://su2code.github.io,https://github.com/su2code/SU2/pull/1679#issuecomment-1177421770,1,['update'],['update']
Deployability,"able). This allows; > people to see the performance of SU2 and replicate it, if need be.; >; > The first step would be compiling a list of cases that should be covered.; > The SU2 2014 SciTech paper; > <https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf> would be a; > good starting point as it already had a couple of validation cases. This; > list can be bolstered with some of the NASA TMR cases, and with grid; > convergence studies. I would like to propose an initial list that the; > community can talk through and make changes as we see fit. I am mostly only; > familiar with canonical CFD flows that are used in these cases. But it; > would be great to have other cases, such as Turbo-machinary or FSI cases,; > that show the full breadth of SU2's abilities. This is by no means an; > exhaustive list:; >; > 1. Zero Gradient Flat Plate; > 2. 2D and 3D Bump in Channel; > 3. Asymmetric Diffuser; > 4. Backward facing step; > 5. Unsteady Square cylinder; > 6. NACA0012; > 7. NACA4412 Trailing Edge Seperation; > 8. Joukowski Airfoil; > 9. 30P30N High Lift airfoil; > 10. ONERAM6 Wing; > 11. NASA CRM; > 12. Subsonic and Supersonic Jets; >; > It would be ideal for these test cases to have either high-fidelity data; > (wind tunnel tests, or LES/DNS data), and/or published results of other; > solvers so that comparisons can be made.; >; > I also want to point out the difference between this and the TestCases; > repository. The TestCases repo is used in regression tests to ensure that; > parts of the code don't break when changes are made. This is more a test of; > SU2's fidelity. It would feature large grids and configuration files that; > can be run to convergence.; >; > ‚Äî; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/581>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/APKNm0MgSdkhQbG8dvGsdxlxIf9pa1xsks5ucppYgaJpZM4Ww0V4>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423070900:3050,configurat,configuration,3050,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423070900,1,['configurat'],['configuration']
Deployability,able-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse'.; === Error Log ===; /bin/sh: 1: ../configure: not found. ---------------------------------------------; When I copied configure.py from older installations it kept running but then aborted on; missing modules,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-598686170:2167,install,installations,2167,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170,1,['install'],['installations']
Deployability,ackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPa,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7859,Install,Installing,7859,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,ackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2.py'; Running custom install sc,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:9367,Install,Installing,9367,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"acting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_CFD/src/SU2_CFD SU2_CFD/src/SU2_CFD.p/SU2_CFD.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:3333,update,update,3333,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['update'],['update']
Deployability,add sudo in front of make install,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/659#issuecomment-532002423:26,install,install,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/659#issuecomment-532002423,1,['install'],['install']
Deployability,"adding a comment to prevent ""stale"" and ""closed"" status. I look forward to these updates being made; thank you",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-888494154:81,update,updates,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-888494154,1,['update'],['updates']
Deployability,ady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:4741,Install,Installing,4741,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,ages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/s,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:3413,Install,Installing,3413,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"ails. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /home/antodech/SU2-4.1.0; Install location: /gshare/work/hpascalj/CodeSU2-master; Version: 4.1.0; C++ Compiler: g++; C Compiler: gcc; Preprocessor flags: ; Compiler flags: -g -O2; Linker flags: ; MPI support: no; Metis support: no; Parmetis support: no; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: no; LAPACK support: no; Datatype support:; double yes; complex no; codi_reverse no; codi_forward no. External includes: ; External libs: . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: yes; Build SU2_DEF: yes; Build SU2_SOL: yes; Build SU2_GEO: yes. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=""/gshare/work/hpascalj/CodeSU2-master/bin""; export SU2_HOME=""/home/antodech/SU2-4.1.0""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=x86_64-unknown-linux-gnu; ac_cv_c_compiler_gnu=yes; ac_cv_cxx_compiler_gnu=yes; ac_cv_env_CCC_set=; ac_cv_env_CCC_value=; ac_cv_env_CC_set=; ac_cv_env_CC_value=; ac_cv_env_CFLAGS_set=; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_CXXFLAGS_set=; ac_cv_env_CXXFLAGS_value=; ac_cv_env_CXX_set=; ac_cv_env_CXX_value=; ac_cv_env_LDFLAGS_set=; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:19184,update,update,19184,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['update'],['update']
Deployability,"alexfeld; Thanks for your support in the compute_polar.; However, I don't manage to reproduce the failure that you have described. I have run a case; where the cfg file containes no MARKER_DESIGNING definition. Consequently, both ; config_CFD.cfg and config_SOL.cfg had no definition of that marker but nothing failed.; Could you share with me you cfg file so that I will be able to reproduce the error that you; have encountered?; BTW, I havn' t updated yet to 6.1.0 (I'm in 6.0.1). May this be the reason for the different behavior?; Best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/545#issuecomment-400878975:447,update,updated,447,https://su2code.github.io,https://github.com/su2code/SU2/issues/545#issuecomment-400878975,1,['update'],['updated']
Deployability,alling SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPa,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:1728,Install,Installing,1728,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"ally detect the default package location, but it's not equipped to handle multiple package locations. There are some hardcoded includes, but these only work for python 2.7. I don't consider this a bug *per se* because multiple python package directories is not a standard use case. #### The symptoms. When building SU2 with the python wrapper you'll see the following error during the swig build:; ```; <install directory>/../SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; ```; But mpi4py is indeed installed on your system and it's on your python path, as confirmed by opening a python terminal and running `import mpi4py`. #### The easiest workaround. Switch to a [virtualenv](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/). This will ensure that all of your python packages are stored in single location. #### Alternate workaround. In this method, you change the hardcoded includes to match mpi4py's package location. First I figure out where my mpi4py is installed. I start a terminal session of python using the python environment I want to use (in this case, it's python 3.6), and then run:; ```; from mpi4py import MPI; MPI; ```. Since I have mpi4py installed on your system and it's on my python path, I see something like:; ```; <module 'mpi4py.MPI' from '/home/clarkpede/.local/lib/python3.6/site-packages/mpi4py/MPI.cpython-34m.so'>; ```. The `/home/clarkpede/.local/lib/python3.6/` directory is where my mpi4py package is installed. But the swig compile command includes `/home/clarkpede/.local/lib/python2.7/`. That's not the right directory! So first I find the hardcoded paths of the makefile by running (on a bash terminal):; ```; grep -rn python2\.7 SU2_PY/ ; ```; On my system, this prints out four lines. I don't care about the `Makefile.in` files, because those are generated automatically and will be overwritten every time I run ""configure"" or ""preconfigure.py."" The `NUMPY_INCLUDE` line is also commented out, so I ignore ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722#issuecomment-515693590:1393,install,installed,1393,https://su2code.github.io,https://github.com/su2code/SU2/issues/722#issuecomment-515693590,2,['install'],['installed']
Deployability,"anford.edu and develop respectively:. Jairos-Mac-mini:SU2 jaspe$ git status. On branch feature_force_read_target_on_AD. Changes not staged for commit:. (use ""git add <file>..."" to update what will be committed). (use ""git checkout -- <file>..."" to discard changes in working directory). modified: .travis.yml. no changes added to commit (use ""git add"" and/or ""git commit -a""). Jairos-Mac-mini:SU2 jaspe$ git commit -am ""This is an update of .travis.yml; for feature_force_read_target_on_AD."". [feature_force_read_target_on_AD 3f2115373] This is an update of; .travis.yml for feature_force_read_target_on_AD. 1 file changed, 2 insertions(+), 2 deletions(-); After that, I issued git push origin feature_force_read_target_on_AD, and; got the error message:. To https://github.com/su2code/SU2.git. ! [rejected] feature_force_read_target_on_AD ->; feature_force_read_target_on_AD (fetch first). error: failed to push some refs to 'https://github.com/su2code/SU2.git'. hint: Updates were rejected because the remote contains work that you do. hint: not have locally. This is usually caused by another repository pushing. hint: to the same ref. You may want to first integrate the remote changes. hint: (e.g., 'git pull ...') before pushing again. hint: See the 'Note about fast-forwards' in 'git push --help' for details.; I issued then git pull origin develop, to merge changes in remote to my; local branch, successfully , but a new git push origin; feature_force_read_target_on_AD, produced the same error message.; Would be the first commit command enough?. With kind regards,. Jairo. On Tue, Oct 30, 2018 at 7:25 PM Thomas D. Economon <notifications@github.com>; wrote:. > Hi @jaspe55 <https://github.com/jaspe55> - thanks for the first; > contribution!; >; > Can you please switch the email and branch name in .travis.yml back to; > su2code-dev@lists.stanford.edu and develop, respectively? That should get; > the tests running so we can give this a proper review (should be quick; > given the small",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-434929137:1038,Update,Updates,1038,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-434929137,1,['Update'],['Updates']
Deployability,ation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:4471,Install,Installing,4471,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"be the loop over the number of physical disciplines involved in the problem and not the zones. Whether the individual disciplines contain one or multiple zones is irrelevant at this level, in my opinion. The loop over the multiple zones of a single discipline should take place at a much lower level, namely where the spatial residual is computed. At least, this should be the case for the fluid dynamics part. I don't know whether this is also the case for other disciplines, like structures. What about the following high level structure?. - Loop over the number of iterations, or time steps for unsteady problems.; - Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; - Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate: ; - Loop over the (Runge-Kutta) stages; - Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; - End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; - End loop over the (Runge-Kutta) stages ; - End loop over the disciplines; - End loop over the pseudo time steps.; - End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328368371:1049,Update,Update,1049,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328368371,1,['Update'],['Update']
Deployability,"ble-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output for `./ninja`](https://github.com/su2code/SU2/files/4672490/ninja_build_mpich.log). Even though the build was successful, SU2 does not seem to run properly. It displays the same thing ""NP"" (`mpirun -n NP ...`) number of times. And the console prints the output in chunks, like 57 iterations suddenly ""NP"" times, then a pause, then 57-119 ""NP"" times and so on. You can see the [logfile here](https://github.com/su2code/SU2/files/4672491/mpirun_SU2_CFD_error.log).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:2057,install,install,2057,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474,3,"['Install', 'install']","['Installing', 'install']"
Deployability,"both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then we are left with this initial transient phase that differs. Of course if there is more evidence that one or the other version produces physically ""better"" results I would love to see that. Until then, both initial oscillations are equally correct/uncorrect in my opinion. [I'll add a few words about the adjoint here later]. [I'll add the idea of an FSI case of @cvencro here later where the initial phase has a major impact]; Consider an FSI computation of an airfoil where the trailing edge can exhibit flutter (periodic up-and-down-movement of the trailing edge) in certain flow regimes. Now if during the initial transient the forces on the airfoil are higher than in the converged state then the fluttering can be excited where the initial transient can be seen as an activation energy. If you were to e.g. ramp up flow speed/conditions slowly up to the same magnitude as before one mig",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563314747:1909,integrat,integrated,1909,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747,2,['integrat'],['integrated']
Deployability,"bsonic engine intake option; - Small output change; - Added output_su2.cpp; - Updated Engine BC; - Working on Engine BCs; - Added Supersonic Outlet BC; - Minor change; - Merge remote-tracking branch 'upstream/develop' into develop; - adjoints, solid boundary, doxygen in config; - continued fixing; - re-added adjoint bc mods; - re-adding avg outlet pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated ac",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:4098,Update,Updated,4098,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,3,"['Update', 'update']","['Updated', 'update']"
Deployability,"c` we resolve 4/8 row/column pairs into 1D indexes, while this calculation is vectorized, it seems to be less optimizable by compilers, for example this; ```c++; for(size_t iDim=0; iDim<nDim; ++iDim); phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; ```; gets compiled into this monstrosity; ```asm; .L13:; vpmuludq ymm0, ymm4, ymm1; vmovq xmm15, rax; vmovapd ymm6, ymm11; mov rdx, rax; vpbroadcastq ymm15, xmm15; sal rdx, 5; add rax, 1; vpaddq ymm0, ymm0, ymm2; vpsllq ymm0, ymm0, 32; vpaddq ymm0, ymm5, ymm0; vmovdqa YMMWORD PTR [rbp-240], ymm0; vpaddq ymm0, ymm3, ymm0; vmovdqa YMMWORD PTR [rbp-208], ymm0; vpaddq ymm0, ymm15, ymm0; vmovdqa YMMWORD PTR [rbp-176], ymm0; vgatherqpd ymm15, QWORD PTR [rdi+ymm0*8], ymm6; vmovapd ymm0, YMMWORD PTR [rsi+rdx]; vfmadd213pd ymm0, ymm15, YMMWORD PTR [rbp-336]; vmovapd YMMWORD PTR [rbp-336], ymm0; cmp rbx, rax; jne .L13; ```; the meat of which is `vgatherqpd` (`getVec`) and `vfmadd213pd` fused-multiply-add to update `phiL`, everything else is integer arithmetic which in the scalar version gets factored out of the inner loop so that the resulting assembly looks much simpler:; ```asm; .L15:; vmovsd xmm5, QWORD PTR [rsp-40+rax*8]; vfmadd231sd xmm0, xmm5, QWORD PTR [r15+rax*8]; add rax, 1; cmp rcx, rax; jne .L15; ```; I think the reason for this is that there are plenty of integer registers (64bit) to keep memory locations (rsp, rax, r15 in the above) but there are only 16 ymm registers (256bit). In any case we need to give the compiler a hand, the calculation we need is; `index = iPoint*nVar*nDim + iVar*nDim + iDim` where iPoint is an array of ints; Note that as we loop by nDim and then by nVar all we need is to compute `iPoint*nVar*nDim` outside the loops and then add 1 on each access (which is more or less what the compiler does for the scalar code), in other words we need an **iterator**, something silly like; ```c++; template<size_t VecLen, size_t Incr = VecLen>; class GatherIterator; {; private:; using IntVec = Array<size_t,VecLe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:10097,update,update,10097,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['update'],['update']
Deployability,"ce some structural changes are made which could potentially effect things outside the regression tests, and I want to make it easier for code review.; > ; > In this pull request, the ability to run multiple objectives is added to the python tools and to the config options. Within the CFD and adjoint solvers, the only major change is in the data structure containing the objectives - it now can hold a list of objectives, but when the adjoint solver is run only one objective is included. Later pull requests are planned to include the ability to run a single adjoint solution for a sum of objectives defined on different markers.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/237 https://github.com/su2code/SU2/pull/237; > Commit Summary; > ; > config options updated to be compatible with multiple objectives - mdo not yet implemented; > python tools; > python adjusted for multiple objectives: will always run 1st objective only with continuous adjoint, but will run separate continuous adjoint evaluations within optimization; > continuous adjoint evaluates the requested objectives; > fixing some errors; > File Changes; > ; > M Common/include/config_structure.hpp https://github.com/su2code/SU2/pull/237/files#diff-0 (20); > M Common/include/config_structure.inl https://github.com/su2code/SU2/pull/237/files#diff-1 (6); > M Common/src/config_structure.cpp https://github.com/su2code/SU2/pull/237/files#diff-2 (90); > M SU2_PY/SU2/eval/design.py https://github.com/su2code/SU2/pull/237/files#diff-3 (8); > M SU2_PY/SU2/eval/functions.py https://github.com/su2code/SU2/pull/237/files#diff-4 (14); > M SU2_PY/SU2/eval/gradients.py https://github.com/su2code/SU2/pull/237/files#diff-5 (4); > M SU2_PY/SU2/io/config.py https://github.com/su2code/SU2/pull/237/files#diff-6 (21); > M SU2_PY/SU2/io/tools.py https://github.com/su2code/SU2/pull/237/files#diff-7 (21); > M SU2_PY/SU2/opt/project.py https://github.com/su2code/SU2/pull",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/237#issuecomment-182175757:1319,update,updated,1319,https://su2code.github.io,https://github.com/su2code/SU2/pull/237#issuecomment-182175757,4,"['continuous', 'update']","['continuous', 'updated']"
Deployability,ceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsS,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15579,Upgrade,UpgradeLog,15579,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Upgrade'],['UpgradeLog']
Deployability,che variables. ##; ## ---------------- ##. ac_cv_build=x86_64-unknown-linux-gnu; ac_cv_c_compiler_gnu=yes; ac_cv_cxx_compiler_gnu=yes; ac_cv_env_CCC_set=; ac_cv_env_CCC_value=; ac_cv_env_CC_set=; ac_cv_env_CC_value=; ac_cv_env_CFLAGS_set=; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_CXXFLAGS_set=; ac_cv_env_CXXFLAGS_value=; ac_cv_env_CXX_set=; ac_cv_env_CXX_value=; ac_cv_env_LDFLAGS_set=; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_file__gshare_soft_code_saturne_4_0_0_prod_cgnslib_3_2_1_include_cgnslib_h=yes; ac_cv_file__gshare_soft_code_saturne_4_0_0_prod_cgnslib_3_2_1_lib_libcgns_a=yes; ac_cv_header_X11_Intrinsic_h=no; ac_cv_header_inttypes_h=yes; ac_cv_header_memory_h=yes; ac_cv_header_stdc=yes; ac_cv_header_stdint_h=yes; ac_cv_header_stdlib_h=yes; ac_cv_header_string_h=yes; ac_cv_header_strings_h=yes; ac_cv_header_sys_stat_h=yes; ac_cv_header_sys_types_h=yes; ac_cv_header_unistd_h=yes; ac_cv_host=x86_64-unknown-linux-gnu; ac_cv_objext=o; ac_cv_path_EGREP='/bin/grep -E'; ac_cv_path_GREP=/bin/grep; ac_cv_path_install='/usr/bin/install -c'; ac_cv_path_mkdir=/bin/mkdir; ac_cv_prog_AWK=gawk; ac_cv_prog_CPP='gcc -E'; ac_cv_prog_ac_ct_CC=gcc; ac_cv_prog_ac_ct_CXX=g++; ac_cv_prog_ac_ct_RANLIB=ranlib; ac_cv_prog_cc_c89=; ac_cv_prog_cc_g=yes; ac_cv_prog_cc_gcc_c_o=yes; ac_cv_prog_cxx_g=yes; ac_cv_prog_make_make_set=yes; ac_cv_sizeof_double=8; ac_cv_sizeof_float=4; ac_cv_sizeof_int=4; ac_cv_sizeof_long_int=8; ac_cv_sizeof_short_int=2; ac_cv_sizeof_unsigned_int=4; ac_cv_sizeof_void_p=8; ac_cv_target=x86_64-unknown-linux-gnu; am_cv_CC_dependencies_compiler_type=gcc3; am_cv_CXX_dependencies_compiler_type=gcc3; am_cv_make_support_nested_variables=yes. ## ----------------- ##; ## Output variab,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:20866,install,install,20866,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['install'],['install']
Deployability,ckages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPac,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:8131,Install,Installing,8131,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,ckages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2.py'; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2ad.py';,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:9499,Install,Installing,9499,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,ckages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_opti,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:3540,Install,Installing,3540,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"ctivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. matrix.updateBlocks(iEdge, iPoint, jPoint, blk_i, blk_j);; }; }; ```; where; ```c++; STRONGINLINE void SparseMatrix::updateBlocks(size_t edge,; size_t row, size_t col, const double* blk_i, const double* blk_j); {; size_t bii = diagMap[row], bij = edgeMap[edge].first,; bjj = diagMap[col], bji = edgeMap[edge].second;. #pragma omp simd; for(size_t k=0; k<blkSz; ++k); {; coeffs[bii+k] += blk_i[k]; coeffs[bij+k] = +blk_j[k];; coeffs[bji+k] = -blk_i[k]; coeffs[bjj+k] -= blk_j[k];; }; }; ```; This is **47% faster**, which for a memory bound task is massive!; Yes, this does increase the memory footprint a bit (makes CSysMatrix 4% larger for a 3D problem) but I can get that back by sharing sparsity patterns and maps across turbulence and bulk flow (I think @talbring was already working on this in the template linear solver branch he had started). We could also parallelize the matrix updates without colouring by setting only the off-diagonal coefficients and then setting the diagonal entries to the column sum.; It turns out that this is worse (by about 10%), maybe if the matrix were symmetric (row sum) but a column sum accesses blocks very far apart. Also we want to interleave compute and load/stores as much as possible to allow the CPU pipelining magic to mask the latency of the latter (even if it looks like you can only write the block after it is computed, CPU's have all kinds of buffers that allow the next loop iteration to begin while data is in flight). **Therefore colouring is the way to go.**. _Note: With vectorized numerics we insert blocks for 4 or 8 edges into the matrix at a time, the data for those inserts will be in a slightly weird format, which will make `SparseMatrix::updateBlocks` a bit harder on the eye, more on that later._. ## MUSCL Reconstruction; The MUSCL reconstruction, characteristic of upwind schemes, is the simplest building block to show the (negative) implications of storing the ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:4710,update,updates,4710,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['update'],['updates']
Deployability,"d <file>..."" to update what will be committed). (use ""git checkout -- <file>..."" to discard changes in working directory). modified: .travis.yml. no changes added to commit (use ""git add"" and/or ""git commit -a""). Jairos-Mac-mini:SU2 jaspe$ git commit -am ""This is an update of .travis.yml; for feature_force_read_target_on_AD."". [feature_force_read_target_on_AD 3f2115373] This is an update of; .travis.yml for feature_force_read_target_on_AD. 1 file changed, 2 insertions(+), 2 deletions(-); After that, I issued git push origin feature_force_read_target_on_AD, and; got the error message:. To https://github.com/su2code/SU2.git. ! [rejected] feature_force_read_target_on_AD ->; feature_force_read_target_on_AD (fetch first). error: failed to push some refs to 'https://github.com/su2code/SU2.git'. hint: Updates were rejected because the remote contains work that you do. hint: not have locally. This is usually caused by another repository pushing. hint: to the same ref. You may want to first integrate the remote changes. hint: (e.g., 'git pull ...') before pushing again. hint: See the 'Note about fast-forwards' in 'git push --help' for details.; I issued then git pull origin develop, to merge changes in remote to my; local branch, successfully , but a new git push origin; feature_force_read_target_on_AD, produced the same error message.; Would be the first commit command enough?. With kind regards,. Jairo. On Tue, Oct 30, 2018 at 7:25 PM Thomas D. Economon <notifications@github.com>; wrote:. > Hi @jaspe55 <https://github.com/jaspe55> - thanks for the first; > contribution!; >; > Can you please switch the email and branch name in .travis.yml back to; > su2code-dev@lists.stanford.edu and develop, respectively? That should get; > the tests running so we can give this a proper review (should be quick; > given the small change).; >; > ‚Äî; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/6",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-434929137:1229,integrat,integrate,1229,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-434929137,1,['integrat'],['integrate']
Deployability,"d Ninja. They are pretty impressive. It looks like Meson uses both pkg-config and (more recently) CMake under the hood. For specific packages that don‚Äôt play nicely with pkg-config, it will look for other similar utilities, such as llvm-config for the LLVM library. I have a beef mostly with documentation, but that‚Äôs hardly unusual in the open source world, and maybe not so relevant to SU2, which doesn‚Äôt have the multitude of external dependencies that many open source projects do. I think the struggles I have had relate mostly to the non-transparent way that Meson interacts with the underlying utilities (pkg-config, CMake, llvm-config,‚Ä¶). For example, I had to fumble around to get Meson to find llvm-config in a non-standard location (adding that location to $PATH turned out to be the answer), as well as to get pkg-config to find its required pkgconfig directories in non-standard locations (adding them to $PKG_CONFIG_PATH was the answer there). I also had to build/install Python 3 (required by Meson), and found that the Python 3.7 has problems with OpenSSL (module _ssl), on which Meson depends, so I went back to Python 3.6. I imagine any pre-built Python 3.7 would be fine, though a related bug appears to still be open (https://bugs.python.org/issue34028). On Windows, Meson will output Visual Studio projects, which would make any Windows developer happy, but your source still has to be cross-platform friendly‚Äînot a problem for TecIO, but I don‚Äôt know if that‚Äôs true elsewhere in SU2. FWIW,. Dave. From: Tim Albring [mailto:notifications@github.com]; Sent: Wednesday, May 22, 2019 7:31 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] Meson build system (#685). To see a major advantage, just compare the meson.build and the configure.ac file ... ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/685?e",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-494848848:1107,install,install,1107,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-494848848,1,['install'],['install']
Deployability,differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyM,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:4339,Install,Installing,4339,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,dy/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6223,Install,Installing,6223,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,dy/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7037,Install,Installing,7037,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"e more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each operating point) have in common. There would be no need to initialise the entire `SU2_CFD` machinery for this step, or to apply the design update separately for each of the SU2 instances.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:1279,update,updates,1279,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696,12,"['configurat', 'update']","['configuration', 'update', 'updated', 'updates']"
Deployability,e.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc); - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Another important updated to BC in parallel; - More implementation and clean up of the parallel CGNS reader.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - CGNS reader bug fix.; - Updated adj. NS solver with primitive variables and farfield bc including viscous contribution.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Small change; - Back to the previous version; - Fixed some loop variables.;,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:6023,Update,Updated,6023,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Update'],['Updated']
Deployability,e/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:4611,Install,Installing,4611,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"e_Exhaust and BC_Engine_Bleed; - Small change; - Fixing subsonic engine intake option; - Small output change; - Added output_su2.cpp; - Updated Engine BC; - Working on Engine BCs; - Added Supersonic Outlet BC; - Minor change; - Merge remote-tracking branch 'upstream/develop' into develop; - adjoints, solid boundary, doxygen in config; - continued fixing; - re-added adjoint bc mods; - re-adding avg outlet pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to impro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:4055,Update,Updated,4055,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,3,"['Update', 'release']","['Updated', 'release']"
Deployability,"easier implementation experience. Certainly, this is not the only consideration but it should be taken into account. Currently, resulting from the significant contributions of the members of this developers group, SU2 implementation works like a charm. I think we should strive to conserve this feature, especially if we aim at attracting more users and developers into the community. (...). >@vdweide; >(...) @bmunguia and @EduardoMolina, what type of application did you have in mind for PETSc? The only thing I can think of is a full Newton solver. And no matter how much I like PETSc, @juanjosealonso and @erangit have a point here. Looks like I start to belong to the group of old conservatives as well.... >@economon ; >(...) If you really would like to give PETSc a shot, I recommend talking with @anilvar who had an interface for connecting it to SU2 in one of our branches. >@pcarruscag; >(...) being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD. (...). >@EduardoMolina; >(...) When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2.; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. (...). >@pcarruscag ; >(...) That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. (...). >@economon ; >I would add one practical comment for consideration: it is worth checking whether the main restriction we have is related to approximations in the Jacobian that limit the effective CFL we can use or whether the convergence of the linear solver itself is a problem (speed or complete lack of convergence). A quick test without re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460853218:2535,integrat,integration,2535,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460853218,2,['integrat'],['integration']
Deployability,"ed.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8610,Configurat,Configuration,8610,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,3,"['Configurat', 'configurat', 'update']","['Configuration', 'configuration', 'update']"
Deployability,"egin to run much larger models. Otherwise the preprocessing time for the searches can become excessive and dominant. If someone wanted to try using PCL for this, that would be quite interesting. Given the open source license, as Tom mentions, there should not be a problem interfacing with SU2. Now, an issue we faced in the ASC / PSAAP programs is that for extremely large calculations, the surface mesh (to be searched for minimum distance calculations) may actually not fit in a single processor. For that purpose we built parallel ADTs in the past (unfortunately in FORTRAN90) which replicate a small portion of the upper structure of the tree in all processors (without consuming a lot of memory) and then decomposed the tree into the various processors participating in the searches. While the parallel speedups / efficiencies were not earth-shattering, we did manage to overcome the memory bottlenecks. Does anyone know if PCL can also handle trees that are decomposed in parallel? Would PCL work with its own MPI communicator and automate the communication needed for the searches?. Cheers,. Juan. On Jun 5, 2016, at 4:06 AM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. Indeed, at the moment, we are relying on brute force searches. We have discussed using tree searches internally (and potentially have some reusable code available for this), but nothing has been implemented. It looks like pointcloud is released under a BSD license, which is very permissive. Do you have an implementation in SU2 already with this code embedded? It is also fairly straightforward for us to add hooks in the configure process to installed libraries on your system. ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHubhttps://github.com/su2code/SU2/issues/282#issuecomment-223807001, or mute the threadhttps://github.com/notifications/unsubscribe/ADpSxPh8ni-GpSN-zKjD9Nyi47sf5sqZks5qIq2jgaJpZM4ItVbi.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-223861540:1687,release,released,1687,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-223861540,2,"['install', 'release']","['installed', 'released']"
Deployability,"ense to have an updated value for the limiter. However this is not 100% accurate because we are using old gradients to compute the new limiter. Anyway, the spirit is to have a limiter computed using the latest flow variables value and we should probably check that the gradients have been also updated before computing limiters again for the turbulence equation. What I don't really like is Upwind_Residual. ` bool limiter = (config->GetSpatialOrder() == SECOND_ORDER_LIMITER);; `. in this case we are using only the info about limiters or not in the turbulence model... so if, for example, we are using JST for the mean flow equations then the limiter for the flow equations have never been computed and. ```; if (limiter) {; FlowPrimVar_i[iVar] = V_i[iVar] + Limiter_i[iVar]*Project_Grad_i;; FlowPrimVar_j[iVar] = V_j[iVar] + Limiter_j[iVar]*Project_Grad_j;; }. ``` . Is incorrect because Limiter_i has never been computed (if we are lucky maybe we are using a zero value by default... but we need to check). In other words, I think this require a deeper look. @jschuele, could you please think on this and submit a new pull request (I'll close this one). If you don't have time, please let me know and we really appreciate if you could add this situation as an Issue. We'll try to fix this problem as soon as possible. By the way the initial confusion was that the SpatialOrder in . ` config->GetSpatialOrder(); `; is updated in ; ```; void CConfig::SetGlobalParam(unsigned short val_solver,; unsigned short val_system,; unsigned long val_extiter) {; ```. so it will change during runtime and as we are solving the turbulence model . `config->GetSpatialOrder()` is the same as `config->GetSpatialOrder_Turb()`. in ; `void CTurbSASolver::Preprocessing(CGeometry *geometry, CSolver **solver_container, CConfig *config, unsigned short iMesh, unsigned short iRKStep, unsigned short RunTime_EqSystem, bool Output) {`. @jschuele and @paulhzhang thanks a lot for working with us on SU2!; Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/403#issuecomment-320490588:2058,update,updated,2058,https://su2code.github.io,https://github.com/su2code/SU2/pull/403#issuecomment-320490588,1,['update'],['updated']
Deployability,"eps for unsteady problems.; * Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; * Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate:; * Loop over the (Runge-Kutta) stages; * Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; * End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; * End loop over the (Runge-Kutta) stages; * End loop over the disciplines; * End loop over the pseudo time steps.; * End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defined per zone. Well, I suppose this leaves plenty of room for discussion, so I would say to continue the online discussion a bit further, such that things become a bit clearer how to tackle this issue. After that having a telecon would be good to iron out the details. Regards,. Edwin. ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-328368371>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxHiNAbZtzVEvIm0XDsNvQmZ6lrwwks5shEHjgaJpZM4PQ90s>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328403160:3260,integrat,integration,3260,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328403160,2,['integrat'],['integration']
Deployability,erPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6632,Install,Installing,6632,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"erical scheme or the other options are changed. Which configuration file would you want?; > > By any chance, are you implementing or developing a transition model? Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer.; > ; > If you could send me the config files for the T3A, T3A- and NLF test cases it would be awesome!; > ; > I have implemented the same model as yours, the LM model, in parallel to you 'cause I needed it for some simulations. I also tried implementing the same version but related to the SA turbulence model, however it still is bothering me that I cannot seem to get good results on it.; > ; > If you want, I also tried the prolate spheroid test-case with good results. If you need I can give the configs and the meshes. The only thing about this test-case is that it is more related to the cross-flow transition, thus it needs to be implemented, which I think I'll do in these days.; > ; > I think that the k-w-gamma model is the way to go right after the implementation of the LM model since it has lots of equations in common. Do you think that you need another class for it or you will write on the same classes that you have already built (like the CTransLMSolver)?. The test case(T3A, T3A-, and NLF-0416) configuration files were uploaded to my git repository. Here is the [link](https://github.com/sun5k/SU2/tree/develop/TestCases/transition ). Suggestions for the prolate spheroid test-case is appreciated. However, my transition model is the LM-2009, and I have no plans for the 2015-LM model. Therefore, the cross-flow transition is left for future developers. I think the CTransGammaSolver, CTransGSolver, or the other name of classes will be added for the k-w-gamma transition model. It's a vague idea, I haven't really thought about detail yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830:1784,configurat,configuration,1784,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830,1,['configurat'],['configuration']
Deployability,"erify it try opening a python shell, checking the version displayed (should be your 3.7.8) and try `import pyamg` in the shell. If the ""No such file or directory"" error shows up, it means pyamg was not correctly installed; otherwise it is in fact installed. In the latter case, you can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1088,install,install,1088,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['install'],['install']
Deployability,"ersion: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2168,install,install,2168,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['install'],['install']
Deployability,"es are definitely validation cases too. We can continue to add test cases to the TestCases repo, knowing that only a subset of those cases belong in the V&V list. 2. An important aspect of the V&V is the convergence of the solution as the mesh is refined. As Jayant knows well, this can help us catch bugs. This means that a well-constructed V&V suite needs to include a series of meshes (of increasing density), the corresponding configuration files, and the actual experimental data (or other numerical data from runs on different solvers). I strongly agree with the suggestions made that (a) the entire V&V suite needs to be run before every major release (with configuration files updated), (b) that this should be linked form the main SU2 page, (c) that the 2014 AIAA paper (and Tom‚Äôs AVIATION 2018 paper) should serve as a starting point, (d) that the NASA TMR website can give us ideas of additional access, and (e) that the SU2 V&V page should be managed within GitHub.com<http://GitHub.com> so the entire community can edit / add to this / these page/s to continue to grow the number of cases and their relevance. Best,. Juan. On Sep 20, 2018, at 3:02 AM, Ruben Sanchez <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks, Pedro, I think that's a great idea. As you mention, we would have to work out the logistics as this would require quite a bit of implication from the community, but the extra burden on the release would be compensated by avoiding big ""updating"" operations every now and then. Also as most users only work with the released versions, so it's a way to ensure they always know what updates have happened / which new features are available. ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/581#issuecomment-423122949>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxJzh9dwbOM_5DoymCA6lAIqv3biyks5uc2eqgaJpZM4Ww0V4>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423207120:1624,release,release,1624,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423207120,3,"['release', 'update']","['release', 'released', 'updates']"
Deployability,"es is not a standard use case. #### The symptoms. When building SU2 with the python wrapper you'll see the following error during the swig build:; ```; <install directory>/../SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; ```; But mpi4py is indeed installed on your system and it's on your python path, as confirmed by opening a python terminal and running `import mpi4py`. #### The easiest workaround. Switch to a [virtualenv](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/). This will ensure that all of your python packages are stored in single location. #### Alternate workaround. In this method, you change the hardcoded includes to match mpi4py's package location. First I figure out where my mpi4py is installed. I start a terminal session of python using the python environment I want to use (in this case, it's python 3.6), and then run:; ```; from mpi4py import MPI; MPI; ```. Since I have mpi4py installed on your system and it's on my python path, I see something like:; ```; <module 'mpi4py.MPI' from '/home/clarkpede/.local/lib/python3.6/site-packages/mpi4py/MPI.cpython-34m.so'>; ```. The `/home/clarkpede/.local/lib/python3.6/` directory is where my mpi4py package is installed. But the swig compile command includes `/home/clarkpede/.local/lib/python2.7/`. That's not the right directory! So first I find the hardcoded paths of the makefile by running (on a bash terminal):; ```; grep -rn python2\.7 SU2_PY/ ; ```; On my system, this prints out four lines. I don't care about the `Makefile.in` files, because those are generated automatically and will be overwritten every time I run ""configure"" or ""preconfigure.py."" The `NUMPY_INCLUDE` line is also commented out, so I ignore that too. That leaves me with one line, line 51 of `SU2_PY/pySU2/Makefile.am`:. ```; SU2_PY/pySU2/Makefile.am:51:MPI4PY_INCLUDE = ${HOME}/.local/lib/python2.7/site-packages/mpi4py/include \; ```. I now modify line 51 of Makefile.am to read:. ```; MPI",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722#issuecomment-515693590:1591,install,installed,1591,https://su2code.github.io,https://github.com/su2code/SU2/issues/722#issuecomment-515693590,2,['install'],['installed']
Deployability,es/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPacka,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:8268,Install,Installing,8268,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"et BC; - Minor change; - Merge remote-tracking branch 'upstream/develop' into develop; - adjoints, solid boundary, doxygen in config; - continued fixing; - re-added adjoint bc mods; - re-adding avg outlet pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:4233,update,update,4233,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['update'],['update']
Deployability,"f the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @c",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1689,update,update,1689,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['update'],['update']
Deployability,"fig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_CFD/src/SU2_CFD SU2_CFD/src/SU2_CFD.p/SU2_CFD.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/local/mpich-3.3.2/lib /usr/local/mpich-3.3.2/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:3425,configurat,configuration,3425,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['configurat'],['configuration']
Deployability,"figure:3654: g++ -c -g conftest.cpp >&5; configure:3654: $? = 0; configure:3695: result: yes; configure:3720: checking dependency style of g++; configure:3831: result: gcc3; configure:3921: checking for gcc; configure:3937: found /usr/bin/gcc; configure:3948: result: gcc; configure:3979: checking for C compiler version; configure:3988: gcc --version >&5; gcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3999: $? = 0; configure:3988: gcc -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unrecognized option '-qversion'; gcc: no input files; configure:3999: $? = 1; configure:4003: checking whether we are using the GNU C compiler; configure:4022: gcc -c conftest.c >&5; configure:4022: $? = 0; configure:4031: result: yes; configure:4040: checking whether gcc accepts -g; configure:4060: gcc -c -g conftest.c >&5; configure:4060: $? = 0; configure:4101: r",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:6016,release,release,6016,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['release'],['release']
Deployability,"file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.D.Palacios@boeing.com|; | Dr. Thomas D. Economon, economon@stanford.edu |; -------------------------------------------------------------------------; | SU2 Developers: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial College London. |; -------------------------------------------------------------------------; | Copyright (C) 2012-2015 SU2, the open-source CFD code. |; | |; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16810,Release,Release,16810,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,1,['Release'],['Release']
Deployability,flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc); - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Another important updated to BC in parallel; - More implementation and clean up of the parallel CGNS reader.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - CGNS reader bug fix.; - Updated adj. NS solver with primitive variables and farfield bc including viscous contribution.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Small change; - Back to the previous version; - Fixed some loop variables.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixes for CGNS.; - New slope limiter based on the wall distance; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - Non-dimensional adjoint bc; - CGNS bug.; - Mixed-element support in new CGNS reader.; - Memory fix for mixed-element CGNS in parallel.; - Activated the parallel CGNS reader.; - New FFD input; - Adjacency building for Parmetis improve to account for VTK structure; - added if viscous steps to some adjeuler bcs; - Minor changes; - Back to previous version of ParMetis; - Small change; - Final update.; - Minor bug fixed.; - Updated SU2_DEF (cgns); - CGNS global element ID bug fix.; - Heat flux bug fix.; - Small fix.; - Mer,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:6783,Update,Updated,6783,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Update'],['Updated']
Deployability,"for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1999,Release,Release,1999,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['Release'],['Release']
Deployability,ful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTA,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:1509,Install,Installing,1509,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"fyi, the surface files output both a .csv and a .dat version, one of which; can be opened by tecplot (.dat) with everything you usually want for; visualization, while the other one contains the global index information; and values that are used in surface-based mesh deformation (and maybe other; tools, but that's the one I know of - I could see that format being useful; for prescribed surface properties as well). So one challenge that would be; faced with this change is how to make sure that both files are still; output. I would argue for switching to no suffixes where possible - less work for; new users, a little more work for us - one way we could get the best of; both worlds is by having the filenames written in the config without; suffix, but when loaded into su2 (and the python version of loading the; config file) store the variable with the appropriate suffix. That way if it; changes in the future it only has to be updated in one place, and all the; old config files would still work after a code change that alterred the; suffix.; -Heather. On Wed, Jul 30, 2014 at 11:05 AM, Brendan Tracey notifications@github.com; wrote:. > SU2 right now is inconsistent with how it does file names in the config; > file. For example, the restart file needs to be specified with a "".dat""; > suffix, but in the case of the surface files, the "".csv"" is added; > automatically. SU2 should be consistent across all filenames. Preferably,; > this will be fixed by having the user specify all suffixes. This is a tiny; > amount of additional work for the user, but it makes writing scripts that; > use the config file much easier. When the suffix is in the config file,; > it's easy to have python say ""open this file"". If the config file just has; > the base name of the file (no extension) then the knowledge of what suffix; > SU2 uses must be hard-coded into the follow-on script (which can then break; > later if SU2 changes).; > ; > ‚Äî; > Reply to this email directly or view it on GitHub; > https",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/41#issuecomment-50703399:935,update,updated,935,https://su2code.github.io,https://github.com/su2code/SU2/issues/41#issuecomment-50703399,1,['update'],['updated']
Deployability,"g-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; Build targets in project: 12; ; Found ninja-1.10.0.git at /home/user/programs/su2/SU2_src/ninja; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; ```. Am I specifying it incorrectly?; Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4789,Configurat,Configuration,4789,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311,5,"['Configurat', 'configurat', 'install', 'update']","['Configuration', 'configuration', 'install', 'update']"
Deployability,"ge: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags /usr/lib/openmpi/libmpi.so -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enab",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2521,configurat,configuration,2521,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['configurat'],['configuration']
Deployability,"gin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8344,install,install,8344,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['install'],['install']
Deployability,"he problem was not only with the two vectors LinsysSol and LinSysRes, which as you say may be constructed using a 'new' statement. In the case of the StiffMatrix, there is a major difference between calling the constructor of CSysMatrix by using 'new', and calling the StiffMatrix.Initialize() method, for what I see in matrix_structure.cpp. Also, StiffMatrix is a sparse matrix (nDim x nPoint) x (nDim x nPoint), which must be allocated correctly using the Initialize method to avoid carrying around lots of zeros. With regards to the other point, I think that it is interesting to use the Initialize features of the CSysVector and CSysMatrix in the constructor of the class, just as it happens in the rest of the solver classes (see for example solver_direct_mean, line 261, where the Jacobian of the problem is initialized using a Jacobian.Initialize() call in the constructor). As far as I see it, the mesh update problem is nothing but a copy of the linear elasticity problem, so maintaining the parallelism with all the other solvers in the code (and, in particular, with the structural solver) may be interesting. . Moreover, by allocating the memory in the constructor using StiffMatrix.Initialize(nPoint, nPointDomain...) we make sure we can use the linear solvers in parallel by building a compliant sparse matrix. And if we allocate the stiffness matrix in the constructor, it makes sense to also do so with the vectors of the problem. Again, this maintains the similarities with the rest of the solvers. Finally, in my particular case I call the SetVolume_Deformation() function at least as many times as I do with the fluid and the structural solver. The mesh deformation is a third field in the problem, and by initializing the structure at the beginning of the simulation we can reuse the same spaces in memory along the whole of it, given that (at least in unsteady cases) the mesh update routines may be called several times. This way we avoid to be continuously allocating/deallocati",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-148017482:1092,update,update,1092,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-148017482,1,['update'],['update']
Deployability,"here's a trace from my ubuntu machine --. ```; ---------------------- Read Grid File Information -----------------------; Three dimensional problem.; 293290 points before parallel partitioning.; Performing linear partitioning of the grid nodes.; 494258 interior elements before parallel partitioning.; Distributing elements across all ranks.; Calling the partitioning functions.; Getting into adjacency function.; Building the graph adjacency structure.; 5 surface markers.; 10222 boundary elements in index 0 (Marker = aircraft).; 9712 boundary elements in index 1 (Marker = farfield).; 3382 boundary elements in index 2 (Marker = inner_nearfield).; 19738 boundary elements in index 3 (Marker = symmetry).; 3382 boundary elements in index 4 (Marker = outer_nearfield).; Calling ParMETIS...; Traceback (most recent call last):; File ""/home/app/SU2/install/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 61, in main; options.compute ); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; RuntimeError:; Command = mpirun -n 12 /home/app/SU2/install/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '15'; [ubuntu:8553] *** An error occurred in MPI_Wait; [ubuntu:8553] *** on communicator MPI COMMUNICATOR 3 DUP FROM 0; [ubuntu:8553] *** MPI_ERR_TRUNCATE: message truncated; [ubuntu:8553] *** MPI_ERRORS_ARE_FATAL: your MPI job will now abort; --------------------------------------------------------------------------; mpirun has exited due to process rank 9 with PID 8554 on; node ubuntu exiting improperly. There are two reasons this could occur:. 1. this process did not call ""init"" before exiting, but others in; the job did. This can cause a job to hang indefinitely while it waits; for all processes to call ""init"". By rule, if one process calls ""init"",; then ALL processes must call ""init"" prior to termination. 2. this process called ""init"", bu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485283:848,install,install,848,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485283,2,['install'],['install']
Deployability,"hey drewkett,; sorry for the late response... we're getting back in to gear here at school. given the changes that have happend over the last few months, we should move this to a new pull request. this change is important, so would you mind doing this for us? -. pull a fresh copy of the new 'develop' branch. this is the branch we're using to stage new changes, to keep the master branch release ready. ```; git checkout develop; ```. you can make these changes then, commit and then push them back to your develop branch. ```; git commit -m ""description of changes""; git push origin develop; ```. then make a pull request back to the develop branch; let me know if you need any help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/20#issuecomment-56600660:389,release,release,389,https://su2code.github.io,https://github.com/su2code/SU2/pull/20#issuecomment-56600660,1,['release'],['release']
Deployability,"hey drewkett,; thanks for the edit, sorry for the delay just getting back from holiday break. it looks like the request includes c++ changes, probably because the master has changed. could you please update that code and we can accept the python change.; thanks!!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/20#issuecomment-31780927:200,update,update,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/20#issuecomment-31780927,1,['update'],['update']
Deployability,"hine --. ```; ---------------------- Read Grid File Information -----------------------; Three dimensional problem.; 293290 points before parallel partitioning.; Performing linear partitioning of the grid nodes.; 494258 interior elements before parallel partitioning.; Distributing elements across all ranks.; Calling the partitioning functions.; Getting into adjacency function.; Building the graph adjacency structure.; 5 surface markers.; 10222 boundary elements in index 0 (Marker = aircraft).; 9712 boundary elements in index 1 (Marker = farfield).; 3382 boundary elements in index 2 (Marker = inner_nearfield).; 19738 boundary elements in index 3 (Marker = symmetry).; 3382 boundary elements in index 4 (Marker = outer_nearfield).; Calling ParMETIS...; Traceback (most recent call last):; File ""/home/app/SU2/install/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 61, in main; options.compute ); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; RuntimeError:; Command = mpirun -n 12 /home/app/SU2/install/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '15'; [ubuntu:8553] *** An error occurred in MPI_Wait; [ubuntu:8553] *** on communicator MPI COMMUNICATOR 3 DUP FROM 0; [ubuntu:8553] *** MPI_ERR_TRUNCATE: message truncated; [ubuntu:8553] *** MPI_ERRORS_ARE_FATAL: your MPI job will now abort; --------------------------------------------------------------------------; mpirun has exited due to process rank 9 with PID 8554 on; node ubuntu exiting improperly. There are two reasons this could occur:. 1. this process did not call ""init"" before exiting, but others in; the job did. This can cause a job to hang indefinitely while it waits; for all processes to call ""init"". By rule, if one process calls ""init"",; then ALL processes must call ""init"" prior to termination. 2. this process called ""init"", but exited without calling ""finali",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485283:1032,install,install,1032,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485283,1,['install'],['install']
Deployability,"hort array of matrices, the result of that is code like the above that explicitly manipulates the lanes of our SIMD type, such code can be completely hidden inside CSysMatrix which is good because a 4x4 vectorized transpose and matrix update looks like this; ```c++; // block j, subs from jj and goes to ij; T0 = blk_j[ k ].unpackLo(blk_j[k+1]); T1 = blk_j[ k ].unpackHi(blk_j[k+1]);; T2 = blk_j[k+2].unpackLo(blk_j[k+3]); T3 = blk_j[k+2].unpackHi(blk_j[k+3]);. C0 = T0.widePermuteLo(T2); C1 = T1.widePermuteLo(T3);; C2 = T0.widePermuteHi(T2); C3 = T1.widePermuteHi(T3);. (Array4d(&bjj[0][k])-C0).store(&bjj[0][k]);; (Array4d(&bjj[1][k])-C1).store(&bjj[1][k]);; (Array4d(&bjj[2][k])-C2).store(&bjj[2][k]);; (Array4d(&bjj[3][k])-C3).store(&bjj[3][k]);. C0.store(&bij[0][k]); C1.store(&bij[1][k]);; C2.store(&bij[2][k]); C3.store(&bij[3][k]);; ```; I am showing this because it represents a readability worst case in terms of manipulating SIMD types, we might end up with one or two of these to get the best performance possible but they will always be encapsulated and deep in kernel-type areas of SU2 that are almost never touched. ## Conclusions; - Over 45% faster CSysMatrix updates by mapping off-diagonal blocks to edges and diagonal blocks to points.; - Colouring is the best strategy for hybrid parallelism of compute-heavy edge loops and matrix updates as it interleaves compute and memory operations.; - AoS storage should be kept to avoid significant loss of performance in compute-light edge loops due to poor locality of SoA storage.; - Major implication of AoS is on point loops where some data needs to be fetched (transposed) into local variables for effective vectorization.; - An intermediate storage scheme, AoSoA, can provide both good locality and vectorization of point loops, however it requires that data be accessed via special iterators and scalar code based on it would have poor performance. Next I will try to estimate how much we can gain for a ""realistic"" numerics class.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:16719,update,updates,16719,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,4,['update'],['updates']
Deployability,"ild; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1784,install,install,1784,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['install'],['install']
Deployability,"im);; ...; ```; Performance wise this is actually better than the SoA version (4% on gradients, 35% on limiters) as it also benefits from better locality, and it is only slightly (3%) worse than zig zag storage, especially when fusing limiters and gradients as the transposition of the gradient into storage is greatly amortised.; Regarding readability, the 3 nested loops can be moved to methods of the container, but we cannot get rid off the local variable (if we want vectorization that is). **We lose the ability to vectorize primitive variable updates efficiently with AoS** but currently that only accounts for 3% of the runtime and it is a memory bound operation therefore it would not gain much from vectorization anyway. On the subject of de-swizzling data remember I said the writes into CSysMatrix would be a bit weird, that is because each Jacobian contribution will be a ""matrix of short arrays"" that needs to be transformed into a short array of matrices, the result of that is code like the above that explicitly manipulates the lanes of our SIMD type, such code can be completely hidden inside CSysMatrix which is good because a 4x4 vectorized transpose and matrix update looks like this; ```c++; // block j, subs from jj and goes to ij; T0 = blk_j[ k ].unpackLo(blk_j[k+1]); T1 = blk_j[ k ].unpackHi(blk_j[k+1]);; T2 = blk_j[k+2].unpackLo(blk_j[k+3]); T3 = blk_j[k+2].unpackHi(blk_j[k+3]);. C0 = T0.widePermuteLo(T2); C1 = T1.widePermuteLo(T3);; C2 = T0.widePermuteHi(T2); C3 = T1.widePermuteHi(T3);. (Array4d(&bjj[0][k])-C0).store(&bjj[0][k]);; (Array4d(&bjj[1][k])-C1).store(&bjj[1][k]);; (Array4d(&bjj[2][k])-C2).store(&bjj[2][k]);; (Array4d(&bjj[3][k])-C3).store(&bjj[3][k]);. C0.store(&bij[0][k]); C1.store(&bij[1][k]);; C2.store(&bij[2][k]); C3.store(&bij[3][k]);; ```; I am showing this because it represents a readability worst case in terms of manipulating SIMD types, we might end up with one or two of these to get the best performance possible but they will always be enc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:15777,update,update,15777,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['update'],['update']
Deployability,imshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5009,Install,Installing,5009,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"in/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYT",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2670,install,install,2670,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['install'],['install']
Deployability,"in/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_CFD/src/SU2_CFD SU2_CFD/src/SU2_CFD.p/SU2_CFD.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/local/mpich-3.3.2/lib /usr/local/mpich-3.3.2/lib/libmpi.so -lm /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../lib/libudev.so /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../lib/libpciaccess.so /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../lib/libxml2.so /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:3685,install,install,3685,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,2,['install'],['install']
Deployability,"ing MAX_NUMBER_MARKER; - Working version with ParMETIS. Fixed bug in global index. Now clean up and testing...; - Cleaned version of ParMETIS routines with better console output during partitioning.; - Small bug in initial element division.; - Made arrays in ParMETIS call dynamic.; - Fixed compiler warnings and added MPI directives so that the pure serial code works with the ParMETIS routines.; - Bootstrap on zion.; - Added some typecasts. Still tracking down a memory problem...; - Critical bug fix for vtxdist array.; - Partial fix; - More MPI improvements.; - Fixing a bug in SU2_DEF; - Updated BC_ActDisk_Boundary (MPI); - Merge remote-tracking branch 'upstream/develop' into develop; - changing solidboundary setting to be heatflux OR euler etc instead of AND, also working on doxygen documentation; - Dynamic allocation for some marker-related arrays.; - visualize part taken out to match upstream/dev; - Collection of improvements; - Release 3.2.7; - Fixing LOW_MEMORY_OUTPUT; - Updated LOW_MEMORY_OUTPUT option; - Updated configure.ac; - After autoconf; - Updated MPI; - Updated BC_Engine_Exhaust and BC_Engine_Bleed; - Small change; - Fixing subsonic engine intake option; - Small output change; - Added output_su2.cpp; - Updated Engine BC; - Working on Engine BCs; - Added Supersonic Outlet BC; - Minor change; - Merge remote-tracking branch 'upstream/develop' into develop; - adjoints, solid boundary, doxygen in config; - continued fixing; - re-added adjoint bc mods; - re-adding avg outlet pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment o",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:2953,Update,Updated,2953,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['Update'],['Updated']
Deployability,ing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:2249,Install,Installing,2249,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"ing the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Underst",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1237,configurat,configuration,1237,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809,2,['configurat'],['configuration']
Deployability,itical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc); - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Another important updated to BC in parallel; - More implementation and clean up of the paralle,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:5614,Update,Updated,5614,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,6,"['Update', 'release', 'update']","['Updated', 'release', 'update']"
Deployability,"ix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ninja",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2542,Configurat,Configuration,2542,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610,5,"['Configurat', 'configurat', 'install', 'update']","['Configuration', 'configuration', 'install', 'update']"
Deployability,"les/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/x86_64-w64-mingw32/8.1.0/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Trace",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12276,Release,Release,12276,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Release'],['Release']
Deployability,"license did not change, so no need to update that file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1726#issuecomment-1198611591:38,update,update,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/1726#issuecomment-1198611591,1,['update'],['update']
Deployability,limshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackag,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:2117,Install,Installing,2117,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,location.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc);,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:5458,Update,Updated,5458,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,5,"['Release', 'Update']","['Release', 'Updated']"
Deployability,"looks good to me, except that there are conflicts. Please fix the conflict - see command line instructions provided by github - and push the change into your branch. When your branch is updated the pull request will be automatically updated and the regression test will be run.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/214#issuecomment-162606139:186,update,updated,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/214#issuecomment-162606139,2,['update'],['updated']
Deployability,"lude()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in proje",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8406,install,install,8406,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['install'],['install']
Deployability,"lux = 0.5*(phiL+phiR);. residual(iPoint,iVar) += flux;; residual(jPoint,iVar) -= flux;; }; }; }; ```; after vectorizing this to handle multiple edges simultaneously with the SIMD-friendly type the core of the loop becomes; ```c++; using FltVec = Array<double,SIMDLEN>;; ... FltVec d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = (coords.getVec(jPoint,iDim)-coords.getVec(iPoint,iDim))*0.5;. for(size_t iVar=0; iVar<nVar; ++iVar); {; FltVec phiL = 0.0;; FltVec phiR = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); {; phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; phiR -= grad.getVec(jPoint,iVar,iDim)*d_ij[iDim];; }. phiL = phi.getVec(iPoint,iVar) + limiter.getVec(iPoint,iVar)*phiL;; phiR = phi.getVec(jPoint,iVar) + limiter.getVec(jPoint,iVar)*phiR;. FltVec flux = (phiL+phiR)*0.5;. for(size_t k=0; k<SIMDLEN; ++k) {; residual(iPoint[k],iVar) += flux[k];; residual(jPoint[k],iVar) -= flux[k];; }; }; ```; Note that at the end of the loop we need to de-swizzle the flux to update the multiple indexes references by iPoint and jPoint, which are now short arrays of integers (this operation can be moved to the container, akin to `getVec` but I show it here for clarity). **With SoA (aka column major storage) this code is 1.5 times slower than the scalar version.**. The reason for that is poor locality (of the spacial variety), as we loop through the number of variables and dimensions we are accessing the data in strides of nPoint, as the contiguous index is the first one so that we can perform vector read/writes when computing gradients and limiters.; With the scalar version the data for each point is contiguous which means on the first access we get whatever extra data is on the same cache line for free and subsequent accesses will be hardware prefetched since the stride is small (1 in this case). We lose all this with SoA storage. If we go back to arrays of structures (AoS, aka row major storage, basically what we have in #753) performance is only 9% worse (th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:8006,update,update,8006,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['update'],['update']
Deployability,m/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc); - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Another important updated to BC in parallel; - More implementation and clean up of the parallel CGNS reader.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - CGNS reader bug fix.; - Updated adj. NS solver with primitive variables and farfield bc including viscous contribution.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Small change; - Back to the previous version; - Fixed some loop variables.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixes for CGNS.; - New slope limiter based on the wall distance; - Me,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:6124,Update,Updated,6124,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['Update'],['Updated']
Deployability,mall change; - Back to the previous version; - Fixed some loop variables.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixes for CGNS.; - New slope limiter based on the wall distance; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - Non-dimensional adjoint bc; - CGNS bug.; - Mixed-element support in new CGNS reader.; - Memory fix for mixed-element CGNS in parallel.; - Activated the parallel CGNS reader.; - New FFD input; - Adjacency building for Parmetis improve to account for VTK structure; - added if viscous steps to some adjeuler bcs; - Minor changes; - Back to previous version of ParMetis; - Small change; - Final update.; - Minor bug fixed.; - Updated SU2_DEF (cgns); - CGNS global element ID bug fix.; - Heat flux bug fix.; - Small fix.; - Merge branch 'master' into develop; - changed history output to match # of residuals printed in header and body; - further correction to history output; - history file fix; - fixed history output such that massflowrate can be output while in rans; - Removed Parmetis updates to adjacency; - Minor changes; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - ver 3.2.8.3; - Updated CGNS in parallel.; - Added the ability to writting 2 files at each checkpoint when using 2nd order dual time stepping; - Merge branch 'develop' into feature_dualoutput; - Updated FieldView; - Preliminary implementation (ASCII); - Minor changes; - Update code; - Updated FieldView format; - Merge branch 'develop' into feature_dualoutput; - Bug fixing; - Updated FieldView ASCII format; - Complete implementation of the FFD_CONTINUITY capability; - Updated FFD intersections; - ver 3.2.9; - adding targetea file to equivalent area adjoint folder. address issue #160; - Merge branch 'develop' of github.com:su2code/SU2 into develop; - Final push to v3.2.9; - after bootstrap; - updates to comments in config_structure to make doxygen pretty; - Bug fixing; -,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:8051,update,updates,8051,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['update'],['updates']
Deployability,me/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPa,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:1859,Install,Installing,1859,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"meson.build does indeed look short and clean. Tried this on mac, and hit the following error (I guess the OS is more picky?):. ERROR: Could not detect Ninja v1.5 or newer. Any issue with updating to a newer ninja version in the bootstrap? . Also, for older git versions (like mine apparently), you may need to add the --init and --recursive flags to 'git submodule update'",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-495097393:365,update,update,365,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-495097393,1,['update'],['update']
Deployability,"mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 245, in run; app.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 159, in generate; self._generate(env); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 215, in _generate; intr.backend.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 321, in generate; self.generate_target(t); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 641, in generate_target; elem = self.generate_link(target, outname, obj_list, linker, pch_objects, stdlib_args=stdlib_args); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:13071,install,install,13071,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,2,['install'],['install']
Deployability,"mme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; Running compile:; Working directory: D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo; Command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\testfile.cpp -o D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\output.obj -pipe -c -O0 -fpermissive --print-search-dirs ; ; Code:; ; Compiler stdout:; install: C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/; programs: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:9342,install,install,9342,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,2,['install'],['install']
Deployability,"more info on that, the patch need to be more clever. in fact the width (32 or 64 bits) of the elementary data type; used in METIS is controled by the IDXTYPEWIDTH; constant.; For now, on a 32 bit architecture you can only specify a width of 32,; whereas for a 64 bit architecture you can specify a width of either; 32 or 64 bits. and under Fedora and Mageia the metis package set the width to 64 on 64 bit architecture",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/19#issuecomment-30085781:23,patch,patch,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/19#issuecomment-30085781,1,['patch'],['patch']
Deployability,mshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7170,Install,Installing,7170,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,mshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackag,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7444,Install,Installing,7444,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,mshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/Use,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7580,Install,Installing,7580,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"my late reply and thanks Heather for opening this important discussion.; I fully agree with you and OBJECTIVE_FUNCTION and OPT_OBJECTIVE cause confusion. As far I see the problem, if we focus on a typical users point of view, I think that OPT_OBJECTIVE and OPT_CONSTRAINT must be in the config file and as close as possible. They are the key to define an optimization problem (one of the key features of SU2). On the other hand, as you suggested we need to add some flexibility. It would be interesting to to able to define a multi-objective like; OPT_OBJECTIVE= DRAG \* DRAG_WEIGHT; LIFT^2 \* LIFT^2_WEIGHT;. As Tim pointed out OBJECTIVE_FUNCTION is important because is what we use to play and develop the adjoint capability but, from the users point of view it is not as interesting as the OPT_OBJECTIVE. If everything works ok, OPT_OBJECTIVE should be enough for most of the SU2 users. How many typical users are interested in solving and adjoint problem for the sake of solving of an adjoint problem?. However OBJECTIVE_FUNCTION is not a good name, from the point of view of the continuous adjoint, I would feel comfortable if we change it to ADJ_BND_CONDITION. That probably doesn't work for the discrete adjoint, isn't it? Tim, What key word would work for the Discrete Adjoint? We need something that reflect the effect, in mathematical terms, of the objective function in the AD adjoint problem. Finally, before adding any capability we should ask ourself how general is going to be and if it going to be useful for the most part of the SU2 users community (in my opinion, external aerodynamics). If the new objective function is only useful for us, or a research project, then I think we need to create some kind of custom objective function, (e.g. CUSTOM_OBJFUNC at the same level than DRAG, LIFT, etc) that we can describe with other set of parameters. Thanks,; Francisco. ‚Äî; Reply to this email directly or view it on GitHubhttps://github.com/su2code/SU2/pull/241#issuecomment-187255862.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-187268164:1561,continuous,continuous,1561,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-187268164,1,['continuous'],['continuous']
Deployability,"ne BC; - Working on Engine BCs; - Added Supersonic Outlet BC; - Minor change; - Merge remote-tracking branch 'upstream/develop' into develop; - adjoints, solid boundary, doxygen in config; - continued fixing; - re-added adjoint bc mods; - re-adding avg outlet pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Pre",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:4216,update,update,4216,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['update'],['update']
Deployability,"nectivity.second_vec(iEdge);. FltVec d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = (coords.getVec(jPoint,iDim)-coords.getVec(iPoint,iDim))*0.5;. FltVec phiL[MAXNVAR], phiR[MAXNVAR], flux[MAXNVAR],; blk_i[MAXNVAR*MAXNVAR],; blk_j[MAXNVAR*MAXNVAR];. for(size_t iVar=0; iVar<nVar; ++iVar); {; // Reconstruction goes here. flux[iVar] = (phiL[iVar]+phiR[iVar])*0.5;; }. // some silly way to make the Jacobians depend on the reconstruction; for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t jVar=0; jVar<nVar; ++jVar); blk_j[iVar*nVar+jVar] = (phiL[iVar]*phiR[jVar]-phiL[jVar]*phiR[iVar])*0.5;. // the matrix-matrix multiplications; for(size_t i=0; i<WORKITERS; ++i) {; // blk_i = blk_j * blk_j; for(size_t k=0; k<nVar*nVar; ++k) blk_j[k] = blk_i[k];; }. // something akin to a dissipation term; for(size_t iVar=0; iVar<nVar; ++iVar) {; FltVec sum = flux[iVar];; for(size_t kVar=0; kVar<nVar; ++kVar); sum += blk_j[iVar*nVar+kVar]*(phiL[kVar]-phiR[kVar])*0.5;. // residuals for iPoint and jPoint updated here. matrix.updateBlocks_v(color, iEdge, iPoint, jPoint, blk_i, blk_j);; }; ++color;; }; }; ```; The more WORKITERS we have the better the vectorized code is going to look, I used a conservative number based on:; For the Roe scheme 4 matrices are generated (Jacobian i, Jacobian j, P tensor, P^-1 tensor), each coefficient of those matrices requires a reasonable number of floating point ops, and two of those matrices are indeed multiplied by each other.; So lets say 5 matrix-matrix multiplications are representative, this should be a conservative estimate as I am not considering the eventual fusion of convective and diffusive discretizations. **The vectorized code is 1.5 times faster.**; This is a fair 1.5 as the code is running on 4 fast cores (parallel via colouring for the reasons I explained previously) and 2 memory channels (scalar code can eventually saturate the memory bandwidth too, but it would take an unreasonable ratio of cores to channels to do so).; Furth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539177957:2242,update,updated,2242,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539177957,2,['update'],['updated']
Deployability,"ned on different markers.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/237 https://github.com/su2code/SU2/pull/237; > Commit Summary; > ; > config options updated to be compatible with multiple objectives - mdo not yet implemented; > python tools; > python adjusted for multiple objectives: will always run 1st objective only with continuous adjoint, but will run separate continuous adjoint evaluations within optimization; > continuous adjoint evaluates the requested objectives; > fixing some errors; > File Changes; > ; > M Common/include/config_structure.hpp https://github.com/su2code/SU2/pull/237/files#diff-0 (20); > M Common/include/config_structure.inl https://github.com/su2code/SU2/pull/237/files#diff-1 (6); > M Common/src/config_structure.cpp https://github.com/su2code/SU2/pull/237/files#diff-2 (90); > M SU2_PY/SU2/eval/design.py https://github.com/su2code/SU2/pull/237/files#diff-3 (8); > M SU2_PY/SU2/eval/functions.py https://github.com/su2code/SU2/pull/237/files#diff-4 (14); > M SU2_PY/SU2/eval/gradients.py https://github.com/su2code/SU2/pull/237/files#diff-5 (4); > M SU2_PY/SU2/io/config.py https://github.com/su2code/SU2/pull/237/files#diff-6 (21); > M SU2_PY/SU2/io/tools.py https://github.com/su2code/SU2/pull/237/files#diff-7 (21); > M SU2_PY/SU2/opt/project.py https://github.com/su2code/SU2/pull/237/files#diff-8 (2); > M SU2_PY/SU2/opt/scipy_tools.py https://github.com/su2code/SU2/pull/237/files#diff-9 (24); > M SU2_PY/SU2/run/projection.py https://github.com/su2code/SU2/pull/237/files#diff-10 (4); > M SU2_PY/continuous_adjoint.py https://github.com/su2code/SU2/pull/237/files#diff-11 (22); > Patch Links:; > ; > https://github.com/su2code/SU2/pull/237.patch https://github.com/su2code/SU2/pull/237.patch; > https://github.com/su2code/SU2/pull/237.diff https://github.com/su2code/SU2/pull/237.diff; > ‚Äî; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/pull/237.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/237#issuecomment-182175757:2792,Patch,Patch,2792,https://su2code.github.io,https://github.com/su2code/SU2/pull/237#issuecomment-182175757,3,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"ng with Codi; * Enable modules:; * SU2_ENABLE_CGNS:; * SU2_CGNS_CPPFLAGS: flags to pass when compiling CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON; * SU2_PARMETIS_CPPFLAGS: flags to pass when compiling Parmetis; * SU2_ENABLE_TECIO: ON|OFF; * SU2_TECIO_CPPFLAGS: flags to pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My contribution is commented and consistent with SU2 style.; * I have added a test case that demonstrates my contribution, if necessary. _________________________",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:3098,install,install,3098,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,2,['install'],['install']
Deployability,"nother place (or lab server) and in Github we only had the config files, unfortunately we checked that for some users it was frustrating to download the config files and then go to another place to download the grids. From our practical point of view, the current setting is ideal to run the regression tests. But we are open to any change that benefits the SU2 users/developers community. . Now, it is very easy to download and modify the TestCases (keep in mind that the options in the config files change frequently) but, the price to pay is a large GitHub repository that it is difficult to download if you don‚Äôt have a good internet connection. Anyway, I think you are coming to Stanford in one week, it would be great to chat with you. We would love to have you and your group as a SU2 developer/user. Looking forward to meeting you and thanks for testing SU2. Best; Francisco. ## . Dr. Francisco Palacios; Engineering Research Associate at Stanford University; AIAA Senior Member, SIAM Member, and SU2 lead developer; Editorial Board Member for Scientific Report (Nature Publishing Group); Intel Parallel Computing Center. Personal webpage: http://adl.stanford.edu/people/fpalacios.html; SU2 webpage: http://su2.stanford.edu/. Department of Aeronautics and Astronautics; Durand Building. Room 357; Stanford University; Stanford CA 94305; United States. On Feb 3, 2015, at 1:32 PM, Lorena A. Barba notifications@github.com wrote:. > And why is your Test repo so large?; > Perhaps some data files would be happier living elsewhere?; > ; > I'm thinking that if your Tests load large mesh files, for example, these mesh files could be placed in a data repository (like Figshare, Data Dryad, Zenodo), and your configuration files for each test could fetch the data it needs. I would imagine that the input data does not change often (or perhaps ever?) and one permalink and DOI is better suited for data than a version-controlled repo.; > ; > ‚Äî; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72909446:1996,configurat,configuration,1996,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72909446,1,['configurat'],['configuration']
Deployability,ode/SU2 into develop; - Another important updated to BC in parallel; - More implementation and clean up of the parallel CGNS reader.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - CGNS reader bug fix.; - Updated adj. NS solver with primitive variables and farfield bc including viscous contribution.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Small change; - Back to the previous version; - Fixed some loop variables.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixes for CGNS.; - New slope limiter based on the wall distance; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - Non-dimensional adjoint bc; - CGNS bug.; - Mixed-element support in new CGNS reader.; - Memory fix for mixed-element CGNS in parallel.; - Activated the parallel CGNS reader.; - New FFD input; - Adjacency building for Parmetis improve to account for VTK structure; - added if viscous steps to some adjeuler bcs; - Minor changes; - Back to previous version of ParMetis; - Small change; - Final update.; - Minor bug fixed.; - Updated SU2_DEF (cgns); - CGNS global element ID bug fix.; - Heat flux bug fix.; - Small fix.; - Merge branch 'master' into develop; - changed history output to match # of residuals printed in header and body; - further correction to history output; - history file fix; - fixed history output such that massflowrate can be output while in rans; - Removed Parmetis updates to adjacency; - Minor changes; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - ver 3.2.8.3; - Updated CGNS in parallel.; - Added the ability to writting 2 files at each checkpoint when using 2nd order dual time stepping; - Merge branch 'develop' into feature_dualoutput; - Updated FieldView; - Preliminary implementation (ASCII); - Minor changes; - Update code; - Updated FieldView format; - Merge branch 'develop' into feature_dualoutput; - Bug fixi,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:7656,update,update,7656,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['update'],['update']
Deployability,"of AND, also working on doxygen documentation; - Dynamic allocation for some marker-related arrays.; - visualize part taken out to match upstream/dev; - Collection of improvements; - Release 3.2.7; - Fixing LOW_MEMORY_OUTPUT; - Updated LOW_MEMORY_OUTPUT option; - Updated configure.ac; - After autoconf; - Updated MPI; - Updated BC_Engine_Exhaust and BC_Engine_Bleed; - Small change; - Fixing subsonic engine intake option; - Small output change; - Added output_su2.cpp; - Updated Engine BC; - Working on Engine BCs; - Added Supersonic Outlet BC; - Minor change; - Merge remote-tracking branch 'upstream/develop' into develop; - adjoints, solid boundary, doxygen in config; - continued fixing; - re-added adjoint bc mods; - re-adding avg outlet pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:3806,Update,Updated,3806,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Update'],['Updated']
Deployability,"ogramming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...).""; I try to encapsulate and hide the tricky bits as much as possible to make the code as readable as possible, whether I am succeeding or not is for the community to decide, in all these PR's I've been pointing to the areas I think are trickier, if someone, anyone, feels they are absolutely incomprehensible please say something... either here, or trough slack, or by email (I think it shows in the commits) (I understand not everyone is keen on github exposure). > I'm aware that you have been doing very well at documenting the code and the various PRs, but I'd say we should try to find an strategy to ease the learning curve on potential new developers (maybe some developer tutorials? a collection of the comments/discussions on the PRs moved to the wiki? a list of links/useful resources?). I agree with documentation of broad design decisions, that is the intent of #789, and developer tutorials (how to implement a new X) once we are content with the restructurings, otherwise they will quickly go outdated... or actually...; We should probably first think about the answers to ""how to implement a new X"" and restructure/refactor as a function of that.; Based on previous efforts of maintaining wiki's updated while code is being developed, I much prefer this github style where you can clearly tell what version of the code the comments refer to. A collection of comments/discussions organized by topic and linked to a feature is somewhat what I had in mind when I opened a ""big PR"" (#824) with little branches such as this one, I can try to complete that with a list of links/useful resources, references as it were, good idea!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:5176,update,updated,5176,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,2,['update'],['updated']
Deployability,ons.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5541,Install,Installing,5541,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"ons@github.com<mailto:notifications@github.com>> wrote:. Hey guys,. the code now works for multizone periodic meshes. After the FSI meeting of yesterday i had a small chat with Ruben and it showed me what was most likely the problem in the geometry_structure.cpp preventing the run of a multizone periodic mesh. I slightly modified the loop, actually now there are 2 loops one reading the marker and another reading the periodic transformations and it works. Thomas your implementation of the multi rotating frame is also working, so now is possible to specify different rotational speeds for each mesh. I attached a picture of a simulation with 2 meshes one with rotational speed and one without. The simulation of the picture doesn¬¥t have any particular meaning, it was just to check if two periodic mesh with 2 different rotational speed can be simultaneously run by SU2. cheers!!!. [2periodicmesh_multirotating]https://cloud.githubusercontent.com/assets/6718364/8984481/2f80c900-36d2-11e5-973d-f72adc9a476a.jpg. ---. You can view, comment on, or merge this pull request online at:. https://github.com/su2code/SU2/pull/186. Commit Summary; - Modified grid movement options and set up to allow multiple rotating frames with multi-zone calculations.; - fix problem reading multizone mesh periodic. File Changes; - M Common/include/geometry_structure.hpphttps://github.com/su2code/SU2/pull/186/files#diff-0 (9); - M Common/include/geometry_structure.inlhttps://github.com/su2code/SU2/pull/186/files#diff-1 (2); - M Common/src/config_structure.cpphttps://github.com/su2code/SU2/pull/186/files#diff-2 (5); - M Common/src/geometry_structure.cpphttps://github.com/su2code/SU2/pull/186/files#diff-3 (38); - M SU2_CFD/src/iteration_structure.cpphttps://github.com/su2code/SU2/pull/186/files#diff-4 (8). Patch Links:; - https://github.com/su2code/SU2/pull/186.patch; - https://github.com/su2code/SU2/pull/186.diff. ‚Äî; Reply to this email directly or view it on GitHubhttps://github.com/su2code/SU2/pull/186.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/186#issuecomment-126368067:1886,Patch,Patch,1886,https://su2code.github.io,https://github.com/su2code/SU2/pull/186#issuecomment-126368067,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"onstructor of CSysMatrix by using 'new', and calling the StiffMatrix.Initialize() method, for what I see in matrix_structure.cpp. Also, StiffMatrix is a sparse matrix (nDim x nPoint) x (nDim x nPoint), which must be allocated correctly using the Initialize method to avoid carrying around lots of zeros. With regards to the other point, I think that it is interesting to use the Initialize features of the CSysVector and CSysMatrix in the constructor of the class, just as it happens in the rest of the solver classes (see for example solver_direct_mean, line 261, where the Jacobian of the problem is initialized using a Jacobian.Initialize() call in the constructor). As far as I see it, the mesh update problem is nothing but a copy of the linear elasticity problem, so maintaining the parallelism with all the other solvers in the code (and, in particular, with the structural solver) may be interesting. . Moreover, by allocating the memory in the constructor using StiffMatrix.Initialize(nPoint, nPointDomain...) we make sure we can use the linear solvers in parallel by building a compliant sparse matrix. And if we allocate the stiffness matrix in the constructor, it makes sense to also do so with the vectors of the problem. Again, this maintains the similarities with the rest of the solvers. Finally, in my particular case I call the SetVolume_Deformation() function at least as many times as I do with the fluid and the structural solver. The mesh deformation is a third field in the problem, and by initializing the structure at the beginning of the simulation we can reuse the same spaces in memory along the whole of it, given that (at least in unsteady cases) the mesh update routines may be called several times. This way we avoid to be continuously allocating/deallocating memory. Also, this is useful to have a more accurate measure of the amount of memory we will be using along the simulation right at the beginning of the calculation - although peaks of memory are unavoidable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-148017482:2079,update,update,2079,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-148017482,2,"['continuous', 'update']","['continuously', 'update']"
Deployability,"ops, this will NOT be done by super gluing convective and viscous numerics. I do not have a concrete design in mind yet but I hope to be able to do something akin to the *decorator* pattern I mentioned before. I also plan to make the numerics a full-fledged *visitor* to reduce compilation dependencies, currently a change to numerics may affect CVariable CSolver and CNumerics (as mentioned by @clarkpede), CSolver is involved because it is responsible for fetching data, I may move that to CNumerics, which would let them fetch data as needed.; - Lookup accesses to CSysMatrix to avoid linear searches, the small increase in memory usage can be mitigated by sharing these lookup tables/arrays and the sparsity pattern between matrices associated with the same geometry (on the subject of these lookup tables, knowing where the diagonal of a row is should enable more efficient upper/lower multiplications). ## Work items; This is a lot of work and some changes will be significant, I will divide the work in steps, off the top of my head this order seems ok:; - CSysMatrix lookups and any required parallel pragmas put in place.; - Point-loop gradients and limiters, no SIMD (at which point I hope #777 to be finished so the next item does not disrupt it).; - Split CSolvers over multiple files, colour-based parallel residual loops (at this point we have hybrid parallel!).; - Contiguous storage of CGeometry members (to eventually enable vectorization).; - Split CNumerics over files, architecture for fusing convective and viscous loops (the most disruptive change).; - SIMD, of gradients, limiters, and numerics. SIMD in CSysMatrix can be started anywhere after item 1. If you foresee conflicts with your ongoing work let's start talking sooner rather than later, I tried to order items to delay major disruptions as much as possible.; Also I would prefer not to take the silence of the community as acceptance, when you have a minute to spare (after the 7.0 release) please leave your opinion.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539523312:4964,release,release,4964,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539523312,1,['release'],['release']
Deployability,"opt/xcat/sbin; PATH: /usr/lib64/qt-3.3/bin; PATH: /opt/pbs/default/bin; PATH: /opt/pbs/tools/bin; PATH: /usr/lpp/mmfs/bin/; PATH: /usr/local/bin; PATH: /bin; PATH: /usr/bin; PATH: /usr/local/sbin; PATH: /usr/sbin; PATH: /sbin; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: .; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: . ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2465: checking build system type; configure:2479: result: x86_64-unknown-linux-gnu; configure:2499: checking host system type; configure:2512: result: x86_64-unknown-linux-gnu; configure:2532: checking target system type; configure:2545: result: x86_64-unknown-linux-gnu; configure:2587: checking for a BSD-compatible install; configure:2655: result: /usr/bin/install -c; configure:2666: checking whether build environment is sane; configure:2721: result: yes; configure:2872: checking for a thread-safe mkdir -p; configure:2911: result: /bin/mkdir -p; configure:2918: checking for gawk; configure:2934: found /bin/gawk; configure:2945: result: gawk; configure:2956: checking whether make sets $(MAKE); configure:2978: result: yes; configure:3075: checking whether make supports nested variables; configure:3092: result: yes; configure:3117: checking for style of include used by make; configure:3145: result: GNU; configure:3196: result: >>> MPI support disabled by default <<<; configure:3269: checking for g++; configure:3285: found /usr/bin/g++; configure:3296: result: g++; configure:3323: checking for C++ compiler version; configure:3332: g++ --version >&5; g++ (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3343: $? = 0; configure:3332: g++ -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:1919,install,install,1919,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['install'],['install']
Deployability,"or my own late answer as well. I am trying to install now the SU2 6.2.0 Falcon. It is the one I particularly need for a program that calls this program for Aeroelastic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. ‚Äî; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202:1031,release,release,1031,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202,2,['release'],['release']
Deployability,"or the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. ‚Äî; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5lTmsMaJ6%2Fgx7gHoyM%3D&reserved=0>, or unsubscribe<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FATHYUQAJN6RB6GCI7QDTE7LTE7POTANCNFSM4ZHARKPQ&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150593131",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202:1362,install,installed,1362,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202,2,['install'],['installed']
Deployability,"ore parallel partitioning.; Performing linear partitioning of the grid nodes.; 494258 interior elements before parallel partitioning.; Distributing elements across all ranks.; Calling the partitioning functions.; Getting into adjacency function.; Building the graph adjacency structure.; 5 surface markers.; 10222 boundary elements in index 0 (Marker = aircraft).; 9712 boundary elements in index 1 (Marker = farfield).; 3382 boundary elements in index 2 (Marker = inner_nearfield).; 19738 boundary elements in index 3 (Marker = symmetry).; 3382 boundary elements in index 4 (Marker = outer_nearfield).; Calling ParMETIS...; Traceback (most recent call last):; File ""/home/app/SU2/install/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 61, in main; options.compute ); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; RuntimeError:; Command = mpirun -n 12 /home/app/SU2/install/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '15'; [ubuntu:8553] *** An error occurred in MPI_Wait; [ubuntu:8553] *** on communicator MPI COMMUNICATOR 3 DUP FROM 0; [ubuntu:8553] *** MPI_ERR_TRUNCATE: message truncated; [ubuntu:8553] *** MPI_ERRORS_ARE_FATAL: your MPI job will now abort; --------------------------------------------------------------------------; mpirun has exited due to process rank 9 with PID 8554 on; node ubuntu exiting improperly. There are two reasons this could occur:. 1. this process did not call ""init"" before exiting, but others in; the job did. This can cause a job to hang indefinitely while it waits; for all processes to call ""init"". By rule, if one process calls ""init"",; then ALL processes must call ""init"" prior to termination. 2. this process called ""init"", but exited without calling ""finalize"".; By rule, all processes that call ""init"" MUST call ""finalize"" prior to; exiting or it will be considered an ""abnormal termination""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485283:1185,install,install,1185,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485283,1,['install'],['install']
Deployability,"ork; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4538,integrat,integrated,4538,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['integrat'],['integrated']
Deployability,ory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/U,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:1598,Install,Installing,1598,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"oup at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial College London. |; -------------------------------------------------------------------------; | Copyright (C) 2012-2015 SU2, the open-source CFD code. |; | |; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /home/antodech/SU2-4.1.0; Install location: /gshare/work/hpascalj/CodeSU2-master; Version: 4.1.0; C++ Compiler: g++; C Compiler: gcc; Preprocessor flags: ; Compiler flags: -g -O2; Linker flags: ; MPI support: no; Metis support: no; Parmetis support: no; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: no; LAPACK support: no; Datatype support:; double yes; complex no; codi_reverse no; codi_forward no. External includes: ; External libs: . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: yes; Build SU2_DEF: yes; Build SU2_SOL: yes; Build SU2_GEO: yes. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=""/gshare/work/hpascalj/CodeSU2-master/bin""; export SU2_HOME=""/home/antodech/SU",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:18415,Configurat,Configuration,18415,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,1,['Configurat'],['Configuration']
Deployability,"output classes, we should find a common level of abstraction for all the different physical problems we might want to have. Right now there isn't even a unified way of specifying the kind of problem for each zone (what is fluid, what is solid etc) and the kind of coupling. This might also affect the actual implementation/restructuring since we somehow have to decide what driver we have to instantiate and so on. Hopefully we can gather all the people involved to have a discussion on that. Since we have a lot of people working in their branches on multizone problems we should tackle that better sooner than later. As Edwin already suggested, maybe it is a good idea to put some people in charge of organizing some of the bigger structural changes. Furthermore in case some people don't know, we have a slack channel for the dev team. I think that makes it easier to communicate, arrange meetings, discuss problems and ask questions. In case you need an invite, let me know, everybody who wants to contribute is welcome. Thanks for the discussion, I still think that communication is the key of success !. Tim. On Sep 13, 2017 10:30 AM, Edwin van der Weide <notifications@github.com> wrote:. Hi Tom,. Sounds like a plan then to have a look at CIntegration to see what we can do to generalize the time integration. I definitely want to help with this, but I don't think I am the appropriate person to take the lead, because I simply don't have a good overview of all the multi-physics options. Tom, are you willing to take the lead for this?. Furthermore, it is good to have other people involved as well, preferably with detailed knowledge of the different disciplines. Any volunteers?. Thanks,. Edwin. ‚Äî; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-329096830>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AEtI5MkXdqhqPPMuaDziLuDRzWCJfYwrks5sh5KagaJpZM4PQ90s>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329146567:1347,integrat,integration,1347,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329146567,2,['integrat'],['integration']
Deployability,"pecasts. Still tracking down a memory problem...; - Critical bug fix for vtxdist array.; - Partial fix; - More MPI improvements.; - Fixing a bug in SU2_DEF; - Updated BC_ActDisk_Boundary (MPI); - Merge remote-tracking branch 'upstream/develop' into develop; - changing solidboundary setting to be heatflux OR euler etc instead of AND, also working on doxygen documentation; - Dynamic allocation for some marker-related arrays.; - visualize part taken out to match upstream/dev; - Collection of improvements; - Release 3.2.7; - Fixing LOW_MEMORY_OUTPUT; - Updated LOW_MEMORY_OUTPUT option; - Updated configure.ac; - After autoconf; - Updated MPI; - Updated BC_Engine_Exhaust and BC_Engine_Bleed; - Small change; - Fixing subsonic engine intake option; - Small output change; - Added output_su2.cpp; - Updated Engine BC; - Working on Engine BCs; - Added Supersonic Outlet BC; - Minor change; - Merge remote-tracking branch 'upstream/develop' into develop; - adjoints, solid boundary, doxygen in config; - continued fixing; - re-added adjoint bc mods; - re-adding avg outlet pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:3198,Update,Updated,3198,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Update'],['Updated']
Deployability,"pre- and post- update are referring to restart files created before applying this updated file and restart files created by this updated file, respectively.; When I try to run a restart file, the output proceeds to ""Initialize Jacobian structure (SST model)."" and then does not progress any further.; The restart files were created in the same folder.; Copies of the files were made in between the runs, but otherwise, I believe it still qualifies as back-to-back. (For the post-updated file; the pre-updated restart case is not ""back-to-back"" in a strict interpretation as the software was updated)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1342#issuecomment-891988465:15,update,update,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-891988465,6,['update'],"['update', 'updated']"
Deployability,pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAX,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:4468,update,update,4468,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,3,"['Update', 'update']","['Updated', 'update']"
Deployability,prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works o,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:5258,update,updates,5258,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['update'],['updates']
Deployability,"process is very helpful and cmake is definitely becoming a standard. Best,. Juan. On Nov 10, 2019, at 11:24 AM, Daumantas Kavolis <notifications@github.com> wrote:. Ôªø; Proposed Changes. Added CMake build support for SU2. With this, many popular IDEs will be able to use SU2 as a project with minimal setup. CMake also enables to add dependencies more easily since most libraries have CMake support. vcpkg is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use preconfigure.py anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is ${CMAKE_PREFIX_PATH}/bin. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile pySU2ad with Nothing known about namespace 'medi' in Common/include/mpi_structure.hpp:57 without -includeall SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing using namespace declarations and either importing used symbols explicitly with using or prepending namespace name, clang-tidy warns against them by default and it makes the code clearer. SU2 CMake options are:. * Build modules:; * SU2_BUILD_CFD: ON|OFF; * SU2_BUILD_DEF: ON|OFF, disabled when building with Codi; * SU2_BUILD_DOT: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_GEO: ON|OFF, disabled when building with Codi; * SU2_BUILD_MSH: ON|OFF, disabled when building with Codi; * SU2_BUILD_PY_WRAPPER: ON|OFF, disabled when building with Codi forward; * SU2_B",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:1049,install,installation,1049,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,2,['install'],['installation']
Deployability,"putation/storage of the unit normal (and a tangent to this normal) the current implementation of BC_Sym cannot be ""exploited"" to serve as an ""inviscid (slip) wall"" for non-straight markers. Using `MARKER_EULER= ( sym )` is not correct either as the gradients of the velocity components (used in the viscous stress tensor of the momentum equations) are not computed correctly for the reflected state. Although using MARKER_EULER in the current develop will give you the same results as the master (or older develop before #657 ) with MARKER_SYM (... as it uses the same implementation). If you pull the ""Preprocessing"" part from the develop Sym_BC into the loop over all vertices of the boundary marker, the unit normal (and tangential) gets recomputed for each vertex. That gives you results which should be a lot closer to what happens in the master. Plus handling the velocity gradient correctly. From my point of view this would be the correct way.; Apply this patch in the root of the latest develop code using `patch -p1 < SymAsInviscidSlipWall.diff` to get the code I mean. [SymAsInviscidSlipWall.diff.txt](https://github.com/su2code/SU2/files/3417354/SymAsInviscidSlipWall.diff.txt). The implementation of the Symmetry_BC could serve double as 'Inviscid (slip) wall' (which is prescribed in the NASA documents) for viscous flow if the 'Preprocessing' part gets recomputed for each boundary vertex. But how to integrate that best is s.th. to discuss. One could just pull it in at some higher computational cost, put a conditional together with a boolean (e.g. SYMMETRY_AS_SLIP_WALL= YES) or fixing and using MARKER_EULER for that case. I hope that clarifies what happens with that boundary. Please let me know if that works for you and fixes the issue. When I fixed the Regression Testcases for #657 i think that this one was not part of it, right? Maybe this validation case goes into the su2code/VandV repo :) . Cheers,Tobi. Edit: I think we can all agree, that it is Toms fault due to his req",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513801538:1850,patch,patch,1850,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513801538,2,['patch'],['patch']
Deployability,py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5676,Install,Installing,5676,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2956,Configurat,Configuration,2956,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['Configurat'],['Configuration']
Deployability,"r a 3D problem) but I can get that back by sharing sparsity patterns and maps across turbulence and bulk flow (I think @talbring was already working on this in the template linear solver branch he had started). We could also parallelize the matrix updates without colouring by setting only the off-diagonal coefficients and then setting the diagonal entries to the column sum.; It turns out that this is worse (by about 10%), maybe if the matrix were symmetric (row sum) but a column sum accesses blocks very far apart. Also we want to interleave compute and load/stores as much as possible to allow the CPU pipelining magic to mask the latency of the latter (even if it looks like you can only write the block after it is computed, CPU's have all kinds of buffers that allow the next loop iteration to begin while data is in flight). **Therefore colouring is the way to go.**. _Note: With vectorized numerics we insert blocks for 4 or 8 edges into the matrix at a time, the data for those inserts will be in a slightly weird format, which will make `SparseMatrix::updateBlocks` a bit harder on the eye, more on that later._. ## MUSCL Reconstruction; The MUSCL reconstruction, characteristic of upwind schemes, is the simplest building block to show the (negative) implications of storing the data as structures of arrays (SoA) on the performance of some operations.; Here is the most basic numerics you can think of, reconstruct and average (the dummy matrix loop was to benchmark the writes this is to benchmark the reads); ```c++; void computeResidual(size_t nVar,; size_t nDim,; const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; const Matrix& limiter,; Matrix& residual); {; residual.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[col",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:5527,update,updateBlocks,5527,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['update'],['updateBlocks']
Deployability,"r the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2229,install,install,2229,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['install'],['install']
Deployability,"r: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should me",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1915,Release,Release,1915,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['Release'],['Release']
Deployability,rPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:2385,Install,Installing,2385,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,re; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:4707,release,release,4707,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['release'],['release']
Deployability,"recently pushed to develop branch with doxygen group created and a few comments updated to be put into the group. This will add a link on the modules page. Since there are so many config options, everyone please feel free to update other variables in a similar way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/122#issuecomment-59972462:80,update,updated,80,https://su2code.github.io,https://github.com/su2code/SU2/issues/122#issuecomment-59972462,2,['update'],"['update', 'updated']"
Deployability,"refix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ni",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2469,Release,Release,2469,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610,1,['Release'],['Release']
Deployability,"research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3388,integrat,integrated,3388,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['integrat'],['integrated']
Deployability,restart file update https://github.com/su2code/TestCases/pull/85,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1438#issuecomment-968060030:13,update,update,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/1438#issuecomment-968060030,1,['update'],['update']
Deployability,rt SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; Running compile:; Working directory: D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo; Command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\testfile.cpp -o D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\output.obj -pipe -c -O0 -fpermissive --print-search-dirs ; ; Code:; ; Compiler stdout:; install: C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/; programs: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/; libraries: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:10162,install,install,10162,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['install'],['install']
Deployability,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1926,Install,Installed,1926,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,6,"['Install', 'install']","['Install', 'Installed', 'install', 'installed']"
Deployability,"s nowadays, so we should always be improving the class design accordingly. I suppose this will just get more important with adding more physics, zones, and more complex time integration schemes. I would like to highlight that when the code was first released, we did not have ""zones"" at all (not until some early sliding mesh work after a couple of versions), and the CDriver and CIteration classes didn't even exist until we dreamed them up a couple of years ago. My point is that, with some proper planning, we have the creativity and the right team to develop the solution we need, and we shouldn't be afraid to make big changes when necessary. Moving quickly while leveraging the team's broad skillset is one of our biggest advantages in this project. As you all know, over the years, we continue to move toward a *_structure.cpp and *_physics.cpp mindset for how we do our abstractions/data encapsulations, with ""structure"" components reused and ""physics"" components being specialized to a certain set of governing equations. This has happened in many places, including recently with the CTransfer class, for instance, and it is likely to happen with the COutput class(es) before long. However, one area where there hasn't been much evolution is within the CIntegration classes. Apart from a couple of additions for structural problems and now the DG integration, it is largely the same as it was in the first release. Perhaps this is our opportunity to rethink and update these classes for future expansion, just as we've done for others over the years. We could rework them, move them up or down in the hierarchy, change where they're instantiated, change the inheritance, and so on. Even if they get a little more complicated (like usual), as long as they're properly abstracted, it isn't likely to bother the developers working in other areas of the code too much. In short, I think some effort spent on the CIntegration classes could help here, and they are due for some updates anyway. Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329078585:1438,integrat,integration,1438,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329078585,4,"['integrat', 'release', 'update']","['integration', 'release', 'update', 'updates']"
Deployability,s which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1302,Install,Installed,1302,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,1,['Install'],['Installed']
Deployability,serPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6766,Install,Installing,6766,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,shady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7306,Install,Installing,7306,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_P,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6084,Install,Installing,6084,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"so now the file is being committed as deleted... please roll back to this commit; https://github.com/spendres/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520. here are the commands you can use --. ```; # Reset the index to the desired tree; git reset 6cbddbe59cf5da89e89321b72ae20ab289a66520. # Move the branch pointer back to the previous HEAD; git reset --soft HEAD@{1}. git commit -m ""Revert to 6cbddbe"". # Update working copy to reflect the new commit; git reset --hard; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144#issuecomment-69462490:414,Update,Update,414,https://su2code.github.io,https://github.com/su2code/SU2/pull/144#issuecomment-69462490,1,['Update'],['Update']
Deployability,sorry I accidently press the Close issue....; anyway Im going to install v 4.3 of the software and try again; then I will report the results. thanks alot for your response,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/296#issuecomment-248937442:65,install,install,65,https://su2code.github.io,https://github.com/su2code/SU2/issues/296#issuecomment-248937442,1,['install'],['install']
Deployability,"st machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2433,Configurat,Configuration,2433,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['Configurat'],['Configuration']
Deployability,"t involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful informat",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1831,install,install,1831,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,2,['install'],"['install', 'installation']"
Deployability,"t means pyamg was not correctly installed; otherwise it is in fact installed. In the latter case, you can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1338,install,installation,1338,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['install'],['installation']
Deployability,"t normal (and a tangent to this normal) the current implementation of BC_Sym cannot be ""exploited"" to serve as an ""inviscid (slip) wall"" for non-straight markers. Using `MARKER_EULER= ( sym )` is not correct either as the gradients of the velocity components (used in the viscous stress tensor of the momentum equations) are not computed correctly for the reflected state. Although using MARKER_EULER in the current develop will give you the same results as the master (or older develop before #657 ) with MARKER_SYM (... as it uses the same implementation). If you pull the ""Preprocessing"" part from the develop Sym_BC into the loop over all vertices of the boundary marker, the unit normal (and tangential) gets recomputed for each vertex. That gives you results which should be a lot closer to what happens in the master. Plus handling the velocity gradient correctly. From my point of view this would be the correct way.; Apply this patch in the root of the latest develop code using `patch -p1 < SymAsInviscidSlipWall.diff` to get the code I mean. [SymAsInviscidSlipWall.diff.txt](https://github.com/su2code/SU2/files/3417354/SymAsInviscidSlipWall.diff.txt). The implementation of the Symmetry_BC could serve double as 'Inviscid (slip) wall' (which is prescribed in the NASA documents) for viscous flow if the 'Preprocessing' part gets recomputed for each boundary vertex. But how to integrate that best is s.th. to discuss. One could just pull it in at some higher computational cost, put a conditional together with a boolean (e.g. SYMMETRY_AS_SLIP_WALL= YES) or fixing and using MARKER_EULER for that case. I hope that clarifies what happens with that boundary. Please let me know if that works for you and fixes the issue. When I fixed the Regression Testcases for #657 i think that this one was not part of it, right? Maybe this validation case goes into the su2code/VandV repo :) . Cheers,Tobi. Edit: I think we can all agree, that it is Toms fault due to his requested changes in the PR üòâ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513801538:2302,integrat,integrate,2302,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513801538,1,['integrat'],['integrate']
Deployability,tatus and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid defo,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:5110,Update,Updated,5110,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Update'],['Updated']
Deployability,th ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc); - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Another important updated to BC in parallel; - More implementation and clean up of the parallel CGNS reader.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - CGNS reader bug fix.; - Updated adj. NS solver with primitive variables and farfield bc including viscous contribution.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Small change; - Back to the previous version; - Fixed some loop variables.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixes for CGNS.; - New slope limiter based on the wall distance; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - Non-dimensional adjoint bc; - CGNS bug.; - Mixed-element support in new CGNS reader.; - Memory fix for mixed-elem,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:6383,Update,Update,6383,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Update'],['Update']
Deployability,"thanks for the commands. On Sat, Jan 10, 2015 at 11:54 AM, Trent Lukaczyk notifications@github.com; wrote:. > so now the file is being committed as deleted... please roll back to this; > commit; > spendres@6cbddbe; > https://github.com/spendres/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > ; > here are the commands you can use --; > Reset the index to the desired tree; > ; > git reset 6cbddbe; > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > Move the branch pointer back to the previous HEAD; > ; > git reset --soft HEAD@{1}; > ; > git commit -m ""Revert to 6cbddbe; > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > ""; > Update working copy to reflect the new commit; > ; > git reset --hard; > ; > ‚Äî; > Reply to this email directly or view it on GitHub; > https://github.com/su2code/SU2/pull/144#issuecomment-69462490.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144#issuecomment-69483379:703,Update,Update,703,https://su2code.github.io,https://github.com/su2code/SU2/pull/144#issuecomment-69483379,1,['Update'],['Update']
Deployability,"thanks tom!. On Tue, Oct 14, 2014 at 12:30 AM, Thomas D. Economon <; notifications@github.com> wrote:. > Added the following system calls during the update/build phase to the; > serial and parallel regression python scripts in order to force testing of; > the develop branch:; > ; > $ git fetch; > $ git checkout develop; > $ git pull origin develop; > ; > ‚Äî; > Reply to this email directly or view it on GitHub; > https://github.com/su2code/SU2/issues/75#issuecomment-59000470. ## ; - Trent Lukaczyk; Stanford University Engineering; Cornell University Engineering 2010; twl26@stanford.edu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/75#issuecomment-59069424:149,update,update,149,https://su2code.github.io,https://github.com/su2code/SU2/issues/75#issuecomment-59069424,1,['update'],['update']
Deployability,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2010,install,installation,2010,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,3,"['install', 'update']","['installation', 'installation-failed-due-insufficient-permissions', 'updated']"
Deployability,"the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > ‚Äî; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H554WAUPBYMWVADRO4BUNANCNFSM4MR3ATFA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-621078198:1379,install,installed,1379,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198,2,['install'],"['install', 'installed']"
Deployability,this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson --reconfigure build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; ```; It replaced the default lapack and openblas packages provided by pacman.; Then I ran the `ninja -j4 -C build install` command. It picked up from where it left off. The build was successful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_d,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:649,Install,Installing,649,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,10,['Install'],['Installing']
Deployability,"thon\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running c",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8537,Release,Release,8537,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Release'],['Release']
Deployability,to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5407,Install,Installing,5407,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/S,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5811,Install,Installing,5811,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"to run v&v on; major releases only, aka 7.0 but not 7.1, and I agree that keeping a record; of the most recent version checked is a good idea-and as necessary minor; releases could be tested, as suggested by individual developers. The regression tests should ensure that the v&v results will be unlikely to; be changed. One thing we can do to reduce that risk further would be to; introduce regression tests that compare solution files rather than the; terminal output alone. I can take a stab at that if there's no other; volunteers- probably only needs to be a couple of critical tests, the file; diff may be slightly more expensive than currently, but given the increase; in test precision and detail I think it would be worth it. H. On Thu, Sep 20, 2018, 1:46 PM erangit <notifications@github.com> wrote:. > Hi All; > I‚Äôm a bit worried about the logistics related to checking this v&v data; > base for every new release.; > Unlike the tutorials, these cases, by their nature will be large and will; > require long integrations(the 2D cases might not fall on this category).; > This means also that significant computational resources will be required; > for this evaluation (about twice a year for a growing list of cases). Is it; > practical?; > The only way that I think that it might work is that each contributor will; > be responsible for checking the casesthat he has introduced, before each; > release. Being a voluntary institution, this can not be enforced (and we do; > not want to enforce). How about trying to be less demanding:; > In each validation case there will be a statement about the last version; > that it was checked with and the responsible contributor. Each contributor; > will receive a recommendation to check his cases before a new release, and; > will be able to do that and update the OK label also after the release.; > Less waterproof but might be more workable.; > What do you think?; > Eran; >; > ‚Äî; > You are receiving this because you are subscribed to this thr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423283690:1151,integrat,integrations,1151,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423283690,1,['integrat'],['integrations']
Deployability,"tps://github.com/su2code/SU2/actions/runs/8536216515/job/23386086770?pr=2246#step:7:2062). ```; ==2308==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60f0008c96a0 at pc 0x558b6435ae51 bp 0x7ffc1cebf680 sp 0x7ffc1cebf670; READ of size 8 at 0x60f0008c96a0 thread T0; #0 0x558b6435ae50 in CInterface::PreprocessAverage(CGeometry*, CGeometry*, CConfig const*, CConfig const*, unsigned short) ../SU2_CFD/src/interfaces/CInterface.cpp:314; #1 0x558b6373d23a in CDriver::PreprocessTurbomachinery(CConfig**, CGeometry****, CSolver*****, CInterface***, bool) ../SU2_CFD/src/drivers/CDriver.cpp:2725; #2 0x558b63770d76 in CDriver::CDriver(char*, unsigned short, int, bool) ../SU2_CFD/src/drivers/CDriver.cpp:250; #3 0x558b637f54c2 in CMultizoneDriver::CMultizoneDriver(char*, unsigned short, int) ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:35; #4 0x558b63615b53 in main ../SU2_CFD/src/SU2_CFD.cpp:135; #5 0x7f0d8c503082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082); #6 0x558b6367005d in _start (/github/workspace/install/bin/SU2_CFD+0x63405d). 0x60f0008c96a0 is located 0 bytes to the right of 176-byte region [0x60f0008c95f0,0x60f0008c96a0); allocated by thread T0 here:; #0 0x7f0d8ed00787 in operator new[](unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:107; #1 0x558b656d1590 in CPhysicalGeometry::ComputeNSpan(CConfig*, unsigned short, unsigned short, bool) ../Common/src/geometry/CPhysicalGeometry.cpp:4806; #2 0x558b6373c1df in CDriver::PreprocessTurbomachinery(CConfig**, CGeometry****, CSolver*****, CInterface***, bool) ../SU2_CFD/src/drivers/CDriver.cpp:2649; #3 0x558b63770d76 in CDriver::CDriver(char*, unsigned short, int, bool) ../SU2_CFD/src/drivers/CDriver.cpp:250; #4 0x558b637f54c2 in CMultizoneDriver::CMultizoneDriver(char*, unsigned short, int) ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:35; #5 0x558b63615b53 in main ../SU2_CFD/src/SU2_CFD.cpp:135; #6 0x7f0d8c503082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082); ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720:1744,install,install,1744,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720,1,['install'],['install']
Deployability,"tter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writes to 2 locations (gather / scatter access pattern, not to be confused with the instructions) processing multiple edges at the same time can therefore result in race conditions where multiple threads try to update the data of the same point.; There are 3 ways to address this:; - **Coloring**: Edges are colored (grouped) such that edges of the same color have no risk of race conditions, i.e. each endpoint is referenced only once per color (this definition gives you the basis of a greedy algorithm to color edges).; - **Scatter to gather transformations**: Edge quantities (e.g. fluxes) are computed and stored on one pass (i.e. we read from 2 locations and write to 1), on a second pass, over points, we reduce (e.g. sum) the edge quantities for each point, again a gather access pattern. It may also be possible to convert the entire algorithm to a loop over points instead of edges.; - **Atomic operations or locks**: Here when a thread wants to write to a memory location it either needs to do so atomically (this is essentially an operations that always goes through main ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:3961,update,update,3961,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['update'],['update']
Deployability,ttps://github.com/su2code/SU2 into develop; - Bug fixing; - Non-dimensional adjoint bc; - CGNS bug.; - Mixed-element support in new CGNS reader.; - Memory fix for mixed-element CGNS in parallel.; - Activated the parallel CGNS reader.; - New FFD input; - Adjacency building for Parmetis improve to account for VTK structure; - added if viscous steps to some adjeuler bcs; - Minor changes; - Back to previous version of ParMetis; - Small change; - Final update.; - Minor bug fixed.; - Updated SU2_DEF (cgns); - CGNS global element ID bug fix.; - Heat flux bug fix.; - Small fix.; - Merge branch 'master' into develop; - changed history output to match # of residuals printed in header and body; - further correction to history output; - history file fix; - fixed history output such that massflowrate can be output while in rans; - Removed Parmetis updates to adjacency; - Minor changes; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - ver 3.2.8.3; - Updated CGNS in parallel.; - Added the ability to writting 2 files at each checkpoint when using 2nd order dual time stepping; - Merge branch 'develop' into feature_dualoutput; - Updated FieldView; - Preliminary implementation (ASCII); - Minor changes; - Update code; - Updated FieldView format; - Merge branch 'develop' into feature_dualoutput; - Bug fixing; - Updated FieldView ASCII format; - Complete implementation of the FFD_CONTINUITY capability; - Updated FFD intersections; - ver 3.2.9; - adding targetea file to equivalent area adjoint folder. address issue #160; - Merge branch 'develop' of github.com:su2code/SU2 into develop; - Final push to v3.2.9; - after bootstrap; - updates to comments in config_structure to make doxygen pretty; - Bug fixing; - Merge branch 'develop'; - EA in ft^2; - further update to config; - Merge remote-tracking branch 'upstream/develop' into upstream_dev; - Minor changes; - Updated NF BC; - More adjustments; - Small update; - Final update Nearfield BC; - added mass,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:8194,Update,Updated,8194,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Update'],['Updated']
Deployability,ttps://github.com/su2code/SU2 into develop; - CGNS reader bug fix.; - Updated adj. NS solver with primitive variables and farfield bc including viscous contribution.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Small change; - Back to the previous version; - Fixed some loop variables.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixes for CGNS.; - New slope limiter based on the wall distance; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - Non-dimensional adjoint bc; - CGNS bug.; - Mixed-element support in new CGNS reader.; - Memory fix for mixed-element CGNS in parallel.; - Activated the parallel CGNS reader.; - New FFD input; - Adjacency building for Parmetis improve to account for VTK structure; - added if viscous steps to some adjeuler bcs; - Minor changes; - Back to previous version of ParMetis; - Small change; - Final update.; - Minor bug fixed.; - Updated SU2_DEF (cgns); - CGNS global element ID bug fix.; - Heat flux bug fix.; - Small fix.; - Merge branch 'master' into develop; - changed history output to match # of residuals printed in header and body; - further correction to history output; - history file fix; - fixed history output such that massflowrate can be output while in rans; - Removed Parmetis updates to adjacency; - Minor changes; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - ver 3.2.8.3; - Updated CGNS in parallel.; - Added the ability to writting 2 files at each checkpoint when using 2nd order dual time stepping; - Merge branch 'develop' into feature_dualoutput; - Updated FieldView; - Preliminary implementation (ASCII); - Minor changes; - Update code; - Updated FieldView format; - Merge branch 'develop' into feature_dualoutput; - Bug fixing; - Updated FieldView ASCII format; - Complete implementation of the FFD_CONTINUITY capability; - Updated FFD intersections; - ver 3.2.9; - adding targetea file t,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:7687,Update,Updated,7687,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Update'],['Updated']
Deployability,"ture of a future release is going in the direction of what you need. Compiled libraries would be easy to handle via pkg config. . Ah, I did not understand that this is something you were already working on and were asking me to test, I thought you were suggesting to use develop to install the software on our production cluster. I should not have assumed that, it's just something that is unfortunately quite frequent in the field of scientific software (just use the head of the git repo). I did not have any clone of the repo, so did not see that script (only the one in `legacy`) initially. . ```; $ ./preconfigure.py --help; usage: preconfigure.py [-h] [--with-own-meson] [--no-codi] [--no-medi]; [--no-opdi] [--no-mpp] [--no-coolprop] [--no-mel]; [--no-mlpcpp]. optional arguments:; -h, --help show this help message and exit; --with-own-meson download own copies of Meson and Ninja; --no-codi do not download own copy of CoDiPack; --no-medi do not download own copy of MeDiPack; --no-opdi do not download own copy of OpDiLib; --no-mpp do not download own copy of Mutationpp; --no-coolprop do not download own copy of CoolProp; --no-mel do not download own copy of MEL; --no-mlpcpp do not download copy of MLpCpp; ``` . It seems like to go in the right direction. Is there a plan to provide options to specify how to find installed copies of those ? Something like `--medi=/path/to/installed/medi` and such ? pkgconfig or other auto-detection mechanisms usually work, but sometimes it doesn't, and explicit workarounds sometimes help. . I also don't see other packages that end up in externals, such as `metis`, `parmetis`, `autotools`, `catch2`. I am not sure how those are used (or if they are used), but I noticed folders for them in the `externals` folder. Is there a plan to allow using external versions of those ?. > But your choices of words sound a bit unfriendly so I honestly don't care, we can also close the issue until the next release. My apologies, I misunderstood your request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645726352:1379,install,installed,1379,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645726352,3,"['install', 'release']","['installed', 'release']"
Deployability,"uch lower level, namely where the spatial residual is computed. At least, this should be the case for the fluid dynamics part. I don't know whether this is also the case for other disciplines, like structures. What about the following high level structure?. - Loop over the number of iterations, or time steps for unsteady problems.; - Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; - Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate: ; - Loop over the (Runge-Kutta) stages; - Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; - End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; - End loop over the (Runge-Kutta) stages ; - End loop over the disciplines; - End loop over the pseudo time steps.; - End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defined per zone. Well, I suppose this leaves plenty of room for discussion, so I would say to continue the online discussion a bit further, such that things become a bit clearer how to tackle this issue. After that having a telecon would be good to iron out the details. . Regards,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328368371:1516,integrat,integration,1516,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328368371,4,['integrat'],['integration']
Deployability,"uction and performance.; b. I think it is important to start the validation project, create a link; from the main SU2 web page to it, and than let it grow with the existing; mechanism of community contributions with approvals. Your list is very fine; for beginning. However I think we should strive to enrich it with 3D and; time dependent cases. I hope to be able to be in the loop and contribute to this important venue; Best; Eran; On Wed, Sep 19, 2018 at 8:26 PM Jayant Mukhopadhaya <; notifications@github.com> wrote:. > Hey everyone,; >; > Following the discussions at the SU2 Developers meeting this week, I; > wanted to start a conversation about compiling a comprehensive set of V&V; > cases for SU2 that can showcase it's performance in comparison to other; > solvers.; >; > I think the the NASA TMR website; > <https://turbmodels.larc.nasa.gov/index.html> is a good model to base it; > on. The idea would be to present the V&V case, provide working; > configuration and mesh files, and provide results comparing performance to; > other solvers and to higher fidelity data (when available). This allows; > people to see the performance of SU2 and replicate it, if need be.; >; > The first step would be compiling a list of cases that should be covered.; > The SU2 2014 SciTech paper; > <https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf> would be a; > good starting point as it already had a couple of validation cases. This; > list can be bolstered with some of the NASA TMR cases, and with grid; > convergence studies. I would like to propose an initial list that the; > community can talk through and make changes as we see fit. I am mostly only; > familiar with canonical CFD flows that are used in these cases. But it; > would be great to have other cases, such as Turbo-machinary or FSI cases,; > that show the full breadth of SU2's abilities. This is by no means an; > exhaustive list:; >; > 1. Zero Gradient Flat Plate; > 2. 2D and 3D Bump in Channel; > 3. Asymmetric Dif",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423070900:1284,configurat,configuration,1284,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423070900,1,['configurat'],['configuration']
Deployability,"uctures. What about the following high level structure?. * Loop over the number of iterations, or time steps for unsteady problems.; * Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; * Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate:; * Loop over the (Runge-Kutta) stages; * Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; * End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; * End loop over the (Runge-Kutta) stages; * End loop over the disciplines; * End loop over the pseudo time steps.; * End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defined per zone. Well, I suppose this leaves plenty of room for discussion, so I would say to continue the online discussion a bit further, such that things become a bit clearer how to tackle this issue. After that having a telecon would be good to iron out the details. Regards,. Edwin. ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-328368371>, or mute the thread<",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328403160:3025,integrat,integration,3025,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328403160,2,['integrat'],['integration']
Deployability,"update: validated with the incompressible solver with SA and SST, will add that as a validation and tutorial. To do: validation with a compressible test case.; Future work: validation for heated walls. Less data is available for validation. Let me know if you have a good test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115:0,update,update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115,1,['update'],['update']
Deployability,"ut; - Adjacency building for Parmetis improve to account for VTK structure; - added if viscous steps to some adjeuler bcs; - Minor changes; - Back to previous version of ParMetis; - Small change; - Final update.; - Minor bug fixed.; - Updated SU2_DEF (cgns); - CGNS global element ID bug fix.; - Heat flux bug fix.; - Small fix.; - Merge branch 'master' into develop; - changed history output to match # of residuals printed in header and body; - further correction to history output; - history file fix; - fixed history output such that massflowrate can be output while in rans; - Removed Parmetis updates to adjacency; - Minor changes; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - ver 3.2.8.3; - Updated CGNS in parallel.; - Added the ability to writting 2 files at each checkpoint when using 2nd order dual time stepping; - Merge branch 'develop' into feature_dualoutput; - Updated FieldView; - Preliminary implementation (ASCII); - Minor changes; - Update code; - Updated FieldView format; - Merge branch 'develop' into feature_dualoutput; - Bug fixing; - Updated FieldView ASCII format; - Complete implementation of the FFD_CONTINUITY capability; - Updated FFD intersections; - ver 3.2.9; - adding targetea file to equivalent area adjoint folder. address issue #160; - Merge branch 'develop' of github.com:su2code/SU2 into develop; - Final push to v3.2.9; - after bootstrap; - updates to comments in config_structure to make doxygen pretty; - Bug fixing; - Merge branch 'develop'; - EA in ft^2; - further update to config; - Merge remote-tracking branch 'upstream/develop' into upstream_dev; - Minor changes; - Updated NF BC; - More adjustments; - Small update; - Final update Nearfield BC; - added massflowrate as option for cauchy criteria, more config file comments; - Merge remote-tracking branch 'upstream/develop' into upstream_dev; - paraview output modified/added back in for current version for SU2_DEF; - Merge branch 'develop' into feature_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:8373,Update,Updated,8373,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,5,['Update'],"['Update', 'Updated']"
Deployability,"via pull request #132 into the develop branch - tested on naca0012 in euler and navier stokes continuous adjoint test cases, CFL number is updated and the solution convergs faster.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/131#issuecomment-62266439:94,continuous,continuous,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/131#issuecomment-62266439,2,"['continuous', 'update']","['continuous', 'updated']"
Deployability,"w, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything ha",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1799,install,install,1799,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['install'],['install']
Deployability,"we could maybe also use multizone, and allow a zone to be selected for volume averaging and integrated variables.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1894#issuecomment-1396603114:92,integrat,integrated,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/1894#issuecomment-1396603114,1,['integrat'],['integrated']
Deployability,"went silent for a bit because in prototyping a typical residual computation and matrix update loop I made some realisations that made me go back to the drawing board regarding data structures, and eventually back to square 0. . ## Parallel strategy for flux computation; Because significant computation is required to obtain each edge's flux, it does not make sense to attempt a ""point-loop"" strategy (which would double the effort).; However, one can either use colouring to avoid the race conditions that would result from updating the residual of cells i and j, or store the edge fluxes and then, on a second point-loop perform the summation of fluxes for each cell, with the direction being accounted by the same adjacency information used in the point-loop GG gradient computation.; If we consider only the update of residuals the two strategies are fairly equivalent performance wise, the tie breaker is the matrix updates. ## Matrix Updates; By this I mean the `addBlock`, `subBlock` we do (two times each) to update diagonal and off-diagonal blocks for each edge.; Here is a dummy numerics loop that does nothing else but setting blocks in the matrix (with colouring).; ```c++; void testLoop1(const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; double** blk_i, double** blk_j,; SparseMatrix& matrix); {; matrix.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. matrix.addBlock(iPoint, iPoint, blk_i);; matrix.addBlock(iPoint, jPoint, blk_j);. matrix.subBlock(jPoint, jPoint, blk_j);; matrix.subBlock(jPoint, iPoint, blk_i);; }; }; ```; This and a few more memory reads is why we can't have nice things, i.e. massive speedups with vectorization. Believe it or not this loo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:1288,Update,Updates,1288,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,3,"['Update', 'update']","['Updates', 'update']"
Deployability,"when you've installed python packages in two different locations. This could be due to installing some python packages in a system directory (e.g. `/usr/lib/`) and some in a user directory (e.g. `~/.local/`). SU2's build process is set to automatically detect the default package location, but it's not equipped to handle multiple package locations. There are some hardcoded includes, but these only work for python 2.7. I don't consider this a bug *per se* because multiple python package directories is not a standard use case. #### The symptoms. When building SU2 with the python wrapper you'll see the following error during the swig build:; ```; <install directory>/../SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; ```; But mpi4py is indeed installed on your system and it's on your python path, as confirmed by opening a python terminal and running `import mpi4py`. #### The easiest workaround. Switch to a [virtualenv](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/). This will ensure that all of your python packages are stored in single location. #### Alternate workaround. In this method, you change the hardcoded includes to match mpi4py's package location. First I figure out where my mpi4py is installed. I start a terminal session of python using the python environment I want to use (in this case, it's python 3.6), and then run:; ```; from mpi4py import MPI; MPI; ```. Since I have mpi4py installed on your system and it's on my python path, I see something like:; ```; <module 'mpi4py.MPI' from '/home/clarkpede/.local/lib/python3.6/site-packages/mpi4py/MPI.cpython-34m.so'>; ```. The `/home/clarkpede/.local/lib/python3.6/` directory is where my mpi4py package is installed. But the swig compile command includes `/home/clarkpede/.local/lib/python2.7/`. That's not the right directory! So first I find the hardcoded paths of the makefile by running (on a bash terminal):; ```; grep -rn python2\.7 SU2_PY/ ; ```; On my system, t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722#issuecomment-515693590:1112,install,installing-using-pip-and-virtual-environments,1112,https://su2code.github.io,https://github.com/su2code/SU2/issues/722#issuecomment-515693590,2,['install'],['installing-using-pip-and-virtual-environments']
Deployability,which version are you using? Could have been updated by now.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/175#issuecomment-212884651:45,update,updated,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/175#issuecomment-212884651,1,['update'],['updated']
Deployability,"while you might be envisioning a more clever approach, the python wrapper has some tools to help with this too. SU2.io.tools.restart2solution(config,state=None); """""" moves restart file to solution file, ; optionally updates state; direct or adjoint is read from config; adjoint objective is read from config; """""". should be called right after a call to SU2_CFD (ie with SU2.run.direct()",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/17#issuecomment-29596087:216,update,updates,216,https://su2code.github.io,https://github.com/su2code/SU2/issues/17#issuecomment-29596087,1,['update'],['updates']
Deployability,xcbkptlist (0) ; - I SU2_IDE/Xcode/SU2_CFD.xcodeproj/xcuserdata/fpalacios.xcuserdatad/xcschemes/SU2_CFD.xcscheme (0) ; - I SU2_IDE/Xcode/SU2_DEF.xcodeproj/project.pbxproj (0) ; - I SU2_IDE/Xcode/SU2_DOT.xcodeproj/project.xcworkspace/xcshareddata/SU2_DOT.xccheckout (0) ; - I SU2_IDE/Xcode/SU2_GEO.xcodeproj/project.xcworkspace/xcshareddata/SU2_GEO.xccheckout (0) ; - I SU2_IDE/Xcode/SU2_MSH.xcodeproj/project.pbxproj (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/fpalacios.mode1v3 (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/fpalacios.pbxuser (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/project.pbxproj (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/project.xcworkspace/contents.xcworkspacedata (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/project.xcworkspace/xcshareddata/SU2_DDC.xccheckout (0) ; - I SU2_IDE/Xcode/SU2_SOL.xcodeproj/project.pbxproj (0) ; - I SU2_IDE/Xcode/SU2_SOL.xcodeproj/xcuserdata/fpalacios.xcuserdatad/xcschemes/SU2_SOL.xcscheme (0) ; - I SU2_MSH/include/SU2_MSH.hpp (0) ; - I SU2_MSH/obj/Makefile.am (0) ; - I SU2_MSH/obj/Makefile.in (0) ; - I SU2_MSH/src/SU2_MSH.cpp (0) ; - D SU2_PRT/bin/.gitignore (0) ; - D SU2_PRT/include/SU2_PRT.hpp (0) ; - D SU2_PRT/obj/Makefile.am (0) ; - I SU2_PRT/obj/Makefile.in (0) ; - D SU2_PRT/src/SU2_PRT.cpp (0) ; - D SU2_PY/2DChannel.py (0) ; - D SU2_PY/3DChannel.py (0) ; - I SU2_PY/Makefile.am (0) ; - I SU2_PY/Makefile.in (0) ; - I SU2_PY/SU2/**init**.py (0) ; - I SU2_PY/SU2/eval/design.py (0) ; - I SU2_PY/SU2/eval/functions.py (0) ; - I SU2_PY/SU2/eval/gradients.py (0) ; - I SU2_PY/SU2/io/config.py (0) ; - I SU2_PY/SU2/io/config_options.py (0) ; - I SU2_PY/SU2/io/data.py (0) ; - I SU2_PY/SU2/io/filelock.py (0) ; - I SU2_PY/SU2/io/redirect.py (0) ; - I SU2_PY/SU2/io/state.py (0) ; - I SU2_PY/SU2/io/tools.py (0) ; - I SU2_PY/SU2/mesh/adapt.py (0) ; - I SU2_PY/SU2/mesh/tools.py (0) . Patch Links:; - https://github.com/su2code/SU2/pull/174.patch; - https://github.com/su2code/SU2/pull/174.diff; ‚Äî; Reply to this email directly or view it on GitHub.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:27677,Patch,Patch,27677,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,3,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"y is static polymorphism.; For example in the non vectorized numerics we have a family of Roe schemes since a lot of code is shared, and the only difference is how the dissipation terms are computed. There this is done with virtual functions, here we want none of that.; Virtual functions allow a parent class to dynamically call methods of its children, we want to do this statically and so we need to let the parent class know who is deriving from it.; ```c++; template<class Derived>; class Parent {; public:; void parentMethod() {; // ""I know I am also a Derived and so I can cast myself.""; auto derived = static_cast<Derived*>(this);; // ""now I can use a method of derived""; derived->childMethod();; }; };. // A derived class needs to inform the parent about itself; class Child : public Parent<Child> {; public:; void childMethod() {...}; };; ```. Why is this better? Note that 2 of these derived classes don't actually have the same parent, i.e. one inherits from `Parent<ChildA>` the other from `Parent<ChildB>` this means that 2 versions of Parent were instantiated specifically for each derived class, this allows code to be inlined and optimized for each, an ability lost with virtual functions. ### Putting it all together; For vectorized central schemes we have something like:; ```c++; // Intermediate class for centered schemes, note the 2 template parameters; template<class Derived, class Base>; class CCenteredBase : public Base {; public:; // Main public method implemented here making use of ""Derived"" and ""Base"".; void ComputeFlux(...) const final {; ... // gather data, do some computation; derived->DissipationTerms(...); // static polymorphism; Base::ViscousTerms(...); // static decorator; ... // update linear system; }; }. // A final centered scheme, which is what we instantiate, with some viscous decorator.; template<class Decorator>; class CJSTScheme : public CCenteredBase<CJSTScheme<Decorator>, Decorator> {; protected:; void DissipationTerms(...) const {...}; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:4001,update,update,4001,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721,1,['update'],['update']
Deployability,y/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6359,Install,Installing,6359,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,y/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NE,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6900,Install,Installing,6900,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,y/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPack,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7715,Install,Installing,7715,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,y/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:3659,Install,Installing,3659,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"‚Ä¶or maybe libopenmpi-dev. From: Dave Taflin; Sent: Monday, July 22, 2019 9:18 AM; To: su2code/SU2 <reply@reply.github.com>; su2code/SU2 <SU2@noreply.github.com>; Cc: Comment <comment@noreply.github.com>; Subject: RE: [su2code/SU2] C++ compiler cannot create executables (#738). Those would come from package openmpi-dev. From: thw1021 [mailto:notifications@github.com]; Sent: Monday, July 22, 2019 9:13 AM; To: su2code/SU2 <SU2@noreply.github.com<mailto:SU2@noreply.github.com>>; Cc: Dave Taflin <d.taflin@tecplot.com<mailto:d.taflin@tecplot.com>>; Comment <comment@noreply.github.com<mailto:comment@noreply.github.com>>; Subject: Re: [su2code/SU2] C++ compiler cannot create executables (#738). Sorry. Do you mean that although I have installed OpenMPI, I still have to install mpicc and mpicxx ? I am not familiar with such problems.; When I run which mpicc and which mpicxx in the container, there is no outputs. But on the host machine, I can see /usr/bin/mpicc and /usr/bin/mpicxx. Maybe this the reason. ‚Äî; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/738?email_source=notifications&email_token=AADV2HHQUIUX3M4FOVSIWTTQAXL7JA5CNFSM4IFZ52EKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2QLXTI#issuecomment-513850317>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AADV2HGXH2W6SXJCN4OLCXLQAXL7JANCNFSM4IFZ52EA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513852685:736,install,installed,736,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513852685,2,['install'],"['install', 'installed']"
Deployability,"üëç for doing this @maxaehle . ; - I am in favor of removing the `_ADJ_` options with the `GRAD_OBJFUNC_FILENAME`.; - As Roe is used the `JST_SENSOR_COEFF` can go. Limiter are turned off so either the slope limiter section with 2 options can be removed or be moved down below the `FLOW NUMERICAL METHOD DEFNITION`.; - `CONV_CRITERIA` will be gone once you merge develop and you can add `CONV_FIELD=RMS_DENSITY` as that is also the default. Removign the `_CAUCHY_` options is prob debatable, but in this very cfg they are unused. ; - The `CFL_ADAPT*` stuff can go (unless the values are chosen in such a way by you that they do work well, otherwise it might even do negative advertisement for an option). I guess I am also a bit aggressive on stripping options from files, so take it with a grain of salt üßÇ . Another aspect ,which is of course nothing to be changed in this PR and is also a bit off-topic, is that lists like `SOLVER` change over time but the list in the comment over the option in the Testcase cfg does not get updated (there might of course be good examples of people doing so ;) ). `WAVE_EQUATION` and `POISSON_EQUATION` e.g. are not available anymore, yet they are in the cfg description of `SOLVER` here... and 200 other Testcases. So a way might be to strip those and sth like ; ```; % See the config_template.cfg in the code root for more information on the options; ```; ... although the info there are not always perfect either, but one place to maintain is easier than a couple hundred",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1240#issuecomment-804890763:1025,update,updated,1025,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240#issuecomment-804890763,1,['update'],['updated']
Deployability,"üëç https://github.com/su2code/SU2/releases/tag/v7.2.1 I am just curious: was this splitting in features, bug fixes and maintenance a manual task or did some script fail to do that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1416#issuecomment-954843944:33,release,releases,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1416#issuecomment-954843944,1,['release'],['releases']
Energy Efficiency," added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to make mesh finer to capture shock waves. In ver.7, grid adaptation related parameters in configuration template file are not used, so it appears that grid adaptation function is dead now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:1985,adapt,adaptation,1985,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111,3,['adapt'],['adaptation']
Energy Efficiency," are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.; > - Has a very simple syntax; > - Is header-only; > - Requires C++11 compilation; > - Not as feature rich as Google Test or Boost Test; >; > Questions; >; > - How do developers feel about adding unit tests to SU2?; > - If a unit-testing framework were added to SU2, would you actually; > use it?; > - Do developers have a preference (or experience with) any of the unit; > testing frameworks?; > - Should unit tests be expected when submitting PRs?; >; > ‚Äî; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/698?email_source=notifications&email_token=AA5FFRG5U3Z55N4W2XWQED3PY3LJ5A5CNFSM4HTDQXQKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:6099,power,powerful,6099,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['power'],['powerful']
Energy Efficiency," case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need to run the cases themselves. . I also wanted to broach the topic of convergence here. Would it be a good idea to standardize the termination criteria wherever possible? For example, in the NACA0012 case we can ensure that residuals are reduced by 8 orders of magnitude for all meshes. Or for the ONERAM6, we use Cauchy convergence and make sure the C_L is converged to 6 orders of magnitude. This would have to be flexible since the same level of convergence might not apply to all the cases in the repository. But for within a test case, I think it would be good to use the same convergence criteria for a family of meshes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:2237,reduce,reduced,2237,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,2,['reduce'],['reduced']
Energy Efficiency," committed to the develop branch.; > > * When a developer wants to implement something new, they create a new branch from develop, implement their thing, and merge it again with develop. You see that happening here, in the top of the page you see; > > ; > > > [pcarruscag](https://github.com/pcarruscag) wants to merge 2 commits into [develop](https://github.com/su2code/SU2/tree/develop) from [supersonic_profile](https://github.com/su2code/SU2/tree/supersonic_profile); > > ; > > ; > > You see in the section _Files Changed_ the changes compared to the current develop branch. This shows that this branch is up to date with current develop, only the new changes for the inlet profile show up.; > > I did not go through the code yet, but when you run it without having an inlet.dat file present, it should create one for you filled with a uniform profile. When you then use this file unaltered, does that work?; > ; > Hi, I got how the branches work. In this case, I first downloaded the 'develop' branch to make sure everything is consitent with Pedro, and then I downloaded and replaced the 6 new committed files that related to the supersonic inlet profile development. The code should be totally the same at this point. And I did a flat plate test, which actually I need to fill a uniform profile, since the code would only generated an empty one. However, a segment error still occurs, and I attched the error file with Valgrind output. The test files are on the above conversations so that you may also take a try. Thanks for the help! [error.txt](https://github.com/user-attachments/files/16323710/error.txt). From the error, I think The SU2_CFD encountered an invalid memory read operation during an attempt to read the inletUNI.dat file, causing the program to crash with a segment error (SIGSEGV). The specific error occurs in the CConfig::GetInletPtotal function, which seems attempts to access memory that has not been properly initialized or allocated. Any ideas? @pcarruscag @bigfooted",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327#issuecomment-2241548890:2379,allocate,allocated,2379,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327#issuecomment-2241548890,1,['allocate'],['allocated']
Energy Efficiency," to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem. However, this concept could reduce code duplication and improve readability and maintainability, so I'm curious to see the progress on this...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:2030,reduce,reduce,2030,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665,1,['reduce'],['reduce']
Energy Efficiency,![Mesh](https://user-images.githubusercontent.com/60317454/74029438-c0c4f000-49bd-11ea-8f83-4a823c7c69d7.jpg); ![Mach](https://user-images.githubusercontent.com/60317454/74029449-c7536780-49bd-11ea-92e6-49c9812e670f.jpg). I have moved PYAMG interface to SU2-6.2.0 and made some changes to Mach sensor on the solid wall.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-583368735:294,sensor,sensor,294,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-583368735,1,['sensor'],['sensor']
Energy Efficiency,"# Failing Regression tests (91 of'em); The Euler Wall BC (comp. & incomp. affected) is used in many Testcases. All failing tests are listed. ; Box checkked -> values adapted to newer ones. ; tiny delta = all delta_vals below 0.1; ; medium delta = one delta val larger than 0.1 but all below 1.0; ; big delta = one delta_val larger than 1.0. I use this post for me to keep track of what I already fixed on what is left to do. ## serial_regression; - [x] channel, tiny delta; - [x] naca0012, tiny delta; - [x] wedge, medium delta; - [x] oneram6, big delta, restart; - [x] fixedcl_naca0012, tiny delta; - [x] polar_naca0012, tiny delta; - [x] bluntbody, medium delta; - [x] inc_euler_naca0012, tiny delta; - [x] inc_nozzle, medium delta; - [x] inc_lam_bend, tiny delta; - [x] contadj_naca0012, big delta, cont.Adj. There is some issue with all the cont.adj. cases in the boundary formulation; - [x] contadj_oneram6, big delta, cont.Adj., great diff to develop; - [x] contadj_wedge, big delta, cont.Adj.; - [x] contadj_fixedcl_naca0012, big delta (no computed vals), cont.Adj.; - [x] harmonic_balance, tiny delta; - [x] sine_gust, tiny delta; - [x] aeroelastic, tiny delta; - [x] edge_VW, tiny delta, NICFD; - [x] edge_PPR, tiny delta, NICFD; - [x] uniform_flow, tiny delta; - [x] channel_2D, tiny delta; - [x] channel_3D, tiny delta; - [x] pipe, tiny delta; - [x] rotating_cylinders, medium delta; - [x] supersonic_vortex_shedding, big delta; - [x] fsi2d, tiny delta; - [x] stat_fsi; - [x] stat_fsi_restart; - [x] dyn_fsi; - [x] airfoil_fsi_rbf, big delta (no computed vals); - [x] contadj_euler_py; - [x] shape_opt_euler_py, big delta; - [x] opt_multiobj_py, medium delta; - [x] opt_multiobjcombo_py, medium delta; - [x] opt_multiobj1surf_py, medium delta; - [x] opt_2surf1obj_py, tiny delta; - [x] pywrapper_naca0012, tiny delta; - [x] pywrapper_aeroelastic, tiny delta; - [x] pywrapper_fsi2d, tiny delta. ## parallel_regression; - [x] channel, tiny delta; - [x] naca0012, tiny delta; - [x] wedge, medi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-524639197:166,adapt,adapted,166,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-524639197,1,['adapt'],['adapted']
Energy Efficiency,"# Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link current files; ; config_cfd = copy.deepcopy(config); for opt in adap_options:; config_cfd.pop(opt, None); config_cfd.LOW_MEMORY_OUTPUT = ""NO""; ; config_cfd.WRT_BINARY_RESTART = ""NO""; #config_cfd.READ_BINARY_RESTART = ""NO""; ; current_mesh = ""Initial_mesh""; current_solution = ""Initial_solution""; ; if config['RESTART_SOL'] == 'NO':; ; stdout_hdl = open('ini.stdout','w') # new targets; stderr_hdl = open('ini.stderr','w'); ; success = False; val_out = [False]; ; sys.stdout.write('Running initial CFD solution.\n'); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:4234,adapt,adaptation,4234,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['adapt'],['adaptation']
Energy Efficiency,") = min(limiter(jPoint,iVar), lim_j[iVar]);; }; }. #pragma omp parallel for schedule(dynamic,TARGET_CHUNK_SIZE); for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; double lim = limiter(iPoint,iVar);; limiter(iPoint,iVar) = lim*(lim+2)/(lim*lim+lim+2);; }; }; }; ```; Again to keep things short here is the parallel and SIMD point-loop version (like for gradients it is very similar to the scalar and sequential version).; ```C++; void computeLimiters(size_t nPoint,; size_t nVar,; size_t nDim,; const Adjacency<4>& adj,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; Matrix& limiter); {; const size_t SIMDLEN = 4;; using FltVec = Array<double,SIMDLEN>;. // working variables; FltVec phiMax[MAXNVAR], phiMin[MAXNVAR], prjMax[MAXNVAR], prjMin[MAXNVAR];. const double eps = numeric_limits<double>::epsilon();. #pragma omp parallel for schedule(dynamic,128) private(phiMax,phiMin,prjMax,prjMin); for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); {; for(size_t iVar=0; iVar<nVar; ++iVar); {; phiMin[iVar] = phiMax[iVar] = phi.getVec(iPoint,iVar);; prjMax[iVar] = eps;; prjMin[iVar] = -eps;; }. for(size_t iNeigh=0; iNeigh<adj.nNeighbor(iPoint); ++iNeigh); {; auto jPoint = adj.jPoint_vec(iPoint,iNeigh);. FltVec d_ij[3] = {FltVec(0.0), FltVec(0.0), FltVec(0.0)};. for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = (coords.getVec(jPoint,iDim)-; coords.getVec(iPoint,iDim))*0.5;. for(size_t iVar=0; iVar<nVar; ++iVar); {; FltVec prj = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); prj += d_ij[iDim]*grad.getVec(iPoint,iVar,iDim);. prjMax[iVar] = vmax(prjMax[iVar], prj);; prjMin[iVar] = vmin(prjMin[iVar], prj);. phiMax[iVar] = vmax(phiMax[iVar], phi.getVec(jPoint,iVar));; phiMin[iVar] = vmin(phiMin[iVar], phi.getVec(jPoint,iVar));; }; }. for(size_t iVar=0; iVar<nVar; ++iVar); {; FltVec lim = vmin(FltVec(2.0), vmin(; (phiMax[iVar]-phi.getVec(iPoint,iVar))/prjMax[iVar],; (phiMin[iVar]-phi.getVec(iPoint,iVar))/prjM",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:7910,schedul,schedule,7910,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['schedul'],['schedule']
Energy Efficiency,"**Disclaimer**; The performance numbers that follow are based on simple implementations of the methods, I do not claim any of my implementations or choice of methods to be optimal. If you know better speak up.; The data is from the case used to benchmark #753 (see #716), it is by no means an extensive collection of different grid types. I will share code and data with anyone who wants to repeat the tests on the condition they post detailed results. With that out of the way :) ... ### Green-Gauss Gradients. This is the plain edge-loop version of the code with boundary contributions omitted for simplicity:; ```C++; void computeGradients(size_t nEdge,; size_t nPoint,; size_t nVar,; size_t nDim,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& area,; const vector<double>& volume,; const Matrix& phi,; VectorOfMatrix& grad); {; grad.setZero();. for(size_t iEdge=0; iEdge<nEdge; ++iEdge); {; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. for(size_t iVar=0; iVar<nVar; ++iVar); {; double phi_ave = 0.5*(phi(iPoint,iVar)+phi(jPoint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); {; double flux = phi_ave*area(iEdge,iDim);. grad(iPoint,iVar,iDim) += flux;; grad(jPoint,iVar,iDim) -= flux;; }; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) /= volume[iPoint];; }; ```; This is more or less what SU2 does with minor differences on how the edges (`connectivity`) and area are stored, there is no vectorization nor easy way to make the loop parallel, this will be the reference for execution times. Suppose now that due to a perfect storm the number of variables is 4, here is how with a few pragmas we get gcc to vectorize:; ```C++; template<size_t nVar>; void computeGradients_impl(size_t nEdge,; size_t nPoint,; size_t nDim,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& area,; const vector<double>& volume,; con",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:489,Green,Green-Gauss,489,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,1,['Green'],['Green-Gauss']
Energy Efficiency,"- The meshes are available here: https://github.com/su2code/VandV/tree/master/rans/dsma661; - The config files for the GG + LSQ results are here: [dsma661_configs.zip](https://github.com/su2code/SU2/files/3842634/dsma661_configs.zip). - I did not run the other solvers myself. Those are results from the NASA TMR website. I don't have access to those solvers unfortunately. . - Yeah the non-monotonic variation worried me as well. But all the simulations were converged to a density residual of -13. (all of them have over 6 orders of residual reduction). The residuals for the GG+LSQ results shown here:; ![res_SA](https://user-images.githubusercontent.com/30271435/68789548-8a641880-05fa-11ea-8885-4e024fe84eda.png); I tried a few re-runs of that finest mesh with a couple of different options. I reduced the maximum CFL to ~30 from 1000 and it still gave the same result. I reduced the number of cores I was running on from 80 to 20 and that had no effect either. As soon as I ran without the `NUM_METHOD_GRAD_RECON= LEAST_SQUARES` option, it got a C_L of about 0.159402 which would be more in line with the other solvers. @economon I haven't tried a high fixed CFL. Let me check that behavior and report back.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-553524258:799,reduce,reduced,799,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-553524258,2,['reduce'],['reduced']
Energy Efficiency,"---- | ---- |; | **Speed** | 1.0 | 2.2 | 0.83 | 1.35 |. **Parallel execution**. I will start at the end for this, all it takes to parallellize the points loops with OpenMP is to take this:; ```C++; for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); ```; And add some pixie dust; ```C++; #pragma omp parallel for schedule(dynamic,128); for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); ```; This means each thread gets chunks of 128 loop iterations (512 points) to work on, assigned in a dynamic way, the 4 core speedup (still relative to our reference) is **3.8** for the SIMD code and **2.8** for the scalar code. Parallelizing the edge loops is a bit more intricate, as this:; ```C++; for(size_t iEdge=0; iEdge<nEdge; ++iEdge); {; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;; ```; Becomes:; ```C++; for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; #if SORT_BY_COLOR==1; size_t iEdge = k;; #else; size_t iEdge = edgeIdx[k];; #endif. size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;; ```; Apologies for the macro but it is just to illustrate that if we re-sort edge data after coloring the edge index is the loop index, otherwise the edge indices for each color need to be stored in a separate array.; Note that for each edge loop we first loop over colors, then over same-color edges, it is this inner loop that can run in parallel in chunk sizes that are multiple of the group size considered during coloring. There is some runtime cost on entry to every #omp parallel section, with coloring we enter one such section once by color. I mentioned in the introduction coloring reduces locality and therefore performance, here is the effect of color group size on the execution time of the scalar code on one thread:; ![image](https://user-images.githubusercontent.com/38071223/6468680",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:12910,schedul,schedule,12910,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['schedul'],['schedule']
Energy Efficiency,". Trying to process multiple edges instead of multiple variables has all the problems I mentioned for the gradients, so again we use the trick of templating on the number of variables.; ```C++; template<size_t nVar>; void computeLimiters_impl(size_t nPoint,; size_t nDim,; const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; Matrix& phiMax,; Matrix& phiMin,; Matrix& limiter); {; // initialize; #pragma omp parallel for schedule(dynamic,TARGET_CHUNK_SIZE); for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; phiMax(iPoint,iVar) = phi(iPoint,iVar);; phiMin(iPoint,iVar) = phi(iPoint,iVar);; limiter(iPoint,iVar) = 2.0;; }; }. // find min and max neighbor; for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; #if SORT_BY_COLOR==1; size_t iEdge = k;; #else; size_t iEdge = edgeIdx[k];; #endif. size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. // some hand-holding needed for simd min/max with gcc,; // one of the min/max operands needs to be on the stack; // (so the compiler knows the two do not overlap?); double phi_i[nVar], phi_j[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; phi_i[iVar] = phi(iPoint,iVar);; phi_j[iVar] = phi(jPoint,iVar);; }. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; phiMax(iPoint,iVar) = max(phiMax(iPoint,iVar), phi_j[iVar]);; phiMin(iPoint,iVar) = min(phiMin(iPoint,iVar), phi_j[iVar]);; phiMax(jPoint,iVar) = max(phiMax(jPoint,iVar), phi_i[iVar]);; phiMin(jPoint,iVar) = min(phiMin(jPoint,iVar), phi_i[iVar]);; }; }. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:4268,schedul,schedule,4268,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['schedul'],['schedule']
Energy Efficiency,"1) after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type **set MSMPI_LIB64=\\%MSMPI_LIB64%** in cmd or **$env:MSMPI_LIB64=""\\""+$env:MSMPI_LIB64** in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;; 2)after Configuration, you should find the file named ""build.ninja"" in folder called ""build"", then open it as a text editor, you can look for string ""**-l\\\\**"" through the entire file, you wiil find several of strings like ""-l\\\\D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi"", it's the path of msmpi installation, it may be a little different in your pc, then you should replace all strings with ""D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi.lib"", it's path of **msmpi.lib**, please use your own path;; 3) Last ,type **ninja -C build install** to compileÔºåthis time it will be all right.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-997986082:188,power,powershell,188,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-997986082,1,['power'],['powershell']
Energy Efficiency,"; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Generating adapted mesh using AMG\n' % pad_cpt); ; mesh_new = su2amg.amg_call_python(mesh, config_amg); ; #--- print mesh size; ; sys.stdout.write(' %s AMG done: %s\n' % (pad_nul, su2amg.return_mesh_size(mesh_new))); ; mesh_new['markers'] = mesh['markers']; mesh_new['dimension'] = mesh['dimension']; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter; ; su2amg.write_mesh(current_mesh, current_solution, mesh_new); ; #--- Run su2; ; log = 'ite%d.SU2'%global_iter; stdout_hdl = open('%sstdout'%log,'w') # new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_solutio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:10189,sensor,sensor,10189,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,2,"['adapt', 'sensor']","['adaptation', 'sensor']"
Energy Efficiency,"> * From the history output it seems that the maximum CFL value is not being reached, even for small CFL values the update seems to stop one step before max. There was a small factor applied to keep it above and below the CFL min and max (1.001, 0.999), respectively. But I have removed that, since it is not necessary. Btw, I have added the ability to print the min/max time step, and min/max/avg CFL to the screen by adding MIN_DELTA_TIME, MAX_DELTA_TIME, MIN_CFL, MAX_CFL, AVG_CFL to the SCREEN_OUTPUT. > * I still see some residual oscillations with high CFL values (100-1000), I think the issue is that despite the oscillations the linear solver still converges fine, and so the reduction never kicks in. There are reduction checks for both the linear and nonlinear residuals, but they likely still need some tuning (the factors were just empirical from my tests). I am also finding in my tests that if I am having trouble with a particular RANS case, sometimes it is most effective to turn off the adaption and go for a fixed CFL of 250, 500, or even 1000, if stable (don't forget you may need NUM_METHOD_GRAD_RECON= LEAST_SQUARES for that to be stable).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-541376224:1004,adapt,adaption,1004,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-541376224,1,['adapt'],['adaption']
Energy Efficiency,"> 2, g. I follow your instruction and try to rebuil it. The size of SU2_CFD.exe reduces to 596MB. Maybe I need more optimization options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/754#issuecomment-519749680:80,reduce,reduces,80,https://su2code.github.io,https://github.com/su2code/SU2/issues/754#issuecomment-519749680,1,['reduce'],['reduces']
Energy Efficiency,"> ; > ; > @TobiKattmann - I was just reading your slides on [multizone](https://su2foundation.org/wp-content/uploads/2020/06/Kattmann.pdf), when I noticed that you mention python scripts not working for multizone, and I guess that would include the mesh adaptation scripts... is this still the case? Thank you!. Hi @timjim333, I have to admit I am not fully (i.e. not üòâ) aware of the mesh adaption capabilities of/with SU2. And there is quite a bit to read in this issue which i won't really have time to until the weekend but here's already my quicktake:; If you can run the intended feature (with multizone) manually (i.e. a c++ binary) and it works, then probably the python script 'just' sets up some folders and does clever choices for parameters that are put into new .cfg files which are run afterwards. So just orchestrating. There it is likely that it is not fixed with multizone by now but that is usually not too difficult to fix ... it is tedious though. . If you think that I understand what you want to do specifically with the posts in this thread then I will read through that and answer again, otherwise I would not mind a specification üëç",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-765021250:254,adapt,adaptation,254,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-765021250,2,['adapt'],"['adaptation', 'adaption']"
Energy Efficiency,"> ; > ; > Dark mode?; > ""Is it possible to learn this power?"". üßô Sure, if you just go to your front page (i.e. just github.com) there should be a big button directly on the right side. ; Or Settings->Appearance->Dark. Enjoy :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743130745:54,power,power,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743130745,2,['power'],['power']
Energy Efficiency,"> ; > ; > I'll adapt one of the existing Testcases to use this feature. Well that was a lie. I thought it would be a good idea to adapt the 2D cht streamwise periodic case but I forgot that the used mesh is used for a streamwise periodic primal, FD and DA case as well as HeatTransfer BC Testcase (and that is a bit of work tbh). And for the periodic BC I had to change the mesh (adding new markers). As we do not have a single standalone (always run in a CHT setup) heat-equation Testcase, I went ahead and cut out the solid zone only and made that a Testcase. I already merged the gmsh geo and .su2 over at su2code/Testcases/pull/76 . If this is not liked I can of course do sth different. Note that the new Testcase takes ~2s to complete its 750 iterations until convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843:15,adapt,adapt,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843,2,['adapt'],['adapt']
Energy Efficiency,"> > > If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > > > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > > > ```; > > > * Turbulence solvers;; > > > ; > > > * Heat solver;; > > > ; > > > * Radiation solver;; > > > ; > > > * General passive/active scalar solvers;; > > > ; > > > * Eventual transition solvers;; > > > ```; > > > ; > > > ; > > > The starting point would be the current base turbulence solver.; > > ; > > ; > > I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :); > ; > Me too. I'm already cleaning up our code a bit so it's easier to see the differences and similarities. Sure! Let's do this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-794646465:128,power,power,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-794646465,1,['power'],['power']
Energy Efficiency,"> > For example Green-Gauss gradients have an exclusion for internal boundaries but not for nearfield ones.; > ; > @pcarruscag So, I need to make something similar to internal boundaries? The flowfield looked reasonable though except when I use the VENKATAKRISHNAN limiter where the nearfield boundary seemed to act like half permeable wall. I am doing some trials after `NEARFIELD_BOUNDARY` is excluded in `computeGradientsGreenGauss` like `INTERNAL_BOUNDARY`. The result looks more reasonable and also the issue I encountered with VENKATAKRISHNAN limiter appears to have been fixed. Can I add changes in this PR or should I create a new PR to address it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-899009860:16,Green,Green-Gauss,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-899009860,1,['Green'],['Green-Gauss']
Energy Efficiency,"> > Hi @mheimgartner, thanks for the PR. I think this is a good use of the fluidmodel classes. There seems to be a lot of potential to generalize some aspects of Mixture_Fluid_Model and CNEMOGas. Im not sure what the best plan to approach this may be, but I think its something worth discussing.; > ; > @WallyMaier I think there might be some overlap in fluid properties like mixing models as well, but I do not know what information you have available in a library like mutation++. I assume that it has general fluid property calculations and mixing rules available that could be used (wilke rule, kinetic models, etc)?. @bigfooted Thats correct! Both the CNEMOGas fluid models (SU2TCLib and CMutation++) have thermodynamic properties and transport properties. I imagine there would be a smart way to reduce overlap, though Im not sure what the best approach would be.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332#issuecomment-889993718:802,reduce,reduce,802,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-889993718,1,['reduce'],['reduce']
Energy Efficiency,"> > Hi @rois1995 any progress? Would be very interesting to add this to develop, looking forward to using it actually.; > ; > Hi @bigfooted, unfortunately I do not have enough time/computational power to perform a proper validation. I only tried something with a NACA0021 at 17 deg and 60 deg and they were promising, at least for the DDES implementation. The SAS ones are not that good. I'll upload some post-processing as soon as I have the time to do so. Hi @rois1995, I believe there is an error or a typo in the Babu's paper in the Q_SAS source term and in turn in your implementation, which may be the reason for the poor performance in SAS results. . ![image](https://github.com/user-attachments/assets/5791d344-967a-4cc5-b512-457b7fe61435). This term changes units depending on the output of the max function, which doesn't make any sense. I believe the terms in the max function should be divided by omega^2 and k^2 instead of omega and k, respectively. Which is exactly how it is done in [https://resolver.tudelft.nl/uuid:5d23e2a6-5675-450d-bf3d-1dd40d736cae](url). I will try some of the benchmark cases in these papers when I have the time. Let me know what you think.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2447067474:195,power,power,195,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2447067474,1,['power'],['power']
Energy Efficiency,"> > If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > > ```; > > * Turbulence solvers;; > > ; > > * Heat solver;; > > ; > > * Radiation solver;; > > ; > > * General passive/active scalar solvers;; > > ; > > * Eventual transition solvers;; > > ```; > > ; > > ; > > The starting point would be the current base turbulence solver.; > ; > I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :). Me too. I'm already cleaning up our code a bit so it's easier to see the differences and similarities.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-794344854:126,power,power,126,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-794344854,1,['power'],['power']
Energy Efficiency,"> > Yes, AFAIK. That is why it is recommended to Pin by SHA; > ; > OK! I see your point here! Indeed the reduced permissions would help if a malicious action is executed!. üëç",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1661#issuecomment-1180170065:105,reduce,reduced,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/1661#issuecomment-1180170065,1,['reduce'],['reduced']
Energy Efficiency,"> @aeroamit What does temperature do? Could you compute the heat flux from the temperature in e.g. paraview? Is the root cause the computation of the energy equation or the computation of heat flux?. Hi @bigfooted, Temperature boundary condition for wall corresponds to Isothermal wall BC (cold wall condition). This condition is applied to obtain heat flux unlike adiabatic wall (no heat transfer). ; The snapshot, I posted from ParaView shows heat flux variation with x. This is obtained directly from surface_flow.vtu. You can simply go to Filters -> Data Analysis -> Plot data and select Points_X for X Array and heat flux in variable. Regarding computing heat flux from temperature field, I am not sure, but ParaView is having calculator utility as well as option to compute gradient of unstructured grid (from there you can obtain temperature gradients in 3 directions). ; Coming to last question, root cause of the problem - @WallyMaier has run the case yesterday, we will be posting some details soon.; Best ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1106#issuecomment-741947377:150,energy,energy,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-741947377,2,['energy'],['energy']
Energy Efficiency,"> @antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; > ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png); > ; > Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim. When I was referring to separated zones I mean in the mesh, so I'm not referring to SU2 multizone. This is an example I took online (it is apparently a structured hexa mesh, so not the best example for mesh adaptation, hexa not supported), but I hope it explains the different zones at mesher level.; By defining different zones for top and bottom of the wing (and wing tip), the edges, leading and trailing as well as the one on the tip will be maintained after mesh adaptation.; In your case I would also suggest to split the body in body top and body bottom so to prevent (or reduce) artifacts in the trailing cone. ![image](https://user-images.githubusercontent.com/41752169/105387785-2e414f00-5c16-11eb-9284-1d18c9a5981f.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764812340:61,adapt,adapted,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764812340,4,"['adapt', 'reduce']","['adaptation', 'adapted', 'reduce']"
Energy Efficiency,"> Anything else on your side @bigfooted ?. @pcarruscag ; I had some small comments, besides that it looks good. ; @EvertBunschoten ; We can look into generalizing and merging the 2D and 3D LUT approach once the flamelet model is also in develop, but this also means changing the LUT file format. There are some open issues like how to best treat lookups that fall outside of the table, and the extention from the slab approach to the trapezoidal map approach would definitely help with the memory consumption. Not a show stopper right now, but would be nice to do this as part of a student project this year.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1825#issuecomment-1407418155:497,consumption,consumption,497,https://su2code.github.io,https://github.com/su2code/SU2/pull/1825#issuecomment-1407418155,1,['consumption'],['consumption']
Energy Efficiency,"> Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; > ; > ```; > solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; > if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; > solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; > }; > ```; > ; > Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps. @bmunguia is correct.. I was experimenting with adapting the CFLs independently for the two systems to further improve convergence, but did not have time to find a stable solution. So, I left the framework as-is to accommodate this at some point.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/918#issuecomment-603980676:206,adapt,adaptive,206,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603980676,3,"['Adapt', 'adapt']","['AdaptCFLNumber', 'adapting', 'adaptive']"
Energy Efficiency,"> Do I understand correctly that two gradients are always computed per iteration?; > Is there any downside to using the unweighted LS for viscous flux correction? Is the statement that this type of gradient is better for reconstruction based on your observations or is it one of those well known things?. Yes - the gradient for now is computed twice and stored separately for viscous flows with 2nd-order upwind. Could be combined into one loop eventually. It is known that weighted LSQ / GG is more accurate (see Mavriplis, ""Revisiting the Least-Squares Procedure for Gradient Reconstruction on Unstructured Meshes"" for instance). However, unweighted LSQ is known to be more robust.. so a good compromise is to use it only for the reconstruction step (which is more susceptible to robustness issues than the viscous term) and then use WLSQ or GG for all other gradients in the viscous flux/sources for accuracy. > Sometimes high CFL leads to limit-cycle oscillations of the residuals and the solution is to reduce it, is this something this controller can pick up?; > High CFL also makes the linear systems harder to solve and as Edwin pointed out _somewhere_ there is not much point going above reasonable values with weakly coupled turbulence. Do you think it would be reasonable to build in some feedback from the linear solver (e.g. it is taking too much time or did not converge -> drop the CFL)?. Yes, I would also like to couple it to the linear solver so that we can remove the need to tune that as well. Ideally the user will not need to adjust parameters. There are some things I am going to try for that..",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-531890295:1008,reduce,reduce,1008,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-531890295,2,['reduce'],['reduce']
Energy Efficiency,"> Hi @rois1995 any progress? Would be very interesting to add this to develop, looking forward to using it actually. Hi @bigfooted, unfortunately I do not have enough time/computational power to perform a proper validation. I only tried something with a NACA0021 at 17 deg and 60 deg and they were promising, at least for the DDES implementation. The SAS ones are not that good. I'll upload some post-processing as soon as I have the time to do so.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-1983515044:186,power,power,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-1983515044,1,['power'],['power']
Energy Efficiency,"> I am not so familiar with turbomachinery but it looks like all spanwisesection initialization is done in CPhysicalGeometry.cpp. I think it initializes in the function ComputeNSpan. This function is called in CDriver like this:; > ; > ```; > geometry[iZone][INST_0][MESH_0]->ComputeNSpan(config[iZone], iZone, INFLOW, true);; > geometry[iZone][INST_0][MESH_0]->ComputeNSpan(config[iZone], iZone, OUTFLOW, true);; > ```; > ; > So you should get an initialized value for inflow and outflow. Maybe you can check what is going on there and see if this function does what is expected. Hi Nijso! Thanks for your suggestion. ; Indeed, CPhysicalGeometry.cpp is where the initialization is done. I'll also report this to the SU2 Turbo Group, to check whether we can find a solution. Currently I just hardcoded a section of that script as follows:. ```; .; .; if(marker_flag == OUTFLOW){; 	nSpanWiseSections[INFLOW - 1] = 57;; 	nSpanWiseSections[OUTFLOW - 1] = 57; ; if(nSpanWiseSections[INFLOW -1] != nSpanWiseSections[OUTFLOW - 1]){; char buf[100];; SPRINTF(buf, ""nSpan inflow %u, nSpan outflow %u"", nSpanWiseSections[INFLOW], nSpanWiseSections[OUTFLOW]);; SU2_MPI::Error(string("" At the moment only turbomachinery with the same amount of span-wise section can be simulated\n"") + buf, CURRENT_FUNCTION);; }; else{; config->SetnSpanWiseSections(nSpanWiseSections[OUTFLOW -1]);; }; }. }. }; void CPhysicalGeometry::SetTurboVertex(CConfig *config, unsigned short val_iZone, unsigned short marker_flag, bool allocate) {; .; .; .; ```. This modification was firstly suggested by @MKursatUzuner but I'm pasting it in here to have another source in case the topic opened in CFD Online gets deleted.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2203#issuecomment-1900339640:1497,allocate,allocate,1497,https://su2code.github.io,https://github.com/su2code/SU2/issues/2203#issuecomment-1900339640,1,['allocate'],['allocate']
Energy Efficiency,"> I would focus more on discrete adjoint Vs finite differences, the direct mode can be tricky sometimes.; > About the discrepancy, you can try changing the finite difference step (especially if the 20% error is for small derivatives). I have reduced FIN_DIFF_STEP from 0.001 to 0.0001. Discrepancy is about 2% now. Can I consider this is acceptable?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-894794184:242,reduce,reduced,242,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894794184,1,['reduce'],['reduced']
Energy Efficiency,"> If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > ; > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > ; > * Turbulence solvers;; > ; > * Heat solver;; > ; > * Radiation solver;; > ; > * General passive/active scalar solvers;; > ; > * Eventual transition solvers;; > ; > ; > The starting point would be the current base turbulence solver. I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-793978226:124,power,power,124,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-793978226,1,['power'],['power']
Energy Efficiency,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:330,adapt,adapting,330,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301,4,['adapt'],"['adaptation', 'adapting']"
Energy Efficiency,"> Regarding ""Fixed Supersonic inlet BC inclusion of TKE,"" does the energy equation include the contribution of turbulent diffusion?. Yeah, I do think so.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2284274624:67,energy,energy,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2284274624,1,['energy'],['energy']
Energy Efficiency,"> SU2 is a fantastic library, but the build process is really painful to get static linking within another C++ program. CMake is a standard for building C++ projects and would be extremely helpful. Ideally Python wouldn't be necessary to build SU2 or link it with another project. I'm not sure I understand this... the fact that the build system uses python means that it is really painful to configure the build system to emit a static library? (This should absolutely not be the case! Meson has a core option `-Ddefault_library={static|shared|both}` to select what kind of library you want to build, for any library whose build description claims it can support either one. It's a bit like cmake's `-DBUILD_SHARED_LIBS` except much more powerful.). However, as far as I can tell, su2 doesn't mark any of its libraries as public at all (i.e., installable) so maybe that's a moot point. As far as making python be necessary to build the project, I think this mainly boils down to ""I myself use cmake, I have cmake installed, I don't want to install another program when I could use the program I already have"". Is it really that big of a deal, though? The software *does* use it, and it's not that difficult to install TBH (Linux operating systems in particular almost certainly have it installed already).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1711#issuecomment-1312985406:739,power,powerful,739,https://su2code.github.io,https://github.com/su2code/SU2/issues/1711#issuecomment-1312985406,1,['power'],['powerful']
Energy Efficiency,"> So are things exploding? If you feed in a solution and look at the gradients after the first iteration does it look like the modifications are doing the job?. I am using a very coarse 2D channel flow with the top a wall and bottom a symmetry, left inlet, right outlet (laminar incompressible navier stokes). The line figure is the normal velocity components at the symmetry axis, which should be zero. The black line develop. The red line is only the Green-Gauss correction. The peak at 0.5 is due to the mixed-mesh problem that the GG method has. The blue line is the current PR. ; ![screenshot_velocity](https://github.com/su2code/SU2/assets/7050568/cd4b535b-248d-424f-a7c6-527497a8f01e). ![screenshot_axis](https://github.com/su2code/SU2/assets/7050568/1364b07a-fd25-4ddb-b811-1b4758dad46a)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194#issuecomment-1888091034:453,Green,Green-Gauss,453,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194#issuecomment-1888091034,1,['Green'],['Green-Gauss']
Energy Efficiency,"> So modifying the gradient + residual is an improvement and it's just the normals that cause issues? Or the change to the residual is also problematic?. The modification of the Green-Gauss gradients only is working correctly. If I take the normal velocity on the symmetry plane as a performance indicator, then I observe that there is a mean (or maximum) discrepancy $\Delta V$ for develop, which reduces to less than $0.5 \Delta V$ for the new GG.; [edit: additionally, the convergence behavior does not deteriorate for the GG modification]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194#issuecomment-1888699276:178,Green,Green-Gauss,178,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194#issuecomment-1888699276,2,"['Green', 'reduce']","['Green-Gauss', 'reduces']"
Energy Efficiency,"> Thank you Yes we plan on contributing more, this commit was more of a test run just to understand the process. I added Dr Yair Mor Yossef and myself as Authors, per your request. However I do not see a button anywhere that says merge pull request (even before changing Authors.md). It should be below this message,You should see the list of 'things that need to be green': Changes Approved, Conversations resolved, and then Checks passed. At the moment I am writing this, the checks are still running. Below the Checks you should see the button ""Squash and Merge"". Once all checks have passed, you can press that button.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2221211665:367,green,green,367,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2221211665,1,['green'],['green']
Energy Efficiency,"> This is too hacky, mixing the iteration counts and adding +1 here and there. Doesn't look safe. We should of course first update the iteration count, and then check the convergence criteria for this iteration. ; Now [edit: in develop branch] the +1 is inside the monitor() function and monitor(iter) actually checks if iter+1 fulfills the convergence criterion, which is not what the stopping criterion should be. If we correct this, then all python files that use this have to be re-ordered a bit. I still have to check if there are other places where we make use of the fact that the current iteration is actually Iter+1.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960#issuecomment-1464359066:265,monitor,monitor,265,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960#issuecomment-1464359066,2,['monitor'],['monitor']
Energy Efficiency,"> To me it looks like the strange behaviour develops from the area in your mesh where the mesh density along the interface is visibily different (north and south of the image shown). I have encountered the same issue with a finer mesh where the mesh density along the interface is more or less uniform:. <img width=""600"" alt=""vawt_fineMesh"" src=""https://github.com/su2code/SU2/assets/81166192/4e6cc10c-676a-4cba-bcb1-a189c23cf599""> . --------------. > Are you able to reproduce this behaviour with any other cases, say a rotating cylinder perhaps?. I have tried a rotating 2D cylinder case with a similar setting. The only differences are that the time step is reduced to a tenth to prevent any numerical oscillations, and the mesh is generated by using Gmsh (for the VAWT case, it was Pointwise). The simulation diverged at the end. The discontinuity around the interface is quite apparent, especially on the upstream part. **Mesh:**; <img width=""600"" alt=""meshAll"" src=""https://github.com/su2code/SU2/assets/81166192/174d0bb7-d9fe-474d-8fea-39f81c215cd3""> ; <img width=""600"" alt=""meshClose"" src=""https://github.com/su2code/SU2/assets/81166192/12d35aa5-f167-455b-929a-0ee6e009e9af""> . **Axial velocity:**; <img width=""480"" alt=""cyl_velX"" src=""https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExdmZtdHNoc2JraTRoZDdpbGozb3FyeDJ2ZTl1aXEwYm15YjVpaWN1ayZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/82Sq7bFaCUITTYRjns/giphy.gif""> ; **Eddy viscosity:**; <img width=""480"" alt=""cyl_eddyVisc"" src=""https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExaHNoc3B2ZjJnOWt1c2JzYTRqazF1aGs5bmd0bmFoZjMxaDl1NmswMiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/nD011ofucZmvRVcg7H/giphy.gif"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2041086476:661,reduce,reduced,661,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2041086476,1,['reduce'],['reduced']
Energy Efficiency,"> Yes, AFAIK. That is why it is recommended to Pin by SHA. OK! I see your point here! Indeed the reduced permissions would help if a malicious action is executed!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1661#issuecomment-1180145667:97,reduce,reduced,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/1661#issuecomment-1180145667,1,['reduce'],['reduced']
Energy Efficiency,"> You are proposing the exact opposite of the conclusion of the paper:; > ; > ""From the above findings, it is **recommended that all three of these terms be included** when running hypersonic, or even supersonic, turbulent flow simulations, especially for flows with shock wave-induced separations.""; > ; > And they clearly say this: ""While the full inclusion of these terms does not always result in predictions that agree better with DNS/experimental data, this is likely caused by the fact that their exclusion cancels out effects of other flaws in the RANS models employed.""; > ; > If your strategy is to get a better match with experiments by neglecting physics terms, then you should rethink your strategy. Thank you for your comment @bigfooted . The above paper is not presented to improve the current k-w SST model. . As you can see in the first post, there is a problem with the high Mach number and freestream turbulence intensity case. If high turbulence kinetic energy(TKE) and Mach number condition, the boundary condition cannot be maintained the imposed value. (I think there seems to be a bug in the temperature calculation using total energy when including the TKE). The introduction of C1 was intended to provide a 'temporary' solution at the level of first aid (simply commenting out conditional statements in code).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1521383702:974,energy,energy,974,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1521383702,4,['energy'],['energy']
Energy Efficiency,"> You may want to remove the string based interface since it's known to be inneficient. When replacing the string-based with index-based look-up methods, the performance improves substantially. The figure below shows the average measured evaluation time (measured with chrono library) vs the number of output variables. It's clear that using index-based look-up methods results in reduced query time, as well as improved scaling. ![scaling_nVars](https://github.com/su2code/SU2/assets/38651601/31252439-ac6e-4f1b-82d4-e13a55d54c98)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214#issuecomment-1952521226:381,reduce,reduced,381,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214#issuecomment-1952521226,2,['reduce'],['reduced']
Energy Efficiency,"> You should be able to use CConfig::SetFinestMesh in CDriver::Geometrical_Preprocessing_FVM to initialize this to the coarsest grid that was produced.; > ; > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want. Your suggestion is also valid, but in my opinion it would be more coherent, in terms of code structure, to reduce the finest mesh level whenever we modify the number of multigrid levels. So in CMultiGridGeometry::CMultiGridGeometry add this line of code; `config->SetFinestMesh(iMesh-1);`; after reducing the number of MGLevels. > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want.; I can do that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-908181097:369,reduce,reduce,369,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-908181097,1,['reduce'],['reduce']
Energy Efficiency,"> You've got two options:; > ; > 1. Use the cfg option `WRT_BINARY_RESTART= NO` to dump the restart file(s) in human-readable ASCII.; > 2. Use the cfg option `OUTPUT_FORMAT= TECPLOT` or `OUTPUT_FORMAT=PARAVIEW` with SU2_SOL to export the solution to an ASCII-formatted tecplot or paraview file. If you're not familiar with SU2_SOL, then check out [the documentation](https://su2code.github.io/docs/Post-processing/).; > ; > You can find those cfg options in `config_template.cfg` in the root SU2 source code directory.; > ; > In the end, using the tecplot or paraview option may be your best bet. Trying to manually parse the text files smells like an [XY Problem](https://en.wikipedia.org/wiki/XY_problem). Tecplot and Paraview both have scripting capabilities that make post-processing very efficient.; > ; > Does that answer your question? Do you have any follow-up concerns?. Hello @clarkpede can you please tell me how to convert the output flile format from vtu to vtk; I am facing a lots of trouble to open the file in Paraview but the output format is coming vtu everytime Can you please explain how to solve this problem; And whenever i tries to change the output format by editting in notepad it tells an error that check option in SU2 config_template.cfg ; Please Help",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-651252372:793,efficient,efficient,793,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-651252372,1,['efficient'],['efficient']
Energy Efficiency,"> You've got two options:; > ; > 1. Use the cfg option `WRT_BINARY_RESTART= NO` to dump the restart file(s) in human-readable ASCII.; > 2. Use the cfg option `OUTPUT_FORMAT= TECPLOT` or `OUTPUT_FORMAT=PARAVIEW` with SU2_SOL to export the solution to an ASCII-formatted tecplot or paraview file. If you're not familiar with SU2_SOL, then check out [the documentation](https://su2code.github.io/docs/Post-processing/).; > ; > You can find those cfg options in `config_template.cfg` in the root SU2 source code directory.; > ; > In the end, using the tecplot or paraview option may be your best bet. Trying to manually parse the text files smells like an [XY Problem](https://en.wikipedia.org/wiki/XY_problem). Tecplot and Paraview both have scripting capabilities that make post-processing very efficient.; > ; > Does that answer your question? Do you have any follow-up concerns?; > ; > _Originally posted by @clarkpede in [#787 (comment)](https://github.com/su2code/SU2/issues/787#issuecomment-528435629)_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1034#issuecomment-651250250:793,efficient,efficient,793,https://su2code.github.io,https://github.com/su2code/SU2/issues/1034#issuecomment-651250250,1,['efficient'],['efficient']
Energy Efficiency,"> after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type set MSMPI_LIB64=\%MSMPI_LIB64% in cmd or $env:MSMPI_LIB64=""\""+$env:MSMPI_LIB64 in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;. @Zcaic Hi zcaic, . I tried this, but it still thow the same error. with message; ```; OSError: [WinError 123] Êñá‰ª∂Âêç„ÄÅÁõÆÂΩïÂêçÊàñÂç∑Ê†áËØ≠Ê≥ï‰∏çÊ≠£Á°Æ„ÄÇ: 'D:\\mingw-w64\\x86_64\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\lib\\C:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'; ```. ‚¨ÜÔ∏è just from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\libC:\\Program...`. Is that any solutions ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582:177,power,powershell,177,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582,1,['power'],['powershell']
Energy Efficiency,"@EvertBunschoten Thank you for not leaving us with all these alarming red crosses in the regression tests too long :-); This week I will work on a small pywrapper addition to deal with initial conditions, then we can get rid of the flame-specific initialization. That will reduce the PR by a couple of hundred lines and even add functionality. But I'll create a separate PR for this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1330519424:273,reduce,reduce,273,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1330519424,1,['reduce'],['reduce']
Energy Efficiency,"@LaSerpe : thanks for the mesh!. @EduardoMolina : no huge rush on merging this one.. we should make sure everything is working ok. It would be very helpful if you can take a look at the Taylor-Green Vortex case again, like we looked at before, now that the parallelization is improved. The option to run is still there (TGV = YES), and I think you already have the meshes.. @pcarruscag : thanks for the comments (will address soon). Also, thanks for the reminder about the pre-accumulation. I disabled that since I had to rework the least squares routines for the periodic BC and I did not turn it back on. The variables may need to be adjusted now though",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652#issuecomment-464599593:193,Green,Green,193,https://su2code.github.io,https://github.com/su2code/SU2/pull/652#issuecomment-464599593,1,['Green'],['Green']
Energy Efficiency,"@LaSerpe Hey Giulio. ; Sorry for the delay, I had a couple of deadlines going on and only by the end of last week I had the chance to look back into the code. I had scheduled to look at this pull request this evening or tomorrow morning, so I will try to do it as soon as possible so it can be merged in. ; Thanks for waiting and sorry again for taking so long!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-258805856:165,schedul,scheduled,165,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-258805856,1,['schedul'],['scheduled']
Energy Efficiency,"@MarcoFossati @monika1387 @economon I've been working with Adrien Loseille from INRIA to bring Vic's old fork (referenced above) up to date with develop. Check out [feature_adap](https://github.com/su2code/SU2/tree/feature_adap). It uses goal-oriented (adjoint-based) adaptation instead of feature-based (just based on Mach or pressure) that Vic's fork used. Some things to note:; 1. It's currently only tested on Euler (it uses a Hessian of the Euler fluxes so it might work for NS/RANS, but probably not) (@WallyMaier and I also extended it to TNE2 in [feature_amgtne2](https://github.com/su2code/SU2/tree/feature_amgtne2) but the source terms are giving us trouble on adapted meshes); 2. It requires AD support since it uses the discrete adjoint to weigh the Euler flux Hessians; 3. I did all my testing with the AMG executable since pyAMG doesn't have all the features I currently need, but I just updated the branch to use pyAMG. I just tested the new interface with an airfoil and it seems to be working, but there might still be some bugs. You'll want to run mesh_adaptation_amg.py with the following options:; **ADAP_SIZES:** list of mesh complexities for each adaptive level. This is correlated to mesh size, but picking good values requires some playing around; **ADAP_SUBITE:** number of adaptations performed at each adaptive level. If set to (2,3) for example, it will run 2 adaptive iterations to try to reach ADAP_SIZES[0], and 3 iterations to try to reach ADAP_SIZES[1]; **ADAP_EXT_ITER:** number of iterations used by SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_RESIDUAL_REDUCTION:** order of magnitude residual reduction for SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_SENSOR:** currently only works for GOAL; **ADAP_HMAX:** maximum cell size (m); **ADAP_HMIN:** minimum cell size (m); **ADAP_HGRAD:** gradation coefficient (>1) used by AMG during mesh smoothing. A larger value corresponds to larger allowed gradient in mesh size. E.g. for the RAE2822 I used:;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504675574:268,adapt,adaptation,268,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504675574,2,['adapt'],"['adaptation', 'adapted']"
Energy Efficiency,"@ScottImlay : it is wonderful to have your support from Tecplot, and we really appreciate the contribution for improvements through the open source!. I have a first question... I noticed that there are many new files, especially headers from the Boost library. Is it possible to reduce to a smaller set of files that get included, or are all of those that have been added necessary?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-411630702:279,reduce,reduce,279,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-411630702,1,['reduce'],['reduce']
Energy Efficiency,"@TobiKattmann - I was just reading your slides on [multizone](https://su2foundation.org/wp-content/uploads/2020/06/Kattmann.pdf), when I noticed that you mention python scripts not working for multizone, and I guess that would include the mesh adaptation scripts... is this still the case? Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764800900:244,adapt,adaptation,244,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764800900,1,['adapt'],['adaptation']
Energy Efficiency,@TobiKattmann Just test whether it works and gives the same results. The regression test should be added still with the old driver. I will adapt it accordingly.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-527185086:139,adapt,adapt,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-527185086,1,['adapt'],['adapt']
Energy Efficiency,"@WallyMaier . I am able to get two forces since I have defined; `% Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( shell1, shell2 )`. For instance I see . `Surface name: shell1 ; Total CL... ; ... ; Surface name: shell2; Total CL...; ...`. But these coefficients are dependent on shape attributes like `REF_AREA= 0` and `REF_LENGTH= 0.5` (diameter of sphere being 1 unit). I was just curious if there's a way for the user to define `REF_LENGTH` or `REF_AREA` for two objects that are being monitored? At the moment these shapes are the same dimension but I was curious about what to do in the case they are not identical. Thanks a million!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/788#issuecomment-531982235:543,monitor,monitored,543,https://su2code.github.io,https://github.com/su2code/SU2/issues/788#issuecomment-531982235,1,['monitor'],['monitored']
Energy Efficiency,"@WallyMaier thank you. Interesting... 1. This reference reminded me to add the contribution of the turbulence kinetic energy (+2/3 v rho k) in the energy equation source (see page 10 equation 2.30, pdf page 37), so that's done. 2. This reference will be helpful If I get to do the axysimmetry source terms for k and omega (by comparing equations 2.31 and 2.31 to equations B.2 and B.3) but that will be in a separate PR. In fact I am getting good results for RANS already (although no time for a thorough validation). 3. In that reference they have also done what I did before and pulled out the primitive derivatives and neglected the viscosity gradient and then came up with the same axisymmetry momentum source terms so that is comforting. However, their energy source terms are different and that made me think. What we have now is according to the first reference, so it should be fine unless there is an error in it. I find it suspicious that both aux derivatives are wrt y and none wrt x given the that we have one wrt x and one wrt y in the momentum equation... Could it be `AxiAuxVar_Grad_i[2][0]` instead of `AxiAuxVar_Grad_i[2][1]` ? The impact on results is almost unnoticeable for my case. Otherwise we are done here I think. @pcarruscag thanks for taking the time to review!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1106#issuecomment-731141665:118,energy,energy,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-731141665,3,['energy'],['energy']
Energy Efficiency,@aeroamit What does temperature do? Could you compute the heat flux from the temperature in e.g. paraview? Is the root cause the computation of the energy equation or the computation of heat flux?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1106#issuecomment-740820926:148,energy,energy,148,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-740820926,1,['energy'],['energy']
Energy Efficiency,"@all, I agree that it might be a problem for bigger cases and that we have to think of some ways to reduce the memory requirements for the discrete adjoint. . One approach that I started already, is to template the linear solver in order to use double datatype also when running the differentiated version of the code. However, that was more involved than I thought, but still its on my agenda. The nice thing is that this also reduces the runtime a lot. . The next thing is, like @pcarruscag correctly pointed out, the use of preaccumulation. However, this also requires a more detailed analysis, since it can also lead to an increased memory footprint if not applied carefully. Currently, a lot of memory is used for the geometrical derivatives, i.e. the derivatives with respect to the mesh coordinates (this requires approx 1.5 times the memory needed for derivatives with respect to the conservative variables). But since these derivatives are only needed when writing the solution we could think of doing some recomputation as runtime is not that important. So you see we have some ideas and I am sure we can reduce the memory by approx 50% if we apply all of them. However, time is unfortunately limited at the moment, but I will definitely continue improving the adjoint solver. Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/594#issuecomment-427848887:100,reduce,reduce,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/594#issuecomment-427848887,3,['reduce'],"['reduce', 'reduces']"
Energy Efficiency,"@antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png). Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764777223:59,adapt,adapted,59,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764777223,1,['adapt'],['adapted']
Energy Efficiency,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-750490818:289,adapt,adaptation,289,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818,5,['adapt'],"['adaptation', 'adapted', 'adapts']"
Energy Efficiency,"@chiefenne @oleburghardt : I like this idea a lot. This type of reporting is tremendously useful for assessing a simulation. You might want to take a look at the MARKER_ANALYZE capability, which will at least give you basic quantities averaged at any markers you specify (area- or mass-averaged). It likely needs some extension to better handle heat transfer/energy. However, it may be a good place to start when thinking about a more general framework.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/800#issuecomment-543819420:359,energy,energy,359,https://su2code.github.io,https://github.com/su2code/SU2/issues/800#issuecomment-543819420,1,['energy'],['energy']
Energy Efficiency,"@clarkpede I have not used the mesh adaptation tools since my last post (I was simply learning to use them for an undergrad project). With that said, I do not have any other concerns. It worked well for my application. I appreciate your help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-500491744:36,adapt,adaptation,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-500491744,2,['adapt'],['adaptation']
Energy Efficiency,"@drewkett : thanks for your effort here. As this PR is now quite out of date, we will close it for now. . However, now that we have a more efficient process for handling PRs with code review, regressions, etc., I encourage you to resubmit this work if you have the time to update it. We will give it the attention it deserves right away.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/182#issuecomment-429950377:139,efficient,efficient,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/182#issuecomment-429950377,1,['efficient'],['efficient']
Energy Efficiency,"@economon Dr. Alonso emailed me saying that ""We used [grid adaptation] successfully in tetrahedral meshes, but I do not believe the hexahedral adaptation was ever fully functional."" That matches my experience with a few tests I ran.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/492#issuecomment-355796132:59,adapt,adaptation,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/492#issuecomment-355796132,2,['adapt'],['adaptation']
Energy Efficiency,"@economon The behavior without adaptive CFL is similar to its non-adaptive behavior. I cannot increase the CFL greater than a certain value and get convergence. For example, for the 2nd coarsest mesh (297 x 57 or 129) I cannot increase the CFL > 20. This is regardless of weather I use adaptive CFL or not. I cannot set the CFL higher than 20. . But this limit increases slightly for the finer meshes. For example, for the finest mesh I can push the CFL up to 30 (adaptive or otherwise). Basically cannot get high CFLs for the GG reconstruction. I should also mention that all these runs are without slope limiters to get the most accurate solutions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-554101997:31,adapt,adaptive,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-554101997,4,['adapt'],['adaptive']
Energy Efficiency,"@economon for prototyping, the changes proposed in #753 allow a container to be added to CVariable as a public member and thus directly accessible everywhere (one can even allocate only in some derived constructors, with no risk of leaking memory). For release-quality code I think encapsulation is desirable, that being said I'm not above declaring the client solver a friend of the specific CVariable it uses (also with the changes introduced, there would be a way to access member variables directly without moving them to base CVariable).; I like encapsulation not because of OOP principles but because of `GetVelocity(iDim)` instead of `GetPrimitive(iDim+1)`. As for overhead I think it is 0 as long as methods are inline: [example](https://gcc.godbolt.org/z/QXoExF); But in all honesty I also chose to change the CVariable interface as little as possible to make my life easier.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-520226075:172,allocate,allocate,172,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-520226075,1,['allocate'],['allocate']
Energy Efficiency,"@economon, from the config files in the V&V folder, it seems like you ran without adaptive CFL and without the unweighted LSQ. The main difference between the V&V runs and these ones is that I don't use any slope limiter. In the V&V cases the `SLOPE_LIMITER_TURB= VENKATAKRISHNAN` option was used. . There are some other differences: ; 1. I use adaptive CFL; 2. I use `REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE`; 3. Linear solver settings are slightly different. For the V&V runs the following are used: ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-15; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 25; ```; For my runs, I used the settings you had suggested in #790 : ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10; ```; 4. For the SST runs, I did not specify these options that you used in the V&V case: ; ```; % Free-stream turbulence intensity for the SST model; < FREESTREAM_TURBULENCEINTENSITY = 0.00038729; < %; < % Free-strem turbulence to laminar viscosity ratio for the SST model; < FREESTREAM_TURB2LAMVISCRATIO = 0.009; ```; I have attached the config files I used. I am still working on confirming all the regression tests, everything seems to be reasonable thus far. . [flatplate_configs.zip](https://github.com/su2code/SU2/files/4336003/flatplate_configs.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-599337194:82,adapt,adaptive,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-599337194,2,['adapt'],['adaptive']
Energy Efficiency,"@fpalacios : there were two main issues with the regressions. Both are time out problems if Travis waits for over 10 minutes without any console output. The first was that we need to flush the output for Python 3 for each regression test, otherwise there is too long between cases and sometimes it fails. The second is that sometimes it takes too long to download the test cases, so I have added the keywords 'travis_wait 90' in the call to the entire python script in .travis.yml in order to extend the 10 minute restriction to 90 min. We still need to reduce the time for the tests overall, but it seems to be stable for the time being.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-381217217:554,reduce,reduce,554,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-381217217,1,['reduce'],['reduce']
Energy Efficiency,"@jayantmukho, the arguments to the ADT are converted to the data structures used in the ADT. This must be done, because sometimes it is necessary to gather surface grids to all ranks for an efficient search. That is why it is safe to release the memory immediately. Note that it is not necessary to do so, but this is just to avoid that an unnecessary amount of memory is allocated.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-435131100:190,efficient,efficient,190,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-435131100,2,"['allocate', 'efficient']","['allocated', 'efficient']"
Energy Efficiency,"@monika1387 I suggest you to switch to the INRIA pyAMG to do your mesh adaptation (https://pyamg.saclay.inria.fr). There are a couple of elements you need to keep in mind to use it: 1) at present, it seems to work with a specific branch of SU2 (see the link in the pyAMG website), 2) while working on it with INRIA people we found an issue with a file named ""amg.py"" which resides in the SU2_PY/SU2/run folder. I suggest you to replace that with the one attached here.; Please let me know if this works out for you. #!/usr/bin/env python. ## \file adjoint.py; # \brief python package for running mesh adaptation using the AMG Inria library; # \author Victorien Menier; # \version 6.0.0 ""Falcon""; #; # The current SU2 release has been coordinated by the; # SU2 International Developers Society <www.su2devsociety.org>; # with selected contributions from the open-source community.; #; # The main research teams contributing to the current release are:; # - Prof. Juan J. Alonso's group at Stanford University.; # - Prof. Piero Colonna's group at Delft University of Technology.; # - Prof. Nicolas R. Gauger's group at Kaiserslautern University of Technology.; # - Prof. Alberto Guardone's group at Polytechnic University of Milan.; # - Prof. Rafael Palacios' group at Imperial College London.; # - Prof. Vincent Terrapon's group at the University of Liege.; # - Prof. Edwin van der Weide's group at the University of Twente.; # - Lab. of New Concepts in Aeronautics at Tech. Institute of Aeronautics.; #; # Copyright 2012-2018, Francisco D. Palacios, Thomas D. Economon,; # Tim Albring, and the SU2 contributors.; #; # SU2 is free software; you can redistribute it and/or; # modify it under the terms of the GNU Lesser General Public; # License as published by the Free Software Foundation; either; # version 2.1 of the License, or (at your option) any later version.; #; # SU2 is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERC",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:71,adapt,adaptation,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,2,['adapt'],['adaptation']
Energy Efficiency,"@monika1387 There are numerous bugs and difficulties with SU2's in-house mesh adaptivity. Without knowing more specifics about your problem (e.g. seeing your *.cfg file), it's hard to know what the problem is. For example, you should probably *not* be using the `SUPERSONIC_SHOCK` mesh adaptivity option. It seems to be ad-hoc and not generalized to arbitrary shock positions. If you want help with SU2's in-house mesh adaptation, could you post your *.cfg file?. Based on comments by @bmunguia and @MarcoFossati, it seems like you've got a bit of an [X/Y problem](https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem). You could try to fix the problems with SU2's in-house mesh adaptivity. But the bigger question is ""What's the best way to do mesh adaptation in SU2?"" For that, INRIA's AMG library may be the best solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-505438349:78,adapt,adaptivity,78,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-505438349,5,['adapt'],"['adaptation', 'adaptivity']"
Energy Efficiency,"@pcarruscag @WallyMaier ; I think I've adressed most of what you spotted in the latest commits. Thanks for taking so much care - you already helped me a lot getting everything ready to enter the main version, especially concerning the just-for-development adaptions that I had forgotten about. @TobiKattmann ; I sneaked in another commit for primal CHT that _might_ help with your issue. I'm still running tests that might confirm my guesswork. (Though you can already try it by setting `CHT_ROBIN= NO` which will then just directly apply heat fluxes.) I'm coming back to this once I'm sure about it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774#issuecomment-538411667:256,adapt,adaptions,256,https://su2code.github.io,https://github.com/su2code/SU2/pull/774#issuecomment-538411667,1,['adapt'],['adaptions']
Energy Efficiency,"@pcarruscag I tried to restart the solution with zero mach number for config. However, for some reason, convergence takes so much longer than simply solving mach=0.1 config. Indeed, i started my simulation when you post your suggestion and it still haven't converged yet. Residual getting smaller but it is so slow. Therefore it might not be an efficient solution. Thanks for advice anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-632892959:345,efficient,efficient,345,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-632892959,2,['efficient'],['efficient']
Energy Efficiency,"@pcarruscag, Nice.....; I saw the results and cross checked with reference results, they seems to be matching. I also observed that you have changed the mesh (adapted+boundary layer continuation for top wall). ; Seems like mesh was the culprit earlier?? (though inlet still seems to have minor issue but doesn't matter); Also see the attached experiment data file (in case you want to use)...; [Schulein_2004_expt.dat.gz](https://github.com/su2code/SU2/files/8799043/Schulein_2004_expt.dat.gz). Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1651#issuecomment-1141217827:159,adapt,adapted,159,https://su2code.github.io,https://github.com/su2code/SU2/pull/1651#issuecomment-1141217827,1,['adapt'],['adapted']
Energy Efficiency,"@rsanfer , I deleted CFEAFSIBoundVariable and kept its data in CFEABoundVariable because:; - It would require two vertex maps to be build, one for vertices another for interfaces.; - It would be less efficient memory wise, the vertex map is size O(N) the number of vertices is O(N^(2/3)) in the worst case, which means eventually having two maps is worse.; - Most FSI cases have a large interface and small fixed boundaries, allocating FSI tractions for the latter is not so bad. I also removed CDiscAdjMeshVariable, as it was empty, and kept only its ""Bound"" counterpart. With this vertex allocation / mapping strategy we always need to instantiate the ""Bound"" version of the class so if the intermediates are empty they can be omitted. Please review the changes and if you have some more thorough tests run them or send them over to me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/753#issuecomment-526546118:200,efficient,efficient,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/753#issuecomment-526546118,1,['efficient'],['efficient']
Energy Efficiency,@sun5k maybe you can try implementing the alternative I suggested of obtaining turbulence kinetic energy at inlets from the turbulence solver instead of assuming that the free stream value is imposed exactly?; In the SWBLI case the SST-m versions (without divergence terms in the stress tensor) seem to underpredict the separation region https://su2code.github.io/vandv/swbli/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1522006064:98,energy,energy,98,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1522006064,1,['energy'],['energy']
Energy Efficiency,"@talbring : as you know, the difference between disabled and active grid movement with 0 velocity is that the former case does not even allocate the memory for the grid velocity at each node, and many conditionals checking for grid movement throughout the solver (fluxes, BCs) are avoided. This was to save memory and effort when grid motion is not needed, however, maybe we need to now change the strategy for multizone problems which may have both fixed and moving zones (perhaps always active with 0 as default). . I am a little surprised they are not the same as well, but somewhere in the code path there must be an issue with this.. my guess is something related to BC_Fluid_Interface() or the transfer structure when grid movement is active on both sides but has a value of 0 on one of the interfaces.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-505188890:136,allocate,allocate,136,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-505188890,1,['allocate'],['allocate']
Energy Efficiency,"@vdweide It's easy to do, so I'll show the dimensional analysis here. I'll use L for length, T for time, and M for mass. The original paper defined `r_d`, which is supposed to be a nondimensional parameter. (`r_d` gets raised to the 3rd power and put into a hyperbolic tangent, so it would be messy if it were dimensional). In the code you'll see:. r_d = (nu + nu_t)/(uijuij*k2*pow(val_wall_dist, 2.0));. where `nu` is the kinematic viscosity, `nu_t` is the kinematic eddy viscosity, `uijuij` is the magnitude of the velocity gradient tensor, k2 is the square of the von-Karman constant, and `val_wall_dist` is the wall distance. + `nu` has units of L^2/T; + `nu_t` has units of L^2/T; + `uijuij` has units of 1/T; + `val_wall_dist` has units of L. So if you do the math, `r_d` has units of L^/T in the numerator and L^2/T in the denominator. `r_d` is nondimensional. If you switch `nu` and `nu_t` from kinematic viscosities to dynamic viscosities, you get that `r_d` has units matching density, or M/L^3. That's obviously not correct.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/575#issuecomment-418873597:237,power,power,237,https://su2code.github.io,https://github.com/su2code/SU2/pull/575#issuecomment-418873597,1,['power'],['power']
Energy Efficiency,"About the FEA - that is a larger point. I expect that there are quite a few structures being allocated that you don't need for the finite element solver(s) based on the primal grid.. i.e., most of the dual grid structure (edges, dual CVs, etc.). Easy to adjust here for this PR, but we might want to have a larger pass later to selectively allocate only what is needed. Or, adjust the geometry classes slightly to better separate the primal and dual grids.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778#issuecomment-525824799:93,allocate,allocated,93,https://su2code.github.io,https://github.com/su2code/SU2/pull/778#issuecomment-525824799,2,['allocate'],"['allocate', 'allocated']"
Energy Efficiency,"Actually, on closer look, this seems ok. I am only averaging the grid velocities on either side of the face, not the solution. That routine might be more efficient as an edge loop, but should be correct. If you're really bored, see pg. 83 for details about the Geometric Conservation Law as implemented there: https://economon.github.io/docs/economon_dissertation.pdf",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1005#issuecomment-635495594:154,efficient,efficient,154,https://su2code.github.io,https://github.com/su2code/SU2/issues/1005#issuecomment-635495594,1,['efficient'],['efficient']
Energy Efficiency,"Agreed that libraries are great as long as they are optional - sometimes we need them for highly specialized tasks. Btw, is it possible to use your wrapper for other external solvers? For example, it might be worth testing with PETSc again soon for performance reasons. I would encourage making a single base interface for external solvers that talks to the existing structure in SU2, which never needs to change, and then creating the implementations for each solver that adapts the particular solver data structures to the fixed interface (similar with the grid readers and output routines). Is this easy to do now?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-524932838:473,adapt,adapts,473,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-524932838,1,['adapt'],['adapts']
Energy Efficiency,"Agreed, but unfortunately, I think we need to modify how we currently have the test cases set up, because we have a chicken & egg problem. Both of these pull requests require changes to the configs that live in the other repo. Those need to be modified first for the tests to pass, but it seems unsustainable to require commits to separate repos to test the pull requests (this makes this very valuable feature tough to use). We might want to move the configs back into the SU2 repo so that folks can update their tests with their code commits. This way, we will see the green light and accept. On Jul 29, 2015, at 3:31 PM, Brendan Tracey <notifications@github.com<mailto:notifications@github.com>> wrote:. In general, you can wait for Travis to give the green light before merging into develop. This way develop stays working. In addition, when done merging usually I delete the branch to keep things clean. ‚Äî; Reply to this email directly or view it on GitHubhttps://github.com/su2code/SU2/pull/185#issuecomment-126116253.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/185#issuecomment-126116991:571,green,green,571,https://su2code.github.io,https://github.com/su2code/SU2/pull/185#issuecomment-126116991,2,['green'],['green']
Energy Efficiency,"Ah sorry,; SU2_DOT mostly only uses OpenMP in the passive linear system, I'm not sure if @thomasdick Sobolev smoother has some recorded part that involves OpenMP.; For the python wrapper I usually set the number of threads with env var OMP_NUM_THREADS It may be a bit confusing for most users having to specify the number of threads when instantiating the driver :thinking: ; I think disc_adj_flow would be the easiest to adapt. Those tests print a sensitivity at a particular vertex of a marker to be checked by the regression script, so you would have to make sure that's only printed on one rank (for parallel AD).; disc_adj_fea should also be fine for hybrid AD.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1470288877:422,adapt,adapt,422,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1470288877,1,['adapt'],['adapt']
Energy Efficiency,"Ah! Ok, so you may try to tweek PARMETIS_POINT_WEIGHT and PARMETIS_EDGE_WEIGHT.; To balance edges perfectly the point weight may have to be set to a negative value. Those values must be integers. With certain features it is important to have good defaults because a lot of users will not be aware of all the details. So if scotch proves to be much better for large problems, we can create interest. The cost model we use for partitioning is limited, it does not account for boundaries or for multigrid. If you have large symmetry planes this might create imbalance.; The hybrid implementation in SU2 reduces the number of partitions created, which might help parmetis in your case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1307#issuecomment-867062213:600,reduce,reduces,600,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307#issuecomment-867062213,1,['reduce'],['reduces']
Energy Efficiency,"All for improving the abstractions if possible. We did something similar for the scalar upwinding and the viscous schemes already. . My only comments, which you can probably guess already, are to make sure we don't take a large performance hit by adding more layers (for example, one can make an argument to remove the entire set of CNumerics classes and implement the methods more efficiently directly in the solver class with vectorization, etc) and that we maintain the flexibility for folks to quickly add new convective schemes which was the original motivation for the existing structure (and more layers could complicate this). Sounds like you're already considering these things, but it is important to find the right balance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-500942445:382,efficient,efficiently,382,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-500942445,1,['efficient'],['efficiently']
Energy Efficiency,"Alright, Heat-Transfer BC is good to go. Code factor does its usual thing with Complex code but the rest is green. ; Was a bit more than I anticipated but now there is a compressible version as well alongside the incompressible. . An incompressible Testcase was added which briefly explains expected results in the extreme ends of heat transfer coefficient values. What's is left to do for me is to update and merge su2code/su2code.github.io/pull/26 ,In there i will drop a comment or two that advertises the HeatTransfer bc. Thanks @oleburghardt for kicking this off, @pedro for the review and advise and @bigfooted for some chats behind the scenes",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-890359244:108,green,green,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-890359244,1,['green'],['green']
Energy Efficiency,"Alright. I did some digging, and the problem has nothing to do with the warning message. It goes much deeper. In a recent release, SU2 switched to reading and writing binary restart files instead of ASCII. The grid adaptation code is still written only for ASCII. If I'm right, then trying to read a binary restart file with the flow solution breaks the program. I'll submit an issue detailing the bug. For now, try adding the following lines to your cfg file when you run `SU2_CFD`:. %; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= NO; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= NO. Then run `SU2_MSH`, just like you have been. Does that clear things up?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-436131167:215,adapt,adaptation,215,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-436131167,2,['adapt'],['adaptation']
Energy Efficiency,"Also since this issue is getting resolved, is there anyway or option I can; reduced number of variables in exported results? I tried using; VOLUME_OUTPUT= (COORDINATES, PRIMITIVE) deleted SOLUTIONS so that I can; able to reduce the size of file from redundant parameters which i don't; need as of now. But seems like that does not work either and exported .vtk; with same size. It supposed to work like that if I understand correctly. On Mon, Mar 16, 2020 at 6:53 PM Monika Chauhan <monika1387@vt.edu> wrote:. > @clarkepede Sure, I will try to make an example to show .; > So my problem is CD nozzle and I am running FEM-LES solver and exported; > data in .csv and PARAVIEW type. Everything seems good its just I was unable; > to visualize exported .vtk files (open but does not show me the final; > result- stuck in just opening it - I am not sure if its paraview issue or; > its 4 GB file which causing this error). So I tried to export my file using; > Tecplot type option but unable to do so and getting this Bus error which I; > never encountered earlier in SU2 ever (what is that error - YOUR; > APPLICATION TERMINATED WITH THE EXIT STRING: Bus error (signal 7)). So; > trying to dump my files in anyway to visualize them, since its FEM-LES; > solver with DG scheme so files are pretty huge. Still let me know if I need; > to send you an example. Attached .cfg file for reference.; >; >; >; > On Mon, Mar 16, 2020 at 6:13 PM Clark Pederson <notifications@github.com>; > wrote:; >; >> @monika1387 <https://github.com/monika1387> I'm sorry, I still don't; >> understand. Do you have a minimal working example, where you can reproduce; >> the problem you're having?; >>; >> Where does the error occur? In SU2_CFD? In SU2_SOL? In Paraview? In; >> Tecplot? What's the specific error message? What's the context?; >>; >> ‚Äî; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it on GitHub; >> <https://github.com/su2code/SU2/issues/787#issuecomment-599781328>,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-599795725:76,reduce,reduced,76,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-599795725,2,['reduce'],"['reduce', 'reduced']"
Energy Efficiency,"Although my own participation with SU2 is now reduced due to pursuing other endeavors, I want to say that I hope that your future experiences with SU2 and the open-source community will be more positive, that I hope neither of you have been dissuaded from contributing here or on other open-source projects, and that this has been a good reminder that it is easy for things to get heated quickly, especially on the internet where tone of voice cannot be easily conveyed. . @SumanVajjala: ; conv_numerics‚ÜíComputeResidual is setting the fluxes inside of that function, and it uses the normal and flow variable information set at previous lines, ; conv_numerics‚ÜíSetNormal(Normal); (line 10290 in your example) ; conv_numerics‚ÜíSetPrimitive(V_domain, V_infty); (line 10433 in your example). ComputeResidual can be found in numerics_direct_mean.cpp, where you will see that SetResidual is handled differently depending on the numerical scheme chosen, and that calls to GetInviscidProjFlux are included. ; A similar pattern is followed in the other boundary conditions, although there may be more going on here which someone else may be able to comment on. . If you have any questions that are not bugs/code issues, SU2 also has a forum at: https://www.cfd-online.com/Forums/su2/. I also recommend using an IDE (xcode, eclipse, etc) to assist with navigating the code. Best,; Heather",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-314942908:46,reduce,reduced,46,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-314942908,1,['reduce'],['reduced']
Energy Efficiency,And a comment on memory: buffers for the output are now allocated once at the beginning and the overall peak memory consumption has been reduced compared to develop.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-535044389:56,allocate,allocated,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-535044389,3,"['allocate', 'consumption', 'reduce']","['allocated', 'consumption', 'reduced']"
Energy Efficiency,"And here is a simple test case demonstrating potential use. A major benefit of the supersonic inlet is being able to model supersonic propulsion systems, such as a scramjet, where the propulsion system exit boundary is modeled as a supersonic inlet, with distinct properties from the farfield flow conditions. Here we have a two dimensional test case demonstrating the interaction of exhaust flow with free-stream flow at the exit plane of a 2D scramjet system. Flow conditions adapted from [A Design Method for Three-Dimensional Scramjet Nozzles with Shape Transition](https://arc-aiaa-org.stanford.idm.oclc.org/doi/abs/10.2514/1.B38293); Jens Kunze, Michael K. Smart, and Rowan Gollan; Journal of Propulsion and Power 2022 38:1, 3-17. <img width=""1262"" alt=""image"" src=""https://user-images.githubusercontent.com/44848904/211415971-b6122204-0d95-43ca-903b-d60fd6326c39.png"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1375043856:478,adapt,adapted,478,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1375043856,3,"['Power', 'adapt']","['Power', 'adapted']"
Energy Efficiency,Another possibility would be to compress the boost files and uncompress it during configure/preconfigure. With tar.gz this reduces the size down to 15 MB.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-427287810:123,reduce,reduces,123,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-427287810,1,['reduce'],['reduces']
Energy Efficiency,"Another potential issue is unnecessary recording of computations. Jayant and I noticed that on his fix_wall_distance branch, the MG 2 case mentioned above was using 8GB more than on develop because during the tree search, the distance computations to all possible bounding boxes were being recorded, when the only necessary computation for recording is the final computation (once the minimum distance node is determined). So I wonder if there are other places in the code where we can turn off recording to reduce memory usage. I'm curious what @talbring's thoughts are. Best,; Brian",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/594#issuecomment-427592996:508,reduce,reduce,508,https://su2code.github.io,https://github.com/su2code/SU2/issues/594#issuecomment-427592996,1,['reduce'],['reduce']
Energy Efficiency,"As I mentioned in my initial post, first-order works fine while restarting from the steady flow solution but when I want to restart FSI from a later time iteration, SU2 diverges. By subcycling, I meant that I would like to use different time step sizes for structure and fluid. For example, if I specify an FSI timestep of 1e-02s then I would like to use smaller timesteps on the fluid side (like 1e-05s) and maybe keep the structure time step to 1e-03s, and when both fluid and solid reach the same time, the deformation and load convergence be monitored and if they have not converged then another outer iteration would begin. Does that make sense?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1287#issuecomment-840632215:546,monitor,monitored,546,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-840632215,1,['monitor'],['monitored']
Energy Efficiency,"As for the question I raised, Dr. Alonso mentioned the problem in an email he sent me. He said, ""We used [grid adaptation] successfully in tetrahedral meshes, but I do not believe the hexahedral adaptation was ever fully functional."". That matches my experience with a few tests I ran. After playing around a little, it seems like adaptivity for hexahedra was only partially finished. Many sections of the are implemented, but there seem to be both bugs and unfinished implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/487#issuecomment-355796302:111,adapt,adaptation,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/487#issuecomment-355796302,3,['adapt'],"['adaptation', 'adaptivity']"
Energy Efficiency,"As requested, here's an example of a unit test that I made. For context: There's a couple of different modes for the Roe-low-dissipation convective blending. If one of the ""DUCROS"" modes is selected, then the Ducros sensor values are used. Otherwise, they're ignored. Before commit [ac8b3bf](https://github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f), the `SetRoe_Dissipation` function checked to see if the sensor values were valid regardless of the type of blending selected. Commit [ac8b3bf](https://github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f) changed the behavior to only check the sensor values if they will be used. The unit test sets the convective blending to `NTS`, feeds invalid sensor values into `SetRoe_Dissipation` and checks the output. ```cpp; // Used to set the Roe-low-dissipation option; void WriteCfgFile(unsigned short nDim, const char* filename,; std::string blending) {; std::ofstream cfg_file;. cfg_file.open(filename, ios::out);; cfg_file << ""PHYSICAL_PROBLEM= NAVIER_STOKES"" << std::endl;; cfg_file << ""ROE_LOW_DISSIPATION= "" << blending << std::endl;. cfg_file.close();; }. BOOST_AUTO_TEST_CASE(BadSensorsAllowedForNTS) {. /*--- Setup ---*/. const unsigned short nDim = 3;. /*--- Set up the config class for the test ---*/; char cfg_filename[100] = ""convective_blending_test.cfg"";; WriteCfgFile(nDim, cfg_filename, ""NTS"");; CConfig* config = new CConfig(cfg_filename, SU2_CFD, 0, 1, 2, VERB_NONE);; std::remove(cfg_filename);. /*--- Inputs ---*/; const su2double dissipation_i = 0.4;; const su2double dissipation_j = 0.6;; const su2double sensor_i = NAN; // Intentionally unphysical:; const su2double sensor_j = NAN; // Intentionally unphysical:. /*--- Outputs ---*/; su2double dissipation;. /*--- Test ---*/. CNumerics numerics;; numerics.SetRoe_Dissipation(dissipation_i, dissipation_j,; sensor_i, sensor_j,; dissipation, config);. const su2double tolerance = std::numeric_limits<su2double>::epsilon();; BOOST_CHECK_CLOSE_F",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499999225:216,sensor,sensor,216,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499999225,8,['sensor'],['sensor']
Energy Efficiency,"Below is a new testcase, laminar flow around a cylinder. In the line figure I show the normal velocity on the axis y=0, with the solid red line the results from develop. The dashed line is with only the new Green-Gauss correction. It always leads to an improvement. These 2 results were obtained with an undisturbed grid. I then distort the grid a bit (as seen in the contour plot) and rerun the GG correction and I get the green line. Still an improvement, but a bit more bumps on the line.; I then correct the edge normals as done in CPhysicalGeometry. I then get the jagged line shown.; The correction using the residuals in BC_Sym_Plane seems to be ill-defined because the final converged solution depends on the initial solution [so I do not show tests with it here, I kept the original bc_sym_plane]. ; ![Screenshot_cylinder](https://github.com/su2code/SU2/assets/7050568/a16db8e1-78c5-482b-a91a-4b0d59b52f0d)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194#issuecomment-1891845061:207,Green,Green-Gauss,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194#issuecomment-1891845061,2,"['Green', 'green']","['Green-Gauss', 'green']"
Energy Efficiency,"Below is a zoom of the 2D flow in a rectangular channel. The flow is from left to right. The top side is a wall, the left side is the inlet. We are looking at the corner node shared by the inlet and the wall.; Pictures showing the Pressure for old (develop) and new implementation. The local pressure changes reduce by more than one order of magnitude:; ![2024-04-16_23h37_19](https://github.com/su2code/SU2/assets/7050568/d7ca22c1-19be-42d4-b186-294312b9a0cc); ![2024-04-16_23h34_15](https://github.com/su2code/SU2/assets/7050568/4fe91f44-8072-4c7a-a633-7a9acff09f84). Old and new energy near the corner:; ![2024-04-16_23h35_55](https://github.com/su2code/SU2/assets/7050568/1ad10991-bdf4-4bc8-bf90-2e625bd3ef4d); ![2024-04-16_23h33_50](https://github.com/su2code/SU2/assets/7050568/d237f6bb-3a44-4642-937c-1fd6ce3441a2). Near the corner, the y-momentum (radial velocity) is not zero:; ![2024-04-16_23h34_41](https://github.com/su2code/SU2/assets/7050568/b62c7b32-0402-49ff-983a-dc11c171ba95)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2266#issuecomment-2059984982:309,reduce,reduce,309,https://su2code.github.io,https://github.com/su2code/SU2/pull/2266#issuecomment-2059984982,2,"['energy', 'reduce']","['energy', 'reduce']"
Energy Efficiency,"Can you confirm what results you're actually getting with the `SUPERSONIC_SHOCK` option? I'm having trouble producing something like what you see in the figure above. When I run the `SUPERSONIC_SHOCK` option, I get no elements adapted (3626 elements for both cases). This has to due with how the supersonic shock refinement is set up, which seems ad-hoc. I don't think the `SUPERSONIC_SHOCK` option can be used for general cases. Other developers know more about this than me--that section of the code goes all the way back to v1.0 of SU2. Maybe @fpalacios or @economon can tell you more about the mesh adaptation?. You might also be interested in the recent collaboration between the SU2 developers and the developers of the INRIA-AMG library. It seems like SU2 development is moving away from in-house mesh adaptation codes and more towards leveraging the AMG library. There was a presentation about it back in 2016 [that you can find here](https://su2code.github.io/documents/su2_dev_alonso.pdf). There was also a talk about it at the recent SU2 conference that [you can watch here on YouTube](https://youtu.be/jkZaPsKDvvQ?t=16318).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-438766705:227,adapt,adapted,227,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-438766705,3,['adapt'],"['adaptation', 'adapted']"
Energy Efficiency,"Can you run it with valgrind to check if there is a memory issue? Compile with -g. Also, does the problem persist if you reduce the number of MPI ranks?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-755280266:121,reduce,reduce,121,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755280266,1,['reduce'],['reduce']
Energy Efficiency,"Certainly sounds like an important data point, as our comms are non-blocking too.; I'm not familiar with Open FOAM to go peek under the hood, but from this page (https://www.openfoam.com/releases/openfoam-v1712/parallel.php) it sounds like it uses a multilevel domain decomposition, decompose by nodes, then by processors, and then by cores (maybe). Which would reduce the number of comms going in/out of each node (which is what the hybrid solver hopes to achieve). I remember seeing output messages from CFX indicative of similar strategies. We don't have as many people working on performance as the organizations behind those codes, but we will get there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593638807:362,reduce,reduce,362,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593638807,1,['reduce'],['reduce']
Energy Efficiency,"Classic stale bot. There are only 2 fixes since the UR fix was merged into develop in #1057, the Inner vs TimeIter fix and turning off CFL adaptation for the discrete adjoint (which I just added). If we're holding off on any algorithmic changes, I guess the only thing to discuss is which CFL should be used for the discrete adjoint. As is, it'll use whatever's specified in CFL_NUMBER in the config file, but I'm personally in favor of storing the local CFL to reduce the bottleneck of the adjoint. This could also be part of a separate PR if you need the bug fixes yesterday.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-739058644:139,adapt,adaptation,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739058644,2,"['adapt', 'reduce']","['adaptation', 'reduce']"
Energy Efficiency,"Compile with -g or when using meson just add --buildtype=debug to the arguments to build the executable. Then run it as follows. mpirun -np 40 valgrind SU2_CFD case.cfg. The probably get quite a few false warnings from MPI, but you can filter those out. Try to reduce the number of ranks, if possible.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-755310139:261,reduce,reduce,261,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755310139,1,['reduce'],['reduce']
Energy Efficiency,"Dark mode?; ""Is it possible to learn this power?""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743123950:42,power,power,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743123950,2,['power'],['power']
Energy Efficiency,"Dear @ChiefSeaBiscuit ,. thank you very much for bringing up this issue. I will open in the coming days a pull request with the implementation of non-polytropic gas model, in which the specific heat capacity will be a function of the temperature. I will take the opportunity in that pull request to fix all the bad commenting. In the mean time, i can describe what this properties are:. **_dPdrho_e_**, /!< \brief derivative of pressure w.r.t. density at constant energy; **_dPde_rho_**, /!< \brief derivative of pressure w.r.t. energy at constant density; **_dTdrho_e_**, /!< \brief derivative of temperature w.r.t. density at constant energy; **_dTde_rho_**, /!< \brief derivative of temperature w.r.t. energy at constant density; **_Cp_**, /!< \brief Specific Heat Capacity at constant pressure. /; **_Mu_**, /!< \brief laminar viscosity; **_dmudrho_T_**, /!< \brief derivative of the laminar viscosity w.r.t. density at constant temperature; **_dmudT_rho_**, /!< \brief derivative of the laminar viscosity w.r.t. temperature at constant density; **_Kt_**, /!< \brief laminar thermal conductivity; **_dktdrho_T_**, /!< \brief derivative of the laminar thermal conductivity w.r.t. density at constant temperature; **_dktdT_rho_**; /!< \brief derivative of the laminar thermal conductivity w.r.t. temperature at constant density. Regards. Salvo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/414#issuecomment-315601588:464,energy,energy,464,https://su2code.github.io,https://github.com/su2code/SU2/issues/414#issuecomment-315601588,4,['energy'],['energy']
Energy Efficiency,"Dear Marco,; That‚Äôs really an awesome website to show the power of SU2. Definitely make SU2 great. I have no problem now. If I have more relevant questions about AMR, I will reopen the issue. Thanks for your information, Macro!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/743#issuecomment-514659919:58,power,power,58,https://su2code.github.io,https://github.com/su2code/SU2/issues/743#issuecomment-514659919,1,['power'],['power']
Energy Efficiency,"Dear WenyinWei,; presently SU2 is interfaced with the INRIA AMG library for mesh adaptation. You can find all the necessary details and examples at https://pyamg.saclay.inria.fr. There are efforts going on in Stanford to connect it to goal-oriented adaptation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/743#issuecomment-514651250:81,adapt,adaptation,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/743#issuecomment-514651250,2,['adapt'],['adaptation']
Energy Efficiency,"Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; ```; solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; }; ```; Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/918#issuecomment-603929367:204,adapt,adaptive,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603929367,2,"['Adapt', 'adapt']","['AdaptCFLNumber', 'adaptive']"
Energy Efficiency,"Documenting the plan discussed in our developers call this morning here:; * Put header and sources together ; * Remove separation between Common/, SU2_CFD/, etc.; * Each major folder becomes a library (geometry/, solvers/, etc.); * Keep some subdirectories in major folders (e.g., solvers/flow/); * Set up include paths in the meson build system to make #include statements clean in the source; * Will prob require removing automake as part of this, which can‚Äôt build these libraries in parallel. Still need to finish separating files first. Tasks:; * @talbring - iteration classes; * @jayantmukho - grid adaptation, ADT structure, grid movement; * @pcarruscag - AD structure, folders for fem_\* ; * @economon - fluid model. Somewhat related:; * Run a test to see how many formatting-related conflicts result from running clang-format on and then diffing two fairly different branches (@pcarruscag). Please add anything else I am missing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-631567733:605,adapt,adaptation,605,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-631567733,1,['adapt'],['adaptation']
Energy Efficiency,"FYI, just so I can keep debugging the RANS adaptation in feature_adap_sst, I've merged it into [feature_adap](https://github.com/su2code/SU2/tree/feature_adap). You should use feature_adap instead from here on out since feature_adap_sst will be pretty volatile. I'll modify my comment above in case anybody references this thread.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619421429:43,adapt,adaptation,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619421429,1,['adapt'],['adaptation']
Energy Efficiency,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:163,adapt,adaption,163,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720,3,"['Adapt', 'adapt']","['Adaptive', 'adaption']"
Energy Efficiency,"First off, I love the changes. A cleanup of COuput and greater output flexibility were much needed. So let me see if I understand this code. Say that I, as a developer, want to add a new variable to the volume output. For example, I want the production of turbulent kinetic energy from the SST model during a compressible simulation. As a user, I can always add new outputs by adding new field names to the config file. But production isn't one of the (currently) available config-file options. So I would have to code it. First, I would obviously make sure that the production is properly stored in the turbulence variable class, with an accessor like `GetTurbProduction()`. Second, in `CFlowCompOutput::LoadVolumeData`, I would add to the appropriate place:. ```cpp; SetVolumeOutputValue(""PRODUCTION"", iPoint, Node_Turb->GetTurbProduction());; ```. Third, I would add `PRODUCTION` as a cfg input by adding the following line to `CFlowCompOutput::SetVolumeOutputFields`:. ```cpp; AddVolumeOutput(""PRODUCTION"", ""Turb_Production"", ""PRIMITVE""); ```. I could also split off production into its own output group by changing `PRIMITVE` to any other name. This name does not have to be registered anywhere else. In other words, I can change `PRIMITVE` to `SST_NUMERICS` and the only other place I need to put `SST_NUMERICS` is my cfg file. Finally, I could add either of the two following lines to my cfg file:; ```; VOLUME_OUTPUT= (COORDINATES, SOLUTION, PRODUCTION) ; VOLUME_OUTPUT= (COORDINATES, SOLUTION, SST_NUMERICS); ``` . Is this example correct? If not, what am I misunderstanding? What am I missing?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-514031723:274,energy,energy,274,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-514031723,1,['energy'],['energy']
Energy Efficiency,"Fixed up the alignment issues, but I really think it is time that we move to an auto-formatter as a project (clang-format or another tool). It is not sustainable in a large project such as this to manually manage it. We can do it as a pre-commit hook, which is a bit harsh as it forces everyone to install the formatter and could cause issues at commit time for folks, or we could also do it as a GitHub action perhaps. For instance, ninja can already do this for us as a one liner: install clang-format, drop a .clang-format file into the root SU2/ directory, configure a build, cd into build folder and ```$ ninja clang-format``` = entire project auto-formatted into a style of our choosing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/969#issuecomment-625329082:150,sustainab,sustainable,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/969#issuecomment-625329082,1,['sustainab'],['sustainable']
Energy Efficiency,For example Green-Gauss gradients have an exclusion for internal boundaries but not for nearfield ones.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-897967394:12,Green,Green-Gauss,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-897967394,1,['Green'],['Green-Gauss']
Energy Efficiency,"For instance, In Ubuntu you have System Monitor - History where you can see if you hit the memory limits, and you can see which processes are responsible for memory consumption.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2148#issuecomment-1782420632:40,Monitor,Monitor,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/2148#issuecomment-1782420632,2,"['Monitor', 'consumption']","['Monitor', 'consumption']"
Energy Efficiency,"GS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writes to 2 locations (gather / scatter access pattern, not to be confused with the instructions) processing multiple edges at the same time can therefore result in race conditions where multiple threads try to update the data of the same point.; There are 3 ways to address this:; - **Coloring**: Edges are colored (grouped) such that edges of the same color have no risk of race conditions, i.e. each endpoint is referenced only once per color (this definition gives you the basis of a greedy algorithm to color edges).; - **Scatter to gather transformations**: Edge quantities (e.g. fluxes) are computed and stored on one pass (i.e. we read from 2 locations and write to 1), on a second pass, over points, we reduce (e.g. sum) the edge quantities for each point, again a gather access pattern. It may also be possible to convert the entire algorithm to a loop over points instead of edges.; - **Atomic operations or locks**: Here when a thread wants to write to a memory location it either needs to do so atomically (this is essentially an operations that always goes through main memory and forces cache coherency) or it needs to acquire a *lock* for the point it is writing to, if it fails to acquire the *lock* (because another thread has it) it needs to wait. None of these is without drawbacks.; - **Coloring** reduces temporal locality, edges are sorted in increasing order of the point indices to reduce cache misses, this means small groups of contiguous edges will share the same ""iPoint"", coloring single edges destroys this. Furthermore coloring either requires edges to be re-sorted by color, or if the edge indices of each color are instead kept in arrays, perfor",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:4462,reduce,reduce,4462,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['reduce'],['reduce']
Energy Efficiency,"Good idea.. you can easily add the wall distance to the output in LoadLocalData_Flow() in output_structure.cpp. In the images, the half-cylinder (symmetry planes on top and bottom) has a solid zone inside with heat conduction. The interface there is a no-slip wall with the CHT_WALL_INTERFACE type. The downstream surface is also no-slip, but it is a typical ISOTHERMAL wall. Since the CHT_WALL_INTERFACE type was not considered earlier (only the trailing no-slip wall), I think that you will see a reduced wall distance near the cylinder, which will impact the turbulent solution. I expect some differences due to the change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-436307962:499,reduce,reduced,499,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-436307962,1,['reduce'],['reduced']
Energy Efficiency,Good job @EvertBunschoten. If you want we can schedule a call together and plan the development a bit.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-1785154254:46,schedul,schedule,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-1785154254,1,['schedul'],['schedule']
Energy Efficiency,"Good point about making the eigen-functions static. That makes it a lot more accessible in other parts of the code. Will include that in the changes along with the option name changes. . I like the idea about the static allocation, but I foresee a problem that you actually mention. If I convert the variables to be statically defined, I would have to make the eigen-functions accept statically defined arrays. Since most arrays in SU2 are dynamically allocated, this would cause some compatibility issues. . In general, I see the value in making a math library associated with matrix operations. Maybe you could pitch the idea in an issue and get feedback on it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-433963723:452,allocate,allocated,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-433963723,2,['allocate'],['allocated']
Energy Efficiency,Guilty as charged.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-746305289:10,charge,charged,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-746305289,1,['charge'],['charged']
Energy Efficiency,"Guys,. Thanks for your feedback. @pcarruscag, the reason why I made a different enum rather than a boolean USE_SST_SUSTAINING_TERMS is that all different SA versions also have a different enum. So I thought this was more consistent. But if there is a strong preference for an additional boolean, I'm fine with that as well. What we can do is to keep the enum and set the boolean USE_SST_SUSTAINING_TERMS internally and overwrite SST_SUST to SST. @talbring, @jayantmukho, I am in favor of keeping the original version of SST. Although the difference between the models is rather small, basically the addition of one term, the difference in results can be quite significant, especially for relatively low Reynolds numbers and large value of the turbulent intensity. . @economon, you are right that a lot of the checks for SST are actually more general checks for a two equation model. So I think that most, if not all, checks for SST can be replaced be a check for the number of turbulent equations. That is more general as well, in case we want to add additional turbulence models in the future, assuming that an equation is present for the turbulent kinetic energy if the number of turbulence equations is two or bigger.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/765#issuecomment-524053082:1158,energy,energy,1158,https://su2code.github.io,https://github.com/su2code/SU2/pull/765#issuecomment-524053082,2,['energy'],['energy']
Energy Efficiency,Have you tried different gradient methods? Green-Gauss v Weighted Least Squares,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373#issuecomment-938679304:43,Green,Green-Gauss,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-938679304,1,['Green'],['Green-Gauss']
Energy Efficiency,"Have you tried the Newton-Krylov approach in SU2? Boostconv sounds like Newton-Krylov. Our limitation with NK at the moment is that we don't have a good linear preconditioner to converge the Krylov solver to reasonable tolerances at high CFL (which is required to make this type of approach effective and efficient). In the papers, the types of problems to which they apply these methods are very different from the application you have in mind. There is a lot of work that should be done on the numerical schemes for high-speed (and even low-speed) to understand where the robustness issues originate. If these methods can be used as black boxes, it would be a good idea to implement them via the Python wrapper if possible.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022#issuecomment-1533813361:305,efficient,efficient,305,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022#issuecomment-1533813361,1,['efficient'],['efficient']
Energy Efficiency,"Hello Pedro, ; thank you for your last comment, I think that some unintended double accounting was happening.; I removed two sections:; - the first with if (rotating_frame) is captured by if (dynamic_grid) in CFVMFLowSolverBase ; - the second if (windgust) should be zero anyway. The results look plausible to me: the green line shows farfield onflow + gust while the violet line shows moving grid + gust. If you zoom in (second plot) you see some small differences, for which I have no explanation so far. . What do you think? ; (Side note: I will be in the Alps for the next few day and be back in office on Thursday. ). ![NACA0009_gust+movinggrid](https://user-images.githubusercontent.com/96138805/227219816-2687753e-eee0-4e97-8853-11314605abc4.png); ![NACA0009_gust+movinggrid_zoom](https://user-images.githubusercontent.com/96138805/227219831-948d4899-3b30-4c3d-bd0d-ed3d3b53fddc.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1481223303:318,green,green,318,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1481223303,1,['green'],['green']
Energy Efficiency,"Hello Tobi, Charanya, ; I run the simulation with my FSI framework including @economon modifications as suggested by @TobiKattmann. Unfortunately the simulation crashed due to server problems before it was complete but the partial results give us some preliminary information.; ![Comparison](https://user-images.githubusercontent.com/23583209/83328161-42989c00-a281-11ea-8b52-39b1967c1f69.jpg). The figure proposes the same time domain GAF comparison shown in https://github.com/su2code/SU2/issues/828#issuecomment-576826669.; The blue line is the GAF for the bending mode of the ONERA M6 as calculated with the new (at the time) BC. The red line is calculated enforcing the old boundary conditions as suggested by @cvencro and which proved to be a successful approach in retrieving the validated old results. Here in green I add the solution run with Tom's fix of the BC as discussed with Tobi. You can notice how this new version, while featuring a response similar to the reference response, shows a filtering of the higher frequency dynamics. Can't do yet the Fourier transform of the signal to quantitatively asses at which frequency the results start diverging from the reference, so I don't know how much this discrepancy is, in effect, relevant. ; We are talking about really high frequency dynamics which may be due to the numerical scheme. Certainly, it would be interesting to understand the cause of that.; ; Best,; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-636327003:818,green,green,818,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-636327003,1,['green'],['green']
Energy Efficiency,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:128,adapt,adaptation,128,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809,9,"['Adapt', 'adapt']","['Adaptation', 'adaptation']"
Energy Efficiency,"Hello!; Thanks for your help. Writing the line:; OUTPUT_FILES= RESTART_ASCII. enabled the simulation to run past 250 iterations and after 4500 or so iterations, I was able to yield the correct values for Cl and Cd.; However, an issue still persists. The file restart_flow.csv doesn't seem to appear in the directory. I have amended the config file to have the lines:. OUTPUT_WRT_FREQ = 10; OUTPUT_FILES=(RESTART_ASCII). at the very end. However, after 10 iterations, a csv file isn't created.; I am not sure how to go about fixing this issue so any help is appreciated.; I have attatched the amended configuration file and a screenshot from Windows Powershell.; [turb_NACA0012_sa.txt](https://github.com/su2code/SU2/files/8008885/turb_NACA0012_sa.txt). Thank you; ![SU2_](https://user-images.githubusercontent.com/99037921/152658358-bdf3c06c-d3a6-4343-aa14-d5d7c7374cb9.png); !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1537#issuecomment-1030696289:649,Power,Powershell,649,https://su2code.github.io,https://github.com/su2code/SU2/issues/1537#issuecomment-1030696289,1,['Power'],['Powershell']
Energy Efficiency,"Hello,. I ran an incompressible case with NACA 0012 (AoA=0, TMR case) and I see a similar difference between SA and SST on the grid level 3 (https://turbmodels.larc.nasa.gov/naca0012_grids.html, 257 points on the airfoil surface). I also tried the SST_SUST model and have attached the plots for mid section and wake here (white lines - SA, red - SST, green - SST_SUST). The SUST model gives the same difference at mid chord and LE but not in the wake. The SST_SUST under predicts the drag value though (also I had some convergence issues with SUST).; ![pressure_line_cmp_mid](https://user-images.githubusercontent.com/28007882/66496216-dd5a2580-eaba-11e9-869e-097cce8e52b4.png); ![pressure_line_cmp_wake](https://user-images.githubusercontent.com/28007882/66496217-dd5a2580-eaba-11e9-9c72-1980625dd550.png). @economon , the SetStressTensor routine includes the -2/3 * rho * TKE term, so I suppose the TKE is accounted for in the viscous residual of the mean flow equations. . @emoralest6 if you wanted to check the source code, the mean flow solver is in SU2_CFD/src/solver_direct_mean.cpp and the corresponding numerics in the SU2_CFD/src/numerics_direct_mean.cpp file. Cheers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-540063840:351,green,green,351,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-540063840,1,['green'],['green']
Energy Efficiency,"Hello; I'm so glad to see that the su2 meeting has been so productive!; To address Eran's concern, maybe it would be more reasonable to run v&v on; major releases only, aka 7.0 but not 7.1, and I agree that keeping a record; of the most recent version checked is a good idea-and as necessary minor; releases could be tested, as suggested by individual developers. The regression tests should ensure that the v&v results will be unlikely to; be changed. One thing we can do to reduce that risk further would be to; introduce regression tests that compare solution files rather than the; terminal output alone. I can take a stab at that if there's no other; volunteers- probably only needs to be a couple of critical tests, the file; diff may be slightly more expensive than currently, but given the increase; in test precision and detail I think it would be worth it. H. On Thu, Sep 20, 2018, 1:46 PM erangit <notifications@github.com> wrote:. > Hi All; > I‚Äôm a bit worried about the logistics related to checking this v&v data; > base for every new release.; > Unlike the tutorials, these cases, by their nature will be large and will; > require long integrations(the 2D cases might not fall on this category).; > This means also that significant computational resources will be required; > for this evaluation (about twice a year for a growing list of cases). Is it; > practical?; > The only way that I think that it might work is that each contributor will; > be responsible for checking the casesthat he has introduced, before each; > release. Being a voluntary institution, this can not be enforced (and we do; > not want to enforce). How about trying to be less demanding:; > In each validation case there will be a statement about the last version; > that it was checked with and the responsible contributor. Each contributor; > will receive a recommendation to check his cases before a new release, and; > will be able to do that and update the OK label also after the release.; > Less waterpro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423283690:476,reduce,reduce,476,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423283690,1,['reduce'],['reduce']
Energy Efficiency,"Here a fluid-only case that somewhat quickly converges. Contains the mesh, 1 cfg for primal and adjoint and a little bash-script where the path to the SU2 binaries has to be adapted to fit your system. The idea was to first run primal and adjoint with vanilla develop and then the same with the new code. I left the log-files of my run in there as well for a quick look . If there is something else I can do let me know. . [new-per-bc-test.tar.gz](https://github.com/su2code/SU2/files/8408958/new-per-bc-test.tar.gz)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585#issuecomment-1087404188:174,adapt,adapted,174,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585#issuecomment-1087404188,1,['adapt'],['adapted']
Energy Efficiency,"Hey Akshay,; I found out the other day that this: `unordered_map<pair<int,int>, su2double>` does not work without extra tricks, and the alternative `map<pair<int,int>, su2double>` may not be very efficient, so if you have it out of the config in some matrix format it is probably better.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-653157902:196,efficient,efficient,196,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653157902,1,['efficient'],['efficient']
Energy Efficiency,"Hey Tom,. this was fast ! Thanks for the first step in making the output structure more efficient and flexible. So far it looks good. I'll test it for the adjoint soon. @LaSerpe I think for the beginning these things will be hard-coded. But defining this in the config file is definitely a feature we should discuss.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-259400331:88,efficient,efficient,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-259400331,1,['efficient'],['efficient']
Energy Efficiency,"Hey everyone! Just posting the results from one of the NASA TMR verification test cases I have been running: [the DSMA661](https://turbmodels.larc.nasa.gov/airfoilwakeverif500c.html). Using Least Squares (LSQ) for the gradient reconstruction does affect the results and can be seen from this force convergence plot. Using the same gradient reconstruction (GG) gives more accurate results. The two SU2 runs were done using identical linear solver parameters. The only difference is that for the GG+LSQ case, I specified : `NUM_METHOD_GRAD_RECON= LEAST_SQUARES` and for the GG case, I had to reduce the max CFL down to ~20 for it to get stable. . ![cfl_adap_force_convergence_dsma661_SA](https://user-images.githubusercontent.com/30271435/68785755-7ec12380-05f3-11ea-89e3-4b93edeb9d64.png). But due to the much lower maximum CFL, the GG run takes 40-50x longer to reach the same level of convergence. I'm not sure what else can be done to make adaptive CFL better for the GG or WLSQ cases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-553494652:590,reduce,reduce,590,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-553494652,2,"['adapt', 'reduce']","['adaptive', 'reduce']"
Energy Efficiency,"Hey, . As Tom suggested in #997 I reran the pitching NACA64A010 (already shown above by @cvencro) with the branch `fix_gridvel`. Below CM over AOA which includes a version run with Toms fix which recovers the results given by the old Euler Wall (blue and green curve match) :+1: For comparison I also snipped and added the image from above. . Note that the `+Roe ` in the legend of my image refers to `conv_bound_term` which is the convective scheme used on boundaries (I tried other possiblities that's why I added that `+Roe`). In unmodified code that is always Roe (for compressible flow) as it is hardcoded. . ![CM_over_Aoa](https://user-images.githubusercontent.com/31306376/82845493-22658780-9ee5-11ea-9cdc-0ec4eee7a939.png); ![Cvencro_CMoverAOA828](https://user-images.githubusercontent.com/31306376/82845653-a750a100-9ee5-11ea-8a7b-8610748b6a48.png). I am confident that this also recovers the results that @RoccoBombardieri expects from his case. Can you rerun the case maybe with the `fix_gridvel` branch, or just adding the few changed lines in CEulerSolver.cpp? If that solves this issues I would be more than happy to take of that fix getting merged. . I will also rerun my latest test tomorrow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-633731665:255,green,green,255,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-633731665,1,['green'],['green']
Energy Efficiency,"Hey, I‚Äôve been developing the SU2 FWH solver with a couple of folks over the past few years. If you look me up on google scholar you‚Äôll see our related publications. The idea is to merge it in V7 and make it open source soon. I‚Äôm on vacation right now. Let‚Äôs schedule a call in around two weeks time? (beckett.y.zhou@gmail.com). Best,; Beckett. On 13. Sep 2020, at 07:38, monika1387 <notifications@github.com> wrote:. Ôªø. I am working on this FWH analysis for far field spectra on jet noise from LES by SU2 Code with ADER-DG FEM, results are in good agreement.; First, for FWH, I do not see any good implementation example or readme file to go through this analysis implementation, Can someone please share if it exist anywhere? I see branch only Edurado (still does not have any readme and also its in Python). Second SU2 FWH formulation is based on time domain based (by Farasssat), is anytime SU2 team implemented FWH analysis for frequency domain formulation by Lockard as well? I do not see anything in SU2, If it exists again can someone share details about it? I would like to work on this Freq domain based FWH analysis, so help me if SU2 team developed it anytime or in process?. Thank you in advance for help!. ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/1073>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ADXOSTYQYI6NDZIYAM3LXYLSFRLENANCNFSM4RKN7PNQ>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1073#issuecomment-691701721:259,schedul,schedule,259,https://su2code.github.io,https://github.com/su2code/SU2/issues/1073#issuecomment-691701721,1,['schedul'],['schedule']
Energy Efficiency,"Hi @TobiKattmann . Thank you for making lots of suggestions. I'm out of town now, so I'll address those once I get back later this week. > > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > exceeding 1e-1.; > ; > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :). Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. > For example Green-Gauss gradients have an exclusion for internal boundaries but not for nearfield ones. @pcarruscag So, I need to make something similar to internal boundaries? The flowfield looked reasonable though except when I use the VENKATAKRISHNAN limiter where the nearfield boundary seemed to act like half permeable wall.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-898144522:1539,Green,Green-Gauss,1539,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898144522,1,['Green'],['Green-Gauss']
Energy Efficiency,"Hi @TobiKattmann sorry, I must have missed your message somehow! Thanks for the input, maybe when the mesh adaptation strategy has matured a little more (or is better documented), it can be a bit more easily used. This is also in response to @fredericodpc Right now, I don't know if it is a bug or I'm just unsure of how to correctly use it, but I also have not been able to get the mesh to respect the wing surface. I've also not heard from the branch author either, so I don't know if this is being maintained publically anymore. =( It's a shame because it looked really promising for optimising the cost/accuracy of supersonic solutions!. Ideally, I think one should be able to pass in a representation of the actual surface (either through an stl surface or as a very fine mesh), which should be used as a reference surface. As a minimum, we should be able to set a maximum surface mesh turning angle or some other surface-local control.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-846386250:107,adapt,adaptation,107,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-846386250,1,['adapt'],['adaptation']
Energy Efficiency,"Hi @WallyMaier and @pcarruscag ,. I would like to do a test merge on my branch(es) before this gets merged. I just briefly scrolled through the PR but would like to take a closer look. (As close as it can get for +10.000, -10.000 but a lot of that is copied from A to B as already mentioned); I will report tomorrow (tuesday) evening. One thing ahead: I noticed there are quite some files under `Files changed` which have `No changes. ` ...it is also not a mode change (i.e. change in executable permission) ... so what does that mean? At least that is what github shows me in the `Files changed` tab ... in the `jump to file or symbol` list I get some +<some green number>, -<some red number>... so maybe it is just github messing up. Ok, two things ahead: @pcarruscag I guess I would have preferred to have your contributions split into a separate PR like #821 from the beginning as probably the reviews of each PR would be a bit easier",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/818#issuecomment-555043402:660,green,green,660,https://su2code.github.io,https://github.com/su2code/SU2/pull/818#issuecomment-555043402,1,['green'],['green']
Energy Efficiency,"Hi @antares190,. Glad to see that things seem to be starting to work for you. We (Brian) are trying to improve this capability in the solver and any experiences / suggestions / help will be welcome. With that said, this seems like an interesting result. Would you mind submitting it (or other pictures that you like better) so the SU2 Foundation can use it to show this capability to others in the future? The link where you can do this is here<http://su2foundation.org/su2-promotional-material/?utm_source=hs_email&utm_medium=email&utm_content=76584389&_hsenc=p2ANqtz-9fEq2awKk2vd155cCcN_N4mWBCZK-rJ-TqNsZhqSJs-VWn-w7q-H6w8sdiA3LyuOTqlK4eqZhFFstKi-LQFyyGqYPdkwYc9JsNdB1yyd7pqMwTFzA&_hsmi=76584389>. Thanks a lot,. Juan. On Apr 29, 2020, at 1:38 PM, antares190 <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. [Comparison]<https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png>; [ComparisonMesh]<https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png>. ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/948#issuecomment-621450497>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRCGLBHJCB3FS4JSSV3RPCF5RANCNFSM4MQACOXA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-621483859:1058,adapt,adaption,1058,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621483859,2,['adapt'],['adaption']
Energy Efficiency,"Hi @chiefenne Thanks for bringing it up. I think it could additionally serve as a _quality measure_ for the solvers. ; (For instance, one concern sometimes was - don't know whether it still is - mass conservation in the incompressible solver. That would also be reflected in an energy balance if there really was a problem, or one could check in a very easy way if all boundaries that act as a heat sink/source do what they should. Altogether, one would have some global numbers to confirm that the result is reliable..); I think @economon could also be interested in such a feature. I'll have to do some maintenance for heat-related stuff soon, especially to push some fixes for instationary computations. I can then at least check how such a feature could be set up.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/800#issuecomment-542657940:278,energy,energy,278,https://su2code.github.io,https://github.com/su2code/SU2/issues/800#issuecomment-542657940,1,['energy'],['energy']
Energy Efficiency,"Hi @clarkpede I still have the same issue after using the advice you suggested above for having binary to NO. Please find attaches files for your review. I am still seeing same error like @alexfangman . Can you please help?; WARNING: Tried to find 14980 cells suitable for adaptation, but only found 0; The following cell types are currently adaptable: ; + triangles; + quadrilaterals; + tetrahedrons; Your grid may have too high a percentage of other types.; Number of elements to adapt: 0; Homothetic grid adaptation",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504564218:273,adapt,adaptation,273,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504564218,4,['adapt'],"['adapt', 'adaptable', 'adaptation']"
Energy Efficiency,"Hi @economon ,. I would like to take a quick glance on the presented slides in advance. I always find it easier to follow when I already know whats coming my way. I know that slides are often finished the exact second before the presentation but maybe I am lucky. Also considering that it is quite late here in Germany and the concentration level might drop a little, although you scheduled the Conference quite ""Europe-friendly"" :) . Thanks already,; Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/470#issuecomment-351961812:381,schedul,scheduled,381,https://su2code.github.io,https://github.com/su2code/SU2/issues/470#issuecomment-351961812,1,['schedul'],['scheduled']
Energy Efficiency,Hi @jf-thomas which version of CGNS are you using ? Maybe applying a cgnsupdate on the mesh file prior to running SU2 might help since SU2 rely on recent cgns version to reduce memory footprint.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1378#issuecomment-1003706110:170,reduce,reduce,170,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378#issuecomment-1003706110,1,['reduce'],['reduce']
Energy Efficiency,"Hi @monika1387. Even if the reading of the CGNS file works with multiple zones, the FEM_LES solver does not support this at the moment. It will require significant changes in the data structures to allow for this, although I am also interested in it. However, this is going to be a long term effort, also because we are currently changing the FEM solver to allow for more efficient vectorization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-711119949:372,efficient,efficient,372,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-711119949,1,['efficient'],['efficient']
Energy Efficiency,"Hi @msahinae00,. The branch [feature_adap_flux](https://github.com/su2code/SU2/tree/feature_adap_flux) has the fixed wall distance computations (the branch itself isn't up to date with v7, but I merged in develop way after the wall distance was fixed). However, RANS adaptation is still under development. While I've gotten decent looking meshes, e.g.:; ![vortex](https://user-images.githubusercontent.com/19416354/73195095-1c4fcd80-40e2-11ea-9590-4fbc4baf279d.png); ![Screen Shot 2019-11-04 at 1 36 27 PM](https://user-images.githubusercontent.com/19416354/73195106-2245ae80-40e2-11ea-8e24-38ec76d4cfb4.png); I still haven't properly verified the code. Cheers,; Brian",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-578842312:267,adapt,adaptation,267,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-578842312,1,['adapt'],['adaptation']
Energy Efficiency,"Hi @pcarruscag ; in fact it was the boolean what I originally wanted to have there, so that it could easily be checked whether a node is a surface vertex without having to loop through the markers. Getting the memory savings this way just came naturally, but it's true that it could be done more efficiently. ; As it's not just the fluid tractions the ones involved, but also the surface pressures, I've reused an old CFEABoundVariable class that was there sitting unused (so, 2 for the price of 1!) to store those containers. It should lead to some additional memory savings.; Cheers,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/663#issuecomment-476578546:296,efficient,efficiently,296,https://su2code.github.io,https://github.com/su2code/SU2/pull/663#issuecomment-476578546,1,['efficient'],['efficiently']
Energy Efficiency,"Hi @pcarruscag I think we're at a place in this PR where we can ask for a code review. In particular, I'm wondering if there is a way to reduce the code complexity in the ComputeCollisionDelta() function. Moving this to its own function reduced repeated code (which was called for each GY transport model) but now I've still got some repeated code and cumbersome logic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1397789630:137,reduce,reduce,137,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1397789630,2,['reduce'],"['reduce', 'reduced']"
Energy Efficiency,"Hi @pcarruscag,; thank you very much for the insight and the well thought proposed solution. I wasn't aware that there was such a loss in performance, it seems clear that something needs to be done. The only question I have is regarding the following comment . > There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I'm using this feature more and more, I was planning to extend it in the structural solver to remove the `if fsi` statements, and I also used it in the rework of the mesh solver, as defining variables at the interface only reduces greatly the memory footprint (sort of like the node-vertex structures in geometry). You mention there are options to keep this versatility, how difficult do you think would be to implement them?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-507998889:661,reduce,reduces,661,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-507998889,2,['reduce'],['reduces']
Energy Efficiency,"Hi @pcarruscag,; thanks so much for all your effort in adapting the PR. As usual, great improvements to the feature from your review. Sorry for the radio silence, as I told you I was away due to unforeseen personal circumstances and I'm only back to office today.; Hopefully it's all ready now, I think this feature is ready to go into the next release. If there are no further comments I'll merge it later today.; Best,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/872#issuecomment-591881962:55,adapt,adapting,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/872#issuecomment-591881962,1,['adapt'],['adapting']
Energy Efficiency,"Hi @rois1995 . For now, I'm ignoring all TKE in Total Energy in personal research. I don't remember the details clearly. ; The problem was that the enthalpy added TKE was stored in the primitive variables. ; When I tried to fix it, the problem was when the enthalpy added TKE was stored in the primitive variables. For the Roe scheme in convective flux calculations (not sure about other flux scheme), the Roe speed of sound is calculated using enthalpy. But as I mentioned above, the stored enthalpy is higher than other simulation because of TKE. I thought it make a problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-2245163889:54,Energy,Energy,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-2245163889,1,['Energy'],['Energy']
Energy Efficiency,"Hi @rsanfer and @TobiKattmann , I agree with the more generalised solution for rigid and deforming meshes too and this is excellent timing of #760 to combine the new approach. ; I have FSI cases I can use, but thought it would be a good stepping stone to use fluid-only case to begin with to avoid the coupling terms for this verification. Using dynamic surface movement definitions for the single-zone pitching airfoil test which has previously been used for rigid motion, the primal solutions and gradients from finite differences for both are very similar as expected. Therefore this should be a good reference to check the discrete adjoints for deforming mesh when the adaptations for grid velocities are made using #760.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766#issuecomment-524565760:673,adapt,adaptations,673,https://su2code.github.io,https://github.com/su2code/SU2/pull/766#issuecomment-524565760,1,['adapt'],['adaptations']
Energy Efficiency,"Hi @rsanfer,; I was afraid you were going to say that...; On the subject of memory savings, and taking the specific case of CFEAVariable, the class is 304 bytes before it allocates data, once data is allocated for a plain nonlinear 3D problem the effective size is 704 bytes, looking at the constructors, for such a problem we allocate 22 doubles or 176 bytes. So effectively 75% of the memory (equivalent to 66 doubles) is wasted.; It is important to note that this ""efficiency"" figure does not get much better even when this class allocates all it members (for which one needs fsi + adjoint + unsteady). This happens because operator `new []` needs to store the size of the allocation together with the data for when `delete []` is called so you get ""pointer + size + data"" rounded to a multiple of 16B because of the default alignment.; Therefore my opinion is that we can ""over allocate"" and still save memory, unless you need massive amounts of data for the boundary points(?)... But looking at CFEABoundVariable I don't think that is the case.; If we want to be optimum in terms of performance and memory usage, we would need to mimic the CGeometry strategy in CSolver.; If we do not want to mimic that structure we need to either be able to rely on some ordering of the special cases, e.g. boundary variables stored first, so that at runtime:; ```; double* Get(int iNode) {; if (iNode < nBoundary); return &special[iNode];; else; return &normal[iNode-nBoundary];; }; ```; If we cannot rely on some order we would need to tag nodes ""special"" or ""normal"" and then use some form of map for special cases... All this would cost a lot of indirection.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-508082019:171,allocate,allocates,171,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-508082019,5,['allocate'],"['allocate', 'allocated', 'allocates']"
Energy Efficiency,"Hi @rsanfer,; Regarding patterns, larger cases are more likely to have the issue than small ones, I did not test boundary conditions.; I have not tested the forward mode because it differentiates linear solvers and in the past I have found that to be very limiting so I'd rather not go there. The most detailed verification we have is that present by @cvencro at scitech (finite differences). @cvencro do you have any before/after cases where this problem showed?; On the recording of variables, I like the FEM_VARIABLES as a convergence monitor. But for larger sets of variables, e.g. grid nodes, topology, a ""post processing"" recording step makes sense, that increase in memory footprint is why I have not created a PR for FSI shape derivatives yet. I talked about this briefly with @oleburghardt during the annual meeting and the new adjoint driver should have hooks for this type of post processing.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615#issuecomment-455994325:538,monitor,monitor,538,https://su2code.github.io,https://github.com/su2code/SU2/pull/615#issuecomment-455994325,1,['monitor'],['monitor']
Energy Efficiency,"Hi @timjim333, any luck with the surface mesh deterioration issue? ; I've managed to successfully run the Onera M6 case, with a sufficiently refined volume mesh around the shock wave region, however the wing surface mesh does not follow this adaptation. Does anyone by any chance have a working .cfg file for the M6 case? I may be setting something up incorrectly.; Thanks a lot!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-846093123:242,adapt,adaptation,242,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-846093123,1,['adapt'],['adaptation']
Energy Efficiency,"Hi Antonio, thanks for the review! . Precisely, the point of this PR is to ease generalization of multi-zone, multi-instance problems. For this reason, I am currently working on a branch putting together a CMultizoneDriver, which should be generic enough to accommodate problems involving complex multiphysics. The situation is now that there are a lot of hard-coded constraints, in order for specific features to work. FSI is an example itself; it requires a very strict way of setting up the problem. The same happens with other features such as Multizone HB. While this is ok for showcasing the features, I don't think it's a sustainable approach. For example, if we were to do Turbomachinery FSI, with the current structure it wouldn't be feasible. It would require a ""CTurbomachineryFSIDriver"" class, and more hard coded assumptions. My goal is to get rid of these bottlenecks, by leveraging on the class structure of SU2. Of course, this will require work, but I think it will pay off in the long run. This PR is just a starting point: SU2_DEF, SU2_DOT, etc, will need to be updated accordingly in next stages, together with other changes that are also necessary in the optimization framework and the core code to get rid of a lot of hacks here and there. I will reply to your specific questions separately.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528#issuecomment-392047648:629,sustainab,sustainable,629,https://su2code.github.io,https://github.com/su2code/SU2/pull/528#issuecomment-392047648,1,['sustainab'],['sustainable']
Energy Efficiency,"Hi Arne,; I'm sorry for the complicated meeting schedules.; SetWind_GustField seems to be resetting the grid velocity based on some conditions.; We should split the cleanup of obsolete code into another PR if possible.; I think you can continue on this PR.; The rotating frame term we have assumes 0 translation velocity, we have `w x u` and based on that Ansys presentation it should be `w x (u - u_translation)` if the translation is parallel to the rotation axis there is no issue, if not the steady state assumption is questionable, so it may be fine to use it as-is.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1506329403:48,schedul,schedules,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1506329403,1,['schedul'],['schedules']
Energy Efficiency,"Hi Beckett,. Thank you for the response! Sure we can connect back after 2 weeks,; probably I will work on it and also update you by that time what I got. I; have gone through research papers relevant to FWH in SU2 that helps but; implementation is still a question and few concerns on formulation. Anyway; we can connect after your vacation. Thank you for the support. On Sun, Sep 13, 2020 at 1:45 PM BeckettZhou <notifications@github.com>; wrote:. > Hey, I‚Äôve been developing the SU2 FWH solver with a couple of folks over; > the past few years. If you look me up on google scholar you‚Äôll see our; > related publications. The idea is to merge it in V7 and make it open source; > soon. I‚Äôm on vacation right now. Let‚Äôs schedule a call in around two weeks; > time? (beckett.y.zhou@gmail.com); >; > Best,; > Beckett; >; > On 13. Sep 2020, at 07:38, monika1387 <notifications@github.com> wrote:; >; > Ôªø; >; > I am working on this FWH analysis for far field spectra on jet noise from; > LES by SU2 Code with ADER-DG FEM, results are in good agreement.; > First, for FWH, I do not see any good implementation example or readme; > file to go through this analysis implementation, Can someone please share; > if it exist anywhere? I see branch only Edurado (still does not have any; > readme and also its in Python); >; > Second SU2 FWH formulation is based on time domain based (by Farasssat),; > is anytime SU2 team implemented FWH analysis for frequency domain; > formulation by Lockard as well? I do not see anything in SU2, If it exists; > again can someone share details about it? I would like to work on this Freq; > domain based FWH analysis, so help me if SU2 team developed it anytime or; > in process?; >; > Thank you in advance for help!; >; > ‚Äî; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub<; > https://github.com/su2code/SU2/issues/1073>, or unsubscribe<; > https://github.com/notifications/unsubscribe-auth/ADXOSTYQYI6N",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1073#issuecomment-691707725:719,schedul,schedule,719,https://su2code.github.io,https://github.com/su2code/SU2/issues/1073#issuecomment-691707725,1,['schedul'],['schedule']
Energy Efficiency,"Hi Brain. One quick question. I have noticed that you have set ADAP_NORM to 1 (Lp=1) in one example for Euler solution. I am using original PYAMG examples and changing "" remesh_options['Lp'] "" does not alter the adapted mesh. The log file always saying LP=2 . Are you using a different PYAMG version? . Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-650061484:212,adapt,adapted,212,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-650061484,1,['adapt'],['adapted']
Energy Efficiency,"Hi Brian, ; I'm sorry for the late reply, I've been using the feature_adap branch in 2D and 3D with success in the last weeks, so thanks for the amazing work. . After your last commit I recompiled everything, moreover now I'm using `$SU2_RUN/SU2_DEF` before running `mesh_adaption_amg`, so to be sure that element orientation is as expected. The tool is working nice, once the smoothing, grad, adaption values are tuned, thank you very much!. After a bit of use may I add pair of feature request, that in my opinion would improve the overall (already remarkable) quality of the `feature_adap` .; **_Feature request:_**; 1. The possibility to have boundary layer elements (QUAD PENTA) with the mesh adaption would be very much appreciated. If not possible, wouldn't it be possible to force a frozen interface between boundary layer elements?; 2. Add a ""region of interest"" where the refinement takes place. Sometimes it is not required to have sharp shocks resolved far away from the body.; 3. Do you plan to merge this feature in the master branch?. **_Bugs (or at least unexpected behavior):_**; 1. When I use the restart option, even if there is a `restart_flow.dat`, in the base folder, apparently the `mesh_adaption_amg` does not create a link into the \adap\ini\ folder, and I've to manually copy it (quite fast), to effectively enable the restart option. **_Clarification_**; 1. `PYADAP_BACK` option is really interesting, but I don't get it completely: shall I mesh the complete flowfield with higher detail (refined mesh), does this option handle only the body surface (or only the volume inside the body of interest, not the flowfield)? Is there any plan to use geometric files such as step or iges, to have the proper curvatures defined?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-637328023:394,adapt,adaption,394,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-637328023,2,['adapt'],['adaption']
Energy Efficiency,"Hi Daniel,. You can find the implementation of variable properties with cubic EoS in the master/develop version. If you need to compute the properties with more accurate thermo-physical models, e.g. multi-parameter, there are 2 main ways:. * By using the external library FluidProp (feature_fluidprop_final, yet outdated); * By means of look-up tables (feature_adjoint_lut). We are about to improve the look-up table method and will work on having this feature in the develop soon. Just let me know if you are interested and I will give you more details. Best,. Matteo. ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî; Dr. ir. Matteo Pini, PhD; Assistant Professor; Propulsion & Power<http://www.pp.lr.tudelft.nl/>; Aerospace Engineering Faculty; Delft University of Technology. Kluyverweg 1; 2629 HS Delft; The Netherlands. Phone : +31 15 27 84794; Skype : matteo_pini1. From: banuti <notifications@github.com>; Reply-To: su2code/SU2 <reply@reply.github.com>; Date: Thursday, 24 October 2019 at 22:18; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] variable properties (transport and thermodynamic) for compressible flows with any eos (#794). Hi,. is that branch still active? It seems the last commit was more than two years ago. Best,; Daniel. ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/794?email_source=notifications&email_token=ABTGC2MB627S4SOHCTMGOTTQQH7KFA5CNFSM4I2YNZ6KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOECGJUEI#issuecomment-546085393>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABTGC2JPU76ZE3WG5UUKBYDQQH7KFANCNFSM4I2YNZ6A>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/794#issuecomment-546316470:650,Power,Power,650,https://su2code.github.io,https://github.com/su2code/SU2/issues/794#issuecomment-546316470,1,['Power'],['Power']
Energy Efficiency,"Hi Floris,. the optimizer does not receive any information on the flow itself. The only information it gets are the objective function and the gradient. The optimizer is typically halving the dv_value if there was no sufficient decrease using the current step size for example if the initial scaling of the objective function was too large. So first of all try to reduce that factor (the number in OPT_OBJECTIVE). You probably need a different value for different regimes and Reynolds numbers as the magnitude of the gradient might be also different then. If that does not help then I think that the reason for the behavior you describe is probably the accuracy of the gradient. Can you have a look at the convergence of the adjoint problem in all of the cases ? Otherwise you can also try the discrete adjoint (discrete_adjoint.py or -g DISCRETE_ADJOINT for shape_optimization.py). Best,; Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-314993835:364,reduce,reduce,364,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-314993835,1,['reduce'],['reduce']
Energy Efficiency,"Hi Heather,. I have submitted a problem with my SST case causing divergence. Will you have some time to respond to that. I will greatly appreciate. Thanks. Jehan. Sent from Yahoo Mail on Android. From:""Heather Kline"" notifications@github.com; Date:Mon, May 18, 2015 at 3:17 PM; Subject:Re: [SU2] Adaptive CFL condition (apart from currently available fixed/ramp) (#94). This has been implemented. ‚Äî; Reply to this email directly or view it on GitHub.Ôøº",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/94#issuecomment-103224627:296,Adapt,Adaptive,296,https://su2code.github.io,https://github.com/su2code/SU2/issues/94#issuecomment-103224627,1,['Adapt'],['Adaptive']
Energy Efficiency,"Hi Himakar,. If you are using python, you don't need to manually delete the connectivity table from the ASCII Tecplot as you can use numpy genfromtxt.(https://docs.scipy.org/doc/numpy/reference/generated/numpy.genfromtxt.html). Another option is to use the following restart_flow binary reader/writer that I wrote in Python. # ----------; def read_restart_bin(filename):. 	# Not efficient way; 	infile = open(filename, 'rb'); 	data = infile.read(); 	infile.close(). 	print ""Size of the file: "", len(data). # The first is a magic number that we can use to check for binary files (it is the hex; # representation for ""SU2"").; 	if (struct.unpack('i',data[:4])[0] != 535532):; 		print ""Magic number 535532 not found in the solution file %s"" %filename; 		sys.exit(); 		#try:; 		#	data_file = read_restart_ascii(filename); 		#	return data_file; 		#except:; 			# Exit; 		#	sys.exit(). 	# The second two values are number of variables and number of points (DoFs). ; 	nvar = struct.unpack('i',data[4:8])[0]; 	ndof = struct.unpack('i',data[8:12])[0]. 	# Read the variable names of the file. Note that we are adopting a; # fixed length of 33 for the string length to match with CGNS.; 	variables_names = []; 	for i in range(nvar):; 		aux = (struct.unpack('33s',data[20+(i)*33:20+(i+1)*33])[0]); 		for j in range(len(aux)):; 			if aux[j] == ""\x00"":; 				break; 		variables_names.append(aux[:j]). 	# Read data in one shoot; 	start = 20 + nvar*33; 	end = start+nvar*ndof*8; 	array = np.asfarray(struct.unpack('%dd'%(nvar*ndof),data[start:end])); 	array = array.reshape(ndof,nvar). 	# The last two values are for metadata: one int for ExtIter and 8 su2doubles.; 	# Metadata: 1 int for ExtIter and 8 doubles; 	#ncount = len(data) - nvar*ndof*8 - 4 - 64; 	ExtIter = struct.unpack('i',data[end:end+4])[0]; 	metadata = struct.unpack('8d',data[end+4:end+4+8*8]). 	# Create dictionary; 	data_file = {'names':variables_names,'data':array, 'ExtIter':ExtIter, 'MetaData':metadata}; 	return data_file. def read_restart_ascii(f",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528461173:379,efficient,efficient,379,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528461173,1,['efficient'],['efficient']
Energy Efficiency,"Hi Jayant,; Your figures for MG 0 are inline with what Tim reports in his 2015 paper (10-12 times increase).; As for improving it, the computation of the various residual contributions already uses pre-accumulation, so the only way I see to make that even more effective is to pre-accumulate the sum of all residuals for each edge (that would probably make the direct solver a bit faster too).; In looking at the code I noticed that some areas of the pre-processing like setting sensors, eigenvalues, etc. do not use pre-accumulation, maybe someone already tried and saw it did not make a difference? Same goes for the MG prolongation, restriction, smoothing routines.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/594#issuecomment-427559374:479,sensor,sensors,479,https://su2code.github.io,https://github.com/su2code/SU2/issues/594#issuecomment-427559374,1,['sensor'],['sensors']
Energy Efficiency,"Hi Josef,; in general, structural problems are quite stiff and it takes quite a lot of effort for the linear solver to find a solution for u. . I have just run this case in my own computer (GNU compilers), I get:; Iter Time(s) Res[Displx] Res[Disply] Res[Displz] CFEM(Total); 0 4.018591 -8.498274 -8.230638 -8.123824 6.4095e+04; so even I see a very small discrepancy. If LINEAR_SOLVER_ERROR is reduced to 1E-10,; Iter Time(s) Res[Displx] Res[Disply] Res[Displz] CFEM(Total); 0 4.223478 -10.390248 -10.043411 -10.058976 6.4095e+04; so it is just a matter of how much are we letting FGMRES converge. In principle I believe that, if the changes are just in the order of 1,6e-13, it should be fine to put up the tolerance a bit just for this particular case. It's not the same for non-linear structural problems (e.g. configBeam_2d.cfg) where the residuals printed by the code have a different meaning. In any case, just to be on the safe side: would you mind to share with me the file restart_beam.dat ? That way I can quantify the actual change in the results. Thanks,. Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-276688029:395,reduce,reduced,395,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-276688029,1,['reduce'],['reduced']
Energy Efficiency,"Hi Pedro,. It is indeed a good idea to keep similar schemes (with minor variations) under one umbrella, especially central scheme as only the dissipation term calculation differs. . - In case of AUSM+-up1/2 and SLAU1/2, each can be reduced by having a separate pressure flux definition. - But if we try to combine AUSM+-up and SLAU, will it be a clear/helpful implementation as mass flux definitions/calculations (which is substantial portion) are different (unlike the central scheme, where only dissipation term varies)?. - Also could you please shed some light on Jacobian part for these schemes (as you mentioned - ‚Äú...Isolating the computation of mass and pressure fluxes could be an interesting way to compute the Jacobians of these schemes in a hybrid way¬†...‚Äù). Best; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-499205201:232,reduce,reduced,232,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-499205201,2,['reduce'],['reduced']
Energy Efficiency,"Hi Pedro,. Thanks for sharing the nice idea. If it helps in ramping up the CFL than really good.... One query - generally how Jacobian computation by finite difference or AD tend to be in comparison to analytical Jacobians in terms of cost (time). Probably Analytical jacobians are more efficient but they are difficult to compute for a given scheme (is this mostly true?). . Thanks; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-499632402:287,efficient,efficient,287,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-499632402,1,['efficient'],['efficient']
Energy Efficiency,"Hi Pedro,. Thanks for the hint!. If I understood it correctly, it's possible that after the large temporary array for parallel output is freed, some smaller blocks are eventually allocated in that free space, which means a new block of memory needs to be allocated when the large temporary array is created again. And if this keeps happening over a long enough period of time, the memory usage increases?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261#issuecomment-818827116:179,allocate,allocated,179,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261#issuecomment-818827116,2,['allocate'],['allocated']
Energy Efficiency,"Hi Ruben,. Thank you for your feedback !. It is hard to tell what to do you to avoid conflicts. Anyway, the most significant part of the changes concerns the parent CDriver class, especially the constructor and some new functions that are pieces of code coming from the main function (like Output and Monitor). So if the contributions are focused on one particular driver (single, multi, ...) and if they are more or less compatible with the main ""driver->run"" then ""driver->update"" structure, it should be straightforward to solve the potential confilcts. Best,. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295#issuecomment-237702911:301,Monitor,Monitor,301,https://su2code.github.io,https://github.com/su2code/SU2/pull/295#issuecomment-237702911,1,['Monitor'],['Monitor']
Energy Efficiency,"Hi Tim,. In collaboration with the Energy Centre Netherlands (ECN) we are interested in participating in the development of a pressure-based incompressible solver. The applications we have in mind are all related to wind turbines, for which compressible solvers perform relatively poorly. We realize that OpenFOAM is very much capable of carrying out such simulations, but the motivation for developing this in SU2 is indeed the availability of the (discrete) adjoint. Regards,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/429#issuecomment-326904729:35,Energy,Energy,35,https://su2code.github.io,https://github.com/su2code/SU2/issues/429#issuecomment-326904729,1,['Energy'],['Energy']
Energy Efficiency,"Hi Tom,. Thanks for this great PR. I have two notes:; a) I have one grid (flow around a high lift airfoil) where the periodic boundaries are not placed entirely on fix plane, like y=0.0, but on a very small value and fluctuates around, i.e. y~1.e-5. Now, many bad match points are found in the last commit of this PR. Previously, I was able to run the same mesh in a different commit. Do you change the tolerance of the search algorithm? Or I need to make sure now that all the periodic BC nodes must be placed on a fix plane.; b) I would like to share the results of the Taylor Green Vortex with the community. Indeed, the results are good and they are comparable with the reference DNS solution. ; ![SU2_TGV_DissipationRate](https://user-images.githubusercontent.com/9790985/56451123-05708500-62df-11e9-8601-7a6cdb38123d.png). Thank you one more time. Best,. Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652#issuecomment-485054516:579,Green,Green,579,https://su2code.github.io,https://github.com/su2code/SU2/pull/652#issuecomment-485054516,1,['Green'],['Green']
Energy Efficiency,"Hi Tom,. Thanks for your reaction! The previous simulations were all done by continuous adjoint. ; The current simulation is done according to your settings; scale =1, objective= efficiency, adjoint =discrete.; ![image](https://user-images.githubusercontent.com/21182966/28562447-8f88c6e0-7122-11e7-882d-d861e34fe388.png). In the discrete adjoint the difference in magnitude of the sensitivity is reduced. I will try to run the case for discrete adjoint as well, I will keep you updated.; Thanks for the help!. Kind regards,. Floris van der Schuur",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-317667253:397,reduce,reduced,397,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-317667253,1,['reduce'],['reduced']
Energy Efficiency,"Hi Tom,; I did a Boost extract (bcp) which theoretically only includes the required header files. I'll look and see if it can be reduced further.; Scott; On ‚ÄéWednesday‚Äé, ‚ÄéAugust‚Äé ‚Äé8‚Äé, ‚Äé2018‚Äé ‚Äé09‚Äé:‚Äé10‚Äé:‚Äé15‚Äé ‚ÄéPM‚Äé ‚ÄéPDT, Thomas D. Economon <notifications@github.com> wrote: ; ; ; @ScottImlay : it is wonderful to have your support from Tecplot, and we really appreciate the contribution for improvements through the open source!. I have a first question... I noticed that there are many new files, especially headers from the Boost library. Is it possible to reduce to a smaller set of files that get included, or are all of those that have been added necessary?. ‚Äî; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-411773932:129,reduce,reduced,129,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-411773932,2,['reduce'],"['reduce', 'reduced']"
Energy Efficiency,"Hi all,. as with the restructuring of the output classes, we should find a common level of abstraction for all the different physical problems we might want to have. Right now there isn't even a unified way of specifying the kind of problem for each zone (what is fluid, what is solid etc) and the kind of coupling. This might also affect the actual implementation/restructuring since we somehow have to decide what driver we have to instantiate and so on. Hopefully we can gather all the people involved to have a discussion on that. Since we have a lot of people working in their branches on multizone problems we should tackle that better sooner than later. As Edwin already suggested, maybe it is a good idea to put some people in charge of organizing some of the bigger structural changes. Furthermore in case some people don't know, we have a slack channel for the dev team. I think that makes it easier to communicate, arrange meetings, discuss problems and ask questions. In case you need an invite, let me know, everybody who wants to contribute is welcome. Thanks for the discussion, I still think that communication is the key of success !. Tim. On Sep 13, 2017 10:30 AM, Edwin van der Weide <notifications@github.com> wrote:. Hi Tom,. Sounds like a plan then to have a look at CIntegration to see what we can do to generalize the time integration. I definitely want to help with this, but I don't think I am the appropriate person to take the lead, because I simply don't have a good overview of all the multi-physics options. Tom, are you willing to take the lead for this?. Furthermore, it is good to have other people involved as well, preferably with detailed knowledge of the different disciplines. Any volunteers?. Thanks,. Edwin. ‚Äî; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-329096830>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AEtI5MkXdqhqP",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329146567:735,charge,charge,735,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329146567,2,['charge'],['charge']
Energy Efficiency,"Hi all. May I just add to Edwin comment: some of you have seen the tests that I; made with SUmb (structured mesh code) using the adaptive WF: Results using; the JST scheme were definitely off, while upwind +WF converged reasonably; to wall-resolved results. Naturally this conclusion is strongly coupled; with the specific discretization and implementation so it might not apply; to a SU2 implementation. I suggest to keep working on the Carlson; formulation (due to FUN3D-SU2 similarities mentioned above) and hopefully; extend it to adaptive WF as a second step.; I'll be happy to be on board of his effort.; Best regards,; Eran. On Fri, Jun 9, 2017 at 7:49 AM, Edwin van der Weide <; notifications@github.com> wrote:. > Juan, all,; >; > The adaptive wall function formulation as described in the paper of Medic; > et al. has two serious issues. First, the convergence stalls after three; > orders of magnitude or so and second it only works with an upwind; > discretization of the inviscid fluxes. For some reason JST type of schemes; > gave rather poor results. In order to have a reliable implementation, both; > issues need to be addressed. Unfortunately, we never did.; >; > Edwin; >; > ‚Äî; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/399#issuecomment-307294686>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/APKNmwNgNVmXDYW_tqtQzvpDvxGe4OeLks5sCM7ugaJpZM4NvG6w>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-307303905:129,adapt,adaptive,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-307303905,3,['adapt'],['adaptive']
Energy Efficiency,"Hi everyone, . now you can register [here on eventbrite](https://www.eventbrite.com/e/3rd-annual-su2-conference-tickets-375147244507?aff=ebdsoporgprofile) for the virtual participation or the in-Person event in Varenna. Virtual participation will be free of charge (registration required) and all further info on pricing etc. for the in-Person event can be found following the link :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1683#issuecomment-1193383462:258,charge,charge,258,https://su2code.github.io,https://github.com/su2code/SU2/issues/1683#issuecomment-1193383462,1,['charge'],['charge']
Energy Efficiency,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-737134105:42,adapt,adaptation,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105,17,"['Adapt', 'adapt', 'sensor']","['Adaptive', 'adaptation', 'adaptations', 'sensor']"
Energy Efficiency,"Hi everyone,; I'm really interesting by the adaptitve mesh feature and i am wondering if the branch is still alive or if anyone have done any progress before starting to play with this branch; regards",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1224179553:44,adapt,adaptitve,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1224179553,1,['adapt'],['adaptitve']
Energy Efficiency,"Hi guys~ . Here is sharing the status of the LM model. V&V cases: T3A, T3A-, NLF. Flow conditions are the reference from: https://doi.org/10.2514/6.2022-3679. The grids of T3A and NLF cases are provided by [TMW](https://transitionmodeling.larc.nasa.gov/workshop_i/)(Transition Model Workshop). And I made the grid of T3A- myself. To validate the LM model, the simulation results of SU2 are compared with the results of Fluent19.0 with a similar numerical setting. Here is the numerical scheme : . <html xmlns:m=""http://schemas.microsoft.com/office/2004/12/omml""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=PowerPoint.Slide>; <meta name=Generator content=""Microsoft PowerPoint 15"">. <!--tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; td; 	{padding-top:1.0px;; 	padding-right:1.0px;; 	padding-left:1.0px;; 	mso-ignore:padding;; 	color:windowtext;; 	font-size:18.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Arial;; 	mso-generic-font-family:auto;; 	mso-font-charset:0;; 	text-align:general;; 	vertical-align:bottom;; 	border:none;; 	mso-background-source:auto;; 	mso-pattern:auto;}; .oa1; 	{border:1.0pt solid black;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; .oa2; 	{border:1.0pt solid black;; 	text-align:center;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; -->. </head>. <body>; <!--StartFragment-->. ¬† | Fluent | SU2; -- | -- | --; Flux | Roe-FDS | L2ROE; Gradient | Least Squares Cell Based | WEIGHTED_LEAST_SQUARES; Spatial Discretization Flow | Third-order MUSCL | MUSCL_FLOW; Spatial Discretization Turbulence | First-order Upwind | MUSCL_NO. <!--EndFragment-->; </body>. </html>; The CFL number is set constant value. Some high-resolution grid-level results are missed because I don't have enough computational resources.; Here is Result. T3A : . ![image](https://use",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1194936824:639,Power,PowerPoint,639,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1194936824,2,['Power'],['PowerPoint']
Energy Efficiency,"Hi the same issue is reported here: https://www.cfd-online.com/Forums/su2/240690-stable-solution-version-7-0-0-diverging-7-2-0-a.html; I think it is because of a bug we fixed that could cause the solution in some places to either freeze or be updated very slowly, seeing that the residuals in your 7.0.6 example don't drop, this is likely to be happening.; If you share the mesh you are using I can try suggesting better settings, to get to high CFL number you usually need CFL adaptation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1519#issuecomment-1019281442:478,adapt,adaptation,478,https://su2code.github.io,https://github.com/su2code/SU2/issues/1519#issuecomment-1019281442,1,['adapt'],['adaptation']
Energy Efficiency,"Hi, . configBeam_3d.cfg is a linear structural case, so the problem does not iterate. It is solved in one-shot by computing the displacement vector u in the linear system Ku = F. For tighter convergence, LINEAR_SOLVER_ITER may be taken up to 1000, which is the maximum number of subspaces accepted by the FGMRES linear solver. Also, LINEAR_SOLVER_ERROR may be reduced.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-276651670:360,reduce,reduced,360,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-276651670,1,['reduce'],['reduced']
Energy Efficiency,"Hi, ; I'm worried about discontinuing the legacy build system. While on internet-connected machines the Meson-Ninja build is superior, I still didn't manage to apply it on clusters without such a connection. In my opinion should keep the configure-make-make install approach alive so that installation is possible for everyone, not just very efficient to part of the community ; Best, Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-734184730:342,efficient,efficient,342,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-734184730,1,['efficient'],['efficient']
Energy Efficiency,"Hi, @cjz667. When I tried lid driven cavity case with default setting and switching ROE to AUSMPLUSUP, I got the following error - Error in ‚Äúvoid CSyssolve::ModGramSchmidt(int.........; SU2 has diverged (It ran for 2 iterations). Reduced the CFL to 0.5 (originally 2.0), it runs fine.; But it is going to take more number of iterations.; This issue was noted earlier as well and reason behind that is inconsistent Jacobian (Roe here) with AUSM family of schemes. This restricts the allowable CFL number to a lower values for these scehemes. For low speed flows u may have to use smaller value of CFL with these two schemes. . Dr. Padro (pcarruscage) has done some work in this direction and implemented hybrid Jacobian for some of these schemes (available in develop branch) , which improves this situation and u can try higher CFL. I have also worked out analytical Jacobian and will be pushing in future release. I hope you can go with reasonable CFL for majority of the other cases, where Mach number is not too small.; I have added one Testcase for high speed flow past blunt body in testcase folder /euler/bluntbody, which uses AUSMPLUSUP. Give a try with other cases, I have tried many in RANS, NS, EULER.; Hope this help. . Regards ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/628#issuecomment-522656848:230,Reduce,Reduced,230,https://su2code.github.io,https://github.com/su2code/SU2/pull/628#issuecomment-522656848,1,['Reduce'],['Reduced']
Energy Efficiency,"Hi, I can confirm that the ASCII mesh reader has been improved a lot in version 7.2.1. This reduces the need for CGNS format. Hybrid parallel helps also, thanks for the hints. I did not find a way for the CGNS to work yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1378#issuecomment-986854142:92,reduce,reduces,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378#issuecomment-986854142,1,['reduce'],['reduces']
Energy Efficiency,"Hi, thank you for the suggestions. I simulated with the suggested settings, and the values of y+ in the spinner-blade junction region have reduced to 140. I am specifically interested in knowing thrust and moment, and those turned out to be similar to the previous runs, which are two orders of magnitude lower than experimental ones. . > You need to look at CFx and CMx from SU2 then. Use WRT_FORCES_BREAKDOWN = YES, I think the breakdown file has dimensional forces, or at least the reference density, velocity, pressure, etc. The force breakdown file generates non-dimensional coefficients using the reference area on the z-plane. If I want to find the dimensional forces in the x-direction (flow direction), should the non-dimensional factor be based on the reference area on the z-plane or the x-plane?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1175#issuecomment-767560906:139,reduce,reduced,139,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175#issuecomment-767560906,1,['reduce'],['reduced']
Energy Efficiency,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:186,adapt,adaptation,186,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105,11,"['Adapt', 'adapt']","['Adaptation', 'adaptation', 'adapted']"
Energy Efficiency,"Hi,. We have just updated (30min ago) the master branch of the SU2 and TestCases repositories. Could you please try again?. If you are using the develop branch, please remember that you should use the develop branch for the SU2 and TestCases repositories. Otherwise the options don‚Äôt match. Pleas let us know if it is working for you now. Best,; Francisco. On Feb 3, 2015, at 12:27 PM, Gil Forsyth notifications@github.com wrote:. > Just compiled today and it seems like the options CFL_ADAPT and CFL_ADAPT_PARAM have been deprecated?; > ; > Running the 2D inviscid cylinder and the euler channel flow example both throw an error; > ; > CFL_ADAPT: invalid option name. Check current SU2 options in config_template.cfg.; > CFL_ADAPT_PARAM: invalid option name. Check current SU2 options in config_template.cfg.; > Commenting these lines out lets the test cases run but I'm not sure what the default behavior is (are these running with adaptive CFL if we don't pass that parameter at all?); > ; > ‚Äî; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72729435:934,adapt,adaptive,934,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72729435,1,['adapt'],['adaptive']
Energy Efficiency,"Hmmm looks like we have an issue with the setup of tutorials.py then, because the merge button should not show up as green with failing regressions.; The code quality tests are not hard requirements but everything else should be.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1295#issuecomment-859559899:117,green,green,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859559899,1,['green'],['green']
Energy Efficiency,"I am a new developer so I might need some help. I have added some expressions based upon the discussion on cfdonline: http://www.cfd-online.com/Forums/su2/129165-add-source-terms-user-defined-boundary-condition-set-up-transient-simulation.html.; Based upon that discussion, I have allocated the already defined class in definition_structure.cpp:; numerics_container[iMGlevel][FLOW_SOL][SOURCE_FIRST_TERM] = new CSource_JouleHeating(nDim, nVar_Flow, config);. Also, I have referred to the implementation of source term of Wind Gust. To get started, I am trying to implement a Yes/No option to include Joule Heating in the configuration file. I have added the following statements:; config_structure.inl: inline bool CConfig::GetJoule_Heating(void) {return Joule_Heating}; config_structure.hpp: a flag: bool Joule_Heating and bool GetJoule_Heating(void); config_structure.cpp: addBoolOption(""JOULE_HEATING"", Joule_Heating, false). On compiling, I get an error stating that ""JOULE_HEATING"" is an invalid option name. Please let me know where I am going wrong.; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/230#issuecomment-172099950:281,allocate,allocated,281,https://su2code.github.io,https://github.com/su2code/SU2/issues/230#issuecomment-172099950,2,"['Joule', 'allocate']","['Joule', 'allocated']"
Energy Efficiency,I am gonna use my executive power to merge this in. I have to prepare the release.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/874#issuecomment-592552725:28,power,power,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/874#issuecomment-592552725,1,['power'],['power']
Energy Efficiency,"I am not sure about why periodic boundaries are allowed to deform. It doesn't seem to be a good idea unless there is a way to deform its periodic pair in the same way. As for @auzbaig's question about why SLSQP converges in one step: There is a huge difference in the magnitude of the objective function, O(1) and the gradient O(-11). I am guessing the optimizer doesn't think it can reduce the function value any further since the gradient with respect to the DVs is so small. . To change the relative magnitudes of the objective and gradient, you need to change the DV scaling. This isn't intuitive and is one of the things we are hoping to address in #922 . Check out the `obj_df` function in `SU2_PY/SU2/eval/design.py` (line 386 in the develop branch). There you see how the gradient is scaled: . `grad[k] = grad[k] * sign * scale * global_factor / dv_scl` . Here `scale` is the objective function scaling factor, `global_factor` is what you specify for the `OPT_GRADIENT_FACTOR`, the `dv_scl` is the design variable scaling. . So if you wanted to bring the gradient norm to O(1), you'd have to specify a DV scaling of 1e-11. Usually a gradient norm of O(-6) is what seems to work best with SLSQP.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-628724163:384,reduce,reduce,384,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-628724163,2,['reduce'],['reduce']
Energy Efficiency,"I am trying to catch up on the developments in this PR but I've lost the overview. Are there still issues that we need to figure out? It looks like convergence is now recovered and results look OK? ; Regarding the symmetry plane, as @pcarruscag mentioned it is improving the accuracy, but not necessarily the convergence. @pcarruscag and I tried to get it to converge as well as before, but no guarantees. Do you still see issues with the new symmetry plane?; Regarding the peak residual that you observed in a single node in the mesh: This is a common observation when using Green-Gauss, which gives O(1) accuracy in mixed mesh nodes where quadrilateral and triangular meshes meet. There are some methods that try to fix this, although none of them are holy grails and the best methods are the most expensive ones.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2394982976:576,Green,Green-Gauss,576,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2394982976,1,['Green'],['Green-Gauss']
Energy Efficiency,"I built it with OpenMPI v2.1.1 in combination with gnu compilers, version 7.0.1, and all debug flags enabled. Apart from a lot of warnings in ParMETIS and CGNS, I also get the following warnings. ../src/geometry_structure.cpp:16468:103: warning: variable ‚ÄòSemiSpan‚Äô set but not used [-Wunused-but-set-variable]; su2double Angle, MinAngle, MaxAngle, dAngle, *Area, *MaxThickness, *ToC, *Chord, *LERadius, *Twist, SemiSpan;. ../src/output_structure.cpp:16249:46: warning: variable ‚ÄòEnergy‚Äô set but not used [-Wunused-but-set-variable]; Velocity[3], Velocity2, MassFlow, Density, Energy, Area, AxiFactor = 1.0, SoundSpeed, Vn, Weight = 1.0;. ../src/output_structure.cpp:16253:13: warning: unused variable ‚ÄòGamma_Minus_One‚Äô [-Wunused-variable]; su2double Gamma_Minus_One = Gamma - 1.0;. ../src/output_structure.cpp:16256:18: warning: unused variable ‚ÄònVar‚Äô [-Wunused-variable]; unsigned short nVar = solver->GetnVar();. However, these are from an earlier merge. I already took care of them in feature_hom, so I suppose it can wait until we merge that branch into develop. So it is good to go as far as I am concerned.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-354407661:480,Energy,Energy,480,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-354407661,2,['Energy'],['Energy']
Energy Efficiency,"I can share that version of the code.. but beware, just as Edwin mentions, it is nasty looking and hard to compile (there are intrinsics and all sorts of architecture-specific changes). But, interesting to look at, of course. There you will see that we basically moved up all of the CVariable data (reordered contiguously) and methods to the solver to eliminate the extra layer of indirection, while still keeping access for outside classes, i.e. something like solver[FLOW_SOL]->node[iPoint]->GetPressure() becomes solver[FLOW_SOL]->GetPressure(iPoint). Since you mentioned it, another target is the CNumerics classes. The flexibility is nice, but does it really need an entire set of classes with getters/setters/virtual functions? I think that most of the ComputeResidual() functions could be moved up as methods in the solver classes as well to make more efficient residual kernel loops. In the early days, we thought completely removing CVariable and CNumerics would be very intrusive to change and would hurt flexibility. While the former is still true (although certainly doable), the latter does not seem to me as high of a priority any longer. Over the years, I don't think that folks have really modified the CNumerics classes all that often (once you have implemented the Roe method, it is more or less done). In addition, the CVariable and CNumerics child classes all live almost entirely within their own solvers, so we aren't taking much advantage of code reuse to justify having them as separate classes. For instance, if we just copied the relevant ComputeResidual() routines up into their solvers from numerics, we would have very little code duplication in the end, which is an indicator that we may not really need the extra baggage.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-513292350:859,efficient,efficient,859,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-513292350,1,['efficient'],['efficient']
Energy Efficiency,"I could but I do not think updating that branch will fix your problem. We have not found any mesh handling bugs recently.; Creating / modifying meshes manually can get tricky (at least in my experience).; Have you tried simpler problems? Try starting with a problem that is known to work (there is a long issue with success stories, do a search for mesh adaptation here on github). Then build up from it, e.g. take the same problem and use a finer grid, change the physics to what you need, use a grid for your problem (ideally change one thing at a time).; Also keep in mind that if that branch was finished work it would probably have been merged into develop by now...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-757123547:354,adapt,adaptation,354,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-757123547,2,['adapt'],['adaptation']
Energy Efficiency,"I could not follow the work here; I just watched the conference presentation. As much work has been done, have you considered using an existing linear algebra library such as https://github.com/ginkgo-project/ginkgo?. AFAIK the only thing you need to do is copy the matrix to Gingko format on GPU. Then Gingko will provide an efficient, scalable solver that works not only on NVIDIA but also on AMD and Intel. . GMRES and ILU preconditioners are available there, so it is pretty much ready to go for all problems.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346#issuecomment-2397599775:326,efficient,efficient,326,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346#issuecomment-2397599775,1,['efficient'],['efficient']
Energy Efficiency,"I do not believe that we should go back to a synchronous communication approach‚Ä¶in my experience asynchronous communication always gives better or equal performance and scalability to a carefully-done synchronous approach. It would be a step back to return to the v6.2 communication schedule. Perhaps the same tests can be repeated on a different machine with a different / better network and see what the outcome is?. Best,. Juan. On Mar 1, 2020, at 4:49 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. We could play around with the Wait() calls to wait for a specific message instead of the first to arrive, but it would take some effort to go back to the previous behavior, where the comms happened one at a time for each pair of ranks that needed to communicate. In v7, the behavior is that each rank posts all of their receives, then posts all of their sends, before the buffers holding the received data are checked and unloaded (once the communication of that particular message has completed). ‚Äî; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/894?email_source=notifications&email_token=AA5FFRHHV2YZWCMXS624GILRFL7ATA5CNFSM4K56OFUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOENNR34Y#issuecomment-593174003>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRGLYCGNEQSYRE4ZQRDRFL7ATANCNFSM4K56OFUA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593186725:283,schedul,schedule,283,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593186725,1,['schedul'],['schedule']
Energy Efficiency,"I don't mind the ""pairs"" by themselves, it fits nicely with how the NdFlattener works, i.e. its efficient to split them and pass them down to lower layers.; The only slight problem is that ""first"" and ""second"" are not a super expressive interface, but I think that is ok for now.; If it ever becomes needed you can create some adapter to convert something with operator (i,j,....) into pairs of pairs behind the scenes, but for the current use that would not be an option anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-847329246:96,efficient,efficient,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847329246,2,"['adapt', 'efficient']","['adapter', 'efficient']"
Energy Efficiency,"I experienced the issue you described and tried different strategies to mitigate it. ; The back mesh was promising, but after setting it up properly (yes, full mesh, only surfaces need to be refined, volume and boundaries may be kept coarse/high growth ratio), it doesn‚Äôt help much. I think this behavior is related to the inability of the adaptation to either keep a tbd element size along curvatures / have a max element size on the surface. ; I bet the nodes of the adapted grid are still on the surface but huge elements (indicating no particular gradient there) ultimately deteriorate the surface mesh quality. . As a way around to this I separated into different zones/groups the parts of the surface mesh I wanted to ‚Äúfreeze‚Äù, this approach works as the mesh adaptation always respect/keeps the original mesh edge position. The approach above obviously helps mitigating the issue, surface mesh quality is still highest in the initialization mesh. As this method only mitigates the problem, please share your experience! Any other indication/suggestion is very welcome!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-761773094:340,adapt,adaptation,340,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761773094,3,['adapt'],"['adaptation', 'adapted']"
Energy Efficiency,"I found the solution. It's just a VTU file that was way too huge to open in; the system and crashes every time.; Thank you for the help!. On Mon, Jun 29, 2020 at 1:17 PM Karthik-ksd <notifications@github.com>; wrote:. > You've got two options:; >; > 1. Use the cfg option WRT_BINARY_RESTART= NO to dump the restart; > file(s) in human-readable ASCII.; > 2. Use the cfg option OUTPUT_FORMAT= TECPLOT or OUTPUT_FORMAT=PARAVIEW; > with SU2_SOL to export the solution to an ASCII-formatted tecplot or; > paraview file. If you're not familiar with SU2_SOL, then check out the; > documentation <https://su2code.github.io/docs/Post-processing/>.; >; > You can find those cfg options in config_template.cfg in the root SU2; > source code directory.; >; > In the end, using the tecplot or paraview option may be your best bet.; > Trying to manually parse the text files smells like an XY Problem; > <https://en.wikipedia.org/wiki/XY_problem>. Tecplot and Paraview both; > have scripting capabilities that make post-processing very efficient.; >; > Does that answer your question? Do you have any follow-up concerns?; >; > Hello @clarkpede <https://github.com/clarkpede> can you please tell me; > how to convert the output flile format from vtu to vtk; > I am facing a lots of trouble to open the file in Paraview but the output; > format is coming vtu everytime Can you please explain how to solve this; > problem; > And whenever i tries to change the output format by editting in notepad it; > tells an error that check option in SU2 config_template.cfg; > Please Help; >; > ‚Äî; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/787#issuecomment-651252372>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ALJ3OXHBNWF5UFMV7GZ4WDTRZDEC3ANCNFSM4IT7MM2A>; > .; >. -- ; *Thank you,*. *Monika Chauhan *. *Graduate Research Assistant, Doctoral Program*. *Aerospace and Ocean Engineering Dept, Vir",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-651853049:1022,efficient,efficient,1022,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-651853049,1,['efficient'],['efficient']
Energy Efficiency,"I have a few updates. I found out that most of my FGMRES problems in this branch where related to the fact that I was using single precision for the linear system. You can see it in this graphs for the residuals of Rho. ![RMSRho_Mesh_3](https://github.com/user-attachments/assets/185b8195-e415-4dff-9332-cff573c069cc). The first two curves are in mixed-precision and they stop long before reaching the minimum residual required due to divergence of the linear solver. Moreover, it seems that the 2003 model here implemented (which, simply put, considers the full reynolds stress tensor for the computation of the production of k and always considers k in the stress tensor and in the thermodynamic variables) has faster convergence and increases the recirculating zone (maybe due to the reduction of turbulence kinetic energy) which is a feature that has also been seen in [DOI:10.1017/aer.2020.93]. . ![SFC_Mesh_3](https://github.com/user-attachments/assets/81a50021-6b58-4a84-9057-a18b5bab023c). There are some differences between the use of the TMR boundary conditions and the ones used before. The results improve with respect to the develop in the prediction of the SFC distribution, which has results completely off from the V&V page of SU2. ![SFC_Mesh_3_Old](https://github.com/user-attachments/assets/0f4d634b-df31-4f86-a324-d9f67947f1ff). ![RMSRho_Mesh_3_Old](https://github.com/user-attachments/assets/24d5c2f5-93fe-432f-82d9-c050a90f7339). I may keep on checking if the implementation of the v2003 model is correct or not by searching for other test cases (probably coming from DOI:10.1017/aer.2020.93).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2393433487:819,energy,energy,819,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2393433487,2,['energy'],['energy']
Energy Efficiency,"I have added built-in support for 2D rectangular (quad) and 3D box (hexa) meshes, so no mesh file is required. Works in serial and parallel - all partitioning is taken care of for you. For example, if you wanted to run a 65^3 Taylor Green Vortex problem on a triply-periodic box, you could use the following new config options:. ```; MESH_FORMAT= BOX; MESH_BOX_SIZE= 65 65 65; MESH_BOX_LENGTH = 6.283185307179586 6.283185307179586 6.283185307179586; MESH_BOX_OFFSET = 0.0 0.0 0.0; ```. The marker names are ""x_minus"" ""x_plus"" ""y_minus"" ""y_plus"" ""z_minus"" and ""z_plus"" by default.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-521559088:233,Green,Green,233,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-521559088,1,['Green'],['Green']
Energy Efficiency,"I have added the new option NUM_METHOD_GRAD_RECON to specify a separate method for computing the reconstruction gradient. If that option is not present, then no additional memory is allocated and no extra gradient computation occurs. I have also put in simple feedback from the linear solver residual and the nonlinear residual to the nonlinear controller. If the linear system converges less than a half an order of magnitude, then the CFL is lowered. A Cauchy-like criteria checks for stall in the nonlinear residuals and drops the CFL to the minimum floor to kick the solver out of a rut. Both of these use factors that are empirical from my tests. Will probably be improved with time and more testing, but they do seem to improve behavior. @koodlyakshay : I had success with the inc. laminar backward facing step after adding extra iterations to the linear solve. For some cases, this is necessary to get a large speedup. I am seeing good speedup for most of the cases within our TestCases repo. If you have some tough cases not covered by the repo, please give those a try.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-536145232:182,allocate,allocated,182,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-536145232,2,['allocate'],['allocated']
Energy Efficiency,"I have run some test to verify that the changes here also work ok for unsteady flows with dual time-stepping (even the CFL adaption seems to work pretty well for pseudo time). I also added some checks to make sure CFL adaption is disabled for TIME_STEPPING mode. @EduardoMolina @clarkpede @cvencro: if you have some time, can you please test this branch out with some of your unsteady cases to verify that everything is ok for you as well? Let me know if you see any issues",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-539278925:123,adapt,adaption,123,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-539278925,2,['adapt'],['adaption']
Energy Efficiency,I hope my somewhat chaotic commits did not cause more work for you than they actually contributed. This was my first time using github pull requests and code editing without IDE (usually I use Visual Studio). On the upside I now have everything set up to make possible future constributions a bit more efficient :-); I assume you're merging this PR when everything is ready?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1548#issuecomment-1050335681:302,efficient,efficient,302,https://su2code.github.io,https://github.com/su2code/SU2/pull/1548#issuecomment-1050335681,1,['efficient'],['efficient']
Energy Efficiency,"I just ran the case and I see this as well, even after complete convergence. You clearly can see this in the energy and pressure (and density) but not in the momentum terms. The temperature field also looks smooth. So may be related to density/pressure.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373#issuecomment-932510910:109,energy,energy,109,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-932510910,2,['energy'],['energy']
Energy Efficiency,"I just tested the 3D adaptation on an ONERA M6 and it seems to be working fine for me. <img width=""790"" alt=""Screen Shot 2020-05-06 at 2 05 56 PM"" src=""https://user-images.githubusercontent.com/19416354/81228401-e0f75180-8fa2-11ea-98e2-c0e378566212.png"">. I just updated AMGIO to include surface/volume element orientation checks, not sure if that'll help with your issue. If the updated code doesn't fix things, can you upload your initial mesh, flow restart, and the flo.meshb and flo.solb files from adap/ini?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-624894422:21,adapt,adaptation,21,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-624894422,1,['adapt'],['adaptation']
Energy Efficiency,"I made a fully unstructured version of the mesh and it seems I can now pass the `Geometry Preprocessing` stage. I'm now having a different issue that I do not know if it is related. After 250 iterations, the simulation hangs, with the following output in the `/adap/ini/log.out`:. ```; | 249| -7.427827| 0.000000| 0.024016| 0.000401| 8.4160e+09|; | 250| -7.390279| 0.000000| 0.024016| 0.000401| 8.4160e+09|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609863350.417715] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=50) failed: Bad address; [1609863350.417771] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=25) failed: Connection reset by peer; [1609863350.418024] [super:1071838:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor; ```. UPDATE: Bizarrely, if I attempt to run the adaptation script again, it now fails earlier with the same UCX Connection reset error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 774736 grid points before partitioning.; 4416440 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 44930 boundary elements in index 1 (Marker = FARFIELD).; 177930 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [1609864445.066242] [super:1075233:0] sock.c:344 UCX ERROR recv(fd=98) failed: Connection reset by peer; [1609864445.066058] [super:1075147:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; ```; Is this a bug?. UPDATE: This seems to have gone away pulling a different version OpenMPI and recompiling.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754746706:1051,adapt,adaptation,1051,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754746706,1,['adapt'],['adaptation']
Energy Efficiency,"I managed to implement the computation of grad(n*U)*n, but at the moment it is located into CTransLMSolver::PreProcessing. It seems to work with a structured mesh on a flat plate. Currently, I am testing with a 2D profile too. However, being into the PreProcessing of the transition solver, the normals are computed at each iteration, thus it is not computationally efficient if non-deforming meshes are used. I am looking into where to put it such that it is computed just if the mesh is updated (and at the first iteration of course). . Plus, I have added a whole lot of variables to the output, but they will be removed in the final version. They are just used as debug.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1443670288:366,efficient,efficient,366,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1443670288,1,['efficient'],['efficient']
Energy Efficiency,"I recently (yesterday) found that that option does not reduce anything at the moment.; I've re-enabled it, the fix will be in one of my ignored PR's.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/918#issuecomment-603938171:55,reduce,reduce,55,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603938171,1,['reduce'],['reduce']
Energy Efficiency,"I searched for `TWO3` in the project and this revealed two other locations. I adapted the one in `CSolver.cpp` in commit 64bd077. There is another one in `python_wrapper_structure.cpp`, lines 400-415. There I hesitate a bit because in the `incompressible` case, `div_vel` is manually set to zero. As long as the solver has not converged, this has an effect, right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-743033388:78,adapt,adapted,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-743033388,1,['adapt'],['adapted']
Energy Efficiency,I see. The python wrappers are far more powerful than I thought. But I'm still a bit lost with respect to the API of the driver(s). Where's a good place to start reading into that?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553#issuecomment-1058017822:40,power,powerful,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1058017822,1,['power'],['powerful']
Energy Efficiency,"I think it looks better now by just rearranging things. You could also decide to put Monitor at the start of the while-loop, before calling Run(), and keep the Iter+=1 at the end, but this is just nitpicking. ; I have added an example pywrapper case that shows how to initialize velocity and species for the primitive Venturi case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960#issuecomment-1464603883:85,Monitor,Monitor,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960#issuecomment-1464603883,1,['Monitor'],['Monitor']
Energy Efficiency,"I think most of the parallel reg tests are actually launched with the parallel_computation.py script, so it should be OK since they are all green. But maybe I have misunderstood your request...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/344#issuecomment-267086037:140,green,green,140,https://su2code.github.io,https://github.com/su2code/SU2/pull/344#issuecomment-267086037,1,['green'],['green']
Energy Efficiency,"I think we are all in agreement then.. as @pcarruscag points out, we should always keep code duplication in mind and try to abstract when possible. But, let's do it gradually.. sometimes we need to balance this against keeping duplicate code if it helps reduce conflicts and allows for different parts of the code to evolve separately and in parallel by different developers. I think a good first step is what @talbring has in mind for the flow output.. exactly this type of mid-level flow output class will show up there I believe. We can see how well that goes and then port to the solver classes too. Will merge this in today so we can keep moving forward. Thanks all",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657#issuecomment-472547987:254,reduce,reduce,254,https://su2code.github.io,https://github.com/su2code/SU2/pull/657#issuecomment-472547987,1,['reduce'],['reduce']
Energy Efficiency,I think we can reduce the iterations of some of the test cases. That should already save a lot time ... . I'll create a branch for that which we should merge in asap.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-347515641:15,reduce,reduce,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-347515641,1,['reduce'],['reduce']
Energy Efficiency,"I think we lost this functionality around version 7 (at the time I did not know we had it) maybe because it was complicated to guarantee the right file outputs when the simulation is stopped this way, especially for discrete adjoint problems.; The poor mans version of this feature is to increase the file output frequency and kill the execution :shrug: ; Nevertheless, the mechanism to change the number of time iterations at runtime can still be found in `CFluidDriver::Monitor`, which is currently used by turbomachinery problems.; If someone wants to bring the feature back that would be a good place to start, although I think this type of runtime interaction is a bad investment, it would be better to use the python wrapper.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1304#issuecomment-862079938:472,Monitor,Monitor,472,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-862079938,1,['Monitor'],['Monitor']
Energy Efficiency,I think you are right.; You joined the dev meeting today as we were ending right? Maybe the European summertime misled you.; Can you open a pull request for this? There are other parts of that function that are not very efficient.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1345#issuecomment-892953950:220,efficient,efficient,220,https://su2code.github.io,https://github.com/su2code/SU2/issues/1345#issuecomment-892953950,1,['efficient'],['efficient']
Energy Efficiency,"I tried using adaptive CFL as you suggested for v7.2.1 with settings below;. CFL_ADAPT_PARAM= ( 0.1, 2.0, 1.0, 1e10, 0.001 ). Even though it doesn't diverge it still needs more iterations to converge compared to v7.0.6 and result is pretty much the same with constant CFL 250. Also, with adaptive CFL residuals are changing but they are oscillating in an interval. . What I don't really understand is why using same settings would yield less accurate results in a newer version. Since these settings are working with v7.0.6 and are very common I don't think I need to alter them for a newer version to give the same results. Here is the code output for v7.2.1 with adaptive cfl enabled. [codeOutput_v721_CFLadapt.txt](https://github.com/su2code/SU2/files/7919208/codeOutput_v721_CFLadapt.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1519#issuecomment-1019351706:14,adapt,adaptive,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/1519#issuecomment-1019351706,3,['adapt'],['adaptive']
Energy Efficiency,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-761751741:269,ADAPT,ADAPTATION,269,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741,13,"['ADAPT', 'adapt', 'sensor']","['ADAPTATION', 'adaptation', 'adaptations', 'sensor']"
Energy Efficiency,I'll adapt one of the existing Testcases to use this feature,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382#issuecomment-927306822:5,adapt,adapt,5,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927306822,1,['adapt'],['adapt']
Energy Efficiency,"I'll take a more in-depth look my cases tomorrow (Saturday) to adapt the regression values, and options if necessary. In some cases I saw a massive improvement in convergence speed so I'll decrease the prescribed iterations to reflect that :+1: I hope it is ok to push to this PR directly (won't be that many lines ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585#issuecomment-1085574919:63,adapt,adapt,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585#issuecomment-1085574919,1,['adapt'],['adapt']
Energy Efficiency,"I'll try to break down each request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:639,efficient,efficient,639,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827,2,['efficient'],['efficient']
Energy Efficiency,"I'm not a user myself, just supporting our engineers. To test Windows, however, you may look into AppVeyor, an automated testing service run on Windows free of charge for open source software.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/332#issuecomment-322434455:160,charge,charge,160,https://su2code.github.io,https://github.com/su2code/SU2/pull/332#issuecomment-322434455,1,['charge'],['charge']
Energy Efficiency,"I'm the one who created that warning message, so I can fill in some details about when and why that error message occurs. For adaptive mesh refinement, SU2 looks at each element and checks how important it would be to divide that element. It then assigns a numeric value (a ""sensor"") to each element representing the relative importance. That sensor is normalized by the max value and is assumed to be positive, so its range should be from 0 to 1. SU2 defines a number of elements that it wants to create (4455 in your case). It then loops through all the elements and looks for elements whose sensors fall above a threshold. That threshold starts at 0.999, close to the max value of 1. If an element has a sensor above that threshold, SU2 marks that cell for division. If it doesn't find enough elements, then it lowers the threshold and continues looking. That process continues all the way down till the threshold hits 0. Sometimes, SU2 can't find enough elements to adapt. The threshold goes all the way to 0, and there's still not enough. Then it prints that warning and continues. That's what you're seeing. The code only mentions triangles, quadrilaterals, and tetrahedrons as a guess to what's wrong. You'll notice it says your grid ""may"" have too high a percentage of other types. If your grid were composed solely of hexahedrons, for example, then it won't find any elements to adapt and print that warning message. There's no check to confirm that this guess is actually correct. In your case, you only have quads and triangles, so the guess is obviously mistaken. As to what is actually going wrong in your case, I would have to dig in a little deeper to find out what's going on. I would guess that your elements aren't being marked as ""divisible,"" but I'm not sure why.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-434924444:126,adapt,adaptive,126,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-434924444,7,"['adapt', 'sensor']","['adapt', 'adaptive', 'sensor', 'sensors']"
Energy Efficiency,"I've messed around with this a bit in some of my other branches. Since I've been using python scripts, I've used the minimum CFL in the volume at the end of the flow solution (obtained from the history file) as the CFL in my adjoint runs. I figured that would be the largest CFL that could be applied everywhere and give a contractive iteration. Doing so significantly reduced the cost of the adjoint (obviously proportional to CFL_Min/CFL_Init). We could probably do even better and output the local CFL in the restart then load that into adjoint runs, maybe with a reduction factor if we want to be conservative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-673044213:369,reduce,reduced,369,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-673044213,1,['reduce'],['reduced']
Energy Efficiency,"I've run into some headaches getting the optimization to run efficiently on my end, which is why I ask. Playing with a toy problem, SLSQP actually does a great job on its own (with all tuning parameters set to 1.0) if the following conditions are met:. + The constraints and bounds effectively bound ""reasonable"" solutions, so you don't have to worry about unrealistic deformations.; + The optimization function is (relatively) convex. If those conditions are met, then playing with any of the tuning parameters makes SLSQP converge more slowly, sometimes with 10x the iterations. So its not clear to me when the tuning parameters are necessary, and how those tuning parameters affect the convergence in those cases. I'm not arguing that the tuning parameters aren't necessary, just that their effects aren't clear. And I agree, the proper way to nondimensionalize and regularize these problems is not clear from a brief search of the literature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616825497:61,efficient,efficiently,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616825497,2,['efficient'],['efficiently']
Energy Efficiency,"If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?. The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; - Turbulence solvers;; - Heat solver;; - Radiation solver;; - General passive/active scalar solvers;; - Eventual transition solvers;. The starting point would be the current base turbulence solver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-793953677:122,power,power,122,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-793953677,1,['power'],['power']
Energy Efficiency,"In general, you can wait for Travis to give the green light before merging into develop. This way develop stays working. In addition, when done merging usually I delete the branch to keep things clean.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/185#issuecomment-126116253:48,green,green,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/185#issuecomment-126116253,1,['green'],['green']
Energy Efficiency,In places like `if (tkeNeeded) Energy += GetTke_Inf();` we would instead read tke from the turbulence solver.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1525852013:31,Energy,Energy,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1525852013,1,['Energy'],['Energy']
Energy Efficiency,"In the meantime, I did a few additional comparisons. In the following plot, you can see a gust encounter of my 3m wing, in green color farfield onflow + gust and in violet color the same but with moving grid + gust. As we can see, there is a significant difference, which shouldn't be there. What is happening here?? ; My current understanding is that the green curve (farfield onflow + gust) is correct, because it looks similar to other plots I found in literature and from asking my colleagues. I have the feeling that in my implementation, I am violating some physics / broke the numerics which describe the physics, but I have not idea what I'm doing wrong... ![NACA0009_sin+gust+gridmovement2](https://user-images.githubusercontent.com/96138805/224348282-5c52dc12-a09d-4b5b-89fa-62bccf3a1cfb.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1463935023:123,green,green,123,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1463935023,2,['green'],['green']
Energy Efficiency,"In version v7.0.5 we made the communications hybrid parallel (to an extent) and reduced the communication overhead noticeably, that is probably as ethernet friendly as the code can reasonably be made.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-643831225:80,reduce,reduced,80,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-643831225,1,['reduce'],['reduced']
Energy Efficiency,"It does not break the multizone adjoint but it does not fix the problem. So now when we register the coordinates we do it index-based because the multizone_problem boolean is set.; What are the implications for when we extract the adjoints? Do we need an index-based GetDerivative?. UPDATE: This solves the segfault issue, but the derivatives are probably wrong.; The residuals for the flow adjoint are not moving, @rsanfer any chance that this due to some output adaptation (I'm guessing not).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542191835:464,adapt,adaptation,464,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542191835,1,['adapt'],['adaptation']
Energy Efficiency,"It does output the file, Paraview & Tecplot formats (binary & ASCII) both work. However, I need the raw data as I will be subjecting it to a Machine Learning Algorithm in Python. Manually deleting the lines for cell numbers in Tecplot format is an additional time consuming step, that hinders full automation. Hence a simple file as flow.csv (CSV format) may help me run it more efficiently. 1. Ganti, Himakar & Khare, Prashant. (2018). Spatio-Temporal Prediction of Gaseous and Liquid Spray Fields using Machine Learning. 10.2514/6.2018-4760. . 2. Ganti, Himakar & Kamin, Manu & Khare, Prashant. (2019). Design Space Exploration for Vaporizing Liquid Jet in Air Crossflow using Machine Learning. 10.2514/6.2019-2211.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528453362:379,efficient,efficiently,379,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528453362,2,['efficient'],['efficiently']
Energy Efficiency,"It looks like pointwise Mesh Link frame have a support for both mesh link and database (CAD) and it includes both edge data and corners (""Edge2"" for edges and begining and end vertices of each edge data set corresponds to corner data.); https://www.pointwise.com/doc/user-manual/file/export/cae/kestrel.html ; https://github.com/pointwise/MeshLink library also provides some info for mesh to CAD projection. . Therefore adap_back mesh file can be prepared in GAMMA mesh file format including corners, edges, triangles, tets and vertices. But l am not sure about the correctness of su2 files created at each refinement level since corner and edge data will be lost when they are written in su2 format. It may be a good idea to use the GAMMA mesh file format for pyamg mesh adaptation levels and use su2 mesh file format only when it is needed for SU2 runs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1673116005:772,adapt,adaptation,772,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1673116005,1,['adapt'],['adaptation']
Energy Efficiency,"I‚Äôm going to take care of this today, I think‚Ä¶. On Oct 27, 2014, at 9:59 AM, Francisco Palacios notifications@github.com wrote:. > Yep! this is a good idea. ; > ; > > On Oct 27, 2014, at 9:51 AM, Thomas D. Economon notifications@github.com wrote: ; > > ; > > After removing the local surface element area from the calculation, it results in viewing a map of change in the objective (e.g. drag) per 1 square meter w/ a 1 meter deflection at all nodes (for SI units). Makes it easier to see where the geometry is most sensitive. ; > > ; > > ‚Äî ; > > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/issues/123. ; > > ; > > ‚Äî; > > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/123#issuecomment-60628204:407,meter,meter,407,https://su2code.github.io,https://github.com/su2code/SU2/issues/123#issuecomment-60628204,2,['meter'],['meter']
Energy Efficiency,"Juan, all,. The adaptive wall function formulation as described in the paper of Medic et al. has two serious issues. First, the convergence stalls after three orders of magnitude or so and second it only works with an upwind discretization of the inviscid fluxes. For some reason JST type of schemes gave rather poor results. In order to have a reliable implementation, both issues need to be addressed. Unfortunately, we never did. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-307294686:16,adapt,adaptive,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-307294686,1,['adapt'],['adaptive']
Energy Efficiency,"Just a comment here, that may or may not help:. The sensor in SU2 is based on an unstructured, 3D generalization of Jameson, Schmidt, and Turkel's original sensor. If _s_ is the sensor and _p_ is the pressure at some cell _i_, then the sensor is calculated as. ![latex_sensor](https://user-images.githubusercontent.com/13340225/134005407-e3cfec18-9bc1-45d6-89e8-7d58d72753dd.png). If you imagine a problem with constant spanwise properties, you can ask the question, will 2D and 3D simulations give the same value for the shock sensor? The answer is no. The numerator of the sensor will not change, since the pressure is constant across the spanwise direction. But the denominator will change. As you add more neighbors, the value of the denominator will increase, the value of the sensor will decrease, and the dissipation will decrease. As @pcarruscag mentioned, the stretching terms also have different values in 2D and 3D problems, so that further muddies the waters.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1280#issuecomment-922902668:52,sensor,sensor,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-922902668,7,['sensor'],['sensor']
Energy Efficiency,"Just an update: There is now WRLES data for the axisymmetric transonic bump case on the NASA Turbulence Modeling Resource. The data includes pressure, turbulent kinetic energy, and density. While the WRLES is not ""ground truth,"" it is a reliable data source for comparison. Sometime over the next few weeks, I'll compare the WRLES data with the SU2 results, including some of the possible changes. This will give us a better idea of how these model changes impact the predictive accuracy.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-649816660:169,energy,energy,169,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-649816660,1,['energy'],['energy']
Energy Efficiency,"Just another note, portability is one of the cornerstones of SU2, so please try to work within C++11 boundaries, a lot of C++14 features are syntax sugar on top of C++11 capabilities, you can just adapt the example implementations from the online c++ documentation (no boost :) ).; Also compiler specific flags will be a bit of a deal breaker if they don't have support from the major vendors (gcc, clang, intel, ms).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-669267383:197,adapt,adapt,197,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669267383,1,['adapt'],['adapt']
Energy Efficiency,"Just want to leave some notes here, open to any thoughts or suggestions. I think it's best to have it work something like this for 1st-order dual timestepping:. TIME_STEP=0.5; RESTART_ITER=0; ----------------------------------------------------------------------; Time_Iter Cur_Time; 0 0.0; 1 0.5; 2 1.0; ----------------------------------------------------------------------; Output of restart_flow_00002.dat associated with t=1.0. Then if I want to restart that simulation but with a different timestep, I would have to make sure `START_TIME` represents the time at which the first iteration in the restart is completed to, NOT the time from the previous restart file:. TIME_STEP=0.25; RESTART_ITER=3; START_TIME=1.25; ----------------------------------------------------------------------; Time_Iter Cur_Time; 3 1.25. I think it may make more sense to just call it `RESTART_TIME` so it is consistent with `RESTART_ITER`. However I don't think that this adaptive timestepping functionality / changing of timesteps for unsteady restarts would work for 2nd-order dual timestepping since information on the previous dt is lost. It wouldn't be too challenging to have a check for this in `CDriver::SetUnsteadyTimestep` and also a warning if `START_TIME` is used on an unsteady restart with it, but it may be getting a bit clunky at that point.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190#issuecomment-1871406591:956,adapt,adaptive,956,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190#issuecomment-1871406591,1,['adapt'],['adaptive']
Energy Efficiency,"Looks good, thanks for looking into this @arubino. . I think that it's fine to start a pull request with this branch if you've made the changes you wanted - it'll fix the regression test for now, and until we find a way to test for similar errors we can try to remember to skim through log files even if there's a friendly green check-mark.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/313#issuecomment-252534574:323,green,green,323,https://su2code.github.io,https://github.com/su2code/SU2/issues/313#issuecomment-252534574,1,['green'],['green']
Energy Efficiency,"Looks like the stator was just the intermittent hybrid AD problem that is being worked on.; As for the nozzle... it did not have an objective function specified, therefore it must have been defaulting to drag, which was zero because MARKER_MONITORING was empty, now you added something to monitor and puff, results changed. So before the case was not testing anything :shrug: you have my blessing to do whatever you want, check if the new adjoints make some sense and update (good samaritan option), or blindly update, or don't modify the case, or delete it, up to you :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1698#issuecomment-1177007574:289,monitor,monitor,289,https://su2code.github.io,https://github.com/su2code/SU2/pull/1698#issuecomment-1177007574,1,['monitor'],['monitor']
Energy Efficiency,"Maybe instead of adding a new one, we can modify an existing one to check that feature. Or we add a new one and remove an existing one. We have to somehow reduce the number of tests ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-515453841:155,reduce,reduce,155,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-515453841,1,['reduce'],['reduce']
Energy Efficiency,"My previous post used a linear solver precision of 1E-6. I ran a couple of test cases at near machine precision (a linear solver tolerance of 1E-14) and higher CFL number (CFL=150), with no CFL adaptation. As suggested, I used ILU+FGMRES. I capped the maximum number of linear solver iterations at 200, and did not raise any errors if the linear solver stopped at 200 iterations with less than 1E-14. The linear solver didn't exceed 200 iterations for the RANS equations, but it did for the Navier-Stokes equations. Once again, there doesn't appear to be a huge difference. For the flat-plate, the results were almost identical:. ![flat_plate_improved](https://user-images.githubusercontent.com/13340225/35233993-595fe2d4-ff65-11e7-9fd6-4b98f30b4d75.png). For the NACA 0012 airfoil, the current `develop` branch of the code outperformed this pull request:. ![naca0012_improved](https://user-images.githubusercontent.com/13340225/35233983-4f79b380-ff65-11e7-81f4-4b65964acecc.png). I believe overall convergence was similar because the Navier-Stokes solver, not the turbulence-solver, is the limiting factor when it comes to precision. The linear solver always converged on a turbulence solution with high precision in under 50 linear solver iterations. Meanwhile, the linear solver sometimes failed to find a Navier-Stokes solution within 1E-14 even after 200 iterations. The only way to make the Navier-Stokes solver converge to 1E-14 was to use small time steps (CFL ~= 1) at difficult points in the overall convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/491#issuecomment-359811658:194,adapt,adaptation,194,https://su2code.github.io,https://github.com/su2code/SU2/pull/491#issuecomment-359811658,1,['adapt'],['adaptation']
Energy Efficiency,"N; ++k); grad(iPoint+k,iVar,iDim) = gradI[iVar][iDim][k];; ...; ```; Similarly when computing the gradient we need to first fetch/transpose it to be able to vectorize subsequent computations; ```c++; FltVec gradI[MAXNVAR][MAXNDIM];. for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); for(size_t k=0; k<SIMDLEN; ++k); gradI[iVar][iDim][k] = grad(iPoint+k,iVar,iDim);; ...; ```; Performance wise this is actually better than the SoA version (4% on gradients, 35% on limiters) as it also benefits from better locality, and it is only slightly (3%) worse than zig zag storage, especially when fusing limiters and gradients as the transposition of the gradient into storage is greatly amortised.; Regarding readability, the 3 nested loops can be moved to methods of the container, but we cannot get rid off the local variable (if we want vectorization that is). **We lose the ability to vectorize primitive variable updates efficiently with AoS** but currently that only accounts for 3% of the runtime and it is a memory bound operation therefore it would not gain much from vectorization anyway. On the subject of de-swizzling data remember I said the writes into CSysMatrix would be a bit weird, that is because each Jacobian contribution will be a ""matrix of short arrays"" that needs to be transformed into a short array of matrices, the result of that is code like the above that explicitly manipulates the lanes of our SIMD type, such code can be completely hidden inside CSysMatrix which is good because a 4x4 vectorized transpose and matrix update looks like this; ```c++; // block j, subs from jj and goes to ij; T0 = blk_j[ k ].unpackLo(blk_j[k+1]); T1 = blk_j[ k ].unpackHi(blk_j[k+1]);; T2 = blk_j[k+2].unpackLo(blk_j[k+3]); T3 = blk_j[k+2].unpackHi(blk_j[k+3]);. C0 = T0.widePermuteLo(T2); C1 = T1.widePermuteLo(T3);; C2 = T0.widePermuteHi(T2); C3 = T1.widePermuteHi(T3);. (Array4d(&bjj[0][k])-C0).store(&bjj[0][k]);; (Array4d(&bjj[1][k])-C1).store(&bjj[1][k]);; (Arr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:15153,efficient,efficiently,15153,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['efficient'],['efficiently']
Energy Efficiency,Need to figure out how to adapt for noneq flows. I haven't been able to find a separate description of how to solve for boundary conditions for noneq flows with Riemann invariants.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1882#issuecomment-1378279716:26,adapt,adapt,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1882#issuecomment-1378279716,1,['adapt'],['adapt']
Energy Efficiency,"Nice progress @pcarruscag!. I like the concept of your SIMD-friendly class that will take care of the data structure under the hood coupled with a standard type of loop statement (w/ +SIMDLEN). This should make it pretty easy for folks to still modify the kernels without having to worry about the data alignment, and they can reuse the same simple 'for' construct repeatedly. . Another reason to have our own lightweight class for this is that you can avoid dependence on OpenMP for SIMD (although that feature looks to have potential and wasn't available until somewhat recently) as well as the intrinsics. In my experience, the latter is especially bad for portability and readability (part of why we left the CaF work in a separate repo). It starts to become so specialized that compiling and modifying become difficult. W.r.t. OpenMP, another roadblock there a few years ago was making sure it is interoperable with CoDi for the adjoint, but I know this has been worked on and may be available by now. Might keep an open mind about point vs. edge. In some places, we may be able to pump up the compute in our loops by fusing kernels, as previously discussed (and I am guessing you are working on this already with gradients/limiters). Could change the final performance numbers significantly. Lastly, I know you are not there yet, but it is worth considering whether you can reuse anything you are developing in the kernels here for the linear solver routines. At some point, you will successfully reduce the cost of the residual kernels (RHS) to the bandwidth limit, and the majority of the iteration cost will be in the linear solver (it is already about 50% of the iteration cost before optimization, if I recall). Before making final decisions on strategy, you should consider if it will help in any of the linear solver routines too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530440072:1503,reduce,reduce,1503,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530440072,2,['reduce'],['reduce']
Energy Efficiency,"Nice work, and thanks for sharing, @jayantmukho. I expect you'll add everything to the V&V repo and eventually the V&V tab once we understand what is happening?. The GG results look great, potentially even better than the previous set of results we had for the DSMA case. I am also surprised to see the behavior of the GG+LSQ.. the finest mesh seems to be especially errant. I have been running the NACA 0012 case, and I also see that the results with pure GG or WLSQ are slightly better there, but not this drastic. I think we still need to dial in the LSQ and make sure we do not have any bugs. Although, the flat plate and bump-in-channel cases were run with LSQ and gave very good results. It could be that too much curvature in the grid, especially near walls (which is known to be a potential problem), is causing these issues for the LSQ accuracy, but I'm surprised it would be that significant. Still looking into this... As for adaptive CFL, sometimes I find that just turning it off for some rans cases and using a fixed 250, 500, or 1000 works best. Does that work for you with these cases with GG or WLSQ, @jayantmukho ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-553521522:937,adapt,adaptive,937,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-553521522,1,['adapt'],['adaptive']
Energy Efficiency,"No meson option yet, it is a very small one though, the whole system works by detecting `-fopenmp`.; Your second comment is the main argument against moving the parallel section further up.; Allocation routines have the highest risk of making a mess, but even seemingly innocuous things like the small auxiliary arrays we allocate e.g. in CSolver and then use in derived classes are a problem.; I am almost done making the FEA solver completely hybrid parallel and I had to refactor most uses of those arrays. This is also why I took a more functional approach to the new limiter and gradient routines. The way we use CConfig is also not thread safe, we would need to make all ""SetSomethings"" atomic, which would be monumental.; Initially I would have a few parallel sections (it is not too difficult to then move them up if we think that is the way to go) I want to use the FEA solver to get an idea for the relative performance, after seeing the effect of `OMP_WAIT_POLICY` I am optimistic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-566667503:322,allocate,allocate,322,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566667503,1,['allocate'],['allocate']
Energy Efficiency,"No, the invalid reads and writes are problematic. There you cross the boundaries of allocated memory and anything can happen.; What version/branch are you using? The line numbers valgrind gives do not correspond to the current develop version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-755368953:84,allocate,allocated,84,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755368953,1,['allocate'],['allocated']
Energy Efficiency,"Not sure what you mean. It reduces the objective function. This could be by small values, or by orders of magnitude, if such a reduction is possible.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/984#issuecomment-628759102:27,reduce,reduces,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628759102,1,['reduce'],['reduces']
Energy Efficiency,"Oh interesting, just to be fully complete here's what made me think that:. 1.I have a well-converged steady-state solution and outputted the minimum DT's for each cell when running with a CFL=1.0, no adaptive. I was unable to restart this for an unsteady one with no changes in BCs without using a DT orders-of-magnitude smaller. 2. When I run /Tutorials/compressible_flow/Turbulent_OneraM6 with `MIN_DELTA_TIME` set as a screen output, I get orders-of-magnitude different final timestep when I run with `REF_DIMENSIONALIZATION= DIMENSIONAL` instead of `FREESTREAM_VEL_EQ_ONE`. . 3. When I run `SU2_CFD -d` on the /Tutorials/compressible_flow/Unsteady_NACA0012 example **using `FREESTREAM_VEL_EQ_ONE`** I see the attached image below, which appears to nondimensionalize using length/velocity. ![Unsteady_NACA0012_SU2CFDd](https://github.com/su2code/SU2/assets/116454159/44a5b0c4-2220-4e98-a911-cf0229f0cb21). 4. I also looked briefly at the code it _appeared_ that the calculations were using nondimensional values; here's what I looked at:. Setting of local timestep:; https://github.com/su2code/SU2/blob/b80e4ce0e4fd05afa136af0990a17dd619cdce42/SU2_CFD/include/solvers/CFVMFlowSolverBase.hpp#L506-L522. Calculation of Lambda's:; https://github.com/su2code/SU2/blob/b80e4ce0e4fd05afa136af0990a17dd619cdce42/SU2_CFD/include/solvers/CFVMFlowSolverBase.hpp#L413-L444. GetProjVel:; https://github.com/su2code/SU2/blob/b80e4ce0e4fd05afa136af0990a17dd619cdce42/SU2_CFD/include/variables/CEulerVariable.hpp#L244-L254. Then at this point admittedly I just assumed that the `MatrixType Primitive` of `CEulerVariable` was indeed nondimensional. I am not familiar with where/when data is stored/updated throughout SU2 as nondimensional v dimensional.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2060#issuecomment-1613895947:200,adapt,adaptive,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/2060#issuecomment-1613895947,1,['adapt'],['adaptive']
Energy Efficiency,"Ok, I went back to try varying the `.cfg` settings on the simple v7.0.3 repo `TestCases/euler/naca0012` case and managed to get `mesh_adaptation_amg.py` to run successfully. It seems that one bit of advice [from here](https://www.cfd-online.com/Forums/su2/214613-grid-adaptation-options.html) is no longer true, i.e. one needs to set:; ```; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= YES; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= YES; ```; in order for the amg mesh adaptation to function. However, for some reason, I can't get it working for my actual mesh of interest. When using the same settings, I get a different ParMETIS error (from the `adap/ini/log.out`):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 4929018 grid points before partitioning.; 7406196 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 50968 boundary elements in index 1 (Marker = FARFIELD).; 284054 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [ 1] ***ASSERTION failed on line 207 of file ../externals/parmetis/libparmetis/comm.c:sendind[i] >= firstvtx && sendind[i] < lastvtx; [ 1] 361316 123226 246452; [1609857970.901920] [super:1060888:0] sock.c:344 UCX ERROR recv(fd=62) failed: Connection reset by peer; ```. The only difference that I can think of is that my flow is fully supersonic and my mesh is an unstructured core with a structured collar - might this be causing the issue? Kind regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754686447:268,adapt,adaptation-options,268,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754686447,4,['adapt'],"['adaptation', 'adaptation-options']"
Energy Efficiency,"Ok, I've recompiled using --buildtype=debug and I'm running valgrind now. I'll try and run it at a reduced rank and get back to you. Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-755318540:99,reduce,reduced,99,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755318540,1,['reduce'],['reduced']
Energy Efficiency,"Ok, SIMD update, with #753, #959, and #966 we now have a unified storage type for the data we need in CNumerics. This means that we (I) only need to implement ""SIMD accessor methods"" (i.e. that return a SIMD type instead of a su2double) for one class (C2DContainer and co.). I think to do SIMD right we need a new way of going about CNumerics, these are my design requirements for ""CNewNumerics"":; - Thread-safe (consequently const-correct), a single object must be safe to use by multiple threads.; - Minimal indirection, the polymorphic overhead will be reduced to a single call (ComputeResidual), all auxiliary functions (like the ones that live in CNumerics) will be forcefully inlined, no useless copies of data (no more numerics->SetBlaBla).; - Compile time nDim/nVar, which will: a) avoid heap allocations; b) allow effective loop-unrolling (also during the writes to CSysMatrix).; - Allow low-overhead composition, e.g. have one CRoe for Euler and one CRoeVisc for NS to fuse convective and viscous residuals (without copy pasting code).; - A lot more readable, those cryptic V_i[iDim+1] need to go (somehow...). To achieve all this, the ""CNewNumerics"" will work as a template (obvs) decorator/visitor.; A visitor in the sense that the solver calls the numerics and gives it (read-only) access to all its data, the object pulls whatever it needs directly and there is no need for numerics->SetBlaBla.; A template decorator in the sense that the class can be augmented simply by inheriting from another, along the lines of `class CRoeVisc : public CRoe, public CVisc` (to allow fusing residual and Jacobian contributions).; All this needs to be done with templates for the ""minimal indirection"" requirement. Which means for each numerical method we will have 4 explicit template instantiations (Euler2D, Euler3D, (RA)NS2D, (RA)NS3D) but in the end these are still polymorphic objects that will be instantiated by some factory function (i.e. it will look clean, especially because I will not por",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:556,reduce,reduced,556,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,2,['reduce'],['reduced']
Energy Efficiency,"Ok, the issue is that the inlet values in SST tend to decay very quickly (as you can find in the literature https://turbmodels.larc.nasa.gov/sst.html) so far as I can tell we are adding the right amount of TKE to the flow and turbulence solver inlets.; However, in the turbulence solver this is destroyed immediately (note that destruction is proportional to TKE) and so TKE at the inlet nodes is not TKE_Inf.; Effectively this means we put too much energy into the flow, which is not matched by the turbulence solver due to the immediate decay, and therefore static temperature appears high, and Mach number low.; E.g. we put 10 + 0.1 into the flow solver inlet, and 0.1 into the turbulence solver, but this 0.1 decays to 0.01 right away. Then, when we compute the temperature for this inlet node we have 10 + 0.1 total energy (which does not decay in the flow solver since it does not have destruction terms) from which we subtract the decayed 0.01 from the turbulence solver and end up with 10.09 instead of 10. I tested this by turning on the SST sustaining terms, which prevent decay below freestream values, and I got the right Mach number. So what we could do is use the TKE from the turbulence solver in the flow solver inlets, instead of the freestream TKE which the turbulence solver is not guaranteed to sustain.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1364158508:450,energy,energy,450,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1364158508,2,['energy'],['energy']
Energy Efficiency,"Ok. I don't think [these](https://github.com/su2code/SU2/pull/774/commits/e632133eded5edab7ff04f0979334c25c0f44ff8) changes are over-complicated. But I'm fine with changing the index saving procedure everywhere. There'd be just some work to do (we would have to adapt everything for the FEA elasticity solvers and all the variables they need as well)... so it's also a question of time, testing and so on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542206395:262,adapt,adapt,262,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542206395,1,['adapt'],['adapt']
Energy Efficiency,"Ok. My advice would be to not use the `SUPERSONIC_SHOCK` option, but other developers may have further recommendations there. It doesn't seem to be set up for general cases. Are you having any further issues with the mesh adaptation? For example, is the `GRAD_FLOW` option working as you expected? Has the issue been resolved?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-444955431:222,adapt,adaptation,222,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-444955431,1,['adapt'],['adaptation']
Energy Efficiency,Okay @pcarruscag I believe ; I reverted all the annoying format changes. Can you please review the code when you get the chance?. BTW I am aware about the boilerplate code in `python_wrapper_structure.cpp` and I plan to adapt `CPyWrapperMatrixView`. Would appreciate some feedback anyways,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750#issuecomment-1779150012:220,adapt,adapt,220,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750#issuecomment-1779150012,2,['adapt'],['adapt']
Energy Efficiency,"Only the testcases `channel_2D`, `channel_3D` fail. Both use sliding mesh interfaces, but there are also other sliding mesh testcases that do not fail. The residuals are still very close and also the flow fields look similar. I thus adapted the stored residuals in 9d8f194. Let me know if you would like to investigate the changed residuals further.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670:233,adapt,adapted,233,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670,1,['adapt'],['adapted']
Energy Efficiency,"Overall some solid looking code @jayantmukho, thanks!; I have a few suggestions:; 1 - Some of the config variables have fairly broad names, ""permute"" for example, I think prefixing them with UQ would more clearly identify what they are meant for.; 2 - There are a lot of dynamic allocations of static size, if the current implementation is compatible with 2 and 3 dimensions I would allocate those variables statically, makes for cleaner and faster code (stack allocations are much faster and subsequent loops would likely be unrolled by the compiler).; 3 - It looks like some of the new methods in CNumerics are for generic ""Eigenvalue-stuff"" for re-usability I suggest moving those methods to a helper class, even if for now that class becomes just a collection of static methods. In the implementation of those methods the dimension of the inputs is being assumed, if you do move them please make them generic.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-427468893:383,allocate,allocate,383,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-427468893,2,['allocate'],['allocate']
Energy Efficiency,"Part of the reason I never gave much attention to the current optimization scripts, and instead developed my own, is that I need different settings for primal and adjoint and the optimization scripts cannot handle that. I don't think we should have different config settings for primal and adjoint. I'm certain the adjoint solver considers the convergence criteria, you probably did something wrong in your setup (I'm guessing the fields you are monitoring do not exist for the adjoint, hence it has nothing to use as convergence field) but since you did not attach your config file, all I can tell you is to read the documentation https://su2code.github.io/docs_v7/Solver-Setup/. > ... I am downgrading ... Yes you are. Honestly I envy this kind of pragmatism, it is probably why SU2 has tens or hundreds of ""feature branches"" lagging behind master by several versions. I feel like ranting but I'll be pragmatic for once.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1024#issuecomment-645255976:446,monitor,monitoring,446,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645255976,1,['monitor'],['monitoring']
Energy Efficiency,"Pete, Tim,. I have had a long standing interest in getting this working and would be happy to help. The (partial) implementation that is there is already 3-4 years old, so it will have to be updated, but we can discuss some of the details of the implementation and how it can be done both more efficiently and for both compressible formulations and adaptive wall functions. We can start a thread separately (jjalonso@stanford.edu<mailto:jjalonso@stanford.edu>) and perhaps have a telecon to kick things off. My availability for this improves after the next 2 weeks. Best,. Juan. On Jun 7, 2017, at 1:19 PM, Tim Albring <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi Pete,. we appreciate your help on that. I just updated the branch feature_Wall_Functions<https://github.com/su2code/SU2/tree/feature_Wall_Functions> to be up-to-date with develop. The main routines dealing with the wall functions are in solver_direct_mean.cpp<https://github.com/su2code/SU2/blob/feature_Wall_Functions/SU2_CFD/src/solver_direct_mean.cpp#L16612> and solver_direct_turbulent.cpp<https://github.com/su2code/SU2/blob/feature_Wall_Functions/SU2_CFD/src/solver_direct_turbulent.cpp#L2569>. Maybe @economon<https://github.com/economon> can tell you what exactly is missing there. Tim. ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/399#issuecomment-306912607>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxOvHCOSUFKDoizjyvrHbgyXgZ-vVks5sBwW8gaJpZM4NvG6w>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-306941656:294,efficient,efficiently,294,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-306941656,2,"['adapt', 'efficient']","['adaptive', 'efficiently']"
Energy Efficiency,"Poiseuille flow, top is corrected, bottom is develop. There is still a small discrepancy in the energy but this might be due to the strong velocity components close to the wall.; ![image](https://github.com/su2code/SU2/assets/7050568/b38e0653-d2e5-454c-9a8b-a8d6fd0390a2)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2266#issuecomment-2067693182:96,energy,energy,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/2266#issuecomment-2067693182,1,['energy'],['energy']
Energy Efficiency,"Recently pushed to develop branch with this.; Note: there is a LoadRestart method in the CSolver class which might reduce some repeated code, I'm not sure if there was a good reason folks had not used it in the past.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/68#issuecomment-56878160:115,reduce,reduce,115,https://su2code.github.io,https://github.com/su2code/SU2/issues/68#issuecomment-56878160,1,['reduce'],['reduce']
Energy Efficiency,"Regarding ""Fixed Supersonic inlet BC inclusion of TKE,"" does the energy equation include the contribution of turbulent diffusion?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2253325035:65,energy,energy,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2253325035,1,['energy'],['energy']
Energy Efficiency,"Run SU2_CFD with `WRT_BINARY_RESTART= NO`. That will give you an ASCII `restart_flow.dat`. It will look something like this:; ```; ""PointID""	""x""	""y""	""z""	""Density""	""X-Momentum""	""Y-Momentum""	""Z-Momentum""	""Energy""	""Pressure""	""Temperature""	""C<sub>p</sub>""	""Mach""; 0	6.931794337794450e-01	1.199410270705132e+00	3.552713678800501e-15	9.247274759558524e-01	6.998395924205978e-01	6.744390123118781e-01	2.033333591408758e-01	2.825647424000119e+00	9.170095708259952e-01	9.784295110379145e-01	-1.930126447908861e-01	9.113348070779481e-01	; 1	6.906841300000011e-01	1.196300000000000e+00	0.000000000000000e+00	1.118921803269151e+00	5.021166385546235e-01	7.896289876522433e-01	2.161057381347509e-01	3.352487832836354e+00	1.176133434271568e+00	1.037113520398247e+00	3.252350821002600e-01	7.075425651590469e-01	; 2	6.924294614497271e-01	1.202091611452504e+00	1.468890958566504e-03	9.758692057411605e-01	8.423040306657703e-01	5.135454779704676e-01	2.297213358745695e-01	2.971366201327637e+00	9.782771280113181e-01	9.890989089014984e-01	-7.047753042024051e-02	8.761491078578573e-01	; ```; This answers the original question, ""How do I get SU2 to output raw ASCII data?"". You can also use the python scripting capabilities of Tecplot or Paraview (technically, VTK). You can find documentation for Tecplot's python API [here](https://www.tecplot.com/docs/pytecplot/index.html) and for VTK's python API [here](https://lorensen.github.io/VTKExamples/site/). That will allow you to use the Paraview or Tecplot files directly in python. You would use the paraview or tecplot libraries to load the data into python, then post-process it however you want. There's no need for ""manually deleting the lines for cell numbers.""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528461710:203,Energy,Energy,203,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528461710,1,['Energy'],['Energy']
Energy Efficiency,"Seems like we lost that function recently, I'll try to fix it and put together a working example, then you can adapt it to your problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1079#issuecomment-2143984024:111,adapt,adapt,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2143984024,1,['adapt'],['adapt']
Energy Efficiency,"So I tested the convergence on a couple of test cases, to see its behavior. I used the following three different preconditioner/linear solver combinations:. + LU SGS with FGMRES; + ILU with FGMRES; + ILU with BCGSTAB. I looked at three different test cases from the repo: the zero-pressure gradient flat-plate turbulent boundary layer, the NACA 0012 airfoil, and the RAE 2822. In each case, I ran without a restart file. For the flat plate and the NACA 0012, I used adaptive CFL and no multigrid. For the RAE 2822, I used constant CFL and multigrid. I looked at both the number of iterations of the linear solver (the inner iterations) and the overall convergence over time (the outer iterations). Here's some sample results and discussion:. For the flat-plate boundary layer, there was no noticeable difference between the develop branch and the fix:; ![flat_plate_ilu](https://user-images.githubusercontent.com/13340225/35281464-92d4da84-0018-11e8-9460-ae4672be6f44.png). For the NACA 0012, the linear solver converged in a similar number of iterations. Its hard to tell which outperformed the other due to different CFL numbers. The residual in turbulent kinetic energy did lag in the middle, but both cases converged in a similar number of outer iterations.; ![naca0012_ilu](https://user-images.githubusercontent.com/13340225/35281471-9aa05a40-0018-11e8-8abe-e31ddd058679.png). For the RAE 2822, the overall convergence was identical (same number of outer iterations). The linear solvers also converged in a similar number of iterations.; ![rae2822_ilu](https://user-images.githubusercontent.com/13340225/35281495-addf0d7c-0018-11e8-96c0-6599e3cfa5e5.png). ### Conclusion; There doesn't seem to be any large difference in the convergence with or without the fix.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/491#issuecomment-358401929:466,adapt,adaptive,466,https://su2code.github.io,https://github.com/su2code/SU2/pull/491#issuecomment-358401929,2,"['adapt', 'energy']","['adaptive', 'energy']"
Energy Efficiency,"So I tried adding the molecular and turbulent diffusion of turbulent kinetic energy in the total energy equation. It did not appear to fix this issue. At this point though, it's unclear exactly what the problem really is. I don't have ""correct"" pressure, turbulent kinetic energy, or total energy fields for the NACA 0012 or RAE 2822 test cases. By ""correct,"" I mean DNS or experimental data. The lack of ""correct"" data makes it hard to tell where the problems may actually be occurring. Is it coming from total energy? Resolved kinetic energy? Turbulent kinetic energy? All we're doing right now is comparing SST to SA, and one code's SST to another code's SST. That makes it hard to figure out what the correct answer really should be. Unless we have a problem that both 1) exhibits this problem, and 2) has high-quality pressure, temperature, total energy, or turbulent kinetic energy fields, then I agree that manufactured solutions is might be the best way to check ""correctness.""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-571730661:77,energy,energy,77,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-571730661,9,['energy'],['energy']
Energy Efficiency,"So just to be clear: In my opinion, after calling SU2Driver.Run() the iteration count should be increased immediately. Now we postpone it in the python scripts, which means we have to add +1 in monitor to get the correct iteration count.; With the current change, Monitor has the correct (imo) behavior.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960#issuecomment-1464364540:194,monitor,monitor,194,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960#issuecomment-1464364540,3,"['Monitor', 'monitor']","['Monitor', 'monitor']"
Energy Efficiency,"Sorry for the delayed response,. Yes, for some reason I still receive the same results using the SUPERSONIC_SHOCK option. Thank you for the additional resources on mesh adaptation,; Alex",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-443926887:169,adapt,adaptation,169,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-443926887,1,['adapt'],['adaptation']
Energy Efficiency,"Sounds good. I was a little concerned about carrying around unnecessary memory during fluid computations, which will be the case for FSI as well as time spectral and some other applications, but you have a good point about avoiding allocation/deallocation overhead, and since you're reducing the number of times the same variables are re-allocated without any deallocation, it'll be a performance improvement relative to the current code either way. Please replace the 'varname.~Classname' calls with 'delete varname', then I think it should be good to go (pending anyone else weighing in on this). [you probably already know this from previous pull requests, but just in case - you don't have to create a new pull request, just commit into your branch and it will update automatically]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-148124339:338,allocate,allocated,338,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-148124339,1,['allocate'],['allocated']
Energy Efficiency,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:924,reduce,reduced,924,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363,2,['reduce'],['reduced']
Energy Efficiency,"Thank you Pedro for the lightning reply! ; Yes, I see, unfortunately, I can't cross-check the log right now to see whether the ""STRAIGHT EDGE"" string was triggered, but I'll pay attention to that in the future for sure. . Anyway, I wonder whether the axis treatment is looking for a ""numerical 0"", or does perform some sort of filtering or tolerance on the mesh ( in some ways similar to what some CADs do). In my case, the body was in the order of meters, and the domain was in the order of 100 m.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373#issuecomment-1464373891:449,meter,meters,449,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-1464373891,1,['meter'],['meters']
Energy Efficiency,"Thank you both.; @oleburghardt this will only stop the calculations for values used for monitoring, e.g. you would need a cauchy criteria on maxHF.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1105#issuecomment-729148658:88,monitor,monitoring,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/1105#issuecomment-729148658,1,['monitor'],['monitoring']
Energy Efficiency,"Thank you for re-testing Jayant.; The idea with the hard-coded ceiling (floor?) on linear solver tolerance was to handle examples where it is set to very low values which would not allow this mechanism to work properly... Hummm but I can see the case for using the linear solver tolerance to achieve a fixed number of iterations, and then using an ""acceptable reduction"" to drive the CFL. Alright good idea I'll make it a fifth, optional CFL-adapt parameter with default 0.001 and still take the max between it and the tolerance. Out of curiosity did you manage to check what kind of tolerance seems ""optimum"" for adapted meshes?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020:442,adapt,adapt,442,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020,2,['adapt'],"['adapt', 'adapted']"
Energy Efficiency,"Thank you for replying while busy preparing the High Lift Prediction Workshop 5. Sorry, I didn't clearly understand. From what I understand, I can suggest another energy equation calculating method instead of the current SU2 method(reading calculated TKE from inlet boundary condition and using it as an energy equation). Is that right? If not, could you please explain in more detail?. > @sun5k maybe you can try implementing the alternative I suggested of obtaining turbulence kinetic energy at inlets from the turbulence solver instead of assuming that the free stream value is imposed exactly? In the SWBLI case the SST-m versions (without divergence terms in the stress tensor) seem to underpredict the separation region https://su2code.github.io/vandv/swbli/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1525805374:163,energy,energy,163,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1525805374,6,['energy'],['energy']
Energy Efficiency,"Thank you for your comment. No need to create dummy points for periodic BC is really an ingenious design and when I run RANS/URANS cases, I get good results. But there are still some problems for me, the first is convergence when I run big 3D cases and the second is the periodic BC cannot cooperate with hybrid RANS/LES method. So I thought a dummy layer is sometimes necessary just as in Blazek's book(Computational Fluid Dynamics: Principles and Applications, Second Edition, Page 293). ; ![book](https://github.com/su2code/SU2/assets/58663453/cd5a29ba-4f75-40a0-8530-edfd1523d9b7). One dummy layer need to communicate solution, gradients or maybe Laplacian, sensors and so on. It's still complex so I choose two dummy layers to only communicate solution. As in the picture, the original use the send-recieve pair1 as periodic BCs and this feature need four pairs with a restriction that the outermost four layers should be structured grids. Three more repeated mesh sections are indeed added but it is acceptable in terms of robustness and reducing data communication.; ![pairs](https://github.com/su2code/SU2/assets/58663453/1d7c5005-b704-40a6-88dd-518e09082eea). The above diagram can be set with the following settings:; MARKER_PERIODIC= ( y0.48, y0.04, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.44, 0.0, y0, y0.44, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.44, 0.0 ); PERIODIC_DUMMY= YES. This functionality also requires a pre-processing program for the grid to add the appropriate boundary conditions to the .su2 file. I am currently doing this using a fortran code and trying to replicate it using python scripts. But the changes to the c++ code section have been verified with various RANS/URANS/DES cases and a result of NACA0012 swept wings is listed below.; ![0012](https://github.com/su2code/SU2/assets/58663453/552782e9-e5c3-4a0f-b809-af7fdc7aecfc)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2038#issuecomment-1556503119:662,sensor,sensors,662,https://su2code.github.io,https://github.com/su2code/SU2/pull/2038#issuecomment-1556503119,1,['sensor'],['sensors']
Energy Efficiency,"Thank you, Dr. Economon.; When you say ""Time to merge this one"": Is this an action I should take, or; is it accomplished in the SU2 standard schedule ?. With kind regards,. Jairo. On Fri, Feb 1, 2019 at 1:17 AM Thomas D. Economon <notifications@github.com>; wrote:. > Wonderful! Time to merge this one; >; > ‚Äî; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/600#issuecomment-459600006>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Ac180h3pv-PS55cNp0vxoX8AA717kJyDks5vI7_OgaJpZM4X34F2>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-459704107:141,schedul,schedule,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-459704107,1,['schedul'],['schedule']
Energy Efficiency,"Thank you. I see, so you set separate markers, e.g. MARKER_EULER= ( WingTop, WingBottom ), and where the marker boundaries meet, the mesh points on that interface is unchanged; did I understand that correctly? I guess that while this will reduce the artefacts on the LE/TE it still results in a departure from the design shape at the portions away from the boundary edges. As you mentioned before, there might not be a way to solve this without mapping back to an iges or parametric file. I suppose another approach might be to work the other way around? Perhaps one can limit the max allowable adapted size to match the 'worst case' allowable surface mesh? I just realised that may be a contributing factor to why the points jumpy across the fuselage; `PYADAP_HMAX` may be set excessively large. If I set this limit to less than the average surface mesh cell size, will it attempt to refine everything over the limit instantly? Or will it only use the limit for 'new' cells that are generated during adaptation? Thanks for your thoughts.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764836923:239,reduce,reduce,239,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764836923,3,"['adapt', 'reduce']","['adaptation', 'adapted', 'reduce']"
Energy Efficiency,"Thank you. It does seem to work for the GRAD_FLOW option; however, it still results in the same incorrect results as before for the SUPERSONIC_SHOCK option. Also, when I add ""-c 2"" as a command line argument to mesh_adaptation.py to speed up the process of running multiple adaptation cycles, the simulation will only do a single one then exit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-437553068:274,adapt,adaptation,274,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-437553068,1,['adapt'],['adaptation']
Energy Efficiency,"Thank you.; In the original paper of Menter (Ten Years of Industrial Experience with the SST; Turbulence Model) about the SST2003), it is written that the power of epsilon should be minus 10. I think it is a coincidence.; You are right; changing the production constant limiter may be problematic. It is better to distinguish between these two constants.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2284482267:155,power,power,155,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2284482267,1,['power'],['power']
Energy Efficiency,Thanks @ScottImlay. Seems to work now. Just a quick question. You only adapted the volume mesh/solution routines. Is it also possible to use the new format for the surface files (i.e. in the routines SetTecplotBinary_SurfaceMesh/SetTecplotBinary_SurfaceSolution) ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-425020607:71,adapt,adapted,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-425020607,1,['adapt'],['adapted']
Energy Efficiency,"Thanks @TobiKattmann, nice catch! Can you please put a pull request with the required changes? That way I can also do some tests myself and we can move the discussion there. @economon As far as I know, there is no multizone-multiinstance case running as of now. I think @arubino worked on multizone harmonic-balance, but I don't think it has yet been adapted to the new instance index. Am I right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/568#issuecomment-416935622:351,adapt,adapted,351,https://su2code.github.io,https://github.com/su2code/SU2/issues/568#issuecomment-416935622,1,['adapt'],['adapted']
Energy Efficiency,"Thanks @salvovitale and @talbring. As you know, the main consequence of a better linear solver is that it is possible to increase the CFL number (independently of the spatial discretization). In other words... the benefits are for JST and Roe. By the way, I have found that a fill-in level of 1 is too expensive for 3D problems (great for 2D)... I have reduced the default value from 1 to 0... but feel free to increase the number if you are looking for very large CFL numbers. I think that regression tests are taking too much time and they don't finish on the assigned time... hopefully the change from 1 to 0 fill-in level will resolve the problem, otherwise I'll reduce the time on some of the tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/448#issuecomment-334358362:353,reduce,reduced,353,https://su2code.github.io,https://github.com/su2code/SU2/pull/448#issuecomment-334358362,2,['reduce'],"['reduce', 'reduced']"
Energy Efficiency,"Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. ![Comparison](https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png); ![ComparisonMesh](https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-621450497:229,adapt,adaption,229,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621450497,2,['adapt'],['adaption']
Energy Efficiency,"Thanks Heather,. Could you please take a look at the log_Adjoint.out file generated in the folder DESIGNS/DSN_001/ADJOINT_DRAG/ when you run the single objective-with-multiple-surfaces regression test (in the part whereSU2 specifies the Surface(s) where the force coefficients are evaluated). It seems that the shape optimization python script only copied the first surface to config_CFD.cfg. I found the ""if (n_obj>1):‚Äù solution‚Ä¶ but, you know better the multi objective implementation. Just let me know if there is another more elegant fix that we can implement. Thanks!; Francisco. > On Mar 25, 2018, at 1:55 PM, Heather Kline <notifications@github.com> wrote:; > ; > @hlkline commented on this pull request.; > ; > In SU2_PY/SU2/eval/design.py <https://github.com/su2code/SU2/pull/519#discussion_r176953697>:; > ; > > @@ -364,7 +364,7 @@ def obj_df(dvs,config,state=None):; > # For multiple objectives are evaluated one-by-one rather than combined; > # MARKER_MONITORING should be updated to only include the marker for i_obj; > # For single objectives, multiple markers can be used ; > - config['MARKER_MONITORING'] = marker_monitored[i_obj]; > + if (n_obj>1): config['MARKER_MONITORING'] = marker_monitored[i_obj]; > I think that the array of monitored markers is extended to accommodate this situation in config.py (~line 514), and there is a single objective-with-multiple-surfaces regression test; do you have a case you can send me where this wasn't working? Or if you see an issue with that test that I previously missed I wouldn't mind looking into it.; > ; > ‚Äî; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/519#pullrequestreview-106743204>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AccuRva3VNHDjv7H11VnmorjY5pCNlpkks5tiARDgaJpZM4S4O1W>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-376016690:1249,monitor,monitored,1249,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-376016690,1,['monitor'],['monitored']
Energy Efficiency,"Thanks Max that sounds very promising indeed. To everyone else, a quick update on the issue of performance vs. MKL.; I played a bit with @vdweide 's case and it does not seem trivial to get those 10% of performance back, at least not without a lot of restructuring.; I did however measure the performance of native gemm in Eigen to be ""only"" 2.5 times worse than MKL, after some emails we determined that this was because with the Intel compiler Eigen was not using AVX instructions but with g++ those instructions could be enabled by setting the -march flag appropriately. So far the conclusions are:; - Get 0% to 10% performance loss if you are using MKL (one could always bypass Eigen and call mkl directly).; - Write clean code compatible with AD and that will perform better than most easy implementations.; - Eventually get better performance of the discrete adjoint via the more efficient differentiation of operations with matrix-like objects.; - Have an extra dependency that does not need to be compiled.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-463591821:886,efficient,efficient,886,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-463591821,1,['efficient'],['efficient']
Energy Efficiency,"Thanks Tim!; Tom, I have not found any easy (and repeatable) way to reduce the BOOST header files further. Unless it is a major problem, I suggest we go with them as they are.; Thanks!Scott Imlay; On Monday, August 13, 2018, 1:56:19 PM PDT, Tim Albring <notifications@github.com> wrote: ; ; ; Like @economon already said, this is a interesting and useful contribution! Thanks!. I don't know why travis is not reporting. I am gonna look into it tmrw. ‚Äî; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-412665869:68,reduce,reduce,68,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-412665869,1,['reduce'],['reduce']
Energy Efficiency,"Thanks Tom, actually most of the work was already done in September, lately I've been busy with other stuff and that's why it took so long before this pull request. Regarding the upcoming release of the sliding meshes, before the AIAA, we can surely think about including this one too. ; It still has some limitations, for instance it doesn't work with periodic boundaries, though Antonio and I are working on it in separate branches, but I've tested it for a bunch of different flow configurations and it seems to be quite robust.; Basically, after this pull request the code will be able to carry out computations using an arbitrary number of zones, both Euler/RANS, serial/parallel, using the nearest neighbour approach and the one from Rinaldi. By the way, it doesn't really matter to me if this feature is included in the upcoming release or in the one later, I just would like to have this on the develop so that I don't have to merge and fix conflicts any time the branch gets updated.; So some of the modification I made will be stable and I can move to the next step (the adaptive sliding meshes).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/389#issuecomment-301007972:1081,adapt,adaptive,1081,https://su2code.github.io,https://github.com/su2code/SU2/pull/389#issuecomment-301007972,1,['adapt'],['adaptive']
Energy Efficiency,"Thanks Tom. And, as mentioned before, let‚Äôs have a bit of a discussion as to which wall functions formulations would make most sense to implement. I am pretty sure that we can create a generic implementation that can then be used for standard wall functions, but also for adaptive wall functions (see Medic, G., Kalitzin, G., et al., ‚ÄúAdaptive Wall Functions with Applications‚Äù, 2006), and even compressible/incompressible formulations. The adaptive wall function trick is quite useful as it makes the wall function implementation more robust to the varying y+ of the first cell of the surface of the geometry and lessens the burden during the grid generation stage. Formulations for S-A and k-w/SST are available. If anyone else is interested in participating, please let us know. Best,. Juan. On Jun 8, 2017, at 5:11 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi all,. Yes, it would be wonderful to get this feature completed. I had started this a couple of years ago, but never quite got around to finishing (too many fun things to work on!). I was following this paper, which should be a straightforward implementation for us, as FUN3D has a very similar structure:. Jan-Renee Carlson, Veer Vatsa, and Jeffery A. White. ""Node-Centered Wall Function Models for the Unstructured FLow Code Fun3D"", 22nd AIAA Computational Fluid Dynamics Conference, AIAA AVIATION Forum, AIAA 2015-2758, https://doi.org/10.2514/6.2015-2758. The key changes can be found in the following locations:. * CNSSolver::Compute_Wall_Functions_Mean() routine in solver_direct_mean.cpp - computes and stores an updated wall shear stress based on the chosen wall model; * CTurbSASolver::Compute_Wall_Functions() routine in solver_direct_turbulent.cpp - computes the eddy visc/nu tilde needed near the wall based on the model; * CNumerics::GetViscousProjFlux() in numerics_structure.cpp - computes the viscous flux between two nodes and will make an adjustment near the wall when th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-307262047:272,adapt,adaptive,272,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-307262047,3,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Energy Efficiency,"Thanks Tom; I agree that we should make things easy to understand. ; My thinking was that most users will want to know what parts of the mesh they are moving, but don't necessarily need to know what's happening underneath - if they specify the entire mesh the code just reverts to the more efficient method. But (from the users perspective) it may be just as easy to have a separate specification for scaling the entire mesh. . In terms of moving it to SU2_MSH; I think it may make sense to include scale/rotate/translate in SU2_MSH, but I think it would be confusing to have two options that do the same thing. I would side with separate option names (this would also eliminate a loop over markers in this pull request). On this topic, I have sometimes found MARKER_DESIGNING and DV_MARKER to be confusing; on their own they sound very similar, in the description MARKER_DESIGNING is where the objective function is evaluated - but in the code, it's not clear what MARKER_DESIGNING does - the surfaces specified by MARKER_MONITORING are what are actually used to evaluate the objective function value. . There may be other similar areas where config file options could be clarified or compressed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-132181536:290,efficient,efficient,290,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-132181536,2,['efficient'],['efficient']
Energy Efficiency,"Thanks a lot for the comments, Heather. As you said, it seems that the deconstructers LinsysSol.~CSysVector() and StiffMatrix.~CSysMatrix() weren't doing their job. I believe that the problem was not only with the two vectors LinsysSol and LinSysRes, which as you say may be constructed using a 'new' statement. In the case of the StiffMatrix, there is a major difference between calling the constructor of CSysMatrix by using 'new', and calling the StiffMatrix.Initialize() method, for what I see in matrix_structure.cpp. Also, StiffMatrix is a sparse matrix (nDim x nPoint) x (nDim x nPoint), which must be allocated correctly using the Initialize method to avoid carrying around lots of zeros. With regards to the other point, I think that it is interesting to use the Initialize features of the CSysVector and CSysMatrix in the constructor of the class, just as it happens in the rest of the solver classes (see for example solver_direct_mean, line 261, where the Jacobian of the problem is initialized using a Jacobian.Initialize() call in the constructor). As far as I see it, the mesh update problem is nothing but a copy of the linear elasticity problem, so maintaining the parallelism with all the other solvers in the code (and, in particular, with the structural solver) may be interesting. . Moreover, by allocating the memory in the constructor using StiffMatrix.Initialize(nPoint, nPointDomain...) we make sure we can use the linear solvers in parallel by building a compliant sparse matrix. And if we allocate the stiffness matrix in the constructor, it makes sense to also do so with the vectors of the problem. Again, this maintains the similarities with the rest of the solvers. Finally, in my particular case I call the SetVolume_Deformation() function at least as many times as I do with the fluid and the structural solver. The mesh deformation is a third field in the problem, and by initializing the structure at the beginning of the simulation we can reuse the same spaces in m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-148017482:609,allocate,allocated,609,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-148017482,1,['allocate'],['allocated']
Energy Efficiency,"Thanks for all of the activity here y'all. I am in favor of us fixing 1 & 2 in @arubino's note above so that we are fixing all of the immediate issues. I am going to start taking a look. In a new PR, we should add some checks to Travis CI that check for the existence of output files or diff output files against versions that we store. We already have a mechanism for doing those diffs, so all we need is someone to lead the charge. Any volunteers to work on that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/344#issuecomment-267427951:426,charge,charge,426,https://su2code.github.io,https://github.com/su2code/SU2/pull/344#issuecomment-267427951,1,['charge'],['charge']
Energy Efficiency,"Thanks for digging around on this @clarkpede. I don't expect the original author will be able to chime in, but I would say we can investigate the differences w.r.t. how the tke is included. . I have tested removing it from the total energy definition for some low speed cases while I was debugging, and it had almost no impact. As stated above, we know that including in the mean flow stress tensor does noticeably impact the solution. I have not tried including it in the energy equation. I will reopen this issue, and we can continue the discussion here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-548890892:233,energy,energy,233,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-548890892,2,['energy'],['energy']
Energy Efficiency,"Thanks for reporting this, @emoralest6. My first suggestion is that we go through the mean flow solver and double-check our inclusion of the -2/3*rho*k term from the stress tensor (and TKE correction for energy) to make sure we do not have a bug there (see https://turbmodels.larc.nasa.gov/sst.html). This is one of the primary differences between the SA and SST implementations and would affect pressure. Could be a good place to start.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-539577259:204,energy,energy,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-539577259,1,['energy'],['energy']
Energy Efficiency,Thanks for testing. Both gradient methods use all the neighboring points. Green Gauss has special treatment for boundary surfaces and it must be particularly less accurate than least squares at these points.; With that said the way we handle intersecting boundaries is very important. For this case https://su2code.github.io/vandv/swbli/ I had to add an Euler wall after the inlet to prevent the kind of issues you are seeing.; My concern is that making things locally first order is just masking the problem with numerical dissipation.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2285#issuecomment-2127331419:74,Green,Green,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/2285#issuecomment-2127331419,1,['Green'],['Green']
Energy Efficiency,"Thanks for the clarification clarkpede. One of the things I had tried when I first ran into that warning after looking at the code was to create a coarse grid with fewer than 1000 elements (just in case the sensor value was extremely large for a single element for some reason, then it should‚Äôve at least marked that one for adaptation). However, it still output the same results and warning message. I‚Äôm not exactly sure how the adaptation index is calculated for the SUPERSONIC_SHOCK or GRAD_FLOW, but is it possible that these values could be negative, causing the sensor value to always be below the threshold value?. I haven‚Äôt been able to find any examples using the mesh adaptation, so I may be missing an additional parameter from the configuration file. Thanks for any additional help,; Alex",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-435625964:207,sensor,sensor,207,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-435625964,5,"['adapt', 'sensor']","['adaptation', 'sensor']"
Energy Efficiency,"Thanks for the comments, Tom! I understand it's a big change, so I would welcome some more feedback! . I am working in other ways to improve the generalization/sustainability of the code, so any comments would also be considered for that stage :D",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528#issuecomment-388799884:160,sustainab,sustainability,160,https://su2code.github.io,https://github.com/su2code/SU2/pull/528#issuecomment-388799884,2,['sustainab'],['sustainability']
Energy Efficiency,"Thanks for the explanation @suargi . I would personally advocate for that the testcases should converge to some reasonable solution people might use it as a starting point (copy the cfg and doing mild adaptions) for their own stuff. And the Testcases show off the capabilities to some degree, to do so, convergence is beneficial. But as we have a bunch of working 2D airfoils in regression already I recon that adding a clear explanation and warning to the cfg as suggested by Pedro is fine. Otherwise you might try to bisect the AoA ... maybe there is a value that triggers negative SA and does not diverge :thinking: . Knowingly adding a diverging test without a clear warning is not good imo :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083:201,adapt,adaptions,201,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083,2,['adapt'],['adaptions']
Energy Efficiency,"Thanks for the feedback @pcarruscag. @jayantmukho and I discussed this when we implemented the objective function. The main motivation was that since our implementation of the separation sensor is computed using the skin friction coefficient, we only defined the variables Buffet_Sensor, Buffet_Metric, etc. for the NSSolver class. Since the NSSolver needs to be able to evaluate all the same objectives as the EulerSolver, but the buffet objective is exclusive to the NSSolver, I copy pasted the function and added the new objective. Let me know if you have any suggestions for a cleaner implementation. We were basically choosing between defining all the Buffet_* variables in EulerSolver which would just add unnecessary variables to the constantly growing list of variables, or copying EvaluateObj_Func to allow for NS-specific objectives.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/614#issuecomment-441300657:187,sensor,sensor,187,https://su2code.github.io,https://github.com/su2code/SU2/pull/614#issuecomment-441300657,2,['sensor'],['sensor']
Energy Efficiency,"Thanks for the hint, just uploaded a screenshot of the mesh adaption!; Now I'm trying to run a simple 3D case, but unfortunately the amg.out fails during the first try (in the adap/ini folder):; ```; ## 16739 TRIANGLE(S) DISCARDED ; fefloa_Python2Mesh : 3d mesh on input ; fefloa_Python2Mesh : msh->NbrVer 14368 ; fefloa_Python2Mesh : msh->NbrTet 58189 ; fefloa_Python2Mesh : leaving with 14368 ver. 16740 tri. 0 edg. ; -- Maximal memory ; Maximum number of Points 53800000 ; Maximun number of Bnd Points 10760000; Maximum number of Triangles 21520000 ; Maximum number of Tetrahedra 295900000 ; Allocated Memory 50.105 Gb ; Physical Memory 62.729 Gb; bounding box x: -100 200 y: -150 150 z: -150 150 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ¬∑¬∑¬∑; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN IN",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-623572280:60,adapt,adaption,60,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280,3,"['Allocate', 'adapt']","['Allocated', 'adaption']"
Energy Efficiency,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619502763:171,adapt,adaption,171,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763,7,['adapt'],"['adapt', 'adaption']"
Energy Efficiency,"Thanks for your comments! Except for mixing plane and frozen rotor, sliding plane is also pretty common in turbomachinery simulation, it is indeed implemented in some, if not all, in-house codes. ; MRF is quite useful in turbomachinery simulation, expecially when we deal with transient simulation. Actually it is really rare to move the rotor mesh like in reality. One reason is that MRF is more efficient and accurate. Otherwise, you introduce new disturbance into the transient flow field every physical time step, which is not good. Because when you rotate the mesh, the velocity direction of each grid point inherited from last time step is not rotated. To make it more clear, you will have a flow going towards casing instead of parallel to, at the start of next physical time step. So you need more pseudo time steps to get a proper velocity variable. As a result, you get a zig-zag shape in the residual history.; I'm not actually moving the interface. The rotor mesh is not rotated, so as the interface at rotor zone. I'm just virtually rotating the rotor interface to find the new matching points between rotor and stator for each physical time step, so that the variable could be passed across the interface. In other words, only the passing variables are actually rotated. If I understand it correctly, there is no additional moving mesh restriction introduced here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1953783506:397,efficient,efficient,397,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1953783506,2,['efficient'],['efficient']
Energy Efficiency,"Thanks for your comments. For a 27 million case ran on 72 cores, the backup time without modification was 1828 seconds (approx 30 minutes). After this fix, the backup time reduced to 366 seconds (approx 6 minutes). The file size was around 4.3 GB. In my opinion, occasional ""endl"" is not required, since the file is closed after the writes. A file close will any way force all the writes to be flushed. . Please give your thoughts on this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/281#issuecomment-223494129:172,reduce,reduced,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/281#issuecomment-223494129,1,['reduce'],['reduced']
Energy Efficiency,"Thanks for your feedback! I agree, `OMP_NUM_THREADS` is better than having the number of threads in the constructor. I adapted `disc_adj_flow` and `disc_adj_fea` for MPI and added both to parallel AD and hybrid AD tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1472198978:119,adapt,adapted,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1472198978,2,['adapt'],['adapted']
Energy Efficiency,"Thanks, @clarkpede, for this PR and for the clear explanation of the features proposed. LGTM in terms of implementation and code style. I'll just wait for @EduardoMolina to comment on the contents. I only have a couple of minor questions:. > I moved the calculation of the maximum cell width to the CPhysicalGeometry class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver. I can see this approach reduces the computational cost of computing the MaxLength every time at the cost of having one more double in memory per point. However, would a call to SetMaxLength() be necessary in case of deformable meshes? . Also, from PR #532:; > As for code verification, I would propose using one of the cases examined by Travin, Stretlets, Mockett, or Xiao for comparison. (...) The cases I can see where they explicitly show the results of the blending function are: Circular cylinder at Re = 50,000 (Travin et al. 2002) (...). I guess this is the case for which you are showing the rough tests results in the Code Verification section. I am currently looking into some test cases at similar Re regimes. Are you using the unsteady compressible solver for this verification? I noticed that in Ref.[1] they use artificial compressibility, and I was wondering if we could also use this test case to look into the unsteady, incompressible (preconditioned) version of the solver (PR #514).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-403842613:546,reduce,reduces,546,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-403842613,2,['reduce'],['reduces']
Energy Efficiency,"Thanks, Edwin. I had originally toyed around with this too, but I thought using the system-specific versions would be most portable at first. However, for something this simple, I agree that we should just do it ourselves. I have reused your implementation with some minor modifications. Could you please just confirm that the code posted above is yours, you are ok with me adapting it, and that I can name you as an author at the top of the file (I have added you there)?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562#issuecomment-414092502:374,adapt,adapting,374,https://su2code.github.io,https://github.com/su2code/SU2/pull/562#issuecomment-414092502,2,['adapt'],['adapting']
Energy Efficiency,"Thanks, that was very helpful. . I have another question related to this., Would you suggest keeping all the control points as design variables or should the number of design variables be very selective to ensure that correct optimization direction is achieved? I have 216 control points on my FFD box, I can reduce them if I put in some extra effort in indexing them. Is it worth it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/984#issuecomment-628725910:309,reduce,reduce,309,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628725910,1,['reduce'],['reduce']
Energy Efficiency,"That is what imagine as well, i.e. very anxious waiting, some cpu might see that as a ""power virus"" and eventually slow down.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241#issuecomment-804783119:87,power,power,87,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241#issuecomment-804783119,1,['power'],['power']
Energy Efficiency,"That's great! At least it gives us some margin to solve this issue. I agree that we should try to reduce the time of the tests. I think that @talbring approach a few months ago of reducing the number of iterations was the correct one; the tests don't need to be physically meaningful, but rather technically representative of the features. The compile time is also something that we should look into - we might need to have a telecom on this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/524#issuecomment-382299662:98,reduce,reduce,98,https://su2code.github.io,https://github.com/su2code/SU2/issues/524#issuecomment-382299662,1,['reduce'],['reduce']
Energy Efficiency,"The added lines are a combination of the explicit Euler in CHeatSolver and the implicit Euler in CScalarSolver. Do you consider this approach to be correct?. For the testcase `SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg`, explicit Euler for both flow and turbulence equations and CFL=0.1 converges from the restart solution. Some more details:; - `CHeatSolver` does something with `CVariable::Res_TruncError`, which is related to multigrid. Maybe additional adaptations are necessary here.; - `PrepareExplicitIteration` was copied from `PrepareImplicitIteration`, except for the computation of the matrix of the linear system. We can remove duplicate code here.; - `CompleteImplicitIteration` could be renamed as ""add `LinSysSol` to solution""; .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1435#issuecomment-966491089:464,adapt,adaptations,464,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435#issuecomment-966491089,1,['adapt'],['adaptations']
Energy Efficiency,"The changes to SU2 are mostly minor. There are some adaptions regarding external functions, due to interface changes from CoDiPack 1 to CoDiPack 2. The `callPrimalFuncWithADType` is necessary for correct output handling. Passing the external function to it is the intended usage, therefore the encapsulation of the respective code block in a lambda expression. `callPrimalFuncWithADType` also takes care of the tape activity, which was previously spelled out in SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1903#issuecomment-1451814899:52,adapt,adaptions,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/1903#issuecomment-1451814899,1,['adapt'],['adaptions']
Energy Efficiency,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619412341:742,sensor,sensor,742,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341,4,"['adapt', 'sensor']","['adaptation', 'sensor']"
Energy Efficiency,"The current SU2 implementation checks if the array of variables contains the velocity and gives the index to the gradient calculator. You can give the gradient calculator the starting index and ending index as well.. So suppose you have an array of M variables, you could split it into 2 arrays, each containing a velocity vector, so array [0,..,N] and array [N+1,..,M], and you call greengauss twice.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2285#issuecomment-2130316902:384,green,greengauss,384,https://su2code.github.io,https://github.com/su2code/SU2/issues/2285#issuecomment-2130316902,1,['green'],['greengauss']
Energy Efficiency,"The forces_breakdown file gives you the \*cough\* breakdown per surface, the monitored value is just an indication of convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/788#issuecomment-528745746:77,monitor,monitored,77,https://su2code.github.io,https://github.com/su2code/SU2/issues/788#issuecomment-528745746,1,['monitor'],['monitored']
Energy Efficiency,"The function call with the invalid write seems to be before any of the periodic preprocessing, unless I missed something. Are you using an exchange location/donor nodes similar to what Eduardo talked about in his SU2 conference talk (like using info from the third off-wall node)? If not, ignore the following. I saw a similar issue when I used a similar exchange location implementation for SST wall functions. The problem I saw is that sometimes there's one-way communication between the processor with the exchange location and the processor where the wall function/model is being computed. This doesn't work well with how send-receive boundaries are allocated, because literally everywhere in the code assumes nMarkerSend==nMarkerRecv. . I fixed this on one of my branches for both flow and adjoint, so I can try to port it to develop if you think this might be the issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1099#issuecomment-719056946:654,allocate,allocated,654,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099#issuecomment-719056946,1,['allocate'],['allocated']
Energy Efficiency,"The intention was to allow CSysVector to be used like in a local way without mpi, because now it provides nice math syntax, (a+b-2*(c-a)) in an efficient way... But of course hell is full of good intentions and I guess if you have a disjoint domain, for example two things that do not touch, it is possible for that condition to evaluate differently on different ranks.; I'll remove it, thanks for the PI work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241#issuecomment-804258186:144,efficient,efficient,144,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241#issuecomment-804258186,1,['efficient'],['efficient']
Energy Efficiency,"The jones_turbocharger_restart case was set to use adaptive CFL coupled with CFL turbulence Reduction thus changes in the results are expected , I ran the case a few thousand steps and the case seems to converge. Therefore I am allowing myself to change test results leaving the configuration setting as is.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2185970973:51,adapt,adaptive,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2185970973,1,['adapt'],['adaptive']
Energy Efficiency,"The native mesh adaption was deprecated. The amg interface is in development, you can re-open some of the issues where it is mentioned to ask new questions (that way all ""documentation"" stays in one place).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143#issuecomment-751685783:16,adapt,adaption,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143#issuecomment-751685783,1,['adapt'],['adaption']
Energy Efficiency,"The symmetry implementation uses a numerics class to evaluate fluxes.; For upwind schemes this class is the same as the one used for internal points (but first order).; For central schemes this class is Roe, and so there is a mismatch, which maybe causes these issues.; Have you tried running the 3D slice with periodic conditions rather than symmetry?. IDK why JST was not used for boundaries, I do remember @economon mentioning it had been like that for a very long time.; Using JST for boundaries would require more than just replacing the class, because it requires terms (sensors and laplacians) that are not used by upwind schemes.; Recently there were also talks, between @TobiKattmann and @fmpmorgado of an implementation of symmetry that is independent of numerical schemes (in PR #1168).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1280#issuecomment-834411909:577,sensor,sensors,577,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-834411909,1,['sensor'],['sensors']
Energy Efficiency,"The work item from #789 being worked on at the moment is **colour-based parallel residual loops (at this point we have hybrid parallel!).**; As was done for the FEA solver one numerics instance per thread is required since to use these classes one needs to write data onto them. Similarly we need thread-private copies of the small structures we then write to the residual and Jacobian, these are currently allocated by the solver.; Possible solutions:; - Allocate local temporaries in each edge loop;; - The solver allocates an array of these instead of just one for each thread to use;; - The ownership is transferred into the numerics (as currently done by the FEA classes). I am going with the third option, the solver will call `ComputeResidual` as usual but instead of passing in one array and two small matrices, it will get references to the internally (to CNumerics) allocated ones.; **As part of this I will restructure the CNumerics family**, applying the same cleanups that we have been doing for other classes. No significant code changes are planned.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/824#issuecomment-578308297:407,allocate,allocated,407,https://su2code.github.io,https://github.com/su2code/SU2/pull/824#issuecomment-578308297,4,"['Allocate', 'allocate']","['Allocate', 'allocated', 'allocates']"
Energy Efficiency,"The z coordinate is not allocated for 3D, so you are either reading out of bounds or reading the x or y value from somewhere else.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2405810510:24,allocate,allocated,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2405810510,1,['allocate'],['allocated']
Energy Efficiency,"There are some post-processing steps involved, so I think it would be a good idea for me to include an example. . The features in this PR are one step to a bigger projection-based ROM process. The code for the bigger process is in feature_MOR, and will take some time for me to prepare the code from ""make it work"" to ""actually good code"". . However, this feature-PR can be used by itself by anyone who wants to efficiently compute the POD of SU2 simulation data, and then use the POD for other modeling strategies.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1310#issuecomment-870282236:412,efficient,efficiently,412,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310#issuecomment-870282236,1,['efficient'],['efficiently']
Energy Efficiency,"There are some tricks possible to add the `<<` operator. Not all the code base needs refactoring. We can have both styles for the future as `()` syntax is very powerful thanks to fmtlib. . ```cpp; cout << ""Values at node<< nodeId << "" are "" << val[0] << "" "" << val[1] << "" "" << val[3] << endl;; ```. can be transformed directly to . ```cpp; LOG(""Values at node {} are {}"",nodeId,val);; ```. Equivalently . ```cpp; LOG << fmt::format(""Values at node {} are {}"",nodeId,val); ; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991#issuecomment-1488340098:160,power,powerful,160,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991#issuecomment-1488340098,1,['power'],['powerful']
Energy Efficiency,"There are two sources for those, `atomicAdd` which is used in dot products with CSysVectors (so it affects the linear solvers). And in the NK solver to compute the norm of the solution.; The other less obvious source is SU2_OMP_CRITICAL, critical sections do not have a guaranteed ordering. We use these to compute the RMS residuals, and those influence the CFL adaptation.; AFAIK the only way around this is to store the result of each thread into a vector visible by all threads, and then have a single thread compute the total.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2340842669:362,adapt,adaptation,362,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2340842669,1,['adapt'],['adaptation']
Energy Efficiency,There is no doubt in the fact that we need a better documentation. My idea was to have sections where we at least describe the basic settings (like the one I already started https://su2code.github.io/docs/Solver-Setup/) which are common to all solvers. Furthermore short paragraphs on each individual solver (including a brief theory). . Basic things could include:; - Markers and Boundary Conditions; - Monitoring Coefficients; - Defining the numerical methods. Please lets not start a big discussion on that. Lets rather invest that time in actually doing it.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/775#issuecomment-540443125:404,Monitor,Monitoring,404,https://su2code.github.io,https://github.com/su2code/SU2/issues/775#issuecomment-540443125,1,['Monitor'],['Monitoring']
Energy Efficiency,"There is one case that has different residuals, the Jones turbocharger case. The other case is a know problem that is fixed in another PR. ; So you should check if this case uses adaptive CFL and CFL_REDUCTION_TURB, because that is when the residuals could be different. Please also check if it still converges, because it looks like it 's not. So maybe it needs another CFL number?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2181198847:179,adapt,adaptive,179,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2181198847,1,['adapt'],['adaptive']
Energy Efficiency,This branch was green just a couple of day ago https://github.com/su2code/SU2/actions/runs/8264374345,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-1999360803:16,green,green,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-1999360803,1,['green'],['green']
Energy Efficiency,This has been implemented with the new CFL adaptation.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/92#issuecomment-101393482:43,adapt,adaptation,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/92#issuecomment-101393482,1,['adapt'],['adaptation']
Energy Efficiency,"This has the green light to be merged for me. Taking off the WIP tag. @MicK7 : I have added an error message if a user tries to use a multizone CGNS file for now. It is still possible to run multizone problems by using a separate CGNS single zone file for each zone. Reading multizone CGNS would be a new capability anyway, so I think we should take it out of the critical path and see if we can get it working separately together in the next couple of weeks. That way, we can proceed with merging this and other PRs in the backlog.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-526775115:13,green,green,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-526775115,1,['green'],['green']
Energy Efficiency,"This is simply the way how the cmd.exe shell works on Windows - file and folder names containing spaces or special characters must be quoted into `""` to be handled correctly.; The title says it all - *to make them [executables] run*. The patch prepends one `""` and appends one `""` to the command name. This could be refactored further to reduce repetition much more by putting the different executable file names into a map and have a single place to combine quote + executable + quote.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/332#issuecomment-321264218:338,reduce,reduce,338,https://su2code.github.io,https://github.com/su2code/SU2/pull/332#issuecomment-321264218,2,['reduce'],['reduce']
Energy Efficiency,This issue has been closed because the CFL adaptation format has changed.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/8#issuecomment-101391478:43,adapt,adaptation,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/8#issuecomment-101391478,1,['adapt'],['adaptation']
Energy Efficiency,"This may be relevant, and it may not be. Is there a reason that the molecular and turbulent diffusion of turbulent kinetic energy is not included in the total energy terms? I'm talking about terms like:. ![molecular and turbulent diffusion of tke](https://latex.codecogs.com/gif.latex?\left(&space;\mu&space;&plus;&space;\frac{\mu_t}{\sigma_k}\right)\frac{\partial&space;k}{\partial&space;x_j}). This term is listed both in Wilcox's ""Turbulence Modeling for CFD"" book and the [NASA TMR website](https://turbmodels.larc.nasa.gov/implementrans.html). NASA's page basically just copies what Wilcox states, and then says ""This expression in the energy equation is also sometimes neglected."". Rumsey clarified his position in a [2009 report](https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20090015399.pdf), saying that ""when considering high Mach number compressible boundary layer flows using k-omega models, the conservation of total energy should be configured to include the contribution of the turbulent kinetic energy k... It is sometimes common practice to ignore these effects, which is certainly justified when k is signficantly smaller than the square of the mean velocity."" . But he also states: ""Note that in CFL3D, the turbulence models are decoupled from the mean flow equations, k is *not* included in the definition of the total energy, and the diffusion of k does not appear in the mean flow energy equation for its models tested here."" He also omitted the 2/3 \rho k term in both the production and the turbulent stress tensor, and found that it made little difference even for M=10 wall-bounded flows. SU2's version of SST is in a weird spot right now, where it's using the turbulent kinetic energy in some places but not others. It's using it here:. + Total energy definition; + Production of turbulent kinetic energy; + RANS evolution equations; + Eddy viscosity definition. But not here:. + Molecular and turbulent diffusion of turbulent kinetic energy in the total energy cons",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-548886007:123,energy,energy,123,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-548886007,10,['energy'],['energy']
Energy Efficiency,"This one is all set after a little more cleanup. I left some low-level changes to the EoS models for later. @CatarinaGarbacz @MarcoFossati : we can use a simple directory name, as you suggest. Let's just go with fluid/ since we also treat liquids with the incompressible solver. Bonus: adds a rotating frame calculation test and some extra error checks on CFL adapt params that should help avoid unreported problems with old configs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715:360,adapt,adapt,360,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715,2,['adapt'],['adapt']
Energy Efficiency,"This pull request **introduces 1 alert** when merging 121eb50e411e8c17d5f87be06b2229b1aba50972 into 73538a1d9cf18f0f75a5f36f8f1740fca8d5fc62 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b9e82ee867031b54ceb61a9f35f25eedb9881691). **new alerts:**. * 1 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ‚èª completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1330538080:553,power,powers,553,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1330538080,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 1 alert** when merging 1a40d51afd58dd01d28189e06c9337010d850af9 into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-2c1e66c7efa9c1831a08f88abe26c40f24e9a73a). **new alerts:**. * 1 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ‚èª completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1325335882:553,power,powers,553,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1325335882,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 1 alert** when merging 344abacdc6fcfa7d59422b8f9259b5fcac90b8fe into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-6cf2b294fb313fcb164ea78f5eb2e646af617e63). **new alerts:**. * 1 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ‚èª completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1324245971:553,power,powers,553,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1324245971,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 1 alert** when merging 60959597c9b9d75f8011d99edffdc408d0ba3209 into 9a4cf77d9700b9d829063a37a1243e2090875d8d - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-7550880d1deca38f4bb990d519bc660f2a6fe3d7). **new alerts:**. * 1 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ‚èª completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1336486906:553,power,powers,553,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1336486906,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 1 alert** when merging a5e299d22c7bcc239cffabc7578ba52c2d8292ae into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-d693ff6efa13c303374af0abf61643a83f9a97e1). **new alerts:**. * 1 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ‚èª completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1323974895:553,power,powers,553,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1323974895,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 1 alert** when merging a90a2316914b9035e9955f2749a7d673aa44b2d0 into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-dacbb9c48d85fcdde321d014742fe164b4395ec1). **new alerts:**. * 1 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ‚èª completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1328383726:553,power,powers,553,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1328383726,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 2 alerts** when merging 054a8ff9443814b08fdae1d342537f549b341adf into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-3f2c21dc8e025cb184f3cbffacd7c381240166c8). **new alerts:**. * 1 for Resource not released in destructor; * 1 for &#39;new\[\]&#39; array freed with &#39;delete&#39;; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ‚èª completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1327391844:615,power,powers,615,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1327391844,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 3 alerts** when merging 112876da64657676a5ed1c2a2f3a60e934f59009 into 7132d99e9e794094b5c2b924605f0b1878ac21e2 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-2065e18ac397dee2095cde4b9803eb2ac7ed0f24). **new alerts:**. * 3 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ‚èª completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1320293517:554,power,powers,554,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1320293517,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 3 alerts** when merging 68d02ae7036ef8fa5d93cfb6a6bc47aa9a280d4d into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-2b8463d2021093ad8df647efad7bad326bf747c0). **new alerts:**. * 3 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ‚èª completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1324980995:554,power,powers,554,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1324980995,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 3 alerts** when merging 76194ecc4154ee6569a3420178c5af801478bfc9 into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-191cf6312035d882b6401e801a28795ee4fdf29d). **new alerts:**. * 3 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ‚èª completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1323956735:554,power,powers,554,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1323956735,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 3 alerts** when merging e8a3a93e987c38e54e98b86c9f35d4830d3c90c9 into 7132d99e9e794094b5c2b924605f0b1878ac21e2 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-5ddd88c68209cfb42bcdbc0bf86607c797da5b41). **new alerts:**. * 3 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ‚èª completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1321937614:554,power,powers,554,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1321937614,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 4 alerts** when merging 0a565343307aa6a5a7f012f2779cf5c02ad4e8b7 into 7132d99e9e794094b5c2b924605f0b1878ac21e2 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-1bd2fb9a693c7ffb539f7915b7c52929af869e36). **new alerts:**. * 2 for Resource not released in destructor; * 2 for &#39;new&#39; object freed with &#39;delete\[\]&#39;; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ‚èª completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1322389470:616,power,powers,616,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1322389470,1,['power'],['powers']
Energy Efficiency,"Those two cases are not part of the regression suite, and so they were probably not updated as some of the options were renamed.; You can have a look at the other turbomachinery examples (at least two of them are part of the regressions) it should be simple to adapt those options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1086#issuecomment-706417999:261,adapt,adapt,261,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086#issuecomment-706417999,2,['adapt'],['adapt']
Energy Efficiency,"Tobi,. We have asked all presenters for slides on Sunday. We will link them to the agenda in the SU2 main web pages shortly after we receive them and you should be able to see them on Monday morning (your morning) and have a few hours to review them before the actual meeting starts at 8 am Pacific / 5pm in Germany. Best wishes,. Juan. On Dec 15, 2017, at 1:48 AM, TobiKattmann <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @economon<https://github.com/economon> ,. I would like to take a quick glance on the presented slides in advance. I always find it easier to follow when I already know whats coming my way. I know that slides are often finished the exact second before the presentation but maybe I am lucky. Also considering that it is quite late here in Germany and the concentration level might drop a little, although you scheduled the Conference quite ""Europe-friendly"" :). Thanks already,; Tobi. ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/470#issuecomment-351961812>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxFNRIn3cnh34ZYSaHSuUE72mZK7fks5tAkBngaJpZM4QVjsL>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/470#issuecomment-352088919:857,schedul,scheduled,857,https://su2code.github.io,https://github.com/su2code/SU2/issues/470#issuecomment-352088919,1,['schedul'],['scheduled']
Energy Efficiency,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:113,adapt,adapted,113,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996,4,['adapt'],['adapted']
Energy Efficiency,"Tom, thank you for improving this one.; This sounds cool, I was really looking for an easy way to customize the output to plot, for instance, the entropy field or the mass flow for turbomachinery applications. ; Is this meant to remain hard-coded or are you planning to introduce new options to specify the output from the config file?. I see reg tests failing due to travis time out (I believe we have 50 minutes for each python script). I also experienced that issue before and I had to turn down a couple of check I wanted to add for sliding meshes. We need to think about reorganising reg test to reduce or shorten them without loosing control on code features.; Otherwise we could consider switching to travis.com but I believe we'll have to pay for that. looks good to me by the way. . Ciao!; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-259085483:601,reduce,reduce,601,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-259085483,1,['reduce'],['reduce']
Energy Efficiency,"Tom,. The endian test I got from http://cs-fundamentals.com/tech-interview/c/c-program-to-check-little-and-big-endian-architecture.php. The byte swapping function is mine and I am OK with you adapting it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562#issuecomment-414104646:192,adapt,adapting,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/562#issuecomment-414104646,1,['adapt'],['adapting']
Energy Efficiency,"UCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link current files; ; config_cfd = copy.deepcopy(config); for opt in adap_options:; config_cfd.pop(opt, None); config_cfd.LOW_MEMORY_OUTPUT = ""NO""; ; config_cfd.WRT_BINARY_RESTART = ""NO""; #config_cfd.R",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:3796,adapt,adaptation,3796,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,2,"['adapt', 'sensor']","['adaptation', 'sensor']"
Energy Efficiency,"Unfortunately, this doxygen documentation is quite old (based on version 3.0). In the meantime this Joule heating source implementation was removed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/230#issuecomment-172230573:100,Joule,Joule,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/230#issuecomment-172230573,1,['Joule'],['Joule']
Energy Efficiency,Update to my comment above ~~But Nemo does not implement its own BC_Sym_Plane and uses the standard FVM implementation~~ ...turns out Nemo uses its own implementation. So Please re-use / adapt the one in CFVMSolver,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1625#issuecomment-1117417733:187,adapt,adapt,187,https://su2code.github.io,https://github.com/su2code/SU2/issues/1625#issuecomment-1117417733,1,['adapt'],['adapt']
Energy Efficiency,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-600991354:594,adapt,adaptive,594,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354,2,"['adapt', 'monitor']","['adaptive', 'monitoring']"
Energy Efficiency,"Using CG did the trick it seems, and the solver now converges < 1e-18. Thanks a lot!. However, one small issue remains: near the tip, the deformation looks quite strange:; ![grafik](https://user-images.githubusercontent.com/42602495/211920358-29e6a9f7-72fc-44d2-84ef-b4e00fcf23bb.png); ![grafik](https://user-images.githubusercontent.com/42602495/211920447-dba88fc8-f9cf-4760-96b3-90d7250b2e0a.png); White box is undeformed FFD-box, translucent green is the deformed one. . BC on the bottom is axis, right and top boundaries are walls. Top and right wall are included in DV_MARKER and DV-direction is (0., 1., 0.). Any idea what could be behind this behaviour?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1879#issuecomment-1379504252:445,green,green,445,https://su2code.github.io,https://github.com/su2code/SU2/issues/1879#issuecomment-1379504252,1,['green'],['green']
Energy Efficiency,"Vajjala,; you may want to try to use the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > ‚Äî; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H554WAUPB",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-621078198:981,efficient,efficient,981,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198,1,['efficient'],['efficient']
Energy Efficiency,"Valgrind does not detect any leaks.; What is probably happening is heap fragmentation, some large temporary arrays are used during parallel output, they are free'd correctly but the OS is not obligated to re-use that space the next time something is allocated. If you want to experiment with modifying some code (to make those arrays persistent) we can show you what to do.; (developers meetings every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting). Cheers",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261#issuecomment-818806174:250,allocate,allocated,250,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261#issuecomment-818806174,1,['allocate'],['allocated']
Energy Efficiency,We have moved to an adaptive CFL functionality in the place of our old CFL ramp feature (see the config_template.cfg file for more details on its usage).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/124#issuecomment-102149500:20,adapt,adaptive,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/124#issuecomment-102149500,1,['adapt'],['adaptive']
Energy Efficiency,"We were discussing the failing discrete adjoint test case in this PR earlier today in the dev call (which seems a little odd). It may be worth disabling the CFL adaption features altogether in Config::SetPostprocesing() when running the discrete adjoint, since it does not make much sense given that we record just a single primal iteration. We should also then check that the CFL number used in that iteration makes sense (initial value vs final value in the primal.. prob makes sense to use initial to be conservative).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-673026393:161,adapt,adaption,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-673026393,1,['adapt'],['adaption']
Energy Efficiency,"We will merge this PR next in order to have enough time for testing and for you to solve conflicts (if you need any help to solve those, please contact me). Even if this PR is merged, please continue to give feedback on the usability. We will still continue to work on that. Refer to the user documentation in order to learn how to adapt your config files. Let me know if you have any questions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534522241:332,adapt,adapt,332,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534522241,2,['adapt'],['adapt']
Energy Efficiency,"What I found is that density unrelated values look smooth for example, velocities (I got it Momentum/Density) and total energy (Energy/Density). As I understand, pressure is calculated assuming perfect gas:; ![image](https://user-images.githubusercontent.com/74228020/135700745-843827fc-3b3c-4e4e-8d25-fd501d39f238.png); and temperature is ; ![image](https://user-images.githubusercontent.com/74228020/135700969-8c5b23b2-e6ae-42fc-a45f-949e455e2791.png); Pressure is function of density but temperature is not. I guess that's why temperature looks good. However, I don't know why momentum has no problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373#issuecomment-932666689:120,energy,energy,120,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-932666689,2,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"What about the following?. - Find out the lowest rank that calls the error handler.; - Only this rank writes the error message. The tricky part of course is how to find out this lowest rank. A possible solution would be (although I am open for alternatives here). - The ranks in the error handler send out messages with a very specific tag to all other ranks.; - The ranks in the error handler attempt to receive messages for a certain amount of time or until all messages have been received. Typically MPI_Iprobe would be used for this purpose.; - Keep track of the lowest rank from which an actual message was received. This may not be very efficient, but you don't care here. Furthermore, not all messages will be received if not all ranks call the error handler. Again, you don't care, because the computation is killed afterwards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/564#issuecomment-415937480:643,efficient,efficient,643,https://su2code.github.io,https://github.com/su2code/SU2/issues/564#issuecomment-415937480,1,['efficient'],['efficient']
Energy Efficiency,"YES! I am excited to try this out. I can probably test it on some of the other TMR cases (airfoils, flatplates). Will post the results when I get those done. . Side note, there was one issue that @bmunguia and I encountered when performing optimizations with adaptive CFL. Say the DIRECT simulation is run with adaptive CFL and is well converged (6 to 8 orders of residual reduction). When the discrete adjoint performs the one direct iteration to store the computational graph, it uses the initial CFL value, not the CFL that the adaptive CFL routine ended at. This results in the residuals being very high for that one iteration, which then affects the convergence of the discrete adjoint. . I will try to run an adjoint on one of these cases as well to see if the problem persists. Perhaps could be overcome with a simple additional field for CFL in the restart meta-data",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-531520526:259,adapt,adaptive,259,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-531520526,6,['adapt'],['adaptive']
Energy Efficiency,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619584815:223,adapt,adaptations,223,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815,3,['adapt'],"['adaptation', 'adaptations']"
Energy Efficiency,"Yeah... It sounded more like an hardware limitation than a software implementation (mpi) issue. About the hybrid solver, you are running into load balancing issues (there are more threads than work packets, i.e. edge groups) it will be better for larger meshes, and maybe an 8x8 division works better than 4x16.; As you are using JST you can also try running at higher CFL to shift work to the linear solver which has no load balancing issues regardless of the group size parameter (the adaptive CFL mode may be necessary to get through the initial transient). Let us know if the new hardware solves the problem.; I will let you know via this issue when we have a release where the hybrid implementation might scale better on unstructured grids.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593573398:487,adapt,adaptive,487,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593573398,1,['adapt'],['adaptive']
Energy Efficiency,"Yep! this is a good idea. > On Oct 27, 2014, at 9:51 AM, Thomas D. Economon notifications@github.com wrote:; > ; > After removing the local surface element area from the calculation, it results in viewing a map of change in the objective (e.g. drag) per 1 square meter w/ a 1 meter deflection at all nodes (for SI units). Makes it easier to see where the geometry is most sensitive.; > ; > ‚Äî; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/issues/123.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/123#issuecomment-60627853:263,meter,meter,263,https://su2code.github.io,https://github.com/su2code/SU2/issues/123#issuecomment-60627853,2,['meter'],['meter']
Energy Efficiency,Yes I get that now and I am doing it exactly like that. For this one I thought I leave it. I tried to do a rebase of my develop to remove older commits from this PR but then git was telling me it was not able to include all the following commits including merges etc so I aborted. . From now on for any fix I would branch every time anew from my develop (which is a copy of su2code +this PR). I also do the same for my own development and then merge any fix branches I need into that. If later you don't merge those fixes because that part of the code is revamped anyway I will bin that branch and redo it on top of your new structure as that would probably be better anyway and just in case I ever want to propose those own developments to su2code. I will watch and adapt. Hope that's fine for now but let me me if you want me to redo or rebase anything for this PR,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/927#issuecomment-612613571:767,adapt,adapt,767,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-612613571,1,['adapt'],['adapt']
Energy Efficiency,"Yes, I set separate markers. I don't think that mesh nodes aren't unchanged, but the edge topology is respected. You are right also when you refer to departure from the design shape (mostly driven by excessively big TRIAS on the surface; I suspect all the surface nodes still lay on the original, initialization surface mesh); there is still departure.; I tried to reduce the `PYADAP_HMAX` but as it affects all the mesh (including volume elements), in order to reach the desired refinement on the surface, the number of cells easily explodes. > If I set this limit to less than the average surface mesh cell size, will it attempt to refine everything over the limit instantly? Or will it only use the limit for 'new' cells that are generated during adaptation? Thanks for your thoughts. I believe it will affect all the mesh, but yet again, it may be also influenced by the numbers of `PYADAP_SUBITE` specified in the config file. It would be great to have different parameters for volume mesh dimensions and surface mesh dimensions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764931621:365,reduce,reduce,365,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764931621,2,"['adapt', 'reduce']","['adaptation', 'reduce']"
Energy Efficiency,"Yes, the new jacobian implementation is less diffusive. Besides this, the low Mach number correction also results in less diffusive, final, formulation (as Tornber says in his paper). I expect this to result in reduced stability when the flow has very sharp discontinuities, like the contact surface between the recirculation zone and the external flow, since they are better captured.; I have made some modification to my implementation and now it works also for this test case (though CFL has to be lowered from 4.0 to 2.0, as I was expecting, to make it eventually converge).; If this looks good to you, I'll change the CFL number and push it to the repo. Regards,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-185308834:211,reduce,reduced,211,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-185308834,1,['reduce'],['reduced']
Energy Efficiency,"You're right about that bug with vel_i_corr. Thanks for finding it, I'll submit a correction. Yes, it's possible to modify the config file so that your implementation works. But is this simply masking the problem of reduced stability? Do you expect the direct formulation to be less stable? And do the benefits of the direct formulation make the loss of stability worthwhile? If so, then I think you should change the config file. I hope this answers your question, I'm not sure if I understood it correctly. Regards,; Daniel",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-182655391:216,reduce,reduced,216,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-182655391,2,['reduce'],['reduced']
Energy Efficiency,"You've got two options:. 1. Use the cfg option `WRT_BINARY_RESTART= NO` to dump the restart file(s) in human-readable ASCII.; 2. Use the cfg option `OUTPUT_FORMAT= TECPLOT` or `OUTPUT_FORMAT=PARAVIEW` with SU2_SOL to export the solution to an ASCII-formatted tecplot or paraview file. If you're not familiar with SU2_SOL, then check out [the documentation](https://su2code.github.io/docs/Post-processing/). You can find those cfg options in `config_template.cfg` in the root SU2 source code directory. In the end, using the tecplot or paraview option may be your best bet. Trying to manually parse the text files smells like an [XY Problem](https://en.wikipedia.org/wiki/XY_problem). Tecplot and Paraview both have scripting capabilities that make post-processing very efficient. Does that answer your question? Do you have any follow-up concerns?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528435629:769,efficient,efficient,769,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528435629,1,['efficient'],['efficient']
Energy Efficiency,"_j[iVar] = phiMax(jPoint,iVar);; }. const double eps = numeric_limits<double>::epsilon();. // very simple if's are required to get vectorization; // trough vector comparisons and masked blends; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; if(proj_i[iVar] <= 0.0); {; lim_i[iVar] = phiMin(iPoint,iVar);; proj_i[iVar] = min(proj_i[iVar], -eps);; }. if(proj_j[iVar] <= 0.0); {; lim_j[iVar] = phiMin(jPoint,iVar);; proj_j[iVar] = min(proj_j[iVar], -eps);; }; }. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; lim_i[iVar] = (lim_i[iVar]-phi(iPoint,iVar))/proj_i[iVar];; limiter(iPoint,iVar) = min(limiter(iPoint,iVar), lim_i[iVar]);. lim_j[iVar] = (lim_j[iVar]-phi(jPoint,iVar))/proj_j[iVar];; limiter(jPoint,iVar) = min(limiter(jPoint,iVar), lim_j[iVar]);; }; }. #pragma omp parallel for schedule(dynamic,TARGET_CHUNK_SIZE); for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; double lim = limiter(iPoint,iVar);; limiter(iPoint,iVar) = lim*(lim+2)/(lim*lim+lim+2);; }; }; }; ```; Again to keep things short here is the parallel and SIMD point-loop version (like for gradients it is very similar to the scalar and sequential version).; ```C++; void computeLimiters(size_t nPoint,; size_t nVar,; size_t nDim,; const Adjacency<4>& adj,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; Matrix& limiter); {; const size_t SIMDLEN = 4;; using FltVec = Array<double,SIMDLEN>;. // working variables; FltVec phiMax[MAXNVAR], phiMin[MAXNVAR], prjMax[MAXNVAR], prjMin[MAXNVAR];. const double eps = numeric_limits<double>::epsilon();. #pragma omp parallel for schedule(dynamic,128) private(phiMax,phiMin,prjMax,prjMin); for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); {; for(size_t iVar=0; iVar<nVar; ++iVar); {; phiMin[iVar] = phiMax[iVar] = phi.getVec(iPoint,iVar);; prjMax[iVar] = eps;; prjMin[iVar] = -eps;; }. for(size_t iNeigh=0; iNeigh<adj.nNeighbor(iPoint); ++iNeigh); {; auto jPoint = adj.jPoi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:7069,schedul,schedule,7069,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['schedul'],['schedule']
Energy Efficiency,"a for those inserts will be in a slightly weird format, which will make `SparseMatrix::updateBlocks` a bit harder on the eye, more on that later._. ## MUSCL Reconstruction; The MUSCL reconstruction, characteristic of upwind schemes, is the simplest building block to show the (negative) implications of storing the data as structures of arrays (SoA) on the performance of some operations.; Here is the most basic numerics you can think of, reconstruct and average (the dummy matrix loop was to benchmark the writes this is to benchmark the reads); ```c++; void computeResidual(size_t nVar,; size_t nDim,; const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; const Matrix& limiter,; Matrix& residual); {; residual.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. double d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = 0.5*(coords(jPoint,iDim)-coords(iPoint,iDim));. for(size_t iVar=0; iVar<nVar; ++iVar); {; double phiL = phi(iPoint,iVar);; double phiR = phi(jPoint,iVar);. for(size_t iDim=0; iDim<nDim; ++iDim); {; phiL += limiter(iPoint,iVar)*grad(iPoint,iVar,iDim)*d_ij[iDim];; phiR -= limiter(jPoint,iVar)*grad(jPoint,iVar,iDim)*d_ij[iDim];; }. double flux = 0.5*(phiL+phiR);. residual(iPoint,iVar) += flux;; residual(jPoint,iVar) -= flux;; }; }; }; ```; after vectorizing this to handle multiple edges simultaneously with the SIMD-friendly type the core of the loop becomes; ```c++; using FltVec = Array<double,SIMDLEN>;; ... FltVec d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = (coords.getVec(jPoint,iDim)-coords.getVec(iPoint,iDim))*0.5;. for(size_t iVar=0; iV",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:6384,schedul,schedule,6384,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['schedul'],['schedule']
Energy Efficiency,"amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : Can't find mesh.\n""; ; #--- Get sensor; ; sensor = su2amg.create_sensor(mesh, adap_sensor); su2amg.write_solution(""current_sensor.solb"", sensor); ; if not os.path.exists(""current_sensor.solb""):; raise RuntimeError , ""\n##ERROR : Can't find adap sensor.\n""; ; #--- Run amg; ; sys.stdout.write(""Running amg. Log : %s\n"" % config_amg['amg_log']); ; if os.path.exists(""current.itp.solb""):; os.remove(""current.itp.solb""); ; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Genera",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:9384,adapt,adaptation,9384,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['adapt'],['adaptation']
Energy Efficiency,"ariable, which means there will be no penalty to scalar code, new overloads for accessor methods will be required to set/get SIMD-arrays of data instead of scalars.; - The geometric properties and graph information associated with CGeometry will require the same contiguous storage treatment received by CVariable.; - Linear algebra, dimension-specific multiplication kernels with manual low level optimisations (unrolling, vectorization through intrinsics, and software prefetching), complex code but encapsulated in a low maintenance area of the code. **General improvements**; - Fusing convective and viscous residual loops, this will NOT be done by super gluing convective and viscous numerics. I do not have a concrete design in mind yet but I hope to be able to do something akin to the *decorator* pattern I mentioned before. I also plan to make the numerics a full-fledged *visitor* to reduce compilation dependencies, currently a change to numerics may affect CVariable CSolver and CNumerics (as mentioned by @clarkpede), CSolver is involved because it is responsible for fetching data, I may move that to CNumerics, which would let them fetch data as needed.; - Lookup accesses to CSysMatrix to avoid linear searches, the small increase in memory usage can be mitigated by sharing these lookup tables/arrays and the sparsity pattern between matrices associated with the same geometry (on the subject of these lookup tables, knowing where the diagonal of a row is should enable more efficient upper/lower multiplications). ## Work items; This is a lot of work and some changes will be significant, I will divide the work in steps, off the top of my head this order seems ok:; - CSysMatrix lookups and any required parallel pragmas put in place.; - Point-loop gradients and limiters, no SIMD (at which point I hope #777 to be finished so the next item does not disrupt it).; - Split CSolvers over multiple files, colour-based parallel residual loops (at this point we have hybrid parallel!).;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539523312:3270,reduce,reduce,3270,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539523312,1,['reduce'],['reduce']
Energy Efficiency,"cally equivalent) introduced to limiters and gradients in #834, yes. > What's the advantage of having one numerics term per thread?. It is a requirement, we need to write data into numerics before using them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could revisit the ownership relations of the numerics classes, i.e. allocate them as members of their respective solvers, which if we do, we can think of having a purpose built container that automates the per-thread creation and access. > Why are they redefined each time inside the loop?; > Is this for efficiency reasons?. Referring to variables being declared inside loops. One stylist reason is that declaring everything at the top of a function is the C way of doing things, the C++ people whose books/blogs I've read and talks I've watched, recommend keeping namespaces (the inside of the loop being one) as clean as possible.; The only reason not to do this is if you explicitly want re-use, in the case of trivial types this does not improve efficiency, and in the context of OpenMP code it can create issues. Just like we need one numerics per thread, if we declare variables outside a parallel loop the default OpenMP behaviour is to consider them shared, and concurrent writes to shared locations = gdb and many bad words xD.; **EDIT:** I should mention here that if the parallel region is started before the variable declarations they beco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:2062,allocate,allocate,2062,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,2,['allocate'],['allocate']
Energy Efficiency,"ce is **""measure it before changing code""**, I broke that rule because as my first post illustrated non contiguous storage at the scale we had is a real killer. With that out of the way, to some extent at least (the layout may not be optimum still) measuring is essential to decide what to do next. This is the case I am using:; ![case](https://user-images.githubusercontent.com/38071223/63288257-27d9d580-c2b4-11e9-9899-8b44b230b8bb.png); It is a bad wing design (NACA0012) with some sweep and taper and a home-brew mesh whose quality rivals that of the design (it converges and the flow does not separate...).; The mesh is just over 500k vertices (so it ""fits"" comfortably in my pc) the y+ is not great (obvs) but the aspect ratios are 200 and 2000 in the chordwise and spanwise directions respectively, so not exactly linear solver friendly either. Some settings which are kinda optimal:; - Mach 0.6, AoA 2 degrees;; - SST (1st order);; - CFL 20 (higher and residuals would limit-cycle (regardless of linear solver settings); - Roe;; - MUSCL - Green-Gauss and Venkat-Wang;; - FGMRES + LU_SGS to 0.05 residual (about 3 iters on avg.);; - 2 levels of MG (1,1,2 iterations, all zeros for other stuff and 0.7 damping both ways);. The case is light on the linear solver and therefore stands to benefit the most from better data layout. Conversely, applications that can take higher CFL / or use central schemes will not benefit as much. **Running this from scratch to residual of 10^-8 on a couple of Xeon E5-2650v4 (24c total) shows a speedup of 1.4 and just over 10% lower memory usage.**; Those numbers will be better for an equivalent 2D case since the ratio of useful data to pointers and vtables is lower. After a celebratory dance I attempted to profile the code using [Perf](https://en.wikipedia.org/wiki/Perf_(Linux)) which I ""learned how to use"" from [a YouTube video](https://www.youtube.com/watch?v=nXaxk27zwlk&t=2052s).; In a nutshell compile the code as usual but with the `-fno-omit-frame",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-522730951:1400,Green,Green-Gauss,1400,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-522730951,1,['Green'],['Green-Gauss']
Energy Efficiency,"ch request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix instead of lists of lists.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:1722,efficient,efficient,1722,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827,4,['efficient'],['efficient']
Energy Efficiency,"date with develop. Check out [feature_adap](https://github.com/su2code/SU2/tree/feature_adap). It uses goal-oriented (adjoint-based) adaptation instead of feature-based (just based on Mach or pressure) that Vic's fork used. Some things to note:; 1. It's currently only tested on Euler (it uses a Hessian of the Euler fluxes so it might work for NS/RANS, but probably not) (@WallyMaier and I also extended it to TNE2 in [feature_amgtne2](https://github.com/su2code/SU2/tree/feature_amgtne2) but the source terms are giving us trouble on adapted meshes); 2. It requires AD support since it uses the discrete adjoint to weigh the Euler flux Hessians; 3. I did all my testing with the AMG executable since pyAMG doesn't have all the features I currently need, but I just updated the branch to use pyAMG. I just tested the new interface with an airfoil and it seems to be working, but there might still be some bugs. You'll want to run mesh_adaptation_amg.py with the following options:; **ADAP_SIZES:** list of mesh complexities for each adaptive level. This is correlated to mesh size, but picking good values requires some playing around; **ADAP_SUBITE:** number of adaptations performed at each adaptive level. If set to (2,3) for example, it will run 2 adaptive iterations to try to reach ADAP_SIZES[0], and 3 iterations to try to reach ADAP_SIZES[1]; **ADAP_EXT_ITER:** number of iterations used by SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_RESIDUAL_REDUCTION:** order of magnitude residual reduction for SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_SENSOR:** currently only works for GOAL; **ADAP_HMAX:** maximum cell size (m); **ADAP_HMIN:** minimum cell size (m); **ADAP_HGRAD:** gradation coefficient (>1) used by AMG during mesh smoothing. A larger value corresponds to larger allowed gradient in mesh size. E.g. for the RAE2822 I used:; ADAP_SIZES= (12800, 19200, 25600); ADAP_SUBITE= (2, 2, 2); ADAP_EXT_ITER= (9999, 9999, 9999); ADAP_RESIDUAL_REDUCTION= (6, 6, 6); ADA",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504675574:1169,adapt,adaptive,1169,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504675574,1,['adapt'],['adaptive']
Energy Efficiency,"dy (which currently directly calls the sym_plane boundary) -> that recovered the results obtained with the 'older' version. The steady state results (onera m6) show that both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then we are left with this initial transient phase that differs. Of course if there is more evidence that one or the other version produces physically ""better"" results I would love to see that. Until then, both initial oscillations are equally correct/uncorrect in my opinion. [I'll add a few words about the adjoint here later]. [I'll add the idea of an FSI case of @cvencro here later where the initial phase has a major impact]; Consider an FSI computation of an airfoil where the trailing edge can exhibit flutter (periodic up-and-down-movement of the trailing edge) in certain flow regimes. Now if during the initial transient the forces on the airfoil are higher than in the converged state then the fluttering can be e",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563314747:1758,reduce,reduced,1758,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747,2,['reduce'],['reduced']
Energy Efficiency,"eature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I miss something?; If it is correct and complete, which file contains the adaptive mesh? How can I use it since there is no new .su2 file? . Thank you for the big help",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-737134105:1239,Adapt,Adaptation,1239,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105,5,"['Adapt', 'adapt']","['Adaptation', 'adaptation', 'adaptive']"
Energy Efficiency,"ed) adaptation instead of feature-based (just based on Mach or pressure) that Vic's fork used. Some things to note:; 1. It's currently only tested on Euler (it uses a Hessian of the Euler fluxes so it might work for NS/RANS, but probably not) (@WallyMaier and I also extended it to TNE2 in [feature_amgtne2](https://github.com/su2code/SU2/tree/feature_amgtne2) but the source terms are giving us trouble on adapted meshes); 2. It requires AD support since it uses the discrete adjoint to weigh the Euler flux Hessians; 3. I did all my testing with the AMG executable since pyAMG doesn't have all the features I currently need, but I just updated the branch to use pyAMG. I just tested the new interface with an airfoil and it seems to be working, but there might still be some bugs. You'll want to run mesh_adaptation_amg.py with the following options:; **ADAP_SIZES:** list of mesh complexities for each adaptive level. This is correlated to mesh size, but picking good values requires some playing around; **ADAP_SUBITE:** number of adaptations performed at each adaptive level. If set to (2,3) for example, it will run 2 adaptive iterations to try to reach ADAP_SIZES[0], and 3 iterations to try to reach ADAP_SIZES[1]; **ADAP_EXT_ITER:** number of iterations used by SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_RESIDUAL_REDUCTION:** order of magnitude residual reduction for SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_SENSOR:** currently only works for GOAL; **ADAP_HMAX:** maximum cell size (m); **ADAP_HMIN:** minimum cell size (m); **ADAP_HGRAD:** gradation coefficient (>1) used by AMG during mesh smoothing. A larger value corresponds to larger allowed gradient in mesh size. E.g. for the RAE2822 I used:; ADAP_SIZES= (12800, 19200, 25600); ADAP_SUBITE= (2, 2, 2); ADAP_EXT_ITER= (9999, 9999, 9999); ADAP_RESIDUAL_REDUCTION= (6, 6, 6); ADAP_SENSOR= GOAL; ADAP_HMAX= 10.0; ADAP_HMIN= 1e-8; ADAP_HGRAD= 1.5. ![mesh](https://user-images.githubusercontent.com/19416354/599",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504675574:1299,adapt,adaptations,1299,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504675574,2,['adapt'],"['adaptations', 'adaptive']"
Energy Efficiency,"enced only once per color (this definition gives you the basis of a greedy algorithm to color edges).; - **Scatter to gather transformations**: Edge quantities (e.g. fluxes) are computed and stored on one pass (i.e. we read from 2 locations and write to 1), on a second pass, over points, we reduce (e.g. sum) the edge quantities for each point, again a gather access pattern. It may also be possible to convert the entire algorithm to a loop over points instead of edges.; - **Atomic operations or locks**: Here when a thread wants to write to a memory location it either needs to do so atomically (this is essentially an operations that always goes through main memory and forces cache coherency) or it needs to acquire a *lock* for the point it is writing to, if it fails to acquire the *lock* (because another thread has it) it needs to wait. None of these is without drawbacks.; - **Coloring** reduces temporal locality, edges are sorted in increasing order of the point indices to reduce cache misses, this means small groups of contiguous edges will share the same ""iPoint"", coloring single edges destroys this. Furthermore coloring either requires edges to be re-sorted by color, or if the edge indices of each color are instead kept in arrays, performance will suffer due to increased indirection which confounds the hardware pre-fetcher.; This can be mitigated to some extent by coloring groups of edges, groups of edges of the same color can be processed simultaneously, but within each group edges need to be processed serially. However grouping will reduce how much parallelism can be exploited within each color.; - **Gather to scatter** will in general use more memory due to the intermediate variables and extra adjacency information needed. If the entire algorithm is transformed performance may suffer as some computations may have to be repeated.; However, some reductions are possible without intermediate variables, for example when assembling the system matrix for implicit sche",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:5069,reduce,reduces,5069,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,4,['reduce'],"['reduce', 'reduces']"
Energy Efficiency,"entation) using `VISUALIZE_SURFACE_DEF` as a hooked boolean. ; With `VISUALIZE_VOLUME_DEF` one can change which convective scheme is used on the boundary, i.e. what is in the numerics container `CONV_BOUND_TERM`. The Default is `CUpwRoe_Flow` (`ROE`) and I added `CCentJST_Flow_BC` which is the normal `JST` without dissipation. ; The third option `MUSCL_ADJFLOW` has to be left on NO, this is work in progress :) . With the options given above you will use the new Euler wall implementation but using JST without dissipation term as a convective scheme for boundary nodes. This (as I say in point 2. in my above post) basically recovers the old euler wall implementation. . For the OneraM6 case the combination of new Euler + JST_BC recovers the CD & CL results of the old code. Can you also try running `CONV_NUM_METHOD_FLOW= ROE` with the code you labelled as 'SU2 FSI new (new bound condition)' and 'SU2 FSI new (oldbound condition)'. Because by doing so you switch the numerical method in the volume and to the same ROE scheme on the boundary -> just as the current default in the develop. So my current assumption is that it is a matter of convective scheme (on the boundary). ~~I'll try to attach my cases as a zip and two images here.~~; Here the green line represents the current develop if one uses MARKER_EULER or MARKER_SYM. Another info here is: by using the oldEuler wall (i.e. line 1&2) the choice of convective scheme on the boundary is irrelevant for the Euler_wall as the old implementation ""skips"" that step. The red line 4 is the setup I want you to try because this recovers the old results in this case.; ![image](https://user-images.githubusercontent.com/4933860/73058455-fb923880-3e93-11ea-9d49-baf87a4754e6.png); ![image](https://user-images.githubusercontent.com/4933860/73058476-0351dd00-3e94-11ea-8498-37ccfdb033b0.png). Here the testcase folder if someone wants to use the exact setup; [oneram6test.tar.gz](https://github.com/su2code/SU2/files/4107614/oneram6test.tar.gz)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-578048838:1760,green,green,1760,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578048838,1,['green'],['green']
Energy Efficiency,"ents. Registers are at the very top of the memory hierarchy, for any computation to be performed data needs to be in registers.; An AVX register is 256 bits wide, that means 4 lanes of doubles or 8 of floats, AVX-512 (available in Xeon-Phi and SkylakeX processors) doubles the size. By GPU standards these are rookie numbers. **Why should we care about SIMD?**; Because it is the only way to use the whole silicon, by and large vector instructions have the same latency and throughput of their scalar versions, therefore speedups proportional to the number of SIMD lanes are possible in compute-bound code.; As we saw in #716 there is some of that in the numerics, do not expect 4x speed-ups though, low order unstructured FVM is known to be bandwidth-bound, vectorization helps a bit there too (instructions are also data that needs to travel to the CPU) (maybe for explicit schemes and 8 SIMD lanes, maybe). **Relation with data structures**; There is only one efficient way to move data between memory and registers, via `load` and `store` instructions (they do come in multiple flavors). That is, pointing to a memory location and reading or writing N elements of contiguous data.; It is not the only way, it is also possible to `gather` and `scatter` data. That is populating the register from non-contiguous locations and vice versa. This is about one order of magnitude slower, to the point where if the computations are very simple it may not pay-off to vectorize. **Relation with algorithms**; Some form of `gather` and `scatter` is required in unstructured CFD, which means SIMD has a price of admission. Some thought needs to go into designing algorithms that amortize that cost by maximizing the so called FLOP/Byte ratio, and mask the latency of those operations by being able to start computing as soon as the first element of data is available. **What elements should we try to process simultaneously?**; The choice is between multiple geometric primitives (edges/points) or multiple s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:1147,efficient,efficient,1147,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['efficient'],['efficient']
Energy Efficiency,"esh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Generating adapted mesh using AMG\n' % pad_cpt); ; mesh_new = su2amg.amg_call_python(mesh, config_amg); ; #--- print mesh size; ; sys.stdout.write(' %s AMG done: %s\n' % (pad_nul, su2amg.return_mesh_size(mesh_new))); ; mesh_new['markers'] = mesh['markers']; mesh_new['dimension'] = mesh['dimension']; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter; ; su2amg.write_mesh(current_mesh, current_solution, mesh_new); ; #--- Run su2; ; log = 'ite%d.SU2'%global_iter; stdout_hdl = open('%sstdout'%log,'w') # new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_solution_ini = ""ite%d_ini.dat"" % global_iter; os.rename(current_solution, current_solution_ini); ; config_cfd.MESH_FILENAME = current_mesh; config_cfd.CONV_FILENAME = ""ite%d_history"" % global_iter",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:10362,adapt,adapted,10362,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['adapt'],['adapted']
Energy Efficiency,"fic multiplication kernels with manual low level optimisations (unrolling, vectorization through intrinsics, and software prefetching), complex code but encapsulated in a low maintenance area of the code. **General improvements**; - Fusing convective and viscous residual loops, this will NOT be done by super gluing convective and viscous numerics. I do not have a concrete design in mind yet but I hope to be able to do something akin to the *decorator* pattern I mentioned before. I also plan to make the numerics a full-fledged *visitor* to reduce compilation dependencies, currently a change to numerics may affect CVariable CSolver and CNumerics (as mentioned by @clarkpede), CSolver is involved because it is responsible for fetching data, I may move that to CNumerics, which would let them fetch data as needed.; - Lookup accesses to CSysMatrix to avoid linear searches, the small increase in memory usage can be mitigated by sharing these lookup tables/arrays and the sparsity pattern between matrices associated with the same geometry (on the subject of these lookup tables, knowing where the diagonal of a row is should enable more efficient upper/lower multiplications). ## Work items; This is a lot of work and some changes will be significant, I will divide the work in steps, off the top of my head this order seems ok:; - CSysMatrix lookups and any required parallel pragmas put in place.; - Point-loop gradients and limiters, no SIMD (at which point I hope #777 to be finished so the next item does not disrupt it).; - Split CSolvers over multiple files, colour-based parallel residual loops (at this point we have hybrid parallel!).; - Contiguous storage of CGeometry members (to eventually enable vectorization).; - Split CNumerics over files, architecture for fusing convective and viscous loops (the most disruptive change).; - SIMD, of gradients, limiters, and numerics. SIMD in CSysMatrix can be started anywhere after item 1. If you foresee conflicts with your ongoing work let",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539523312:3868,efficient,efficient,3868,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539523312,1,['efficient'],['efficient']
Energy Efficiency,"fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % In",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1005,adapt,adaptation,1005,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341,1,['adapt'],['adaptation']
Energy Efficiency,"gy terms? I'm talking about terms like:. ![molecular and turbulent diffusion of tke](https://latex.codecogs.com/gif.latex?\left(&space;\mu&space;&plus;&space;\frac{\mu_t}{\sigma_k}\right)\frac{\partial&space;k}{\partial&space;x_j}). This term is listed both in Wilcox's ""Turbulence Modeling for CFD"" book and the [NASA TMR website](https://turbmodels.larc.nasa.gov/implementrans.html). NASA's page basically just copies what Wilcox states, and then says ""This expression in the energy equation is also sometimes neglected."". Rumsey clarified his position in a [2009 report](https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20090015399.pdf), saying that ""when considering high Mach number compressible boundary layer flows using k-omega models, the conservation of total energy should be configured to include the contribution of the turbulent kinetic energy k... It is sometimes common practice to ignore these effects, which is certainly justified when k is signficantly smaller than the square of the mean velocity."" . But he also states: ""Note that in CFL3D, the turbulence models are decoupled from the mean flow equations, k is *not* included in the definition of the total energy, and the diffusion of k does not appear in the mean flow energy equation for its models tested here."" He also omitted the 2/3 \rho k term in both the production and the turbulent stress tensor, and found that it made little difference even for M=10 wall-bounded flows. SU2's version of SST is in a weird spot right now, where it's using the turbulent kinetic energy in some places but not others. It's using it here:. + Total energy definition; + Production of turbulent kinetic energy; + RANS evolution equations; + Eddy viscosity definition. But not here:. + Molecular and turbulent diffusion of turbulent kinetic energy in the total energy conservation equation; + Isotropic part of the turbulent stress tensor. Is there any rationale behind this split, aside from simply stating that ""this seems to work?""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-548886007:1347,energy,energy,1347,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-548886007,14,['energy'],['energy']
Energy Efficiency,"he residual of cells i and j, or store the edge fluxes and then, on a second point-loop perform the summation of fluxes for each cell, with the direction being accounted by the same adjacency information used in the point-loop GG gradient computation.; If we consider only the update of residuals the two strategies are fairly equivalent performance wise, the tie breaker is the matrix updates. ## Matrix Updates; By this I mean the `addBlock`, `subBlock` we do (two times each) to update diagonal and off-diagonal blocks for each edge.; Here is a dummy numerics loop that does nothing else but setting blocks in the matrix (with colouring).; ```c++; void testLoop1(const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; double** blk_i, double** blk_j,; SparseMatrix& matrix); {; matrix.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. matrix.addBlock(iPoint, iPoint, blk_i);; matrix.addBlock(iPoint, jPoint, blk_j);. matrix.subBlock(jPoint, jPoint, blk_j);; matrix.subBlock(jPoint, iPoint, blk_i);; }; }; ```; This and a few more memory reads is why we can't have nice things, i.e. massive speedups with vectorization. Believe it or not this loop sets ~75% of the maximum speed at which the residual edge loop can run (bandwidth bottleneck).; Don't be sad though, we can make a few things about it better:; - We can store the blocks we insert contiguously so the writes can be vectorized (this would be done using a container so that we still have `(i,j)` access syntax);; - On each insertion we have to first look for the block by traversing the `colInd` (column index) array, we can instead map the diagonal blocks to the corresponding points and the off-diagonal blocks to the e",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:1827,schedul,schedule,1827,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['schedul'],['schedule']
Energy Efficiency,"here a retroactive application of unit testing may also make sense. I am copying Pat Miller, formerly with DoE, who may have more experience on whether such unit testing approaches were useful/worth the investment in some major codes he worked on. Best,. Juan. On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com<mailto:notifications@github.com>> wrote:. I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon<https://github.com/economon>, I've decided to move the discussion here to get additional input. What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research g",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:1460,power,power,1460,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['power'],['power']
Energy Efficiency,"iEdge repeated. This concept of padding is important for something else, you may have noticed that the SIMD point-loops I showed make no provisions for values of nPoint that are not multiples of SIMDLEN, that is because the containers already took care of that by rounding up the number of columns, and so that seemingly out-of-bounds access is safe (ain't encapsulation great). Padding also aligns the start of each column, thus it is a generally good thing to have (on large dimensions) whether used or not. Here is a relative performance recap before we talk bout parallelization. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed** | 1.0 | 2.2 | 0.83 | 1.35 |. **Parallel execution**. I will start at the end for this, all it takes to parallellize the points loops with OpenMP is to take this:; ```C++; for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); ```; And add some pixie dust; ```C++; #pragma omp parallel for schedule(dynamic,128); for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); ```; This means each thread gets chunks of 128 loop iterations (512 points) to work on, assigned in a dynamic way, the 4 core speedup (still relative to our reference) is **3.8** for the SIMD code and **2.8** for the scalar code. Parallelizing the edge loops is a bit more intricate, as this:; ```C++; for(size_t iEdge=0; iEdge<nEdge; ++iEdge); {; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;; ```; Becomes:; ```C++; for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; #if SORT_BY_COLOR==1; size_t iEdge = k;; #else; size_t iEdge = edgeIdx[k];; #endif. size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;; ```; Apologies for the macro but it is just to illustrate that if we re-sort edge data after coloring the edge index is th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:12291,schedul,schedule,12291,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['schedul'],['schedule']
Energy Efficiency,"it testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:2487,power,power,2487,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['power'],['power']
Energy Efficiency,"it uses a Hessian of the Euler fluxes so it might work for NS/RANS, but probably not) (@WallyMaier and I also extended it to TNE2 in [feature_amgtne2](https://github.com/su2code/SU2/tree/feature_amgtne2) but the source terms are giving us trouble on adapted meshes); 2. It requires AD support since it uses the discrete adjoint to weigh the Euler flux Hessians; 3. I did all my testing with the AMG executable since pyAMG doesn't have all the features I currently need, but I just updated the branch to use pyAMG. I just tested the new interface with an airfoil and it seems to be working, but there might still be some bugs. You'll want to run mesh_adaptation_amg.py with the following options:; **ADAP_SIZES:** list of mesh complexities for each adaptive level. This is correlated to mesh size, but picking good values requires some playing around; **ADAP_SUBITE:** number of adaptations performed at each adaptive level. If set to (2,3) for example, it will run 2 adaptive iterations to try to reach ADAP_SIZES[0], and 3 iterations to try to reach ADAP_SIZES[1]; **ADAP_EXT_ITER:** number of iterations used by SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_RESIDUAL_REDUCTION:** order of magnitude residual reduction for SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_SENSOR:** currently only works for GOAL; **ADAP_HMAX:** maximum cell size (m); **ADAP_HMIN:** minimum cell size (m); **ADAP_HGRAD:** gradation coefficient (>1) used by AMG during mesh smoothing. A larger value corresponds to larger allowed gradient in mesh size. E.g. for the RAE2822 I used:; ADAP_SIZES= (12800, 19200, 25600); ADAP_SUBITE= (2, 2, 2); ADAP_EXT_ITER= (9999, 9999, 9999); ADAP_RESIDUAL_REDUCTION= (6, 6, 6); ADAP_SENSOR= GOAL; ADAP_HMAX= 10.0; ADAP_HMIN= 1e-8; ADAP_HGRAD= 1.5. ![mesh](https://user-images.githubusercontent.com/19416354/59965706-940fa700-94c6-11e9-811c-4379694f0f7b.png); ![sol](https://user-images.githubusercontent.com/19416354/59965707-940fa700-94c6-11e9-9e1a-e0ae6854d412.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504675574:1388,adapt,adaptive,1388,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504675574,3,['adapt'],['adaptive']
Energy Efficiency,"le (and the user will decide which one turn on of off using templet of paraview); > ; > MARKER_MONITORING, MARKER_DESIGNING: The main idea is to be able to compute to different integrals over the surfaces: one for simulation and the other for design. e.g. You maybe want to include all the solid surfaces and fan faces, and charging stations in MARKER_MONITORING to compute (Drag-Thrust) but in MArKER DESIGN you are only interested on the wing surface for design.; > ; > DV_MARKER. This is an unfortunately name. At the very beginning the mesh deformation capability was developed only for shape design (DV = Design Variables). We should generalize the names of the grid deformation parameters without using DV. Thanks!; Francisco. On Aug 18, 2015, at 4:31 AM, Heather Kline notifications@github.com wrote:. > Thanks Tom; > I agree that we should make things easy to understand. ; > My thinking was that most users will want to know what parts of the mesh they are moving, but don't necessarily need to know what's happening underneath - if they specify the entire mesh the code just reverts to the more efficient method. But (from the users perspective) it may be just as easy to have a separate specification for scaling the entire mesh.; > ; > In terms of moving it to SU2_MSH; I think it may make sense to include scale/rotate/translate in SU2_MSH, but I think it would be confusing to have two options that do the same thing. I would side with separate option names (this would also eliminate a loop over markers in this pull request); > ; > On this topic, I have sometimes found MARKER_DESIGNING and DV_MARKER to be confusing; on their own they sound very similar, in the description MARKER_DESIGNING is where the objective function is evaluated - but in the code, it's not clear what MARKER_DESIGNING does - the surfaces specified by MARKER_MONITORING are what are actually used to evaluate the objective function value.; > ; > There may be other similar areas where config file options could ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-133010923:1470,efficient,efficient,1470,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-133010923,2,['efficient'],['efficient']
Energy Efficiency,location.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc);,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:5553,Adapt,Adapt,5553,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['Adapt'],"['Adapt', 'Adaptive']"
Energy Efficiency,"metric primitives (edges/points) or multiple solution primitives (variables). The latter sounds like a sensible idea until we get to areas of the code where different primitives require different treatment, that and the fact that the number of variables might not fit evenly in the number of lanes can lead to very tricky and non-generic code. Nevertheless if the same code were to be applied to e.g. 4 solution variables, this strategy would likely perform better as it avoids the pesky gather/scatter operations.; Processing multiple geometric primitives can make full utilization of whatever register size (important on GPU's), the code is just as readable (as I hope to show), but gather/scatter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writes to 2 locations (gather / scatter access pattern, not to be confused with the instructions) processing multiple edges at the same time can therefore result in race conditions where multiple threads try to update the data of the same point.; There are 3 ways to address this:; - **Coloring**: Edges are colored (grouped) such that edges of the same color have no risk of race conditi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:3093,Reduce,Reduce,3093,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,1,['Reduce'],['Reduce']
Energy Efficiency,"n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Generating adapted mesh using AMG\n' % pad_cpt); ; mesh_new = su2amg.amg_call_python(mesh, config_amg); ; #--- print mesh size; ; sys.stdout.write(' %s AMG done: %s\n' % (pad_nul, su2amg.return_mesh_size(mesh_new))); ; mesh_new['markers'] = mesh['markers']; mesh_new['dimension'] = mesh['dimension']; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter; ; su2amg.write_mesh(current_mesh, current_solution, mesh_new); ; #--- Run su2; ; log = 'ite%d.SU2'%global_iter; stdout_hdl = open('%sstdout'%log,'w') # new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_solution_ini = ""ite%d_ini.dat"" % global_iter; os.rename(current_solution, current_solution_ini); ; config_c",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:10291,sensor,sensor,10291,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['sensor'],['sensor']
Energy Efficiency,"nd max neighbors as small local variables instead of large global ones due to the way those values are determined. This is where the memory from the extra adjacency information is recovered. Like @economon said, fusing the gradient kernel with the limiter kernel is trivial with these point loops, and I do not think it affects readability much since one can clearly tell ""what is what"" (I will not put it here but it really is a matter of copy paste), including the boundaries could be a bit more challenging, but I will give performance number nevertheless. **Performance summary**. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed 1 core** | 1.0 | 1.75 | 1.25 | 2.0 |; | **Speed 4 cores** | 2.45 | 2.7 | 4.5 | 7.0 |. The basic point version does not lose to edge based because, contrary to gradients, it does not require duplication of computations while benefiting from sequential access to gradients.; Again the point-based implementation does really well in parallel, limiters are more compute intensive and so the scaling is almost perfect.; For reference, limiters are 1.9 times more expensive to compute than gradients with the reference edge version. With point loops, SIMD, and in parallel, gradients and limiters cost the same. If we consider the combined cost of gradients and limiters, and compare the scalar ""edge+edge"" with the SIMD ""point+point"" and ""fused point"" we get:. | G+L Approach | Edge+Edge | Point+Point | Fused Point |; | ---- | ---- | ---- | ---- |; | **Speed 1 core** | 1.0 | 1.75 | 1.85 |; | **Speed 4 cores** | 2.3 | 5.35 | 6.1 |. Fusing point loops only gives a 14% improvement vs separate loops due to the difference in gathered data, only one gather is amortized and the remaining memory accesses are very efficient.; Nevertheless if it can be done nicely while accounting for boundaries (which may have to be handled outside the loop) it could allow some memory savings for the discrete adjoint.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:11465,efficient,efficient,11465,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['efficient'],['efficient']
Energy Efficiency,"nd of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % Invert the background mesh orientation; % Sometimes required for 3D meshes, since AMG doesn't perform; % a check that the orientation of the background and foreground; % meshes match; PYADAP_INV_BACK= NO; % Don't use ridge detection if corners specified; PYADAP_RDG= NO; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1316,adapt,adaptations,1316,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341,3,"['Green', 'adapt']","['Green-Gauss', 'adaptation', 'adaptations']"
Energy Efficiency,"new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_solution_ini = ""ite%d_ini.dat"" % global_iter; os.rename(current_solution, current_solution_ini); ; config_cfd.MESH_FILENAME = current_mesh; config_cfd.CONV_FILENAME = ""ite%d_history"" % global_iter; config_cfd.SOLUTION_FLOW_FILENAME = current_solution_ini; config_cfd.RESTART_FLOW_FILENAME = current_solution; ; config_cfd.RESIDUAL_REDUCTION = float(adap_res[iSiz]); config_cfd.EXT_ITER = int(adap_ext_iter[iSiz]); ; config_cfd.WRT_BINARY_RESTART = ""NO""; config_cfd.READ_BINARY_RESTART = ""NO""; ; SU2_CFD(config_cfd); ; if not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : SU2_CFD Failed.\n""; ; ; except:; sys.stdout = sav_stdout; sys.stderr = sav_stderr; raise; ; sys.stdout = sav_stdout; sys.stderr = sav_stderr; ; ; #--- Print convergence history; ; plot_format = config_cfd['OUTPUT_FORMAT']; plot_extension = su2io.get_extension(plot_format); history_filename = config_cfd['CONV_FILENAME'] + plot_extension; ; history = su2io.read_history(history_filename); ; res_flow = history['Res_Flow[0]']; res_cvg = max(res_flow)-min(res_flow); ; del history; ; sys.stdout.write(' %s CFD done. Residual convergence %.2lf orders of magnitude\n' % (pad_nul, res_cvg)); ; ; to_remove = [""current.itp.solb"", config_amg['mesh_in'], config_amg['mesh_out'], config_amg['sol_in'],config_amg['itp_sol_in']]; for fil in to_remove:; if os.path.exists(fil) : os.remove(fil); ; global_iter += 1; ; os.rename(current_solution,os.path.join(cwd,config.RESTART_FLOW_FILENAME)); os.rename(current_mesh,os.path.join(cwd,config.MESH_OUT_FILENAME)); ; sys.stdout.write(""\nMesh adaptation successfully ended. Results files:\n""); sys.stdout.write(""%s\n%s\n\n"" % (config.MESH_OUT_FILENAME,config.RESTART_FLOW_FILENAME))",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:12755,adapt,adaptation,12755,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['adapt'],['adaptation']
Energy Efficiency,"ntax);; - On each insertion we have to first look for the block by traversing the `colInd` (column index) array, we can instead map the diagonal blocks to the corresponding points and the off-diagonal blocks to the edge (remember we insert ""by the edge"").; - We can fuse numerics (possibly using the [decorator](https://en.wikipedia.org/wiki/Decorator_pattern) pattern) so that we write to the matrix only once per iteration, which means we only need to clear the diagonal blocks and not the entire matrix because we can **set** the off-diagonals instead of **updating** them. Assuming these modification our dummy loop becomes; ```c++; void testLoop2(const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const double* blk_i, const double* blk_j,; SparseMatrix& matrix); {; matrix.setDiagZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. matrix.updateBlocks(iEdge, iPoint, jPoint, blk_i, blk_j);; }; }; ```; where; ```c++; STRONGINLINE void SparseMatrix::updateBlocks(size_t edge,; size_t row, size_t col, const double* blk_i, const double* blk_j); {; size_t bii = diagMap[row], bij = edgeMap[edge].first,; bjj = diagMap[col], bji = edgeMap[edge].second;. #pragma omp simd; for(size_t k=0; k<blkSz; ++k); {; coeffs[bii+k] += blk_i[k]; coeffs[bij+k] = +blk_j[k];; coeffs[bji+k] = -blk_i[k]; coeffs[bjj+k] -= blk_j[k];; }; }; ```; This is **47% faster**, which for a memory bound task is massive!; Yes, this does increase the memory footprint a bit (makes CSysMatrix 4% larger for a 3D problem) but I can get that back by sharing sparsity patterns and maps across turbulence and bulk flow (I think @talbring was already working on this in the template linear solver branch he had starte",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:3612,schedul,schedule,3612,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['schedul'],['schedule']
Energy Efficiency,"nts to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % Invert the background mesh orientation; % Sometimes required for 3D meshes, since AMG doe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1111,adapt,adaptation,1111,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341,1,['adapt'],['adaptation']
Energy Efficiency,"o so atomically (this is essentially an operations that always goes through main memory and forces cache coherency) or it needs to acquire a *lock* for the point it is writing to, if it fails to acquire the *lock* (because another thread has it) it needs to wait. None of these is without drawbacks.; - **Coloring** reduces temporal locality, edges are sorted in increasing order of the point indices to reduce cache misses, this means small groups of contiguous edges will share the same ""iPoint"", coloring single edges destroys this. Furthermore coloring either requires edges to be re-sorted by color, or if the edge indices of each color are instead kept in arrays, performance will suffer due to increased indirection which confounds the hardware pre-fetcher.; This can be mitigated to some extent by coloring groups of edges, groups of edges of the same color can be processed simultaneously, but within each group edges need to be processed serially. However grouping will reduce how much parallelism can be exploited within each color.; - **Gather to scatter** will in general use more memory due to the intermediate variables and extra adjacency information needed. If the entire algorithm is transformed performance may suffer as some computations may have to be repeated.; However, some reductions are possible without intermediate variables, for example when assembling the system matrix for implicit schemes only the diagonal entries can result in race conditions, now it just so happens that each diagonal entry is equal to the negated corresponding column sum.; - **Atomics** are terrible for the performance of code that writes frequently to memory (i.e. bandwidth-bound code), they do not increase the memory footprint and so make sense for compute-bound code.; Bugs due to a missing atomic can be very hard to debug (but any race condition is). Coloring is what one sees most in the literature, and yet I lean towards gather-to-scatter. Fewer things can go wrong with it as it is ea",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:5733,reduce,reduce,5733,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['reduce'],['reduce']
Energy Efficiency,"oj_i <= 0.0) {; lim_i = phiMin(iPoint,iVar);; proj_i = min(proj_i, -eps);; }; ```; This is the bit of code that selects the right delta based on the sign of the projection and avoids division by zero, this less readable version does the same with one branch instead of three, simplifying ""if"" statements is essential for vectorization, so to make the comparison fair I used the same strategy in the scalar code. To make this post shorter I will show the SIMD and parallel version of the code right away. Trying to process multiple edges instead of multiple variables has all the problems I mentioned for the gradients, so again we use the trick of templating on the number of variables.; ```C++; template<size_t nVar>; void computeLimiters_impl(size_t nPoint,; size_t nDim,; const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; Matrix& phiMax,; Matrix& phiMin,; Matrix& limiter); {; // initialize; #pragma omp parallel for schedule(dynamic,TARGET_CHUNK_SIZE); for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; phiMax(iPoint,iVar) = phi(iPoint,iVar);; phiMin(iPoint,iVar) = phi(iPoint,iVar);; limiter(iPoint,iVar) = 2.0;; }; }. // find min and max neighbor; for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; #if SORT_BY_COLOR==1; size_t iEdge = k;; #else; size_t iEdge = edgeIdx[k];; #endif. size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. // some hand-holding needed for simd min/max with gcc,; // one of the min/max operands needs to be on the stack; // (so the compiler knows the two do not overlap?); double phi_i[nVar], phi_j[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; phi_i[iVar] = phi(iPoint,iVar);; phi_j",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:3892,schedul,schedule,3892,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['schedul'],['schedule']
Energy Efficiency,ons.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5605,adapt,adapt,5605,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['adapt'],['adapt']
Energy Efficiency,"onstructor of CSysMatrix by using 'new', and calling the StiffMatrix.Initialize() method, for what I see in matrix_structure.cpp. Also, StiffMatrix is a sparse matrix (nDim x nPoint) x (nDim x nPoint), which must be allocated correctly using the Initialize method to avoid carrying around lots of zeros. With regards to the other point, I think that it is interesting to use the Initialize features of the CSysVector and CSysMatrix in the constructor of the class, just as it happens in the rest of the solver classes (see for example solver_direct_mean, line 261, where the Jacobian of the problem is initialized using a Jacobian.Initialize() call in the constructor). As far as I see it, the mesh update problem is nothing but a copy of the linear elasticity problem, so maintaining the parallelism with all the other solvers in the code (and, in particular, with the structural solver) may be interesting. . Moreover, by allocating the memory in the constructor using StiffMatrix.Initialize(nPoint, nPointDomain...) we make sure we can use the linear solvers in parallel by building a compliant sparse matrix. And if we allocate the stiffness matrix in the constructor, it makes sense to also do so with the vectors of the problem. Again, this maintains the similarities with the rest of the solvers. Finally, in my particular case I call the SetVolume_Deformation() function at least as many times as I do with the fluid and the structural solver. The mesh deformation is a third field in the problem, and by initializing the structure at the beginning of the simulation we can reuse the same spaces in memory along the whole of it, given that (at least in unsteady cases) the mesh update routines may be called several times. This way we avoid to be continuously allocating/deallocating memory. Also, this is useful to have a more accurate measure of the amount of memory we will be using along the simulation right at the beginning of the calculation - although peaks of memory are unavoidable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-148017482:1516,allocate,allocate,1516,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-148017482,1,['allocate'],['allocate']
Energy Efficiency,"or]; k<colorStart[color+1]; ++k); {; #if SORT_BY_COLOR==1; size_t iEdge = k;; #else; size_t iEdge = edgeIdx[k];; #endif. size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. // some hand-holding needed for simd min/max with gcc,; // one of the min/max operands needs to be on the stack; // (so the compiler knows the two do not overlap?); double phi_i[nVar], phi_j[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; phi_i[iVar] = phi(iPoint,iVar);; phi_j[iVar] = phi(jPoint,iVar);; }. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; phiMax(iPoint,iVar) = max(phiMax(iPoint,iVar), phi_j[iVar]);; phiMin(iPoint,iVar) = min(phiMin(iPoint,iVar), phi_j[iVar]);; phiMax(jPoint,iVar) = max(phiMax(jPoint,iVar), phi_i[iVar]);; phiMin(jPoint,iVar) = min(phiMin(jPoint,iVar), phi_i[iVar]);; }; }. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; #if SORT_BY_COLOR==1; size_t iEdge = k;; #else; size_t iEdge = edgeIdx[k];; #endif. size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. // i to j vector; double d_ij[3] = {0.0, 0.0, 0.0};. for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = 0.5*(coords(jPoint,iDim)-coords(iPoint,iDim));. // projections; double proj_i[nVar], proj_j[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); proj_i[iVar] = proj_j[iVar] = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; proj_i[iVar] += d_ij[iDim]*grad(iPoint,iVar,iDim);; proj_j[iVar] -= d_ij[iDim]*grad(jPoint,iVar,iDim);; }; }. // choose the ""right"" delta based on sign of projection; // and avoid division by zero; double lim_i[nVar], lim_j[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; lim_i[iVar] = phiMax(iPoint,iVar);; lim_j[iVar] = phiMax(jPoint,iVar);; }. const double eps = numeric_limit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:5259,schedul,schedule,5259,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['schedul'],['schedule']
Energy Efficiency,"orted in increasing order of the point indices to reduce cache misses, this means small groups of contiguous edges will share the same ""iPoint"", coloring single edges destroys this. Furthermore coloring either requires edges to be re-sorted by color, or if the edge indices of each color are instead kept in arrays, performance will suffer due to increased indirection which confounds the hardware pre-fetcher.; This can be mitigated to some extent by coloring groups of edges, groups of edges of the same color can be processed simultaneously, but within each group edges need to be processed serially. However grouping will reduce how much parallelism can be exploited within each color.; - **Gather to scatter** will in general use more memory due to the intermediate variables and extra adjacency information needed. If the entire algorithm is transformed performance may suffer as some computations may have to be repeated.; However, some reductions are possible without intermediate variables, for example when assembling the system matrix for implicit schemes only the diagonal entries can result in race conditions, now it just so happens that each diagonal entry is equal to the negated corresponding column sum.; - **Atomics** are terrible for the performance of code that writes frequently to memory (i.e. bandwidth-bound code), they do not increase the memory footprint and so make sense for compute-bound code.; Bugs due to a missing atomic can be very hard to debug (but any race condition is). Coloring is what one sees most in the literature, and yet I lean towards gather-to-scatter. Fewer things can go wrong with it as it is easy to understand, one gets the maximum amount of parallelism. I will now take two familiar routines, computing gradients (Green-Gauss) and limiters, vectorize / parallelize them in different ways, and measure relative performance to illustrate some of these key points introduced here. There will be C++ snipets and there will be some x86 assembly too :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:6875,Green,Green-Gauss,6875,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,1,['Green'],['Green-Gauss']
Energy Efficiency,"ped. Now, despite some small differences between the old SU2 version and the new with enforced old boundary conditions (that are due, among other things, to small changes in the mesh deformation algorithm that I have noticed) you can notice the big difference in the application of the two boundary conditions. . I also attach a couple zooms of the signal: first at time 0 which gives the GAF for the steady initial simulation and second for the converged values. It can be seen how (even if less important) some discrepancies are found here as well.; ![Time_zoom](https://user-images.githubusercontent.com/23583209/72832115-869ce400-3c84-11ea-93cb-dffeba31878c.jpg); ![Time_zoom2](https://user-images.githubusercontent.com/23583209/72832121-8a306b00-3c84-11ea-8303-b55888b8fb38.jpg). To check which one of the two time evolution is physically representative you can observe the GAF in the frequency domain. The following figure plots module of the Fourier transform of the preceding signals together with the DLM reference as a function of the reduced frequency (proportional to omega/V_inf). ; ![Frequency](https://user-images.githubusercontent.com/23583209/72832220-be0b9080-3c84-11ea-99da-3bfc5d31aa5b.jpg). Old SU2 has been validated vs DLM in another test which I don't show here for sake of brevity and differences with respect to DLM are justified by the thickness of the ONERA M6 and high speed. It can be seen how new SU2 with old boundary conditions gives back an almost identical result to old SU2 (my reference). Anyway for the new boundary conditions values are too distant from the reference.; Little note: the Module of the GAF in frequency domain at K=0 is proportional to the difference of the value of the gaf in time domain between t=0 and t=infinite: namely GAF(t=infinite) - GAG(t=0). The same value sums other coefficients due to the unsteadiness of the signal at K different than 0. We can see how for both the boundary conditions the value approximates the original one (as w",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-576826669:2482,reduce,reduced,2482,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-576826669,1,['reduce'],['reduced']
Energy Efficiency,"r with me I am almost done, and I will summarise the results in the form of a proposal (I'll probably put that at the top of the first post). ## ""Real"" numerics; Real in the sense that the flop to byte ratio (amount of computation per amount of data) is comparable to a real numerics scheme, say Roe for example.; The simplest way to do this is to combine the example code for MUSCL reconstruction with the matrix updates code and add something compute heavy between input and output, e.g. a number of matrix-matrix multiplications, here is some pseudo code for what I did:; ```c++; void computeResidual(size_t nVar,; size_t nDim,; const vector<Connectivity<SIMDLEN> >& connectivities,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; const Matrix& limiter,; RowMajorMatrix& residual,; SparseMatrix& matrix); {; using FltVec = Array<double,SIMDLEN>;. residual.setZero();; matrix.setDiagZero();. size_t color = 0;; for(const auto& connectivity : connectivities); {; #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t iEdge=0; iEdge<connectivity.size(); iEdge+=SIMDLEN); {; auto iPoint = connectivity.first_vec(iEdge);; auto jPoint = connectivity.second_vec(iEdge);. FltVec d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = (coords.getVec(jPoint,iDim)-coords.getVec(iPoint,iDim))*0.5;. FltVec phiL[MAXNVAR], phiR[MAXNVAR], flux[MAXNVAR],; blk_i[MAXNVAR*MAXNVAR],; blk_j[MAXNVAR*MAXNVAR];. for(size_t iVar=0; iVar<nVar; ++iVar); {; // Reconstruction goes here. flux[iVar] = (phiL[iVar]+phiR[iVar])*0.5;; }. // some silly way to make the Jacobians depend on the reconstruction; for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t jVar=0; jVar<nVar; ++jVar); blk_j[iVar*nVar+jVar] = (phiL[iVar]*phiR[jVar]-phiL[jVar]*phiR[iVar])*0.5;. // the matrix-matrix multiplications; for(size_t i=0; i<WORKITERS; ++i) {; // blk_i = blk_j * blk_j; for(size_t k=0; k<nVar*nVar; ++k) blk_j[k] = blk_i[k];; }. // something akin to a dissipation term; for(size_t iVar",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539177957:1070,schedul,schedule,1070,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539177957,2,['schedul'],['schedule']
Energy Efficiency,"s[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d - Mesh size coefficient %.1lf\n"" % (iSiz+1, len(mesh_sizes), mesh_size)); ; for iSub in range(nSub):; ; config_amg['size'] = mesh_size; config_amg['amg_log'] = 'ite%d.amg.stdout' % (global_iter); ; # Prints; pad_cpt = (""(%d/%d)"" % (iSub+1, nSub)).ljust(9); pad_nul = """".ljust(9); ; if not amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : Can't find mesh.\n""; ; #--- Get sensor; ; sensor = su2amg.create_sensor(mesh, adap_sensor); su2amg.write_solution(""current_sensor.solb"", sensor); ; if not os.path.exists(""current_sensor.solb""):; raise RuntimeError , ""\n##ERROR : Can't find adap sensor.\n""; ; #--- Run amg; ; sys.stdout.write(""Running amg. Log : %s\n"" % config_amg['amg_log']); ; if os.path.exists(""current.itp.solb""):; os.remove(""current.itp.solb""); ; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:9018,sensor,sensor,9018,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['sensor'],['sensor']
Energy Efficiency,"sensor.solb'; config_amg['itp_sol_in'] = 'current.solb'; config_amg['adap_source'] = ''; ; if 'ADAP_BACK' in config:; config_amg['adap_back'] = os.path.join(cwd,config['ADAP_BACK']); #os.symlink(os.path.join(cwd, config.ADAP_BACK), config.ADAP_BACK); else:; config_amg['adap_back'] = config['MESH_FILENAME']; ; print ""config_amg : "" + config_amg['adap_back']; back_name, back_extension = os.path.splitext(config_amg['adap_back']); ; if not os.path.exists(config_amg['adap_back']):; raise RuntimeError , ""\n\n##ERROR : Can't find back mesh: %s.\n\n"" % config_amg['adap_back']; ; if back_extension == "".su2"":; ; #pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); print ""skipping back mesh ...""; #import _amgio as amgio; #amgio.py_ConvertSU2toInria(config_amg['adap_back'], """", ""amg_back""); #config_amg['adap_back'] = ""amg_back.meshb""; ; if 'ADAP_SOURCE' in config:; config_amg['adap_source'] = os.path.join(cwd,config['ADAP_SOURCE']); ; global_iter = 0; ; sys.stdout.write(""\nStarting mesh adaptation process.\n""); ; for iSiz in range(len(mesh_sizes)):; ; mesh_size = int(mesh_sizes[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d - Mesh size coefficient %.1lf\n"" % (iSiz+1, len(mesh_sizes), mesh_size)); ; for iSub in range(nSub):; ; config_amg['size'] = mesh_size; config_amg['amg_log'] = 'ite%d.amg.stdout' % (global_iter); ; # Prints; pad_cpt = (""(%d/%d)"" % (iSub+1, nSub)).ljust(9); pad_nul = """".ljust(9); ; if not amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : Can't find mesh.\n""; ; #--- Get sensor; ; sensor = su2amg.create_sensor(mesh, adap_sensor); su2amg.write_solution(""current_sen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:7901,adapt,adaptation,7901,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['adapt'],['adaptation']
Energy Efficiency,"sible idea until we get to areas of the code where different primitives require different treatment, that and the fact that the number of variables might not fit evenly in the number of lanes can lead to very tricky and non-generic code. Nevertheless if the same code were to be applied to e.g. 4 solution variables, this strategy would likely perform better as it avoids the pesky gather/scatter operations.; Processing multiple geometric primitives can make full utilization of whatever register size (important on GPU's), the code is just as readable (as I hope to show), but gather/scatter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writes to 2 locations (gather / scatter access pattern, not to be confused with the instructions) processing multiple edges at the same time can therefore result in race conditions where multiple threads try to update the data of the same point.; There are 3 ways to address this:; - **Coloring**: Edges are colored (grouped) such that edges of the same color have no risk of race conditions, i.e. each endpoint is referenced only once per color (this definition gives you the basis of a greedy ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:3247,efficient,efficient,3247,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['efficient'],['efficient']
Energy Efficiency,"size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; #if SORT_BY_COLOR==1; size_t iEdge = k;; #else; size_t iEdge = edgeIdx[k];; #endif. size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;; ```; Apologies for the macro but it is just to illustrate that if we re-sort edge data after coloring the edge index is the loop index, otherwise the edge indices for each color need to be stored in a separate array.; Note that for each edge loop we first loop over colors, then over same-color edges, it is this inner loop that can run in parallel in chunk sizes that are multiple of the group size considered during coloring. There is some runtime cost on entry to every #omp parallel section, with coloring we enter one such section once by color. I mentioned in the introduction coloring reduces locality and therefore performance, here is the effect of color group size on the execution time of the scalar code on one thread:; ![image](https://user-images.githubusercontent.com/38071223/64686801-2e0d3d00-d481-11e9-82a0-c56e5554cd83.png); The hassle-free option of not sorting by color ""never"" recovers the performance of the base algorithm, things are even worse for the SIMD version where even at group size of 8192 with re-sorting the slowdown is 14%. Running the edge-loop version on 4 cores (8192 group + sorting) we get speedups (relative to reference) of **1.98** and **2.04** for the scalar and SIMD versions respectively (yes I quadruple checked).; If you are keeping track of the number two things should surprise you, the first is that there is no difference between scalar and SIMD now (the vector instruction are still there though), the second is that 4 cores give only a 2x speedup. The reason for both is: the implementation is very memory-bound, and so throwing more compute at it, either in the form of more cores or more lanes, does",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:13769,reduce,reduces,13769,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['reduce'],['reduces']
Energy Efficiency,"ss.\n""); ; for iSiz in range(len(mesh_sizes)):; ; mesh_size = int(mesh_sizes[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d - Mesh size coefficient %.1lf\n"" % (iSiz+1, len(mesh_sizes), mesh_size)); ; for iSub in range(nSub):; ; config_amg['size'] = mesh_size; config_amg['amg_log'] = 'ite%d.amg.stdout' % (global_iter); ; # Prints; pad_cpt = (""(%d/%d)"" % (iSub+1, nSub)).ljust(9); pad_nul = """".ljust(9); ; if not amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : Can't find mesh.\n""; ; #--- Get sensor; ; sensor = su2amg.create_sensor(mesh, adap_sensor); su2amg.write_solution(""current_sensor.solb"", sensor); ; if not os.path.exists(""current_sensor.solb""):; raise RuntimeError , ""\n##ERROR : Can't find adap sensor.\n""; ; #--- Run amg; ; sys.stdout.write(""Running amg. Log : %s\n"" % config_amg['amg_log']); ; if os.path.exists(""current.itp.solb""):; os.remove(""current.itp.solb""); ; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:8910,sensor,sensor,8910,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['sensor'],['sensor']
Energy Efficiency,"t the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2240,schedul,scheduling,2240,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['schedul'],['scheduling']
Energy Efficiency,"t trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then we are left with this initial transient phase that differs. Of course if there is more evidence that one or the other version produces physically ""better"" results I would love to see that. Until then, both initial oscillations are equally correct/uncorrect in my opinion. [I'll add a few words about the adjoint here later]. [I'll add the idea of an FSI case of @cvencro here later where the initial phase has a major impact]; Consider an FSI computation of an airfoil where the trailing edge can exhibit flutter (periodic up-and-down-movement of the trailing edge) in certain flow regimes. Now if during the initial transient the forces on the airfoil are higher than in the converged state then the fluttering can be excited where the initial transient can be seen as an activation energy. If you were to e.g. ramp up flow speed/conditions slowly up to the same magnitude as before one might end up without fluttering. So based on the flow history there might exist multiple ""stable"" states. Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563314747:2786,energy,energy,2786,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747,2,['energy'],['energy']
Energy Efficiency,"tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Questions. * How do developers feel about adding unit tests to SU2?; * If a unit-testing framework were added to SU2, would you actually use it?; * Do developers have a preference (or experience with) any of the unit testing frameworks?; * Should unit tests be expected when submitting PRs?. ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/698?email_source=notifications&email_token=AA5FFRG5U3Z55N4W2XWQED3PY3LJ5A5CNFSM4HTDQXQKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4GXUGGLA>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AA5FFRHOPE2MUJ2Z5RRV4HTPY3LJ5ANCNFSM4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4849,power,powerful,4849,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['power'],['powerful']
Energy Efficiency,"th.join(cwd,config['ADAP_SOURCE']); ; global_iter = 0; ; sys.stdout.write(""\nStarting mesh adaptation process.\n""); ; for iSiz in range(len(mesh_sizes)):; ; mesh_size = int(mesh_sizes[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d - Mesh size coefficient %.1lf\n"" % (iSiz+1, len(mesh_sizes), mesh_size)); ; for iSub in range(nSub):; ; config_amg['size'] = mesh_size; config_amg['amg_log'] = 'ite%d.amg.stdout' % (global_iter); ; # Prints; pad_cpt = (""(%d/%d)"" % (iSub+1, nSub)).ljust(9); pad_nul = """".ljust(9); ; if not amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : Can't find mesh.\n""; ; #--- Get sensor; ; sensor = su2amg.create_sensor(mesh, adap_sensor); su2amg.write_solution(""current_sensor.solb"", sensor); ; if not os.path.exists(""current_sensor.solb""):; raise RuntimeError , ""\n##ERROR : Can't find adap sensor.\n""; ; #--- Run amg; ; sys.stdout.write(""Running amg. Log : %s\n"" % config_amg['amg_log']); ; if os.path.exists(""current.itp.solb""):; os.remove(""current.itp.solb""); ; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:8805,sensor,sensor,8805,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,2,['sensor'],['sensor']
Energy Efficiency,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2156,adapt,adaptation,2156,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['adapt'],['adaptation']
Energy Efficiency,"the pitching motion re-included, and looked at the periodic behaviour. [pitching_NACA64A010.zip](https://github.com/su2code/SU2/files/3963760/pitching_NACA64A010.zip). ![NACA64A010](https://user-images.githubusercontent.com/33747655/70848141-f7223b00-1e64-11ea-876c-0751b187fea4.png). Using the Euler wall boundary condition, the results still match exactly to @economon 's thesis (no real surprise as I suspect the code hasn't changed much for this comparison) and this agrees pretty closely with other inviscid reference results like Jamesons's unsteady flow past airfoils. With the symmetry plane, the results differ from the other inviscid solutions but the agreement to the experiment is better. I couldn't get hold of reference drag or moment results to compare against, therefore the comparison is only against lift. I also tested the pitching NACA 0012 airfoil using Batina's ""Unsteady Euler Airfoil Solutions Using Unstructured Dynamic Meshes"" as reference. In this case with the NACA 0012 airfoil, the reduced frequency (k=0.0814) is lower than the previous case and the amplitude is slightly higher at 2.51deg. . [pitching_NACA0012.zip](https://github.com/su2code/SU2/files/3963762/pitching_NACA0012.zip); ![NACA0012_CL](https://user-images.githubusercontent.com/33747655/70848145-115c1900-1e65-11ea-9f5d-7e73e6ac349e.png). Once again, using reference from computational and experimental results, the lift results are very similar for both boundary conditions. For this case, moment results were also available. . ![NACA0012_CM](https://user-images.githubusercontent.com/33747655/70848146-115c1900-1e65-11ea-9e24-4c55550ee945.png). The sign convention was inverted in the paper and neither BC matched exactly to the reference which had a coarser mesh than the one used here but the Euler wall looks to be in better agreement with the reference and captures the overall shape. I've attached the case files for this as well and it would be interesting to see the results when run with the cha",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-565716260:2070,reduce,reduced,2070,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565716260,1,['reduce'],['reduced']
Energy Efficiency,"tps://github.com/su2code/SU2/actions/runs/8536216515/job/23386086770?pr=2246#step:7:2062). ```; ==2308==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60f0008c96a0 at pc 0x558b6435ae51 bp 0x7ffc1cebf680 sp 0x7ffc1cebf670; READ of size 8 at 0x60f0008c96a0 thread T0; #0 0x558b6435ae50 in CInterface::PreprocessAverage(CGeometry*, CGeometry*, CConfig const*, CConfig const*, unsigned short) ../SU2_CFD/src/interfaces/CInterface.cpp:314; #1 0x558b6373d23a in CDriver::PreprocessTurbomachinery(CConfig**, CGeometry****, CSolver*****, CInterface***, bool) ../SU2_CFD/src/drivers/CDriver.cpp:2725; #2 0x558b63770d76 in CDriver::CDriver(char*, unsigned short, int, bool) ../SU2_CFD/src/drivers/CDriver.cpp:250; #3 0x558b637f54c2 in CMultizoneDriver::CMultizoneDriver(char*, unsigned short, int) ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:35; #4 0x558b63615b53 in main ../SU2_CFD/src/SU2_CFD.cpp:135; #5 0x7f0d8c503082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082); #6 0x558b6367005d in _start (/github/workspace/install/bin/SU2_CFD+0x63405d). 0x60f0008c96a0 is located 0 bytes to the right of 176-byte region [0x60f0008c95f0,0x60f0008c96a0); allocated by thread T0 here:; #0 0x7f0d8ed00787 in operator new[](unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:107; #1 0x558b656d1590 in CPhysicalGeometry::ComputeNSpan(CConfig*, unsigned short, unsigned short, bool) ../Common/src/geometry/CPhysicalGeometry.cpp:4806; #2 0x558b6373c1df in CDriver::PreprocessTurbomachinery(CConfig**, CGeometry****, CSolver*****, CInterface***, bool) ../SU2_CFD/src/drivers/CDriver.cpp:2649; #3 0x558b63770d76 in CDriver::CDriver(char*, unsigned short, int, bool) ../SU2_CFD/src/drivers/CDriver.cpp:250; #4 0x558b637f54c2 in CMultizoneDriver::CMultizoneDriver(char*, unsigned short, int) ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:35; #5 0x558b63615b53 in main ../SU2_CFD/src/SU2_CFD.cpp:135; #6 0x7f0d8c503082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082); ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720:1874,allocate,allocated,1874,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720,1,['allocate'],['allocated']
Energy Efficiency,"ts in config_structure to make doxygen pretty; - Bug fixing; - Merge branch 'develop'; - EA in ft^2; - further update to config; - Merge remote-tracking branch 'upstream/develop' into upstream_dev; - Minor changes; - Updated NF BC; - More adjustments; - Small update; - Final update Nearfield BC; - added massflowrate as option for cauchy criteria, more config file comments; - Merge remote-tracking branch 'upstream/develop' into upstream_dev; - paraview output modified/added back in for current version for SU2_DEF; - Merge branch 'develop' into feature_dualoutput; - Removed deprecated options from quicstart config.; - Working version of the compressible actuator disk; - Updated fixed CL mode.; - Very minor change; - Merge branch 'develop' into feature_dualoutput; - Final push to 3.2.9; - Merge branch 'develop'; - Minor change; - Minor change; - Small change; - Minor change; - Bug fixing: unsigned short val_vertex --> unsigned long val_vertex; - CFL adapt now works for adjoint problems; - Merge branch 'develop' into feature_dualoutput; - Fixing a typo; - Fix in the Euler BC for grid movement cases; - merging and fixing conflicts bwtn feature_dealloc and develop; - dealloc; - Time spectral fix.; - Merging some recent bug fixes from master into the develop branch to keep nsync.; - Merge branch 'feature_gridvel_fix' into develop; - Merge remote-tracking branch 'upstream/develop' into feature_Deallocation; - correcting issues, adding more deallocation; - fixed uninitialized pointers in CConfig; - further deallocation; - some corrections needed to pass reg tests; - fixed some dealloc issues that caused errors in euler adj; - modifications needed to (mostly) pass reg tests; all run w/o segfault. File Changes; - D Articles/AIAA_2013-0287.pdf (0) ; - D Articles/AIAA_2014-0243.pdf (0) ; - M Common/doc/docmain.hpp (46) ; - M Common/include/config_structure.hpp (1038) ; - M Common/include/config_structure.inl (191) ; - M Common/include/dual_grid_structure.hpp (43) ; - M Common/inc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:9856,adapt,adapt,9856,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['adapt'],['adapt']
Energy Efficiency,"will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; # Lesser General Public License for more details.; #; # You should have received a copy of the GNU Lesser General Public; # License along with SU2. If not, see <http://www.gnu.org/licenses/>. import os, sys, shutil, copy, time; import numpy as np. from .. import io as su2io; from .. import amginria as su2amg; from interface import CFD as SU2_CFD. try :; import pyamg ; except:; sys.stderr.write(""## ERROR : Unable to import pyamg module.\n""); sys.exit(1). def amg ( config , kind='' ):; ; sys.stdout.write(""SU2-AMG Anisotropic Mesh Adaptation\n""); ; #--- TODO: Check pyamg version compatibility; ; #--- Check config options related to mesh adaptation; ; adap_options = ['ADAP_SIZES', 'ADAP_SUBITE', 'ADAP_SENSOR', \; 'ADAP_BACK', 'ADAP_HMAX', 'ADAP_HMIN', 'ADAP_HGRAD', 'ADAP_RESIDUAL_REDUCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsisten",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:2597,Adapt,Adaptation,2597,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,2,"['Adapt', 'adapt']","['Adaptation', 'adaptation']"
Energy Efficiency,xcbkptlist (0) ; - I SU2_IDE/Xcode/SU2_CFD.xcodeproj/xcuserdata/fpalacios.xcuserdatad/xcschemes/SU2_CFD.xcscheme (0) ; - I SU2_IDE/Xcode/SU2_DEF.xcodeproj/project.pbxproj (0) ; - I SU2_IDE/Xcode/SU2_DOT.xcodeproj/project.xcworkspace/xcshareddata/SU2_DOT.xccheckout (0) ; - I SU2_IDE/Xcode/SU2_GEO.xcodeproj/project.xcworkspace/xcshareddata/SU2_GEO.xccheckout (0) ; - I SU2_IDE/Xcode/SU2_MSH.xcodeproj/project.pbxproj (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/fpalacios.mode1v3 (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/fpalacios.pbxuser (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/project.pbxproj (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/project.xcworkspace/contents.xcworkspacedata (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/project.xcworkspace/xcshareddata/SU2_DDC.xccheckout (0) ; - I SU2_IDE/Xcode/SU2_SOL.xcodeproj/project.pbxproj (0) ; - I SU2_IDE/Xcode/SU2_SOL.xcodeproj/xcuserdata/fpalacios.xcuserdatad/xcschemes/SU2_SOL.xcscheme (0) ; - I SU2_MSH/include/SU2_MSH.hpp (0) ; - I SU2_MSH/obj/Makefile.am (0) ; - I SU2_MSH/obj/Makefile.in (0) ; - I SU2_MSH/src/SU2_MSH.cpp (0) ; - D SU2_PRT/bin/.gitignore (0) ; - D SU2_PRT/include/SU2_PRT.hpp (0) ; - D SU2_PRT/obj/Makefile.am (0) ; - I SU2_PRT/obj/Makefile.in (0) ; - D SU2_PRT/src/SU2_PRT.cpp (0) ; - D SU2_PY/2DChannel.py (0) ; - D SU2_PY/3DChannel.py (0) ; - I SU2_PY/Makefile.am (0) ; - I SU2_PY/Makefile.in (0) ; - I SU2_PY/SU2/**init**.py (0) ; - I SU2_PY/SU2/eval/design.py (0) ; - I SU2_PY/SU2/eval/functions.py (0) ; - I SU2_PY/SU2/eval/gradients.py (0) ; - I SU2_PY/SU2/io/config.py (0) ; - I SU2_PY/SU2/io/config_options.py (0) ; - I SU2_PY/SU2/io/data.py (0) ; - I SU2_PY/SU2/io/filelock.py (0) ; - I SU2_PY/SU2/io/redirect.py (0) ; - I SU2_PY/SU2/io/state.py (0) ; - I SU2_PY/SU2/io/tools.py (0) ; - I SU2_PY/SU2/mesh/adapt.py (0) ; - I SU2_PY/SU2/mesh/tools.py (0) . Patch Links:; - https://github.com/su2code/SU2/pull/174.patch; - https://github.com/su2code/SU2/pull/174.diff; ‚Äî; Reply to this email directly or view it on GitHub.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:27627,adapt,adapt,27627,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['adapt'],['adapt']
Energy Efficiency,y/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6422,adapt,adaptation,6422,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['adapt'],['adaptation']
Integrability," ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5872,depend,dependency,5872,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['depend'],['dependency']
Integrability," (Marker = farfield).; 3382 boundary elements in index 2 (Marker = inner_nearfield).; 19738 boundary elements in index 3 (Marker = symmetry).; 3382 boundary elements in index 4 (Marker = outer_nearfield).; Calling ParMETIS...; Traceback (most recent call last):; File ""/home/app/SU2/install/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 61, in main; options.compute ); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; RuntimeError:; Command = mpirun -n 12 /home/app/SU2/install/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '15'; [ubuntu:8553] *** An error occurred in MPI_Wait; [ubuntu:8553] *** on communicator MPI COMMUNICATOR 3 DUP FROM 0; [ubuntu:8553] *** MPI_ERR_TRUNCATE: message truncated; [ubuntu:8553] *** MPI_ERRORS_ARE_FATAL: your MPI job will now abort; --------------------------------------------------------------------------; mpirun has exited due to process rank 9 with PID 8554 on; node ubuntu exiting improperly. There are two reasons this could occur:. 1. this process did not call ""init"" before exiting, but others in; the job did. This can cause a job to hang indefinitely while it waits; for all processes to call ""init"". By rule, if one process calls ""init"",; then ALL processes must call ""init"" prior to termination. 2. this process called ""init"", but exited without calling ""finalize"".; By rule, all processes that call ""init"" MUST call ""finalize"" prior to; exiting or it will be considered an ""abnormal termination"". This may have caused other processes in the application to be; terminated by signals sent by mpirun (as reported here).; --------------------------------------------------------------------------; [ubuntu:08544] 1 more process has sent help message help-mpi-errors.txt / mpi_errors_are_fatal; [ubuntu:08544] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485283:2411,message,message,2411,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485283,2,['message'],"['message', 'messages']"
Integrability," - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working version with ParMETIS. Fixed bug in global index. Now clean up and testing...; - Cleaned version of ParMETIS routines with better console output during partitioning.; - Small bug in initial element division.; - Made arrays in ParMETIS call dynamic.; - Fixed compiler warnings and added MPI directives so that the pure serial code works with the ParMETIS routines.; - Bootstrap on zion.; - Added some typecasts. Still tracking down a memory problem...; - Critical bug fix for vtxdist array.; - Partial fix; - More MPI improvements.; - Fixing a bug in SU2_DEF; - Updated BC_ActDisk_Boundary (MPI); - Merge remote-tracking branch 'upstream/develop' into develop; - changing solidboundary setting to be heatflux OR euler etc instead of AND, also working on doxygen documentation; - Dynamic allocation for some marker-related arrays.; - visualize part taken out to match upstream/dev; - Collection of improvements; - Release 3.2.7; - Fixing LOW_MEMORY_OUTPUT; - Updated LOW_MEMORY_OUTPUT option; - Updated configure.ac; - After autoconf; - Updated MPI; - Updated BC_Engine_Exhaust and BC_Engine_Bleed; - Small change; - Fixing",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:2105,rout,routines,2105,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['rout'],['routines']
Integrability," --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unrecognized option '-qversion'; gcc: no input files; configure:3999: $? = 1; configure:4003: checking whether we are using the GNU C compiler; configure:4022: gcc -c conftest.c >&5; configure:4022: $? = 0; configure:4031: result: yes; configure:4040: checking whether gcc accepts -g; configure:4060: gcc -c -g conftest.c >&5; configure:4060: $? = 0; configure:4101: result: yes; configure:4118: checking for gcc option to accept ISO C89; configure:4181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conftest.c -o conftest2.o >&5; configure:4380: $? = 0; configure:4386: gcc -c conftest.c -o conftest2.o >&5; configure:4390: $? = 0; configure:4401: cc -c conftest.c >&5; configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4619: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:7293,depend,dependency,7293,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['depend'],['dependency']
Integrability," Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1504,depend,dependency,1504,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,1,['depend'],['dependency']
Integrability," Storing a mapping from global to local point index. ------------------------- Solution Postprocessing -----------------------. Error in ""void CBaselineSolver::SetOutputVariables(CGeometry*, CConfig*)"": ; -------------------------------------------------------------------------; Unable to open SU2 restart file solution_flow.dat; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 17 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] 23 more processes have sent help message help-mpi-api.txt / mpi-abort; [hongwei-Workstation:07803] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages; ```; ```; hongwei@hongwei-Workstation:~/SU2_RUN/QuickStart$ singularity exec su2.sif SU2_SOL inv_NACA0012.cfg ; /.singularity.d/actions/exec: 9: exec: SU2_SOL: not found; ```; ```; hongwei@hongwei-Workstation:~/SU2_RUN/QuickStart$ singularity shell su2.sif ; Singularity su2.sif:~/SU2_RUN/QuickStart> SU2_SOL inv_NACA0012.cfg ; bash: SU2_SOL: command not found; Singularity su2.sif:~/SU2_RUN/QuickStart>; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-514630913:5451,message,message,5451,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-514630913,2,['message'],"['message', 'messages']"
Integrability," added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to make mesh finer to capture shock waves. In ver.7, grid adaptation related parameters in configuration template file are not used, so it appears that grid adaptation function is dead now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:1427,message,message,1427,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111,2,['message'],['message']
Integrability," and that other proposals are put forward so the discussion can be finalized at the developer‚Äôs meeting. Best,. Juan. On Sep 10, 2017, at 1:09 PM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Dear @rsanfer<https://github.com/rsanfer>,. I agree with you that the outer loop should be the loop over the number of physical disciplines involved in the problem and not the zones. Whether the individual disciplines contain one or multiple zones is irrelevant at this level, in my opinion. The loop over the multiple zones of a single discipline should take place at a much lower level, namely where the spatial residual is computed. At least, this should be the case for the fluid dynamics part. I don't know whether this is also the case for other disciplines, like structures. What about the following high level structure?. * Loop over the number of iterations, or time steps for unsteady problems.; * Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; * Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate:; * Loop over the (Runge-Kutta) stages; * Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; * End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; * End loop over the (Runge-Kutta) stages; * End loop over the disciplines; * End loop over the pseudo time steps.; * End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the diff",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328403160:2251,integrat,integration,2251,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328403160,2,['integrat'],['integration']
Integrability," commit (use ""git add"" and/or ""git commit -a""). Jairos-Mac-mini:SU2 jaspe$ git commit -am ""This is an update of .travis.yml; for feature_force_read_target_on_AD."". [feature_force_read_target_on_AD 3f2115373] This is an update of; .travis.yml for feature_force_read_target_on_AD. 1 file changed, 2 insertions(+), 2 deletions(-); After that, I issued git push origin feature_force_read_target_on_AD, and; got the error message:. To https://github.com/su2code/SU2.git. ! [rejected] feature_force_read_target_on_AD ->; feature_force_read_target_on_AD (fetch first). error: failed to push some refs to 'https://github.com/su2code/SU2.git'. hint: Updates were rejected because the remote contains work that you do. hint: not have locally. This is usually caused by another repository pushing. hint: to the same ref. You may want to first integrate the remote changes. hint: (e.g., 'git pull ...') before pushing again. hint: See the 'Note about fast-forwards' in 'git push --help' for details.; I issued then git pull origin develop, to merge changes in remote to my; local branch, successfully , but a new git push origin; feature_force_read_target_on_AD, produced the same error message.; Would be the first commit command enough?. With kind regards,. Jairo. On Tue, Oct 30, 2018 at 7:25 PM Thomas D. Economon <notifications@github.com>; wrote:. > Hi @jaspe55 <https://github.com/jaspe55> - thanks for the first; > contribution!; >; > Can you please switch the email and branch name in .travis.yml back to; > su2code-dev@lists.stanford.edu and develop, respectively? That should get; > the tests running so we can give this a proper review (should be quick; > given the small change).; >; > ‚Äî; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/600#issuecomment-434492415>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Ac180sVTNXVIdfr1Oo3wVM2qGfepSGfIks5uqNHngaJpZM4X34F2>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-434929137:1572,message,message,1572,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-434929137,1,['message'],['message']
Integrability," commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Questions. * How do developers feel about adding unit tests to SU2?; * If a unit-testing framework were added to SU2, would you actually use it?; * Do developers have a preference (or experience with) any of the unit testing frameworks?; * Should unit tests be expected when submitting PRs?. ‚Äî; You are receiving this bec",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4404,depend,dependencies,4404,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['depend'],['dependencies']
Integrability," feature of a future release is going in the direction of what you need. Compiled libraries would be easy to handle via pkg config. . Ah, I did not understand that this is something you were already working on and were asking me to test, I thought you were suggesting to use develop to install the software on our production cluster. I should not have assumed that, it's just something that is unfortunately quite frequent in the field of scientific software (just use the head of the git repo). I did not have any clone of the repo, so did not see that script (only the one in `legacy`) initially. . ```; $ ./preconfigure.py --help; usage: preconfigure.py [-h] [--with-own-meson] [--no-codi] [--no-medi]; [--no-opdi] [--no-mpp] [--no-coolprop] [--no-mel]; [--no-mlpcpp]. optional arguments:; -h, --help show this help message and exit; --with-own-meson download own copies of Meson and Ninja; --no-codi do not download own copy of CoDiPack; --no-medi do not download own copy of MeDiPack; --no-opdi do not download own copy of OpDiLib; --no-mpp do not download own copy of Mutationpp; --no-coolprop do not download own copy of CoolProp; --no-mel do not download own copy of MEL; --no-mlpcpp do not download copy of MLpCpp; ``` . It seems like to go in the right direction. Is there a plan to provide options to specify how to find installed copies of those ? Something like `--medi=/path/to/installed/medi` and such ? pkgconfig or other auto-detection mechanisms usually work, but sometimes it doesn't, and explicit workarounds sometimes help. . I also don't see other packages that end up in externals, such as `metis`, `parmetis`, `autotools`, `catch2`. I am not sure how those are used (or if they are used), but I noticed folders for them in the `externals` folder. Is there a plan to allow using external versions of those ?. > But your choices of words sound a bit unfriendly so I honestly don't care, we can also close the issue until the next release. My apologies, I misunderstood your requ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645726352:866,message,message,866,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645726352,1,['message'],['message']
Integrability," feature.; - I imagine in some other places of the code similar routines were needed, for example small matrix inversion when computing gradients by weighted least squares (indeed what I need now is a QR decomposition). And, as an added bonus, I think some other areas of the code could be simplified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is that we then need to provide a portable version that can be differentiated with CoDi or to implement the exact differentiation (similar to what is done in the ""solve_b"" routines). @vdweide that is not an issue with Eigen because everything is templated and therefore compatible with any type or class that overloads the appropriate arithmetic operators.; I have used it for over 2 years and I can attest to its compatibility with AD tools (I've tried 3), and speed when linked with a BLAS library, their native implementations are also very good, peeking inside their code... you can tell they know what they are doing. P.S. I feel this post needs a disclai",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:1905,rout,routines,1905,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,2,['rout'],['routines']
Integrability," for numerics->SetBlaBla.; A template decorator in the sense that the class can be augmented simply by inheriting from another, along the lines of `class CRoeVisc : public CRoe, public CVisc` (to allow fusing residual and Jacobian contributions).; All this needs to be done with templates for the ""minimal indirection"" requirement. Which means for each numerical method we will have 4 explicit template instantiations (Euler2D, Euler3D, (RA)NS2D, (RA)NS3D) but in the end these are still polymorphic objects that will be instantiated by some factory function (i.e. it will look clean, especially because I will not port all methods in one go xD). The template machinery to support this is actually not too crazy:; ```c++; #include <array>; #include <cmath>. // An example type to use instead of the container that stores solution data for all vertices.; struct SolutionContainer; {; std::array<double,3> velocity;; std::array<double,3> areaVector;; };. using ResultType = double;. // We want classes with this interface.; class VirtualInterface; {; public:; virtual ResultType Compute(const SolutionContainer&) const = 0;; };. // The Compute method is to be composed via an inheritance chain, to do this; // we allow each building block to inherit from any class. These classes should; // be function objects that have no member variables, all data used in the; // resulting Compute method will be on the stack.; template<typename Base>; class ComputeArea : Base; {; protected:; // Different template instantiations will be made for; // 2D/3D to allow perfect loop unrolling.; enum : int {nDim = Base::nDim};. // To share variables between building blocks we will pass; // down a struct which is also composed by inheritance; struct WorkVarsType : Base::WorkVarsType; {; double area; // add ""area"" to the variables of Base; };; ; // The final implementation of Compute will be a call down the chain.; // The final constructed WorkVarsType is not known at this stage,; // hence we also template the me",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:2393,interface,interface,2393,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,2,['interface'],['interface']
Integrability," in the very same history as the non-inlet version. I see a difference in Residuals which is sometimes not consistent (I had cases where I cycled through 3 different outcomes for the inlet version in a random order...wtf). It has nothing to do with the wrong values being read in and made available to the Solver, they are perfect. I now did 2 full-time days of debugging and I a don't get it. I have traced the problem down quite a bit and know which code lines I have to comment to make the problem go away ... but it doesnt make sense: I am not allowed (I can, but then I have non-equal diffs) to write anything (but zero!) in certain blocks of the local variable `profileData` in `CMarkerProfileReader`. That is only the case for more than 1 species equation! I also overwrote the `Inlet_Species_Var` using the `SetUnformInlet` which just takes the cfg-Marker values. . It seems to be some memory-problem and valgrind trys to speak to me but can only point me to the constructor of the Avg_GradSpecies for the volume in CDriver and tells me about a `Conditional jump or move depends on uninitialised value(s)` in `CSysSolve.cpp:131`; ```c++; if ((nrm <= 0.0) || (nrm != nrm)) {; ```; and is supposed to originate from `CDriver.cpp:1366` via a `Uninitialised value was created by a heap allocation`; ```c++; numerics[iMGlevel][SPECIES_SOL][visc_term] = new CAvgGrad_Species<Indices>(nDim, nVar_Species, true, config);; ```; ```c++; 338 --139924-- REDIR: 0x53dc330 (libstdc++.so.6:operator new[](unsigned long)) redirected to 0x4c2a801 (operator new[](unsigned long)); 339 --139924-- REDIR: 0x53da3e0 (libstdc++.so.6:operator delete[](void*)) redirected to 0x4c2b596 (operator delete[](void*)); 340 --139924-- REDIR: 0x53dc2e0 (libstdc++.so.6:operator new(unsigned long, std::nothrow_t const&)) redirected to 0x4c2a3af (operator new(unsigned long, std::nothrow_t const&)); 341 --139924-- REDIR: 0x53da3d0 (libstdc++.so.6:operator delete(void*, std::nothrow_t const&)) redirected to 0x4c2b2a8 (operat",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:1580,depend,depends,1580,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603,1,['depend'],['depends']
Integrability," it makes the wall function implementation more robust to the varying y+ of the first cell of the surface of the geometry and lessens the burden during the grid generation stage. Formulations for S-A and k-w/SST are available. If anyone else is interested in participating, please let us know. Best,. Juan. On Jun 8, 2017, at 5:11 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi all,. Yes, it would be wonderful to get this feature completed. I had started this a couple of years ago, but never quite got around to finishing (too many fun things to work on!). I was following this paper, which should be a straightforward implementation for us, as FUN3D has a very similar structure:. Jan-Renee Carlson, Veer Vatsa, and Jeffery A. White. ""Node-Centered Wall Function Models for the Unstructured FLow Code Fun3D"", 22nd AIAA Computational Fluid Dynamics Conference, AIAA AVIATION Forum, AIAA 2015-2758, https://doi.org/10.2514/6.2015-2758. The key changes can be found in the following locations:. * CNSSolver::Compute_Wall_Functions_Mean() routine in solver_direct_mean.cpp - computes and stores an updated wall shear stress based on the chosen wall model; * CTurbSASolver::Compute_Wall_Functions() routine in solver_direct_turbulent.cpp - computes the eddy visc/nu tilde needed near the wall based on the model; * CNumerics::GetViscousProjFlux() in numerics_structure.cpp - computes the viscous flux between two nodes and will make an adjustment near the wall when the model is active; * CNumerics::GetViscousProjJacs() in numerics_structure.cpp - this part isn‚Äôt quite finished yet (something similar to the previous bullet). Let's keep the discussion going,; Tom. ‚Äî; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/399#issuecomment-307260814>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxEMtW6EqpjBFJOTo8mRqxMFvvf4uks5sCI2zgaJpZM4NvG6w>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-307262047:1573,rout,routine,1573,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-307262047,2,['rout'],['routine']
Integrability," make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2291,rout,routines,2291,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['rout'],['routines']
Integrability," prefer to use either (a) an open source library that is actively maintained, or (b) our own tree-based search. I do think that this is important for the various reasons that have been outlined/discussed already. The method Harichand describes is pretty much what we did in the ASC program. Edwin can provide more details (and we had an AIAA paper around 2005 on this topic). My suggestion: if Edwin has a tree search in C++ already and someone is willing to spend the time to integrated it, that would be the best option. We get the performance that is needed with a lightweight tree search, without external dependencies (to libraries that may provide a lot of other functionality we do not need), and we can expand to parallel trees as needed. If there is no code already available, then PCL seems like a good alternative (since it seems one can compile only portions of the library). Any takers?. Cheers,. Juan. On Jun 8, 2016, at 4:35 AM, Harichand M V <notifications@github.com<mailto:notifications@github.com>> wrote:. All,. Thanks for your comments. I think ANNlibrary is no longer maintained. It would be better if we can use a well maintained library in-order to prevent issues in future. Additionally ANNlibrary does not support distributed trees. As far as I know, pointcloud library also does not support distributed trees. I guess we will have to write a wrapper routine using MPI. This will create a local tree for its own portion of the surface mesh. Now distance computation can be done by querying all the trees and using the minimum. One catch here is that we will have to compute distance queries in a group in order to prevent the communication latency eating up the advantage. Waiting for comments. ‚Äî; You are receiving this because you commented.; Reply to this email directly, view it on GitHubhttps://github.com/su2code/SU2/issues/282#issuecomment-224563432, or mute the threadhttps://github.com/notifications/unsubscribe/ADpSxBy8kuwFTxIZIeCNXcpo7NhErZYeks5qJqjqgaJpZM4ItVbi.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-224806527:1423,wrap,wrapper,1423,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-224806527,2,"['rout', 'wrap']","['routine', 'wrapper']"
Integrability," regards,. Jairo (jaspe55); .........................................................................................................................................................; Jairos-Mac-mini:SU2 jaspe$ pwd; /Users/jaspe/Desktop/SU2BRANCH/SU2; Jairos-Mac-mini:SU2 jaspe$ git branch; * feature_force_read_target_on_AD; master; Jairos-Mac-mini:SU2 jaspe$ git status; On branch feature_force_read_target_on_AD; nothing to commit, working tree clean; Jairos-Mac-mini:SU2 jaspe$ ; Jairos-Mac-mini:SU2 jaspe$ ; Jairos-Mac-mini:SU2 jaspe$ git push origin feature_force_read_target_on_AD; To https://github.com/su2code/SU2.git; ! [rejected] feature_force_read_target_on_AD -> feature_force_read_target_on_AD (fetch first); error: failed to push some refs to 'https://github.com/su2code/SU2.git'; hint: Updates were rejected because the remote contains work that you do; hint: not have locally. This is usually caused by another repository pushing; hint: to the same ref. You may want to first integrate the remote changes; hint: (e.g., 'git pull ...') before pushing again.; hint: See the 'Note about fast-forwards' in 'git push --help' for details.; Jairos-Mac-mini:SU2 jaspe$ git pull origin develop; remote: Enumerating objects: 50, done.; remote: Counting objects: 100% (50/50), done.; remote: Compressing objects: 100% (6/6), done.; remote: Total 81 (delta 45), reused 46 (delta 44), pack-reused 31; Unpacking objects: 100% (81/81), done.; From https://github.com/su2code/SU2; * branch develop -> FETCH_HEAD; 0811066f4..cf91b7cf4 develop -> origin/develop; Merge made by the 'recursive' strategy.; Common/include/blas_structure.hpp | 2 +-; Common/include/matrix_structure.hpp | 2 +-; Common/src/adt_structure.cpp | 11 +-; Common/src/blas_structure.cpp | 27 ++--; Common/src/fem_geometry_structure.cpp | 2 +-; Common/src/geometry_structure.cpp | 131 ++++++++++++++-----; Common/src/matrix_structure.cpp | 14 +-; Common/src/wall_model.cpp | 4 +-; SU2_CFD/src/output_structure.cpp | 2 +-; SU2_IDE/Xc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-438029731:1303,integrat,integrate,1303,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-438029731,1,['integrat'],['integrate']
Integrability," scheme for a multi-physics problem. To obtain the design accuracy in time, this implies that the loop over the number of time stages is outside the loop over the number of physical disciplines. Hence at a very high level in the hierarchy, the details of the time integration should then be known. The situation becomes even more complicated when one would like to employ time integration schemes that allow for time accurate local time stepping, e.g. the ones we are currently working on for the DG solver. I won't bore you with all the details here, but those schemes basically require the loop over the multiple disciplines to be between the predictor and corrector step, while both these steps consist of multiple stages. Although it is probably possible to come up with a data structure that supports all this, the question is whether this is desirable. Apart from the fact that it would require a major overhaul in the high level design of SU2, the implementation will be less readable, especially for people that will be starting with the code. Also the parallelization may become significantly more complicated. The alternative is that for unsteady multi-physics problems, we put the restriction that only single stage time integration schemes can be used, e.g. DT_STEPPING_1ST and DT_STEPPING_2ND. In that case, the details of the time integration scheme can be hidden at the driver level, where we then simply have a loop over the number of physical disciplines. The consequence of course is that more advanced time integration schemes will not be available for multi-physics problems. In the above I just tried to picture what, in my opinion, the consequences are for either option. I don't have a preference for one of them. The only thing I wanted to make clear is that it is not possible to hide all the details of the time integration scheme at the driver level, while also having support for all possible time integration schemes for an unsteady multi-physics problem. Regards,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328441926:1599,integrat,integration,1599,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328441926,10,['integrat'],['integration']
Integrability," threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1761,rout,routines,1761,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['rout'],['routines']
Integrability," would likely perform better as it avoids the pesky gather/scatter operations.; Processing multiple geometric primitives can make full utilization of whatever register size (important on GPU's), the code is just as readable (as I hope to show), but gather/scatter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writes to 2 locations (gather / scatter access pattern, not to be confused with the instructions) processing multiple edges at the same time can therefore result in race conditions where multiple threads try to update the data of the same point.; There are 3 ways to address this:; - **Coloring**: Edges are colored (grouped) such that edges of the same color have no risk of race conditions, i.e. each endpoint is referenced only once per color (this definition gives you the basis of a greedy algorithm to color edges).; - **Scatter to gather transformations**: Edge quantities (e.g. fluxes) are computed and stored on one pass (i.e. we read from 2 locations and write to 1), on a second pass, over points, we reduce (e.g. sum) the edge quantities for each point, again a gather access pattern. It may also be possible to ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:3512,rout,routines,3512,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['rout'],['routines']
Integrability," | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. ------------------------ Physical Case Definition -----------------------; Input mesh file name: mesh_NACA0012_inv.su2. -------------------------- Output Information ---------------------------; The output file format is Tecplot ASCII (.dat).; Flow variables file name: flow. ------------------- Config File Boundary Information --------------------; +-----------------------------------------+; | Marker Type| Marker Name|; +-----------------------------------------+; | Euler wall| airfoil|; +-----------------------------------------+; | Far-field| farfield|; +-----------------------------------------+. ---------------------- Read Grid File Information -----------------------; Two dimensional problem.; 5233 points.; 2 surface markers.; +------------------------------------+; | Index| Marker| Elements|; +------------------------------------+; | 0| airfoil| 200|; | 1| farfield| 50|; +------------------------------------+; 10216 triangles.; Identify vertices.; Storing a mapping from global to local point index. ------------------------- Solution Postprocessing -----------------------. Error in ""void CBaselineSolver::SetOutputVariables(CGeometry*, CConfig*)"": ; -------------------------------------------------------------------------; Unable to open SU2 restart file solution_flow.dat; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-514653545:4097,depend,depending,4097,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-514653545,1,['depend'],['depending']
Integrability,"![CHT_Fluid_Solid](https://github.com/su2code/SU2/assets/38651601/5c025e63-bc14-4148-9625-67d77c6990c7). Was able to run a case with fluid and two solids with contact resistance between the solid domains. By setting a non-zero contact resistance between the solid domains there appears a temperature discontinuity between the solids, but by setting the contact resistance value to zero on the fluid-to-solid interfaces, the temperature trends are continuous. ; Further testing still required on more complicated cases, but the core functionality seems to work so far.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-1816057953:408,interface,interfaces,408,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-1816057953,1,['interface'],['interfaces']
Integrability,![Mesh](https://user-images.githubusercontent.com/60317454/74029438-c0c4f000-49bd-11ea-8f83-4a823c7c69d7.jpg); ![Mach](https://user-images.githubusercontent.com/60317454/74029449-c7536780-49bd-11ea-92e6-49c9812e670f.jpg). I have moved PYAMG interface to SU2-6.2.0 and made some changes to Mach sensor on the solid wall.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-583368735:241,interface,interface,241,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-583368735,1,['interface'],['interface']
Integrability,"""[WIP] Develop for Langtry and Menter transition model. #1592"" was merged while trying to update my remote repository to v7.40. I'm not good at using GitHub, so I'm sorry for this situation. . My remote repository(forked) is not synchronized with v7.40, and I don't know what the problem is. So, I will delete the forked repository and fork it again to PR with the same name and content. Fortunately, the LM model updated to v7.40 obtained the same residuals and results as the previous v7.3.1.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1236684338:229,synchroniz,synchronized,229,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1236684338,1,['synchroniz'],['synchronized']
Integrability,"(I don't usually build the python wrapper locally); On Ubuntu 18 (GCC 7.5) I can confirm the same problem linking the python wrapper library with default meson options.; However, passing -fPIC in CXXFLAGS and LDFLAGS solves the issue, clang-10 does not have this fPIC problem, and looking around I found other reports of this issue being particular to GCC (https://github.com/xoreaxeaxeax/rosenbridge/issues/1). Maybe in your case the environment variables are not making it to the compiler wrapper? (it looks like you are using a cluster and they can be funny...) Try giving a wrong value to CXXFLAGS (e.g. fPIK), meson should fail when it tests the compiler. So in summary I don't think we should change the defaults of the build system, but I'll ask other devs if they've had the same problem.; I'll change the tittle to make it easier for folks with the same issue to find this.; Please do let us know what solution you find, we may at least add a warning to ours doc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568#issuecomment-1076433714:34,wrap,wrapper,34,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568#issuecomment-1076433714,3,['wrap'],['wrapper']
Integrability,"(I seem to have a knack to find cans of worms).; What I did in a55ca26 is not accurate, the integral of the fluid stress needs to be done in current coordinates and the normal available trough CVertex is in reference (undeformed) coordinates. I've implemented this in the structural solver as a preprocessing step. For each surface element of all FSI markers an average stress is computed based on its nodal values, it is then integrated in current (deformed) coordinates. A second pass over the elements scatters the force on the element to the nodes, this is to account for nodes that participate in multiple markers.; The mechanism by which the structural solver takes the flow tractions and updates the Residual vector was not changed, so this changes are fairly local.; The only downside I see is that knowledge of whether the interpolation is consistent or conservative is now required in two locations... Verification of the FSI adjoint is still ongoing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597#issuecomment-429427811:427,integrat,integrated,427,https://su2code.github.io,https://github.com/su2code/SU2/pull/597#issuecomment-429427811,1,['integrat'],['integrated']
Integrability,"(I was not expecting this many comments so quickly, thanks guys!). First let me clarify the intent.; I do not propose replacing the routines that deal with CSysMatrix, or change its format, all that (Krylov solvers, sparse approximate factorizations, etc.) is relatively independent from what I have in mind.; Nevertheless being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD.; What I would like is to have a ""CMatrixDense"" class, to give concrete examples:; - For RBF interpolation the guy who worked on it before me implemented his own Cholesky and LU factorizations, matrix-matrix, matrix-vector routines, etc.; - @jayantmukho recently needed some eigenvector decomposition's for the uncertainty quantification feature.; - I imagine in some other places of the code similar routines were needed, for example small matrix inversion when computing gradients by weighted least squares (indeed what I need now is a QR decomposition). And, as an added bonus, I think some other areas of the code could be simplified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulat",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:132,rout,routines,132,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,8,"['integrat', 'rout']","['integration', 'routines']"
Integrability,*Update: the conflicts were due to mutually editing methods for the discrete adjoint; I had added some objectives prior to the recent discrete adjoint pull request. ; @talbring if you have a minute to take a look at how I've handled these objectives in iteration_structure.cpp that would be much appreciated.; I think I have resolved the conflicts; the source of most of the problems was with registering outflow-based objective functions which depend on values that were only calculated at an output step. This meant adding an if statement to calculate these values at the most recent point where the output container was available.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/204#issuecomment-151660107:445,depend,depend,445,https://su2code.github.io,https://github.com/su2code/SU2/pull/204#issuecomment-151660107,1,['depend'],['depend']
Integrability,"++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2288,Wrap,Wrapper,2288,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['Wrap'],['Wrapper']
Integrability,"---------------------------------------------------------+. The density plot is; - different from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` singlezone explicit Euler CFL=0.1; ![tke-simplified-singlezone-expliciteuler](https://user-images.githubusercontent.com/72806890/140887289-0d8725a2-e51b-4704-bdae-a51b492949bf.png); (it is ""red"" throughout the domain, except for the wall marker); - `issue_simplified` multizone explicit Euler CFL=0.1: (similar image, ""red"" everywhere except wall). **Thus, the difference in solutions observed above is due to the choice of implicit vs. explicit Euler and CFL, and not due to problems regarding the interface.**. Am I doing something wrong in the explicit Euler [cfg file](https://seafile.rlp.net/d/bb0fbb16eb414263b642/files/?p=%2Fsinglezone-simplfied-expliciteuler-cfl01.cfg&dl=1), whose diff to the [SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg](https://github.com/su2code/SU2/blob/v7.2.0/TestCases/rans/naca0012/turb_NACA0012_sst.cfg) is as follows?. 27c27; < RESTART_SOL= NO; ---; > RESTART_SOL= YES; 45c45; < REYNOLDS_NUMBER= 1.0E6; ---; > REYNOLDS_NUMBER= 6.0E6; 70c70; < MARKER_HEATFLUX= ( circle, 0.0 ); ---; > MARKER_HEATFLUX= ( airfoil, 0.0 ); 76c76; < MARKER_PLOTTING= ( circle ); ---; > MARKER_PLOTTING= ( airfoil ); 79c79; < MARKER_MONITORING= ( circle ); ---; > MARKER_MONITORING= ( airfoil ); 88c88; < CFL_NUMBER= 0.1; ---; > CFL_NUMBER= 1000.0; 101c101; < ITER= 9999900; ---; > ITER= 99999; 162c162; < TIME_DISCRE_FLOW= EULER_EXPLICIT; ---; > TIME_DISCRE_FLOW= EULER_IMPLICIT; 177c177; < TIME_DISCRE_TURB= EULER_EXPLICIT; ---; > TIME_DISCRE_TURB= EULE",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:2499,interface,interface,2499,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195,2,['interface'],['interface']
Integrability,"-Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1522,Message,Message,1522,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['Message'],['Message']
Integrability,"-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,/home/user/anaconda3/lib -Wl,-rpath-link,/home/user/anaconda3/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these li",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4279,Message,Message,4279,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311,1,['Message'],['Message']
Integrability,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1474,message,message,1474,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809,2,['message'],['message']
Integrability,"/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2765,Message,Message,2765,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['Message'],['Message']
Integrability,"/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$P",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4459,Depend,Dependency,4459,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311,1,['Depend'],['Dependency']
Integrability,"131`; ```c++; if ((nrm <= 0.0) || (nrm != nrm)) {; ```; and is supposed to originate from `CDriver.cpp:1366` via a `Uninitialised value was created by a heap allocation`; ```c++; numerics[iMGlevel][SPECIES_SOL][visc_term] = new CAvgGrad_Species<Indices>(nDim, nVar_Species, true, config);; ```; ```c++; 338 --139924-- REDIR: 0x53dc330 (libstdc++.so.6:operator new[](unsigned long)) redirected to 0x4c2a801 (operator new[](unsigned long)); 339 --139924-- REDIR: 0x53da3e0 (libstdc++.so.6:operator delete[](void*)) redirected to 0x4c2b596 (operator delete[](void*)); 340 --139924-- REDIR: 0x53dc2e0 (libstdc++.so.6:operator new(unsigned long, std::nothrow_t const&)) redirected to 0x4c2a3af (operator new(unsigned long, std::nothrow_t const&)); 341 --139924-- REDIR: 0x53da3d0 (libstdc++.so.6:operator delete(void*, std::nothrow_t const&)) redirected to 0x4c2b2a8 (operator delete(void*, std::nothrow_t const&)); 342 ==139924== Conditional jump or move depends on uninitialised value(s); 343 ==139924== at 0xE2D19C: CSysSolve<double>::ModGramSchmidt(int, C2DContainer<unsigned long, double, (StorageType)0, 64ul, 0ul, 0ul>&, std::vector<CSysVector<double>, std::allocator<CSysVector<double> > >&) const (CSysSolve.cpp:131); 344 ==139924== by 0xE2F292: CSysSolve<double>::FGMRES_LinSolver(CSysVector<double> const&, CSysVector<double>&, CMatrixVectorProduct<double> const&, CPreconditioner<double> const&, double, unsigned long, double&, bool, CConfig const*) const (CSysSolve.cpp:456); 345 ==139924== by 0xE3187E: CSysSolve<double>::Solve(CSysMatrix<double>&, CSysVector<double> const&, CSysVector<double>&, CGeometry*, CConfig const*) (CSysSolve.cpp:899); 346 ==139924== by 0x88070D: CScalarSolver<CSpeciesVariable>::ImplicitEuler_Iteration(CGeometry*, CSolver**, CConfig*) (CScalarSolver.inl:395); 347 ==139924== by 0xB8D475: CIntegration::Time_Integration(CGeometry*, CSolver**, CConfig*, unsigned short, unsigned short) (CIntegration.cpp:208); 348 ==139924== by 0x4AD428: CSingleGridIntegration::Sin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:2584,depend,depends,2584,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603,1,['depend'],['depends']
Integrability,"2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output fo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:1556,depend,dependency,1556,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474,6,['depend'],['dependency']
Integrability,"20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should mention, I cloned the `develop` branch and used [this commit](https://github.com/su2code/SU2/commit/ad6311322b9952f92584d3e141237e7156cdc07c):; `git checkout ad6311322b9952f92584d3e141237e7156cdc07c`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:2204,Wrap,Wrapper,2204,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['Wrap'],['Wrapper']
Integrability,"3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6. Can you give me some tips for troubleshooting this?; Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:3242,depend,dependency,3242,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['depend'],['dependency']
Integrability,"3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2242,Message,Message,2242,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['Message'],['Message']
Integrability,"53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1744,depend,dependency,1744,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['depend'],['dependency']
Integrability,"9\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\Kle",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6298,depend,dependency,6298,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['depend'],['dependency']
Integrability,"9b1ca249b3f/SU2_CFD/src/interfaces/CInterface.cpp#L314) piece of code. I presume the issue is the access `SpanValuesDonor[kSpan + 1]` in the case that `kSpan == nSpanDonor - 1` so that `kSpan` references the last array entry already. Below is a stripped-down version of the corresponding code.; ```; ...; for (jSpan = 0; jSpan < nSpanDonor; jSpan++) {; ...; if (...); kSpan = jSpan;; ...; }; ... SpanValuesDonor[kSpan + 1] ...; ```. Is someone familiar with the `CInterface` code and could make recommendations for a fix?. Below is the address sanitizer report, see also [here](https://github.com/su2code/SU2/actions/runs/8536216515/job/23386086770?pr=2246#step:7:2062). ```; ==2308==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60f0008c96a0 at pc 0x558b6435ae51 bp 0x7ffc1cebf680 sp 0x7ffc1cebf670; READ of size 8 at 0x60f0008c96a0 thread T0; #0 0x558b6435ae50 in CInterface::PreprocessAverage(CGeometry*, CGeometry*, CConfig const*, CConfig const*, unsigned short) ../SU2_CFD/src/interfaces/CInterface.cpp:314; #1 0x558b6373d23a in CDriver::PreprocessTurbomachinery(CConfig**, CGeometry****, CSolver*****, CInterface***, bool) ../SU2_CFD/src/drivers/CDriver.cpp:2725; #2 0x558b63770d76 in CDriver::CDriver(char*, unsigned short, int, bool) ../SU2_CFD/src/drivers/CDriver.cpp:250; #3 0x558b637f54c2 in CMultizoneDriver::CMultizoneDriver(char*, unsigned short, int) ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:35; #4 0x558b63615b53 in main ../SU2_CFD/src/SU2_CFD.cpp:135; #5 0x7f0d8c503082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082); #6 0x558b6367005d in _start (/github/workspace/install/bin/SU2_CFD+0x63405d). 0x60f0008c96a0 is located 0 bytes to the right of 176-byte region [0x60f0008c95f0,0x60f0008c96a0); allocated by thread T0 here:; #0 0x7f0d8ed00787 in operator new[](unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:107; #1 0x558b656d1590 in CPhysicalGeometry::ComputeNSpan(CConfig*, unsigned short, unsigned short, bool) ../Common/src/ge",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720:1125,interface,interfaces,1125,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720,1,['interface'],['interfaces']
Integrability,": 100% (6/6), done.; remote: Total 81 (delta 45), reused 46 (delta 44), pack-reused 31; Unpacking objects: 100% (81/81), done.; From https://github.com/su2code/SU2; * branch develop -> FETCH_HEAD; 0811066f4..cf91b7cf4 develop -> origin/develop; Merge made by the 'recursive' strategy.; Common/include/blas_structure.hpp | 2 +-; Common/include/matrix_structure.hpp | 2 +-; Common/src/adt_structure.cpp | 11 +-; Common/src/blas_structure.cpp | 27 ++--; Common/src/fem_geometry_structure.cpp | 2 +-; Common/src/geometry_structure.cpp | 131 ++++++++++++++-----; Common/src/matrix_structure.cpp | 14 +-; Common/src/wall_model.cpp | 4 +-; SU2_CFD/src/output_structure.cpp | 2 +-; SU2_IDE/Xcode/SU2_CFD.xcodeproj/project.pbxproj | 166 ++++++++++++------------; SU2_IDE/Xcode/SU2_DEF.xcodeproj/project.pbxproj | 144 ++++++++++++++++----; SU2_IDE/Xcode/SU2_DOT.xcodeproj/project.pbxproj | 130 +++++++++++--------; SU2_IDE/Xcode/SU2_GEO.xcodeproj/project.pbxproj | 74 ++++++++++-; SU2_IDE/Xcode/SU2_MSH.xcodeproj/project.pbxproj | 124 ++++++++++++++++--; SU2_IDE/Xcode/SU2_SOL.xcodeproj/project.pbxproj | 62 +++++----; TestCases/parallel_regression.py | 26 ++--; TestCases/parallel_regression_AD.py | 4 +-; TestCases/serial_regression.py | 24 ++--; TestCases/serial_regression_AD.py | 2 +-; 19 files changed, 659 insertions(+), 292 deletions(-); Jairos-Mac-mini:SU2 jaspe$ git push origin feature_force_read_target_on_AD; To https://github.com/su2code/SU2.git; ! [rejected] feature_force_read_target_on_AD -> feature_force_read_target_on_AD (fetch first); error: failed to push some refs to 'https://github.com/su2code/SU2.git'; hint: Updates were rejected because the remote contains work that you do; hint: not have locally. This is usually caused by another repository pushing; hint: to the same ref. You may want to first integrate the remote changes; hint: (e.g., 'git pull ...') before pushing again.; hint: See the 'Note about fast-forwards' in 'git push --help' for details.; Jairos-Mac-mini:SU2 jaspe$",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-438029731:3443,integrat,integrate,3443,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-438029731,1,['integrat'],['integrate']
Integrability,": c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; Build targets in project: 12; ; Found ninja-1.10.0.git at /home/user/programs/su2/SU2_src/ninja; Using 'S",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4598,Message,Message,4598,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311,1,['Message'],['Message']
Integrability,:+1: Ok @MicK7 PR already open.; Different cross compile issue now https://github.com/su2code/SU2/runs/4900536101?check_suite_focus=true; ```; ERROR: ; Cannot use target H5detect as a generator because it is built for the; host machine and no exe wrapper is defined or needs_exe_wrapper is; true. You might want to set `native: true` instead to build it for; the build machine.; ```,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1508#issuecomment-1018777822:247,wrap,wrapper,247,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508#issuecomment-1018777822,1,['wrap'],['wrapper']
Integrability,"; (test_env) tim@super:/work/projects/mesh_adapt_testing/A000i_adap/2_cfd$ LD_LIBRARY_PATH=$CONDA_PREFIX/lib:$LD_LIBRARY_PATH SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -n %i %s"" python /opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py -f inv_test.cfg -n 40 > mesh_adapt.out; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Traceback (most recent call last):; File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 112, in <module>; main(); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 73, in main; options.save_all ); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 102, in mesh_adaptation_amg; SU2.run.amg(config); File ""/opt/su2/SU2v7_adap/bin/SU2/run/amg.py"", line 220, in amg; SU2_CFD(config_cfd); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /work/projects/mesh_adapt_testing/A000i_adap/2_cfd/adap/ini/,; Command = mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process na",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754504570:1428,message,message,1428,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570,1,['message'],['message']
Integrability,"; Jehan; From: Heather Kline notifications@github.com; To: su2code/SU2 SU2@noreply.github.com ; Sent: Tuesday, May 12, 2015 11:43 AM; Subject: [SU2] Feature deallocation (#174). Bringing this branch up to date with current develop branch. ; Various deallocation changes; Some regression tests fail but all run. (previously was not the case); You can view, comment on, or merge this pull request online at:; ¬†¬†https://github.com/su2code/SU2/pull/174; Commit Summary; - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working version with ParMETIS. Fixed bug in global index. Now clean up and testing...; - Cleaned version of ParMETIS routines with better console output during partitioning.; - Small bug in initial element division.; - Made arrays in ParMETIS call dynamic.; - Fixed compiler warnings and added MPI directives so that the pure serial code works with the ParMETIS routines.; - Bootstrap on zion.; - Added some typecasts. Still tracking down a memory problem...; - Critical bug fix for vtxdist array.; - Partial fix; - More MPI improvements.; - Fixing a bug in SU2_DEF; - Updated BC_ActDisk_Boundary (MPI); - Merge remote-tracking branch 'upstream/develop' into develo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:1667,rout,routines,1667,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['rout'],['routines']
Integrability,"; Points/core: 10428.1 | Ghost points/core: 2045.25 ; Wall-clock time (hrs): 0.153299 | Core-hrs: 1.22639 . Preprocessing phase:; Preproc. Time (s): 2.69291 | Preproc. Time (%): 0.487956 . Compute phase:; Compute Time (s): 385.71 | Compute Time (%): 69.8909 ; Iteration count: 560 | Avg. s/iter: 0.688769 ; Core-s/iter/Mpoints: 55.2191 | Mpoints/s: 0.144877 . Output phase:; Output Time (s): 163.472 | Output Time (%): 29.6211 ; Output count: 112 | Avg. s/output: 1.45957 ; -------------------------------------------------------------------------; ```; Note that the iteration count is the total number of all inner iterations. 30% of the time is spend in the output routine. That may sound like a lot, but lets take a look at the second case, where I still call the output routines, but disabled the writing of any files. ```; -------------------------- Performance Summary --------------------------; Simulation totals:; Cores: 8 | DOFs/point: 6; Points/core: 10428.1 | Ghost points/core: 2045.25; Wall-clock time (hrs): 0.112822 | Core-hrs: 0.902578. Preprocessing phase:; Preproc. Time (s): 3.84826 | Preproc. Time (%): 0.947474. Compute phase:; Compute Time (s): 399.446 | Compute Time (%): 98.347; Iteration count: 560 | Avg. s/iter: 0.713297; Core-s/iter/Mpoints: 57.1855 | Mpoints/s: 0.139896. Output phase:; Output Time (s): 2.86557 | Output Time (%): 0.705527; Output count: 112 | Avg. s/output: 0.0255854; Restart Aggr. BW (MB/s): 0 | MB/s/core: 0; -------------------------------------------------------------------------; ``` ; You can see that now the time spend in the output routines (including gathering all data, partitioning and sorting) just takes 0.7% of the overall time. Its not nothing, but roughly one order of magnitude smaller than one iteration of the solver. . I also compared it to the current develop using callgrind on a similar case and for both versions the number of instructions in the output routines is roughly the same (~1.5% of the total number instructions).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-535018704:1982,rout,routines,1982,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-535018704,2,['rout'],['routines']
Integrability,"; [DN0a22c803:22646] Signal code: (0); [DN0a22c803:22646] Failing at address: 0x0; [DN0a22c803:22646] *** End of error message ***; Segmentation fault: 11; ```; The exact crash location is: ; ```; Exception Type: EXC_BAD_ACCESS (SIGSEGV); Exception Codes: KERN_INVALID_ADDRESS at 0x0000737e9bdce5a2; Exception Codes: 0x0000000000000001, 0x0000737e9bdce5a2; Exception Note: EXC_CORPSE_NOTIFY. VM Region Info: 0x737e9bdce5a2 is not in any region. Bytes after previous region: 3842065106339 Bytes before following region: 13412496251486; REGION TYPE START - END [ VSIZE] PRT/MAX SHRMOD REGION DETAIL; Stack 70000ee7c000-70000eefe000 [ 520K] rw-/rwx SM=PRV thread 2; ---> GAP OF 0xfb164002000 BYTES; MALLOC_TINY 7fb172f00000-7fb173000000 [ 1024K] rw-/rwx SM=PRV . 0 _pysu2.so 	 0x116e2dfd0 CConfig::GetDiscrete_Adjoint() const + 12 (CConfig.hpp:8596); 1 _pysu2.so 	 0x1173844ca CDriver::Postprocessing() + 8600 (CDriver.cpp:558); 2 _pysu2.so 	 0x116bcaf0c _wrap_CDriver_Postprocessing + 199 (pySU2.cxx:10061); 0 libsystem_kernel.dylib 	 0x7ff801374d5a __select + 10; 1 libopen-pal.40.dylib 	 0x10a42def6 select_dispatch + 182 (select.c:161); 2 libopen-pal.40.dylib 	 0x10a425719 opal_libevent2022_event_base_loop + 585 (event.c:1630). ```; Another observation is that when I was using mpi4py 3.0.3 and openmpi 4.1.3, I was able to rename _pysu2.dylib to _pysu2.so and import pysu2 module into python 3.9.1. However, when I use mpi4py 3.1.3, I wasn't able to import the renamed _pysu2.so into python3, the error message is very similar to the one reported with segmentation fault 11. At this point, I think the potential approach is to enable python3 to import *.dylib module extension, since it seems that some *.dylib mpi shared library is also related to this. I tried to link .so extension for libopen-pal.40.dylib but that does not solve the issue. Any suggestion on this? Thank you!. My environment is :; GNU -11.2.0_3; Python 3.9.1; Openmpi 4.1.3; SU2 7.3.0 feature_pysu2_fsi_adjoint ; mpi4py 3.0.3",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1606#issuecomment-1106125840:2967,message,message,2967,https://su2code.github.io,https://github.com/su2code/SU2/issues/1606#issuecomment-1106125840,1,['message'],['message']
Integrability,"<img width=""431"" alt=""Screenshot 2021-02-15 165247"" src=""https://user-images.githubusercontent.com/60700515/107968189-553d3780-6fae-11eb-88a1-e3fee844f05b.png"">. The error was spotted while updating the old python routines to the new drivers/mesh solver. In particular, the test case in py_wrapper folder, related to a flat plate plunging up and down, showed a different coefficient of lift as computed using the old and new mesh solver. I attach here the comparison of the coefficient of lift history for three cases:. * The legacy mesh solver, after the modification in this PR; * The new mesh solver; * The legacy mesh solver, before the modification. The first two are completely coincident",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1199#issuecomment-779313505:214,rout,routines,214,https://su2code.github.io,https://github.com/su2code/SU2/pull/1199#issuecomment-779313505,1,['rout'],['routines']
Integrability,"=""${PKG_CONFIG_PATH}"":/usr/lib/pkgconfig; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1382,Depend,Dependency,1382,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,2,"['Depend', 'depend']","['Dependency', 'dependency']"
Integrability,"> > > If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > > > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > > > ```; > > > * Turbulence solvers;; > > > ; > > > * Heat solver;; > > > ; > > > * Radiation solver;; > > > ; > > > * General passive/active scalar solvers;; > > > ; > > > * Eventual transition solvers;; > > > ```; > > > ; > > > ; > > > The starting point would be the current base turbulence solver.; > > ; > > ; > > I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :); > ; > Me too. I'm already cleaning up our code a bit so it's easier to see the differences and similarities. Sure! Let's do this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-794646465:711,integrat,integrate,711,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-794646465,1,['integrat'],['integrate']
Integrability,"> > Hi @rois1995 any progress? Would be very interesting to add this to develop, looking forward to using it actually.; > ; > Hi @bigfooted, unfortunately I do not have enough time/computational power to perform a proper validation. I only tried something with a NACA0021 at 17 deg and 60 deg and they were promising, at least for the DDES implementation. The SAS ones are not that good. I'll upload some post-processing as soon as I have the time to do so. Hi @rois1995, I believe there is an error or a typo in the Babu's paper in the Q_SAS source term and in turn in your implementation, which may be the reason for the poor performance in SAS results. . ![image](https://github.com/user-attachments/assets/5791d344-967a-4cc5-b512-457b7fe61435). This term changes units depending on the output of the max function, which doesn't make any sense. I believe the terms in the max function should be divided by omega^2 and k^2 instead of omega and k, respectively. Which is exactly how it is done in [https://resolver.tudelft.nl/uuid:5d23e2a6-5675-450d-bf3d-1dd40d736cae](url). I will try some of the benchmark cases in these papers when I have the time. Let me know what you think.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2447067474:773,depend,depending,773,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2447067474,1,['depend'],['depending']
Integrability,"> > If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > > ```; > > * Turbulence solvers;; > > ; > > * Heat solver;; > > ; > > * Radiation solver;; > > ; > > * General passive/active scalar solvers;; > > ; > > * Eventual transition solvers;; > > ```; > > ; > > ; > > The starting point would be the current base turbulence solver.; > ; > I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :). Me too. I'm already cleaning up our code a bit so it's easier to see the differences and similarities.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-794344854:669,integrat,integrate,669,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-794344854,1,['integrat'],['integrate']
Integrability,> @EvertBunschoten even if the performance isn't great this is a pretty small change so I think we can merge it. Do you have time to wrap it up and add a simple regression test?. I just added a test case and tutorial under the TestCases and Tutorials repo under the same branch name. I'm also writing a short tutorial on the SU2 website repo.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-2271237145:133,wrap,wrap,133,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-2271237145,2,['wrap'],['wrap']
Integrability,"> @bigfooted out of curiosity, how does a non-planar FFD box affect the deformation/optimization process?. When deforming a mesh, there can be mesh nodes close to the edge (planar sides) of the box that are either inside or outside of the box, depending on how you the nonplanar face ABCD is interpreted. This ambiguity can be resolved by either splitting the face into 2 triangles over a dividing line AC or BD, or by defining an average middle point and dividing the plane into 4 triangles.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1742#issuecomment-1225218421:244,depend,depending,244,https://su2code.github.io,https://github.com/su2code/SU2/pull/1742#issuecomment-1225218421,1,['depend'],['depending']
Integrability,"> @jayantmukho You can modify the routine CFlowOutput::WriteVolume_Output() in order to disable the writing of the files. Yes, I thought that would be the easiest place to make the change. But unfortunately, this gets ignored when the `CSingleZoneDriver` runs `SetResult_Files` and forces the output with the `force_writing` option. `StopCalc` passed into this function for `force_writing` and that is basically always true at this point in the case of steady RANS since the `CFluidIteration` has just finished running `Solve()`. An easy way to fix this would be to add `force_writing` to the input of `WriteVolume_Output`. I can preserve the behavior in the `COutput::WriteVolume_Output` but add some logic for the fixed CL mode in the `CFlowOutput::WriteVolume_Output`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-540650002:34,rout,routine,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-540650002,1,['rout'],['routine']
Integrability,"> @kursatyurt Hello, thank you so much for the lead.; > ; > Our initial scope mostly involved writing our own kernels and I did explore some libraries at the start - I was planning on using CUSP as well but my main concern was its lack of being updated to the newly compatible versions of the toolkit. cuSolver and cuBLAS do exist, but I chose to go ahead with a ""simple"" kernel implementation to have more control. I also felt that if I could keep the block size of the grid in optimal territory then they could be just as fast as those options (please do correct me if my reading of the literature or the situation was incorrect). To learn the basics, it's a good idea, but for large-scale projects, I prefer using existing libraries if possible.; Those libraries generally exploit state-of-the-art solution like mixed-precision computing. A gaming GPU is not way faster than a good CPU in double precision, but way faster in single precision, most of them have 64:1 ratio, however server class GPU have 2:1 ratio. Also when available they use vendor libraries like cuBLAS or hipBLAS. It is always nice to have you only care about connection and somebody else handle the solver as performant as possible. In future probably they will provide more and more solvers and it will be automagically works. It is kind of light-weight too, not a huge dependency like Trilinos or PETSc. ; > ; > I was not aware of Ginkgo and I will surely give it a go and try to produce some comparative results. I am currently super busy for this month and will get to working on the code with some delay.; > ; > Again, thank you for the lead!. I can test on various GPUs (P100/V100/A100 and 4070Mobile) on single node multi-gpu etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346#issuecomment-2397803409:1345,depend,dependency,1345,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346#issuecomment-2397803409,2,['depend'],['dependency']
Integrability,"> @martin-g this shouldn't affect your work right?. The changes in this PR won't affect my PR!; I have updated the actions already in my PR, e.g. https://github.com/su2code/SU2/pull/1619/files#diff-9410ebdbbce3193b6dc6a3c13da802b844198871d2e65958a82747fd84e86c64R64. So, once dependabot sends a new PR with updated action it may lead to merge conflicts but it will be trivial to fix them!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1682#issuecomment-1164830493:276,depend,dependabot,276,https://su2code.github.io,https://github.com/su2code/SU2/pull/1682#issuecomment-1164830493,1,['depend'],['dependabot']
Integrability,"> @oleburghardt, looks like this is taking a turn to also address primal CHT topics, but all comments on the main dish have been addressed. Can we merge this to shorten the dependency chain between PR's while you continue working on ironing out minor kinks?. True, but that was about it. They just have fit in so well. As for the main part, we just have to keep in mind the `CDiscAdjMultizoneDriver::SetObjFunction` that two of you didn't like. But as I said, it has much to do with other changes that should be done before.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774#issuecomment-540531599:173,depend,dependency,173,https://su2code.github.io,https://github.com/su2code/SU2/pull/774#issuecomment-540531599,1,['depend'],['dependency']
Integrability,"> @sun5k @rois1995 we now have 2 PR's on the same subject. This one is already reviewed, and I am not keen on wasting work (mine and others). The way I see it this PR followed the way we encourage for contributions to SU2, draft PR, etc, and thus it should be integrated. So, @sun5k can you finish the little things missing here? That way PR #1788 can then build on top of this. Oh, @rois1995 has significant progress in the LM model. I didn't know about this progress because I missed the SU2 conference in 2022. Now, I'm making the V&V and tutorial cases in my [repository](https://github.com/sun5k/su2code.github.io/blob/master/_vandv/LM_transition.md). So, at least tomorrow, I will PR to V&V, Tutorials, and TestCases. After PR of the V&V, Tutorials, and TestCases, I thought almost done about this PR #1751. Is there anything else I should do with this PR #1751?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1275423001:260,integrat,integrated,260,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1275423001,1,['integrat'],['integrated']
Integrability,"> Accuracy or stability wise? . Stability-wise. On the DSMA cases I posted, the edge limiters both stall. > It bugs me that the limiter function starts at 0 (when r=0) while all others start at 1 and actually go above one until r becomes greater than 1. Yeah, maybe it needs to be reworked, but I thought that most limiter functions started at 0? E.g. from Venkatakrishnan. <img width=""448"" alt=""Screen Shot 2020-07-23 at 9 22 37 AM"" src=""https://user-images.githubusercontent.com/19416354/88311740-23891a00-ccc6-11ea-9439-73e07343b7f2.png"">; <img width=""455"" alt=""Screen Shot 2020-07-23 at 9 20 39 AM"" src=""https://user-images.githubusercontent.com/19416354/88311750-25eb7400-ccc6-11ea-87dd-e134d5b686be.png"">. > Maybe the definition of r for Piperno needs some adjustment for unstructured grids? In the paper R is the ratio of consecutive deltas. He discusses that in section 5.1 of his paper. Depending on whether your upwind gradient comes from the node or the triangle upwind of the edge, you have; <img width=""547"" alt=""Screen Shot 2020-07-23 at 9 34 49 AM"" src=""https://user-images.githubusercontent.com/19416354/88313073-d312bc00-ccc7-11ea-8b59-5635bc8d9b15.png"">; I modified the upwind difference to be consistent with this definition (which is why the regressions that use van Albada failed, the rest seem to be a segfault that I'll fix soon).; The choice of r is also discussed briefly [here](https://github.com/su2code/SU2/files/4967575/r_factor_Li.pdf). > doesn't phi(r) (the piece-wise part) need to be multiplied by another term to give the final psi(R)?. The other term (1/3 + 2/3*R) is baked into when I recompute the limited Project_Grads. Since we multiply psi(R) by the upwind difference deltaU_u, it becomes U_i + 1/2\*(1/3 deltaU_u + 2/3 deltaU_c)\*psi(R), which we get for kappa=1/3. > With kappa close to 1 my gut feeling says the limiters will be off everywhere (r~1 by definition) unless the gradient goes wild.; > Also the left and right states will be very similar, and sin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050#issuecomment-663114188:896,Depend,Depending,896,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050#issuecomment-663114188,1,['Depend'],['Depending']
Integrability,"> Can you describe a bit more the stopping strategy you want? The new output structure is much more flexible than before, and you can even use Cauchy criteria based on time averages (of pretty much any coefficient), with different windowing methods and so on. Does Cauchy criteria based on time averages only work for time-independent flows? Because it seems that WINDOW_START_ITER needs to be set in the section of TIME-DEPENDENT SIMULATION in the input .cfg file. Thank you.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1304#issuecomment-863322166:421,DEPEND,DEPENDENT,421,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-863322166,1,['DEPEND'],['DEPENDENT']
Integrability,"> Do that in a different order please, add the regression now, we merge the PR, and then you continue the work. We want short PRs. Hi, I meet a problem when I change /.github/workflows/regression.yaml to enable compilation with CoolProp for one of the config sets (BaseMPI). To compile CoolProp, I import cmake submodule of meson. However, when github workflow builds BaseMPI, the error message is **'can not find cmake.'** . I think this is because github does not have cmake. . Do you have any advice? Thank you. (the other subproject Mutationpp also import cmake submodule, do you know how that new feature is built on github?)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1289289170:387,message,message,387,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1289289170,1,['message'],['message']
Integrability,"> Does the code work when the file exist? i.e. is this related to the reading in general or exclusively with writing the example?. Yes, it is only when writing the example_profile, so it doesn't leave _CSolver::LoadInletProfile_ ,although it does reach the end of the routine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1767#issuecomment-1264688015:268,rout,routine,268,https://su2code.github.io,https://github.com/su2code/SU2/issues/1767#issuecomment-1264688015,1,['rout'],['routine']
Integrability,"> Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.; > - Has a very simple syntax; > - Is header-only; > - Requires C++11 compilation; > - Not as feature rich as Google Test or Boost Test; >; > Questions; >; > - How do developers feel about adding unit tests to SU2?; > - If a unit-testing framework were added to SU2, would you actually; > use it?; > - Do developers hav",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:5615,depend,dependencies,5615,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['depend'],['dependencies']
Integrability,"> Everything looks good. Please add yourself to AUTHORS.md. Thank you for you help, I updated the newest version following your advice. However, **'Build SU2 (linux 64) failed'** and the error message:. **'FileNotFoundError: [Errno 2] No such file or directory: '/github/workspace'**. When I compile and build this branch on my Pc, I do not meet this problem. Could you please give any idea to help solve it?. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1273046609:193,message,message,193,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1273046609,1,['message'],['message']
Integrability,"> Hi @SteffenMath,; > ; > Welcome to SU2 (it seems it is your first PR), it looks like a good generalisation of the moving averages, I leave some small code comments below. As a general point does this averaging rely on fixed timesteps?; > ; > Cheers,; > Pedro. Hi @pcarruscag, . thanks for your quick reply and the usefull comments. I've pushed and updated version, that includes changes to your suggestions. ; Regarding your general question: The windowing approach is in theory not dependent on a fixed time-stepsize, however the current implementation relies on a fixed stepsize. This can be changed quite easily in the CWindowingTools.cpp file and the corresponding class, should there be demand. Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836#issuecomment-566524740:485,depend,dependent,485,https://su2code.github.io,https://github.com/su2code/SU2/pull/836#issuecomment-566524740,1,['depend'],['dependent']
Integrability,"> Hi and thank you for this PR, I think it will be really useful. I noticed that you removed several functions in the python wrapper, and also renamed others. This will break the compatibility with the fsi module. May I ask you why you had to remove it? We can maybe find a solution that keeps the possibility to use the fsi module as well. Hi Nicola! Are you asking about methods relating to number of vertices, global indices, coordinates, deformable marker tags, etc.? If so, we have not removed those and they are still available through the Python wrapper. These functions were relocated to [CDriverBase](https://github.com/su2code/SU2/blob/feature_pysu2_DEF/Common/include/drivers/CDriverBase.hpp) so they can be inherited by all other drivers. These changes should not break compatibility with the FSI module (aside from some function renaming).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1351900925:125,wrap,wrapper,125,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1351900925,2,['wrap'],['wrapper']
Integrability,"> How should I update my branch with upstream/develop? Should I merge upstream/develop into my branch (and push to my fork on github)? Or may I rebase my branch on top of upstream/develop (and force push to my fork on github)?. Both ways are legit, feel free to use which one is easier for you [here](https://www.freecodecamp.org/news/the-ultimate-guide-to-git-merge-and-git-rebase/) a comparison between them. It depends on the taste of the developer. . > I assume I should add myself to the _Individual Contributors_ section of AUTHORS.md, is that correct?. Yes",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1951#issuecomment-1466144727:414,depend,depends,414,https://su2code.github.io,https://github.com/su2code/SU2/pull/1951#issuecomment-1466144727,2,['depend'],['depends']
Integrability,"> I don't known how the process to find the alpha that gives you a given CL works, but could the derivative not be obtained from this process? i.e. you could avoid the FD step entirely. It is a simple proportional controller that will change the angle of attack after a number of iterations depending on the difference between the current CL and the target CL. . So if the the option `ITER_DCL_DALPHA = 0` then it will do exactly what you suggest. It calculates the derivative based on the last update. The only problem with that is, there is no guarantee that the simulation at the previous update was converged, so the derivative might be incorrect. . But you are correct, I could just do a really tiny update (order of delta AoA ~10^-6) at the end and calculate the finite difference using that value. Let me try that and see if the gradients it calculates are reasonable, or if the update is too small and it gets clouded by numerical errors.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-539606698:291,depend,depending,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-539606698,2,['depend'],['depending']
Integrability,"> I don't understand the question very well. The order of the points needs to be according to the VTK hexahedron http://www.princeton.edu/~efeibush/viscourse/vtk.pdf I can't visualize where you are getting that deformation, but when using an FFD box that does not include the entire design surface you need to be careful with the continuity of the deformation to prevent creating discontinuous steps. Mmmh I see. It looks like the blade elements are extending beyond the blade surface itself and, therefore, are cut by the FFD box even if the whole geometry appears to be included withing the FFD box domain. I solved the issue by defining an user-defined fixing plane (very cool option, btw). I experienced a similar situation with an internal flow over cylinder, too.; My question was whether this behavior was mesh-dependent or FFD box-dependent. I guess it is reasonable to say that mesh elements extension beyond the body which we're optimizing is causing this, however FFD continuity allows to keep this dummy shape deformation from happening. . Secondly, I had MAX DIFF = 0 because I couldn't understand your correction properly. I had to consider the righ-hand rule third component (_thumb_) pointing inside the FFD box for each of the surfaces we establish when attaching the FFD box (_each of those defined by the points listed in FFD_DEFINITION_). Then it worked perfectly.; Still, I don't understand why for some geometries we apply what discussed in the [tutorial](https://su2code.github.io/tutorials/Species_Transport/) and here it is the opposite. At least I know what to expect and how to fix it. If you could add an alert message in the next SU2 version, that would be much appreciated. > Well, it's the F-FFD week it seems :) https://www.cfd-online.com/Forums/su2/249879-when-use-su2_def-generate-ffd-box-i-can-not-get-ffd_surface_points.html. It's sunday: is the week ending or starting? ahah I guess we both stopped counting ;); As always, thank you very much for the time you're s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025#issuecomment-1546805169:818,depend,dependent,818,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025#issuecomment-1546805169,2,['depend'],['dependent']
Integrability,"> I get the idea but from the numerical standpoint this is an even worse idea than the way we do fluid-fluid interfaces. Additive decomposition of elliptic equations is not effective at all. Are you looking to model contact between multiple solid materials?. Hi Pedro. What do you mean by additive decomposition? And what do you mean by ""effective"" in this context? In terms of stability, the model converges rapidly, even when initializing one zone at a temperature far above that of the neighboring zone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-1819331603:109,interface,interfaces,109,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-1819331603,1,['interface'],['interfaces']
Integrability,"> I get the idea but from the numerical standpoint this is an even worse idea than the way we do fluid-fluid interfaces. Additive decomposition of elliptic equations is not effective at all. Are you looking to model contact between multiple solid materials?. Yes, I'm looking to model the transfer of heat between multiple solid zones with different thermal properties. Eventually I'd like to model contact resistance of such interfaces as well, where the user could specify the contact resistance value of each solid-to-solid interface. This is something that me and Praharsh will be working on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-1782996372:109,interface,interfaces,109,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-1782996372,3,['interface'],"['interface', 'interfaces']"
Integrability,"> I just found a heap buffer overflow in the interface code, mentioning it here in case it is related [#2246 (comment)](https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720). I ran your test case with the fixes from #2246 and the address sanitizer, it still shows the behaviour that you describe and the address sanitizer did not detect anything else. So it's probably not related to the aforementioned overflow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2042496683:45,interface,interface,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2042496683,1,['interface'],['interface']
Integrability,> I see that the heat dependencies are currently being set in the adjoint fluid iteration and on the new adjoint heat iteration. . Thanks for the comment. Could you give me an example to what kind of dependencies you are referring to?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/619#issuecomment-442874041:22,depend,dependencies,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/619#issuecomment-442874041,2,['depend'],['dependencies']
Integrability,> I'll ignore the request for review the same way you ignored my questions shrug. Could you clarify your questions? I sent you a message on Slack.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1622300968:129,message,message,129,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1622300968,1,['message'],['message']
Integrability,"> If the mesh is not moving, why are you rotating the search coordinates?. I'm so sorry for the belated response! I was trying to debug and test the new feature and to give a proper pull-request.; As for the question:; Because we are using rotating frame for rotor. In rotating frame we consider the rotating effect by adding source terms in governing equations so that the mesh movement is spared. But when we transfer data between rotor and stator for unsteady simulation, the rotor side has to be rotated to match the reality. The rotor is actually rotating, so as the flow phenomena, like rotor wakes passing through the interface. Otherwise, we will see non-rotating wakes in the stator frame of reference. Every time step, the matching grid points between two sides need to be updated as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1951929669:625,interface,interface,625,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1951929669,1,['interface'],['interface']
Integrability,"> If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > ; > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > ; > * Turbulence solvers;; > ; > * Heat solver;; > ; > * Radiation solver;; > ; > * General passive/active scalar solvers;; > ; > * Eventual transition solvers;; > ; > ; > The starting point would be the current base turbulence solver. I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-793978226:624,integrat,integrate,624,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-793978226,1,['integrat'],['integrate']
Integrability,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:813,wrap,wrapper,813,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301,1,['wrap'],['wrapper']
Integrability,"> Is it possible for the fluid side to work index-based and the structural side as before?; > We are combining the cross terms manually and re-recording each step anyway... (Please rather say internal-based, or variable-based - both approaches are index-based, they differ in the way they are stored :-)). In principle, yes. One can have both at the same time. I'd have to think about it, sounds a bit messy to me right now to get it all consistent. One could also change `GetMultizone_Problem()` to `GetMultizone_Problem() && !GetFSI_Problem()` or similar at those places. Anyway, we know the reason for this problem, so I'll leave it up to you which way we go. > but it depends also a lot on what timing we are moving in. Yes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542224837:672,depend,depends,672,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542224837,1,['depend'],['depends']
Integrability,"> Just in case it is helpful, the Abseil library from Google is a nice way to use some C++14 and later features with only a C++11 requirement. We could consider integrating if it makes life much easier...; > ; > https://abseil.io. Thanks for pointing me to this library :) There was a project that was in dire need for such libraries. Well I'm still a newbie discovering the code. From what I can see, the whole code base is C-oriented (maybe even originating from Fortran??). But I would advise against integrating it (Maybe it's a bit of an overkill for the current state of SU2) because most devs won't actually use the features from c++17 (myself included) and we should be able to deal with the lack of make_unique and variable templates in c++11 :smile:. With that said, if you're planning on using more c++ features while rebuilding/extending the code base, it might be a very good idea to integrate it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-670977781:161,integrat,integrating,161,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-670977781,3,['integrat'],"['integrate', 'integrating']"
Integrability,"> Nice work already! If you click on 'Details' at the right of the failed Regression and Unit Testing cases you will see why they fail. I think one of the first things to do is go through these error messages ('variable may be used uninitialized', etc) and fix them so the regression tests will run. Thank you! I am in the middle of doing it. Hopefully, there are not that many issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810#issuecomment-1308632788:200,message,messages,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810#issuecomment-1308632788,1,['message'],['messages']
Integrability,"> Note that you need to checkout this branch `fix_2d_periodic_rotation` (it is not in `develop` yet). Hi Pedro,; I checked the files you sent but building SU2 from source provided some errors:. - _MinGW64_ files provided from SU2 official website are corrupted and the installation crashes; however, it is possible to install the software but the .exe file mentioned in the installation guide won't be present. ; - After building _meson.py_ , the ninja installation command was line typed and the following alert message appeared "" **ninja: fatal: chdir to 'build' - No such file or directory** "". On a different laptop (with different user, to avoid the same mistakes) the following ERROR came up after the mason.py command line:; "" **'meson.py' is not recognized as an internal or external command, operable program or batch file** "". I don't know if any other user might have experienced the same errors. ; Anyway, are the bugfix files you published already available in the pre-compiled version? ; In the meanwhile, I'll try to figure out this inconvenient. Thank you in advance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1562#issuecomment-1069325722:513,message,message,513,https://su2code.github.io,https://github.com/su2code/SU2/issues/1562#issuecomment-1069325722,2,['message'],['message']
Integrability,"> OK, I see that some refactoring happened e.g. to the python wrapper in the meantime. What's the best way to resolve the conflicts? --> If I hit the Resolve conflicts button, there is nothing I can do. Sorry, mistakenly I removed your functions from conflicted files github somewhat allow me to solve the conflict but not added any new commit or revert it. Feel free to add them as an additional commit or revert my commit. . Normally if you have a merge conflict easiest way is to solve the conflict from your IDE. Pull the latest develop and merge to your branch, while merging you need to resolve the merge conflict. This was an easy case you only have a few conflict, git write conflicts ass. ```; >>> code from your branch; void xyz(); /* your implementation */; === develop; void xyz(); /* their implementation */; <<< ; ````; your need to replace that part with whichever code you want to keep or delete both of them etc. Then mark from the top right corner as resolved. I am sorry, I am a bit tired and did not identify your part of the code from the previous implementation since it is in the middle. I removed all of them and GitHub automatically push it. The required code pieces are these if I am not wrong. I am really sorry about the mistake. from `SU2_CFD/src/python_wrapper_structure.cpp`; ```cpp; ////////////////////////////////////////////////////////////////////////////////; /* Functions related to dynamic mesh */; ////////////////////////////////////////////////////////////////////////////////. void CDriver::SetTranslationRate(passivedouble xDot, passivedouble yDot, passivedouble zDot) {; if (rank == MASTER_NODE) {; cout << endl << "" Setting new translational velocity in x, y, z direction."";; }; for (iZone = 0; iZone < nZone; iZone++) {; config_container[iZone]->SetTranslation_Rate(0, xDot);; config_container[iZone]->SetTranslation_Rate(1, yDot);; config_container[iZone]->SetTranslation_Rate(2, zDot);; }; }. void CDriver::SetRotationRate(passivedouble rot_x, passived",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1536008994:62,wrap,wrapper,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1536008994,1,['wrap'],['wrapper']
Integrability,> Please run `preconfigure.py --help` and see if it addresses what you need. You mean the script in the `legacy` folder ? . It does not provide any flag to tell the configure script to use existing external dependencies.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645514795:207,depend,dependencies,207,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645514795,1,['depend'],['dependencies']
Integrability,"> Recently I was looking around the 3rd Annual SU2 conference web page(#1683), and I came across a presentation that seemed to be related to this PR.; > ; > [SU2conference](https://su2foundation.org/su2conference2022/) : Day2 The title: Implementation of Œ≥-Re Œ∏ transition model within SU2: model validation and the presenter is Andrea Rausa.; > ; > I'd like to see the presentation above the presentation. The 2nd SU2 conference presentation video was uploaded. So, Is the 3rd SU2 conference video going to be uploaded?. Hi @sun5k, I'm sorry but I've just seen this message. I have uploaded a link to the presentation to my pull request. If you need anything then feel free to ask.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1276056772:567,message,message,567,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1276056772,1,['message'],['message']
Integrability,"> Regrading the results: Why do we not see the dip in skin friction coefficient for low Reynolds like we see in the paper of Rumsey? The paper shows that predicting this dip is a feature of the model, and it makes it different from the van Driest theory. I thought it depended on the grid resolution. The case of fine resolution grid(545 x 385), we can see ""dip"" in SU2 result(but relatively small). . ![image](https://github.com/su2code/SU2/assets/50565314/35739361-fa48-4710-aaea-97daf8ccf7cc); ![image](https://github.com/su2code/SU2/assets/50565314/50025c47-35c8-4480-aec1-1a3f17cf2342). From the ""Coarse-Zoom"" plot, The ""dip"" in coarse mesh(138 x 97) also appears in SU2, but it is really weak.; ![image](https://github.com/su2code/SU2/assets/50565314/0a1cd730-b321-47c9-aaee-1647bb696898); ![image](https://github.com/su2code/SU2/assets/50565314/0d60d026-ab8e-4cbf-b3ec-439ae67b5c96)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2271#issuecomment-2089945113:268,depend,depended,268,https://su2code.github.io,https://github.com/su2code/SU2/pull/2271#issuecomment-2089945113,1,['depend'],['depended']
Integrability,"> So, really, obtaining the GridVel vector would just be an additional FD computation both for rigid movement and dynamic grids, and a lot of memory savings are possible. Hey @rsanfer, I think that is ok for this PR. After a short search I guess such a routine does not exist yet. Or can you point me to the right direction? ; Otherwise `CVolumetricMovement::ComputeGridVel_from_Coord(..)` would be a naming suggestion. What do think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766#issuecomment-524359236:253,rout,routine,253,https://su2code.github.io,https://github.com/su2code/SU2/pull/766#issuecomment-524359236,1,['rout'],['routine']
Integrability,"> Thank you Yes we plan on contributing more, this commit was more of a test run just to understand the process. I added Dr Yair Mor Yossef and myself as Authors, per your request. However I do not see a button anywhere that says merge pull request (even before changing Authors.md). It should be below this message,You should see the list of 'things that need to be green': Changes Approved, Conversations resolved, and then Checks passed. At the moment I am writing this, the checks are still running. Below the Checks you should see the button ""Squash and Merge"". Once all checks have passed, you can press that button.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2221211665:308,message,message,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2221211665,1,['message'],['message']
Integrability,"> Thank you for the feedback but for 99% of cases it is easier for users if we download the dependencies for them. The philosophy behind SU2 has always been to provide as much of a self contained package as possible. But this check will allow users to use external dependencies just fine, as long as they happen to use an external 0.61.1?. ... I am not entirely sure I understand the issue here. You want to make it *easier* for users by downloading the dependencies, so you make it harder if they went and got their own dependencies? If someone has gone to the effort of getting their own dependencies instead of using your documented meson.py, it would seem like that inherently means they are the 1% of use cases and you could probably just leave them to it. Is the issue rather that only Meson 0.61.1 has been tested to work?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1450921338:92,depend,dependencies,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1450921338,10,['depend'],['dependencies']
Integrability,"> Thanks for pointing that out. I dont think it is intentional. Maybe we can use this PR also to fix this ?. That depends on how atomic we want these PRs to be. This PR is largely a refactoring PR, and shouldn't change any underlying performance. But adding extra calculations on source terms and wall conditions might change the performance of the code. The two changes are completely compatible, so combining them wouldn't be hard. Nevertheless, I propose we keep these changes separate, so that the purpose of each PR is clear and easy to see. In my mind, two small PRs are easier to check and review than one large PR. @talbring @economon What do you think? One big PR or two small PRs?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626#issuecomment-458177675:114,depend,depends,114,https://su2code.github.io,https://github.com/su2code/SU2/pull/626#issuecomment-458177675,2,['depend'],['depends']
Integrability,"> Thanks. Is it possible to target only some paths for formatting? I'm concerned about making life too difficult for developers, and we cannot break lines in some files because we parse them to generate some python code. Having only some paths we would then include more files over time until we cover everything. @pcarruscag ; The hook options of pre-commit hooks are [here](https://pre-commit.com/index.html#pre-commit-configyaml---hooks) . As far as I understand yes it is possible with the `files` option (AFAIK it is a regex pattern) another option is excluding some directories now I only exclude the `external` directory. . I look at the regression test the values seem okay but the test fails is this due to wrappers? If you tell me which directories should be omitted, I would adjust it quickly. In general, we can also disable column limit/wrapping from `clang-format` but it is probably not the best option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1948#issuecomment-1455246335:716,wrap,wrappers,716,https://su2code.github.io,https://github.com/su2code/SU2/pull/1948#issuecomment-1455246335,2,['wrap'],"['wrappers', 'wrapping']"
Integrability,"> The ""int"" in ""intIndexBased"" is for internal then? Because its type is also int, easy mistake to make xD. Yes.. The name was the first one I gave that routine. It somehow made it through.. Now that I had to type it several times I'd love to have it changed. But anyway.. I'm a bit puzzled that it seems to be so easy but maybe it's just as simple as you said - new approach inside `CDiscAdjSolver` and old in `CDiscAdjFEASolver` (if I got that correctly?). That would come in handy for all further developments. Let's wait for the validation. I'll also do one with this branch for the CHT adjoints tomorrow, just to be sure.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542360883:153,rout,routine,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542360883,2,['rout'],['routine']
Integrability,"> The FFD is defined in a way that makes all points fail the ""point inside box"" check, we need to improve the user-friendliness of this check, try using this order of the points for ffd setting. Applying the right-hand rule to the first 4 points must point into the center of the FFD 0.0134584, 0.0087787, -0.035265, 0.0108551, 0.00980938, -0.041096, 0.00734385, 0.013199, -0.0388281, 0.0114466, 0.0124845, -0.0326164, 0.0276521, 0.0238333, -0.0393685, 0.0240801, 0.0278683, -0.0456933, 0.0203954, 0.0303584, -0.0422846, 0.0246565, 0.0271419, -0.035573). I checked but it works only for this specific mesh. When I apply the same FFD box generation for the diffuser (following the righy-hand rule), I still obtaind MAX DIFF = 0. . In [this tutorial](https://su2code.github.io/tutorials/Species_Transport/), the FFD box points ordering is counterclockwise and I always performed my optimization with this kind of FFD box. I cannot understand if this behavior is mesh dependent or it just me not understanding the way you ordered your points therefore my impossibility to replicate your FFD attachment is the correct way. Also, could this issue be the origin of this weird shape deformation? . ![image](https://github.com/su2code/SU2/assets/96534491/c2ff9f0b-26db-426e-96c9-6157e2a20891)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025#issuecomment-1546644391:965,depend,dependent,965,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025#issuecomment-1546644391,1,['depend'],['dependent']
Integrability,"> The change log entries are categorized depending on the labels feature, fix, chore for new features, bug fixes and maintenance. If you don't want your PR listed, add the label no_changelog.; So remember to always add a label to your PR (maybe we will automate that soon)!. That describes it pretty well in my opinion. . I'll close this issue in a day or so... maybe someone had the same question and didn't read the PR description yet as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/822#issuecomment-555021114:41,depend,depending,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/822#issuecomment-555021114,1,['depend'],['depending']
Integrability,"> The documentation looks great! (Answered a couple of my questions); > Can you give an example of linking to external libraries? e.g. BLAS; > For example I currently need:; > ; > ```; > export CPPFLAGS=""-DHAVE_LAPACK""; > export LDFLAGS=""-L$OPENBLAS/haswell_omp/lib""; > export LIBS=""-lopenblas -lgfortran -fopenmp""; > ```. Well you have two options. First, if the libraries can be found with `pkg-config`, the easiest is to just use ; ```; openblas = dependency('openblas') ; su2_deps += openblas; ```; Otherwise you'll have to declare the dependency with; ```; openblas = declare_dependency(...); su2_deps += openblas; ```; where the arguments for that routine are explained [here](https://mesonbuild.com/Reference-manual.html#declare_dependency)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-517243186:451,depend,dependency,451,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-517243186,3,"['depend', 'rout']","['dependency', 'routine']"
Integrability,"> The message will look like this:; > ; > ```; > The FFD box 'BLADE_BOX' is not properly defined. The first 4 points must be listed counter; > clockwise, such that applying the right-hand rule results in a vector into the box.; > This is according to the VTK hexahedron ordering:; > 7 +----+ 6 ; > /| /| ; > 4 +----+5| ; > |3+--|-+ 2 ; > |/ |/ ; > 0 +----+ 1 ; > The CCW convention also applies in 2D, where only the bottom face is specified.; > ```. Thank you Pedro. ; However, for the diffuser scenario, I set up the FFD Box applying the right-hand rule to both surfaces (point the third component to the inside FFD box volume from each surface):. ![Screenshot (162)](https://github.com/su2code/SU2/assets/96534491/c50d22e2-f1af-4285-97aa-9a800f0a3ac3). It worked perfectly and mesh is deforming but it is the opposite for the second sets of points compared to what you've done. I don't know if this can help you.; Feel free to attach the updated version of SU2, I'll be happy to test it (I'm currently running it on Ubuntu).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025#issuecomment-1547731020:6,message,message,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025#issuecomment-1547731020,1,['message'],['message']
Integrability,"> There are 2 cases in the testcases repository, both are using the Euler solver. Maybe also check if your case is running correctly with the settings from those testcases. Earlier, I was defining the mesh movement for the static zone as:. ` GRID_MOVEMENT= NONE `. since it was stationary. However, after checking the test cases, I found that the stator zones should also be defined as moving as. ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.0 ; ```. even though the mesh stays stationary. In that case, the unphysical flow results I presented earlier vanished. Earlier, I tried the cylinder test case with the inner zone having . ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.0; ```. and the outer zone having; ` GRID_MOVEMENT= NONE `. where the simulation gave physically viable results. I guess the zone interface may not accurately work if the `GRID_MOVEMENT` options of the neighbouring zones do not match while one of the zones has a non-zero movement. However, I have not simulated any other test cases. Also, the sliding_interface/rotating_cylinders test case diverges with the given .cfg files. At around the 775th time step, I received the following error message:. `SU2 has diverged (Residual > 10^20 detected). `. However, it works just fine if the simulations are done in subsonic flow (e.g. `MACH_NUMBER= 0.1`) while keeping the rest of the configuration the same.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2051695181:892,interface,interface,892,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2051695181,2,"['interface', 'message']","['interface', 'message']"
Integrability,"> This displs problem with a single rank was also a bug we had in our MPI wrapper and you fixed right?. Yes, in 83723092eeb1c7cdd232952c3ddbafa0dedd16be.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1397474150:74,wrap,wrapper,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1397474150,1,['wrap'],['wrapper']
Integrability,"> To me it looks like the strange behaviour develops from the area in your mesh where the mesh density along the interface is visibily different (north and south of the image shown). I have encountered the same issue with a finer mesh where the mesh density along the interface is more or less uniform:. <img width=""600"" alt=""vawt_fineMesh"" src=""https://github.com/su2code/SU2/assets/81166192/4e6cc10c-676a-4cba-bcb1-a189c23cf599""> . --------------. > Are you able to reproduce this behaviour with any other cases, say a rotating cylinder perhaps?. I have tried a rotating 2D cylinder case with a similar setting. The only differences are that the time step is reduced to a tenth to prevent any numerical oscillations, and the mesh is generated by using Gmsh (for the VAWT case, it was Pointwise). The simulation diverged at the end. The discontinuity around the interface is quite apparent, especially on the upstream part. **Mesh:**; <img width=""600"" alt=""meshAll"" src=""https://github.com/su2code/SU2/assets/81166192/174d0bb7-d9fe-474d-8fea-39f81c215cd3""> ; <img width=""600"" alt=""meshClose"" src=""https://github.com/su2code/SU2/assets/81166192/12d35aa5-f167-455b-929a-0ee6e009e9af""> . **Axial velocity:**; <img width=""480"" alt=""cyl_velX"" src=""https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExdmZtdHNoc2JraTRoZDdpbGozb3FyeDJ2ZTl1aXEwYm15YjVpaWN1ayZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/82Sq7bFaCUITTYRjns/giphy.gif""> ; **Eddy viscosity:**; <img width=""480"" alt=""cyl_eddyVisc"" src=""https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExaHNoc3B2ZjJnOWt1c2JzYTRqazF1aGs5bmd0bmFoZjMxaDl1NmswMiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/nD011ofucZmvRVcg7H/giphy.gif"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2041086476:113,interface,interface,113,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2041086476,3,['interface'],['interface']
Integrability,"> Well I've taken a look at this but it's probably beyong my current programming skills. I only have experience with Python. Perhaps someone else could look at this? I still think it's a very helpful error message for new users and it sounds like it wouldn't be too much work to fix it. Thank you for having a look at the code, I am sure your skills are fine, this area of the code is just horribly complex. It is fixed in #824, it should have been a separate PR but I had changes to the NumericsPreprocessing in that PR already.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/842#issuecomment-569149689:206,message,message,206,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-569149689,1,['message'],['message']
Integrability,"> You had I comment but I don't see it here. In any case, it's the total time to solution (same residual drop) that I expect will get worse. At constant CFL. Sorry for replying so late, I had to put this project on the back burner for a bit. I made a mistake in my previous analysis, which is why I removed the message. I now ran five simulations with only solid to solid CHT heat transfer with contact resistance. With each simulation I quadrupled the number of mesh elements and ran with a constant CFL. ; ![iterations](https://github.com/su2code/SU2/assets/38651601/3ccccb9c-8e36-4ac5-b323-4e4c364aa58e); The number of iterations required until convergence seems to scale linearly with the number of elements. However, this was not the case for total simulation time, which scales quadratically. ; ![simtime](https://github.com/su2code/SU2/assets/38651601/654dfbec-4603-4006-a4b6-577824a5be7c)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-1870457004:311,message,message,311,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-1870457004,1,['message'],['message']
Integrability,"> You may want to remove the string based interface since it's known to be inneficient. When replacing the string-based with index-based look-up methods, the performance improves substantially. The figure below shows the average measured evaluation time (measured with chrono library) vs the number of output variables. It's clear that using index-based look-up methods results in reduced query time, as well as improved scaling. ![scaling_nVars](https://github.com/su2code/SU2/assets/38651601/31252439-ac6e-4f1b-82d4-e13a55d54c98)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214#issuecomment-1952521226:42,interface,interface,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214#issuecomment-1952521226,2,['interface'],['interface']
Integrability,"> after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type set MSMPI_LIB64=\%MSMPI_LIB64% in cmd or $env:MSMPI_LIB64=""\""+$env:MSMPI_LIB64 in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;. @Zcaic Hi zcaic, . I tried this, but it still thow the same error. with message; ```; OSError: [WinError 123] Êñá‰ª∂Âêç„ÄÅÁõÆÂΩïÂêçÊàñÂç∑Ê†áËØ≠Ê≥ï‰∏çÊ≠£Á°Æ„ÄÇ: 'D:\\mingw-w64\\x86_64\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\lib\\C:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'; ```. ‚¨ÜÔ∏è just from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\libC:\\Program...`. Is that any solutions ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582:411,message,message,411,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582,1,['message'],['message']
Integrability,"> harder to compare your current work to previous versions. `git diff --ignore-space-change` -> the diff to develop is empty. > Splitting files does a lot more for readability than just removing white spaces. True... removing white spaces actually doesn't do much for readability. And this is not about ""one or the other"". Restructuring files with one class per file + consistent naming + checking comments etc has a lot more value.... and can still be done nonethless. > fixing other (more important) formatting and commenting issues,. New Formatting issues wrt to the tab removal are not introduced, they are just different now ... and consistent. With tabs it depends on the IDE setup whether the formatting for every specific line is ok. Because tabs are prob introduced by people with different space-per-tab ratio. The benefit I see is the possibility of a ""once-and-for-all"" solution of this PR in combination with some kind of trailing-whitespaces+tabs-bot.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808#issuecomment-548465503:663,depend,depends,663,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-548465503,1,['depend'],['depends']
Integrability,"> in the viscous forces case, it should be ok to move the ""if Domain"" up and avoiding computations on halo points. Corrected in commit f6f986ec256a1c47199703ef6540145506dbbdc3 in #1362 similar to that, moving the code depending on the nearest neighbor access (i.e. YPlus calculation) down into an ""if Domain"" block. Note however that after this change YPlus is not computed on halo cells any more, which might be problematic e.g. for [CTurbSSTSolver::SetTurbVars_WF](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/SU2_CFD/src/solvers/CTurbSSTSolver.cpp#L494).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1430#issuecomment-966266235:218,depend,depending,218,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430#issuecomment-966266235,1,['depend'],['depending']
Integrability,"> the off-PR comments can be integrated in this PR to clear that up a bit. If not that is OK as well. It's more than OK, the CHT implementation suffers a bit from being a single person's project.. you're very welcome to have a look over it! :-). > Can you add that option to the config_template.cfg together with that description, the valid inputs and the default. Actually I'm hesitating a bit adding it to the config template right now. I'd prefer to have `DIRECT_TEMPERATURE_ROBIN_HEATFLUX` as the default and ""hide"" the rest as developer's options for the moment.; The reason simply is that those different methods need to checked and validated against each other before we make them public.; E.g. I figured that for the incompressible CHT test case from the repo, there is a severe gap between the heatfluxes obtained from the ""averaged"" approach and the direct one, see below. ![heatflux_convergence](https://user-images.githubusercontent.com/22639394/72885197-bb9e4a80-3d07-11ea-9fad-a4d709dc511e.png). That needs to be cleared up first...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/839#issuecomment-577108935:29,integrat,integrated,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577108935,2,['integrat'],['integrated']
Integrability,">Also the cht interface is ""just"" an isothermal boundary, any reason not to make this feature available for that?. No, I am not really familiar with the CHT part, but If it is same as an isothermal boundary, I can add this feature there as well. . Are you suggesting I make an option say MARKER_ROUGH and read in roughness values only for the corresponding marker? I went with the current input method to make sure only wall boundaries were given roughness heights but I suppose that can be ensured in other ways too. I will experiment with a few things and see which works the best. I will wait to see if there any suggestions in the meeting and then fix all the MPI stuff. . Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-630819942:14,interface,interface,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630819942,1,['interface'],['interface']
Integrability,@EvertBunschoten even if the performance isn't great this is a pretty small change so I think we can merge it.; Do you have time to wrap it up and add a simple regression test?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-2269672071:132,wrap,wrap,132,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-2269672071,2,['wrap'],['wrap']
Integrability,"@LaSerpe : thanks for the mesh!. @EduardoMolina : no huge rush on merging this one.. we should make sure everything is working ok. It would be very helpful if you can take a look at the Taylor-Green Vortex case again, like we looked at before, now that the parallelization is improved. The option to run is still there (TGV = YES), and I think you already have the meshes.. @pcarruscag : thanks for the comments (will address soon). Also, thanks for the reminder about the pre-accumulation. I disabled that since I had to rework the least squares routines for the periodic BC and I did not turn it back on. The variables may need to be adjusted now though",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652#issuecomment-464599593:547,rout,routines,547,https://su2code.github.io,https://github.com/su2code/SU2/pull/652#issuecomment-464599593,1,['rout'],['routines']
Integrability,"@MarcoFossati @monika1387 @economon I've been working with Adrien Loseille from INRIA to bring Vic's old fork (referenced above) up to date with develop. Check out [feature_adap](https://github.com/su2code/SU2/tree/feature_adap). It uses goal-oriented (adjoint-based) adaptation instead of feature-based (just based on Mach or pressure) that Vic's fork used. Some things to note:; 1. It's currently only tested on Euler (it uses a Hessian of the Euler fluxes so it might work for NS/RANS, but probably not) (@WallyMaier and I also extended it to TNE2 in [feature_amgtne2](https://github.com/su2code/SU2/tree/feature_amgtne2) but the source terms are giving us trouble on adapted meshes); 2. It requires AD support since it uses the discrete adjoint to weigh the Euler flux Hessians; 3. I did all my testing with the AMG executable since pyAMG doesn't have all the features I currently need, but I just updated the branch to use pyAMG. I just tested the new interface with an airfoil and it seems to be working, but there might still be some bugs. You'll want to run mesh_adaptation_amg.py with the following options:; **ADAP_SIZES:** list of mesh complexities for each adaptive level. This is correlated to mesh size, but picking good values requires some playing around; **ADAP_SUBITE:** number of adaptations performed at each adaptive level. If set to (2,3) for example, it will run 2 adaptive iterations to try to reach ADAP_SIZES[0], and 3 iterations to try to reach ADAP_SIZES[1]; **ADAP_EXT_ITER:** number of iterations used by SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_RESIDUAL_REDUCTION:** order of magnitude residual reduction for SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_SENSOR:** currently only works for GOAL; **ADAP_HMAX:** maximum cell size (m); **ADAP_HMIN:** minimum cell size (m); **ADAP_HGRAD:** gradation coefficient (>1) used by AMG during mesh smoothing. A larger value corresponds to larger allowed gradient in mesh size. E.g. for the RAE2822 I used:;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504675574:957,interface,interface,957,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504675574,1,['interface'],['interface']
Integrability,"@Mick7: yep, I‚Äôll look at that next. You may have noticed that the other routines for Loading and preparing adjacency are now general for any mesh reader, so all we need is to move the reader for the ASCII format into its own class. . @pcarruscag: there is at least one simple stretching function I have in some old code I can put in. Other elements would also be nice. It‚Äôs easy to cut the quads into tris (I have the same implementation for this in a python script) and hexas into tets. Might wait for a compelling need to add these features though, but I have no doubt we‚Äôll add them",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-524179517:73,rout,routines,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-524179517,2,['rout'],['routines']
Integrability,"@Nicola-Fonzi, you may as well want to consider importing as well the structural velocities in the interface from your external solver. That information is always available and gives a consistent definition of the displacement and velocity on both the grid motions and the interface for dynamic FSI problems -- not to mention simplifying the evaluation of the mesh adjoints.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778326558:99,interface,interface,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778326558,4,['interface'],['interface']
Integrability,"@TobiKattmann,; In the Airfoil_2D case, why are the surfaces detected as straight? Also the messages are a bit strange:; Boundary marker leading_edge is a single straight.; Boundary marker 0.0 is a single straight.; Boundary marker pressure_side is a single straight.; Boundary marker 0.0 is a single straight.; Boundary marker suction_side is a single straight.; Boundary marker 0.0 is a single straight.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-537167522:92,message,messages,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-537167522,1,['message'],['messages']
Integrability,"@WallyMaier . I am able to get two forces since I have defined; `% Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( shell1, shell2 )`. For instance I see . `Surface name: shell1 ; Total CL... ; ... ; Surface name: shell2; Total CL...; ...`. But these coefficients are dependent on shape attributes like `REF_AREA= 0` and `REF_LENGTH= 0.5` (diameter of sphere being 1 unit). I was just curious if there's a way for the user to define `REF_LENGTH` or `REF_AREA` for two objects that are being monitored? At the moment these shapes are the same dimension but I was curious about what to do in the case they are not identical. Thanks a million!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/788#issuecomment-531982235:320,depend,dependent,320,https://su2code.github.io,https://github.com/su2code/SU2/issues/788#issuecomment-531982235,1,['depend'],['dependent']
Integrability,"@Zcaic nope, I add '\\' before`'C:Program Files...` and the environment MSMPI_LIB64 finally like `\C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\`. I paste wrong error message before . the actual error message after I change the envirnment variable is ; from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\lib\\C:\\Program...` . just a more `\\`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-1191551136:172,message,message,172,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1191551136,2,['message'],['message']
Integrability,"@bigfooted @economon and @pcarruscag . I created separate repo to demonstrate what I'm after in the simplest way possible: [FoamScience/AutoRegistering-Cpp-Classes](https://github.com/FoamScience/AutoRegistering-Cpp-Classes/commits/master). > If you're going to check the code, check CSolver first, then CEulerSolver ... - Commit FoamScience/AutoRegistering-Cpp-Classes@20ca601 implements the concept for a single Factory.; - (Make-believe) Standard solver classes are compiled to a library; - A (Make-beleive) Custom solver class is compiled to its own shared library; - By default, the make program knows only about CEulerSolver (from standard solvers lib); - But if you pass in a library name (eg. libCCustomSolvers.so), it gets loaded, symbols pulled and the registration map for CSolver gets updated with the new Solver automatically. - But it would bloat the code if things went this way, so commit FoamScience/AutoRegistering-Cpp-Classes@380c052 isolates self-registration code into 3 macros to:; - Declare the registration map and associated members; - Define and initialize registration-related members on the base class; - Register a class. If you only care about the interface and not how the thing is implemented, commit 380c052 is your target.; I took care to document the important parts of the code, so, please, dig in and let me know what you think. At this point, integrating this with SU2 (and at what parts, and when) is your call but If you decide to do so, l will help.; > And yes, I wrote my own build script so I can have direct control over the compiler and the linker. **One last note: I used ""dlopen"", so you will have to compile the code on Linux I suppose.**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680962672:1178,interface,interface,1178,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680962672,4,"['integrat', 'interface']","['integrating', 'interface']"
Integrability,"@bigfooted Has there ever been any discussion regarding implementation of a `START_TIME=` capability into the config file? After going through the code a bit, it looks like doing this would be a good starting point for implementing ability to adjust deltaT mid-runs, as in general the code presumes `TimeIter*deltaT` as being the current time. This would be problematic for unsteady restarts that have a varying timestep. Plus, this would allow one to, without using the Python wrapper, use a different timestep in the config file for an unsteady restart. It also may clear up some confusion to have an explicit option for this, as in #2071. It can maybe look something like:. % Start time for restarting unsteady simulations; % = -1 for default calculation (START_TIME=RESTART_ITER*TIME_STEP); START_TIME=-1. Then `CConfig::GetPhysicalTime` could be appropriately updated and used in-place of all locations in the code where a physical time is manually calculated.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190#issuecomment-1870730956:478,wrap,wrapper,478,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190#issuecomment-1870730956,2,['wrap'],['wrapper']
Integrability,"@clarkepede Sure, I will try to make an example to show .; So my problem is CD nozzle and I am running FEM-LES solver and exported; data in .csv and PARAVIEW type. Everything seems good its just I was unable; to visualize exported .vtk files (open but does not show me the final; result- stuck in just opening it - I am not sure if its paraview issue or; its 4 GB file which causing this error). So I tried to export my file using; Tecplot type option but unable to do so and getting this Bus error which I; never encountered earlier in SU2 ever (what is that error - YOUR; APPLICATION TERMINATED WITH THE EXIT STRING: Bus error (signal 7)). So; trying to dump my files in anyway to visualize them, since its FEM-LES; solver with DG scheme so files are pretty huge. Still let me know if I need; to send you an example. Attached .cfg file for reference. On Mon, Mar 16, 2020 at 6:13 PM Clark Pederson <notifications@github.com>; wrote:. > @monika1387 <https://github.com/monika1387> I'm sorry, I still don't; > understand. Do you have a minimal working example, where you can reproduce; > the problem you're having?; >; > Where does the error occur? In SU2_CFD? In SU2_SOL? In Paraview? In; > Tecplot? What's the specific error message? What's the context?; >; > ‚Äî; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/787#issuecomment-599781328>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ALJ3OXFU367WBC2BSOGLCILRH2P7VANCNFSM4IT7MM2A>; > .; >. -- ; *Thank you,*. *Monika Chauhan *. *Graduate Research Assistant, Doctoral Program*. *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA 24061*; *Cell# 540-998-5012*",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-599793809:1227,message,message,1227,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-599793809,1,['message'],['message']
Integrability,"@clarkpede : I would like to collaborate with you to wrap up the C++ implementation of this feature (I know you have already completed the Python version). If you have some time, can you please push your version to an internal branch of the SU2 repository?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/467#issuecomment-366410742:53,wrap,wrap,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/467#issuecomment-366410742,1,['wrap'],['wrap']
Integrability,"@clarkpede : Thank you for the detailed post, and your hunch is likely correct. Unfortunately, the existing periodic BC implementation has some limitations due to how closely it is coupled to the old mesh partitioning routines during setup. Those original partitioning routines had become difficult to maintain or expand (very hard to make quick fixes), so they were rewritten from scratch in PR #513. Now, the periodic BC is also being rewritten cleanly (hopefully for the last time :) ). A prototype can be seen in feature_periodic that is already working for Euler problems, and the rest is in progress now. I am aware that several folks are in need of this, but know that a new version is coming.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/550#issuecomment-403600179:218,rout,routines,218,https://su2code.github.io,https://github.com/su2code/SU2/issues/550#issuecomment-403600179,2,['rout'],['routines']
Integrability,"@clarkpede @EduardoMolina : yep, the issue is that the periodic and MPI communications are tangled up together in the current implementation. The main issue occurs when there are periodic points that are also ghost nodes. . Ideally the periodic and MPI would be separated, and the periodic communications would happen first so that all periodic BCs are synchronized before trying to send across partitions. Right now, the comms are mixed, so sometimes, we send old data at periodic points to their matching pair, which then gets updated in a later MPI comm. Therefore, the second call you have added to the MPI resends the periodic update to with the correct data that was updated with MPI in the first call. I hope this is clear.. Anyway, please go with this change as you have it. All of the MPI and periodic comms will be replaced with a cleaner/separated version right after v6.2.0 (you can see what I am working on in feature_mpi_periodic). I will likely need some help testing that soon :).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-463711280:353,synchroniz,synchronized,353,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-463711280,2,['synchroniz'],['synchronized']
Integrability,"@clarkpede @economon In my never ending shuffling-code-around I noticed that we do this:; ```; for (unsigned short iPeriodic = 1; iPeriodic <= config->GetnMarker_Periodic()/2; iPeriodic++) {; InitiatePeriodicComms(geometry, config, iPeriodic, PERIODIC_IMPLICIT);; CompletePeriodicComms(geometry, config, iPeriodic, PERIODIC_IMPLICIT);; }; ```; ... for implicit iterations but not for explicit ones, the purpose of that comm is to:. /*--- Communicate the solution from our master set of periodic; nodes (from the linear solver perspective) to the passive; periodic nodes on the matching face. This is done at the; end of the iteration to synchronize the solution after the; linear solve. ---*/. I imagine the residual is constructed in a way that is consistent for the 2 periodic points, but... The explicit iteration implementation is now in CFVMFlowSolverBase.hpp::Explicit_Iteration_impl",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/763#issuecomment-770241115:637,synchroniz,synchronize,637,https://su2code.github.io,https://github.com/su2code/SU2/issues/763#issuecomment-770241115,1,['synchroniz'],['synchronize']
Integrability,"@clarkpede: thanks for organizing - it would be great to have your help on this topic. I'll let the others comment on the status of those branches, but in general, we have 2 major issues:. 1. Numerous bugs in the creation of the initial periodic BCs and new mesh file generated by SU2_MSH (ordering, inability to treat adjacent periodic markers, e.g., triply-periodic cube, and others). The branches above contain some fixes, and we should also merge in your #500 too. 2. Runtime issues in SU2_CFD, especially in parallel. Some of these issues may be fixed by the branches above, but the second step is to create the periodic BCs on the fly in SU2_CFD and integrate properly with the parallel partitioning, removing the need to call SU2_MSH as a pre-processing. Once the clean up in 1 is finished (a lot of this searching and matching can be reused), and after the fix_partitioning branch is merged, we can start on this task. I am planning to work on this part.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431#issuecomment-358744678:656,integrat,integrate,656,https://su2code.github.io,https://github.com/su2code/SU2/issues/431#issuecomment-358744678,1,['integrat'],['integrate']
Integrability,"@drewkett, in version 7.0.3 the hybrid solver should work better, it auto detects if it is not able to get enough parallelization and switches to an alternative approach (there is a warning message when this happens).; The alternative approach (which at least on hex-dominant grids is not worse) can also be forced with `EDGE_COLORING_GROUP_SIZE= 0`. I've been daily driving this version of the code for the past month without issues, if you find any do let us know. Also, to some extent I replicated these findings of SU2 slowing down when using ethernet interconnects, the machines I have access to with this kind of network are shared so I did not try to benchmark (as repeatability is an issue) but it does slow down quite a bit as soon as more than one node is involved.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-606535236:190,message,message,190,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-606535236,1,['message'],['message']
Integrability,"@economon Hi, I've been looking at the code and I can't figure out how to use the custom BCs. Is there an example, preferably with a time dependent custom BC you could point me to? Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/690#issuecomment-504792989:138,depend,dependent,138,https://su2code.github.io,https://github.com/su2code/SU2/issues/690#issuecomment-504792989,1,['depend'],['dependent']
Integrability,"@economon Hm ok, that is strange. The one that it builds is the newest on github (v1.9). On linux meson finds ninja if it is in the root directory of the source code (which should be there after bootstrapping), apparently that is not the case on mac. Can you check whether it works when you add the source dir in your path variable? Like @davetaflin also mentioned for windows, on mac you can also directly generated xcode files (by adding `--backend=xcode` to the meson call), then ninja is not required. But anyway, I will look for a solution to that problem. @davetaflin Thanks for your impressions. I would say the documentation is decent. The important things are there, which helped me setting it up. But I guess that we can also ask the developers if we have some problems when adding more complex dependencies (however, we then also should ask ourselves whether we really want to add them in this case). But is the conclusion that you'd also prefer meson over automake ? :D",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-495117437:805,depend,dependencies,805,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-495117437,1,['depend'],['dependencies']
Integrability,"@economon for prototyping, the changes proposed in #753 allow a container to be added to CVariable as a public member and thus directly accessible everywhere (one can even allocate only in some derived constructors, with no risk of leaking memory). For release-quality code I think encapsulation is desirable, that being said I'm not above declaring the client solver a friend of the specific CVariable it uses (also with the changes introduced, there would be a way to access member variables directly without moving them to base CVariable).; I like encapsulation not because of OOP principles but because of `GetVelocity(iDim)` instead of `GetPrimitive(iDim+1)`. As for overhead I think it is 0 as long as methods are inline: [example](https://gcc.godbolt.org/z/QXoExF); But in all honesty I also chose to change the CVariable interface as little as possible to make my life easier.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-520226075:829,interface,interface,829,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-520226075,1,['interface'],['interface']
Integrability,"@economon the error will be fixed in the next commit. About the error message: I added the additional dashed line in order to immediately see the error message. . What about the following ?; ```; ...; ------------------------ Iteration Preprocessing ------------------------; Zone 1: Euler/Navier-Stokes/RANS fluid iteration. ------------------------- Solver Preprocessing --------------------------. Error in ""void CSolver::Read_SU2_Restart_Metadata(CGeometry*, CConfig*, bool, std::__cxx11::string)"": ; -------------------------------------------------------------------------; Unable to open SU2 restart file solution_flow.dat; ----------------------------- Exit Failure ------------------------------. ```. Unfortunately I cannot get the kind of SU2 module in the interface ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-350366632:70,message,message,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-350366632,3,"['interface', 'message']","['interface', 'message']"
Integrability,"@economon, I expect to run into problems for grids containing around 250 million DOFs, depending a bit on how many variables you store in the restart file. We can definitely do this test with a dummy grid. As you added this to the RPSVV group, let's close this issue here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/696#issuecomment-500965914:87,depend,depending,87,https://su2code.github.io,https://github.com/su2code/SU2/issues/696#issuecomment-500965914,1,['depend'],['depending']
Integrability,"@hlkline Thank you for your reply. We have been using SU2 for over 2 years and only recently we started looking at the code to understand some of the issues we were facing. To clarify I did not report it as a bug. I do understand that the flow variables obtained by Riemann invariants (line 10433) are set as the primitive variables for the boundary point. But when it came to the flux calculation I saw Jacobian_j and that triggered my question. I know that each scheme has a ComputeResidual routine but for this specific case what routine is being used? Is it the one in numerics_template.cpp? And I still do not understand why Jacobian_j should play a role in the flux calculation! I will be glad if you can kindly comment on it. Finally, can I now treat that this is a non-issue?. @fpalacios @oleburghardt @hlkline By the way don't you think Nu_c in line no 729 in numerics_direct_mean.cpp should be Nu_c = (1.0-Beta)*LamdaNeg? This was the other *probable* bug I was referring to within SU2 found in CUSP implementation. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-314971522:493,rout,routine,493,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-314971522,2,['rout'],['routine']
Integrability,"@hlkline to answer the question about LAPACK and BLAS. Yes, the code compiles and runs without them, albeit very inefficiently. However, it is necessary to have this possibility because the routines of LAPACK and BLAS cannot be used in AD mode.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/565#issuecomment-419082199:190,rout,routines,190,https://su2code.github.io,https://github.com/su2code/SU2/pull/565#issuecomment-419082199,1,['rout'],['routines']
Integrability,"@j-signorelli afai see this PR would indeed cause `CDriverBase::GetMarkerNormalHeatFlux` to return nondimensional HeatFlux (compared to dimensional HeatFlux in current master) and could trouble people there ... but in doubt we can still dimensionalize in that function to keep the python wrapper as-is. (But there might be a cleaner solution to this). As I do not know much about the structural solver in SU2, I cannot say with confidence -> but from what I saw from skimming over CFEA(Base)Solver, config_template, and a handful of Elasticity cfg's there is no nondimensionalization for the structural solver (but somebody with better knowledge of that should educate me here). . Edit: The HeatSolver's HeatFlux written dimensional as well -> so I guess that should be changed as well ... or at least the whole thing should be consistent across solvers",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1679756279:288,wrap,wrapper,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1679756279,1,['wrap'],['wrapper']
Integrability,"@jayantmukho Thanks for taking the lead on that. This is long overdue ... I already talked to some people about that and the conclusion was often that we should get rid of the current python framework and rely solely on the in-memory python wrapper functionalities. From what I can tell this is also what you would suggest. I have some additional things to add here:. - We should keep in mind other things than ""just"" shape optimization problems.; - The surface parameterization should be more or less independent of all the other things, so that we can easily integrate other tools/methods. In a first step it might be a good idea to just put all the FFD stuff into a separate (c++) library with a python interface.; - As you already mentioned, I am currently working on a more general way of defining output fields and in particular also objective functions in #913. I will add more information to this PR soon. The new python implementation should, in theory, not need to know about the specific objective function, but rather just asks for the value and the (surface) gradient. ; - We have to expose more c++ classes/functions to python. Especially the config and the geometry. . Maybe I will add more stuff/ideas, but thats it for now. @clarkpede : We will probably keep most of the postprocessing stuff in c++, so don't worry about that at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/923#issuecomment-607708376:241,wrap,wrapper,241,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607708376,3,"['integrat', 'interface', 'wrap']","['integrate', 'interface', 'wrapper']"
Integrability,"@jayantmukho The fix in PR in #921 is done. Whereas the shape optimization restart did not work before, it does work now, at least on the two test cases I checked. The only thing missing is a regression test, to make sure bugs like that don't happen again. So I agree that it should be merged soon while the long-term refactoring occurs. As for post-processing, the objective function calculation can be quite complex in the use-cases Beckett and I have encountered. That's why it's run as a post-processing step, rather than updated continuously during runtime. But I agree that those types of changes can be limited to the C++ side of the code, with minimal changes to the python wrappers. So it may not be relevant to the current refactoring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/923#issuecomment-607975492:682,wrap,wrappers,682,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607975492,1,['wrap'],['wrappers']
Integrability,@jayantmukho There is no general setting. But you can change the branch in .travis.yml to something else than `develop` or you add `[ci skip]` to the commit message. That will prevent travis from running automatically.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/762#issuecomment-526082617:157,message,message,157,https://su2code.github.io,https://github.com/su2code/SU2/pull/762#issuecomment-526082617,1,['message'],['message']
Integrability,@jayantmukho You can modify the routine CFlowOutput::WriteVolume_Output() in order to disable the writing of the files.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-540470903:32,rout,routine,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-540470903,1,['rout'],['routine']
Integrability,"@jayantmukho, as @juanjosealonso indicated the verification efforts will be presented at the annual developers meeting. However, we may not have time to answer all questions there, so a tutorial may be a good thing to have. To answer your question about setting different initial conditions (as well as space and time dependent boundary conditions), yes you can do that with the class CUserDefinedSolution, although this was not the primary intention. The intention of these classes is to run a verification case, where you add source terms to the governing equations, such that a given solution is an exact solution to the modified equations. In this way you can do a thorough accuracy check of your discretization, as shown in the figures by @economon. Hope this answers your questions a bit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/672#issuecomment-486683930:318,depend,dependent,318,https://su2code.github.io,https://github.com/su2code/SU2/pull/672#issuecomment-486683930,1,['depend'],['dependent']
Integrability,"@joshkellyjak The memory access violation described [here](https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720) does not occur unconditionally, it depends on the test case. The iterations of the inner loop for `jSpan == 0` and `jSpan == nSpanDonor - 1` (that we removed in the fix) only have an effect if the if-conditions in the loop body evaluate to `true`. I checked this for the serial test cases in the test file's ""turbomachinery"" section. - `aachen_turbine_restart`: iterations both with `jSpan == 0` and `jSpan == nSpanDonor - 1` have an effect, the latter trigger the memory access violations; - `jones_turbocharger_restart`: some iterations with `jSpan == 0` have an effect, but iterations for larger `jSpan` usually overwrite the results; also, the case `jSpan == 0` does not trigger the memory access violation; - `axial_stage2D`: the problematic code is not executed by this test case; - `transonic_stator_restart`: the problematic code is not executed by this test case. I think these observations point to why only the Aachen test case had address sanitizer findings, and why only the results of the Aachen test case were affected by the attempted fix. The other test cases basically ""do not care"" whether we do the extra iterations. @alecappiello Regarding your earlier question about the restart file. Restart files are to some extent specific to the version of SU2 they were obtained with, in the sense that newer versions of SU2 can behave differently if they use an old restart file. I was wondering if this is the case here, too. If the memory access violation had manifested itself in the restart file, a version of SU2 with the memory access violation fixed could give different results. The observations above point to why only the Aachen test case is affected.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276#issuecomment-2127703507:160,depend,depends,160,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276#issuecomment-2127703507,1,['depend'],['depends']
Integrability,@juanjosealonso Thanks for your response. I would definitely want to have a look at SUmb. If there is some documentation with the code and any published work that shows its capability will also help. > Both @vdweide and I can provide you with access to the appropriate routines / functions in SUmb. Please do provide me the access.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/791#issuecomment-533796609:269,rout,routines,269,https://su2code.github.io,https://github.com/su2code/SU2/issues/791#issuecomment-533796609,1,['rout'],['routines']
Integrability,"@mheimgartner it would be helpful to compare the full residual history of the two regression Testcases before and after this last commit. (you prob already have the ""old"" histories and just have to do 2 new ones, you know best how the case beahaves etc). The commit I added will fail the regression test but I strongly believe the Pseudo-time update, convective and viscous Jacobians were wrong. . A reason this went unnoticed might be because the densities were O(1), so disregarding them in the solution update after the Linear Solver acts some kind of Relaxation Factor (which can be larger 1 depending whether density < or > 1). And I guess that could be fixed via CFL or this CFLReductionFactor anyway.; The Jacobians were taking with respect to Y alone, which is not correct. They have to be taken with respect with rho*Y, the transported variable imo. The conv Jacobian is arguably the most important one (and tested alone showed the biggest lift in residual improvement). ; I briefly checked the BC's and DualTimeRes for this Jacobian problem. For the BC's I found no hand-derived Jacobians and DualTimeRes seems ok (but is not used afaik).; Note that if one got a case to convergence(=> Res ~=0) the Jacobians and pseudo time derivative do not matter of course at that point. So comparing fully converged solution should show only marginal/no differences. A little test showed mild benefits after 10 iter with the C6_vel_inl (but only 5 LinSolIter ... aint nobody got time for 50). old; Iter| rms p ....... | rms u ....... | rms v ......... | rms scalar; 10| -5.707858| -4.397627| -4.445825| -5.408779|; new; 10| -5.701236| -4.405045| -4.460350| -5.473466|",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447:596,depend,depending,596,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447,1,['depend'],['depending']
Integrability,"@monika1387 I'm sorry, I still don't understand. Do you have a minimal working example, where you can reproduce the problem you're having?. Where does the error occur? In SU2_CFD? In SU2_SOL? In Paraview? In Tecplot? What's the specific error message? What's the context?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-599781328:243,message,message,243,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-599781328,1,['message'],['message']
Integrability,"@oleburghardt @talbring This PR fixes the multicore heat-flux-sensitivitiy issues. Tested with the tutorial made by ole. Good job. I added a commit that fixes the error-message if you want to have tecplot-binary output but compiled using the --disable-tecio flag. It caused a compile time error ... it is behind a preprocessor statement #ifndef HAVE_TECIO, so this thing is only seen when using the --disable-tecio flag.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798#issuecomment-541239861:169,message,message,169,https://su2code.github.io,https://github.com/su2code/SU2/pull/798#issuecomment-541239861,1,['message'],['message']
Integrability,"@oleburghardt, looks like this is taking a turn to also address primal CHT topics, but all comments on the main dish have been addressed. Can we merge this to shorten the dependency chain between PR's while you continue working on ironing out minor kinks?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774#issuecomment-540513667:171,depend,dependency,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/774#issuecomment-540513667,1,['depend'],['dependency']
Integrability,@patelha57 and @aa-g have been doing a lot of work with the python wrapper. Any advice you guys can share here?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1672#issuecomment-1160527137:67,wrap,wrapper,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/1672#issuecomment-1160527137,1,['wrap'],['wrapper']
Integrability,"@pcarruscag . Of course I can make the test case available. Could you give me your email address, such that I can send you a link?; The typical size of the matrices is problem dependent. You can profile the gemm calls by adding the -DPROFILE flag to the compiler options. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-462245462:176,depend,dependent,176,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-462245462,1,['depend'],['dependent']
Integrability,"@pcarruscag : as for header issues, I believe the consensus was also moving toward completely splitting the headers by class as well. It is true that then we may need to include multiple headers one-by-one, but in most cases, I think that we may just need to add a handful (rather than all), and this division should also help us avoid some of the dependencies during compile time. Open to more opinions on this, of course.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-501388653:348,depend,dependencies,348,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-501388653,1,['depend'],['dependencies']
Integrability,"@pcarruscag ; I added a commit that improves the bad names for the new routines that we discussed #803. They should be more instructional now.; Moreover, at some places (default) function arguments are used instead of different functions, which hides the changes a bit and makes it more elegant.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798#issuecomment-546376383:71,rout,routines,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/798#issuecomment-546376383,1,['rout'],['routines']
Integrability,@pcarruscag All of the things look reasonable. The long-term goal would be to really have a generic interface for the linear solvers (at least that was my goal) so that we don't have to distinguish between mesh deformation and flow solution anymore inside of the CSysSolve class. Rather we pass objects for the solver and preconditioner and other options to the constructor. We can merge this in as soon as the tests pass.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650#issuecomment-474871738:100,interface,interface,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/650#issuecomment-474871738,1,['interface'],['interface']
Integrability,@pcarruscag Do you want to add the dependencies to meson in this PR?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-525350424:35,depend,dependencies,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-525350424,1,['depend'],['dependencies']
Integrability,@pcarruscag For me its fine if you do it in a separate PR. @economon I also assume that is has something to do with how the interfaces are handled. We definitely have to check it. For now in PR #715 I enabled grid movement (in the config) also in fixed zones.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-505477458:124,interface,interfaces,124,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-505477458,1,['interface'],['interfaces']
Integrability,"@pcarruscag Hi Pedro. ; After a while we think the problem lies in the .dylib shared library file suffix. After manually changing suffix into _pysu2.so one can import/load the python module. We also tried to change meson.build file under SU2_PY/pysu2 to enforce output .so file: ; ``` ; swig_lib = shared_library(; '_pysu2',; cpp_source,; dependencies: [wrapper_deps, common_dep, su2_deps],; objects: [; su2_cfd_lib.extract_all_objects(),; su2_def_lib.extract_objects('drivers/CDeformationDriver.cpp'); ],; install: true,; include_directories : mpi4py_include,; cpp_args : [default_warning_flags,su2_cpp_args],; name_prefix : '',; name_suffix: 'so',; install_dir: 'bin'; ) ; ```; However, bug still remains while running python script that used pysu2/pysu2ad module. There is a MPI related issue after calling Postprocessing in pysu2: . ```; ------------------------- Solver Postprocessing -------------------------; Deleted CNumerics container.; Deleted CIntegration container.; Deleted CSolver container.; Deleted CIteration container.; Deleted CInterface container.; Deleted CGeometry container.; Deleted CFreeFormDefBox class.; Deleted CSurfaceMovement class.; Deleted CVolumetricMovement class.; Deleted CConfig container.; Deleted nInst container.; Deleted COutput class.; -------------------------------------------------------------------------; [DN0a22c803:22646] *** Process received signal ***; [DN0a22c803:22646] Signal: Segmentation fault: 11 (11); [DN0a22c803:22646] Signal code: (0); [DN0a22c803:22646] Failing at address: 0x0; [DN0a22c803:22646] *** End of error message ***; Segmentation fault: 11; ```; The exact crash location is: ; ```; Exception Type: EXC_BAD_ACCESS (SIGSEGV); Exception Codes: KERN_INVALID_ADDRESS at 0x0000737e9bdce5a2; Exception Codes: 0x0000000000000001, 0x0000737e9bdce5a2; Exception Note: EXC_CORPSE_NOTIFY. VM Region Info: 0x737e9bdce5a2 is not in any region. Bytes after previous region: 3842065106339 Bytes before following region: 13412496251486; REGION",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1606#issuecomment-1106125840:339,depend,dependencies,339,https://su2code.github.io,https://github.com/su2code/SU2/issues/1606#issuecomment-1106125840,1,['depend'],['dependencies']
Integrability,@pcarruscag I guess the last to changes were in the equivalent area computation routine so they shouldn't alter the result of 'discadj_incomp_cylinder' in hybrid_regression_AD? Why does it fail?. In the flamelet PR I am currently fixing all regression tests and conflicts and I noticed in one of the recent runs that hybrid_regression_AD failed for a case which I couldn't explain at all. Rerunning the regression tests without any code modification solved that problem... so there seems to be some non-deterministic behavior maybe. @jblueh have you noticed such behaviour over at #1294 ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-898476956:80,rout,routine,80,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898476956,1,['rout'],['routine']
Integrability,"@pcarruscag I see, sorry I didn't realise that it still might be a mesh problem - I thought it was a memory issue from the error messages! Ok, I'll give it another try from scratch. If I understand correctly, amg only works with triangles and tetrahedrons, not pyramids or quads, is that right? Thanks again.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-757196402:129,message,messages,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-757196402,1,['message'],['messages']
Integrability,@pcarruscag Indeed both implementations are very similar. But this is the case for a lot of routines in CEulerSolver and CIncEulerSolver at the moment. We can think about introducing a common base class for both in the future to remove this code duplication. But for now there is no other way except for moving the implementation to CSolver which we should avoid in my opinion.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657#issuecomment-470926608:92,rout,routines,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/657#issuecomment-470926608,1,['rout'],['routines']
Integrability,@pcarruscag LGTM! Thanks for putting in the work and abstracting more of the repeated routines.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1375#issuecomment-923111383:86,rout,routines,86,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375#issuecomment-923111383,1,['rout'],['routines']
Integrability,"@pcarruscag Thank you for your quick response. ; The quotes solve the `:` delimiter problem, but the `\\` issue still persists. The output message is pasted below. `; Error in ""void __cdecl CConfig::SetConfig_Parsing(class std::basic_istream<char,struct std::char_traits<char> > &)"": ; -------------------------------------------------------------------------; Line 75: Statement found after continuation character.; MESH_FILENAME: multiple values for type string; Line 77: Statement found after continuation character.; Line 78: Statement found after continuation character.; Line 79: Statement found after continuation character.; MESH_OUT_FILENAME: multiple values for type string; Line 81: Statement found after continuation character.; Line 82: Statement found after continuation character.; Line 83: Statement found after continuation character.; Line 84: Statement found after continuation character.; Line 85: Statement found after continuation character.; Line 86: Statement found after continuation character.; Line 87: Statement found after continuation character.; Line 88: Statement found after continuation character.; CONV_FILENAME: multiple values for type string. ------------------------------ Error Exit -------------------------------; `",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1658#issuecomment-1152818053:139,message,message,139,https://su2code.github.io,https://github.com/su2code/SU2/issues/1658#issuecomment-1152818053,1,['message'],['message']
Integrability,"@pcarruscag Thanks for the cleanup. I have made a [pull request](https://github.com/su2code/TestCases/pull/72) to update solution file for the test case. You have deleted codes that create WeightNF.dat so I have deleted it from python codes as well. (I tried to push as a suggestion but it didn't work as I expected). > I think nearfield was a kind of internal interface between two boundaries with the same points, so not a ""do nothing"" group of points but more like an actuator disk without any jump. I thought so when I was trying to make it work in ver.6 but, when I tried with mesh with two boundaries with the same points, it didn't work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1351#issuecomment-899276864:361,interface,interface,361,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899276864,1,['interface'],['interface']
Integrability,"@pcarruscag When running SU2_CFD_AD, the solver is DISC_ADJ_INC_RANS, and a number of initializations are skipped when we do not include this check. Most notably setting kind_limiter, which then leads to the 'conditional depends on uninitialized value' message from valgrind.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1550#issuecomment-1064448056:221,depend,depends,221,https://su2code.github.io,https://github.com/su2code/SU2/pull/1550#issuecomment-1064448056,2,"['depend', 'message']","['depends', 'message']"
Integrability,"@pcarruscag can you finalize this, both these dependabots are waiting for the formatting status, but there is nothing to format I guess.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2133#issuecomment-1825623707:46,depend,dependabots,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/2133#issuecomment-1825623707,1,['depend'],['dependabots']
Integrability,"@pcarruscag just to clarify, are you suggesting switching some of the containers, e.g. `direct_iteration` and `direct_output`, to `unique_ptr`, or some of the vars causing the remaining leaks? Because for some of the remaining leaks, I think it's more of an issue with how we interface with CoDi/MeDi, or maybe even the tools themselves. For example, the destructor for `ExternalFunctionHelper` is; ```; ~ExternalFunctionHelper() {; if(!isTapeActive) {; delete data;; }; }; ```; but we only call `AD::EndExtFunc()` (which deletes `FuncHelper`) when the tape is active. Maybe there's a reason for this that @talbring can explain.; The leaks in MeDi all seem to stem from lines like; ```; h = new AMPI_Allgatherv_AdjointHandle<SENDTYPE, RECVTYPE>();; ```; and; ```; WaitHandle* waitH = new WaitHandle((ReverseFunction)AMPI_Isend_b_finish<DATATYPE>,; (ForwardFunction)AMPI_Isend_d<DATATYPE>, h);; ```; in ampiFunctions.hpp, where `h` and `waitH` seem to be defined locally and are never freed (at least from what I see, but @talbring can correct me if I'm wrong).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/929#issuecomment-612122738:276,interface,interface,276,https://su2code.github.io,https://github.com/su2code/SU2/pull/929#issuecomment-612122738,1,['interface'],['interface']
Integrability,"@pcarruscag, I agree with you it will be hard to beat the MKL (running at 60 percent peak for most of the gemm calls for the DG-solver), but if you don't have any performance loss, that would already be nice, as it improves readability. Furthermore, the performance of the DG solver in combination with the discrete adjoint is horrible, because it relies on my very naive implementation of the matrix products. So it would already be something if we can get an improvement there, although we do not use the DG adjoint solver (yet). . For me the easiest way to test things out for the DG-solver would actually be in SU2 itself. @economon put some nice profiling routines in there for the gemm calls, which can be used without any additional work to test eigen. @pcarruscag (or somebody else), could you create a branch in which eigen is downloaded in the external directory? I think I can manage from there. Thanks,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459952137:661,rout,routines,661,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459952137,1,['rout'],['routines']
Integrability,"@pcarruscag, my icpc version is 19.0.0.117 20180804....; The speed up is most likely also processor dependent. I ran this case on a Xeon(R) Gold 6140 CPU @ 2.30GHz with 24 Mb cache. Anyway, this is probably as fast as you can get the code to run with the current data structures. Maybe you can squeeze another 10 percent out of it, but that's most likely it. If we really want to speed things up, we need to change the data structures significantly (structure of arrays, a single array per variable, aligned memory allocation, padding arrays to a multiple of 8, no small loops over the number of dimensions, etc.) . As said before, I think we can get at least a factor of 4 in speed compared to the current version if we can use a significant number of SIMD loops, i.e. vectorization. However, I don't know how much support there is for a pretty much complete rewrite of the computational kernel. My two cents,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-524038333:100,depend,dependent,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-524038333,1,['depend'],['dependent']
Integrability,"@pcarruscag: the approach to use different gradient methods for the convective and viscous terms is relatively common across codes. If it is a computational cost concern, this can be addressed by fusing the kernels. . However, the bigger issue at hand is the other comment that is made in the article about the choice between LSQ and WLSQ/GG for 2nd-order upwind reconstructions: while less accurate, the former is much more robust, while the latter two usually require limiters just to obtain a stable solution on stretched RANS-type meshes, even for flows where we do not expect shocks/discontinuities. The problem with always requiring a limiter is that they stall convergence due to chatter, which apart from the obvious problems, also causes issues for the adjoint. I think everyone has experienced this. Hence the compromise to use both gradients as I note above, which is also stated on p. 9 of Anderson and Bonhaus ""An Implicit Upwind Algorithm for Computing Turbulent Flows on Unstructured Grids."" In that paper they mention an additional interesting point that, in their numerical tests, LSQ outperforms WLSQ/GG for reconstructing nonlinear data at interfaces on highly-stretched meshes. Note the WLSQ/GG gradients are used for the viscous terms, which is important for accuracy. This type of approach is still applied in FUN3D. . If there are any accuracy concerns, we can also address those via our typical verification tools. I agree that we should continue along the path of looking at grid quality issues and how they impact the numerics (potentially adding some grid-based corrections / limiting), but I think the proposed approach in this PR will serve us well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-532883592:1159,interface,interfaces,1159,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-532883592,1,['interface'],['interfaces']
Integrability,"@petebachant thanks for the effort to keep this PR going. I think that @tobadavid would be the best contact for updating the pySU2 wrapper build, as he is the original author. David, if you have a moment, could you please give this a look? Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-323252317:131,wrap,wrapper,131,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-323252317,1,['wrap'],['wrapper']
Integrability,"@qwebean The derivative terms you describe would appear in an analytical Jacobian. But SU2 needs the Jacobian of the discrete system. In other words, we don't need to know how the residual depends on the analytical gradient. We need to know how the values at some points ""i"" and ""j"" affects the residual. You want the Jacobian of the residual with respect to individual values at individual nodes, not interpolated functions. You can approximate the derivative (`da/dx`) of some quantity `a` as ""(a_j - a_i)/d_{ij}`, where `d_{ij}` is the distance between the point ""i"" and ""j"". So the Jacobian of (`da/dx`) with respect to `a_i` is (approximately) `-1/d_{ij}`. Does that answer your question? Do you have further questions?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1028#issuecomment-652455102:189,depend,depends,189,https://su2code.github.io,https://github.com/su2code/SU2/issues/1028#issuecomment-652455102,1,['depend'],['depends']
Integrability,"@rsanfer , I deleted CFEAFSIBoundVariable and kept its data in CFEABoundVariable because:; - It would require two vertex maps to be build, one for vertices another for interfaces.; - It would be less efficient memory wise, the vertex map is size O(N) the number of vertices is O(N^(2/3)) in the worst case, which means eventually having two maps is worse.; - Most FSI cases have a large interface and small fixed boundaries, allocating FSI tractions for the latter is not so bad. I also removed CDiscAdjMeshVariable, as it was empty, and kept only its ""Bound"" counterpart. With this vertex allocation / mapping strategy we always need to instantiate the ""Bound"" version of the class so if the intermediates are empty they can be omitted. Please review the changes and if you have some more thorough tests run them or send them over to me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/753#issuecomment-526546118:168,interface,interfaces,168,https://su2code.github.io,https://github.com/su2code/SU2/pull/753#issuecomment-526546118,2,['interface'],"['interface', 'interfaces']"
Integrability,"@rsanfer You shouldn't get in touch with the new AD routines at all unless you're using `CDiscAdjMultizoneDriver`.; So in case `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution)` gets executed, that likely means that the if-statement above, `config->GetMultizone_Problem()`, evaluates to true.; Some weeks ago I added another boolean (`CConfig::GetMultiphysicsDiscrete_Adjoint()`) but I was asked to revert that to the line above.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542170904:52,rout,routines,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542170904,1,['rout'],['routines']
Integrability,"@sun5k @rois1995 we now have 2 PR's on the same subject.; This one is already reviewed, and I am not keen on wasting work (mine and others).; The way I see it this PR followed the way we encourage for contributions to SU2, draft PR, etc, and thus it should be integrated.; So, @sun5k can you finish the little things missing here?; That way PR #1788 can then build on top of this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1275138609:260,integrat,integrated,260,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1275138609,1,['integrat'],['integrated']
Integrability,"@talbring : as you know, the difference between disabled and active grid movement with 0 velocity is that the former case does not even allocate the memory for the grid velocity at each node, and many conditionals checking for grid movement throughout the solver (fluxes, BCs) are avoided. This was to save memory and effort when grid motion is not needed, however, maybe we need to now change the strategy for multizone problems which may have both fixed and moving zones (perhaps always active with 0 as default). . I am a little surprised they are not the same as well, but somewhere in the code path there must be an issue with this.. my guess is something related to BC_Fluid_Interface() or the transfer structure when grid movement is active on both sides but has a value of 0 on one of the interfaces.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-505188890:797,interface,interfaces,797,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-505188890,1,['interface'],['interfaces']
Integrability,"@talbring ; Thanks for your help. I want to install SU2 by python wrapper build. So I write a definition file based on yours. However, some errors happened. The reason seems to be python environment. Sorry for troubling you. Could you give me some suggestions, please ?. Best. Here is my definition file.; ```; Bootstrap: docker; From: ubuntu:18.04; ; %post; apt-get -y update; apt-get -y upgrade; apt-get -y install python3 python3-pip git build-essential autoconf openmpi-bin openmpi-common libopenmpi-dev m4 gfortran swig vim; pip3 install mpi4py numpy scipy matplotlib; git clone --depth=1 https://github.com/su2code/SU2; cd SU2; mkdir SU2_Install; autoreconf -i; ./bootstrap; export CXXFLAGS=""-O3 -Wall""; python3 preconfigure.py --enable-autodiff --enable-mpi --enable-PY_WRAPPER --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx --prefix=$PWD/SU2_Install; make -j 4 install; make clean; cd ..; pip3 install tensorforce[tf]; git clone https://github.com/tensorforce/tensorforce.git; cd tensorforce/; git checkout major-revision-final; pip3 install -e .; ; %runscript; exec /SU2/bin/$1 $2 ; ```; The error is:; ```; make[3]: Entering directory '/SU2/SU2_BASE/SU2_PY/pySU2'; /bin/bash: python: command not found; swig -DHAVE_MPI -Wall -I/usr/include/python3.6m -I/usr/include/python3.6m -I/root/.local/lib/python2.7/site-packages/mpi4py/include -I/mpi4py/include -I/Library/Python/2.7/site-packages/mpi4py/include -outdir ./ -o SU2_APIPYTHON_wrap.cxx -c++ -python /SU2/SU2_BASE/../SU2_PY/pySU2/pySU2.i ; /SU2/SU2_BASE/../SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; Makefile:532: recipe for target 'SU2_APIPYTHON_wrap.cxx' failed; make[3]: *** [SU2_APIPYTHON_wrap.cxx] Error 1; make[3]: Leaving directory '/SU2/SU2_BASE/SU2_PY/pySU2'; Makefile:525: recipe for target 'all' failed; make[2]: *** [all] Error 2; make[2]: Leaving directory '/SU2/SU2_BASE/SU2_PY/pySU2'; Makefile:441: recipe for target 'install-recursive' failed; make[1]: *** [install-recursive] Error 1; make[1]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-515298427:66,wrap,wrapper,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-515298427,1,['wrap'],['wrapper']
Integrability,"@talbring I agree with your assessment of Boost. I think it's a heavyweight solution to a lightweight use-case. We could always include just the unit-testing header (they offer a header-only version), but ""people may want to use more and more features of boost,"" as you point out. If we as developers want to add Boost as a formal dependency for SU2, then that seems like a fine route. But I have the feeling that many developers do not want to add a Boost dependency. Honestly, Boost UTF doesn't offer anything that we can't get from Google Test. Catch2 is definitely the simplest and easiest of the unit-testing frameworks I listed. The only sticking point is that it requires c++03, and that the full-feature version requires C++11.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-500393344:331,depend,dependency,331,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-500393344,6,"['depend', 'rout']","['dependency', 'route']"
Integrability,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/911#issuecomment-598751341:494,depend,dependencies,494,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341,4,['depend'],['dependencies']
Integrability,"@talbring That was a good point about placement. I was able to move this implementation to a function called `FixedCL_Convergence()` in the euler solver class. It also allowed me to make it a little more robust. Since it still requires information about the convergence that is calculated in the integration container, the method has to be called `CFluidIteration::Iterate()`. I included the details of the implementation in the Constant CL tutorial on the website. That is in a pull request for the website. Consequently, that [pull request ](https://github.com/su2code/su2code.github.io/pull/16) needs to be approved first so that the regression test for this one can pass. This is because of a change in options in the Fixed CL mode.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-534420006:296,integrat,integration,296,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-534420006,1,['integrat'],['integration']
Integrability,"@talbring Yes, I do. I can't uninstall it since it breaks other packages. @pcarruscag Yeah same for me. You can see it here:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ mpicc -v; mpicc for MPICH version 3.3.2; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-pkgversion='Arch Linux 9.2.1+20200130-2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:318,wrap,wrapper,318,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474,2,['wrap'],['wrapper']
Integrability,"@talbring how do you want the ""interface"" to work for the user?; Do they modify meson.build?; Do they define environment variables for the root folder of each dependency? (I guess not); Do we force the installation directory? (not a good idea since some components can be installed with apt-get); Do we force them to link only statically / dynamically?; Also are you aware that linker flags for BLAS can be compiler dependent, especially for MKL?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-525688282:31,interface,interface,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-525688282,3,"['depend', 'interface']","['dependency', 'dependent', 'interface']"
Integrability,"@timjim333 you should probably open a new issue for this, specifying your system, Python environment, and the error messages you get. It may be possible to remove those hardcoded paths, changing. ```make; MPI4PY_INCLUDE = ${HOME}/.local/lib/python2.7/site-packages/mpi4py/include \; -I${PYTHON_SITE_PACKAGES}/mpi4py/include \; -I/Library/Python/2.7/site-packages/mpi4py/include; ```. to. ```make; MPI4PY_INCLUDE = ${PYTHON_SITE_PACKAGES}/mpi4py/include; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-477524398:116,message,messages,116,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-477524398,1,['message'],['messages']
Integrability,"@timjim333, I checked your grid with just connectivity info and I get the following error messages. Boundary marker BODY, surface element 77477: No corresponding volume element found.; Coordinates of the points; 0.1815790.04981870.0020471; 0.181850.04994770.00205104; 0.1816670.04971090.00204381. Boundary marker BODY, surface element 133348: No corresponding volume element found.; Coordinates of the points; 0.1814850.04947420.00203657; 0.1813090.04968980.00204316; 0.181230.04944470.00204356. Boundary marker BODY, surface element 134774: No corresponding volume element found.; Coordinates of the points; 0.181230.04944470.00204356; 0.1813020.04923740.00202934; 0.1814850.04947420.00203657. Boundary marker BODY, surface element 135217: No corresponding volume element found.; Coordinates of the points; 0.1816670.04971090.00204381; 0.181850.04994770.00205104; 0.1815790.04981870.0020471. So clearly the grid is invalid.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-494393404:90,message,messages,90,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-494393404,2,['message'],['messages']
Integrability,"@timjim333, create a sequential executable and run it on one core. It may take a couple of minutes, but it is not too bad. Then MPI is not used and you should definitely get the error message. I don't think there will be much of a difference in the release version and develop version for this problem. As far as the MPI is concerned, a one-sided communication is used for the error message. Sometimes the error message is not shown, depending on the MPI distribution and number of cores. Maybe this is something we have to look into. In any case, what MPI distribution are you using?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-493889597:184,message,message,184,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-493889597,4,"['depend', 'message']","['depending', 'message']"
Integrability,"@vdweide @talbring Ok, thanks you for all your thoughts and help troubleshooting this so far - I guess it might be the SU2 export plugin introducing this as I can't seem to identify the mesh issue within Pointwise itself. I'll contact support and leave a message here if any workarounds are found.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-495885490:255,message,message,255,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-495885490,1,['message'],['message']
Integrability,"@vdweide: yep, definitely a bug. Only the mean flow solver uses that routine. Please feel free to clean this up. I would also like to update the version for the incompressible solver (I think it needs a fix or two)... but we'll get to that after your changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/454#issuecomment-338776498:69,rout,routine,69,https://su2code.github.io,https://github.com/su2code/SU2/issues/454#issuecomment-338776498,1,['rout'],['routine']
Integrability,"A short summary of the things I did in the additional commits:. - I added a consistent error handling that can be used throughout the code. For example if a marker is not specified the error looks like that: ; ```; -------------------------------- Error ---------------------------------; In ""short unsigned int CConfig::GetMarker_CfgFile_TagBound(std::__cxx11::string)"": ; ------------------------------------------------------------------------; The configuration file doesn't have any definition for marker airfoil; ------------------------------------------------------------------------; Exiting now ...; ```; or if a solution cannot be found:. ```; -------------------------------- Error ---------------------------------; In ""void CSolver::Read_SU2_Restart_Metadata(CGeometry*, CConfig*, bool, std::__cxx11::string)"": ; ------------------------------------------------------------------------; Unable to open SU2 restart file solution_flow.dat; ------------------------------------------------------------------------; Exiting now ...; ```; In case you want to throw an error, you can simply call the function `SU2_MPI::Error(""Error Message"", CURRENT_FUNCTION)` where `CURRENT_FUNCTION` is a predefined macro which expands to the name of the routine at compile time. I already replaced almost all error messages in the code. - More MPI functions are included in the MPI Wrapper. - The rank/size is now stored in most of the bigger classes and initialized in the constructor. That means there are no calls to MPI_Comm_rank / MPI_Comm_size anymore in every routine ... For convenience there is also a SU2_MPI::GetRank() / SU2_MPI::GetSize(), in case you need it outside of the main classes. Let me know what you think. Not everything I did has to stay the way I implemented it :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-347663941:1140,Message,Message,1140,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-347663941,8,"['Message', 'Wrap', 'message', 'rout']","['Message', 'Wrapper', 'messages', 'routine']"
Integrability,"A simple workaround would be to add an if line before the split:; Line 84 of parse_config.py; if np.size(s2) > 1:; thisval = s2.split('""')[1]; Yes, it requires also ; import numpy as np; at the beginning of the script.; Now it runs with no error message but no output produced.; Also config_gui.py is running, but it opens an empty window,; so apparently this is not good enough. best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/216#issuecomment-241208818:246,message,message,246,https://su2code.github.io,https://github.com/su2code/SU2/issues/216#issuecomment-241208818,2,['message'],['message']
Integrability,"Actually, on closer look, this seems ok. I am only averaging the grid velocities on either side of the face, not the solution. That routine might be more efficient as an edge loop, but should be correct. If you're really bored, see pg. 83 for details about the Geometric Conservation Law as implemented there: https://economon.github.io/docs/economon_dissertation.pdf",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1005#issuecomment-635495594:132,rout,routine,132,https://su2code.github.io,https://github.com/su2code/SU2/issues/1005#issuecomment-635495594,1,['rout'],['routine']
Integrability,"Add a method to the MPI wrappers to get the global communicator or something equivalent, the only way to make this kind of change future-compatible is to break compilation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1180#issuecomment-769962392:24,wrap,wrappers,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/1180#issuecomment-769962392,1,['wrap'],['wrappers']
Integrability,Adding some additional residual convergence plots sampled from our test cases. Still some work to do to integrate #724 and clean up regressions. ![residual_convergence](https://user-images.githubusercontent.com/4896083/66072901-fa737f00-e523-11e9-9369-92bbea23f1bb.png); ![residual_convergence](https://user-images.githubusercontent.com/4896083/66072920-03645080-e524-11e9-858a-dc7c310a673b.png); ![residual_convergence](https://user-images.githubusercontent.com/4896083/66072950-1414c680-e524-11e9-80eb-0c4b4a5c0aa7.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-537630224:104,integrat,integrate,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-537630224,1,['integrat'],['integrate']
Integrability,"Addressed in #824, error message thrown (it is not easy to implement a good default due to shared code with other CONV_NUM_METHOD_??? options).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/796#issuecomment-569149919:25,message,message,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/796#issuecomment-569149919,1,['message'],['message']
Integrability,"After a lot of configuring and reconfiguring, it turns out the above issue occurs when the system's meson is used instead of the meson.py that ships with SU2. However, I'm not sure this is correct behavior. Shouldn't the choice of the meson executable script be irrelevant? In other words, shouldn't the configuration be dependent on meson.build and not on meson.py? Using system's installed meson should produce the same result as using the meson.py that ships with SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1528#issuecomment-1022884747:321,depend,dependent,321,https://su2code.github.io,https://github.com/su2code/SU2/issues/1528#issuecomment-1022884747,1,['depend'],['dependent']
Integrability,"After realizing that SU2_MSH was only able to generate halo cells when the periodic BCs didn't share a common edge, @sravya91 and I went through the code that performs this task and fixed a few things to add this capability back. After fixing this we realized that there was an issue within the SU2_CFD when trying to run periodic BCs that touch each other. The issue was traced to the mpi communication routines, and since @economon was working on a revamp of this part of the code, we decided to wait until this was done. I am not sure what has been done here since, but I thought I should mention what has already been done in case you find it useful and can save you some time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431#issuecomment-358538787:404,rout,routines,404,https://su2code.github.io,https://github.com/su2code/SU2/issues/431#issuecomment-358538787,1,['rout'],['routines']
Integrability,"Agreed that libraries are great as long as they are optional - sometimes we need them for highly specialized tasks. Btw, is it possible to use your wrapper for other external solvers? For example, it might be worth testing with PETSc again soon for performance reasons. I would encourage making a single base interface for external solvers that talks to the existing structure in SU2, which never needs to change, and then creating the implementations for each solver that adapts the particular solver data structures to the fixed interface (similar with the grid readers and output routines). Is this easy to do now?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-524932838:148,wrap,wrapper,148,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-524932838,4,"['interface', 'rout', 'wrap']","['interface', 'routines', 'wrapper']"
Integrability,"Agreed that the style needs some attention. I am open to ideas about this. You may have noticed that I integrated Codacy recently to test it out: https://www.codacy.com. We have the style guide, but honestly, it's not getting much attention. We should automate checks or have scripts that automatically enforce style constraints. Vera++ sounds interesting in this regard. A little while back, @rsanfer and I had been working on indentation issues with the uncrustify tool. Should we open this as an issue and get some input? Find volunteers to look into these things?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/426#issuecomment-323636235:103,integrat,integrated,103,https://su2code.github.io,https://github.com/su2code/SU2/pull/426#issuecomment-323636235,2,['integrat'],['integrated']
Integrability,"Agreed, I am not too concerned about reusing the limiter values from a previous iteration. Though it appears to me that we are using the same ""limiter"" boolean for checking whether we need both the mean flow and turbulence limiters in that routine.. perhaps we can separate that into flow and turbulence limiter booleans so they can operate independently (we have GetSpatialOrder_Flow() and GetSpatialOrder_Turb()).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/403#issuecomment-316276242:240,rout,routine,240,https://su2code.github.io,https://github.com/su2code/SU2/pull/403#issuecomment-316276242,1,['rout'],['routine']
Integrability,Agreed. We do not alter that routine too regularly. Thanks for making that change. I'll merge this in.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/201#issuecomment-151210240:29,rout,routine,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/201#issuecomment-151210240,1,['rout'],['routine']
Integrability,"Ah sorry,; SU2_DOT mostly only uses OpenMP in the passive linear system, I'm not sure if @thomasdick Sobolev smoother has some recorded part that involves OpenMP.; For the python wrapper I usually set the number of threads with env var OMP_NUM_THREADS It may be a bit confusing for most users having to specify the number of threads when instantiating the driver :thinking: ; I think disc_adj_flow would be the easiest to adapt. Those tests print a sensitivity at a particular vertex of a marker to be checked by the regression script, so you would have to make sure that's only printed on one rank (for parallel AD).; disc_adj_fea should also be fine for hybrid AD.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1470288877:179,wrap,wrapper,179,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1470288877,1,['wrap'],['wrapper']
Integrability,"Ah, I wasn't aware of the corrected version. Thanks for pointing out my mistake. The corrected version does make more sense, and the main changes seem to be:. + Changing the location of the sqrt in the definition of `Lturb`; + Changing `ch3` from 0.5 to 2.0; + Clarifying that S and Omega should have a factor of sqrt(2). As for code verification, I would propose using one of the cases examined by Travin, Stretlets, Mockett, or Xiao for comparison. We know that they got a nice range of values for the blending constant on their tests with DDES. The cases I can see where they explicitly show the results of the blending function are:. + Circular cylinder at Re = 50,000 (Travin _et al._ 2002); + Tandem cylinders at Re = 166,000 (Xiao _et al._ 2012); + NACA0021 airfoil in deep stall (Mockett 2009). The tricky thing is that the value of the blending constant is determined by the flow solution, which is determined by the solver. So the values we obtain will be dependent both on the version of DDES used and the nature of the code. We can't expect to match any of these papers exactly. We could also use a simpler flow, such as fully developed channel flow or a flat plate boundary layer. The tradeoff would be simplicity for ease of comparison.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532#issuecomment-388189377:966,depend,dependent,966,https://su2code.github.io,https://github.com/su2code/SU2/pull/532#issuecomment-388189377,2,['depend'],['dependent']
Integrability,"All,. For whatever it is worth, here are some thoughts. It is clear that we need to strike the right level and hierarchy of abstraction: at the highest level one really ought to be describing the physical problem, not the number of zones or the specific time-stepping algorithm that would be used. But preventing future multi-zone calculations from reaching the (time) order of accuracy desired is also an important issue that SU2 must support (and that I think would be very important for those doing unsteady turbomachinery calculations). Just as important: even for multi-physics problems (say fluid-structure interaction, when the fluid and structural solvers are not closely integrated into the same source) we need to ensure that the time accuracy of the full multi-physics calculation is as high as those of the component physics solvers. This is a very valid and useful discussion and some proposals are on the table. Given that we are planning a developer‚Äôs meeting sometime before the end of the year, this may actually be one of the items in the agenda for discussion, so some decisions can be reached that both make sense and minimize the pain of changes for any part of the existing code. I would suggest that the conversation continue and that other proposals are put forward so the discussion can be finalized at the developer‚Äôs meeting. Best,. Juan. On Sep 10, 2017, at 1:09 PM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Dear @rsanfer<https://github.com/rsanfer>,. I agree with you that the outer loop should be the loop over the number of physical disciplines involved in the problem and not the zones. Whether the individual disciplines contain one or multiple zones is irrelevant at this level, in my opinion. The loop over the multiple zones of a single discipline should take place at a much lower level, namely where the spatial residual is computed. At least, this should be the case for the fluid dynamics part. I don't know whethe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328403160:680,integrat,integrated,680,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328403160,2,['integrat'],['integrated']
Integrability,"All,. I looked a bit more through Eigen and, indeed, the performance is pretty impressive and generally better than MKL and Atlas (the self-tuned implementation of LAPACK) ant most/all matrix sizes. I agree with comments made by @pcarruscg that having a standard for matrix operations throughout the source would clean up /simplify the code considerably and, since it does not seem to impact the AD approach, it should be pursued. It sounds like a quick test branch like @vdweide is suggesting makes sense. A quick driver code to test the performance of the Eigen routines vs MKL makes sense too. The only thing that @vdweide should comment on is how much work it would be to change the LAPACK/BLAS based implementation in the DG-FEM solver to the interface that Eigen exposes. Best,. Juan. On Feb 1, 2019, at 4:19 AM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Would it be an idea to create a branch to test things out and make a decision based on the results? It would be interesting to see the performance for e.g. the dense matrix multiplications in the DG-solver compared to Intel's MKL. ‚Äî; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-459705131>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxM1gm0iy_FeGBMFzxVQnYFFzEHt4ks5vJDDlgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459845576:564,rout,routines,564,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459845576,4,"['interface', 'rout']","['interface', 'routines']"
Integrability,"All,. I would agree that we need to look at an existing library and not re-develop one. The standard for dense linear algebra is LAPACK. It has been around forever, relies on BLAS routines, is currently being used in the SU2 higher-order DG-FEM solver. Various computer vendors (including GPU manufacturers) have spent many years optimizing BLAS and LAPACK calls on their own computer architectures. This means that your code is (a) portable and, by linking to the appropriate vendor-provided version of the library (say like Intel‚Äôs MKL), (b) you get highest performance. I am not familiar with Eigen (just looked at the web page), but there is an interesting comparison between Eigen and LAPACK (written by the developers of Eigen‚Ä¶take it with a grain of salt) here<http://eigen.tuxfamily.org/index.php?title=FAQ#How_does_Eigen_compare_to_BLAS.2FLAPACK.3F>. If all they say is true, then Eigen would be a very good choice. If it is a bit exaggerated, then maybe LAPACK is better. Does anyone have experience with Eigen? Are there any reasons why LAPACK is better? Can the folks involved in FV and DG-FEM solvers talk to each other before making a decision?. While PETSc is a wonderful library (and parallel), I would hesitate to use it as the solution for the problem that we are trying to solve: it is not the easiest thing to compile and it is most definitely not lightweight. If one also wanted to replace Krylov-space solvers and preconditioners in SU2 the PETSc might make more sense‚Ä¶.but it still forces the developer to conform to their view of the world (including matrix setup and decomposition). Best,. Juan. On Jan 31, 2019, at 4:43 PM, Brian Mungu√≠a <notifications@github.com<mailto:notifications@github.com>> wrote:. @EduardoMolina<https://github.com/EduardoMolina> and I have discussed this over the past few weeks and are also in favor of using an external library. I don't have a strong opinion on the library we choose, but he seems to be in favor of PETSc<https://www.mcs.anl.gov/p",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459566859:180,rout,routines,180,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459566859,1,['rout'],['routines']
Integrability,"All,. I'll get the chance to jump into this topic which I'm interested in.; As some of you know I'm currently working on sliding meshes and multi-zone problems for turbo-machinery applications.; Currently also the cinterpolator class, in particular for the nearest neighbour interpolation, relies on brute force search algorithms. ; Moreover, a lot of possible (future) interpolation methods may rely on a nearest neighbour search in the very first place (I'm thinking for instance to the construction of a polynomial interpolation pattern which would require to find a bunch of donor points on the donor mesh); This may lead to a dramatic increase of the computational time when dealing with very large problems like for instance unsteady multi-stage turbo-machinery problems, since, for these particular applications, at every time step we will need to reconstruct the communication pattern among rotors and stators.; So the implementation of a clever way to carry out the nearest neighbour search will be mandatory in the future of SU2. I think that it would be very useful to have a reliable and reusable tree search library so that everyone can exploit the same function calls.; For former works I did use the ANN library from the University of Maryland which is distributed under the GNU lesser public license, moreover I talked with Edwin and he also has some routines he wrote himself that could suits this particular problem. Just let me know if and how we can help in solving this thorny problem. Ciao!; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-224542664:1367,rout,routines,1367,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-224542664,1,['rout'],['routines']
Integrability,"All,. Of course, another approach to verifying which sign is correct is to do an analytic differentiation (using CoDi?) or simply using complex-step on the residual calculation routine to get exact Jacobians (for a particular state) and confirm the correct sign. This does require some code extraction / refactoring to perform the test, but it has the benefit that you would know exactly what the correct answer is for the specific residual implementation. Best,. Juan. On Nov 16, 2018, at 11:03 AM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. As Jacobians affect convergence rate and not accuracy, you could do a quick test of the same problem with the current version and the sign flipped to see if there is measurable difference in the convergence rate. If yes, then it should give you a hint about which direction. If no, then we should still correct it, but prob don't need to put in too much effort. @clarkpede<https://github.com/clarkpede> : I'm interested in your unit testing set up... ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/609#issuecomment-439493827>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxInSS3cmLF8iFkD22AoYAp0G3G2yks5uvwvxgaJpZM4YeD9V>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439500791:177,rout,routine,177,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439500791,2,['rout'],['routine']
Integrability,"All,. Thanks for your comments. I think ANNlibrary is no longer maintained. It would be better if we can use a well maintained library in-order to prevent issues in future. Additionally ANNlibrary does not support distributed trees. As far as I know, pointcloud library also does not support distributed trees. I guess we will have to write a wrapper routine using MPI. This will create a local tree for its own portion of the surface mesh. Now distance computation can be done by querying all the trees and using the minimum. One catch here is that we will have to compute distance queries in a group in order to prevent the communication latency eating up the advantage. . Waiting for comments",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-224563432:343,wrap,wrapper,343,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-224563432,2,"['rout', 'wrap']","['routine', 'wrapper']"
Integrability,"All,. The following page has performance comparisons between eigen and mkl (and others):. http://eigen.tuxfamily.org/index.php?title=Benchmark. They are dated 2011, so they are a bit old, but if the quoted performance is real, I would say it is a no-brainer to switch to eigen. If the performance tests (for at least simple things like daxpy and gemm) could be repeated to verify the numbers, that would help us make a final decision. Best,. Juan. On Feb 2, 2019, at 1:58 AM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. @pcarruscag<https://github.com/pcarruscag>, I agree with you it will be hard to beat the MKL (running at 60 percent peak for most of the gemm calls for the DG-solver), but if you don't have any performance loss, that would already be nice, as it improves readability. Furthermore, the performance of the DG solver in combination with the discrete adjoint is horrible, because it relies on my very naive implementation of the matrix products. So it would already be something if we can get an improvement there, although we do not use the DG adjoint solver (yet). For me the easiest way to test things out for the DG-solver would actually be in SU2 itself. @economon<https://github.com/economon> put some nice profiling routines in there for the gemm calls, which can be used without any additional work to test eigen. @pcarruscag<https://github.com/pcarruscag> (or somebody else), could you create a branch in which eigen is downloaded in the external directory? I think I can manage from there. Thanks,. Edwin. ‚Äî; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-459952137>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxCgydwy1nS3qPJvyCMJXLXWNMSFsks5vJWEkgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459986613:1283,rout,routines,1283,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459986613,2,['rout'],['routines']
Integrability,"Alright everyone, this PR is now ready to get merged from my point of view. If there are further concerns regarding particular Testcases please let me know. @pcarruscag did you check airfoil_fsi_rbf and discadj_fsi_airfoil? If yes, your (dis-)approval for this PR would be appreciated (of course from everyone else as well). . I would like to get this integrated before #790 and I would recommend @economon not to start changing reg-test values before this is merged. The code still fixes the initial Issue #735",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-536618994:352,integrat,integrated,352,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-536618994,1,['integrat'],['integrated']
Integrability,"Alright, so my above hunch was correct: that there was an assumption of dictionary key order. I switched that variable over to an ordered bunch and I believe all the tests are passing, despite one of them timing out. After addressing that, the entire repo (including the wrapper) should now be compatible with both Python 2 and Python 3, and is setup to be tested with both.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-340193114:271,wrap,wrapper,271,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-340193114,1,['wrap'],['wrapper']
Integrability,"Alright. I did some digging, and the problem has nothing to do with the warning message. It goes much deeper. In a recent release, SU2 switched to reading and writing binary restart files instead of ASCII. The grid adaptation code is still written only for ASCII. If I'm right, then trying to read a binary restart file with the flow solution breaks the program. I'll submit an issue detailing the bug. For now, try adding the following lines to your cfg file when you run `SU2_CFD`:. %; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= NO; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= NO. Then run `SU2_MSH`, just like you have been. Does that clear things up?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-436131167:80,message,message,80,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-436131167,2,['message'],['message']
Integrability,"Although my own participation with SU2 is now reduced due to pursuing other endeavors, I want to say that I hope that your future experiences with SU2 and the open-source community will be more positive, that I hope neither of you have been dissuaded from contributing here or on other open-source projects, and that this has been a good reminder that it is easy for things to get heated quickly, especially on the internet where tone of voice cannot be easily conveyed. . @SumanVajjala: ; conv_numerics‚ÜíComputeResidual is setting the fluxes inside of that function, and it uses the normal and flow variable information set at previous lines, ; conv_numerics‚ÜíSetNormal(Normal); (line 10290 in your example) ; conv_numerics‚ÜíSetPrimitive(V_domain, V_infty); (line 10433 in your example). ComputeResidual can be found in numerics_direct_mean.cpp, where you will see that SetResidual is handled differently depending on the numerical scheme chosen, and that calls to GetInviscidProjFlux are included. ; A similar pattern is followed in the other boundary conditions, although there may be more going on here which someone else may be able to comment on. . If you have any questions that are not bugs/code issues, SU2 also has a forum at: https://www.cfd-online.com/Forums/su2/. I also recommend using an IDE (xcode, eclipse, etc) to assist with navigating the code. Best,; Heather",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-314942908:903,depend,depending,903,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-314942908,1,['depend'],['depending']
Integrability,And where did all the python wrapper functions go?? I see that there is nearly nothing left in the python_wrapper_structure.cpp with respect to version 7.5.1 ? The problem is that I was using several of the functions which are now missing...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1536246010:29,wrap,wrapper,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1536246010,1,['wrap'],['wrapper']
Integrability,"Another option mentioned by @talbring is MATH_PROBLEM for which the default could depend on the code being used, i.e. for SU2_CFD_AD and SU2_DOT_AD the default should be DISCRETE_ADJOINT",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/942#issuecomment-646635198:82,depend,depend,82,https://su2code.github.io,https://github.com/su2code/SU2/issues/942#issuecomment-646635198,1,['depend'],['depend']
Integrability,"Antonio,. I have been trying to figure the error message out, but I have been unsuccessful. I've only modified serial_regression.py and parallel_regression.py. Is there a file where turbulent_hb needs to be defined or does the code read the names from the test case repository?. We may want to change structure of HB test case folder since there are now two cases. The turbulent case has a sub-directory in there but the inviscid does not. Jason",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-336948272:49,message,message,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-336948272,1,['message'],['message']
Integrability,"Aok on inlines. Looking forward to the memory layout concept.. have you also thought about how we might combine this with vectorization (SIMD) across the edges in the residual / gradient / limiter routines? There's probably another 2x speedup available for those kernels. Lastly, I don't think we should throw out the possibility of removing the CVariable class entirely in favor of allocating memory directly in the solver classes. We have thought about this in the past, and it is not used deliberately in the DG solver, for example. Food for thought.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-513049255:197,rout,routines,197,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-513049255,1,['rout'],['routines']
Integrability,Apparently meson looks for ninja by just trying to execute the command `ninja` with the python call `Popen`. And I guess it depends on the python version (on our cluster we have 3.6) whether the current working dir is included in the search path or not ... Then it is unfortunately not possible skip the step in between to tell meson where to find ninja ... Then for now you'll have to do the following steps (as mentions by @TobiKattmann):. Build ninja in externals/ninja using `configure.py --bootstrap`; Add `externals/ninja` to the `PATH` variable; Run meson with `externals/meson/meson.py build`,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-495564089:124,depend,depends,124,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-495564089,1,['depend'],['depends']
Integrability,"Are the compiler wrappers, mpicc and mpicxx, also installed? When I look in your log file it mentions ; ./configure: line 3362: /usr/bin/mpicxx: No such file or directory",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513849210:17,wrap,wrappers,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513849210,1,['wrap'],['wrappers']
Integrability,"Are you able to reproduce this behaviour with any other cases, say a rotating cylinder perhaps? To me it looks like the strange behaviour develops from the area in your mesh where the mesh density along the interface is visibily different (north and south of the image shown). This could be a discretization issue rather than a bug with the solver?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2034270730:207,interface,interface,207,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2034270730,1,['interface'],['interface']
Integrability,"As the error message indicates, a surface element is not part of a volume element. At least, the solver is not able to find one. From the error message this happens for surface element 133348 of marker 0.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-493938679:13,message,message,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-493938679,2,['message'],['message']
Integrability,"As the error message says, it cannot find ""Python.h"". This is again related to the Python wrapper compilation. If you really don't need it, I suggest you to just disable it when configuring your build (remove --enable-PY_WRAPPER). If you need the Python wrapper and if your Python is not located in a standard location on your supercomputer, you will have to manually modify the SU2_PY/pySU2/Makefile.am and put the right paths for the Python include and Python libs (I think similarly to what you did for mpi4py, see above)... Again, everything should be improved after #424 is merged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-349590138:13,message,message,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-349590138,3,"['message', 'wrap']","['message', 'wrapper']"
Integrability,"As we mentioned in the dev meeting where you exposed the problem, the implementation is not good for strongly coupled flows, and I would guess that it is worse for diffusion than convection (because diffusion is elliptic).; I suspect the main problem is that the linear system does not contain information from the other side of the interface, meaning the solution of the two domains is effectively decoupled.; You could try running the case at much lower CFL (below 1) even with an explicit method.; It is also possible that the current treatment could be improved, since it is an example of multiplicative Schwartz decomposition, maybe there is an ""optimal"" way of implementing that from a physics point of view. Just speculating here, but maybe it would help treating the interface as an outlet if flow is going out, and as an inlet if flow is coming in.; On the numerics side, you can also try hacking the MZ driver to use something more stable than block-Gauss-Seidel (e.g. some quasi-Newton thing for the interface). But those are all band-aids IMO, if you want a robust fluid-fluid interface you need the coupling to be present in the linear system. The simplest way to do that is to have an internal boundary and treat the problem as single zone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509:333,interface,interface,333,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509,8,['interface'],['interface']
Integrability,"Attaching some results for the RAE2822 of the pressure field zoomed in right near the shock on the upper surface. The results do change (lift and drag by a couple percent) mostly due to a change in shock position it seems. The pressure field also shows the same behavior referenced above when the term is included. Unfortunately, we do not have much data to compare with here, since this case is not on the TMR. The integrated quantities above for the bump problem do not appear to be too sensitive to it either way, but the pressure field does indeed show the same discrepancies. In general, I have not been able to find any strong arguments for or against including the term in literature/codes. Although it is prescribed by the theory, some folks mention it is sometimes dropped (TMR also says it is sometimes ignored unless supersonic), or it gets dropped without mention at all. It is certainly affecting the pressure distribution, so we should take that into consideration. It is possible that there is some other bug that gets exposed by its inclusion, but I did not come across anything yet. As we know the SA model does not exhibit this behavior, I lean toward removing it. I'm all ears if you have any other insight. <img width=""1313"" alt=""Screen Shot 2019-10-25 at 2 47 16 PM"" src=""https://user-images.githubusercontent.com/4896083/67607461-615a1180-f739-11e9-9d68-9c5d15fb0acc.png"">; <img width=""1312"" alt=""Screen Shot 2019-10-25 at 2 47 06 PM"" src=""https://user-images.githubusercontent.com/4896083/67607471-68811f80-f739-11e9-82bd-ac1c23b4caad.png"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-546529544:416,integrat,integrated,416,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-546529544,1,['integrat'],['integrated']
Integrability,"BTW, all of the above also applies for the grid motion parameters. This should also happen inside the loop over the number of stages of the time integration scheme and currently this is done outside this loop. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329078418:145,integrat,integration,145,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329078418,1,['integrat'],['integration']
Integrability,"Below is a new testcase, laminar flow around a cylinder. In the line figure I show the normal velocity on the axis y=0, with the solid red line the results from develop. The dashed line is with only the new Green-Gauss correction. It always leads to an improvement. These 2 results were obtained with an undisturbed grid. I then distort the grid a bit (as seen in the contour plot) and rerun the GG correction and I get the green line. Still an improvement, but a bit more bumps on the line.; I then correct the edge normals as done in CPhysicalGeometry. I then get the jagged line shown.; The correction using the residuals in BC_Sym_Plane seems to be ill-defined because the final converged solution depends on the initial solution [so I do not show tests with it here, I kept the original bc_sym_plane]. ; ![Screenshot_cylinder](https://github.com/su2code/SU2/assets/7050568/a16db8e1-78c5-482b-a91a-4b0d59b52f0d)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194#issuecomment-1891845061:702,depend,depends,702,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194#issuecomment-1891845061,1,['depend'],['depends']
Integrability,Both Gupta-Yos and WBE are now capable of running with ionization for the viscous simulations using both explicit and implicit time integration. Initial testing at Mach 10 and Mach 15 by @WallyMaier show promising results for GY.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1399671477:132,integrat,integration,132,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1399671477,1,['integrat'],['integration']
Integrability,"Btw, once you think a PR is ready for another review round, leave a message or remove [WIP] from the title.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1762#issuecomment-1264348405:68,message,message,68,https://su2code.github.io,https://github.com/su2code/SU2/pull/1762#issuecomment-1264348405,1,['message'],['message']
Integrability,"By the way, there's also this cool tool called vera++ that allows you to check the style of the entire codebase. This could be integrated with Travis so make sure PRs are consistent with the coding style guide.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/426#issuecomment-323580700:127,integrat,integrated,127,https://su2code.github.io,https://github.com/su2code/SU2/pull/426#issuecomment-323580700,2,['integrat'],['integrated']
Integrability,"CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON; * SU2_PARMETIS_CPPFLAGS: flags to pass when compiling Parmetis; * SU2_ENABLE_TECIO: ON|OFF; * SU2_TECIO_CPPFLAGS: flags to pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My contribution is commented and consistent with SU2 style.; * I have added a test case that demonstrates my contribution, if necessary. ________________________________; You can view, comment on, or merge this pull request online at:. https://github.com/su2code/SU2",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:3221,wrap,wrapper,3221,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,2,['wrap'],['wrapper']
Integrability,Can we set Velocity_Ref to 1.0 and Alpha and Beta to 0.0 in case ModVel_Freestream is zero in SetNondinemsionalisation routine? There might some cases of pure rotation with zero free stream velocity which makes many variables in Pressure_Forces/Momentum_Forces/Friction_Forces undefined because Velocity_Ref goes to zero.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/472#issuecomment-346165153:119,rout,routine,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/472#issuecomment-346165153,1,['rout'],['routine']
Integrability,"Can you compile SU2 with debug flags (when using meson, specify ""--buildtype=debug"") and run without using the python wrapper? Does the error change?. Other quick questions, which I may have missed:. 1) How large is your case? What is the mesh size? ; 2) What are the specs of the machine(s) you're running on? How much RAM on each node, etc?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-624226325:118,wrap,wrapper,118,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624226325,1,['wrap'],['wrapper']
Integrability,Can you guys wrap this up and update the required restart files?; I want to make the fixes to the SST model we want for v8.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2014#issuecomment-1551772183:13,wrap,wrap,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/2014#issuecomment-1551772183,1,['wrap'],['wrap']
Integrability,"Certainly sounds like an important data point, as our comms are non-blocking too.; I'm not familiar with Open FOAM to go peek under the hood, but from this page (https://www.openfoam.com/releases/openfoam-v1712/parallel.php) it sounds like it uses a multilevel domain decomposition, decompose by nodes, then by processors, and then by cores (maybe). Which would reduce the number of comms going in/out of each node (which is what the hybrid solver hopes to achieve). I remember seeing output messages from CFX indicative of similar strategies. We don't have as many people working on performance as the organizations behind those codes, but we will get there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593638807:492,message,messages,492,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593638807,1,['message'],['messages']
Integrability,"Concerning the Python wrapper, everything is currently hardcoded for python2.7 which was my Python environment when I originally introduced the wrapper. PR #424 is fixing this. In the meantime, the workaround proposed by @talbring should work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-333103775:22,wrap,wrapper,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-333103775,2,['wrap'],['wrapper']
Integrability,"Contact the team that supports the cluster, they are usually much more knowledgeable about that type of problem.; 90% of the times I had similar problems was because I was not using the programming environment properly.; One common issue is that clusters that are properly setup use compiler wrappers, which you should use instead of trying to use gcc directly. We have absolutely no way no replicate this issue, hence I'm closing it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1278#issuecomment-831976182:292,wrap,wrappers,292,https://su2code.github.io,https://github.com/su2code/SU2/issues/1278#issuecomment-831976182,1,['wrap'],['wrappers']
Integrability,"Dear @cvencro,; Great upgrade of the interface treatment! ; I was wondering what happens in case the structural solver is not the internal one, but rather an external solver coupled via Python. I think, in that case, the BC_velocity cannot be applied as there is information missing (we usually only transfer the displacement via python).; The solution to this, with minimum modifications, would be to slightly change the result of GetFSI_simulation. Indeed, at the moment, it checks if there is a marker_fluid_load or if there are both the structural solver and the fluid solver.; I was thinking that we may leave only the second check (i.e. if there are both the structural solver and the fluid solver), so that we avoid any problem. Do you think this is possible? Why did we actually need to check also the marker_fluid_load?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778303887:37,interface,interface,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778303887,1,['interface'],['interface']
Integrability,"Dear @khanhija ; thank you very much for reporting this issue. The h-s call of the Peng-Robinson EoS is iterative. It may be that for these initial conditions the routine is not able to find a root. ; So I have a couple of solutions:. -You may try to use the branch feature_polytropic gas where my colleague @luciaazzini implemented a more robust HS call for PR. -or you may run everything Dimensional (REF_DIMENSIONALIZATION= DIMENSIONAL), converge first the solution with IDEAL_GAS or VW_GAS and then restart it with PR_GAS. regards. sv",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/398#issuecomment-306440401:163,rout,routine,163,https://su2code.github.io,https://github.com/su2code/SU2/issues/398#issuecomment-306440401,1,['rout'],['routine']
Integrability,"Dear @oleburghardt, . Unfortunately, your initial reply lacks of any constructive contribution. . SU2 depends on the feedback of you all. We should not discourage anybody to change/improve, show interest, ask for clarification, etc. The tone of your initial replay was unjustified and not polite.; From now on, your profile as a member of the developer team (collaborator) will be not longer active. Peace,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-313775430:102,depend,depends,102,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-313775430,2,['depend'],['depends']
Integrability,"Dear @rsanfer,. I agree with you that the outer loop should be the loop over the number of physical disciplines involved in the problem and not the zones. Whether the individual disciplines contain one or multiple zones is irrelevant at this level, in my opinion. The loop over the multiple zones of a single discipline should take place at a much lower level, namely where the spatial residual is computed. At least, this should be the case for the fluid dynamics part. I don't know whether this is also the case for other disciplines, like structures. What about the following high level structure?. - Loop over the number of iterations, or time steps for unsteady problems.; - Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; - Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate: ; - Loop over the (Runge-Kutta) stages; - Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; - End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; - End loop over the (Runge-Kutta) stages ; - End loop over the disciplines; - End loop over the pseudo time steps.; - End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The ge",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328368371:740,integrat,integration,740,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328368371,2,['integrat'],['integration']
Integrability,"Dear @vdweide,. I clearly see your point. However, this can be quite a big structural change of the code and I think we should plan very well how to address this issue. The reason of having a driver class was to facilitate the extension of SU2 to multi-physics applications both for analysis (direct solver) and design (adjoint). Thanks to the high level of abstraction of the CInterpolator, CTransfer and the CIteration classes, it was kind of natural to treat fluid-fluid problems similarly to multi-physics problem (i.e. fluid-structure and fluid-heat). As a matter of fact, the multi-stage turbomachinery approach , its adjoint counterpart, the sliding interface they all rely on this driver structure in which we loop among all the zones. If i understood correctly, you suggest to move only the fluid-fluid multi-zone loop at lower level in order to integrate in time only after having coupled all the fluid zones. Right? If so, we need to design the code in such a way that the fluid zones loop is separated from the multi-physics one.; To solve this issue, I think, we just need to find a smart way to differentiate fluid-zones from the rest. Perhaps we can do that by instantiating one Iteration per physical problem instead than per zone. So that inside the iteration we can couple all the fluid zones, and in the driver we can couple the different physics (Iteration). Indeed, this is just a preliminary idea. In general I think we should aim to a structure that can flexibly accommodate multi-physics problems with multi-zones for different physics. A good example is solving fluid-structure in multi-stage turbomachinery, in which we have multiple fluid-zones and multiple structure-zones. ; ; I would like to hear on this matter also from @fpalacios @talbring , @economon , @rsanfer @oleburghardt ,@LaSerpe and @arubino. Thanks @vdweide againg for raising this issue. cheers. Salvo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328274125:657,interface,interface,657,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328274125,4,"['integrat', 'interface']","['integrate', 'interface']"
Integrability,"Dear Giuilo,. I am able to simulate the case with fresh download from develop branch and got post processed data for Tecplot without any error. Thanks a lot for your assistance in this regard. But surprisingly I also faced problem with SA turbulence model, whereas SST is going smooth. SA turbulence model is working fine with develop branch code, which was downloaded may be 2 months ago. I would like to request you to please explain the option MACH_MOTION in detail in the context of sliding interface capability. Thank you so much Giulio once again!. Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-318352388:495,interface,interface,495,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-318352388,1,['interface'],['interface']
Integrability,"Dear Jyothi,. This error message indicates that you have specified the AOA option (angle of attack) option twice in your cfg file. Check if this is indeed the case and remove one. Regards,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-318047362:25,message,message,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-318047362,1,['message'],['message']
Integrability,"Dear Reza,. like the error message already implies, currently the python wrapper does not support the AD features. It is on our list, but I cannot give an estimate when it will be available. Tim. Am 04.06.2018 13:46 schrieb najianaslreza <notifications@github.com>:. Dear all,. I am trying to use the python wrapper with AD tool support. For example I want to use CDiscAdjFluidDriver(options.filename, 1, 3, comm) but it fail and returns there is no AD support for python wrapper. Do you know how I can solve it ?!. Cheers,. reza. ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/539>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AEtI5NEuzJBRfwFu5CqxXFdbh_6GY0Iyks5t5R3rgaJpZM4UY7-o>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/539#issuecomment-394713953:27,message,message,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/539#issuecomment-394713953,4,"['message', 'wrap']","['message', 'wrapper']"
Integrability,"Dear WenyinWei,; presently SU2 is interfaced with the INRIA AMG library for mesh adaptation. You can find all the necessary details and examples at https://pyamg.saclay.inria.fr. There are efforts going on in Stanford to connect it to goal-oriented adaptation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/743#issuecomment-514651250:34,interface,interfaced,34,https://su2code.github.io,https://github.com/su2code/SU2/issues/743#issuecomment-514651250,1,['interface'],['interfaced']
Integrability,"Dear all,; Thank you very much for your comments!; I agree with you, transferring the velocity is definitely the best solution in the long run. However, as Pedro mentioned, there is also the case when a certain imposed deformation is set, without solving any structural system. This is the case of a forced motion. In the python script configuration files it is required to set the marker_fluid_load as this is the only way to make SU2 compute the tractions at that marker. Maybe, a solution to both needs, can be to make SU2 compute the tractions anyway for the wall boundary. . In this way, if you have the velocity at the interface, you can define this interface as also marker_fluid_load, the FSI bool will be true and the new BC_velocity will be used. If you do not have the velocity at the interface, you will avoid marker_fluid_load and SU2 will not fail trying to use bc_velocity. This will also give me more time to develop, from the python side, the required modifications to use the new interface. Please let me know your comments",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778585840:625,interface,interface,625,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778585840,4,['interface'],['interface']
Integrability,"Dear sirs, I just modified .travis.yml back to; su2code-dev@lists.stanford.edu and develop respectively:. Jairos-Mac-mini:SU2 jaspe$ git status. On branch feature_force_read_target_on_AD. Changes not staged for commit:. (use ""git add <file>..."" to update what will be committed). (use ""git checkout -- <file>..."" to discard changes in working directory). modified: .travis.yml. no changes added to commit (use ""git add"" and/or ""git commit -a""). Jairos-Mac-mini:SU2 jaspe$ git commit -am ""This is an update of .travis.yml; for feature_force_read_target_on_AD."". [feature_force_read_target_on_AD 3f2115373] This is an update of; .travis.yml for feature_force_read_target_on_AD. 1 file changed, 2 insertions(+), 2 deletions(-); After that, I issued git push origin feature_force_read_target_on_AD, and; got the error message:. To https://github.com/su2code/SU2.git. ! [rejected] feature_force_read_target_on_AD ->; feature_force_read_target_on_AD (fetch first). error: failed to push some refs to 'https://github.com/su2code/SU2.git'. hint: Updates were rejected because the remote contains work that you do. hint: not have locally. This is usually caused by another repository pushing. hint: to the same ref. You may want to first integrate the remote changes. hint: (e.g., 'git pull ...') before pushing again. hint: See the 'Note about fast-forwards' in 'git push --help' for details.; I issued then git pull origin develop, to merge changes in remote to my; local branch, successfully , but a new git push origin; feature_force_read_target_on_AD, produced the same error message.; Would be the first commit command enough?. With kind regards,. Jairo. On Tue, Oct 30, 2018 at 7:25 PM Thomas D. Economon <notifications@github.com>; wrote:. > Hi @jaspe55 <https://github.com/jaspe55> - thanks for the first; > contribution!; >; > Can you please switch the email and branch name in .travis.yml back to; > su2code-dev@lists.stanford.edu and develop, respectively? That should get; > the tests running so w",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-434929137:814,message,message,814,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-434929137,1,['message'],['message']
Integrability,"Dejavu from modified and unmodified...; We want to default to noft2, a noft2 option is redundant. On Mon, 23 May 2022, 14:35 Nijso, ***@***.***> wrote:. > ***@***.**** commented on this pull request.; > ------------------------------; >; > In Common/include/option_structure.hpp; > <https://github.com/su2code/SU2/pull/1646#discussion_r879465502>:; >; > > @@ -1056,18 +1045,98 @@ inline SST_ParsedOptions ParseSSTOptions(const SST_OPTIONS *SST_Options, unsigne; > return SSTParsedOptions;; > }; >; > +/*!; > + * \brief SA Options; > + */; > +enum class SA_OPTIONS {; > + NONE, /*!< \brief No option / default. */; > + NEG, /*!< \brief Negative SA. */; > + EDW, /*!< \brief Edwards version. */; > + FT2, /*!< \brief Use FT2 term. */; >; > I think it's better to use the keyword NOFT2 instead of FT2 to be more; > compatible with the NASA naming.; >; > ‚Äî; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/1646#pullrequestreview-981782386>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXNZS5KCB7L45MPF4KULVLOCT3ANCNFSM5WSMMMUA>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1646#issuecomment-1274193498:1160,Message,Message,1160,https://su2code.github.io,https://github.com/su2code/SU2/pull/1646#issuecomment-1274193498,1,['Message'],['Message']
Integrability,"Did you install by meson/ninja or by preconfigure/make/make install?; Meson looks for a mpi in your system and should give you a message like:; ""Run-time dependency MPI for c found: YES 2.1.1; Run-time dependency MPI for cpp found: YES 2.1.1; ""; among other messages. In preconfigure you should tell the installation to use MPI:; -enable-mpi --with-cc=mpicc --with-cxx=mpicxx as parameters. Cheers,; Eran. On Wed, Apr 15, 2020 at 5:50 PM mottiadar <notifications@github.com> wrote:. > Hi Eran,; > Thank you.; > I am not sure I understand your question.; > I have downloaded the parallel version. What do you mean exactly by; > ""installing with mpi""?; >; > ‚Äî; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938#issuecomment-614085923>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3GY7C7HFLJTNTZATWC3RMXCTRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/938#issuecomment-614093500:129,message,message,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614093500,4,"['depend', 'message']","['dependency', 'message', 'messages']"
Integrability,"Do you have pkg-config installed? It uses pkg-config to look for the dependencies it required. You can check if you have pkg-config with `which pkg-config`. If you don't have it, you can install on your ubuntu through. `sudo apt-get install pkg-config`. If it still doesn't work, or if you already have pkg-config installed, the python3.pc needs to be found by the pkg-config. Usually done by setting a `PKG_CONFIG_PATH` environment variable that points to the relevant python3.pc file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/903#issuecomment-595955473:69,depend,dependencies,69,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595955473,1,['depend'],['dependencies']
Integrability,"Dr. Albring,; I have one more issue.; The gamma_BC is a variable in my model that is computed in every cell, and its value is in between 0 and 1 (so that it controls production term on/off in that cell). I would like to write gamma_BC variable to a tecplot output file in order to see the laminar and turbulent regions. However, as a beginner level C++ user, I really couldn't figure out how the output routines work. Would you please help me on this? Is it a complicated work?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257569540:403,rout,routines,403,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257569540,1,['rout'],['routines']
Integrability,"ER_MONITORING) so that one can control which markers get wall functions applied. If a list of markers is not specified in the config file, the default behavior should be that all no-slip walls get wall function BCs. If a list of markers is specified, then those and only those markers listed get wall function Bfs (with the others getting integration to the wall treatment). Now, what you point out in the second half of your message is the ultimate in flexibility: not only specifying wall functions in a subset of the no-slip wall markers, but also allowing for different kinds of wall functions to be used in those markers. I imagine that this would be a seldom used capability‚Ä¶but someone out there might have the need. I guess it does not seem to me that the coding of the most flexible logic is that much more complicated, so we may as well do that. If you guys think it is too complicated, the advertised options in the config file can allow some simpler behavior. My two cents,. Juan. On Sep 5, 2017, at 9:58 PM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Juan,. I think that having the flexibility to apply wall functions on only a subset of the viscous wall boundaries would be useful. E.g., if you are interested in a wing, you can apply integration to the wall there, but apply wall functions on the fuselage. My preference would be to have a dedicated BC type for that, i.e. Tom's second suggestion. Apart from this, we can have the different wall model types as a single input parameter, i.e. you apply the same wall model type for all viscous boundaries. Or would you like to have the flexibility to specify this as well per individual marker?. Edwin. ‚Äî; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/399#issuecomment-327374728>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxOEhKLW_U0n9PDoz5m6cJoCScV3_ks5sfiZdgaJpZM4NvG6w>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327377108:1711,integrat,integration,1711,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327377108,2,['integrat'],['integration']
Integrability,"ETSc was used for the Krylov solvers and more. While indeed it worked well and in parallel mode, each new implementation was a nightmare. LAPACK/BLAS package, on the other hand, provides a much easier implementation experience. Certainly, this is not the only consideration but it should be taken into account. Currently, resulting from the significant contributions of the members of this developers group, SU2 implementation works like a charm. I think we should strive to conserve this feature, especially if we aim at attracting more users and developers into the community. (...). >@vdweide; >(...) @bmunguia and @EduardoMolina, what type of application did you have in mind for PETSc? The only thing I can think of is a full Newton solver. And no matter how much I like PETSc, @juanjosealonso and @erangit have a point here. Looks like I start to belong to the group of old conservatives as well.... >@economon ; >(...) If you really would like to give PETSc a shot, I recommend talking with @anilvar who had an interface for connecting it to SU2 in one of our branches. >@pcarruscag; >(...) being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD. (...). >@EduardoMolina; >(...) When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2.; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. (...). >@pcarruscag ; >(...) That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. (...). >@economon ; >I would add one practical comment for consideration: it is worth checking whether the main restriction we have is related to approxima",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460853218:2292,interface,interface,2292,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460853218,2,['interface'],['interface']
Integrability,"Edwin,. I think it is a good idea to be able to have some level of control over the application of the wall functions on a marker-by-marker basis: as you say, it would be fairly common to have a wing marker where integration to the wall makes sense and a fuselage marker where wall functions (or even an inviscid BC) is the right thing to do. So let‚Äôs indeed do something like what Tom suggests (in the spirit of MARKER_MONITORING) so that one can control which markers get wall functions applied. If a list of markers is not specified in the config file, the default behavior should be that all no-slip walls get wall function BCs. If a list of markers is specified, then those and only those markers listed get wall function Bfs (with the others getting integration to the wall treatment). Now, what you point out in the second half of your message is the ultimate in flexibility: not only specifying wall functions in a subset of the no-slip wall markers, but also allowing for different kinds of wall functions to be used in those markers. I imagine that this would be a seldom used capability‚Ä¶but someone out there might have the need. I guess it does not seem to me that the coding of the most flexible logic is that much more complicated, so we may as well do that. If you guys think it is too complicated, the advertised options in the config file can allow some simpler behavior. My two cents,. Juan. On Sep 5, 2017, at 9:58 PM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Juan,. I think that having the flexibility to apply wall functions on only a subset of the viscous wall boundaries would be useful. E.g., if you are interested in a wing, you can apply integration to the wall there, but apply wall functions on the fuselage. My preference would be to have a dedicated BC type for that, i.e. Tom's second suggestion. Apart from this, we can have the different wall model types as a single input parameter, i.e. you apply the same wall model ty",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327377108:213,integrat,integration,213,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327377108,6,"['integrat', 'message']","['integration', 'message']"
Integrability,Error message for Minf = 0 has been included in #753,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/761#issuecomment-540509179:6,message,message,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/761#issuecomment-540509179,1,['message'],['message']
Integrability,"Everything looks good here with the ADT search. Merging this into the develop branch. Two notes:; 1. I switched MPI_Allgatherv() to SU2_MPI:Allgather() temporarily until we can properly treat the wrapper. This will be easy to change. The code is slightly less pretty, but same results.; 2. Scaling results look very good out to 96 cores and can be ~100x faster than the brute force search. I'll run on O(1000) cores as soon as I have access again to make sure there aren't any hidden problems at scale.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/288#issuecomment-230977816:196,wrap,wrapper,196,https://su2code.github.io,https://github.com/su2code/SU2/pull/288#issuecomment-230977816,1,['wrap'],['wrapper']
Integrability,"Everything seems to be fine. The test cases run smoothly. I have been following the conversation with Rocco, I will now contact him to understand how to avoid duplication and how to best integrate our works",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-743747473:187,integrat,integrate,187,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743747473,1,['integrat'],['integrate']
Integrability,Everything you can do with the python wrapper exists in c++,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2286#issuecomment-2122664830:38,wrap,wrapper,38,https://su2code.github.io,https://github.com/su2code/SU2/issues/2286#issuecomment-2122664830,1,['wrap'],['wrapper']
Integrability,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:84,wrap,wrapping,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720,3,"['rout', 'wrap']","['routine', 'wrapping']"
Integrability,"Folks,. This is indeed a very important capability for many different applications: from interpolation of solutions from coarser grids to finer grids, to querying an unsteady solution, to implementing numerical error estimates‚Ä¶and many others. It is important that the search / interpolation routines work when interpolating between grids where some points in the target grid may fall outside of the source grid and, therefore some notion of distance to the wall is needed. Fortunately, Edwin van der Weide had worked on an interpolation library that @sravya91 (who received her PhD yesterday at our graduation ceremony and is now working at NVIDIA) used in her work. Jayant Mukhopadhaya and Brian Munguia have also been testing/improving the library. Perhaps everyone can comment on current status and we can create a small task force to see what still needs to be done and who can do what?. Best,. Juan. On Jun 17, 2019, at 10:36 AM, Clark Pederson <notifications@github.com<mailto:notifications@github.com>> wrote:. I'm going to jump on this too. Is anyone working on solution interpolation (from one mesh to another)? @sravya91<https://github.com/sravya91>, are you still working on this? Did PR #672<https://github.com/su2code/SU2/pull/672> introduce any capabilities to address interpolation? This seems to be a common request from SU2 users: [1]<https://www.cfd-online.com/Forums/su2/213321-su2-solution-interpolation.html> [2]<https://www.cfd-online.com/Forums/su2/215920-use-coarse-grid-flow-solution-initial-solution-fine-grid.html>. I've used some pretty rough python scripts to do solution interpolation in the past, and it would be nice to have some SU2 C++ code that could perform the same task. ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/466?email_source=notifications&email_token=AA5FFRGCPYI5KNVQZ7GB5F3P27DQZA5CNFSM4EB5RB6KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466#issuecomment-502783107:292,rout,routines,292,https://su2code.github.io,https://github.com/su2code/SU2/issues/466#issuecomment-502783107,1,['rout'],['routines']
Integrability,"Following along here.. will you eventually move the parallel section in CSysSolve up to the full application level (in the main() maybe) when you move to the next steps? In the earlier work, we found that, as you have seen in the linear solver routines, spawning parallel sections kernel-wise carried a large overhead. We found that the best performance was given by spawning right at the start and carry the threads through the entire program, just like the MPI ranks. . My only other comments, which it sounds like you are addressing, are to make the threads as transparent as possible to developers (shouldn't need to touch them unless they want to, like the MPI), and to make the compilation painless (disable/enable). Have you connected it to meson somehow yet?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-566642160:244,rout,routines,244,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566642160,1,['rout'],['routines']
Integrability,"Following your suggestion I've tried to prepend the compiler with `OMPI_MPICXX=g++-7` to force `mpicxx` using ‚Äì in the present particular case ‚Äì `g++-7 (Ubuntu 7.3.0-16ubuntu3) 7.3.0`. Unfortunately. there was no change in the output comparing to that of `gcc-8`. Moreover, neither `clang++ version 7.0.0 (trunk)` resolved the issue, though adding/playing with `-std=gnu++11`, `-std=gnu++14`, `-std=gnu++17`, and `-std=gnu++2a` standards gave more warnings as well as same errors. Anyway, I appreciated your hint at possible `gcc` incompatibilities. It appears the python wrapper has been broken already for some time ‚Äì without, actually, anybody truly reporting it. It needs some love for sure, so, there is a call for it. Meanwhile if you could share your `_pysu2.so` somewhere it would be greatly appreciated.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/551#issuecomment-405023863:572,wrap,wrapper,572,https://su2code.github.io,https://github.com/su2code/SU2/issues/551#issuecomment-405023863,1,['wrap'],['wrapper']
Integrability,"For SU2_DOT_AD the mesh deformation is differentiated manually, this is easy to do because it is a linear operation and the stiffness matrix does not depend on the design variables. You can read more about this kind of manual differentiation (forward and reverse) here: https://people.maths.ox.ac.uk/gilesm/files/NA-08-01.pdf. 1. If there is a better way please get involved in the optimization overall discussion. 2. Your interpretation of the sensitivities is correct. For clarity the FD mode of SU2_DOT is for use with the continuous adjoint only, for which the sensitivities at the surface already include the projection. 3. Not entirely sure if I understood. I think the interpretation of the boundary displacement sensitivities depends on how you initialize the adjoints. Formally what you should get is the product of the Jacobian transpose with the vector of adjoints you initialize. Those surface sensitivities are different from the ones in the file because they include the volume projection, whereas the ones in the file do not (they are the sensitivity wrt the surface nodes, but not considering that moving surface nodes also moves interior nodes).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1017#issuecomment-639520678:150,depend,depend,150,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-639520678,2,['depend'],"['depend', 'depends']"
Integrability,"For any folks following this saga, one of the issues was thermal conductivity. I think I figured it out and it‚Äôs a weird one‚Ä¶ In short: it was the thermal conductivities, but not for the reason we think. They are divided by a denom term that depends on a value a that indeed goes to nan if any free-stream concentrations are zero. However, the reason it doesn‚Äôt diverge immediately is if that denom term is less than eps, the thermal conductivity is set to zero, so thermal conductivity was always zero which is why it blew up after a few iters rather than the first one.; Fix: FS concentrations > 0, but also have to remove the if-statement that sets k_tr to zero. The denom term is order 1E-21 and always less than eps, so with that in the code it is always 0. Diffusion coefficient is now the only parameter giving wrong values, so need to check that next.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1396544724:242,depend,depends,242,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1396544724,1,['depend'],['depends']
Integrability,"For completeness, unsteady adjoints do not work for this type of case due to a dependence of the solution on old coordinates (to compute grid velocities) and old volumes (for the dual time derivative) which we do not handle correctly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2059#issuecomment-1607592600:79,depend,dependence,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/2059#issuecomment-1607592600,1,['depend'],['dependence']
Integrability,"For people who came across this issue later, my previous issue was very similar. If you have multiple python environments installed on your machine (e.g. Python 2.7 and Python 3.6), then the build process for the python wrapper doesn't always select the one with mpi4py installed. In my case, I had to manually edit the Makefile in `SU2_PY/pySU2/Makefile` to point to the correct python installation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722#issuecomment-506710295:220,wrap,wrapper,220,https://su2code.github.io,https://github.com/su2code/SU2/issues/722#issuecomment-506710295,1,['wrap'],['wrapper']
Integrability,For the moment I tried to not use six to avoid to add a new library dependency but it could be another solution!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-209998153:68,depend,dependency,68,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-209998153,1,['depend'],['dependency']
Integrability,"For the sliding interface case `slinc_steady`, I suppose the difference is caused by interpolation, but have no idea why `cht_compressible` fails.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1977#issuecomment-1477026273:16,interface,interface,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/1977#issuecomment-1477026273,1,['interface'],['interface']
Integrability,"For those who find this via google - resolution options: 1) see if any anyone has restored the functionality, or 2) use the python wrapper",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1304#issuecomment-900263111:131,wrap,wrapper,131,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-900263111,1,['wrap'],['wrapper']
Integrability,"Forgot to mention this, but the goal with a new build system is then to get rid of the preconfigure script altogether. Meson offers what they call wraps to automatically build and include dependencies (https://mesonbuild.com/Wrap-dependency-system-manual.html)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-500450833:147,wrap,wraps,147,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-500450833,3,"['Wrap', 'depend', 'wrap']","['Wrap-dependency-system-manual', 'dependencies', 'wraps']"
Integrability,"From what I see there is no easy way to resolve this. The problem is that the multiplication operator of the complex type in LLVM uses copysign which is a function that only accepts double and int... so that means it is not possible to instantiate complex with anything else than these types ... from my point of view it is not a very smart design decision. We should maybe enable the code section depending on the compiler. A possible solution would be to implement our own operators, which we would do then directly in codi.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/319#issuecomment-260128156:398,depend,depending,398,https://su2code.github.io,https://github.com/su2code/SU2/issues/319#issuecomment-260128156,1,['depend'],['depending']
Integrability,"Good catch, same bug exists in the Momentum forces routine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1074#issuecomment-697561032:51,rout,routine,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/1074#issuecomment-697561032,1,['rout'],['routine']
Integrability,"Good idea.. you can easily add the wall distance to the output in LoadLocalData_Flow() in output_structure.cpp. In the images, the half-cylinder (symmetry planes on top and bottom) has a solid zone inside with heat conduction. The interface there is a no-slip wall with the CHT_WALL_INTERFACE type. The downstream surface is also no-slip, but it is a typical ISOTHERMAL wall. Since the CHT_WALL_INTERFACE type was not considered earlier (only the trailing no-slip wall), I think that you will see a reduced wall distance near the cylinder, which will impact the turbulent solution. I expect some differences due to the change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-436307962:231,interface,interface,231,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-436307962,1,['interface'],['interface']
Integrability,"Good news,; @bigfooted @danielmayer @lkusch @EvertBunschoten : Commit ecb1154 fixed the restarts for feature_multicomp which is based on feature_flamelet and from a first thought it might work for table lookup as well. Please let me know if it does so. Otherwise The interaction of the table lookup with the Turb and Flow requires some additional calls to Pre/Post routines. @mheimgartner as discussed please merge feature_flamelet into multicomp, such that you have that fix as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223#issuecomment-915433095:365,rout,routines,365,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-915433095,1,['rout'],['routines']
Integrability,"Great stuff, thanks for taking the first step to integrate quasi-Newton techniques to the adjoint fixed point iterations. I'm reviewing this the next couple of days. Just one question right away so that I'm on the right track. It seems that this implementation is based on equation 130 from Degroote's paper. Right? Though you're not using any QR decomposition for solving it? What's the approach then (assumingly in `computeNormalEquations`)?. And you're not using `std::deque` like I did for storing a window of some past residuals (i.e. V^k), looking forward to see what kind of solution you came up with.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1020#issuecomment-648112710:49,integrat,integrate,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/1020#issuecomment-648112710,1,['integrat'],['integrate']
Integrability,"Great! Thanks, Eduardo. Let's work now together in this branch to make sure that everything is integrated nicely. Just let me know what help you may need.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/333#issuecomment-264951536:95,integrat,integrated,95,https://su2code.github.io,https://github.com/su2code/SU2/pull/333#issuecomment-264951536,1,['integrat'],['integrated']
Integrability,"Great!; Thank you very much.; With kind regards,. Jairo. On Thu, Nov 1, 2018 at 5:10 PM Thomas D. Economon <notifications@github.com>; wrote:. > No problem at all. I think the issue was that others had merged the; > changes into develop here from the web interface and those changes needed; > to be pulled down into your local copy before you could push the changes to; > .travis.yml up.; >; > I have just made the change, and I see the tests are now running! We'll; > get back with a review soon.; >; > ‚Äî; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/600#issuecomment-435170261>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Ac180sQoMHXa2p4ICO_ef6f3QXOmhII_ks5uq1U_gaJpZM4X34F2>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-435250485:255,interface,interface,255,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-435250485,1,['interface'],['interface']
Integrability,"Harichand, Giulio, Edwin, and all,. I would definitely prefer to use either (a) an open source library that is actively maintained, or (b) our own tree-based search. I do think that this is important for the various reasons that have been outlined/discussed already. The method Harichand describes is pretty much what we did in the ASC program. Edwin can provide more details (and we had an AIAA paper around 2005 on this topic). My suggestion: if Edwin has a tree search in C++ already and someone is willing to spend the time to integrated it, that would be the best option. We get the performance that is needed with a lightweight tree search, without external dependencies (to libraries that may provide a lot of other functionality we do not need), and we can expand to parallel trees as needed. If there is no code already available, then PCL seems like a good alternative (since it seems one can compile only portions of the library). Any takers?. Cheers,. Juan. On Jun 8, 2016, at 4:35 AM, Harichand M V <notifications@github.com<mailto:notifications@github.com>> wrote:. All,. Thanks for your comments. I think ANNlibrary is no longer maintained. It would be better if we can use a well maintained library in-order to prevent issues in future. Additionally ANNlibrary does not support distributed trees. As far as I know, pointcloud library also does not support distributed trees. I guess we will have to write a wrapper routine using MPI. This will create a local tree for its own portion of the surface mesh. Now distance computation can be done by querying all the trees and using the minimum. One catch here is that we will have to compute distance queries in a group in order to prevent the communication latency eating up the advantage. Waiting for comments. ‚Äî; You are receiving this because you commented.; Reply to this email directly, view it on GitHubhttps://github.com/su2code/SU2/issues/282#issuecomment-224563432, or mute the threadhttps://github.com/notifications/unsubscribe/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-224806527:531,integrat,integrated,531,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-224806527,2,"['depend', 'integrat']","['dependencies', 'integrated']"
Integrability,"Have you tried the CENTRAL_JACOBIAN_FIX_FACTOR option introduced in #691?; I recommend setting that to 3 or 4, the Lax coefficient to 0.1 (default is 0.15) the JST 4th order coeff to 0.01 and max CFL of 100 - 400 when using the ILU0 preconditioner, depending on how stretched the mesh is.; The justification for those settings is in the aforementioned PR.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/793#issuecomment-535572291:249,depend,depending,249,https://su2code.github.io,https://github.com/su2code/SU2/issues/793#issuecomment-535572291,1,['depend'],['depending']
Integrability,"Have you tried the Newton-Krylov approach in SU2? Boostconv sounds like Newton-Krylov. Our limitation with NK at the moment is that we don't have a good linear preconditioner to converge the Krylov solver to reasonable tolerances at high CFL (which is required to make this type of approach effective and efficient). In the papers, the types of problems to which they apply these methods are very different from the application you have in mind. There is a lot of work that should be done on the numerical schemes for high-speed (and even low-speed) to understand where the robustness issues originate. If these methods can be used as black boxes, it would be a good idea to implement them via the Python wrapper if possible.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022#issuecomment-1533813361:705,wrap,wrapper,705,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022#issuecomment-1533813361,1,['wrap'],['wrapper']
Integrability,"Have you tried:; a) Not forcing CC and CXX to be one of the OpenMPI wrappers; b) Since you are forcing the wrappers, -Dwith-mpi=custom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568#issuecomment-1074201467:68,wrap,wrappers,68,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568#issuecomment-1074201467,2,['wrap'],['wrappers']
Integrability,"Heather, all,. As you know I'm working on sliding meshes and that's something we were really looking forward. In my opinion including the ADT search inside the interpolator class to find the nearest neighbour will be mandatory when we will get to simulate multi-stage turbines. I did't have a proper look at those routines yet but I also do not expect any particular problem in using them inside the interpolator class. (Actually one item in my ""todo"" list is indeed to include those routines in the interpolator class.). Giulio. ---. Da: Edwin van der Weide notifications@github.com; Inviato: gioved√¨ 7 luglio 2016 23.47.21; A: su2code/SU2; Oggetto: Re: [su2code/SU2] Feature wall distance (#288). I expect that the tree search can be used for the interpolation routines without a problem. However, we have not looked into that yet. ## . You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHubhttps://github.com/su2code/SU2/pull/288#issuecomment-231217312, or mute the threadhttps://github.com/notifications/unsubscribe/AHg4OBXfHwCsJhsAn3mhMiYi_44mr1A0ks5qTXPpgaJpZM4JF5wW.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/288#issuecomment-231221966:314,rout,routines,314,https://su2code.github.io,https://github.com/su2code/SU2/pull/288#issuecomment-231221966,3,['rout'],['routines']
Integrability,"Hello @aditya12398 ,. I was able to recreate your problem with pywrapper enabled on my machine, and I believe I may have found the issue. There was a change with Python 3.8's configure utility. The change is noted here:. https://docs.python.org/dev/whatsnew/3.8.html#debug-build-uses-the-same-abi-as-release-build. This affected the meson build system, as noted here:. https://github.com/mesonbuild/meson/issues/5629. I believe I have solved the problem by adding two lines to the main `meson.build` file in the SU2 root directory. If you can, please checkout branch ""fix_python_3.8"", and see if that solves the Python wrapper compilation problem. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631167702:619,wrap,wrapper,619,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631167702,1,['wrap'],['wrapper']
Integrability,Hello @ng0177! The mass and stiffness matrices are calculated in the structural solver which could be extracted and used offline for modal analysis. At the moment this isn't integrated as an overall modal solver but I agree it would be a useful feature.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1003#issuecomment-634557333:174,integrat,integrated,174,https://su2code.github.io,https://github.com/su2code/SU2/issues/1003#issuecomment-634557333,1,['integrat'],['integrated']
Integrability,"Hello Dr. Economon,. Thank you for your quick response.; I just push the updates, following the suggested hints in the messages of the first ""git push ..."" command, but even after issued the ""git pull ..."", I still received the same message (please find the dialog appended at the end of this note). . With kind regards,. Jairo (jaspe55); .........................................................................................................................................................; Jairos-Mac-mini:SU2 jaspe$ pwd; /Users/jaspe/Desktop/SU2BRANCH/SU2; Jairos-Mac-mini:SU2 jaspe$ git branch; * feature_force_read_target_on_AD; master; Jairos-Mac-mini:SU2 jaspe$ git status; On branch feature_force_read_target_on_AD; nothing to commit, working tree clean; Jairos-Mac-mini:SU2 jaspe$ ; Jairos-Mac-mini:SU2 jaspe$ ; Jairos-Mac-mini:SU2 jaspe$ git push origin feature_force_read_target_on_AD; To https://github.com/su2code/SU2.git; ! [rejected] feature_force_read_target_on_AD -> feature_force_read_target_on_AD (fetch first); error: failed to push some refs to 'https://github.com/su2code/SU2.git'; hint: Updates were rejected because the remote contains work that you do; hint: not have locally. This is usually caused by another repository pushing; hint: to the same ref. You may want to first integrate the remote changes; hint: (e.g., 'git pull ...') before pushing again.; hint: See the 'Note about fast-forwards' in 'git push --help' for details.; Jairos-Mac-mini:SU2 jaspe$ git pull origin develop; remote: Enumerating objects: 50, done.; remote: Counting objects: 100% (50/50), done.; remote: Compressing objects: 100% (6/6), done.; remote: Total 81 (delta 45), reused 46 (delta 44), pack-reused 31; Unpacking objects: 100% (81/81), done.; From https://github.com/su2code/SU2; * branch develop -> FETCH_HEAD; 0811066f4..cf91b7cf4 develop -> origin/develop; Merge made by the 'recursive' strategy.; Common/include/blas_structure.hpp | 2 +-; Common/include/matrix_structure.hpp | 2 +-; Co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-438029731:119,message,messages,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-438029731,2,['message'],"['message', 'messages']"
Integrability,"Hello Pedro,. No problem at all. I just got stuck on a few issues in the PB solver and other things so I wasn't able to focus on this PR in a while. But yeah, I am indeed stuck on how to update the map in MPI. What I have done so far is kept the Global roughness array in config class for the BC_* routines and created an unordered map in physical geometry class which will be used in the SetWallDistance routine instead of the config call. I haven't used maps in C++ at all, so it is taking a while. I will try a few more things and if I can't fix it I will ask on slack or in the meeting next time. Cheers,; Akshay",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-653064740:298,rout,routines,298,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653064740,2,['rout'],"['routine', 'routines']"
Integrability,"Hello Pedro. While searching a small sample dataset, I have run some; variations on the jobs, and my findings were:; (Please note that *all* ""markers"" I have mentioned in the next items refer; to solid walls in the mesh, using the RANS solver); 1- When I impose HEATFLUX=0 *and* ISOTHERMAL=290 Kelvin, for the same; markers, there are no complaints from SU2. It shows that SU2 ignores the; imposition of HEATFLUX=0, in this case.; 2- Just setting ISOTHERMAL=290 Kelvin (using all of the same markers as in; (item 1), above), without any HEATFLUX setting, then SU2 produces the same; results as in (item1).; 3- When some markers are set with HEATFLUX=0 and the rest of them are set; with ISOTHERMAL=290 Kelvin (so that each wall marker in the mesh is; referenced), there are no complaints from SU2, and the job goes as expected.; 4-The error message mentioned earlier, appears when one or more solid wall; markers *is not marked* concerning HEATFLUX or ISOTHERMAL; .; My conclusion then is that the error message appeared when I mistakenly; have not included a wall marker (assigning it as a HEATFLUX or an; ISOTHERMAL marker!); Does it make sense?; Kind regards,. On Mon, Oct 23, 2023 at 7:48‚ÄØPM Jairo Cavalcante ***@***.***>; wrote:. > Unfortunately, my example involves a swirler and nozzle for the; > Navier-Stokes solver with Menter model, so the dataset is relatively large.; > Let me check whether some older small Euler mesh exhibits the same message!; > I will let you know! Thank you very much.; >; > On Mon, Oct 23, 2023 at 6:34‚ÄØPM Pedro Gomes ***@***.***>; > wrote:; >; >> Is there a simple example to reproduce the issue?; >>; >> ‚Äî; >> Reply to this email directly, view it on GitHub; >> <https://github.com/su2code/SU2/pull/2109#issuecomment-1776057496>, or; >> unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/AHGXZUV3DNRF3O55YAWT563YA3PETAVCNFSM6AAAAAA3QKLVDWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTONZWGA2TONBZGY>; >> .; >> You are receiving this because you commen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1777018035:841,message,message,841,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1777018035,2,['message'],['message']
Integrability,"Hello SU2 developers,. I am reopening this topic because I am studying a case of jet impingement on a wall with a time-varying flow at the inlet. I have used compressible RANS and TOTAL_CONDITIONS as inlet BC. Specifically, I have set a time-varying stagnation pressure at inlet. To do this, I used the Python script mentioned in the previous messages, modifying some commands to suit my problem. I should mention that I do not use Python frequently, so there are likely some errors. Indeed, I checked the documentation and noticed that the command I used to vary the pressure at the inlet (SetMarkerCustomPtotal) is not listed. However, when I run the simulation, it seems to work quite well. Unfortunately, when examining the pressure field, it appears that the time-varying boundary conditions are applied on the walls with no-slip conditions (represented by the MARKER_ISOTHERMAL command) and not at the inlet as I want. Could you please tell me what changes I need to make in the Python script to correctly set up the problem? For completeness, I am attaching the script I modified, the configuration file, and a video of the pressure field.; [2D_jet_val_unsteady_5.zip](https://github.com/user-attachments/files/15524970/2D_jet_val_unsteady_5.zip). Thank you in advance for your help. Best Regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1079#issuecomment-2143793953:343,message,messages,343,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2143793953,1,['message'],['messages']
Integrability,"Hello Tim. Thank you for the quick reply. ; Since I'm a new SU2 user, I firstly tried to build it from source in the quickest possible way so I didn't really do much. I've just run the command `./meson.py build` wihout modifying anything. Furthermore I tried on two different machines and I got the same error. ; Here the last part of the meson-log.txt but unfortunately it doesn't add more information about the problem. ```; Compiler stderr:; ; Run-time dependency MPI for cpp found: YES 1.10.2; Running command: /usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/check_dir.py boost; --- stdout ---. --- stderr ---. Message: Extracting boost ...; Running command: /usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio; --- stdout ---; /home/roby/SU2/SU2v7/externals/tecio. --- stderr ---; Traceback (most recent call last):; File ""/home/roby/SU2/SU2v7/meson_scripts/extract_file.py"", line 38, in <module>; extract_tar(infile, P.outpath, True); File ""/home/roby/SU2/SU2v7/meson_scripts/extract_file.py"", line 24, in extract_tar; with tarfile.open(fn) as z:; File ""/usr/lib/python3.5/tarfile.py"", line 1557, in open; return func(name, ""r"", fileobj, **kwargs); File ""/usr/lib/python3.5/tarfile.py"", line 1655, in bz2open; compresslevel=compresslevel); File ""/usr/lib/python3.5/bz2.py"", line 102, in __init__; raise TypeError(""filename must be a str or bytes object, or a file""); TypeError: filename must be a str or bytes object, or a file. externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1.; ```. Thank you for the assistance",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1019#issuecomment-640548489:456,depend,dependency,456,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019#issuecomment-640548489,2,"['Message', 'depend']","['Message', 'dependency']"
Integrability,"Hello Tobi, by the way, is there a good explanation as to why even for an; adiabatic wall, and REF_DIMENSIONALIZATION= DIMENSIONAL, I get an abs; (heat flux) > 200 at the conclusion of the flow solver, when; log10(Residual) ~ -9?. On Wed, Sep 6, 2023 at 6:08‚ÄØPM TobiKattmann ***@***.***>; wrote:. > Closed #2109 <https://github.com/su2code/SU2/pull/2109>.; >; > ‚Äî; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#event-10300600709>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUR75MBIGQTN2VJJVZTXZDQ5BANCNFSM6AAAAAA3QKLVDU>; > .; > You are receiving this because you are subscribed to this thread.Message; > ID: ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1739937564:677,Message,Message,677,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1739937564,1,['Message'],['Message']
Integrability,"Hello! I was using the python script ""shape_optimization"". I wanted to; leave out some design variables to ensure they will not be modified (i.e.; fixing the extremities of a nozzle, for example), but apparently it was not; working when trying that. On Thu, May 16, 2024 at 6:59‚ÄØPM Nijso ***@***.***> wrote:. > Hi, @jaspe55 <https://github.com/jaspe55> Sorry that it took so long to; > get back to you on this topic, but what is the exact command that you are; > using, do you use one of the python scripts?; >; > ‚Äî; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/2265#issuecomment-2116274865>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUR4CHGFULNFYLVZUELZCUT5VAVCNFSM6AAAAABGHNGHR2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCMJWGI3TIOBWGU>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265#issuecomment-2116341103:878,Message,Message,878,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265#issuecomment-2116341103,1,['Message'],['Message']
Integrability,"Hello, ; I did not fix this issue. I just found possible source of it. You can use case attached to this message to reproduce the issue. Run: python path_to_su2/finite_differences.py -f turb_SA_RAE2822.cfg -n 12; or; python path_to_su2/discrete_adjoint.py -f turb_SA_RAE2822.cfg -n 12. It ends with error message: . Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM.; ------------------------------ Error Exit -------------------------------_. The config file created prior to call the solver constains DV_VALUE = 0.0 instead of six values as in original cfg file. The reason for this (probable one) is described in my original post. . I'm not experienced with SU2 coding and handling of codes on GitHub, so I would like to ask someone to fix this issue. . Thank you,; Jan. [RAE_Test.zip](https://github.com/su2code/SU2/files/11199780/RAE_Test.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2005#issuecomment-1503154876:105,message,message,105,https://su2code.github.io,https://github.com/su2code/SU2/issues/2005#issuecomment-1503154876,2,['message'],['message']
Integrability,"Hello,. I have now added a basic FVM implementation to solve a general Poisson problem. The existing Poisson solver used a FEM based discretization but we needed a FVM based discretization to maintain numerical consistency when the momentum equations and Poisson equation for pressure are coupled. The FVM based solver is now working but some work still remains (like output formatting, history files.. etc). I used a pseudo-time approach and Euler explicit and implicit schemes fortime integration. The source term and the boundary conditions (Dirichlet and Neumann) are all hard coded for now. The next step would be to use the multigrid methods to solve the Poisson problem directly instead of the pseudo-time approach. . Cheers,; Akshay",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/429#issuecomment-370767656:487,integrat,integration,487,https://su2code.github.io,https://github.com/su2code/SU2/issues/429#issuecomment-370767656,1,['integrat'],['integration']
Integrability,"Hello,. I ran an incompressible case with NACA 0012 (AoA=0, TMR case) and I see a similar difference between SA and SST on the grid level 3 (https://turbmodels.larc.nasa.gov/naca0012_grids.html, 257 points on the airfoil surface). I also tried the SST_SUST model and have attached the plots for mid section and wake here (white lines - SA, red - SST, green - SST_SUST). The SUST model gives the same difference at mid chord and LE but not in the wake. The SST_SUST under predicts the drag value though (also I had some convergence issues with SUST).; ![pressure_line_cmp_mid](https://user-images.githubusercontent.com/28007882/66496216-dd5a2580-eaba-11e9-869e-097cce8e52b4.png); ![pressure_line_cmp_wake](https://user-images.githubusercontent.com/28007882/66496217-dd5a2580-eaba-11e9-9c72-1980625dd550.png). @economon , the SetStressTensor routine includes the -2/3 * rho * TKE term, so I suppose the TKE is accounted for in the viscous residual of the mean flow equations. . @emoralest6 if you wanted to check the source code, the mean flow solver is in SU2_CFD/src/solver_direct_mean.cpp and the corresponding numerics in the SU2_CFD/src/numerics_direct_mean.cpp file. Cheers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-540063840:840,rout,routine,840,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-540063840,1,['rout'],['routine']
Integrability,"Hello,. May I ask which version of the code do you use and on which branch ? In fact, this bug (and it was not the only one) was already fixed a few days ago on the branch feature_pyWrapper. You may pull those new changes just to be sure to have a clean version. Otherwise, I would not trust the results. The reason why the FSI Python tool (note the distinction with the SU2 Python wrapper, which is maintained and up-to-date) accumulates some bugs is that, normally, it is not really maintained anymore in prevision of a new coupling framework. I recently introduced some fixes to make it work again (I mean the coupling SU2 + pitch-plunge structural solver) in the meantime, but you may want to double-check each result you get. Best,. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/449#issuecomment-333879558:382,wrap,wrapper,382,https://su2code.github.io,https://github.com/su2code/SU2/issues/449#issuecomment-333879558,1,['wrap'],['wrapper']
Integrability,"Hello,. So, to clarify, there were two issues:. 1) With the old commit (382e82f), we were seeing the assertion failure at line 1881 of numerics_structure.cpp, but only with the very large mesh (180 million cells). 2) With the newer commit (c093a62), we were seeing the assertion failure at line 294 of C2DContainer.hpp, which was occurring even with smaller meshes (7 million cells). The solution to (2) appears to be to change `geometry->node[iPoint]->GetnNeighbor()` to `geometry->node[iPoint]->GetnPoint()` at line 3759 of CEulerSolver.cpp, in the `CEulerSolver::SetUpwind_Ducros_Sensor()` method. I made this change locally, and attempted to run on our large mesh. Issue (2) seems to be fixed, but we still run into issue (1). I have now gone through the read restart routines, and have found a potential issue:. For reference, the restart file for our large mesh with averaging data included consists of:; 39 fields * 75,107,967 points = 2,929,210,713 variable values (which is larger than `INT_MAX`). Beginning at line 3931 of CSolver.cpp, in method `CSolver::Read_SU2_Restart_Binary(...)`, we have the following:. ```; int *blocklen = new int[geometry->GetnPointDomain()];; int *displace = new int[geometry->GetnPointDomain()];; int counter = 0;; for (iPoint_Global = 0; iPoint_Global < geometry->GetGlobal_nPointDomain(); iPoint_Global++ ) {; if (geometry->GetGlobal_to_Local_Point(iPoint_Global) > -1) {; blocklen[counter] = nFields;; displace[counter] = iPoint_Global*nFields;; counter++;; }; }; MPI_Type_indexed(geometry->GetnPointDomain(), blocklen, displace, MPI_DOUBLE, &filetype);; ```; The problem here is that for our case, where `iPoint_Global` can get up to 75,107,967 and `nFields` = 39, the value assigned to `displace[counter]` in the loop can over-run `INT_MAX`. This would result in potential garbage / incorrect displace values being passed to `MPI_Type_indexed(...)`. Unfortunately, simply changing `displace` to a `long int *` won't work, as the expected argument type for `",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-622026420:772,rout,routines,772,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622026420,2,['rout'],['routines']
Integrability,"Hello; I tried a few things, even after setting the environment variables, like mentioned in the previous comment, SU2 build failed with the same long error. I installed MPICH in a custom path and set the variables like so:; ```; export CC='/usr/bin/gcc'; export CXX='/usr/bin/g++'; export MPICC='/usr/local/mpich-3.3.2/bin/mpicc'; export MPICXX='/usr/local/mpich-3.3.2/bin/mpicxx'; export LD_FLAGS='-L/usr/local/mpich-3.3.2/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/usr/local/mpich-3.3.2/include'; export C_FLAGS='-I/usr/local/mpich-3.3.2/include'; export PKG_CONFIG_PATH='/usr/local/mpich-3.3.2/lib/pkgconfig'; ```; The following two lines are absent from my meson output:; ```; Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-640396480:719,depend,dependency,719,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-640396480,2,['depend'],['dependency']
Integrability,"Here are some numbers regarding the performance. I used an unsteady 3D case with 83425 points. I took the extreme case of calling the output routines every time-step and only 5 inner iterations. For the first run I enabled the writing of restart and tecplot file:; ```; -------------------------- Performance Summary --------------------------; Simulation totals:; Cores: 8 | DOFs/point: 6 ; Points/core: 10428.1 | Ghost points/core: 2045.25 ; Wall-clock time (hrs): 0.153299 | Core-hrs: 1.22639 . Preprocessing phase:; Preproc. Time (s): 2.69291 | Preproc. Time (%): 0.487956 . Compute phase:; Compute Time (s): 385.71 | Compute Time (%): 69.8909 ; Iteration count: 560 | Avg. s/iter: 0.688769 ; Core-s/iter/Mpoints: 55.2191 | Mpoints/s: 0.144877 . Output phase:; Output Time (s): 163.472 | Output Time (%): 29.6211 ; Output count: 112 | Avg. s/output: 1.45957 ; -------------------------------------------------------------------------; ```; Note that the iteration count is the total number of all inner iterations. 30% of the time is spend in the output routine. That may sound like a lot, but lets take a look at the second case, where I still call the output routines, but disabled the writing of any files. ```; -------------------------- Performance Summary --------------------------; Simulation totals:; Cores: 8 | DOFs/point: 6; Points/core: 10428.1 | Ghost points/core: 2045.25; Wall-clock time (hrs): 0.112822 | Core-hrs: 0.902578. Preprocessing phase:; Preproc. Time (s): 3.84826 | Preproc. Time (%): 0.947474. Compute phase:; Compute Time (s): 399.446 | Compute Time (%): 98.347; Iteration count: 560 | Avg. s/iter: 0.713297; Core-s/iter/Mpoints: 57.1855 | Mpoints/s: 0.139896. Output phase:; Output Time (s): 2.86557 | Output Time (%): 0.705527; Output count: 112 | Avg. s/output: 0.0255854; Restart Aggr. BW (MB/s): 0 | MB/s/core: 0; -------------------------------------------------------------------------; ``` ; You can see that now the time spend in the output routines (including",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-535018704:141,rout,routines,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-535018704,1,['rout'],['routines']
Integrability,"Here's my best guess at what is happening: we are not correctly identifying the complete set of neighbors along intersections of two or more periodic boundaries (maybe duplicates, or maybe missing some neighbors). Without the correct stencil, GG will be incorrect due to integrating over the wrong control volume (repeated faces or missing faces). It also needs the correct volume for division in the GG evaluation. LSQ gets away with it most likely because the stencil can be defined independently of the actual set of neighbors (doesn't need to be a closed control volume) - if you miss a neighbor or duplicate a neighbor, you should end up with a similar answer. WLSQ may also get away with it, but with the weighting by inverse distance of the neighbor, you could still see some artifacts in the solution with missing/duplicate neighbors. If you have some time, can you take a look at the periodic matching routines and periodic communication preprocessing? The routines are sort of nasty, since the identification is not so straightforward in a vertex-based code with the DoFs on the boundary, but I expect we are missing something there still with intersecting periodic boundaries.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1090#issuecomment-727639514:271,integrat,integrating,271,https://su2code.github.io,https://github.com/su2code/SU2/issues/1090#issuecomment-727639514,3,"['integrat', 'rout']","['integrating', 'routines']"
Integrability,"Here's the crash info for the build with debug flags. No difference with/out the wrapper.; [QuickStartLog_Debug.txt](https://github.com/su2code/SU2/files/4583003/QuickStartLog_Debug.txt); I'm currently testing on the QuickStart case. I have 2 different types of machines which exhibit the same behavior. They are both using mellanox interconnects using their hpcx package and openmpi 4.0.2 (another system without mellanox but with openmpi 4.0.2 works fine; though that's also on Cent7 instead of Cent8). For the two types of systems with issues, one set is running with Intel Golds and 92GB/node and the other set is running on AMD EPYCs with 256GB/node. Interesting point; I can check with the OpenMPI folks on what might cause an external library (mellanox libraries) to cause file opening to fail.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-624242391:81,wrap,wrapper,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624242391,1,['wrap'],['wrapper']
Integrability,"Hey @LaSerpe (Giulio),. I had a look at the new driver structure and it look clear to me. My only comments is on the name of the classes: I agree on having a GeneralDriver in place of the SingleZone and MultiZone Driver, as @tobadavid said we should distinguish the drivers for the different physics/applications, but the name CFluidDriver I think is a bit misleading considering the fact that is specifically for multizone fluid with sliding-mesh interface. Perhaps a SlidingMeshDriver sounds better??? Any suggestion from the others?. Regarding the fact that you still have to specify the FSI_MARKER, i would fix this before merging with the develop. . Anyway good job!!! . cheers. Salvo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-255340813:448,interface,interface,448,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-255340813,2,['interface'],['interface']
Integrability,"Hey @talbring, currently the 'Trigger build' function for non-PR branches seems to not work. @cvencro and I get the error message `Oh no! You tried to trigger a build for su2code/SU2 but the request was rejected. ` . Do you know more about it? Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/748#issuecomment-526146883:122,message,message,122,https://su2code.github.io,https://github.com/su2code/SU2/issues/748#issuecomment-526146883,1,['message'],['message']
Integrability,"Hey @timjim333 that's nice to hear,. I would put it in the .bashrc if you consistently call SU2 with your command, like that you can always switch the SU2-build and still have your clear settings already in place. Image having the master, develop and feature_whatever installed, you don't need to apply your patch to all of these versions if you put it in the bashrc.; But editing interface.py has the same effect, so its up to you what you prefer. Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526#issuecomment-429668015:381,interface,interface,381,https://su2code.github.io,https://github.com/su2code/SU2/issues/526#issuecomment-429668015,2,['interface'],['interface']
Integrability,"Hey David,. to define custom BCs inside python is an amazing feature! I can see a lot of potential there. Thanks for that! . Since the python wrapper functionality is growing, what do you think about moving all of these wrapper routines to a separate file cpp file? ; Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-352001425:142,wrap,wrapper,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-352001425,3,"['rout', 'wrap']","['routines', 'wrapper']"
Integrability,"Hey Tim, Sorry I couldn't try this while it was still in PR mode, but I just tried it on my ubuntu 16.04 and after some poking around, it worked! Compilation from scratch was very rapid. . Just a quick thing, the documentation didn't quite work for me but that is probably because my default python is 2.7. Which meant that I had to execute it as:. `python3 meson.py ...`. When I did that, I got this error: ; ```; Message: Looking for mpi4py in /usr/lib/python3/dist-packages; Run-time dependency python3 found: NO (tried pkgconfig). SU2_PY/pySU2/meson.build:29:0: ERROR: Dependency ""python3"" not found, tried pkgconfig; ```; This was not fixed by installing mpi4py the way it is suggested in the draft documentation. Stack overflow came to the rescue and I had to run . `sudo apt-get install python3-mpi4py`. After this the installation worked perfectly. I am not sure if this is an anomaly and that it won't happen in properly configured workstations. I also am not a 100% sure about why this worked (I am a linux noob). So I will leave it to your discretion whether this is something you want to add to the documentation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-525114027:415,Message,Message,415,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-525114027,3,"['Depend', 'Message', 'depend']","['Dependency', 'Message', 'dependency']"
Integrability,"Hi ; > WeightNF.dat: I don't understand what this is for. It is read in CAdjEulerSolver::SetIntBoundary_Jump to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?. As far as I see it that function should not be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.). you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them. That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-885462629:1376,message,message,1376,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885462629,2,['message'],['message']
Integrability,"Hi @Eduardo-Carvalho ,. your request is now merged into the develop branch and you can test/use it if you like. It will be in one of the next releases, if no further issues occur.; Handling is intuitive: Just set your restart iteration in the config file as you would do normally and activate the restart solution option. Furthermore, place your restart file (two in the case of 2nd order time integration) in the same directory as the config file of your test case. Then you are set up and can run the scripts as normal. ; For more details, I refer to pull request #964. . Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/909#issuecomment-630289600:394,integrat,integration,394,https://su2code.github.io,https://github.com/su2code/SU2/issues/909#issuecomment-630289600,2,['integrat'],['integration']
Integrability,"Hi @EttoreSaetta sorry for the late reply. There are some scaling terms in the JST scheme in SU2 that depend on the number of neighbors of each point (which will be different for 2-D and 3-D).; However, they don't explain the complete difference, I tried making them constant but 2-D and 3-D still gave different results, in fact the difference was much larger than in your problem.; I looked in the usual references but could not find an explanation for those terms, but in any case it seems that the main problem is the symmetry boundary condition.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1280#issuecomment-862086207:102,depend,depend,102,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-862086207,1,['depend'],['depend']
Integrability,"Hi @LaSerpe ,. The BC_Fluid_Interface only used to update the information for mean flow, there is no function used to update the turbulent information for the sliding interface?. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-263457080:167,interface,interface,167,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-263457080,1,['interface'],['interface']
Integrability,"Hi @MaxSagebaum,. The two options in your second step sound very interesting and I guess are the only way to get good performance for arithmetic intensive operations, like the ones in the DG solver. If I understand correctly option 1 is something that could be tried already, by applying the external function mechanism to the gemm and gemv functions (akin to what is done now for large linear systems) right? The only downside would be the creation of temporary matrices of passivedouble required to call the blas functions.; With option 2 maybe these temporaries would not be required? As there would be an active matrix class whose internal data structures would be passive matrices that could interface with blas directly?. I guess the important question is: For performance sensitive applications, do you see merit in developing something in house that could better leverage the new AD tool, or will it be able to handle ""any"" object oriented library we might adopt?. Thanks and regards,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-463181396:697,interface,interface,697,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-463181396,1,['interface'],['interface']
Integrability,"Hi @TobiKattmann ,. Apologies for the huge gap in communication - I had to attend to other matters before I could try this out. I just wanted to follow up and thank you for your suggestions. Doing `export SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -n %i %s""` before calling 'parallel_computation.py' did the job!. Is it safe for me to edit line 70 in interface.py from `mpi_Command = 'mpirun -n %i %s'` to `mpi_Command = 'mpirun --use-hwthread-cpus -n %i %s'` so that it is set permanently? Or is it better to put `export SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -n %i %s""` in my .bashrc?. Many thanks and kind regards,; Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526#issuecomment-428829621:352,interface,interface,352,https://su2code.github.io,https://github.com/su2code/SU2/issues/526#issuecomment-428829621,1,['interface'],['interface']
Integrability,"Hi @TobiKattmann . > > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > > ; > > ; > > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth; > ; > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance exceeding 1e-1. I tested with single core and this message appears as well. Again, I don't see a point of this message and need to know the original intent.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-894929286:108,message,message,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894929286,4,['message'],['message']
Integrability,"Hi @TobiKattmann . Thank you for making lots of suggestions. I'm out of town now, so I'll address those once I get back later this week. > > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > exceeding 1e-1.; > ; > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :). Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. > For example Green-Gauss gradients have an exclusion for internal boundaries but not for nearfield ones. @pcarruscag So, I need to make something similar to internal boundaries? The flowfield looked reasonable though except when I use the VENKATAKRISHNAN limiter where the nearfield boundary seemed to act like half permeable wall.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-898144522:1391,message,message,1391,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898144522,1,['message'],['message']
Integrability,"Hi @TobiKattmann sorry, I must have missed your message somehow! Thanks for the input, maybe when the mesh adaptation strategy has matured a little more (or is better documented), it can be a bit more easily used. This is also in response to @fredericodpc Right now, I don't know if it is a bug or I'm just unsure of how to correctly use it, but I also have not been able to get the mesh to respect the wing surface. I've also not heard from the branch author either, so I don't know if this is being maintained publically anymore. =( It's a shame because it looked really promising for optimising the cost/accuracy of supersonic solutions!. Ideally, I think one should be able to pass in a representation of the actual surface (either through an stl surface or as a very fine mesh), which should be used as a reference surface. As a minimum, we should be able to set a maximum surface mesh turning angle or some other surface-local control.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-846386250:48,message,message,48,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-846386250,1,['message'],['message']
Integrability,"Hi @TobiKattmann, thanks for your review. I'll try to do what I can within this week as I don't have much time from next week. > Hi Yuki, Thanks for this contribution bouquet I have a few comments in the review. You didn't write the code initially but it might still be good idea to make the code a bit nicer overall. In case there are things that are not understandable please let me know. As for things that I don't understand, see below although I would like to separate them from this PR.; - WeightNF.dat; - I don't understand what this is for. It is read in `CAdjEulerSolver::SetIntBoundary_Jump` to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?; - VENKATAKRISHNAN limiter; - With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); - `Bad match for point 47742.	Nearest donor distance: 3.6066950142e+00.`; - Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-884793528:1117,message,message,1117,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-884793528,2,['message'],['message']
Integrability,"Hi @aditya12398 . That would be helpful as it has been a bit difficult to identify the problem between versions of the code that have a lot of differences. As mentioned in my prev message, one of these differences is the MUSCL implementation and I am leaving this out for now. If you could ran the case attached in the following manner, would be useful:. - sending cfg files invbb_old_711.cfg and invbb_old_751.cfg (for versions 7.1.1 and 7.5.1 respectively) + mesh file blunt_91.su2; - could you run 2 simulations, one with 7.1.1 another with 7.5.1 with those cfg files pls?. MUSCL is disabled, so if we obtained very different results between those 2 simulations we have a good hint that the problem is not MUSCL. and we can then decide what to do next. Please confirm if you can do this and send me updates once you have them - thanks! I keep working on this in different fronts, more hands-on debug.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2026#issuecomment-1568256210:180,message,message,180,https://su2code.github.io,https://github.com/su2code/SU2/issues/2026#issuecomment-1568256210,1,['message'],['message']
Integrability,"Hi @baldang, problem solved: https://github.com/su2code/SU2/commit/bba499e6bbb3a91cdec5beca94a095cf1bf4576c; I kinda found the solution here https://sourceforge.net/p/mingw-w64/mailman/message/24692038/; I don't know why this built in your fork.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1387#issuecomment-941136807:185,message,message,185,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387#issuecomment-941136807,1,['message'],['message']
Integrability,"Hi @bmunguia ,; I was in the same situation as @MiracAydin1, so thanks for the hint. Nevertheless I'm having some problems. I followed your instructions to install the branch:. 1. downloaded the [feature_adapt_sst](https://github.com/su2code/SU2/tree/feature_adap_sst) branch.; 2. Used meson to configure the build; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true`; 3. Added the environment variables to the .bashrc; 4. ninja build.; `./ninja -C build install`. The build didn't show any errors, only few warnings during meson ( `gcc1: warning: command line option ‚Äò-Wno-non-virtual-dtor‚Äô is valid for C++/ObjC++ but not for C`). When I try to run the mesh_adaption (or even run simply the solver through parallel_computation.py):. `$SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6`. It immediately shows an error (without even showing the SU2 splash screen) :; `Traceback (most recent call last):`; ` File ""/usr/local/bin/mesh_adaptation_amg.py"", line 38, in <module>`; ` import SU2`; ` File ""/usr/local/bin/SU2/__init__.py"", line 14, in <module>`; ` from SU2 import amginria`; ` File ""/usr/local/bin/SU2/amginria/__init__.py"", line 4, in <module>`; ` from .interface import *`; ` File ""/usr/local/bin/SU2/amginria/interface.py"", line 41, in <module>`; ` import _amgio as amgio`; `ImportError: No module named _amgio`. Am I missing any dependencies? ; Please note that I previously compiled SU2 master branch without issues, and have already installed mpich, numpy, scipy.; Any help would be really appreciated.; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619332650:1179,interface,interface,1179,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619332650,6,"['depend', 'interface']","['dependencies', 'interface']"
Integrability,"Hi @gbaty,. I started pushing this a bit further and opened up a new PR (#424). Next step is trying to get the wrapper to build against a version of Python 3 and test with that on Travis. Let me know if you have any ideas. I'm struggling a bit with the Makefile generation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-323882820:111,wrap,wrapper,111,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-323882820,1,['wrap'],['wrapper']
Integrability,"Hi @koodlyakshay thanks for making the changes.; By default MPI barriers are ""never"" needed, the normal communication routines already do all synchronization required. Efficiency is probably not fundamental for that routine but this solution feels too complicated somehow, can you attend tomorrow's developers meeting? (I'm getting the ""there's gotta be a simpler way"" feeling, and if we pick the brains of a few people we are certain to find it). In the meantime, if you specify the roughness as a string+double list (exactly like MARKER_HEATFLUX), which is read with `addStringDoubleListOption` you could probably simplify the logic around heatflux and isothermal markers, which would make the setup more user friendly (having to stick with an order is bound to trip someone at some point).; Also the cht interface is ""just"" an isothermal boundary, any reason not to make this feature available for that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-630788337:118,rout,routines,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630788337,8,"['interface', 'rout', 'synchroniz']","['interface', 'routine', 'routines', 'synchronization']"
Integrability,"Hi @monika1387 : at the moment, we throw errors if folks try to use a CGNS mesh that is multi-zone. SU2 currently accepts only single zone, unstructured CGNS files. It is possible to run a multi-zone calculation if you supply two separate single zone CGNS files though, I believe. Is there a particular error you are seeing that you can share? It is very common for vendors to implement CGNS differently, so depending on where you get the file, we may have compatibility issues. If so, feel free to open a new issue with the details.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-710182402:408,depend,depending,408,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-710182402,1,['depend'],['depending']
Integrability,"Hi @pcarruscag Let me give me some background, we are trying to perform resolvent analysis and for that we need to have linearized NS equations. I ran my LES simulations in SU2 and mean flow data is available in SU2 so I would like to stick to SU2 to understand if SU2 can solve the ‚Äúdirect"" linearized Navier-Stokes equations? ; Also, we are looking for PETSc library to use for LU decomposition. I understand SU2 uses eigen numerical library so possibly we can integrate PETSc in SU2 or perhaps we can perform outside SU2 after above step is completed to get the solved linearized matrices in SU2. I tried to explain please let me know if this make sense, else I will provide more details. ; I am referencing this paper for my work page 4-6 (https://arxiv.org/abs/2005.10964); [Optimal eddy viscosity for resolvent-based.pdf](https://github.com/su2code/SU2/files/5765838/Optimal.eddy.viscosity.for.resolvent-based.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1141#issuecomment-754091837:463,integrat,integrate,463,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141#issuecomment-754091837,1,['integrat'],['integrate']
Integrability,"Hi @pcarruscag and @vdweide thank you very much for your troubleshooting tips and explanation! I think I was confusing 3 different settings - the base compilers (CC and CXX), the wrapped mpi compilers (MPICC and MPICXX), and the MKL pkgconfigpath. I did not realise that after updating my base compilers in my environment that the openmpi `mpicc` and `mpicxx` would automatically pick up the new `gcc` (I thought I'd have to compile new mpi wrappers). . I was able to get SU2 on our HPC compiled and running by doing (after installing the newer `gcc` and `g++` compilers):; ```; module load openmpi/3.0.0_intel2018.2.046 ; CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8 -Dwith-mpi=enabled -Denable-mkl=true -Dcustom-mpi=true; ```. What is strange is that previously, the HPC MKL appeared to be automatically picked up from the `PKG_CONFIG_PATH`. I wanted to use my own newer local copy but updating this path didn't seem to work, bet setting the `-Dmkl_root` flag fixed that.; i.e.; ```; module load openmpi/3.0.0_intel2018.2.046 ; CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8 -Dwith-mpi=enabled -Denable-mkl=true -Dcustom-mpi=true -Dmkl_root=/home/user/programs/intel/2020_update4/compilers_and_libraries_2020.4.304/linux/mkl; ```; Thanks again for both your help! Take care.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-745142779:179,wrap,wrapped,179,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-745142779,2,['wrap'],"['wrapped', 'wrappers']"
Integrability,"Hi @pcarruscag, just a small follow-up to my comment in the code section concerning the new adjoint implementation that might also help here (either by using it directly or just for getting some ideas). What I would like to change is in fact not the `CDiscAdjSolver` (which I find is very good) - but I'd like to propose some changes for the *interface* to the AD tool. And some subsequent stuff.; It will allow for a more direct control of derivatives which is favourable in case one deals with multiple zones, multiple sets of conservative variables, geometry coordinates in case of FSI, and so on. And of course in terms of performance as one needs only one tape that one can keep during all iterations, regardless of what their variables might be. In case you are interested, take a look at the implementation in [su2code:sc_develop](https://github.com/su2code/SU2/tree/sc_develop). I'll open the PR as soon as @talbring opened his one for his great rework on input/ouput. As for this PR, let me wait a second if we can clear up the issue concerning the registration and I'll leave a small review afterwards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615#issuecomment-457582842:343,interface,interface,343,https://su2code.github.io,https://github.com/su2code/SU2/pull/615#issuecomment-457582842,2,['interface'],['interface']
Integrability,"Hi @pcarruscag,; I apologize for giving a poor suggestion (older version). The custom-mpi mode with all environment variables defined did not seem to work for me, as you can see from my comments on 29th of May and 8th of June.; Does the legacy build system mean using automake/make etc?. Also, I tried changing the dependency from mpi to mpich as you suggested. I changed the lines to: ; ```; mpi_dep = [dependency('mpich', language: 'c', required : get_option('with-mpi')),; dependency('mpich', language: 'cpp', required : get_option('with-mpi'))]; ```; and I got this error.; ```; meson.build:37:2: ERROR: mpich dependency does not accept ""language"" keyword argument; ```; So I removed the language part and reran the command to get the following, you can see it identifies mpich as a dependency:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=false -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu famil",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:315,depend,dependency,315,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,5,['depend'],['dependency']
Integrability,"Hi @pcarruscag,; thank you very much for the insight and the well thought proposed solution. I wasn't aware that there was such a loss in performance, it seems clear that something needs to be done. The only question I have is regarding the following comment . > There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I'm using this feature more and more, I was planning to extend it in the structural solver to remove the `if fsi` statements, and I also used it in the rework of the mesh solver, as defining variables at the interface only reduces greatly the memory footprint (sort of like the node-vertex structures in geometry). You mention there are options to keep this versatility, how difficult do you think would be to implement them?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-507998889:646,interface,interface,646,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-507998889,2,['interface'],['interface']
Integrability,"Hi @sun5k, that looks promising :+1: ; It would be nice if you could attend the developer meetings and tell us about your plans regarding the integration of this feature.; Every Wednesday at 3pm UK, 4pm CET, https://meet.jit.si/SU2_DevMeeting; There are folks working on implementing SST-2003m, this could be a better comparison with fluent.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1100896636:142,integrat,integration,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1100896636,1,['integrat'],['integration']
Integrability,"Hi @sun5k,. I think that the restart of the solution is missing. Since for CTransLMSolver you have inherited the functions from CTurbSolver class, the restart is only applied to the turbulent solver. I solved this problem by creating another class called CTransSolver which is a copy of the CTurbSolver class but with a modified LoadRestart function. I guess that the function in the CTurbSolver class can be modified to take into account the transition solver. It depends if we want to divide the transition from the turbulence solver or not.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1111256246:465,depend,depends,465,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1111256246,1,['depend'],['depends']
Integrability,"Hi @talbring ,. Also I noticed there is no breakdown file being written for incompressible problems. I suspect this is because the flow boolean in the SpecialOutput_ForcesBreakdown routine only checks for EULER, NS and RANS but not the INC versions of those. . Cheers,; Akshay",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/792#issuecomment-534110882:181,rout,routine,181,https://su2code.github.io,https://github.com/su2code/SU2/issues/792#issuecomment-534110882,1,['rout'],['routine']
Integrability,"Hi @tbellosta, thanks for your message. Maybe we can first bring your SFD implementation back to life and then we can reassess the boostconv business. If that works for you, let me know when you push the branch.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022#issuecomment-1533740257:31,message,message,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022#issuecomment-1533740257,1,['message'],['message']
Integrability,"Hi @themrdjj,; Thank you for the feedback, there was already a similar report in #796 (which incidentally went stale and was closed), I will try to do something about it, or if you would like to contribute code to the project I can point you to right place to add an error message. Meanwhile my best advice is to not start a config from scratch until you know SU2 very well (and even then...) look for a test case that uses similar features and go from there.; The minimal config is the one in Quickstart, the template is more of a catalog :) I don't think we'll ever have a unified minimal config, SU2 does many things, some mutually exclusive.; Convective options are reasonably well documented here: https://su2code.github.io/docs_v7/Convective-Schemes/; The output messages before ""Begin Solver"" can be helpful (although in this particular case you would need to know what to expect). Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/842#issuecomment-566642727:273,message,message,273,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-566642727,4,['message'],"['message', 'messages']"
Integrability,"Hi @timjim333 ,. Exactly (concerning your first question). . For the %s : In your initial post you stated that `mpirun --use-hwthread-cpus -np 12 SU2_CFD turb_ONERAM6.cfg` worked for you. So %s is simply the place-holder for the SU2 module together with the configure script. Which in your case would be `SU2_CFD turb_ONERAM6.cfg` . But `parallel_computation.py` will also call `SU2_SOL turb_ONERAM6.cfg` for you after the solver routine to create output files for visualization. ; If you take a look into the `interface.py` (as in my previous post) and the `parallel_computation.py` you'll find exactly how its done. Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526#issuecomment-395712721:430,rout,routine,430,https://su2code.github.io,https://github.com/su2code/SU2/issues/526#issuecomment-395712721,4,"['interface', 'rout']","['interface', 'routine']"
Integrability,"Hi @timjim333 ,. you can try to set an environmental variable 'SU2_MPI_COMMAND' which contains your specific mpirun command. Take a look at /SU2_PY/SU2/run/interface.py (line 66) in the source code, that might help. There the command which is called by parallel_computation.py is build. For your case it should be:; export SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -np %i %s"". I hope that helps :) Regards,; Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526#issuecomment-383032449:156,interface,interface,156,https://su2code.github.io,https://github.com/su2code/SU2/issues/526#issuecomment-383032449,1,['interface'],['interface']
Integrability,"Hi All; I‚Äôm a bit worried about the logistics related to checking this v&v data base for every new release.; Unlike the tutorials, these cases, by their nature will be large and will require long integrations(the 2D cases might not fall on this category). This means also that significant computational resources will be required for this evaluation (about twice a year for a growing list of cases). Is it practical?; The only way that I think that it might work is that each contributor will be responsible for checking the casesthat he has introduced, before each release. Being a voluntary institution, this can not be enforced (and we do not want to enforce). How about trying to be less demanding:; In each validation case there will be a statement about the last version that it was checked with and the responsible contributor. Each contributor will receive a recommendation to check his cases before a new release, and will be able to do that and update the OK label also after the release.; Less waterproof but might be more workable.; What do you think?; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423273117:196,integrat,integrations,196,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423273117,1,['integrat'],['integrations']
Integrability,"Hi Amir,; I think you need to declare su2double CSolver::GetSA_cb1_solver(void) as virtual, i.e.:; virtual su2double CSolver::GetSA_cb1_solver(void);; I guess the message you added also does not get printed?; ""AKB: inside GetSA_cb1_solver returning cb1_adj as: ""; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-498358987:163,message,message,163,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-498358987,1,['message'],['message']
Integrability,"Hi Brain. I have uploaded the branch but having problem to compile it. I use the following configuration. ./configure --prefix=/home/msahin/SU2 -enable-mpi -enable-metis --with-cxx=mpicxx --enable-PY_WRAPPER CXXFLAGS='-O3'. but having the following error message:. ... ; ...; CXX ../src/linear_algebra/libSU2_a-CPastixWrapper.o; AR libSU2.a; make[1]: Leaving directory `/home/msahin/SU2/Common/lib'; Making all in SU2_PY; make[1]: Entering directory `/home/msahin/SU2/SU2_PY'; make[1]: *** No rule to make target `SU2/amginria/_amgio.so', needed by `all-am'. Stop.; make[1]: Leaving directory `/home/msahin/SU2/SU2_PY'; make: *** [all-recursive] Error 1. Am l missing something in the configuration?. Mehmet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-579140612:255,message,message,255,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-579140612,1,['message'],['message']
Integrability,"Hi Brian, ; I'm sorry for the late reply, I've been using the feature_adap branch in 2D and 3D with success in the last weeks, so thanks for the amazing work. . After your last commit I recompiled everything, moreover now I'm using `$SU2_RUN/SU2_DEF` before running `mesh_adaption_amg`, so to be sure that element orientation is as expected. The tool is working nice, once the smoothing, grad, adaption values are tuned, thank you very much!. After a bit of use may I add pair of feature request, that in my opinion would improve the overall (already remarkable) quality of the `feature_adap` .; **_Feature request:_**; 1. The possibility to have boundary layer elements (QUAD PENTA) with the mesh adaption would be very much appreciated. If not possible, wouldn't it be possible to force a frozen interface between boundary layer elements?; 2. Add a ""region of interest"" where the refinement takes place. Sometimes it is not required to have sharp shocks resolved far away from the body.; 3. Do you plan to merge this feature in the master branch?. **_Bugs (or at least unexpected behavior):_**; 1. When I use the restart option, even if there is a `restart_flow.dat`, in the base folder, apparently the `mesh_adaption_amg` does not create a link into the \adap\ini\ folder, and I've to manually copy it (quite fast), to effectively enable the restart option. **_Clarification_**; 1. `PYADAP_BACK` option is really interesting, but I don't get it completely: shall I mesh the complete flowfield with higher detail (refined mesh), does this option handle only the body surface (or only the volume inside the body of interest, not the flowfield)? Is there any plan to use geometric files such as step or iges, to have the proper curvatures defined?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-637328023:798,interface,interface,798,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-637328023,1,['interface'],['interface']
Integrability,"Hi David,; Yes, I was able to figure out that and I went ahead in trying to make fsi_computation.py work with this branch. Another error (which may be a bug actually ) occurs when the wrapped function **SetInitialMesh()** is run. This directly involves the core of SU2 as I found out the error is given during the run of the function **CILUPreconditioner** (inside **matrix_structure.cpp**) which, as much I understood, builds the preconditioning matrix for the solution of the linear system at the base of the mesh deforming procedure. . SU2 uses by default **ILU** precoditioner whose relative function (see above) has remarkable differences from the Raven release (I didn't go too much into details). Same error I get if using **Jacobi** preconditioner. ; At contrary, everything seems fine if using **LU_SGS** preconditioner and the fsi_computation.py finally works. Maybe it's the case to point it out to the developers inveloved in this part of the code. About your last point, I'm developing at the moment some FSI features and I very much relied on fsi_computation.py in defining the interface with the SU2 core. I'm trying to keep it updated with the current version of SU2 for reliability reasons; I hope there won't be drastic changes in the python wrapping of the code! :). Thanks for the reply!. Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/531#issuecomment-388316476:184,wrap,wrapped,184,https://su2code.github.io,https://github.com/su2code/SU2/issues/531#issuecomment-388316476,3,"['interface', 'wrap']","['interface', 'wrapped', 'wrapping']"
Integrability,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I‚Äôm not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:86,message,message,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133,2,['message'],['message']
Integrability,"Hi Eduardo,. As I wrote #657 here my bits (thanks @economon to notify me about this issue):; The top wall, which is the symmetry wall in your case, is not a straight line (i.e. line in 2D or plane in 3D) but has a bump in it. Therefore I would say the symmetry BC is inappropriate for that geometry/mesh. ; Implementation-wise the BC_sym routine in develop assumes (but not checks) a constant unit normal over all boundary elements in a symmetry marker and I would say that this a necessary condition for a symmetry-marker. . To cite a comment from @economon from that PR #657 . > As we should always have a plane for this BC type, is this [tangent vector computation to the unit normal, Editors note] something you can check outside the loop, or complete as a preprocessing and store? Looks a little expensive to perform at every vertex during runtime. Because of that preprocessed computation/storage of the unit normal (and a tangent to this normal) the current implementation of BC_Sym cannot be ""exploited"" to serve as an ""inviscid (slip) wall"" for non-straight markers. Using `MARKER_EULER= ( sym )` is not correct either as the gradients of the velocity components (used in the viscous stress tensor of the momentum equations) are not computed correctly for the reflected state. Although using MARKER_EULER in the current develop will give you the same results as the master (or older develop before #657 ) with MARKER_SYM (... as it uses the same implementation). If you pull the ""Preprocessing"" part from the develop Sym_BC into the loop over all vertices of the boundary marker, the unit normal (and tangential) gets recomputed for each vertex. That gives you results which should be a lot closer to what happens in the master. Plus handling the velocity gradient correctly. From my point of view this would be the correct way.; Apply this patch in the root of the latest develop code using `patch -p1 < SymAsInviscidSlipWall.diff` to get the code I mean. [SymAsInviscidSlipWall.diff.txt](ht",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513801538:338,rout,routine,338,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513801538,1,['rout'],['routine']
Integrability,"Hi Eduardo,. both, 'symmetry plane' and 'symmetry as the slip wall' should work in the code (upon fixing this) and it should be made clear (e.g. in the config_template.cfg) what the BC is suitable for, independent of how it is named in the end. ; The simplest solution is probably the patch I provided together with a short note in the config_template (maybe even a reference to this issue), as both 'options' will work as expected (using the very same code). It will basically 'restore' the behaviour of MARKER_SYM of before the fix in #657. The downside is some more computational cost (in case of a plane) which has to be done for each vertex on the marker. I cant say to which extend this takes more time but I would guess it is not too costly. Depends on the case as well. I can do a little check with your case here. . That's it for the diplomatic part :) (Please take the following with a grain). For me a symmetry has to be a line or plane. To cite Jiri Blazek's book 'Computational Fluid Dynamics'(...) 3rd edition using a screenshot:. ![blazekbook](https://user-images.githubusercontent.com/31306376/61662377-9ab05a80-acce-11e9-85bf-5998db204d92.png). The chapter is called 'symmetry plane' which already is kinda biased. But there is no 'slip wall for viscous flow' mentioned to my knowledge. In another book (from Ferziger&Peric, which I only have in german) symmetry is only used in the context of symmetry planes as well. ; To me, symmetry BC's are also linked to visualization using mirroring. And mirroring (as the word is commonly meant) is only possible along planes and its little brother, the straight line. I can be wrong or it might be a question of research background. So how to proceed? Trial by combat might have some unpleasant aftermath for the winner so we might go the democratic way and do a poll :) . Cheers, ; Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513957018:749,Depend,Depends,749,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513957018,1,['Depend'],['Depends']
Integrability,"Hi Giulio,. thanks a lot for your contribution, it looks very nice. . I just saw your reply to my comment below, I really appreciate if you don't mind giving me a bit more time before merging in. I was working on different developments and have a couple of deadlines coming up so I am a bit behind myself in merging with develop. . I'll try to review this as soon as I can, though. A couple of comments after I skipped through quickly:; - I have seen that in some cases there are a lot of lines that are removed and added just because of changes in the indentation. See, e.g., CIsoparametric::Set_TransferCoeff(CConfig **config, in which I saw two large blocks that have not changes but the indentation goes from spaces to tabs. This has caused some issues in the past, would you mind to take a look at it?; - About the change of name from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE. Can we hold this discussion for the future so we can give it a second thought? I think it may be important to maintain the difference between interfaces with different physics and interfaces that connect the same physics.; - I had here written a question of to what extent is the change in the physical time step iteration affecting the driver and the iteration classes. I completely understand your logic for fluid-fluid problems of transferring information at pseudo-time steps, but as I said in FSI problems this would not be adequate. I also added steady-state FSI into a separate branch, so I will take a look at potential conflicts. Thanks again for this great contribution! I'll get into this and get back to you as soon as possible!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-256047684:1029,interface,interfaces,1029,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-256047684,2,['interface'],['interfaces']
Integrability,"Hi Giulio,; Great news, thanks!; After looking at CSysMatrix more, one possibility would be to move dense matrix routines to a class that would replace/augment this CSymmetricMatrix and then CSysMatrix could use it for operations on its blocks (which are dense). But since this involves refactoring a core class of SU2 I agree more people should be involved in the discussion.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-407023516:113,rout,routines,113,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-407023516,1,['rout'],['routines']
Integrability,"Hi Heather, do you have any idea about why that regtest is failing? On travis I have the same failure on a different branch and I see that more people (#743 from Edwin's branch) had that failure too, so it doesn't depend on your modifications.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/336#issuecomment-263535022:214,depend,depend,214,https://su2code.github.io,https://github.com/su2code/SU2/pull/336#issuecomment-263535022,1,['depend'],['depend']
Integrability,"Hi Jack,. when you take a look at these routines you can see that there is a loop over all markers. Only if a marker is actually of that specific kind, there is something done. These boundaries are special two-sided boundaries. They are different from the other boundaries in that for imposing the correct values they need information from both sides of the boundary. This is why they are not in the loop with the other markers (they only require specified boundary values and information from inside the domain). If this does not answer your questions, consider reopening this issue. I'll close it for now. Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/262#issuecomment-212880589:40,rout,routines,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/262#issuecomment-212880589,1,['rout'],['routines']
Integrability,"Hi Jayant,; Your figures for MG 0 are inline with what Tim reports in his 2015 paper (10-12 times increase).; As for improving it, the computation of the various residual contributions already uses pre-accumulation, so the only way I see to make that even more effective is to pre-accumulate the sum of all residuals for each edge (that would probably make the direct solver a bit faster too).; In looking at the code I noticed that some areas of the pre-processing like setting sensors, eigenvalues, etc. do not use pre-accumulation, maybe someone already tried and saw it did not make a difference? Same goes for the MG prolongation, restriction, smoothing routines.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/594#issuecomment-427559374:659,rout,routines,659,https://su2code.github.io,https://github.com/su2code/SU2/issues/594#issuecomment-427559374,1,['rout'],['routines']
Integrability,"Hi Jayant; Thanks for being so prompt and fast in handling this very important issue.; I‚Äôm currently in vacation at Scotland so I‚Äôll be brief and just add few; comments:; a. As you wrote, validation is very different from test cases. Mesh,; configuration and solutions should be optimized for accuracy, experiment; reproduction and performance.; b. I think it is important to start the validation project, create a link; from the main SU2 web page to it, and than let it grow with the existing; mechanism of community contributions with approvals. Your list is very fine; for beginning. However I think we should strive to enrich it with 3D and; time dependent cases. I hope to be able to be in the loop and contribute to this important venue; Best; Eran; On Wed, Sep 19, 2018 at 8:26 PM Jayant Mukhopadhaya <; notifications@github.com> wrote:. > Hey everyone,; >; > Following the discussions at the SU2 Developers meeting this week, I; > wanted to start a conversation about compiling a comprehensive set of V&V; > cases for SU2 that can showcase it's performance in comparison to other; > solvers.; >; > I think the the NASA TMR website; > <https://turbmodels.larc.nasa.gov/index.html> is a good model to base it; > on. The idea would be to present the V&V case, provide working; > configuration and mesh files, and provide results comparing performance to; > other solvers and to higher fidelity data (when available). This allows; > people to see the performance of SU2 and replicate it, if need be.; >; > The first step would be compiling a list of cases that should be covered.; > The SU2 2014 SciTech paper; > <https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf> would be a; > good starting point as it already had a couple of validation cases. This; > list can be bolstered with some of the NASA TMR cases, and with grid; > convergence studies. I would like to propose an initial list that the; > community can talk through and make changes as we see fit. I am mostly only; > familia",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423070900:651,depend,dependent,651,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423070900,1,['depend'],['dependent']
Integrability,"Hi Josef: glad to see you getting involved!. I am very interested in this. We have seen differing behavior sometimes between the two compiler sets, in particular when high levels of optimization are being used. In fact, you might check if the same issues appear without compiler optimization. Often, it is an initialization problem or some optimization that affects correctness. If you have the time to explore different settings and perhaps dig into the code a bit, I would very much like to isolate and remove these compiler-dependent problems with your help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-268111434:527,depend,dependent,527,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-268111434,1,['depend'],['dependent']
Integrability,"Hi Ole, the first paper is actually closer to what I am aiming for with this implementation.; Mostly I am looking for an alternative to multigrid to get good convergence of the fluid side, that remains effective when many MPI ranks are used.; To apply something like this to multiphysics would require implementing it at the driver level, to include the transfer routines. However, I think for FSI this would not be competitive due to elasticity-based mesh deformation being so expensive compared to one fluid iteration. Martins et. al. use an explicit deformation method that I presume to be very quick as it operates on block structured grids.; The ""coupled"" part in this title refers to flow, turbulence, and other scalars, and even that I am not sure if it is a good idea :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183#issuecomment-773408362:363,rout,routines,363,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-773408362,1,['rout'],['routines']
Integrability,"Hi Ole,; I see that the heat dependencies are currently being set in the adjoint fluid iteration and on the new adjoint heat iteration. Would it make sense to define them at the heat solver level to centralize things a bit? If not please add a comment to those areas of the code (a similar issue made me chase my tail sometime ago).; Otherwise all looks nice and clean! And I look forward to see the generic adjoint driver!; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/619#issuecomment-442863838:29,depend,dependencies,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/619#issuecomment-442863838,1,['depend'],['dependencies']
Integrability,"Hi Pedro, seems like nice stuff is coming into being here.. :+1:. just had a look at both papers, especially the second. From reading through the new integration class (and assuming you are working towards Newton-like iterations for FSI), could you point me to the coupled part? I'm expecting one has to assemble a ""bigger"" residual across the disciplines (or a routine that has the same functionality as a multiplication with it, like Algorithm 4 on page 943 in the paper from Kenway, Kennedy and Martins or what you are doing in `CNewtonIntegration::MatrixFreeProduct`, I guess) :-)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183#issuecomment-773349903:150,integrat,integration,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-773349903,2,"['integrat', 'rout']","['integration', 'routine']"
Integrability,"Hi Pedro, sorry I'd forgotten to get to that one. I've just had a look through the logic again. Inside SetAiken_Relaxation, the predicted velocity is set which I think should keep the velocity update to be within the same time iteration, but if you think this still isn't actually the case let me know. Also, I've just spotted that inside Update in CFEAIteration, the logic for dynamic and/or fsi isn't complementary, so the separate ""else if"" handling for ImplicitNewmark_Relaxation isn't actually called at all. The SetDualTime_Solver which is called earlier in the same function in turn calls ImplicitNewmark_Relaxation so this hadn't been spotted earlier. I've removed the redundant else if statement... I've had to reintroduce this back since the regression tests for discadj_fsi and discadj_fsi_airfoil failed, which was a bit surprising since they are static fsi problems and the statements removed only considered problems with Newmark time integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705:949,integrat,integration,949,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705,1,['integrat'],['integration']
Integrability,"Hi Pedro, thanks for looking into this more. I had run into inconsistencies for FSI problems with relaxation which was the reason for the domain specific calls coming into the multizone driver Update function. With the changes I introduced, the velocity at the interface was being transferred correctly with and without relaxation, so I left it there but it is a bit messy. I'll test with the modified calls for the Relaxation as you suggest. I completely agree that if we can simplify the velocity transfer by just using the velocity directly, then we should. Especially since the predicted velocity is only zero order anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325:261,interface,interface,261,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325,2,['interface'],['interface']
Integrability,"Hi Pedro,. I tried the other solution you suggested. I declared a new private variable inside the solver class, which I assigned as config->cb1_usrdef. I registered this as the AD input. I then set a method inside the solver class which returns this value when called.; In the Numerics class, instead of reading cb1 from Config as I used to, I read it from the Solver class, using the method mentioned above.; Now I couldn't create a Solver object inside numerics_structure.inl, since according to the compilation order the solver class is dependant on the numerics class (Solver_structure.hpp includes numerics_structure.hpp). So the compiler doesn't know about the solver class while inside the numerics.; To work around the compiler error, instead I included the solver header file inside the numerics src files (cpp). I then created the solver objects in the relevant numerics functions and called the method which returns the AD-registered cb1 variable.; This all compiles now, but the AD gradient is still returned as 0. Adding print statements to the functions inside the numerics src files revealed that they are getting a cb1 value of 0, which I assume it's because solver_adjoint_discrete.cpp is called after the numerics src files have read the value of cb1, which at that point would be 0.; Would you agree that it's probably best to update the numerics classes inside the adjoint iteration class for CDiscAdjSolver, similar to what's done inside CDiscAdjFEAIteration? Is this what you meant when you referred to the elasticity solver?. Thanks for your help,; Amir",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-494063905:540,depend,dependant,540,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-494063905,1,['depend'],['dependant']
Integrability,"Hi Pedro,; Thanks. I already have done that, it's already declared as virtual inside the CSolver class.; The message does get printed. What's strange is that it prints cb1_adj=0., even though inside solver_adjoint_discrete.cpp, cb1_adj is assigned as cb1_adj = config->GetSA_cb1(); before being registered as an AD variable, and therefore is not 0.; Thanks; Amir",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-498383515:109,message,message,109,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-498383515,1,['message'],['message']
Integrability,"Hi Pete,. we appreciate your help on that. I just updated the branch [feature_Wall_Functions](https://github.com/su2code/SU2/tree/feature_Wall_Functions) to be up-to-date with develop. The main routines dealing with the wall functions are in [solver_direct_mean.cpp](https://github.com/su2code/SU2/blob/feature_Wall_Functions/SU2_CFD/src/solver_direct_mean.cpp#L16612) and [solver_direct_turbulent.cpp](https://github.com/su2code/SU2/blob/feature_Wall_Functions/SU2_CFD/src/solver_direct_turbulent.cpp#L2569). Maybe @economon can tell you what exactly is missing there. Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-306912607:194,rout,routines,194,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-306912607,1,['rout'],['routines']
Integrability,"Hi Ruben, no worries. Integrating on the fluid side is what makes sense for matching meshes, less hassle given the availability of dual grid information, no need for MPI boiler plate, etc. The adjoint implications are being accounted for, this integration step is being recorded and overall the dependencies have not changed, the fluid nodes are still the ones defining the direction of the stress.; As you can see from the files I attached, the sensitivities are very similar for conservative/consistent interpolation cases. . It is not possible to generalise this for conservative interpolation (i.e. using the transpose of the displacement interpolation matrix to interpolate tractions) because that approach implicitly takes care of the (possible) different areas associated with fluid and solid nodes. If you transfer stresses with conservative interpolation and then integrate you get the wrong force. The conservative approach requires forces to be transferred, otherwise we start taking liberties with the meaning of the word :). Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597#issuecomment-434317633:22,Integrat,Integrating,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/597#issuecomment-434317633,4,"['Integrat', 'depend', 'integrat']","['Integrating', 'dependencies', 'integrate', 'integration']"
Integrability,"Hi Salvo,. Sorry for the delay on this one, but we wanted to get the major changes to the multi-zone framework integrated first (CDriver and CIteration). When you have a minute, can you please check that these commits are still valid with the latest develop branch?. Thanks!; Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/194#issuecomment-149771915:111,integrat,integrated,111,https://su2code.github.io,https://github.com/su2code/SU2/pull/194#issuecomment-149771915,1,['integrat'],['integrated']
Integrability,"Hi Soumen,. As Tom said, the routines are all in place and I have been putting them; together for solution interpolation from one mesh to another for unsteady; simulation as post-processing step. So probing at a particular location for; unsteady solution can be also done with this framework. The probe search; implementation is in place for 2D configuration currently. It will be; extended to 3D and probably available in the main branch in the next 2; months.; The implementation so far is in feature_MeshInterpolation branch if you; want to take a look. Sravya. On Thu, Nov 2, 2017 at 10:09 PM, Thomas D. Economon <; notifications@github.com> wrote:. > Hi Soumen: yes, this is something that the developers are actively working; > on at the moment (in particular, @sravya91 <https://github.com/sravya91>; > has been taking the lead on this). It is true that most of the ingredients; > are already available in SU2 (fast searches, interpolation routines, etc.),; > but the trick is combining them all and making it general.; >; > Do you have any other requirements beyond simple probes? I am guessing we; > should have something available in the next few months, but it's not set; > yet.; >; > ‚Äî; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/466#issuecomment-341623660>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AHenII5B0Xtb2U_hj2vbBesf5Oc51uvzks5syqAEgaJpZM4QPYh8>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466#issuecomment-342266341:29,rout,routines,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/466#issuecomment-342266341,4,['rout'],['routines']
Integrability,"Hi Soumen: yes, this is something that the developers are actively working on at the moment (in particular, @sravya91 has been taking the lead on this). It is true that most of the ingredients are already available in SU2 (fast searches, interpolation routines, etc.), but the trick is combining them all and making it general. Do you have any other requirements beyond simple probes? I am guessing we should have something available in the next few months, but it's not set yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466#issuecomment-341623660:252,rout,routines,252,https://su2code.github.io,https://github.com/su2code/SU2/issues/466#issuecomment-341623660,2,['rout'],['routines']
Integrability,"Hi Sun5k,; Thanks for tackling the Transition models. As far as I see, you are adopting the CScalarSolver-Base style just as is done for the Turbulence or SpeciesTransport solver (cf #1330 #1388 ) :+1: I think you can stay close to how things are handled in these solvers. The Turbulence solver has another class in the middle though: `CScalarSolver -> CTurbSolver -> CTurbSST/SASolver` I am not sure whether sth like this makes sense for transition models? (because I have no clue of Transition models). Otherwise the CSpeciesSolver is directly based on the CScalarSolver. Please limit this PR to 1 model only! So in this case just the LM model maybe. It is much easier for you to wrap this PR up with a limited scope instead of trying to do everything at once :) (and it is easier to review for everyone else) In case you then still want to tackle another one once LM is done :D then just open another PR :+1:; ; As unfinished Transition models (or models with a questionable state) are a bit of a companion of SU2 I would also ask you to provide a meaningful testcase with this PR that proves the usability of this feature. I personally like to think of a suitable case at the beginning of development, to adopt a bit a Test-Driven-Development approach but that is of course fully up to you. In case you did not know about the Developers meeting each Wednesday 4pm Berlin time, now you do. You are kindly invited to ask any questions, just show-and-tell to get some feedback etc. it is a very open round :). Happy coding, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577:682,wrap,wrap,682,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577,2,['wrap'],['wrap']
Integrability,"Hi Tim,. Thanks!. I totally agree on the fact that Python-related functionalities could be in a separate file for code clarity. Anyway, considering only the C++ structure, those functionalities are still members of the CDriver (and all child classes). So if you are OK with the fact that having members of the same C++ class in different cpp files, I am OK too. . However, if you mean creating a new class for the Python wrapper (like CPyWrapper or whatever), and leave the CDriver ""clean"", this might be more tricky. Indeed, since the wrapper has to be a top-level class, it is better to have access to all the other main classes (config, geometry, solver, ...) and the CDriver was the perfect candidate (it instanciates all of them). So now if we create a new top-level class next to the CDriver, the direct link with all those classes is lost. Basically we will have to create accessors like CDriver::GetConfig(), CDriver::GetGeometry(), ... that will return the different containers to be used by the wrapper. Obviously this is possible but not in a short time, besides this might be a significant change in the top-level code structure. We could also think about exposing thoses CConfig, CGeometry, ... classes to Python in addition to just the driver, I already made some local tests and it worked great but this approach is less user-friendly. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-352045091:421,wrap,wrapper,421,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-352045091,6,['wrap'],['wrapper']
Integrability,"Hi Tom,. Sounds like a plan then to have a look at CIntegration to see what we can do to generalize the time integration. I definitely want to help with this, but I don't think I am the appropriate person to take the lead, because I simply don't have a good overview of all the multi-physics options. Tom, are you willing to take the lead for this?. Furthermore, it is good to have other people involved as well, preferably with detailed knowledge of the different disciplines. Any volunteers?. Thanks,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329096830:109,integrat,integration,109,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329096830,2,['integrat'],['integration']
Integrability,"Hi Wally,; I think that would depend, if the new scheme is part of a family that already exists it should be easier to implement, if not you do it from scratch... There is also the possibility of making life hard by trying to find common ground where there is none, e.g. the way CUSP is implemented in SU2 has something in common with the central schemes, but it did not feel right to attach an upwind scheme to the central family.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-497786734:30,depend,depend,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-497786734,1,['depend'],['depend']
Integrability,"Hi all,. I guess the difficulty is about calling Config->GetGamma() function in everywhere in code (solver, numerics etc.). I have to change Gamma according to temperature in every routine and be sure ideal gas equation is consistent between Temperature and Pressure. I get stuck in this point. I am open to any help. Thanks in advance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/731#issuecomment-525189226:181,rout,routine,181,https://su2code.github.io,https://github.com/su2code/SU2/issues/731#issuecomment-525189226,1,['rout'],['routine']
Integrability,"Hi all,. This is definitely good discussion... everything goes toward multi-physics nowadays, so we should always be improving the class design accordingly. I suppose this will just get more important with adding more physics, zones, and more complex time integration schemes. I would like to highlight that when the code was first released, we did not have ""zones"" at all (not until some early sliding mesh work after a couple of versions), and the CDriver and CIteration classes didn't even exist until we dreamed them up a couple of years ago. My point is that, with some proper planning, we have the creativity and the right team to develop the solution we need, and we shouldn't be afraid to make big changes when necessary. Moving quickly while leveraging the team's broad skillset is one of our biggest advantages in this project. As you all know, over the years, we continue to move toward a *_structure.cpp and *_physics.cpp mindset for how we do our abstractions/data encapsulations, with ""structure"" components reused and ""physics"" components being specialized to a certain set of governing equations. This has happened in many places, including recently with the CTransfer class, for instance, and it is likely to happen with the COutput class(es) before long. However, one area where there hasn't been much evolution is within the CIntegration classes. Apart from a couple of additions for structural problems and now the DG integration, it is largely the same as it was in the first release. Perhaps this is our opportunity to rethink and update these classes for future expansion, just as we've done for others over the years. We could rework them, move them up or down in the hierarchy, change where they're instantiated, change the inheritance, and so on. Even if they get a little more complicated (like usual), as long as they're properly abstracted, it isn't likely to bother the developers working in other areas of the code too much. In short, I think some effort spent on the CI",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329078585:256,integrat,integration,256,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329078585,1,['integrat'],['integration']
Integrability,"Hi all,. Yes, it would be wonderful to get this feature completed. I had started this a couple of years ago, but never quite got around to finishing (too many fun things to work on!). I was following this paper, which should be a straightforward implementation for us, as FUN3D has a very similar structure:. Jan-Renee Carlson, Veer Vatsa, and Jeffery A. White. ""Node-Centered Wall Function Models for the Unstructured FLow Code Fun3D"", 22nd AIAA Computational Fluid Dynamics Conference, AIAA AVIATION Forum, AIAA 2015-2758, https://doi.org/10.2514/6.2015-2758 . The key changes can be found in the following locations:; ; - CNSSolver::Compute_Wall_Functions_Mean() routine in solver_direct_mean.cpp - computes and stores an updated wall shear stress based on the chosen wall model; - CTurbSASolver::Compute_Wall_Functions() routine in solver_direct_turbulent.cpp - computes the eddy visc/nu tilde needed near the wall based on the model; - CNumerics::GetViscousProjFlux() in numerics_structure.cpp - computes the viscous flux between two nodes and will make an adjustment near the wall when the model is active; - CNumerics::GetViscousProjJacs() in numerics_structure.cpp - this part isn‚Äôt quite finished yet (something similar to the previous bullet). Let's keep the discussion going,; Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-307260814:666,rout,routine,666,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-307260814,2,['rout'],['routine']
Integrability,"Hi all,; I am facing the same issue as @jf-thomas with SU2 v7.5. The only persistent problem is that updating CGNS mesh version from 3.2 to 4.3 now raises a conflict with the CGNS library version and the run fails. I acknowledge the warning message following this thread when using old CGNS versions:; ```c++; WARNING: The CGNS file version (3.21) is old and may cause high memory usage issues, consider updating the file with the cgnsupdate tool.; ``` ; However, with the updated CGNS mesh 4.3:; ```c++; *** Warning:The file being read is more recent that the CGNS library used ***; ``` ; Checking in SU2/externals/cgns/cgnslib.c where the above message is encoded, there is a comment stating that:; ```c++; /* This code allows reading version newer than the lib, as long as the 1st digit of the versions are equal */; ``` ; The same issue is manifest with SU2 v8. ; Should one only use the exact CGNS 4.0? I wonder if @jf-thomas faced this issue with v4.2 before doing the trick with hdf5?; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1378#issuecomment-1816802569:241,message,message,241,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378#issuecomment-1816802569,2,['message'],['message']
Integrability,"Hi all,; really interesting topic going on here. As @pcarruscag just very well explained, and after quite some time working on the code, I can totally see the need for dense algebra. . I agree with @juanjosealonso and @erangit that maintaining the code portable and very easy to install should be a must. It has been a signature of SU2 since the beginning and we should continue on that line. I've had some problems before with codes that rely heavily on PETSc, so I wouldn't particularly be keen to go down that road. . **Eigen** would be really easy to integrate in SU2: they have a mirror on GitHub here: [Eigen Github repo](https://github.com/eigenteam/eigen-git-mirror) which could be easily added as a submodule in the same way as CoDiPack or MeDiPack. Given that they are only header files, there would be no need to compile any external library. And there is another very important point made by @vdweide and @pcarruscag: we need to ensure compatibility with the discrete adjoint functionality. One huge advantage of Eigen is that is fully templated: we recently differentiated a code that was heavy reliant on Eigen in an afternoon, and it worked great. While LAPACK is indeed a very mature library, I believe that it would require using external functions for every functionality, which would be a really big burden. @talbring @MaxSagebaum could add some more hints in this discussion. As an additional note, I would make sure that we keep everything open source.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459656519:555,integrat,integrate,555,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459656519,1,['integrat'],['integrate']
Integrability,"Hi and thank you for this PR, I think it will be really useful.; I noticed that you removed several functions in the python wrapper, and also renamed others. This will break the compatibility with the fsi module. May I ask you why you had to remove it? We can maybe find a solution that keeps the possibility to use the fsi module as well",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1350568387:124,wrap,wrapper,124,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1350568387,1,['wrap'],['wrapper']
Integrability,"Hi everyone, . I'm facing the same problem too. I'm using the latest master version built with the python wrapper. . Seems like allMarkersID is a tuple and not a dictionary. . Thank you, ; Alice",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2129#issuecomment-1983315739:106,wrap,wrapper,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/2129#issuecomment-1983315739,1,['wrap'],['wrapper']
Integrability,"Hi hoop247,. the problem here is that the incompressible formulation used in SU2 is only valid for steady problems and thus cannot be used for this kind of application. However, you could try to use the compressible formulation in combination with the low-mach number preconditioner. I agree that there should be a more precise error message when trying to run unsteady+incompressible...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/193#issuecomment-140047906:334,message,message,334,https://su2code.github.io,https://github.com/su2code/SU2/issues/193#issuecomment-140047906,1,['message'],['message']
Integrability,"Hi there,. maybe I should mention that as a part of my commits to integrate a CHT functionality to SU2 (see the pull request I opened up a month ago, if you like), I also had to implement a heat solver that can be coupled to a flow equation system. We even chose similar namings (mine is called CHeatSolverFVM). It might be interesting for you that it also can be run ""stand-alone"" for pure heat conduction problems (for solids..) in which case it is nothing else but a Poisson solver.; It's just that my naming is unnecessarily specific, I should rather rename the CHeatSolverFVM to CAdvectionDiffusionSolver and generalize the coefficients (""diffusivity"" instead of ""thermal_difffusivity"", for example). Sounds to be a good idea... :D. Anyway, feel informed :-). Ole",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/429#issuecomment-371167335:66,integrat,integrate,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/429#issuecomment-371167335,1,['integrat'],['integrate']
Integrability,"Hi, . To begin with, thank you very much for your efforts and the tremendous work you put into improving the SST model!. It is very difficult for me to judge because I'm using a different time integration than the SU2, which may be critical in this regard. Moreover, my code is non-dimensional, so estimating the influence of the ""newBC"" and the ""lower limits"" is difficult for me. Can you tell the values of the ""lower limits"" relative to the freestream values? Please provide many details about the inputs in your config file (Linear solver, linear solver convergence, CFL, inviscid flux, etc')",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2334156700:193,integrat,integration,193,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2334156700,1,['integrat'],['integration']
Integrability,"Hi, ; So I am assuming you are not so familiar with using git, so here is what you need to do.; If you follow the link [#2296](https://github.com/su2code/SU2/pull/2296/files) and go to the section 'files changed' you can see that it's quite a lot of changes. The changes are currently added (merged) to the 'develop' branch (when you follow the link you can see this message). So what you need to do is update your github repository. ; I assume that you already have a local copy of SU2 and that you obtained this from github using ; `git clone https://github.com/su2code/SU2.git`; You switch to the develop branch:; `git checkout develop`; you update your develop branch:; `git pull`; now you have all changes, and you need to recompile.; There is an example in TestCases/py_wrapper/custom_inlet that you could use.; For completeness, here is a link to the docs: https://su2code.github.io/docs_v7/home/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1079#issuecomment-2179501396:367,message,message,367,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2179501396,1,['message'],['message']
Integrability,"Hi, ; thanks for this contribution, I will get a more detailed feedback soon. A first comment about the CSymmetricMatrix class came up to my mind, from a first brief review.; There is already a CSysMatrix class and a few routines added in this pull request look redundant (matvect product for instance).; On the other hand, many of those routines (cholesky decomposition and so on) could turn out to be very useful also for other future code developments.; That said, perhaps it would be nice to collect all the matrix-related routines into the CSymmetricMatrix class (removing redundancies) to make them available at an higher level. Cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-406370798:221,rout,routines,221,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-406370798,6,['rout'],['routines']
Integrability,"Hi, I think it is because our vectorization wrapper does not support ARM yet.; This makes the default SIMD array type have only 1 element, so t[1] in that unit test does not exist basically, using t[0] should pass the test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1609#issuecomment-1103591559:44,wrap,wrapper,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/1609#issuecomment-1103591559,1,['wrap'],['wrapper']
Integrability,"Hi, I was having a few issues installing the Python wrapper (which strangely happened to work for some of my systems) and I followed the error back to SU2_PY/pySU2/Makefile.am, where a Python 2.7 path is still hardcoded. Is this an intentional remainder?. I tried to use the [fix documented back in V5](https://github.com/su2code/SU2/issues/447) but I've not had any success yet. I'm still troubleshooting (and may have a few incorrect paths still) but just to hear the official word here before I have another go. Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-476708929:52,wrap,wrapper,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-476708929,1,['wrap'],['wrapper']
Integrability,"Hi, I was trying to update the residuals of the tutorial switching to master in the regression.yml doing this:; ![image](https://user-images.githubusercontent.com/98025159/212277029-f131d8f7-0e69-451b-a5ea-640ddde04d68.png); but for some reason I am not allowed to do it. I got this message in my local machine. ![image](https://user-images.githubusercontent.com/98025159/212276655-717430dd-23d5-4f4a-b16f-631f5e95b2aa.png). Do you know how this can be fixed? @pcarruscag @bigfooted . Thanks you so much in advance !!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1886#issuecomment-1381491020:283,message,message,283,https://su2code.github.io,https://github.com/su2code/SU2/pull/1886#issuecomment-1381491020,1,['message'],['message']
Integrability,"Hi, Komahan, ; I also noticed this error in fsi_computation.py. And this error was fixed by adding a periodic boundary condition. For example: ; Adding one line in parser part:; `parser.add_option(""--periodic"", dest=""periodic"", default=""False"", help=""Define whether the problem has periodic boundary conditions"", metavar=""PERIODIC""); `; And the Line 109 changes to; ` FluidSolver = pysu2.CFluidDriver(CFD_ConFile, 1, FSI_config['NDIM'], options.periodic, comm)`. However, when I want to run the basic fsi coupling of two-dimensional pitching-plunging NACA 0012 airfoil by using the 'TESTER' CSD Solver 'PitchPlungeAirfoilStructuralTester', another error occurs. If I run by typing:; `fsi_computation.py -f FSICoupler_config.cfg`; This gives the following error:; `***************************** Initializing fluid solver *****************************; ('A TypeError occured in pysu2.CSingleZoneDriver : ', TypeError(""in method 'new_CFluidDriver', argument 5 of type 'SU2_Comm'"",)); ERROR : You are trying to launch a computation without initializing MPI but the wrapper has been built in parallel. Please add the --parallel option in order to initialize MPI for the wrapper.; `. If I run in parallel by typing:; 'fsi_computation.py -f FSICoupler_config.cfg --parallel'; This works without error but the program stops at Mapping fluid-solid interfaces; `***************************** Mapping fluid-solid interfaces *****************************; Building interpolation matrices...; `. Here I upload the config files and the mesh, hope someone can notice those bugs and help to solve. Best!. [2d_coupled_fsi.zip](https://github.com/su2code/SU2/files/3790605/2d_coupled_fsi.zip); includes:; FSICoupler_config.cfg, NACA0012RANS_FullHexa.su2, StructuralTester_config.cfg, SU2_config.cfg",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/642#issuecomment-548054290:1061,wrap,wrapper,1061,https://su2code.github.io,https://github.com/su2code/SU2/issues/642#issuecomment-548054290,4,"['interface', 'wrap']","['interfaces', 'wrapper']"
Integrability,"Hi, please post the commands you are running followed by the output of meson, with all the iterations I don't understand what is going on. Meson does not care about the variables MPICC and MPICXX, it cares about CC and CXX.; It then gets the include directories and linker arguments from the pkgconfig file for MPI. If you want to bypass pkgconfig you set CC=some/path/mpicc and CXX=some/path/mpicxx, and use -Dcustom-mpi=true when calling meson.; Depending on how they are configured it may work or it may give you undefined references, in which case you can try LIBS=""-lmpi"" LDFLAGS=""-lmpi"" before running meson (or something like that, I don't know much about environment variables). If the wrappers don't find mpi.h I would ask the administrator for instructions, then after they say it is your fault and don't solve the problem (my experience with that kind of people anyway) you can try the INCLUDE or INCLUDES variable (not sure) or directly use CXXFLAGS=""-I\some\path\mpi\include"". I've used 3 hpc systems and the recipe was never the same so... see if there is system-specific advice.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744658431:448,Depend,Depending,448,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744658431,2,"['Depend', 'wrap']","['Depending', 'wrappers']"
Integrability,"Hi, thank you for your help. Could you please give more details about unnecessary files?. If you mean files related to cmake, I think they are generated automatically when CoolProp is compiled by cmake submodule in meson. I will try to compile without these files. If I succeed, I will remove them. PENG YAN, PhD student. Department of Aerospace Science & Technology. Politecnico di Milano; ________________________________; From: Nijso ***@***.***>; Sent: Wednesday, October 5, 2022 21:31; To: su2code/SU2 ***@***.***>; Cc: Peng Yan ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] [WIP]Coupling of SU2 and CoolProp (PR #1782). could you clean up unnecessary files first, please?. ‚Äî; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/1782#issuecomment-1268867160>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ATJ4GKEET6UOH5CLSYXW5RLWBXJPVANCNFSM6AAAAAAQ53HAJY>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1268875761:987,Message,Message,987,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1268875761,1,['Message'],['Message']
Integrability,"Hi, we don't have an option to ""keep all files"", the intended behaviour in steady state is to have only the last solution.; You could emulate what you want via the python wrapper by running some steps and them saving the files manually.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1463#issuecomment-986002446:171,wrap,wrapper,171,https://su2code.github.io,https://github.com/su2code/SU2/issues/1463#issuecomment-986002446,1,['wrap'],['wrapper']
Integrability,"Hi,. OK, there were actually 2 problems here. One is that the species mass fractions were not transported across the zone interface. The other is that for MARKER_ANALYZE, we did not add species information, but later in the code we assumed that it was present. Both are now fixed in the feature branch, but it will be a while before it ends up in the master version. In the mean time, you could clone the SU2 git repository and then do a git checkout feature_species_multizone and compile the fixed branch yourself.; Thanks for spotting the problem!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1818#issuecomment-1317030646:122,interface,interface,122,https://su2code.github.io,https://github.com/su2code/SU2/issues/1818#issuecomment-1317030646,1,['interface'],['interface']
Integrability,"Hi,. here is the contents of config.log:. ```; This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by SU2 configure 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ ./configure --prefix=/gshare/work/hpascalj/CodeSU2-master --with-CGNS-lib=/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib --with-CGNS-include=/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = master; uname -m = x86_64; uname -r = 2.6.32-279.el6.x86_64; uname -s = Linux; uname -v = #1 SMP Wed Jun 13 18:24:36 EDT 2012. /usr/bin/uname -p = unknown; /bin/uname -X = unknown. /bin/arch = x86_64; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = unknown; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /opt/xcat/bin; PATH: /opt/xcat/sbin; PATH: /opt/pbs/default/bin; PATH: /opt/pbs/tools/bin; PATH: /usr/lpp/mmfs/bin/; PATH: /gshare/soft/star-ccm+/STAR-View+9.02.007; PATH: /gshare/soft/star-ccm+/STAR-CCM+9.02.007/star/bin; PATH: /opt/xcat/bin; PATH: /opt/xcat/sbin; PATH: /usr/lib64/qt-3.3/bin; PATH: /opt/pbs/default/bin; PATH: /opt/pbs/tools/bin; PATH: /usr/lpp/mmfs/bin/; PATH: /usr/local/bin; PATH: /bin; PATH: /usr/bin; PATH: /usr/local/sbin; PATH: /usr/sbin; PATH: /sbin; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: .; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: . ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2465: checking build system type; configure:2479: result: x86_64-unknown-linux-gnu; configure:2499: checking host system type; configure:2512: result: x86_64-unknown-linux-gnu; configure:2532: checking target system type; configure:2545: result: x86_64-unknown-linux-gnu; configure:2587: checking for a BSD-compatible install; configure:2655: result: /usr/bin/install -c; configure:2666: checking whe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:70,message,messages,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['message'],['messages']
Integrability,"Hi,. thanks for bringing it up here. It seems to be some top-level (merge?) error that occured when putting together v7. ; The interface data exchange apparently is just not called. I'll push a fix for this, open up a draft PR and then we can check if everything is alright again for compressible flows as well. Ole",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/838#issuecomment-564970570:127,interface,interface,127,https://su2code.github.io,https://github.com/su2code/SU2/issues/838#issuecomment-564970570,1,['interface'],['interface']
Integrability,"Hi,; I just had a few (very minor) comments.; Regarding the main contribution, everything makes sense to me and I didn't find any relevant issue.; This is a very nice contribution and the implementation is quite clear, we can go ahead and merge this in soon. Regarding the matrix stuff, perhaps we could start having a new, general, matrix class in Common and then extend it to parallel in future pushes.; It may not be ideal, but at least we'll get started.; I am just afraid that if we leave those potentially useful routines there, in the interpolator, we will soon forget about them (of course it doesn't have to be addressed in this PR but we should really discuss about this). ciao,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-407014370:519,rout,routines,519,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-407014370,2,['rout'],['routines']
Integrability,"Hi.; So I have lots of good news. I was able to build SU2 with the recommended changes in the meson.build file, (thank you, @pcarruscag!):; > ```; > su2_deps += blas_dep; > su2_deps += dependency('lapack'); > ```; using both, blas and openblas. For blas I used `-Dblas-name=blas` as an extra argument passed to meson. Mind you, I didn't use the `meson.py` script or `./ninja` but instead used the preinstalled versions on my system. I had also cloned the `fix_python_3.8` branch instead of master so there are quite some changes I had to do to successfully build it. I also noticed that openblas uses ~17 MBs extra install space, which I think is because of additional optimizations over the standard preinstalled blas package (just a speculation). So I think I will be using openblas for now instead of blas. But blas works, just in case someone might be wondering. Thank you all for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632352572:185,depend,dependency,185,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632352572,1,['depend'],['dependency']
Integrability,Hi; I have noticed that the distance function in SU2-6 is based on the distance to the vertices on solid wall which is not accurate for the anisotropic meshes produced by PYAMG for RANS simulations. This seems to be corrected in version SU2-7 but PYAMG currently has interface for only SU2-6 version. Is there gone be any update on the PYAMG side to use version SU2-7?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-578501709:267,interface,interface,267,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-578501709,1,['interface'],['interface']
Integrability,"Hm, good question why the builds are not running. It should not depend on the LGTM things or CodeFactor at all, they are independent.; My suggestion would be to quickly resolve the conflicts with origin/develop and push again. I could imagine that this hinders the regression tests to run. I briefly went over the conflicts and they seemed to easy to fix (on the first glance). You also have a merge request into develop and didn't touch the regression.yml so I see no problems on that side. The Regression tests also worked in the past so lets hope the merge origin/develop helps üëç",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223#issuecomment-889854856:64,depend,depend,64,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-889854856,1,['depend'],['depend']
Integrability,How do you think about to search for questionable null pointer checks a bit more also by the GitHub interface?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/26#issuecomment-307590133:100,interface,interface,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/26#issuecomment-307590133,1,['interface'],['interface']
Integrability,"How was this mesh made? If I remove the internal interfaces from the mesh, the simulation still crashes. So the mesh that contains the interfaces is not created in a correct way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2336#issuecomment-2393012696:49,interface,interfaces,49,https://su2code.github.io,https://github.com/su2code/SU2/issues/2336#issuecomment-2393012696,2,['interface'],['interfaces']
Integrability,"How well does a restart work in general for multizone? I restart from a converged solution and the result at the zone interface shows high residuals, and I do not recover the exact residual values. The solution looks fine everywhere except at the zone interface. This image below shows the residuals for velocity.; [EDIT: high residuals is relative, it is still 1e-12, but it is higher than what it should be]; ![screenshot](https://user-images.githubusercontent.com/7050568/202928587-22acde97-ecc9-4e3b-9377-1ea95a98a129.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1821#issuecomment-1321255158:118,interface,interface,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/1821#issuecomment-1321255158,2,['interface'],['interface']
Integrability,"I agree with both of you, that OBJECTIVE_FUNCTION should be a bit more descriptive. ; Following the format of other adjoint options (CONV_NUM_METHOD_ADJFLOW, LIMIT_ADJFLOW), how about OBJFUNC_ADJFLOW or FUNCTIONAL_ADJFLOW? . Regarding the format of OPT_OBJECTIVE, what I have working in another branch (which I have been sitting on pending figuring out these types of issues and more testing) is a format like:; OPT_OBJECTIVE = DRAG*0.1; LIFT*2.0; COMBINE_OBJECTIVE = YES; Where the associated adjoint settings are:; OBJECTIVE_FUNCTION = DRAG, LIFT; OBJECTIVE_WEIGHT = 0.1, -2.0. The effect of COMBINE_OBJECTIVE is a flag to switch between treating the objectives separately (each objective and its gradient is evaluated separately and the python scripts loop sequentially over the objectives, or if this option is 'YES' then a 'COMBO' value is output to the history file and the gradient is computed all-at-once (I can explain that more offline if necessary)). At the moment this only works for linear combinations of existing objectives, so the sample objective Francisco listed would be beyond that. . What do you think of this as an option structure for minimizing 0.1*DRAG-2.0*LIFT:; OPT_OBJECTIVE = COMBINATION; ...; OBJFUNC_ADJFLOW = COMBINATION; ..; COMBO_OBJDEF = DRAG, LIFT; COMBO_OBJWEIGHT = 0.1, -2.0; Where this would still be compatible with looping over sequential objectives in the shape optimization (that is really just a fairly small update to the python, and has some benefits depending on how many constraints you have), and both the adjoint and optimization would refer to OBJDEF if 'COMBINATION' is set as the objective.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-187280368:1497,depend,depending,1497,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-187280368,1,['depend'],['depending']
Integrability,"I agree with the proposed changes, but I also think this could go farther. Some of the most common issues for users involve misuse of the *_ORDER options, dissipation coefficients, and limiters. Overall, it is still not very clear for a user how the centered schemes work. For instance, Lax is always first order and JST is always second order, but sometimes there are not error messages when trying to change the ""ORDER"" option when using these schemes. Also, if we rename the coefficients for JST as proposed, shouldn't we also separate the first coefficient that is only used for Lax? It would make treating the dissipation more clear.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/451#issuecomment-335205189:379,message,messages,379,https://su2code.github.io,https://github.com/su2code/SU2/pull/451#issuecomment-335205189,2,['message'],['messages']
Integrability,"I also found out the hard way that `TOTAL_HEATFLUX` was dimensional, but one additional thing to consider here is that if I call `CDriverBase::GetMarkerNormalHeatFlux` in a Python-wrapped code then I think this PR would cause the returned heat flux to be nondimensional, which can be a nuisance if using it for CHT while running in nondimensional mode. If for FSI, `CDriverBase::GetMarkerFlowLoad` is the dimensional flow load, then this PR would also be inconsistent with that; but if that function returns nondim. loads then this update makes much more sense (I am not sure if it's nondim or not).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1679732658:180,wrap,wrapped,180,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1679732658,1,['wrap'],['wrapped']
Integrability,I am fine with this request from a conceptual point of view. Once we complete the alignment with develop and the full integration with Mutation++ we might need to review the config structure according to the discussions we had sometime ago. I am attaching here a snapshot illustrating where we would like to head with it. We will need to review it especially considering the efficiency of the approach that uses Mutation++ but allow introducing a custom mechanism of reaction in CHEMKIN format.; ![config-01](https://user-images.githubusercontent.com/22177881/83354211-4561c280-a34f-11ea-9920-f6f066b72d14.png); ![config-02](https://user-images.githubusercontent.com/22177881/83354220-47c41c80-a34f-11ea-9022-b49f132abf88.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1010#issuecomment-636475242:118,integrat,integration,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-636475242,1,['integrat'],['integration']
Integrability,"I am getting the exact same error when I try to run it out of the box - even though if I add the restrictions I get a convergence.; I tried to run it multithreaded and got very different results and in some case crash with reboot.; Then I looked closer at the result - the result from quick start should look very similar to DSN_001, but it doesn't - could the problem be in the python wrapper since that is basically the only difference between DSN_001 and quick start?; ![dsn_001](https://user-images.githubusercontent.com/12813438/51088528-097d8b80-1761-11e9-8c3e-81acee6beb6a.jpg); The last design before crash:; ![dsn_006](https://user-images.githubusercontent.com/12813438/51088530-0c787c00-1761-11e9-9b19-3204005e897d.jpg)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559#issuecomment-453849671:386,wrap,wrapper,386,https://su2code.github.io,https://github.com/su2code/SU2/issues/559#issuecomment-453849671,1,['wrap'],['wrapper']
Integrability,I am merging this in now. Please have a look at the documentation https://su2code.github.io/docs/Build-SU2-From-Source. Let me know if you have any problems with adding new files and/or external dependencies.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-521112696:195,depend,dependencies,195,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-521112696,1,['depend'],['dependencies']
Integrability,"I am not entirely sure, but as far as I know SU2 has not been tested on cygwin. So if the setting of the SU2_RUN environment variable does not solve the problem, could you test it without python? You do this using the following command. mpirun -np <# of ranks> <path to SU2 bin directory>/SU2_CFD.exe inv_ONERAM6.cfg. It could be that instead of mpirun you must use mpiexec. That depends on your MPI implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/521#issuecomment-378164049:380,depend,depends,380,https://su2code.github.io,https://github.com/su2code/SU2/issues/521#issuecomment-378164049,1,['depend'],['depends']
Integrability,"I am not too familiar with that routine, but I do know that there are some checks related to periodic BCs inside. Are you using periodic BCs for your case? You might go through the routine to see that the counting of the spans is correct. Perhaps @salvovitale can comment if there's time. Also, can you verify that the test cases in SU2/TestCases/turbomachinery/ are working for you on your system? Might check for additional options that appear in those examples.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/990#issuecomment-630388452:32,rout,routine,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630388452,2,['rout'],['routine']
Integrability,I am trying to do the same thing for a loosely coupled cht problem. I have the wall temperature data but cannot implement it to SU2. I have checked the python wrapper code but I think it needs to be updated to be able to work as isothermal wall boundary condition with varying T through x coordinate(or any). Is there any progress about this issue?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553#issuecomment-1173129797:159,wrap,wrapper,159,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1173129797,1,['wrap'],['wrapper']
Integrability,"I am using Intel MPI as well, but on Ubuntu 18.04 and I get a clear error message. The likely reason why it hangs for you for this grid and not for the others is that this grid has an issue and the others do not. . Can you run it on one core of your supercomputer?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-493914393:74,message,message,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-493914393,2,['message'],['message']
Integrability,"I attach my `pkgconfig` file for `ompi-cxx.pc` . Note the `Libs.private` line, which correctly states dependencies, but it seems to be ignored by the SU2 build system:. ```; # Copyright (c) 2010 Cisco Systems, Inc. All rights reserved.; # Copyright (c) 2016 IBM Corporation. All rights reserved.; #; Name: Open MPI; Description: Portable high-performance MPI implementation; Version: 4.0.2; URL: http://www.open-mpi.org/; #; prefix=/Users/cesss/OpenMPI/4.0.2; exec_prefix=${prefix}; includedir=${prefix}/include; libdir=${exec_prefix}/lib; pkgincludedir=${includedir}/openmpi; #; # Note that -lopen-pal and all the EXTRA_LIBS are only necessary when; # static linking (they're pulled in by libopen-rte.so's implicit; # dependencies), so only list these in Libs.private.; #; Libs: -L${libdir} -lmpi; Libs.private: -lopen-rte -lopen-pal -lm -lz ; #; Cflags: -I${includedir}; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/867#issuecomment-583904437:102,depend,dependencies,102,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-583904437,2,['depend'],['dependencies']
Integrability,"I believe the viscous components of a lot of bcs are commented out and can probably be removed at this point. I'm not even sure if they are formulated properly for NEMO problems. I think BC_Inlet can be removed. Or all the commented code can be removed with just an error message. Regarding the outlet boundaries, supersonic outlet does seem to be redundant. However, many validation cases use a supersonic outlet, regardless of boundary layers (ASWBLI), so it may be fine to keep.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1368248064:272,message,message,272,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1368248064,1,['message'],['message']
Integrability,"I built the code with mpich once and I believe what I did (cannot access the machine atm) was replace; ```; mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; if mpi_dep[0].found() or mpi_dep[1].found(); mpi = true; endif; ```; by; ```; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; ```; in meson.build.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633079695:119,depend,dependency,119,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633079695,3,['depend'],['dependency']
Integrability,"I built the code with your command and it worked.; In the error message you have undefined references to e.g. ompi_mpi_long_long_int; I ""grepped"" my SU2 directories for that kind of symbol, it only appears on binaries built with OpenMPI, not on those built with MPICH.; The change you made to the meson file is equivalent to what -Dextra-deps does.; So, I do not think this is an issue of the build system.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1151#issuecomment-753915786:64,message,message,64,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151#issuecomment-753915786,1,['message'],['message']
Integrability,"I can create a first implementation of an ADT search in which all wall points and connectivities are gathered on every rank. I already created the branch feature_WallDistance. However, I have to talk to Giulio first to make sure that the ADT can also be used for the sliding interfaces",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-225424727:275,interface,interfaces,275,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-225424727,1,['interface'],['interfaces']
Integrability,"I can guarantee Medi works with MSMPI, my MinGW setup links with `C:/Windows/System32/msmpi.dll` and uses nearly identical MPI header. It most likely is MSVC issue, it often works differently to gcc/clang and has its own set of bugs. Still, the issue with meson is MinGW pkgconfig cannot find MSMPI because it's not in MinGW directly and there's no way of specifying the library location. So it looks like MinGW build with MPI is currently broken. Edit: I'm now getting different errors:; ```; 2>C:\Users\dauma\Documents\SU2\externals\medi\include\medi/adToolImplCommon.hpp(63,1): error C2182: 'Target of operator new()': illegal use of type 'void'; 2>C:\Users\dauma\Documents\SU2\externals\medi\include\medi/adToolImplCommon.hpp(62): message : while compiling class template member function 'void medi::ADToolImplCommon<CoDiPackTool<su2double>,false,false,CoDiType,double,double,int>::createIndexTypeBuffer(medi::ADToolInterface::IndexType *&,size_t) const'; 2> with; 2> [; 2> CoDiType=su2double; 2> ]; 2>C:\Users\dauma\Documents\SU2\externals\codi\include\codi/externals/codiMediPackTypes.hpp(140): message : see reference to class template instantiation 'medi::ADToolImplCommon<CoDiPackTool<su2double>,false,false,CoDiType,double,double,int>' being compiled; 2> with; 2> [; 2> CoDiType=su2double; 2> ]; ```; It's both a template parameter name and inherited typedef. Regex replace for `AdjoinType`, `PrimalType` and `IndexType` works.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-554043358:735,message,message,735,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-554043358,2,['message'],['message']
Integrability,"I can report that we did find a couple of small issues with the y+, depending on the file format. Those have been fixed in a recent pull request, so now the current develop branch contains the updates. For ParaView, the variable labels have been reverted to the originals. Thank you again for opening this issue: it led directly to improvements in the code!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/283#issuecomment-226012861:68,depend,depending,68,https://su2code.github.io,https://github.com/su2code/SU2/issues/283#issuecomment-226012861,1,['depend'],['depending']
Integrability,"I can share that version of the code.. but beware, just as Edwin mentions, it is nasty looking and hard to compile (there are intrinsics and all sorts of architecture-specific changes). But, interesting to look at, of course. There you will see that we basically moved up all of the CVariable data (reordered contiguously) and methods to the solver to eliminate the extra layer of indirection, while still keeping access for outside classes, i.e. something like solver[FLOW_SOL]->node[iPoint]->GetPressure() becomes solver[FLOW_SOL]->GetPressure(iPoint). Since you mentioned it, another target is the CNumerics classes. The flexibility is nice, but does it really need an entire set of classes with getters/setters/virtual functions? I think that most of the ComputeResidual() functions could be moved up as methods in the solver classes as well to make more efficient residual kernel loops. In the early days, we thought completely removing CVariable and CNumerics would be very intrusive to change and would hurt flexibility. While the former is still true (although certainly doable), the latter does not seem to me as high of a priority any longer. Over the years, I don't think that folks have really modified the CNumerics classes all that often (once you have implemented the Roe method, it is more or less done). In addition, the CVariable and CNumerics child classes all live almost entirely within their own solvers, so we aren't taking much advantage of code reuse to justify having them as separate classes. For instance, if we just copied the relevant ComputeResidual() routines up into their solvers from numerics, we would have very little code duplication in the end, which is an indicator that we may not really need the extra baggage.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-513292350:1583,rout,routines,1583,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-513292350,1,['rout'],['routines']
Integrability,"I cannot answer whether something will work for your system, but I'll describe what the build system does.; The blas dependency is entirely handled by pkg-config, we ask for something called ""whats in front of -Dblas-name"" (the default is openblas) that something needs to provide blas+lapack functions.; pkg-config then looks for ""blas-name"".pc and gets all information regarding libraries from there... If those libraries give you blas+lapack it should work (if it does not its a bug).; Different OS will configure these packages in different ways (e.g. Ubuntu 16 is a bit different from 18), so I honestly cannot tell you what will work on a system I've not tried before.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632104708:117,depend,dependency,117,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632104708,1,['depend'],['dependency']
Integrability,I checked for last error messages and MPI functions. Everything seems to be fine. From my side it is ready to be merged :+1:,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-355150444:25,message,messages,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-355150444,1,['message'],['messages']
Integrability,"I do have some issues with the continuous adjoint Testcases. Taking for example the euler_wedge. In the primal, results/convergence are really close. The continuous adjoint case (contadj_wedge) however produces pretty different results especially along the Euler walls (will upload an image later). The cont.adj. case converges though. So I guess I am doing missing something which is specific to the continuous adjoint? ; Maybe someone with experience in that field can help me and take a look. @hlkline maybe?. Update: Fixed the problem -> I had to change the call signature of the base implementation of `BC_Euler_Wall `and I changed it for all the primal solvers but not the continuous adjoint solver. Therefore in during integration the empty method of the CSolver was called. I'll additionally add the `override `keyword to the method declaration to avoid that in the future. Thanks to @talbring for pointing me to that",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-532675551:726,integrat,integration,726,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-532675551,1,['integrat'],['integration']
Integrability,"I do not believe that we should go back to a synchronous communication approach‚Ä¶in my experience asynchronous communication always gives better or equal performance and scalability to a carefully-done synchronous approach. It would be a step back to return to the v6.2 communication schedule. Perhaps the same tests can be repeated on a different machine with a different / better network and see what the outcome is?. Best,. Juan. On Mar 1, 2020, at 4:49 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. We could play around with the Wait() calls to wait for a specific message instead of the first to arrive, but it would take some effort to go back to the previous behavior, where the comms happened one at a time for each pair of ranks that needed to communicate. In v7, the behavior is that each rank posts all of their receives, then posts all of their sends, before the buffers holding the received data are checked and unloaded (once the communication of that particular message has completed). ‚Äî; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/894?email_source=notifications&email_token=AA5FFRHHV2YZWCMXS624GILRFL7ATA5CNFSM4K56OFUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOENNR34Y#issuecomment-593174003>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRGLYCGNEQSYRE4ZQRDRFL7ATANCNFSM4K56OFUA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593186725:613,message,message,613,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593186725,2,['message'],['message']
Integrability,"I do not think that it is related to CGNS in particular (and no need to build hdf5 anyway, we aren't using it), but rather, there are some MPI issues there. Looks like MPI_Keyval_free() is causing a problem? I think this was deprecated, so perhaps the MPI wrapper is having trouble with something in OpenMPI 4 (or maybe this function was completely removed in the new version). Thanks for reporting this. In the meantime, can you try with an earlier version of OpenMPI? v3 is working fine for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/659#issuecomment-469473720:256,wrap,wrapper,256,https://su2code.github.io,https://github.com/su2code/SU2/issues/659#issuecomment-469473720,1,['wrap'],['wrapper']
Integrability,"I don't mind the ""pairs"" by themselves, it fits nicely with how the NdFlattener works, i.e. its efficient to split them and pass them down to lower layers.; The only slight problem is that ""first"" and ""second"" are not a super expressive interface, but I think that is ok for now.; If it ever becomes needed you can create some adapter to convert something with operator (i,j,....) into pairs of pairs behind the scenes, but for the current use that would not be an option anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-847329246:237,interface,interface,237,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847329246,2,"['adapter', 'interface']","['adapter', 'interface']"
Integrability,I don't understand it ... Do you get the following message when running meson ?. ```; Program ninja found: NO; Message: Ninja was not found. Bootstrapping ...; ```; Because then ninja should be build and placed into the source root folder where meson finds it. For me it works locally and on our cluster. You can enable AD by adding `-Denable-autodiff=true` and/or `-Denable-directdiff=true` to the meson call.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-495521918:51,message,message,51,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-495521918,2,"['Message', 'message']","['Message', 'message']"
Integrability,"I encountered a similiar ""double free"" message as above when i am evaluating fixed CL RANS simulation.; I have tested three cases to see when does this error occur.; The first case is a RANS simulation for CRM wing. My configure file is opt_crm.txt in the attachment.; In this case, when I set FIXED_CL_MODE= YES, then in the end of the SU2_CFD execution, it will return messages below:. `Writing comma-separated values (CSV) surface files.; Merging coordinates in the Master node.; Merging solution in the Master node.; Writing SU2 native restart file.; Writing the forces breakdown file.; *** Error in `SU2_CFD': double free or corruption (!prev): 0x0000000007dc2aa0 ***; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7fbaa7b177e5]; /lib/x86_64-linux-gnu/libc.so.6(+0x7fe0a)[0x7fbaa7b1fe0a]; /lib/x86_64-linux-gnu/libc.so.6(cfree+0x4c)[0x7fbaa7b2398c]; SU2_CFD[0x8553d5]; SU2_CFD[0x855c59]; SU2_CFD[0x7583c2]; SU2_CFD[0x75ceb5]; SU2_CFD[0x40759c]; /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0)[0x7fbaa7ac0830]; SU2_CFD[0x735109]; ======= Memory map: ========; 00400000-00d07000 r-xp 00000000 08:28 1068882 /home/wanghao/software/SU2-5.0.0_me/bin/SU2_CFD; 00f06000-00f2d000 r--p 00906000 08:28 1068882 /home/wanghao/software/SU2-5.0.0_me/bin/SU2_CFD; ......`. But, if i turn off the FIXED_CL_MODE, this error won't occur.; Then i tried an invisid test case, this case is orriginally from the TestCases folder of SU2 (TestCases/euler/naca0012). In this case, SU2 works well for both FIXED_CL_MODE and FIXED_AOA_MODE.; Finally, i tried another tutorial case for NACA0012 (from /TestCases/rans/naca0012), then SU2 has the same problem in FIXED_CL_MODE as in the first case. Furthermore, I have noticed that this bug is related to the compilers. ; 1. Intel C++ 2013 + Mpich2-3.0.4, fixed Cl model works; System: RHEL 5.3; 2. Intel C++ 2017 + Mpich2-3.0.4, fixed Cl model fails; System: Ubuntu 16.04; 3. GCC6.1.0 + Mpich2-3.0.4, fixed Cl model fails; System: RHEL 5.3",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/383#issuecomment-306425408:39,message,message,39,https://su2code.github.io,https://github.com/su2code/SU2/issues/383#issuecomment-306425408,2,['message'],"['message', 'messages']"
Integrability,"I expect that the tree search can be used for the interpolation routines without a problem. However, we have not looked into that yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/288#issuecomment-231217312:64,rout,routines,64,https://su2code.github.io,https://github.com/su2code/SU2/pull/288#issuecomment-231217312,1,['rout'],['routines']
Integrability,I experience the same problem. . * mpich-3.3.2 is installed under /opt using:; ```; ./configure CC=$cc CXX=$cxx FC=$fc --enable-shared --prefix=/opt/mpich-3.3.2; make; make install; ```. * Then su2 build is initiated with:; ```; ./meson.py build \; -Denable-autodiff=true \; -Denable-openblas=true \; -Dwith-mpi=auto; ./ninja -C build install; ```. I tried exporting stuff like:; ```; export MPICC=/opt/mpich-3.3.2/bin/mpicc ; export MPICXX=/opt/mpich-3.3.2/bin/mpicxx; export PKG_CONFIG_PATH=$OPENBLAS_LIB/pkgconfig:$MPI_LIB/pkgconfig; ```. Even though the paths are correct and binaries do exist none of that works. I always get:; ```; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); ```. OpenBLAS is found for instance:; ```; Using 'PKG_CONFIG_PATH' from environment with value: '/opt/OpenBLAS/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.6; ```. FYI,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721280907:664,depend,dependency,664,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721280907,3,['depend'],['dependency']
Integrability,"I face the same issue with the new Docker images (based on Ubuntu 20.04).; https://github.com/su2code/SU2/pull/1619; https://github.com/su2code/SU2/runs/6384596072?check_suite_focus=true. Neither the proposed change by @aa-g :. ```diff; diff --git externals/cgns/hdf5/meson.build externals/cgns/hdf5/meson.build; index f85d5ba86d..c7655a6d1e 100644; --- externals/cgns/hdf5/meson.build; +++ externals/cgns/hdf5/meson.build; @@ -25,8 +25,8 @@ hdf5_conf_data.set('version', '1.12.1'); ext_deps = []; ; ; -opt_zlib = dependency('zlib', required: false, static: true); -opt_szip = dependency('szip', required: false, static: true); +opt_zlib = dependency('zlib', required: false, static: false); +opt_szip = dependency('szip', required: false, static: false); ; if opt_zlib.found() and cc.has_header('zlib.h'); if cc.has_function('inflate', dependencies: opt_zlib, prefix: '#include <zlib.h>'); ```. nor the extra compiler/linker flags seems to help me:. ```; LDFLAGS=""-fPIC"" CFLAGS=""-fPIC"" CXXFLAGS=""-fPIC"" ./docker/build/compileSU2.sh -b refs/pull/1619/merge -f ""-Denable-pywrapper=true -Dwith-mpi=disabled -Denable-tests=true --warnlevel=0 --werror""; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568#issuecomment-1123549692:514,depend,dependency,514,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568#issuecomment-1123549692,5,['depend'],"['dependencies', 'dependency']"
Integrability,"I gave the wall function routines a cleanup in #975 and I think something is missing, we compute the shear stresses but they are not considered in the BC's of the NS solver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-634539255:25,rout,routines,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-634539255,1,['rout'],['routines']
Integrability,"I had the same issue, its depended on the way the mesh is partitioned. There is an error in the calculation of NSpan (they should be the same for the inlet and outlet) when the boundary is on two different cores (points are counted twice). I resolved it by making an extra entry in the config that specifies the number of spanwise sections. The testcases are meshed in such a way that the partitioning rarely lead to the outlet being partitioned across two cores, so the errors doesnt pop up there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/990#issuecomment-630646560:26,depend,depended,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630646560,1,['depend'],['depended']
Integrability,"I have a couple of question and suggestions about things I noticed during moving the initialization.; 1. `SU2_DOT` did not call `omp_initialize()`, it does now after moving `omp_initialize()` to the driver constructor. Does it actually run any hybrid AD stuff?; 2. The number of OpenMP threads can be specified for `SU2_CFD` via the `-t` parameter, but for `SU2_DOT` and the python wrapper I saw no way to configure it. Making the number of threads a parameter of the driver constructors and calling `omp_set_num_threads` in the constructor of `CDriverBase` seems like a natural way to enable this for all flavours of SU2. Would that be a nice addition?; 3. I couldn't find any python wrapper tests among the parallel AD and hybrid AD tests. Could any of the serial AD python wrapper tests serve as a basis for a parallel AD or hybrid AD one?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1470026920:382,wrap,wrapper,382,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1470026920,3,['wrap'],['wrapper']
Integrability,"I have started dividing the geometry classes. First, I created a new set of classes for the FVM mesh readers. There is a base interface that should never need to be modified, and the new CGNS reader is the first implementation. I will move the SU2 ASCII to this framework soon. The new class will make it easy to add new readers or even just implement analytic meshes like squares and cubes directly as child classes. I will break off a few more small classes in this PR, since they will be easy to handle, but I will likely wait for after this PR to completely divide CPhysicalGeometry just to be safe.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-520532998:126,interface,interface,126,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-520532998,1,['interface'],['interface']
Integrability,"I have tried two additional simulations with the same cylinder mesh:. **1. Stationary cylinder**. The settings are almost identical, except:. su2Config.cfg:; ```; ...; TIME_STEP = 0.00593412; ...; ```. zone_rot.cfg:; ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.0; ...; ```. In other words, this is a transient stationary cylinder simulation with two zones. As the axial velocity and eddy viscosity evolutions show below, the simulation runs smoothly and no discontinuities or unphysical flow result is observed around the zone interface. <img width=""720"" alt=""cylSlowStationary"" src=""https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExNTg4ZHE2YTZkM3Nmbm84NWEyOTN6bXJtbjg5NXJ3OGRoOTdscXMyeSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/l63Ze6xd8FejHGNjCZ/giphy.gif""> . **2. Slowly rotating cylinder**. I also tried a very slowly rotating cylinder to see if the error will occur even with a slow rotation. The rotational speed of the inner zone is around 0.03 rad/s, which corresponds to a surface angular speed (0.025 m/s) equal to the 0.25% of the freestream velocity (Uinf=10 m/s). . zone_rot.cfg:; ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.02941176471; ...; ```. The time step is set as the one used for the stationary cylinder. Each time step corresponds to a 0.01 deg rotation of the inner zone. The below animation shows the movement of the cells on the interface:. <img width=""480"" alt=""cylSlow"" src=""https://i.giphy.com/cOUpRw5pDCSvqGa6Q0.webp""> . The below animations show the axial velocity and eddy viscosity evolution. The results should not deviate much from the stationary cylinder results as the angular speed of the cylinder is quite low compared to the freestream. However, it is not the case for this simulation. Also, the discontinuity on the downstream part of the interface is quite apparent even at the earlier time steps. As the simulation progresses, unphysical flow results (non-zero eddy visc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2041586417:571,interface,interface,571,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2041586417,1,['interface'],['interface']
Integrability,"I have two considerations on the new boundary conditions: . 1- should the ""domain length"" in the Omega farfield BC be adimensionalized by the Reynolds length? Otherwise w gets adimensionalized only by the reference velocity.; 2- the farfield value of TKE does not take into account for the freestream turbulence intensity. If we want to match the tke computed via $k_{\infty}=w_{\infty} * (\mu_{\infty} * ViscRatio)/\rho_{\infty}$ and the one computed previously as $k_{\infty}=(3/2)*(U_{\infty}*TI_{\infty})^2$, we can either compute the viscosity ratio combining the two equations or just use the one which explicitly contains the $TI_{\infty}$ disregarding the dependency on $w_{\infty}$. But can we do it? The model as written on the NASA TMR does not explicitly contains the turbulence intensity in the boundary conditions. Maybe it only matters when transition is taken into account.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2307229258:664,depend,dependency,664,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2307229258,1,['depend'],['dependency']
Integrability,"I have updated the sliding mesh cases now, but I have found two cases that had odd behavior. The rotating cylinders case seems to give different results for values such as lift and drag depending on the core count, even in the develop branch. Also, the supersonic vortex shedding problem reports that hundreds of points are non-physical at the end of the run, both with this PR and in develop. Anyone have any insight on these? I am going to keep moving through the final cases that need updated for this PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-552707156:186,depend,depending,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-552707156,1,['depend'],['depending']
Integrability,"I have used both weight +1 and -1 but the optimization direction appears to be independent of it. Another issue is that the OBJECTIVE_WEIGHT parameter is not printed correctly in the configs generated during optimization. Its always +1 (even if I set it as -1). Is the DV_VALUE the same as ""FINDIFF_STEP""? Or does its value happens to be the same?. And why is the DV_VALUE always the same during the optimization to 0.001? Shouldn't this depend on the case itself?. I have attached my config.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-626404968:438,depend,depend,438,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626404968,1,['depend'],['depend']
Integrability,"I haven't looked at the python wrapper in detail, we had previously tracked several properties which are not available in the conventional convergence tracker (such as Cmy) and used the stop file to obtain the data when appropriate. We have considered increasing the save frequency, but there are several files which are not created at every save point; thereby forcing each ""standard"" run to become a ""run to nearest save"" then ""resume for 1 time-step to get the actual output data"". As the decomposition and some of the file writes take a significant amount of time, it is a non-starter for commercial applications. We would switch back to v6 (which had the capability) but we need some of the other features in v7. I'll take a look at the python wrapper. Thank you for your candor.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1304#issuecomment-862344695:31,wrap,wrapper,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-862344695,4,['wrap'],['wrapper']
Integrability,"I ifdeffed the availability of MPI_Ibarrier for checking whether the error call is collective. If MPI_Ibarrier is not present, there is a delay in the writing of the error message of 1 second (to make sure that the buffers for the one-sided communication are updated). If MPI_Ibarrier should be used when available (this is the cleaner solution), an additional check in configure must be added.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574#issuecomment-418669548:172,message,message,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/574#issuecomment-418669548,1,['message'],['message']
Integrability,"I implemented most of the reviewers suggestions. The only suggestion I left unchanged is the upper-case consistency issue raised by Wally. Since it is an optional output and it depends on the controlling variable names the user provides, I think it would be more intuitive to keep the font case consistent between the names under `CONTROLLING_VARIABLE_NAMES` and the corresponding `RMS_` outputs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057#issuecomment-1643680580:177,depend,depends,177,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057#issuecomment-1643680580,2,['depend'],['depends']
Integrability,"I just committed a second round of changes that I would appreciate some feedback on. Compilation is successful with these changes, however, upon testing, I receive the following message: . Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; Line 271 SPECIFIED_SUPERSONIC_INLET_PROFILE: invalid option name. Check current SU2 options in config_template.cfg.; Did you mean SPECIFIED_INLET_PROFILE?; Line 274 SUPERSONIC_INLET_FILENAME: invalid option name. Check current SU2 options in config_template.cfg.; Did you mean INLET_FILENAME?. I had already adjusted CConfig.cpp to include supersonic inlet profile inputs, but apparently I am not implementing everything I need to. I'm unsure where else I would need to make changes. Any suggestions?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1652#issuecomment-1151296832:178,message,message,178,https://su2code.github.io,https://github.com/su2code/SU2/pull/1652#issuecomment-1151296832,2,['message'],['message']
Integrability,"I just found a heap buffer overflow in the interface code, mentioning it here in case it is related https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2034489154:43,interface,interface,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2034489154,1,['interface'],['interface']
Integrability,I just had a chat with @RoccoBombardieri to get Toms fix integrated in his branch and I hope that results will match the old Implementation üëç,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-634681005:57,integrat,integrated,57,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-634681005,1,['integrat'],['integrated']
Integrability,"I just pushed a new version of your inlet profile branch. I really like the solver class abstractions. I can tell you have a good grip on the classes and where data should live - nice job. Here are the changes I have made:; * everything is generalized in parallel for an arbitrary number of inlets in the file. The file format changed slightly.; * I moved around some routines and data to take more advantage of inheritance and encapsulation: it is now more like the restart routines where the reading and data live in the parent CSolver class, the specific load functions are found in the solvers (I overloaded SetInletAtVertex), and the template file is written by COutput. It is written such that any solver could eventually use it for any marker type by adding the appropriate SetInletAtVertex routine for solver-specific data (might need to rename for different marker types rather than inlet) and writing an appropriate template file writer in the output.; * for now, it is still requiring a essentially a matching profile point (nearest neighbor within a tight tolerance) by default, but you can have an arbitrary number of points in the file for each marker, and we can eventually add interpolation easily. We already have some of these routines.; * the turbulent solvers now all use the Inlet_TurbVars data structure even for uniform inlets. Can you please check this with Python?; * multigrid is now working. I put in a boundary face area-averaged restriction operator for the inlet profiles. Any decent approximation on the coarse levels should work ok. I left all of your original routines there, but deactivated them for the moment. Can you please give it a look and let me know what you think (and whether it is working for you)? Feedback most welcome. If we are happy with it, we can clean it up and submit a PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/467#issuecomment-371716916:368,rout,routines,368,https://su2code.github.io,https://github.com/su2code/SU2/issues/467#issuecomment-371716916,5,['rout'],"['routine', 'routines']"
Integrability,"I just tried it and it failed. The error message is extremely long, I am attaching a [text file](https://github.com/su2code/SU2/files/4685129/su2_custom-mpi.log) for that. This was my meson command earlier: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL`. Then I did this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py configure build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:41,message,message,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['message'],['message']
Integrability,"I just updated the build to use the --user flag so it shouldn't require permissions. Can you pull and try installing again? Just run the same meson command as before with --reconfigure. As for the missing header, I think that's an issue with your python setup. Don't remove python2.7 from your system, since a lot of packages still depend on it. How did you install python? If you run `locate Python.h` does it return anything?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619400317:332,depend,depend,332,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619400317,1,['depend'],['depend']
Integrability,"I noticed that ; - the distinction between the time integration schemes (implicit Euler, explicit Euler, ...) is made in `CIntegration::Time_Integration`: Exactly one of the functions `CSolver::ImplicitEuler_Iteration`, `CSolver::ExplicitEuler_Iteration`,`ExplicitRK_Iteration`, `ClassicalRK4_Iteration` is called.; - These are virtual functions, defined as ""do nothing"" in `CSolver`.; - Regarding the flow equations, `CFVMFlowSolverBase<>` overrides `ImplicitEuler_Iteration`, and `CEulerSolver`/`CIncEulerSolver` override the other three functions.; - Regarding the turbulence equation, `CTurbSolver` overrides `ImplicitEuler_Iteration` only. Thus probably I can use `TIME_DISCRE_FLOW=EULER_EXPLICIT` but not `TIME_DISCRE_TURB=EULER_EXPLICIT`?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-964236535:52,integrat,integration,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-964236535,1,['integrat'],['integration']
Integrability,"I see thanks for sharing that.; The way I understand (or not) blocking v non-blocking communication, with the former there will be more communications in flight at a given moment since the code does not wait to receive before issuing the next message. Maybe this puts a lot of pressure on your network...; Maybe there are tuning parameters to improve network performance under these conditions (it could be worth having a look around CFD Online), or maybe your new hardware will not have any problem. As for software solutions.; If your usual application is compressible RANS/URANS you can try the new and experimental hybrid parallel mode we just introduced in 7.0.2. This will allow you to have one MPI process per node which will unfold in 16 threads each.; I cannot guarantee this will work flawlessly since I have not tested it for pure unstructured meshes (which seems to be your case) but for block-structured-ish meshes the results so far are very promising (#861).; To use this add option `-Dwith-omp=true` to meson, and then launch the code with `mpirun -n 4 --bind-to none SU2_CFD -t 16 config.cfg` (or something equivalent, the ""--bind-to none"" part is important).; Let me know if you get a cryptic error along the lines of ""coloring failed"". For pure MPI, @economon would it be viable to force per-message waits? and would that be roughly equivalent to the old communication mode? (this would be more work on our side @drewkett so if you could give option 1 a go it would be great).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593162200:243,message,message,243,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593162200,2,['message'],['message']
Integrability,"I see, those warnings didn‚Äôt pop up with LLVM on Mac. Actually, in a next pass, each of those Set_MPI_* routines that carry the warnings will be deleted. I didn‚Äôt do it yet, because git was getting confused with the spacings again. None of those routines are active anywhere any longer, so even just removing that index variable is fine to get rid of the warning",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/699#issuecomment-498966410:104,rout,routines,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/699#issuecomment-498966410,2,['rout'],['routines']
Integrability,I see. The python wrappers are far more powerful than I thought. But I'm still a bit lost with respect to the API of the driver(s). Where's a good place to start reading into that?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553#issuecomment-1058017822:18,wrap,wrappers,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1058017822,1,['wrap'],['wrappers']
Integrability,"I should also mention though that moving the threading to a single high-level parallel section is also very problematic for readability/development. Folks will have to be aware that the threads are active, and it can be very error-prone. This was one of the major detractors of implementing the OpenMP framework as we had it in the C&F paper into the develop branch, even though the performance was quite good (and also the interoperability of threading and AD at the time). Any clever suggestions/techniques for hiding the threading as much as possible are most welcome.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-566654480:424,interoperab,interoperability,424,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566654480,1,['interoperab'],['interoperability']
Integrability,"I simple wrote a program to test the grid, which searches for the boundary elements in the single faces, i.e. faces that are only part of one volume element, of the volume grid. What the error message means is that for 4 triangular surface elements of boundary marker BODY there is no corresponding face of the volume elements that is only part of one volume element. . When I include the faces that are shared by two volume elements, only two boundary elements are not found. So in short, you have two boundary elements in boundary marker BODY that are no part of any volume element and two boundary elements that are shared by two volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-494675549:193,message,message,193,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-494675549,2,['message'],['message']
Integrability,"I studied some preconditioning formulations that can be added to SU2. Currently, we are only scaling the dissipation part improving accuracy not convergence at Low Mach number flows. . I found this interesting paper that presents the preconditioning formulation in conservative variables (minor changes in the code) for implicit solvers based on the classical Weiss and Smith formulation. A robust low speed preconditioning formulation for viscous flow ‚Ä¶ <https://www.google.com.br/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0ahUKEwjS8_vzre3QAhXIjJAKHatADsQQFggfMAA&url=http%3A%2F%2Fwww.sciencedirect.com%2Fscience%2Farticle%2Fpii%2FS0045793011000223&usg=AFQjCNG9Pc2UPSeqsdqHfVa0symixryb9w&sig2=2eqLmLoBa4t3XCMT_DWSrQ&bvm=bv.141320020,d.Y2I>; Preconditioning applied to variable and constant density flows - AIAA <https://www.google.com.br/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&sqi=2&ved=0ahUKEwjF65S3s-3QAhXFkZAKHfwbDlEQFggfMAA&url=http%3A%2F%2Farc.aiaa.org%2Fdoi%2Fpdf%2F10.2514%2F3.12946&usg=AFQjCNGpofvU3ntuYJaA6o_nAz8MOKubCg&sig2=YIumr88W2hKQK0AMzI3fAw&bvm=bv.141320020,d.Y2I>. I really would like some help to implement the above preconditioning implicit dual time-step formulation (Eq. 18 of the Weiss and Smith paper or section 4.3.3 of Colin et al.). Supposing I already have the preconditioning matrix, I just have to modify CEulerSolver::SetResidual_DualTime?. Thanks in advance. Eduardo . > On 5 Dec 2016, at 17:29, Thomas D. Economon <notifications@github.com> wrote:; > ; > Great! Thanks, Eduardo. Let's work now together in this branch to make sure that everything is integrated nicely. Just let me know what help you may need.; > ; > ‚Äî; > You are receiving this because you modified the open/close state.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/333#issuecomment-264951536>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AJVmCZ5PvOBqyi5FUUq329-qySSrsIOzks5rFGYWgaJpZM4K3iN4>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/333#issuecomment-266321042:1858,integrat,integrated,1858,https://su2code.github.io,https://github.com/su2code/SU2/pull/333#issuecomment-266321042,1,['integrat'],['integrated']
Integrability,"I suggest that we add a test to the regressions that will check the file output format - we already have a routine to diff two files in the python scripts, so this should be fairly straightforward. ; My thought here is that this would include very small cases, with just one iteration and/or just running SU2_SOL, to check that the header format hasn't changed in all the output formats. This is something we don't usually check for, especially in paraview output since most of us don't use that. It'll add some overhead for developers when the output content or format is changed (we'll need to update the reference file in the test cases repo), but since this is something likely to cause inconvenience to users (all of a sudden everyone needs to update their tecplot layout, etc), that's not such a bad thing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/283#issuecomment-225968460:107,rout,routine,107,https://su2code.github.io,https://github.com/su2code/SU2/issues/283#issuecomment-225968460,1,['rout'],['routine']
Integrability,"I suspect you are correct and they have some problem, I tried building the code without MPI (so using our dummy mpi wrapper) and the unit test passes and valgrind doesn't find anything in the testcase...; This displs problem with a single rank was also a bug we had in our MPI wrapper and you fixed right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1397456058:116,wrap,wrapper,116,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1397456058,2,['wrap'],['wrapper']
Integrability,"I tend to agree w Eran on this topic. When it is working as it should, it is very convenient to have the makefiles already available in the repo. I switch between Mac, Ubuntu, and a red hat cluster without needing to update anything or call the bootstrap script. I rarely use it.. basically only when adding or removing files to the build. Also, it is good to minimize dependencies, as sometimes old machines or clusters have limited tool sets. But, clearly we should at a minimum fix the issue that some of you are finding with the autotools, which should just need an update. What systems are you having trouble with? It‚Äôs important that we don‚Äôt jump too far ahead for portability reasons (that‚Äôs why we have kept the old versions for so long). Do you have an idea of the minimum autotools you need for the failing systems? We could start by updating to that version and see if things stabilize.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-424210049:369,depend,dependencies,369,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-424210049,2,['depend'],['dependencies']
Integrability,"I tested the MKL integration with the discrete adjoint, and everything looks ok, turns out to be only about 5% faster on a per iteration basis (i.e. excluding recording times). I had to grab some work from my other ongoing PR's to run a case with reasonable CFL settings so I am not going to upload files for this test. @economon , @talbring , if you do not mind me moving the files with significant changes on a separate PR, I think this is ready to go.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-505018141:17,integrat,integration,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-505018141,1,['integrat'],['integration']
Integrability,"I think I have zoomed on the problem:; First I had to renstall m4 (a local problem); Then, In the AD part, there is a refernce to CHeatSolverFVM instead of CHeatSolver.; So, a patch, is to copy routines:; in SU2_CFD/src/solvers : cp CHeatSolver.cpp CHeatSolverFVM.cpp; in SU2_CFD/src/variables : cp CHeatVariable.cpp CHeatFVMVariable.cpp; After that make and make install work. This is a patch. The repair requires a match of the names of the CHeat routines to the actual files names. I didn't track where the list exists. Last but not important: configure.ac prints a header with Release 6.2.0 Falcon; instead of 7.02 Blackbird. This explaines the header that I have printed in previous message",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-600786911:194,rout,routines,194,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600786911,3,"['message', 'rout']","['message', 'routines']"
Integrability,"I think I implemented all the modifications you suggested. I am sorry you see all the commits in between, unfortunately due to Covid I work outside of office and I actually use Github to push the modified code to the office PC. I was actually working on a separate branch but, for reason that I do not understand, all the commits have been moved in the merging process... sorry about that. I am still learning git. In particular the modifications are:. - The functions related to static mesh deformation have been removed. I only included some new lines in the python wrapper ; that overwrite the initial velocities to zero and push back the solution.; - I now use the BC_Sym_Plane of the FEA solver for the deformation at the symmetry plane. I had to add a flag that avoids ; accessing LinSysReact in case of mesh deformation, as this is not initialised in that context.; - GetnMarker_Match_Deform_Mesh is not present anymore; - The marker has been renamed from MATCH_DEFORM_MESH to DEFORM_MESH_SYM_PLANE. All the functions have also ; been renamed accordingly; - I included the SU2 header in all the new files, changing the version number to 7.0.8. I did not modify the version number of ; the files that were already present in SU2 prior to this PR. I think the merging process should take care of that, am I wrong?; - The python functions that were separated in x,y,z component now give back an array and are merged into one function only; - The descriptions for the methods have been added; - The test case has been removed. I actually prepared a tutorial and all the appropriate files will be placed in the tutorial and ; website repos. I will now perform a PR for those repos so that you can see the material. Again thank you very much and sorry for the mess with the ""internal"" commits. . Please let me know if you think I missed something",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972:568,wrap,wrapper,568,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972,2,['wrap'],['wrapper']
Integrability,"I think it is ok if we send a few polite messages to say that we will close them but that they should feel very welcome to update their branches and resubmit the PRs. For a couple of them, it is partly our fault that they didn't get enough attention, as it was quite some time ago before we had really established our process.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/593#issuecomment-427215727:41,message,messages,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/593#issuecomment-427215727,1,['message'],['messages']
Integrability,"I think one option would add yet one more config option and make it more difficult for the user, and the other would be to extend new features to all existing capabilities of the code. The idea behind the single and multi-zone drivers was precisely generalization. In my opinion it would be a no brainer to go for the second, but I'll leave it up to the community, but it depends also a lot on what timing we are moving in.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542210441:372,depend,depends,372,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542210441,1,['depend'],['depends']
Integrability,"I think that is just a coincidence that the timings were the same but I should have provided more data up front. I did the preprocessing output check you described and a==b. The following output is from 16 cores on 1 node if you want to take a look. [output_1.txt](https://github.com/su2code/SU2/files/4272178/output_1.txt). Here are three sets of timings. One for SU2 v7 on a smaller problem (6.8e6 cells) and one for SU2 v7 on a larger one (27e6 cells) and one for SU2 v6.2 on the same smaller problem. These are all done with the same compiled version of openmpi (v4.02) and compiling SU2 from source for both versions. The four machines are nearly identical. They're all dual socket machines running sandy bridge xeons, so they are a bit on the older side. . Mesh 1 (6.8e6 cells); - 8 processes (1 machine x 8 cores) => 13s/iteration; - 8 processes (2 machine x 4 cores) => 18.4s/iteration; - 16 processes (1 machine x 16 cores) => 8.5s/iteration; - 16 processes (2 machines x 8 cores) => 17s/iteration; - 16 processes (4 machines x 4 cores) => 15.8s/iteration; - 32 processes (2 machines x 16 cores) => 18.1s/iteration; - 64 processes (4 machines x 16 cores) => 21.9s/iteration. Mesh 2 (27e6 cells); - 8 processes (1 machine x 8 cores) => 50s/iteration; - 16 processes (1 machine x 16 cores) => 32s/iteration; - 16 processes (2 machines x 8 cores) => 32s/iteration; - 16 processes (4 machines x 4 cores) => 31s/iteration; - 32 processes (2 machines x 16 cores) => 34s/iteration; - 64 processes (4 machines x 16 cores) => 40s/iteration. A final set of timings for Mesh 1 with SU2 v6.2 for reference; - 8 processes (1 machine x 8 cores) => 26s/iteration; - 8 processes (2 machine x 4 cores) => 25s/iteration; - 16 processes (1 machine x 16 cores) => 15s/iteration; - 16 processes (2 machines x 8 cores) => 14s/iteration; - 16 processes (4 machines x 4 cores) => 13s/iteration; - 32 processes (2 machines x 16 cores) => 9.8s/iteration; - 64 processes (4 machines x 16 cores) => 6.2s/iteration. Thank",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593123594:710,bridg,bridge,710,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593123594,1,['bridg'],['bridge']
Integrability,"I think there are two options, but both will require checking the code. . 1) Go into grid_movement_structure.cpp and hack the Rigid_Pitching() routine to use your own function in time. Not elegant, but should just be a couple of lines to change. 2) A more general feature was implemented in the past to specify movement of surfaces in time by position of all surface nodes, but should be checked to make sure it is still working as expected. To use it, select 'EXTERNAL' as the grid movement type and provide a file with the surface node positions for each time step. Check in CSurfaceMovement::SetExternal_Deformation() for more info. If you are interested in developing a better solution as a contribution, we are always open!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/644#issuecomment-461567798:143,rout,routine,143,https://su2code.github.io,https://github.com/su2code/SU2/issues/644#issuecomment-461567798,1,['rout'],['routine']
Integrability,"I think we lost this functionality around version 7 (at the time I did not know we had it) maybe because it was complicated to guarantee the right file outputs when the simulation is stopped this way, especially for discrete adjoint problems.; The poor mans version of this feature is to increase the file output frequency and kill the execution :shrug: ; Nevertheless, the mechanism to change the number of time iterations at runtime can still be found in `CFluidDriver::Monitor`, which is currently used by turbomachinery problems.; If someone wants to bring the feature back that would be a good place to start, although I think this type of runtime interaction is a bad investment, it would be better to use the python wrapper.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1304#issuecomment-862079938:723,wrap,wrapper,723,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-862079938,1,['wrap'],['wrapper']
Integrability,"I thought of doing an SST but was not long enough that it gave me error with divergence. I have been setting up my SST case as per the tutorial example of NACA0012. However, I do not happen to see any entry with regards to eddy frequency etc. (usually required by SST) in the config file. Any guidance will be great.; Thanks; Jehan; From: Heather Kline notifications@github.com; To: su2code/SU2 SU2@noreply.github.com ; Sent: Tuesday, May 12, 2015 11:43 AM; Subject: [SU2] Feature deallocation (#174). Bringing this branch up to date with current develop branch. ; Various deallocation changes; Some regression tests fail but all run. (previously was not the case); You can view, comment on, or merge this pull request online at:; ¬†¬†https://github.com/su2code/SU2/pull/174; Commit Summary; - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working version with ParMETIS. Fixed bug in global index. Now clean up and testing...; - Cleaned version of ParMETIS routines with better console output during partitioning.; - Small bug in initial element division.; - Made arrays in ParMETIS call dynamic.; - Fixed compiler warnings and added MPI directives so that the pure serial code wor",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:1544,integrat,integration,1544,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['integrat'],['integration']
Integrability,"I tried it for the NACA0012 897x257 mesh with compressible RANS (in `CAvgGrad_Flow::ComputeResidual`). . The scalar product is negative at the far-field boundary. `Coord_i` is on the boundary, `Coord_j` is in the domain. `Normal` points outwards in the viscous numerics (but I don't know if this depends on the orientation of the boundary in the mesh file). The scalar product is positive for the viscous fluxes between cells.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1185#issuecomment-774486850:296,depend,depends,296,https://su2code.github.io,https://github.com/su2code/SU2/issues/1185#issuecomment-774486850,1,['depend'],['depends']
Integrability,"I tried on 1, 4 and 24 cores and I get the same error message as @talbring. This indeed indicates that something is wrong with your grid. The fact that your computation is stuck is most likely caused by your MPI implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-493404108:54,message,message,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-493404108,1,['message'],['message']
Integrability,"I understand.. some of the lines are going to look very ugly after wrapping to 80 column widths, etc, but it will also highlight these trouble spots. I see it as two orthogonal issues: (1) fix the formatting problems once and for all and have them automatically fixed in the future so we stop wasting time on it, and (2) we continue to fix the problem areas in the code structure as we go, which we will need to do anyway, regardless. For me, I think the benefits of (1) outweigh the negative of seeing some ugly code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/969#issuecomment-625440605:67,wrap,wrapping,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/969#issuecomment-625440605,1,['wrap'],['wrapping']
Integrability,"I was not able to reproduce this behavior. Below is the result I get when using the master branch for both the code and the test cases. . ![image](https://cloud.githubusercontent.com/assets/5167760/7709282/d36254b2-fe10-11e4-8827-f01ec46fbf0f.png). Note that since the config file provided uses a restart it depends on also having the provided restart files, which may have been produced with slightly different settings (ie, lower CFL number), and if you are not using the restart files you should check that the solution has converged. If you have further questions about the settings of SU2, checking convergence, etc please post them to the forum at:; cfd-online.com/Forums/su2/. You will find that in addition to a wider audience who can answer your questions, the answers may also already be posted from users who had similar problems.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/179#issuecomment-103602179:308,depend,depends,308,https://su2code.github.io,https://github.com/su2code/SU2/issues/179#issuecomment-103602179,1,['depend'],['depends']
Integrability,"I was too lazy on that. Sorry, I should have done that that in the first place :disappointed: . As there were only a few non-defaults I would have gone with:; `find . type f \( -name '*.cfg' \) -exec sed --in-place '/WRT_CON_FREQ= 1/d' {} \+`; and changing the rest manually (exercising the muscle memory a bit), but that handy script might get some additional use for other options ;). EDIT: This suggestion above is bad how I just noticed -> `sed` here deletes each line that contains `WRT_CON_FREQ= 1` which rightfully contains `WRT_CON_FREQ= 10` etc! One has to wrap the search expression in `\b` to only deletes lines that exactly match. The command becomes:; `find . type f \( -name '*.cfg' \) -exec sed --in-place '/\bWRT_CON_FREQ= 1\b/d' {} \+`. If you have some more options to deprecate in mind I can take care of some. Maybe I try to hunt down a few more over the weekend :bow_and_arrow:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743477032:566,wrap,wrap,566,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743477032,1,['wrap'],['wrap']
Integrability,"I went ahead and opened a draft PR, Back to C++11 (although now I'm using raw pointers :( ) and removed the dependency on compiler-specific flags (even if --whole-archive is supported by most compilers).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-669804893:108,depend,dependency,108,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669804893,1,['depend'],['dependency']
Integrability,"I will try to make an example to show .; > So my problem is CD nozzle and I am running FEM-LES solver and exported; > data in .csv and PARAVIEW type. Everything seems good its just I was unable; > to visualize exported .vtk files (open but does not show me the final; > result- stuck in just opening it - I am not sure if its paraview issue or; > its 4 GB file which causing this error). So I tried to export my file using; > Tecplot type option but unable to do so and getting this Bus error which I; > never encountered earlier in SU2 ever (what is that error - YOUR; > APPLICATION TERMINATED WITH THE EXIT STRING: Bus error (signal 7)). So; > trying to dump my files in anyway to visualize them, since its FEM-LES; > solver with DG scheme so files are pretty huge. Still let me know if I need; > to send you an example. Attached .cfg file for reference.; >; >; >; > On Mon, Mar 16, 2020 at 6:13 PM Clark Pederson <notifications@github.com>; > wrote:; >; >> @monika1387 <https://github.com/monika1387> I'm sorry, I still don't; >> understand. Do you have a minimal working example, where you can reproduce; >> the problem you're having?; >>; >> Where does the error occur? In SU2_CFD? In SU2_SOL? In Paraview? In; >> Tecplot? What's the specific error message? What's the context?; >>; >> ‚Äî; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it on GitHub; >> <https://github.com/su2code/SU2/issues/787#issuecomment-599781328>, or; >> unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/ALJ3OXFU367WBC2BSOGLCILRH2P7VANCNFSM4IT7MM2A>; >> .; >>; >; >; > --; > *Thank you,*; >; > *Monika Chauhan *; >; > *Graduate Research Assistant, Doctoral Program*; >; > *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA 24061*; > *Cell# 540-998-5012*; >. -- ; *Thank you,*. *Monika Chauhan *. *Graduate Research Assistant, Doctoral Program*. *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA 24061*; *Cell# 540-998-5012*",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-599795725:1784,message,message,1784,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-599795725,1,['message'],['message']
Integrability,"I wonder if maybe it would be a better idea to delete this (and other stuff) from externals/ and add it to subrojects/ instead. You can use `meson wrap install catch2`, and it's a simple ini file to vet instead of an 18k line file. git diffs become a lot simpler too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1726#issuecomment-1198882302:147,wrap,wrap,147,https://su2code.github.io,https://github.com/su2code/SU2/pull/1726#issuecomment-1198882302,2,['wrap'],['wrap']
Integrability,"I would always suggest adding the corresponding pkg config path to the `PKG_CONFIG_PATH` variable and use the `dependency` method. This way you get the correct version, additional dependencies, the include path and necessary flags.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-520973327:111,depend,dependency,111,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-520973327,2,['depend'],"['dependencies', 'dependency']"
Integrability,"I would give a cautious yes, cautious because Meson appears quite new, and probably still has some wrinkles to iron out. It‚Äôs definitely worth a try. Dave. From: Tim Albring [mailto:notifications@github.com]; Sent: Thursday, May 23, 2019 1:21 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Dave Taflin <d.taflin@tecplot.com>; Mention <mention@noreply.github.com>; Subject: Re: [su2code/SU2] Meson build system (#685). @economon<https://github.com/economon> Hm ok, that is strange. The one that it builds is the newest on github (v1.9). On linux meson finds ninja if it is in the root directory of the source code (which should be there after bootstrapping), apparently that is not the case on mac. Can you check whether it works when you add the source dir in your path variable? Like @davetaflin<https://github.com/davetaflin> also mentioned for windows, on mac you can also directly generated xcode files (by adding --backend=xcode to the meson call), then ninja is not required. But anyway, I will look for a solution to that problem. @davetaflin<https://github.com/davetaflin> Thanks for your impressions. I would say the documentation is decent. The important things are there, which helped me setting it up. But I guess that we can also ask the developers if we have some problems when adding more complex dependencies (however, we then also should ask ourselves whether we really want to add them in this case). But is the conclusion that you'd also prefer meson over automake ? :D. ‚Äî; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/685?email_source=notifications&email_token=AADV2HBRMBCYV43557RMHRTPWZHYPA5CNFSM4HOUXHQKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODWBOI7I#issuecomment-495117437>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AADV2HB3AK7BY3OH5LY66R3PWZHYPANCNFSM4HOUXHQA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-495299585:1315,depend,dependencies,1315,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-495299585,1,['depend'],['dependencies']
Integrability,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:733,interface,interface,733,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119,3,"['interface', 'message']","['interface', 'message']"
Integrability,"I would say it is fundamental to have some cases that start from converged solutions.; IMO all the cases we have that run for 10 iterations are trash from the point of view of testing correctness, they only test that we don't have severe integration bugs.; Even the cases that start from a good restart are NOT covering whether the solver is able to reproduce the correct behavior when starting from scratch...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784#issuecomment-1304271814:238,integrat,integration,238,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784#issuecomment-1304271814,1,['integrat'],['integration']
Integrability,"I'll try and find some time to have a look at this today. I think the issue is in the `jSpan == nSpanDonor - 1`. The final value in both the donor and target arrays are 1D values, the values at nSpanDonor - 2 are the values at the shroud. I think the original proposed fix is still needed here as further down you have an array accessing a postion of `kSpan + 1` which iirc resulted in the memory access violation. I think what has happened here is the Aachen case triggers this condition, and results in an error in the calculation of the coefficient for the linear interpolation. When we fixed it, we changed the simulation enough that it throws the residuals off as the computational problem is inherently different. A good test for this would be to extract the values at the interface from the turbomachinery special output with and without this change to see if this is the case. When we were first designing this case @alecappiello had an issue getting the results in one of the zones to agree with experimental results, this could be why?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276#issuecomment-2134790783:779,interface,interface,779,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276#issuecomment-2134790783,1,['interface'],['interface']
Integrability,"I'll try to break down each request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:106,interface,interface,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827,8,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"I'm at the beginning, so i have no really clear my path. Anyway a soon as; possible i will follow your instructions. Sorry for this difficulty, but to; me a su2 development group is something totally new and i have to clarify; some aspects with my PhD student and with my professor. Thanks for your help; Marco. Il giorno gio 20 gen 2022 alle ore 11:47 Nijso ***@***.***>; ha scritto:. > Hi! If you want to work together over github, you can also create a; > project here:; > https://github.com/su2code/SU2/projects?type=beta and define tasks and; > divide the work. It would be good if you can sort out what the overlap is; > and what the unique parts of your research will be.; >; > ‚Äî; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/1496#issuecomment-1017354022>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AXL7TQXSL55PQIEHSDCPT4LUW7R3TANCNFSM5MC56OYQ>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1496#issuecomment-1017587516:1309,Message,Message,1309,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1017587516,1,['Message'],['Message']
Integrability,"I'm getting to the same conclusion, the easier step might be to set; Multizone_Problem to false during recording steps... Ole Burghardt <notifications@github.com> escreveu no dia ter√ßa, 15/10/2019; √†(s) 12:42:. > @rsanfer <https://github.com/rsanfer> You shouldn't get in touch with the; > new AD routines at all unless you're using CDiscAdjMultizoneDriver.; > So in case; > direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution);; > gets executed, that likely means that the if-statement above,; > config->GetMultizone_Problem(), evaluates to true.; > Some weeks ago I added another boolean (Get_MultiphysicsDiscreteAdjoint or; > similar) but I was asked to revert that to the line above.; >; > ‚Äî; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/803?email_source=notifications&email_token=AJCOXNYKA2UDXBUN6DTFXVDQOWUBNA5CNFSM4JAY4HS2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEBIN6GA#issuecomment-542170904>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN2V3264434E3UH75ITQOWUBNANCNFSM4JAY4HSQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542173510:297,rout,routines,297,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542173510,1,['rout'],['routines']
Integrability,"I'm the one who created that warning message, so I can fill in some details about when and why that error message occurs. For adaptive mesh refinement, SU2 looks at each element and checks how important it would be to divide that element. It then assigns a numeric value (a ""sensor"") to each element representing the relative importance. That sensor is normalized by the max value and is assumed to be positive, so its range should be from 0 to 1. SU2 defines a number of elements that it wants to create (4455 in your case). It then loops through all the elements and looks for elements whose sensors fall above a threshold. That threshold starts at 0.999, close to the max value of 1. If an element has a sensor above that threshold, SU2 marks that cell for division. If it doesn't find enough elements, then it lowers the threshold and continues looking. That process continues all the way down till the threshold hits 0. Sometimes, SU2 can't find enough elements to adapt. The threshold goes all the way to 0, and there's still not enough. Then it prints that warning and continues. That's what you're seeing. The code only mentions triangles, quadrilaterals, and tetrahedrons as a guess to what's wrong. You'll notice it says your grid ""may"" have too high a percentage of other types. If your grid were composed solely of hexahedrons, for example, then it won't find any elements to adapt and print that warning message. There's no check to confirm that this guess is actually correct. In your case, you only have quads and triangles, so the guess is obviously mistaken. As to what is actually going wrong in your case, I would have to dig in a little deeper to find out what's going on. I would guess that your elements aren't being marked as ""divisible,"" but I'm not sure why.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-434924444:37,message,message,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-434924444,3,['message'],['message']
Integrability,I'm trying to build SU2 with NVIDIA HPC compiler.; I found error with meson about dependency problem.; I found cond_config.hpp without NVIDIA HPC macro check. Does this mean SU2 didn't consider NVIDIA HPC compiler?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1605845588:82,depend,dependency,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1605845588,1,['depend'],['dependency']
Integrability,"I'm with Juan on this... an in-house option in C++ would be best to avoid dependencies and have control of the algorithms for further tuning and easier application throughout the codebase. If anyone is willing to give it a shot, please let us know, and we can help with integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-224838550:74,depend,dependencies,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-224838550,2,"['depend', 'integrat']","['dependencies', 'integration']"
Integrability,"I've been doing some recreational reading on strategies that people have used for vectorization of fluxes but so far I have not thought of a way to reconcile them with the nice encapsulation we have of the numerics. For gradients (at least GG) and limiters on the other hand I do have ideas. By the way is there a branch on the repo for the work you, Francisco, Intel, and others did on this kind of stuff?. Yeah making solution variables members of the solver would avoid a lot of virtual calls but it would make it harder to eventually reach the solution for post processing, or in other areas like Integration/Iteration where the solution is manipulated directly by non-solver classes, we will see...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-513171591:601,Integrat,Integration,601,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-513171591,1,['Integrat'],['Integration']
Integrability,"I've been testing this a bit this afternoon, things look ok.; We can revisit the accessor functions for the entire domain once we can return the container by reference instead of copying the data first.; We can also look into code-generating accessors for markers for whatever volume accessors we define, once the names stabilize a bit, there are some inconsistencies in the naming of the old python wrapper functions. This needs regression tests now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772:400,wrap,wrapper,400,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772,1,['wrap'],['wrapper']
Integrability,"I've managed to compile the `_pysu2.so`, indeed, with the typical build process. Fiddling further with manual `swig` a bit, I narrowed where it produces the wrong output: in generating `SU2_APIPYTHON_wrap.cxx`. So, I preserved one made during the build, and then even got the Python 3 wrapper version by running `swig` with the `-py3` key. Both imports are going fine, so, I'm closing the issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/551#issuecomment-418307677:285,wrap,wrapper,285,https://su2code.github.io,https://github.com/su2code/SU2/issues/551#issuecomment-418307677,1,['wrap'],['wrapper']
Integrability,"I've messed around with this a bit in some of my other branches. Since I've been using python scripts, I've used the minimum CFL in the volume at the end of the flow solution (obtained from the history file) as the CFL in my adjoint runs. I figured that would be the largest CFL that could be applied everywhere and give a contractive iteration. Doing so significantly reduced the cost of the adjoint (obviously proportional to CFL_Min/CFL_Init). We could probably do even better and output the local CFL in the restart then load that into adjoint runs, maybe with a reduction factor if we want to be conservative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-673044213:323,contract,contractive,323,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-673044213,1,['contract'],['contractive']
Integrability,"I've thought about this a bit, and I think the best way forward for this BC is to assume thermal equilibirum in the subsonic flow. In that case the ongoing characteristic for total density can be used to solve for the full thermodynamic state. I think this probably is consistent with use cases such as fuel injection in scramjets, where the injected fluid would be in thermodynamic equilibrium.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1882#issuecomment-1399418401:308,inject,injection,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/1882#issuecomment-1399418401,2,['inject'],"['injected', 'injection']"
Integrability,"If I understand, you're calling `swig` manually? The typical way to set up the python wrapper is to use the typical build process (i.e. configure, make, make install) but to include the flag `--enable-PY_WRAPPER` during the configure step. The build process will automatically call `swig` for you, with the correct arguments. See the docs for more information: https://su2code.github.io/docs/Python-Wrapper-Build/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/551#issuecomment-404888496:86,wrap,wrapper,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/551#issuecomment-404888496,2,"['Wrap', 'wrap']","['Wrapper-Build', 'wrapper']"
Integrability,"If it works, why not? mpicxx is normally just a wrapper and uses the currently active g++ compiler.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744582401:48,wrap,wrapper,48,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744582401,1,['wrap'],['wrapper']
Integrability,"If this is not going to be merged then consider adding `FindMKL.cmake`, `CheckLinkerFlag.cmake` and `LibraryUtils.cmake` and updating `cmake_module_path` in `meson.build` so that meson can find MKL if it was installed from PPA since includes/libraries are not placed in a common directory. https://mesonbuild.com/Dependencies.html#cmake",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552432172:313,Depend,Dependencies,313,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552432172,1,['Depend'],['Dependencies']
Integrability,"If you are interested, @vdweide spent considerable time between 2003 and 2008 writing a multiblock-structured turbo machinery code called SUmb, as part of the DoE ASCI program. SUmb, although written in Fortran90/95, had all of the interpolation capabilities that you need for turbo machinery computations when radial inlet / outflow profiles (Tt, Pt, flow angles, static pressure, etc.) are given as inputs on a radial grid whose spacing does not match that of the actual computational grid. You may consider creating some interpolation functions (with all the safeguards and error codes) in C++ based on the SUmb code (which was structured in a C++-like way) or at least take inspiration from that approach to identify interpolation utilities / libraries in C++ that could be used for the same purpose. Both @vdweide and I can provide you with access to the appropriate routines / functions in SUmb. On Sep 20, 2019, at 3:30 PM, Aman uz zaman Baig <notifications@github.com<mailto:notifications@github.com>> wrote:. @clarkpede<https://github.com/clarkpede> Thanks for your response! My work in focused on Turbomachinery and very frequently we need to have inlet profiles. I hope my work will give a neater, cleaner way of making this possible, though I also used python scripts in the past. ‚Äî; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/791?email_source=notifications&email_token=AA5FFRDZYQ56RTPMG7RHC6DQKVFJ5A5CNFSM4IYRTZJKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD7IBREI#issuecomment-533731473>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AA5FFRCUZWNCGUIGYDSADO3QKVFJ5ANCNFSM4IYRTZJA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/791#issuecomment-533740827:872,rout,routines,872,https://su2code.github.io,https://github.com/su2code/SU2/issues/791#issuecomment-533740827,1,['rout'],['routines']
Integrability,"If you are looking for another way to view all of the current config options, you can find them all directly in config_structure.cpp under the routine SetConfig_Options(). We also have a script that should be able to parse this portion of code automatically to give you a clean list, but it might need to be fixed up a little. That script is parse_config.py and can be found in SU2/SU2_PY/.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/277#issuecomment-221687875:143,rout,routine,143,https://su2code.github.io,https://github.com/su2code/SU2/issues/277#issuecomment-221687875,1,['rout'],['routine']
Integrability,"If you can continue on this one for bit more while we wrap up #1560 (which also had some changes in some regressions) it would help us.; You'll need to disable specific CGNS or HDF5 warnings in the respective meson.build files (in externals/cgns/...), it took some time to get our code warning-free and we shouldn't go back on that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619#issuecomment-1131659297:54,wrap,wrap,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619#issuecomment-1131659297,1,['wrap'],['wrap']
Integrability,"If you don't mind I'll leave this question open for now.; I'm planning to provide a simplified example setup later on, once I've had time to properly dive into the wrapper API.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553#issuecomment-1071052958:164,wrap,wrapper,164,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1071052958,2,['wrap'],['wrapper']
Integrability,"If you have a solution that allows you to use system-wide via an option and self-contained by default, please open a pull request.; As long as this option warns about having to manage dependencies manually I'm fine with it.; If you know a clean way of detecting the system-wide ninja and bypassing the ninja dependency that would also be an improvement.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1450430036:184,depend,dependencies,184,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1450430036,2,['depend'],"['dependencies', 'dependency']"
Integrability,"If you look at the testing history, commit 4f5f3ed doesn't pass the regression tests, while commit 8551cac does. Only two tests are failing on 4f5f3ed: `discadj_topol_optim` and `discadj_fsi_airfoil`. The difference between the two commits is a simple change. I changed the `SU2_MPI::Error` routine to give a return status of `EXIT_FAILURE` instead of `0`. Since `0` is conventionally defined as a successful program exit, returning `EXIT_FAILURE` makes more sense than returning `0` when `SU2_MPI::Error` is called. So why did that change cause the regression tests to fail? My suspicion is that these two tests have been exiting with an error for some time, but these regressions were not picked up by Travis since SU2 kept on returning `0` (i.e. success). Changing the exit code of `SU2_MPI::Error` doesn't cause any errors, but it will expose errors that are (sometimes silently) occurring. @pcarruscag I think you added these tests. Any idea why they're failing?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-462951152:291,rout,routine,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-462951152,2,['rout'],['routine']
Integrability,"If you type ""git log"", is this the first message you see?; ```; commit 3f9402f499dfba9b5a7f633fda1e452e48722e40; Merge: c0867da 4f9bc2f; Author: Jessie Lauzon <jtlau@users.noreply.github.com>; Date: Fri Mar 6 13:52:14 2020 -0800; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-600843376:41,message,message,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600843376,1,['message'],['message']
Integrability,"In CNSSolver, we do in BC_Isothermal_Wall_Generic:; ```; if (!cht_mode) {; Twall = config->GetIsothermal_Temperature(Marker_Tag) / Temperature_Ref;; }. ```. And we do not check for cht_mode in IncNSSolver. I think this might be the root cause of entering this routine? ; @Cristopher-Morales can you check this?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2281#issuecomment-2111147187:260,rout,routine,260,https://su2code.github.io,https://github.com/su2code/SU2/pull/2281#issuecomment-2111147187,1,['rout'],['routine']
Integrability,"In my case I need to build like this:; ```; export CC=mpicc.mpich; export CXX=mpicxx.mpich; export CXXFLAGS=""-march=native -funroll-loops -ffast-math -fno-finite-math-only"". ./meson.py build --optimization=2 --warnlevel=3 -Denable-tests=true --prefix=$PWD/build -Dcustom-mpi=true -Dwith-omp=true; ./ninja -C build install; ```; Maybe building with OpenMP makes a difference.; The unit test output is; ```; ../UnitTests/Common/toolboxes/ndflattener_tests.cpp:78: FAILED:; REQUIRE( nd3[r][0][0] == 0.7 ); with expansion:; 2.0 == 0.7; ```; valgrind does not pick up anything on the unit test, only on the new test case added in #1892 ; The expected output is as shown in hybrid_regression.py (note that the testcases branch is not develop).; When the UB manifests the residuals are not the expected (by varying orders of magnitude depending on the spurious value of wall roughness).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1385691650:828,depend,depending,828,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1385691650,1,['depend'],['depending']
Integrability,"In terms of file organisation I can think of two strategies, one would be grouping them according to parent class, numerics, solver, etc. this would maybe make navigation easier for people who work on the code daily but it does little more than what the naming convention already does. The other would be to group families of classes and that, I think, would help people who are less familiar with the code, so for example numerics, solvers, variables, etc. used for fluid simulations would be separate from the ones used for other physics. The main re-compilation trigger is probably the config, every file includes it and not all need it. Not much can be done here because most classes do use the config in some way but we could try to minimise how much the dependency spreads by:; - Reviewing what cpp files actually need to include config_structure.hpp; - Including from the cpp and using a forward declaration on the corresponding hpp. Other sensitive ""triggers"" are the header files of classes with many children (solver, numerics, and variable) splitting the header files for these (maybe by family for small classes to avoid an explosion of hpp files) would allow working on a child class without re-compiling all others so often. The clients of CSolver would only include the header for the abstract class so those too would be shielded from changes in children classes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-423970045:760,depend,dependency,760,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-423970045,1,['depend'],['dependency']
Integrability,"In the process of making the MG routines OpenMP-friendly, I'll also restructure and clean those files (CIntegration & co).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/824#issuecomment-583742554:32,rout,routines,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/824#issuecomment-583742554,1,['rout'],['routines']
Integrability,"Indeed thats a bug when you enable the python wrapper... I am gonna solve this soon. For the time being just compile the normal and AD binaries separately by going to SU2_BASE and SU2_AD and `run make install` in each of them. You should see the same error again in SU2_AD, but you can ignore it, everything should have been compiled fine. Best,; Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-332762075:46,wrap,wrapper,46,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-332762075,1,['wrap'],['wrapper']
Integrability,"Indeed, the compilation with AD support is not compatible with the Python wrapper yet. If you are not interested in using the wrapper, just remove the --enable-PY_WRAPPER option and it should be OK. In general, if you want to compile SU2 with the wrapper in parallel, mpi4py has to be properly installed on your system. As the wiki says, the easiest way to install it is by using python-pip (example for Linux).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-332791823:74,wrap,wrapper,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-332791823,3,['wrap'],['wrapper']
Integrability,Is it ok if I add a MeDiPack update for const correctness of the scatter routines to this PR?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1133#issuecomment-745289502:73,rout,routines,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/1133#issuecomment-745289502,1,['rout'],['routines']
Integrability,It has occurred to me that perhaps I need to compile hdf5 on my system for the parallel integration of CGNS with OpenMPI? I think this might be why make is throwing that error. I'll report back after trying it. Amir,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/659#issuecomment-469467911:88,integrat,integration,88,https://su2code.github.io,https://github.com/su2code/SU2/issues/659#issuecomment-469467911,1,['integrat'],['integration']
Integrability,"It is compiler dependent, I got the warning with clang with warnlevel 2, now it will probably not show the warning because I put an ""if false"" around that part of the code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1171#issuecomment-765641337:15,depend,dependent,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/1171#issuecomment-765641337,1,['depend'],['dependent']
Integrability,"It is not core dependent (I have tested on 2, 10, and 30 cores). Sometimes I get no error message at all, just a ""# of processes were killed"" then it remains frozen. And here is the error log for the QuickStart (same issue); [QuickStartLog.txt](https://github.com/su2code/SU2/files/4576792/QuickStartLog.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-623648419:15,depend,dependent,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623648419,2,"['depend', 'message']","['dependent', 'message']"
Integrability,"It is now possible to define more complex functions in a separate file called `functions.su2x`. The functions defined there are available in the inline expressions. You can either give the functions explicit arguments or you can use them without any arguments. All fields are available in the global scope. Which variables are available depends on the context in which the function is used in the code. . functions.su2x:; ```; function dragOverLift(){; l = LIFT;; d = DRAG;; return d/l;; }. function speedOfSound(gamma){; p = PRESSURE;; d = DENSITY;; return sqrt(gamma*p/d);; }; ```. config file:; ```; SCREEN_OUTPUT=(INNER_ITER, WALL_TIME, RMS_DENSITY, {dragOverLift()}); VOLUME_OUTPUT = (COORDINATES, SOLUTION, {speedOfSound(1.4)}); ```. The language is much more flexible and allows also for if-statements, loops, maps and so on. For the output it does not make that much sense, but for initial conditions it might be useful later.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913#issuecomment-605486038:337,depend,depends,337,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-605486038,1,['depend'],['depends']
Integrability,It looks like the builds are failing because of swig (python wrapper) and a missing definition of size_t.; What does OMPT stand for? OpenMP threads? (Google was not helpful),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1214#issuecomment-788213078:61,wrap,wrapper,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214#issuecomment-788213078,1,['wrap'],['wrapper']
Integrability,It looks like the regression tests fail because there is an additional `------------------------------ Begin Solver -----------------------------; ` at the end of the output of the python wrapper test cases.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-356044234:188,wrap,wrapper,188,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-356044234,1,['wrap'],['wrapper']
Integrability,"It seems like your situation may have been resolved, but for archival purposes, I'll list my workaround here. This problem occurs when you've installed python packages in two different locations. This could be due to installing some python packages in a system directory (e.g. `/usr/lib/`) and some in a user directory (e.g. `~/.local/`). SU2's build process is set to automatically detect the default package location, but it's not equipped to handle multiple package locations. There are some hardcoded includes, but these only work for python 2.7. I don't consider this a bug *per se* because multiple python package directories is not a standard use case. #### The symptoms. When building SU2 with the python wrapper you'll see the following error during the swig build:; ```; <install directory>/../SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; ```; But mpi4py is indeed installed on your system and it's on your python path, as confirmed by opening a python terminal and running `import mpi4py`. #### The easiest workaround. Switch to a [virtualenv](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/). This will ensure that all of your python packages are stored in single location. #### Alternate workaround. In this method, you change the hardcoded includes to match mpi4py's package location. First I figure out where my mpi4py is installed. I start a terminal session of python using the python environment I want to use (in this case, it's python 3.6), and then run:; ```; from mpi4py import MPI; MPI; ```. Since I have mpi4py installed on your system and it's on my python path, I see something like:; ```; <module 'mpi4py.MPI' from '/home/clarkpede/.local/lib/python3.6/site-packages/mpi4py/MPI.cpython-34m.so'>; ```. The `/home/clarkpede/.local/lib/python3.6/` directory is where my mpi4py package is installed. But the swig compile command includes `/home/clarkpede/.local/lib/python2.7/`. That's not the right directory! So first I ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722#issuecomment-515693590:713,wrap,wrapper,713,https://su2code.github.io,https://github.com/su2code/SU2/issues/722#issuecomment-515693590,2,['wrap'],['wrapper']
Integrability,"It's a bit more involved because we want to support ""offline"" mode. But that's what we do with dependencies that we cannot copy due to license restrictions. With that said Nijso has probably fought enough with unit tests for the rest of the year, so if you want to send a pull request our way you are most welcome :); Cheers",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1726#issuecomment-1198903380:95,depend,dependencies,95,https://su2code.github.io,https://github.com/su2code/SU2/pull/1726#issuecomment-1198903380,1,['depend'],['dependencies']
Integrability,"It's not always the case that using a restart file is continuing from a simulation. For example, if one has a simulation that has a similar solution as a seed. An example would be doing optimization and using a nearby flow solution. Here, having the iteration count start from zero is useful, because it's the more accurate measure. We would also have to this about how this interfaces with MAX_ITER. Right now it's really clear, but which does it mean when iterations don't start from zero?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/99#issuecomment-103239930:375,interface,interfaces,375,https://su2code.github.io,https://github.com/su2code/SU2/issues/99#issuecomment-103239930,2,['interface'],['interfaces']
Integrability,It's the other right hand rule where you wrap the fingers around a vector,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025#issuecomment-1547871429:41,wrap,wrap,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025#issuecomment-1547871429,1,['wrap'],['wrap']
Integrability,"Juan,. I think that having the flexibility to apply wall functions on only a subset of the viscous wall boundaries would be useful. E.g., if you are interested in a wing, you can apply integration to the wall there, but apply wall functions on the fuselage. My preference would be to have a dedicated BC type for that, i.e. Tom's second suggestion. Apart from this, we can have the different wall model types as a single input parameter, i.e. you apply the same wall model type for all viscous boundaries. Or would you like to have the flexibility to specify this as well per individual marker?. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327374728:185,integrat,integration,185,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327374728,1,['integrat'],['integration']
Integrability,"Juan,. Indeed, it is desirable that at the highest level the details of the time integration scheme and number of zones per discipline should not be visible. The question is whether that is achievable for all combinations you can think of. This is especially the case for the time integration schemes. E.g. suppose you would like to use a multi-stage time integration scheme for a multi-physics problem. To obtain the design accuracy in time, this implies that the loop over the number of time stages is outside the loop over the number of physical disciplines. Hence at a very high level in the hierarchy, the details of the time integration should then be known. The situation becomes even more complicated when one would like to employ time integration schemes that allow for time accurate local time stepping, e.g. the ones we are currently working on for the DG solver. I won't bore you with all the details here, but those schemes basically require the loop over the multiple disciplines to be between the predictor and corrector step, while both these steps consist of multiple stages. Although it is probably possible to come up with a data structure that supports all this, the question is whether this is desirable. Apart from the fact that it would require a major overhaul in the high level design of SU2, the implementation will be less readable, especially for people that will be starting with the code. Also the parallelization may become significantly more complicated. The alternative is that for unsteady multi-physics problems, we put the restriction that only single stage time integration schemes can be used, e.g. DT_STEPPING_1ST and DT_STEPPING_2ND. In that case, the details of the time integration scheme can be hidden at the driver level, where we then simply have a loop over the number of physical disciplines. The consequence of course is that more advanced time integration schemes will not be available for multi-physics problems. In the above I just tried to picture w",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328441926:81,integrat,integration,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328441926,10,['integrat'],['integration']
Integrability,"Just a detail: I noticed that we get the print messages three times now, presumably for all multigrid levels? This is just aesthetic, but is it possible print only the first message and to suppress all following ones?. Setting rotating frame grid velocities.; Rotational origin (x, y, z): ( 4.77293, 2.52512e-06, -0.0373385 ); Angular velocity about x, y, z axes: ( 0, 0, 0 ) rad/s; Translational velocity in x, y, z direction: (-135.786, 0, -9.49509).; Rotational origin (x, y, z): ( 4.77293, 2.52512e-06, -0.0373385 ); Angular velocity about x, y, z axes: ( 0, 0, 0 ) rad/s; Translational velocity in x, y, z direction: (-135.786, 0, -9.49509).; Rotational origin (x, y, z): ( 4.77293, 2.52512e-06, -0.0373385 ); Angular velocity about x, y, z axes: ( 0, 0, 0 ) rad/s; Translational velocity in x, y, z direction: (-135.786, 0, -9.49509).; Rotational origin (x, y, z): ( 4.77293, 2.52512e-06, -0.0373385 ); Angular velocity about x, y, z axes: ( 0, 0, 0 ) rad/s; Translational velocity in x, y, z direction: (-135.786, 0, -9.49509).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1551611997:47,message,messages,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1551611997,2,['message'],"['message', 'messages']"
Integrability,"Just in case it is helpful, the Abseil library from Google is a nice way to use some C++14 and later features with only a C++11 requirement. We could consider integrating if it makes life much easier... https://abseil.io",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-670974089:159,integrat,integrating,159,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-670974089,1,['integrat'],['integrating']
Integrability,"Let me recall the other sub-issues reported by @suargi:. **Third issue**; > After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. I was able to partially reproduce this with @suargi's help, by modifying `SU2/TestCases/rans/rae2822/turb_SA_RAE2822.cfg`, setting MGLEVEL=6 (instead of 3) and MGCYCLE=FULLMG_CYCLE (instead of W_CYCLE). This could become the new regression test by the way. Both with `mpirun -n 3` and `mpiexec -n 3` we observed non-existing point IDs of the normal neighbor. In #1430 I describe what I think is the problem. For `mpirun -n 2` and `mpiexec -n 2` I get another kind of error, I'll further investigate this. We did not see a difference in behaviour of `mpirun` and `mpiexec` on my system however. **Edit**: My version are `mpirun (Open MPI) 4.1.0` and `mpiexec (OpenRTE) 4.1.0`. **Fourth issue**; > Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-964163647:127,depend,depending,127,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-964163647,1,['depend'],['depending']
Integrability,"Looking ok for me now on ubuntu, but I am getting an error on OS X w/ Apple LLVM:. In file included from ../../../Common/lib/../src/mpi_structure.cpp:43:; In file included from ../../../externals/medi/src/medi/medi.cpp:29:; ../../../externals/medi/src/medi/ampi/ampi.cpp:39:28: error: default initialization of an object of const type 'const medi::AMPI_IN_PLACE_IMPL' without a user-provided default constructor; const AMPI_IN_PLACE_IMPL AMPI_IN_PLACE;; ^; {}; 296 warnings and 1 error generated.; make[2]: *** [../src/libSU2_AD_a-mpi_structure.o] Error 1. Also, lots of overloaded virtual warnings for multiple functions in the passive type header, such as:. ../../../externals/medi/include/medi/ampi/../../../generated/medi/../../include/medi/ampi/typePassive.hpp:159:19: warning: 'medi::MpiTypePassive<medi::PairWithInt<long double> >::createModifiedTypeBuffer' hides overloaded virtual; function [-Woverloaded-virtual]. Lastly, I really like the new error routine. Nice work. My only (picky) comments are on the formatting: could you please add a couple of empty lines of white space after the exit? The SU2 errors are getting lost with some other MPI clean up output and are not easy for the user to see immediately. One more personal preference: I would go without the line btwn the function and error message for clarity and, for consistency with the successful exit, remove the ""Exiting now..."" in favor of something like. ------------------------- Error Exit (SU2_CFD) ------------------------. What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-350111995:960,rout,routine,960,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-350111995,2,"['message', 'rout']","['message', 'routine']"
Integrability,"Looks good, thanks @vdweide, @economon.; I took a quick peak, it looks like there wasn't any change to the interpolation routines - can this same tree search be applied to finding nearest neighbors in the interpolation routines, and if so did you look into that yet or would that be a project for the future?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/288#issuecomment-231213370:121,rout,routines,121,https://su2code.github.io,https://github.com/su2code/SU2/pull/288#issuecomment-231213370,2,['rout'],['routines']
Integrability,"Looks like the commented code was added here (https://github.com/su2code/SU2/commit/b5db893bcc57a67abbbe43ddd5a87753ec61d23b) but never activated. The Matrix* routines are not being used anywhere at the moment. Do you see some value in testing it out? Otherwise, might be best to remove so we aren't carrying around dead code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/653#issuecomment-485039016:159,rout,routines,159,https://su2code.github.io,https://github.com/su2code/SU2/pull/653#issuecomment-485039016,1,['rout'],['routines']
Integrability,"Made some progress on this. The build system now automatically finds the Python directories and library, so the wrapper is now built against both Python 2.7 and 3.6 in the test suite. However, some tests are still failing. Any ideas what might be going wrong?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-326741839:112,wrap,wrapper,112,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-326741839,1,['wrap'],['wrapper']
Integrability,"Made the last of the changes that I wanted too in connection to the comments provided by @economon and @pcarruscag . Just as a review of the things I changed: . 1) Changed the error message; 2) Implemented the UQ methodology for a non-ideal fluid and for both gradient methods (AvgGrad and AvgCorrectedGrad). ; 3) generalized the eigen-decomposition functions for order n matrices. Also made the functions static so that they can be used without the need for an instantiation of the CNumerics class; 4) Improved performance by moving variable declarations to the class constructor for CNumerics; 5) Changed UQ config option names to be more specific. Added an output message for when people use the previous names.; 6) This instigated some changes to the TestCases config files, and to the compute_uncertainty.py script.; 7) Some general code clean up. Let me know if there are any other improvements that I should include.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-434551782:182,message,message,182,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-434551782,2,['message'],['message']
Integrability,"May I add my 10 cents: I also encountered this problem, starting from ver 7 if I recall correctly. It happens on a cluster using rdma protocol and NFS, with Redhat Linux (matches the Centos configuration listed above). It doesn't happen on a single machine with several cores using Ubuntu (my LT). Fortunately, it aborts after all writing is complete... Moving to ascii output (RESTART_ASCII, READ_BINARY_RESTART=NO, WRT_BINARY_RESTART=NO had no effect (still aborts).; I think that it is a problem related to the machine setup/system SW. However, it doesn't happen with other codes or previous versions of SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-624457511:134,protocol,protocol,134,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624457511,1,['protocol'],['protocol']
Integrability,Maybe this will help.. can you please try setting the viscosity and eddy viscosity inside V_reflected in the if (viscous) {} section of the BC_Sym routine with something like:. ```; /*--- Set laminar and eddy viscosity at the reflected state ---*/. V_reflected[nDim+5] = node[iPoint]->GetLaminarViscosity();; V_reflected[nDim+6] = node[iPoint]->GetEddyViscosity();; ```,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513442969:147,rout,routine,147,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513442969,1,['rout'],['routine']
Integrability,"Maybe we can approach it from the minimal set of features you need.; Mesh deformation seems to work fine, then you are applying the gust via the farfield?; Then for the free-flying part maybe the best would be a translating moving frame (you'd need to implement the acceleration term). (Translating the mesh over large distances would lead to floating point issues); For rotation maybe rigid rotation would be the easiest route? This would not require the rotating frame source term.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1495721964:422,rout,route,422,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1495721964,1,['rout'],['route']
Integrability,"Maybe we could define the NO_OPTINAL_CONST based on the MPI Version. https://stackoverflow.com/questions/17772906/why-does-mpi-send-accept-void-source. Gives a hint as to when the transition was made. On Tue, 2017-11-21 at 19:53 +0000, Tim Albring wrote:. @talbring commented on this pull request. ________________________________. In .travis.yml<https://github.com/su2code/SU2/pull/473#discussion_r152384146>:. > @@ -20,7 +20,7 @@ branches:. env:; global:; - CXXFLAGS=""-O3 -Wall -Wextra -Wno-unused-parameter -Wno-empty-body -Wno-format-security""; + CXXFLAGS=""-O3 -Wall -Wextra -Wno-unused-parameter -Wno-empty-body -Wno-format-security -DMEDI_NO_OPTIONAL_CONST"". The problem is that depending on the actual MPI implementation (so for example MPICH, openmpi etc.) send buffer arguments might be declared as const or not. Unfortunately, there is no (easy) way to get that information automatically. It might be even different between versions of openmpi (on travis it is v1.6.5 and its necessary, locally I have v3.x, and its not)... so for now it is trial and error whether this is necessary or not. Maybe I can find that information somewhere, then I will provide it in the wiki. ‚Äî; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/473#discussion_r152384146>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AMWwAeCRxzq9FO4-6pkSHTDnihbtByhvks5s4yoygaJpZM4QmNie>. --. Max Sagebaum Chair for Scientific Computing, TU Kaiserslautern, Bldg/Geb 34, Paul-Ehrlich-Strasse, 67663 Kaiserslautern, Germany Phone: +49 (0)631 205 5638 Fax: +49 (0)631 205 3056 Email: max.sagebaum@scicomp.uni-kl.de URL: www.scicomp.uni-kl.de",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-346273506:685,depend,depending,685,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-346273506,1,['depend'],['depending']
Integrability,"Maybe we could try to implement a check for whether the file exists in the directory and make a standard alteration to the name. We would have to be careful though that this doesn't interfere with cases that depend on the output files - aka continuous_adjoint, finite_difference, etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/99#issuecomment-103646996:208,depend,depend,208,https://su2code.github.io,https://github.com/su2code/SU2/issues/99#issuecomment-103646996,1,['depend'],['depend']
Integrability,Merging this in - some other contributions depend upon it. Thanks @vdweide,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/676#issuecomment-489276631:43,depend,depend,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/676#issuecomment-489276631,1,['depend'],['depend']
Integrability,"Monika,. There is a chance we could work together on this‚Ä¶Eduardo Molina (copied) co-advised a short project last year on wall functions which made some progress but did not finalize an implementation. It may be a better starting point. Eduardo, can you comment where that code went?. I am also copying Matt S. who is interested in wall function implementations in SU2. Perhaps we can get everyone on the same page to get these working in the baseline state‚Ä¶and then improve them in various ways?. Best,. Juan. > On May 27, 2020, at 9:20 AM, monika1387 <notifications@github.com> wrote:; > ; > ; > Sure, now make sense why it is showing issues, Thank you for the; > confirmation!; > ; > On Wed, May 27, 2020 at 5:22 AM Pedro Gomes <notifications@github.com>; > wrote:; > ; > > I gave the wall function routines a cleanup in #975; > > <https://github.com/su2code/SU2/pull/975> and I think something is; > > missing, we compute the shear stresses but they are not considered in the; > > BC's of the NS solver.; > >; > > ‚Äî; > > You are receiving this because you commented.; > > Reply to this email directly, view it on GitHub; > > <https://github.com/su2code/SU2/issues/399#issuecomment-634539255>, or; > > unsubscribe; > > <https://github.com/notifications/unsubscribe-auth/ALJ3OXAF4VX5CFIJVJFLIDTRTTLVBANCNFSM4DN4N2YA>; > > .; > >; > ; > ; > -- ; > *Thank you,*; > ; > *Monika Chauhan *; > ; > *Graduate Research Assistant, Doctoral Program*; > ; > *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA 24061*; > *Cell# 540-998-5012*; > ‚Äî; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/issues/399#issuecomment-634777816>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AA5FFRFBZC767ZAD7HMXWQ3RTU4VPANCNFSM4DN4N2YA>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-634782860:802,rout,routines,802,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-634782860,1,['rout'],['routines']
Integrability,"Motti; Welcome to the community üôÇ; Did you install with mpi?; Best; Eran. On Wed, Apr 15, 2020 at 17:39 mottiadar <notifications@github.com> wrote:. > Hi Everyone.; >; > I'm new to SU2.; > Installed on my mac (Catalina) the parallel version 7.0.2.; > Also installed MPICH.; >; > I am not using bash but rather tcsh (maybe there is a problem there...); > Added the following lines to .tcshrc:; > setenv SU2_RUN /Applications/SU2/bin; > setenv PYTHONPATH $SU2_RUN; >; > I have tried to run the onera3D tutorial case in parallel and got the; > following message:; > % parallel_computation.py -f inv_ONERAM6.cfg -n 2; > Traceback (most recent call last):; > File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in; > main(); > File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; > options.compute ); > File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in; > parallel_computation; > info = SU2.run.CFD(config); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; > the_Command = build_command( the_Command, processes ); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in; > build_command; > raise RuntimeError('could not find an mpi interface'); > RuntimeError: could not find an mpi interface; >; > Ideas to what can I do?; >; > ‚Äî; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G6VMI65FZZ5IRC7BT3RMXBLRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/938#issuecomment-614081827:551,message,message,551,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614081827,5,"['interface', 'message']","['interface', 'message']"
Integrability,"Nice analysis @clarkpede. It is true that we simplify the Jacobians at the periodic boundaries, mostly to avoid issues with adding entries to the Jacobian from the neighbors that potentially do not live on our rank and to keep communication costs low (those neighbors are treated explicitly). This could be changed to communicate the full Jacobian.. but I am not sure it is worth the effort/cost. The approximation that is made should still be consistent though, because we only allow one of the repeated periodic nodes to participate in the linear solve with each nonlinear iteration, and then we communicate its update to its periodic pair. In short, the value of the solution should always be the same on periodic points with each iteration update, and if the problem converges to a steady-state (even in time stepping mode), the Jacobian should only affect convergence (the RHS should be the same). You could try the time stepping option with one of the RK methods to see if going fully explicit helps further isolate the issue. It could also be something related to the time step that is communicated. In the SetTime_Step() routine in the flow solver class, we do some special checks for time stepping mode to make sure that the minimum global time step is used in all cells. Might want to print out the dT communicated in the periodic comms or write the dT to the solution file to make sure everything is ok there too. Honestly, I don't think a ton of folks use the time stepping option in general with the FVM solver, so double-checking that it behaves well for a non-periodic problem could shed some light too, unless you have already done that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/763#issuecomment-524007345:1129,rout,routine,1129,https://su2code.github.io,https://github.com/su2code/SU2/issues/763#issuecomment-524007345,2,['rout'],['routine']
Integrability,"Nice progress @pcarruscag!. I like the concept of your SIMD-friendly class that will take care of the data structure under the hood coupled with a standard type of loop statement (w/ +SIMDLEN). This should make it pretty easy for folks to still modify the kernels without having to worry about the data alignment, and they can reuse the same simple 'for' construct repeatedly. . Another reason to have our own lightweight class for this is that you can avoid dependence on OpenMP for SIMD (although that feature looks to have potential and wasn't available until somewhat recently) as well as the intrinsics. In my experience, the latter is especially bad for portability and readability (part of why we left the CaF work in a separate repo). It starts to become so specialized that compiling and modifying become difficult. W.r.t. OpenMP, another roadblock there a few years ago was making sure it is interoperable with CoDi for the adjoint, but I know this has been worked on and may be available by now. Might keep an open mind about point vs. edge. In some places, we may be able to pump up the compute in our loops by fusing kernels, as previously discussed (and I am guessing you are working on this already with gradients/limiters). Could change the final performance numbers significantly. Lastly, I know you are not there yet, but it is worth considering whether you can reuse anything you are developing in the kernels here for the linear solver routines. At some point, you will successfully reduce the cost of the residual kernels (RHS) to the bandwidth limit, and the majority of the iteration cost will be in the linear solver (it is already about 50% of the iteration cost before optimization, if I recall). Before making final decisions on strategy, you should consider if it will help in any of the linear solver routines too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530440072:459,depend,dependence,459,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530440072,8,"['depend', 'interoperab', 'rout']","['dependence', 'interoperable', 'routines']"
Integrability,"Nice work already! If you click on 'Details' at the right of the failed Regression and Unit Testing cases you will see why they fail. I think one of the first things to do is go through these error messages ('variable may be used uninitialized', etc) and fix them so the regression tests will run.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810#issuecomment-1307771069:198,message,messages,198,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810#issuecomment-1307771069,1,['message'],['messages']
Integrability,"Nijso this type of change is too fragile I'm not going to approve it... There are initialization actions inside Run itself, it was not designed or tested to do single steps, and there's no chance this is going to work with all the features. Is this required to be able to initialize the solution? Convert this PR to adding the wrapper example and I'll thing about a better way of doing single steps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960#issuecomment-1464710802:327,wrap,wrapper,327,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960#issuecomment-1464710802,1,['wrap'],['wrapper']
Integrability,"No meson option yet, it is a very small one though, the whole system works by detecting `-fopenmp`.; Your second comment is the main argument against moving the parallel section further up.; Allocation routines have the highest risk of making a mess, but even seemingly innocuous things like the small auxiliary arrays we allocate e.g. in CSolver and then use in derived classes are a problem.; I am almost done making the FEA solver completely hybrid parallel and I had to refactor most uses of those arrays. This is also why I took a more functional approach to the new limiter and gradient routines. The way we use CConfig is also not thread safe, we would need to make all ""SetSomethings"" atomic, which would be monumental.; Initially I would have a few parallel sections (it is not too difficult to then move them up if we think that is the way to go) I want to use the FEA solver to get an idea for the relative performance, after seeing the effect of `OMP_WAIT_POLICY` I am optimistic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-566667503:202,rout,routines,202,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566667503,2,['rout'],['routines']
Integrability,"No problem at all. I think the issue was that others had merged the changes into develop here from the web interface and those changes needed to be pulled down into your local copy before you could push the changes to .travis.yml up. I have just made the change, and I see the tests are now running! We'll get back with a review soon.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-435170261:107,interface,interface,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-435170261,1,['interface'],['interface']
Integrability,No. I tried a couple of things but ran into problems with both of them and I haven't done anything about it since. The first was to use one of the old MPI routines (like Set_MPI_ActDisk) to couple the two faces so they can communicate the residuals with each other. This was quite cumbersome and I did not want to copy paste large chunks of code. The other one was to set the two faces as periodic boundaries with zero distance between them but if I remember correctly this did not work because the MatchPeriodic routine gave an error back then. Maybe I am misremembering and it might work now or maybe we need to create a new MatchInternal routine to make it work.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/986#issuecomment-1029888609:155,rout,routines,155,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-1029888609,3,['rout'],"['routine', 'routines']"
Integrability,"Not directly related to this PR, but I noticed an potential bug in the Friction Forces routine, line 2258. The if condition checks ; ; if (iDim == 3); instead of . if (nDim == 3); Could you fix this one too?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1074#issuecomment-697544036:87,rout,routine,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/1074#issuecomment-697544036,1,['rout'],['routine']
Integrability,Not without changing the meson.build script to treat blas and lapack separately (which I don't think we should do since a default build-from-source openblas will have both) or specifying a load of environment variables.; In said script you can try modifying `su2_deps += blas_dep` to; ```; su2_deps += blas_dep; su2_deps += dependency('lapack'); ```; Or maybe it will work if you just specify `-Dblas-name=lapack` and blas happens to be included as an automatic dependency of that.; Our documentation does state that:; >Note: The BLAS library needs to provide support for LAPACK functions. I'll update it with this arch linux special case when I get a minute.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632083173:324,depend,dependency,324,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632083173,2,['depend'],['dependency']
Integrability,"Now I am happy with the results of the code but the question now is: How to code this up nicely!; This concept of an additional iterated variable next to the solution variable is ""new"" to SU2.; 1. Add the Adjoint pressure-drop variables always to the existing arrays (`Solution`, `External`, `AD_InputIndex`, etc.) which would make for ugly allocation routines and one would have to mess with `nPoint` as one would prob extend the containers by one element. So I consider this direction to be a bit too intrusive as this concept is not needed for most applications anyway.; 2. Add an `Extended` part to all relevant copide methods and variables and keep that general for the different applications",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456:352,rout,routines,352,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456,1,['rout'],['routines']
Integrability,"Now that I am updating #790 to work with the new structure from this PR (#753), I am seeing that the aligned_alloc() function is not well defined on mac, so xcode/llvm builds are not working on mac at the moment. There are some issue related to C vs C++ with that (depends on the standard you choose for C or C++, 11 or 17, apparently). Might be some ways around it from reading comments by others on the issue: https://github.com/marian-nmt/marian-dev/issues/227. @pcarruscag : can you give this a quick look when you have some time? Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/753#issuecomment-541934596:265,depend,depends,265,https://su2code.github.io,https://github.com/su2code/SU2/pull/753#issuecomment-541934596,1,['depend'],['depends']
Integrability,"OK I Solved it by use version 7.2. this problem still exists for version 7.3.1. > @Zcaic nope, I add '\' before`'C:Program Files...` and the environment MSMPI_LIB64 finally like `\C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\`; > ; > I paste wrong error message before . the actual error message after I change the envirnment variable is from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\lib\\C:\\Program...` . just a more `\\`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-1194064916:259,message,message,259,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1194064916,2,['message'],['message']
Integrability,"OK, I see that some refactoring happened e.g. to the python wrapper in the meantime. What's the best way to resolve the conflicts? --> If I hit the Resolve conflicts button, there is nothing I can do.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1535961512:60,wrap,wrapper,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1535961512,1,['wrap'],['wrapper']
Integrability,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2132#issuecomment-1967081745:204,depend,dependabot,204,https://su2code.github.io,https://github.com/su2code/SU2/pull/2132#issuecomment-1967081745,4,['depend'],"['dependabot', 'dependency', 'dependency-updates']"
Integrability,OK. Who will send the messages?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/593#issuecomment-427597676:22,message,messages,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/593#issuecomment-427597676,1,['message'],['messages']
Integrability,"ON|OFF, disabled when building with Codi; * SU2_BUILD_PY_WRAPPER: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_SOL: ON|OFF, disabled when building with Codi; * Enable modules:; * SU2_ENABLE_CGNS:; * SU2_CGNS_CPPFLAGS: flags to pass when compiling CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON; * SU2_PARMETIS_CPPFLAGS: flags to pass when compiling Parmetis; * SU2_ENABLE_TECIO: ON|OFF; * SU2_TECIO_CPPFLAGS: flags to pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:2947,message,messages,2947,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,2,['message'],['messages']
Integrability,"Oddly enough, I changed the number of inner iterations to a high value so that it would converge each physical time step, and I still see non-deterministic output for the rotating cylinders case. . Perhaps these cases need to be flagged for checking if some folks using the sliding mesh interface have some time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-553099621:287,interface,interface,287,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-553099621,1,['interface'],['interface']
Integrability,"Oh yeah, @pcarruscag, I finally got it to work. I am wondering if we can add `-Dmpi-name` flag like we have a `-Dblas-name` flag because I think mpich is a very common MPI implementation and accommodating for it would be really beneficial, for people and the package both. The lapack thing was discussed in #991 earlier and I forgot I didn't have that change in my commit (it has been months). Thanks a lot!. @fertinaz, you might be able to get it to work with this change in `meson.build` file, like Pedro suggested:; > ```; > mpi_dep = [dependency('mpich', language: 'c', required : get_option('with-mpi')),; > dependency('mpich', language: 'cpp', required : get_option('with-mpi'))]; > ```; I had kept the `-Dcustom-mpi` flag as `false`; Make sure you export all the environment variables:; ```; export CC='/usr/bin/gcc'; export CXX='/usr/bin/g++'; export MPICC='/opt/mpich-3.3.2/bin/mpicc'; export MPICXX='/opt/mpich-3.3.2/bin/mpicxx'; export LD_FLAGS='-L/opt/mpich-3.3.2/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/opt/mpich-3.3.2/include'; export C_FLAGS='-I/opt/mpich-3.3.2/include'; export PKG_CONFIG_PATH='/opt/mpich-3.3.2/lib/pkgconfig'; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721493822:539,depend,dependency,539,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721493822,2,['depend'],['dependency']
Integrability,"Ok the ""simple"" version of ""going parallel"" whenever we get to a linear algebra operation did not make the cut.; On an older architecture there was a 10% slowdown of the linear solvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does n",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:643,rout,routines,643,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,6,['rout'],"['routine', 'routines']"
Integrability,"Ok time to share some results after #753.; I deviated a bit from the original plan in that I skipped the contrived strategy of using a wrapper container with a special [] operator (as it had a slight whiff of hackery), and went straight to adding ""iNode"" to the methods of CVariable instead (me and a few lines of python...). The first rule of performance is **""measure it before changing code""**, I broke that rule because as my first post illustrated non contiguous storage at the scale we had is a real killer. With that out of the way, to some extent at least (the layout may not be optimum still) measuring is essential to decide what to do next. This is the case I am using:; ![case](https://user-images.githubusercontent.com/38071223/63288257-27d9d580-c2b4-11e9-9899-8b44b230b8bb.png); It is a bad wing design (NACA0012) with some sweep and taper and a home-brew mesh whose quality rivals that of the design (it converges and the flow does not separate...).; The mesh is just over 500k vertices (so it ""fits"" comfortably in my pc) the y+ is not great (obvs) but the aspect ratios are 200 and 2000 in the chordwise and spanwise directions respectively, so not exactly linear solver friendly either. Some settings which are kinda optimal:; - Mach 0.6, AoA 2 degrees;; - SST (1st order);; - CFL 20 (higher and residuals would limit-cycle (regardless of linear solver settings); - Roe;; - MUSCL - Green-Gauss and Venkat-Wang;; - FGMRES + LU_SGS to 0.05 residual (about 3 iters on avg.);; - 2 levels of MG (1,1,2 iterations, all zeros for other stuff and 0.7 damping both ways);. The case is light on the linear solver and therefore stands to benefit the most from better data layout. Conversely, applications that can take higher CFL / or use central schemes will not benefit as much. **Running this from scratch to residual of 10^-8 on a couple of Xeon E5-2650v4 (24c total) shows a speedup of 1.4 and just over 10% lower memory usage.**; Those numbers will be better for an equivalent 2D case sin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-522730951:135,wrap,wrapper,135,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-522730951,2,['wrap'],['wrapper']
Integrability,"Ok, now `CPoint` stores information on the closest wall element location in vectors `ClosestWall_{Rank,Zone,Marker,Elem}`. `CPoint::SetWallRoughness` performs the lookup, inserting the location into the map (rank,zone,marker)->(roughness) that is provided to `CPoint::SetWallRoughness` as an argument of a new templated type `NdFlattener`. I wrote the new file `Common/include/ndflattener.hpp` some time ago and I think it is a nice generalization of the. > custom type with interface (rank, [zone,] marker). you're referring to. In short, it allows to. - serialize pointer-to-pointer-to... arrays into 1D arrays, as many as there are indices. The array corresponding to the last index stores the data and the others store indices.; - And to `MPI_Allgatherv` them, adding a new index for the rank. Using it detaches a bit from the original goal of this PR (which was to fix some illegal reads reported by valgrind, because the wrong array of roughnesses was accessed) but I think it's a useful structure. Probably I should also add some tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-841123844:475,interface,interface,475,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-841123844,1,['interface'],['interface']
Integrability,"Ok, now you have tracked it.; I was making my tests with master branch (I used the develop with meson, but I thought to be conservatiev here). That way my most recent activity in the git log was from Tim by the end of February.; Switching to develop, then the git log message match your comment above.; Further, preconfig, make and make install work without any patches.; Cool; another note: -DNDEBUG note recognized by preconfigure (nor --DNDEBUG).; I suggest to update the master branch, since it is supposed to be a stable distribution",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-601077460:268,message,message,268,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-601077460,1,['message'],['message']
Integrability,"Ok, w.r.t. 'if it works, why not', unfortunately, it doesn't work! I guess that as you mentioned, if it is used as a wrapper for the underlying 'new' gcc that isn't aware of the system MPI, then it actually doesn't find the MPI linked with the MPI-aware `MPICC` and `MPICXX` then?. ```; ninja: Entering directory `build'; [5/967] Compiling C object externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o; FAILED: externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o ; /home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-gcc -Iexternals/parmetis/libparmetis.a.p -Iexternals/parmetis -I../externals/parmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -O3 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -isystem /home/user/anaconda3/include -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include -fPIC -DUSE_GKREGEX -MD -MQ externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o -MF 'externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o.d' -o externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o -c ../externals/parmetis/libparmetis/weird.c; In file included from ../externals/parmetis/libparmetis/parmetislib.h:21:0,; from ../externals/parmetis/libparmetis/weird.c:15:; ../externals/parmetis/include/parmetis.h:17:10: fatal error: mpi.h: No such file or directory; #include <mpi.h>; ^~~~~~~; compilation terminated.; [24/967] Compiling C object externals/metis/libmetis.a.p/GKlib_gkregex.c.o; ninja: build stopped: subcommand failed.; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744586926:117,wrap,wrapper,117,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744586926,1,['wrap'],['wrapper']
Integrability,"Ok. I can duplicate your error on my system. The error seems to be specific to gcc 8.1. If I switch to gcc 7.2 while keeping everything else the same, the errors disappear and the build completes succesfully. Unfortunately, I'm not one of the developers who helped write the wrapper. So I'm out of my depth here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/551#issuecomment-404937979:275,wrap,wrapper,275,https://su2code.github.io,https://github.com/su2code/SU2/issues/551#issuecomment-404937979,1,['wrap'],['wrapper']
Integrability,"On both questions the answer is yes. Option 1 can be implemented right now but will require the creation of temporary objects. Option 2 can directly forward the data to the blas routines. The tool I am developing is no tool for a specific linear algebra package. The idea is, that the tool parses the header files of the library. The user has then to define which objects are active lvalues and the derivatives for each operation in the library. For small an clear interfaces this is no problem and works already quite good. For large libraries like Eigen I adopted a whitelisting approach. That is, every function needs to be manually whitelisted to trigger the expression generation of the tool. In a prototype way I have also implemented an approach where only the active lvalues need to be defined and the tool looks then for all required functions and other objects that depend on these active objects. Long story short, the tool is designed to handle ""any"" library. It is even possible to mix several libraries together. My current status on this project is, that I am now through with the parsing of the header files and the generation of the expressions. This works quite well for Eigen which is a hardcore testcase, since every possible programming tweak in C++ is used here. The next step is to add the AD part to the expression generation process. I hope that in one or two month this will be finished and I can provide a first beta release.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-463561018:178,rout,routines,178,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-463561018,6,"['depend', 'interface', 'rout']","['depend', 'interfaces', 'routines']"
Integrability,"On running with a single core, I also get a similar error (attached below). In this case, I'm guessing that it doesn't like the 2D element? This seems strange as it managed to handle a few cases where flat cells were also present, do you have any thoughts on this?. Also, is it possible to identify the location of the cell based on the error message?; Many thanks,; Tim; ```; ------------------------ Geometry Preprocessing ------------------------; Setting point connectivity.; Renumbering points (Reverse Cuthill McKee Ordering).; Recomputing point connectivity.; Setting element connectivity. Error in ""virtual void CPhysicalGeometry::SetBoundVolume()"": ; -------------------------------------------------------------------------; The surface element (0, 133348) doesn't have an associated volume element; ------------------------------ Error Exit -------------------------------. application called MPI_Abort(MPI_COMM_WORLD, 1) - process 0; SU2_CFD failed with retcode 1; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-493931406:343,message,message,343,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-493931406,1,['message'],['message']
Integrability,"On the LU part we have an interface with PaStiX.; In SU2 Eigen is not used to solve distributed(mpi)-sparse systems, just small dense problems. Also to my knowledge Eigen does not support MPI at least a couple years ago its interface with PaStiX was threads only.; I opted to develop the interface with PaStiX rather than PETSc because it seemed the support for the block-sparse format we use was limited, i.e. compatible with only a few linear solvers.; There are instructions on how to build SU2 with PaStiX in the TestCases folder. I had a quick look at your paper, in SU2 the linearization of F (the A matrix you need, I believe) is not exact, for an exact linearization you would need to use forward AD but then any system would need to be solved iteratively using matrix-free products.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1141#issuecomment-754109686:26,interface,interface,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141#issuecomment-754109686,3,['interface'],['interface']
Integrability,"On the topic of Python distributions: I agree.. I typically build up a local Enthought Canopy Python (command line only) on clusters to have control too. Although, it seems that their new versions (canopy 2+) deprecate the command line interface somewhat, even though Py 3+ is available. Perhaps I'll give Anaconda a try then soon, thanks for that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-321867755:236,interface,interface,236,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-321867755,1,['interface'],['interface']
Integrability,"Only the testcases `channel_2D`, `channel_3D` fail. Both use sliding mesh interfaces, but there are also other sliding mesh testcases that do not fail. The residuals are still very close and also the flow fields look similar. I thus adapted the stored residuals in 9d8f194. Let me know if you would like to investigate the changed residuals further.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670:74,interface,interfaces,74,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670,1,['interface'],['interfaces']
Integrability,"PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Relea",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7550,Message,Message,7550,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Message'],['Message']
Integrability,"Parallel preaccumulations must not share any variables. In particular, they must not have any common inputs and outputs. I suspect (judging from the code) that the preaccumulations treated in 781092a3533caf36589426e99293c2b20d332726 violate this pattern, and that this is the reason why excluding them makes several hybrid parallel AD tests pass. Other preaccumulations might be affected as well. The correctness of preaccumulations inside numerics objects, for example, depends on the values of pointers like `V_i`, `V_j`. Other preaccumulations might look wrong but are ok because common variables are prevented by color loops.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-871002042:471,depend,depends,471,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-871002042,1,['depend'],['depends']
Integrability,"Pete, Tim,. I have had a long standing interest in getting this working and would be happy to help. The (partial) implementation that is there is already 3-4 years old, so it will have to be updated, but we can discuss some of the details of the implementation and how it can be done both more efficiently and for both compressible formulations and adaptive wall functions. We can start a thread separately (jjalonso@stanford.edu<mailto:jjalonso@stanford.edu>) and perhaps have a telecon to kick things off. My availability for this improves after the next 2 weeks. Best,. Juan. On Jun 7, 2017, at 1:19 PM, Tim Albring <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi Pete,. we appreciate your help on that. I just updated the branch feature_Wall_Functions<https://github.com/su2code/SU2/tree/feature_Wall_Functions> to be up-to-date with develop. The main routines dealing with the wall functions are in solver_direct_mean.cpp<https://github.com/su2code/SU2/blob/feature_Wall_Functions/SU2_CFD/src/solver_direct_mean.cpp#L16612> and solver_direct_turbulent.cpp<https://github.com/su2code/SU2/blob/feature_Wall_Functions/SU2_CFD/src/solver_direct_turbulent.cpp#L2569>. Maybe @economon<https://github.com/economon> can tell you what exactly is missing there. Tim. ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/399#issuecomment-306912607>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxOvHCOSUFKDoizjyvrHbgyXgZ-vVks5sBwW8gaJpZM4NvG6w>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-306941656:879,rout,routines,879,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-306941656,1,['rout'],['routines']
Integrability,"Please re-check with latest commit (very small correction for a copy-and-paste-error from yesterday, not sure whether it has had some impact). I've run your test case again and I had a closer look at the interface which in fact looks alright (it's maybe just that thermal conductivities are so different that zones appear to be separated but aren't.. ?). ![temp_profile](https://user-images.githubusercontent.com/22639394/70803014-5889d180-1db3-11ea-8e6b-ef7f95a9466a.png). By the way: You can easily increase the CFL number to 1000 in both zones. You get a fully converged solution after a few hundred iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/838#issuecomment-565438939:204,interface,interface,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/838#issuecomment-565438939,1,['interface'],['interface']
Integrability,"Please use meson and ninja to build the code as documented here: https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/. This is what I do:; ```; export BUILD=build; export CXXFLAGS=""-funroll-loops -march=native -mtune=native"". ./meson.py $BUILD -Dcustom-mpi=true -Dwith-omp=true -Denable-mixedprec=true -Denable-autodiff=true -Denable-tecio=false -Denable-mkl=true -Dmkl_root=$MKLROOT --prefix=$PWD/$BUILD --optimization=2 --warnlevel=2; ./ninja -C $BUILD install; ```; Depending on how your compilers are setup you may find convenient to modify this:; ```; if get_option('custom-mpi'); mpi_dep = []; ```; To:; ```; if get_option('custom-mpi'); mpi_dep = [declare_dependency(link_args: ['-lmpi'])]; ```; In the meson.py script, I'm sure there is a way to do it with environment variables but I never bothered trying. Regards,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1088#issuecomment-706397914:473,Depend,Depending,473,https://su2code.github.io,https://github.com/su2code/SU2/issues/1088#issuecomment-706397914,1,['Depend'],['Depending']
Integrability,"Probably because with optimizations turned on the compiler optimizes away the unused argument.; The linker probably fails because the base MPI wrapper defines MPI_STATUS as extern, should be a quick fix.; Btw I've been removing those ifdefs whenever possible, everything should be encapsulated in the wrapper.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/956#issuecomment-620127214:143,wrap,wrapper,143,https://su2code.github.io,https://github.com/su2code/SU2/issues/956#issuecomment-620127214,2,['wrap'],['wrapper']
Integrability,"Python's ""self"" which; // makes this solution reasonably idiomatic.; Base::Compute(wv, sol);. // Then do our specific job.; wv.area = 0.0;; for(int i=0; i<nDim; ++i); wv.area += pow(sol.areaVector[i],2);; wv.area = sqrt(wv.area);; }; };. // Same mechanics as above; template<typename Base>; class ComputeFlux : Base; {; protected:; enum : int {nDim = Base::nDim};. struct WorkVarsType : Base::WorkVarsType ; {; double flux; // ...add new member; };. template<typename WV>; void Compute(WV& wv, const SolutionContainer& sol) const; {; // ...call base; Base::Compute(wv,sol);. // ...do aditional work; wv.flux = 0.0;; for(int i=0; i<nDim; ++i); wv.flux += sol.velocity[i]*sol.areaVector[i];; }; };. // This class is used to terminate the chain, it makes the link; // with the interface and it is used to specify any fixed sizes.; template<int NDIM>; class Terminator : private VirtualInterface; {; protected:; enum : int {nDim = NDIM};. struct WorkVarsType {};. template<typename... Ts>; void Compute(Ts&...) const {}; };. // Finally we use the building blocks to implement Compute.; // The blocks can be reordered depending on application to; // help the compiler fuse loops or minimize register spillage,; // the resulting WorkVarsType definition will be equivalent.; class ComposedClass: public; ComputeFlux< ComputeArea< Terminator<3> > >; {; public:; ResultType Compute(const SolutionContainer& sol) const;; };. ResultType ComposedClass::Compute(const SolutionContainer& sol) const; {; // Create the working variables on the stack.; ComputeFlux::WorkVarsType wv;. // Pass down the working variables and whatever other arguments.; // If the convention was followed, all building blocks will run.; // Recall that all Compute's were templates, they will be; // instantiated here and we can force them to be inlined.; ComputeFlux::Compute(wv, sol);. // Do some additional work if needed and return result.; return wv.flux / wv.area;; }; ```; [Care for some assembly?](https://gcc.godbolt.org/z/os-gNg)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:4722,depend,depending,4722,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,2,['depend'],['depending']
Integrability,"Regarding periodic boundaries: You have two options. You can hack the code to not allow grid deformation on periodic boundaries. That's a simple code edit, since the code already prevents most boundaries from being deformed. Let me know if you want to use this option, and I can point you to those lines. Second, you can use the `HOLD_GRID_FIXED` and `HOLD_GRID_FIXED_COORD` options to prevent grid deformation outside a specific box. I have found this option to be better overall, since it also makes the linear system easier to solve in `SU2_DEF`. The `DV_VALUE` and `FINDIFF_STEP` are different. I've only seen `FINDIFF_STEP` used for the finite-differencing python script, though it may have other uses I am not aware of. The `DV_VALUE` depends on the context. When using `SU2_DOT`, `DV_VALUE` is set to its default value. But when performing shape optimization using SU2's framework, the `DV_VALUE` parameters will be set based on the output of SLSQP (or whatever optimization framework you're using).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-626799862:741,depend,depends,741,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626799862,2,['depend'],['depends']
Integrability,"Regardless of fusing routines computing two is more expensive than computing one, and the method is full of drawbacks, so I do not think it should be a forceful default.; Can this be implemented as a USE_ROBUST_GRADIENT option that if set to NO uses whatever gradient method is chosen for both convection and diffusion, computing and allocating only once? I do not care what the default is I just want to be able to turn it off.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-532893719:21,rout,routines,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-532893719,1,['rout'],['routines']
Integrability,"Sadly no, it is one of the main development areas we have identified in #1487, the interface is not very large, you can scroll over `python_wrapper_structure.cpp` to see the methods that allow modifying things at inputs, and the methods for control flow are in that example I pointed to.; If you join one of our dev meetings we can try to get a working example with what you need.; Wednesdays at 3pm UK - https://meet.jit.si/SU2_DevMeeting",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553#issuecomment-1058534840:83,interface,interface,83,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1058534840,1,['interface'],['interface']
Integrability,"Same. If we construct it correctly, I am hoping that we will actually only need to include certain individual headers in the solvers, etc. (or maybe just the parent numerics header w virtual function descriptions) so that we can break some of the dependencies that lead to longer build time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-503683529:247,depend,dependencies,247,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-503683529,1,['depend'],['dependencies']
Integrability,"Samet,. I can help you with the NREL case and the output. . We are in the middle of rewriting those routines, so it will be very easy to register and output new variables to the viz. files soon (another week or less). Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257618678:100,rout,routines,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257618678,1,['rout'],['routines']
Integrability,"Seems like you're using older version of SU2 master branch. We didn't have several config options such as ""WRT_BINARY_RESTART"" in older version. That's the reason why your SU2_CFD executable throws error message regarding it.; Please clean your SU2 directory, pull fresh copy of master branch of SU2, compile it and then run it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/523#issuecomment-381752554:204,message,message,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/523#issuecomment-381752554,1,['message'],['message']
Integrability,"Seems like your figures are not attached. Please upload them again. Also, please double check whether your ""SU2_RUN"" environment variable is set correctly as Juan mentioned. If serial computation worked fine only with ""$ SU2_CFD inv_ONERAM6.cfg"" command, I guess you set it correctly. However, from your error message, python script says it can't find a path to ""SU2_RUN""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/521#issuecomment-378119992:310,message,message,310,https://su2code.github.io,https://github.com/su2code/SU2/issues/521#issuecomment-378119992,1,['message'],['message']
Integrability,"Sign me up for the old folks team. If you really would like to give PETSc a shot, I recommend talking with @anilvar who had an interface for connecting it to SU2 in one of our branches. Otherwise, I agree that reusing the DG hooks would save you some implementation time for dense operations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459622513:127,interface,interface,127,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459622513,1,['interface'],['interface']
Integrability,"Since I am already at it, I am gonna add factory classes for numerics (we can use them even if we move the allocation to the solvers) and integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/881#issuecomment-587440604:138,integrat,integration,138,https://su2code.github.io,https://github.com/su2code/SU2/pull/881#issuecomment-587440604,1,['integrat'],['integration']
Integrability,"So I've got a more general question: Why do we want the gradient norm to be ~1E-6? Isn't this gradient norm problem dependent? it most definitely scales with the square root of the number of design variables. I would suspect that the relative scales of the design variables are also a factor. Is 1E-6 a good rule? Or is it just a decent starting point, and values very different from 1E-6 are used in practice? Also, if this is ""a good rule,"" then shouldn't we just automatically rescale the problem after the first design iteration?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616774814:116,depend,dependent,116,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616774814,1,['depend'],['dependent']
Integrability,"So now please check why the flux is calculated as ; ""conv_numerics->ComputeResidual(Residual, Jacobian_i, Jacobian_j, config)"" instead of; ""conv_numerics->GetInviscidProjFlux(&V_infty[nDim+2], Velocity, &Pressure, &V_infty[nDim+3], Normal, Residual)""; Why should Jacobian_j be involved? Unless you say that both the above routines give the same end result I am not convinced that it is right.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-313630343:322,rout,routines,322,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-313630343,1,['rout'],['routines']
Integrability,"Some additional comments:; - There are a lot of duplicated routines now, because they look the same for compressible/incompressible. These will be eventually moved to the CSolver. We have also plans for modifing the MPI routines in the solvers to make them more generic.; - I cannot make sure that some features that are currently not tested in Travis still work. For example things like Harmonic Balance for incompressible flows (in case it was working before). We should find out whats working and whats not so that we can maybe throw appropriate error messages.; - It might have happened that I accidentally did something wrong during the merge. Maybe I reverted some cosmetic changes that do not affect the solution ... If you see something, let me know. So I request **ALL** of you to have a look at the solver structure. But keep in mind that just looking at the diff might be confusing as it is not showing all changes correctly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/327#issuecomment-257236302:59,rout,routines,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/327#issuecomment-257236302,3,"['message', 'rout']","['messages', 'routines']"
Integrability,"Some update here: I had to get rid of the CParse library ... It was too slow since it is based solely on RTTI. I replaced it with [exprtk](https://github.com/ArashPartow/exprtk). This is a fast and widely used expression library. The only drawback is that it is a header-only file with ~40k(!) lines of code. Compilation takes quite long, so I am using pimpl approach to interface it with SU2 in order not to recompile it for every compilation target. Furthermore I added the exprtk code as an archive (similar to what we do with the tecplot IO library).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913#issuecomment-634295529:371,interface,interface,371,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-634295529,1,['interface'],['interface']
Integrability,"Some updates:. - Python wrapper functionalities have been moved into a dedicated python_wrapper_structure.cpp file for code clarity.; - The data structures for the customized values at boundaries have been removed from the CPoint class. Data structures are stored in the geometry class, they are initialized only when customization is set ON and only for involved vertices. There was no restriction to put the data structures in the solver class, except that when multi-grids needs to be updated (required for non uniform field), the geometry class needed an access to the solver class, which is not the case since everything that is in the Common structure seems to be independent of what it is in SU2_CFD, and I wanted to keep that. Those data structures should not be seen as true PDE-related variables, they should be seen as a generic support for boundary customization.; - CHT related labels have been removed and replaced by ""Python customizable"" in order to not introduce any confusion with the native CHT development. The basic purpose of this work is to enable existing boudary conditions to be customized from Python and not to develop a CHT interface. CHT is just an example of application (since only the HEAT_FLUX and ISOTHERMAL walls are customizable for now).; - Based on the previous point, no new specific boundary condition was introduced. For now, I keep the idea to just modify (one single line) the existing boundary conditions to take into account the customization. New dedicated boundary conditions (for example BC_HEAT_FLUX_CUSTOM or BC_ISOTHERMAL_CUSTOM) would be a 99% copy of the originals... Dedicated boundary conditions for native CHT development can still be defined independently (no condlfict). Cheers,. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-355928565:24,wrap,wrapper,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-355928565,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,Sorry @talbring I have just read your message and I did the merging by myself. Thanks for the help.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/412#issuecomment-317912905:38,message,message,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/412#issuecomment-317912905,1,['message'],['message']
Integrability,Sorry I missed your previous message @talbring.; I imagine this is because of c++11 (which GCC9 might consider by default?); I will test this and come back to you.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/734#issuecomment-516404815:29,message,message,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/734#issuecomment-516404815,1,['message'],['message']
Integrability,"Sorry about that, I didn't know new commits somehow go into this PR; automatically. I'll open new PRs for each of them. Pedro Gomes ***@***.***> ‰∫é2024Âπ¥6Êúà3Êó•Âë®‰∏Ä 12:38ÂÜôÈÅìÔºö. > ***@***.**** commented on this pull request.; >; > @FabianYan2010 <https://github.com/FabianYan2010> can you separate the; > different features you are working on into different PRs please? I think I; > count 4 quite large ones already.; >; > ‚Äî; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2173#pullrequestreview-2092778271>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BEECKG2UOQUSK2WEASMBYOLZFPXLRAVCNFSM6AAAAAA7UN6HYOVHI2DSMVQWIX3LMV43YUDVNRWFEZLROVSXG5CSMV3GSZLXHMZDAOJSG43TQMRXGE>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-2175100069:788,Message,Message,788,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-2175100069,1,['Message'],['Message']
Integrability,"Sorry but I don't follow your suggestion:; The .deps folders in SU2_BASE (where the linkage to the CHeaterFVM routines exist) are; created during the preconfigure.py step, related to the codi part. There you can find ; pointers with DIRECTDIFF (like libSU2Core_DIRECTDIFF_a-CHeatFVMVariable.Po).; Can you clarify?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-600828306:110,rout,routines,110,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600828306,1,['rout'],['routines']
Integrability,"Sorry for the late response. I had to try out a few things. @GomerOfDoom, this is the output of `pacman -Qi blas lapack openblas`; I think it is relevant to this issue that i mention, I had installed openblas which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:588,Depend,Depends,588,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,1,['Depend'],['Depends']
Integrability,"Sounds like this one is more or less ready too.. . @talbring, can you please check the changes to the MPI wrapper in this PR when you have some time?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/656#issuecomment-472548914:106,wrap,wrapper,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/656#issuecomment-472548914,1,['wrap'],['wrapper']
Integrability,"Status?; At may 21, 9AM europe time, 2019; I am getting a ; ""This Workspace has been Stopped""; message from URL; https://su2.rocket.chat/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/645#issuecomment-494262838:95,message,message,95,https://su2code.github.io,https://github.com/su2code/SU2/issues/645#issuecomment-494262838,1,['message'],['message']
Integrability,"Sure @bigfooted , This is a recent work by Dr. Nishikawa. Actually there are very few unstructured grid limiters in practice, Barth-Jespersen, Venkatakrishnan and its modifications, Michalek-Gooch (most of them are already implemented in SU2). I just saw the details and thought of implementing it. Also to note, it is tailored for vertex centered schemes not cell centered scheme, hence is apt for SU2. In original paper he showed tests with few inviscid cases. Recently He has revealed that it has been implemented in NASA CFD codes. ; Few things - 1- It is certainly less dissipative in comparison to VK 2- Convergence are similar. Rp limiters may take moderate number of more iterations (being less dissipative). 3- Convergence attributes also depends on many other settings - starting CFL, CFL ramping, convective schemes used etc. Sometimes all will stall.; Overall it's encouraging to try and make use of it in more and more cases. I tried it on multiple cases and got converged results (and yes Rp is comparitively less dissipative to Venkat limiter).; I will update the theory part and add the ramp case....",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006#issuecomment-1499979649:748,depend,depends,748,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006#issuecomment-1499979649,1,['depend'],['depends']
Integrability,"Sure Antonio. We can look into it together. Complex numbers with pointers; instead of vectors (as in HB Operator) are used for FWH solver though it is; not part of the develop yet. I think you'll not run into compilation errors; in that case if we're not using vectors in combination with complex; numbers. Tim, Please correct me if I am wrong. On Sun, Nov 13, 2016 at 1:31 AM, Antonio Rubino notifications@github.com; wrote:. > thanks all for the comments! when I modified that routine, unfortunately I; > didn't get any error on linux.we can definitely comment or add a flag for; > the time being or we could use an older implementation of the HB operator; > where the real part and the complex one are treated independently, like; > Sravya is suggesting. However, if possible, it would be great if we can try; > to find a way to deal with multiplication between complex numbers (working; > in AD mode on mac). I don't know how to replicate this issue since I don't; > have a mac; do you have any suggestion? Maybe, Sravya, can we have a look; > together ( as you have a Mac :) ) so that we can find a solution also for; > other parts of the code for harmonic balance, not in the develop (eg; > spectral interpolation,...) ? Are complex numbers just used in HB or is; > somebody else using them?; > ; > ‚Äî; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > https://github.com/su2code/SU2/issues/319#issuecomment-260175432, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AHenIPrn1fRli3BRGNyKmPgarOstsp8aks5q9tjjgaJpZM4KYAX3; > .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/319#issuecomment-260199838:479,rout,routine,479,https://su2code.github.io,https://github.com/su2code/SU2/issues/319#issuecomment-260199838,1,['rout'],['routine']
Integrability,"Sure we do (e.g. `CDiscAdjSolver::RegisterSolution` will behave incorrectly). So actually both ways are based on saving indices somewhere. However the routines that I added (with the `_intIndexBased` extension) do save them internally together with ""their"" corresponding variable (in the same variable class) which is important for the multizone stuff. > So now when we register the coordinates we do it index-based because the multizone_problem boolean is set. We don't want the `_intIndexBased` routines for the FSI cases. They work by re-recording new tapes for each set of variables (fluid solution/coordinates/displacement solution) with added specific routines within the solvers/iterators for cross dependencies (which goes along with saving indices externally, but in a preassigned order). > What are the implications for when we extract the adjoints? Do we need an index-based GetDerivative?. Yes there are counterparts in `RegisterSolution`, `SetAdjoint_Output` and `ExtractAdjoint_Solution`. But nothing more. We can go for the internal indices in `CVariable` exclusively once we have integrated the FSI capabilities to the multiphysics driver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542202636:151,rout,routines,151,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542202636,5,"['depend', 'integrat', 'rout']","['dependencies', 'integrated', 'routines']"
Integrability,"Sure, now make sense why it is showing issues, Thank you for the; confirmation!. On Wed, May 27, 2020 at 5:22 AM Pedro Gomes <notifications@github.com>; wrote:. > I gave the wall function routines a cleanup in #975; > <https://github.com/su2code/SU2/pull/975> and I think something is; > missing, we compute the shear stresses but they are not considered in the; > BC's of the NS solver.; >; > ‚Äî; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/399#issuecomment-634539255>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ALJ3OXAF4VX5CFIJVJFLIDTRTTLVBANCNFSM4DN4N2YA>; > .; >. -- ; *Thank you,*. *Monika Chauhan *. *Graduate Research Assistant, Doctoral Program*. *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA 24061*; *Cell# 540-998-5012*",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-634777816:188,rout,routines,188,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-634777816,1,['rout'],['routines']
Integrability,"Sure, will try. Mostly will ask a student, as I am not quite familiar to; GitHub working. On Sun, 14 Jan 2024, 00:02 Pedro Gomes, ***@***.***> wrote:. > You are right we fixed that for the Roe scheme at some point, if you have; > time open a PR please.; >; > ‚Äî; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/2198#issuecomment-1890675378>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADAD2ZP7WA7PL6U764QGRPTYOLHKFAVCNFSM6AAAAABBZKKBO6VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQOJQGY3TKMZXHA>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2198#issuecomment-1892434634:628,Message,Message,628,https://su2code.github.io,https://github.com/su2code/SU2/issues/2198#issuecomment-1892434634,1,['Message'],['Message']
Integrability,"Surprisingly I have found the existing content related to plasma simulation in SU2. Really amazing. Could anyone give me any clues of the correspondent .cfg files? Or help me find the governing equations change which makes the plasma equations different from the neutral gas. ; ; ![image](https://user-images.githubusercontent.com/33152225/61871269-5fef3200-af1b-11e9-82c5-cd8418a6f83c.png). It already seems good enough at considering *E* field, but *B* is omitted. I can strive to supplement the equation. Could anyone give some guidance to me, a newcomer of SU2?. [Stanford University Unstructured An open-source integrated computational environment for multi-physics simula.pdf](https://github.com/su2code/SU2/files/3431264/Stanford.University.Unstructured.An.open-source.integrated.computational.environment.for.multi-physics.simula.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/741#issuecomment-515010918:616,integrat,integrated,616,https://su2code.github.io,https://github.com/su2code/SU2/issues/741#issuecomment-515010918,4,['integrat'],['integrated']
Integrability,"TEP = 0.00593412; ...; ```. zone_rot.cfg:; ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.0; ...; ```. In other words, this is a transient stationary cylinder simulation with two zones. As the axial velocity and eddy viscosity evolutions show below, the simulation runs smoothly and no discontinuities or unphysical flow result is observed around the zone interface. <img width=""720"" alt=""cylSlowStationary"" src=""https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExNTg4ZHE2YTZkM3Nmbm84NWEyOTN6bXJtbjg5NXJ3OGRoOTdscXMyeSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/l63Ze6xd8FejHGNjCZ/giphy.gif""> . **2. Slowly rotating cylinder**. I also tried a very slowly rotating cylinder to see if the error will occur even with a slow rotation. The rotational speed of the inner zone is around 0.03 rad/s, which corresponds to a surface angular speed (0.025 m/s) equal to the 0.25% of the freestream velocity (Uinf=10 m/s). . zone_rot.cfg:; ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.02941176471; ...; ```. The time step is set as the one used for the stationary cylinder. Each time step corresponds to a 0.01 deg rotation of the inner zone. The below animation shows the movement of the cells on the interface:. <img width=""480"" alt=""cylSlow"" src=""https://i.giphy.com/cOUpRw5pDCSvqGa6Q0.webp""> . The below animations show the axial velocity and eddy viscosity evolution. The results should not deviate much from the stationary cylinder results as the angular speed of the cylinder is quite low compared to the freestream. However, it is not the case for this simulation. Also, the discontinuity on the downstream part of the interface is quite apparent even at the earlier time steps. As the simulation progresses, unphysical flow results (non-zero eddy viscosity at the top part of the interface) appear, and eventually, the simulation diverges. <img width=""720"" alt=""cylSlowRot"" src=""https://i.giphy.com/E2LPeCXWvaHfILYei6.webp"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2041586417:1443,interface,interface,1443,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2041586417,3,['interface'],['interface']
Integrability,Thank you @EduardoMolina.; In the future I will make sure the branch exists in the SU2 repo.; Yes unfortunately the accurate Jacobians for SLAU and AUSM+ are not silver bullets and their success seems to be very case dependent.; The rotating_cylinders case stopped diverging after merging the changes from #700 so I have updated all reference residuals.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-511183603:217,depend,dependent,217,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-511183603,1,['depend'],['dependent']
Integrability,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:188,Depend,Depending,188,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363,1,['Depend'],['Depending']
Integrability,"Thank you for sharing the Output details @pcarruscag. Now I can output the *Cur_Time* column with only changing of input script. . After reading the source code, I also found that the history field depends on the user settings, such as physics type, turbulence model, etc. If I manually assign the HISTORY_OUTPUT variable, will the default settings be wiped out? It seems that adding the ""CUR_TIME"" to the default history field for transient analysis is reasonable if not conflict with other settings. I will be proposing a PR, however, please feel free to comment or challenge. Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2138#issuecomment-1740363137:198,depend,depends,198,https://su2code.github.io,https://github.com/su2code/SU2/issues/2138#issuecomment-1740363137,1,['depend'],['depends']
Integrability,Thank you for the feedback but for 99% of cases it is easier for users if we download the dependencies for them. The philosophy behind SU2 has always been to provide as much of a self contained package as possible.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1450323672:90,depend,dependencies,90,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1450323672,2,['depend'],['dependencies']
Integrability,"Thank you for the review @economon.; I just gave the multiple constraints a try on the hybrid onera m6 mesh we have in testcases, it works, both points and edges can be balanced, but the edge cuts go up by almost 50% I guess that makes sense, more constraints less minimization.; There's another reason why I like the combined function, balancing the ""num neighbors"" metric is not exactly the same as balancing the number of edges per partition, using a small negative point weight (-1, -2) yields better results (but the ideal value will be case dependent). I think the next big improvement we can make in this area is to use a partitioner that is aware of the network topology, ParMETIS assumes that the communication cost between any two ranks is the same, this simplification can be very costly on large parallel machines that have a tree-like network topology, and in older clusters with slow interconnects (relative to intra node communication).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1059#issuecomment-671054807:547,depend,dependent,547,https://su2code.github.io,https://github.com/su2code/SU2/pull/1059#issuecomment-671054807,2,['depend'],['dependent']
Integrability,"Thank you for the review Catarina, based on your comments I will try to explain the new structure better. ### The interface; These numerics classes are still abstract and so the outside world only needs to known about their interface:; ```c++; class CNumericsSIMD {; public:; virtual void ComputeFlux(...) const = 0;; };; ```; Any class that wants to be a simd numerics needs to inherit from this base and in so doing is forced to implement `ComputeFlux` (because it is pure virtual). ### Static decorator pattern; Now, in this structure we don't have convective and viscous classes separate. Instead, we have convective schemes that can be ""decorated"" with viscous fluxes. For example:; ```c++; template<int nDim>; class CCompressibleViscousFlux : public CNumericsSIMD {; protected:; void viscousTerms(...) const {...}; };; ```; Here note that this class template is derived from CNumericsSIMD but it does not implement `ComputeFlux`, thus it cannot be instantiated by itself. The idea is that convective schemes can use these viscous fluxes as base class (thereby linking them to CNumericsSIMD) to access the `viscousTerms` method (when we don't want viscous terms we just use a dummy viscous class).; Note also the template parameter `nDim`, this is because we want to create specific versions of the numerical schemes for 2D and 3D (we ""want"" this because it allows static allocation and unrolling loops perfectly). Then convective classes also need to be class templates so that we can programatically change their base class:; ```c++; template<class Base>; class MyConvectiveScheme : public Base {; public:; void ComputeFlux(...) const {; // do my own thing; Base::viscousTerms(...);; // update the linear system with the result; }; };; ```; Now to create an instance of this class template we do for example:; ```c++; auto obj = new MyConvectiveScheme< CCompressibleViscousFlux<2> >(...);; ```; which would create an object for 2D problems with viscous terms. And so we need at least 4 instanti",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:114,interface,interface,114,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721,2,['interface'],['interface']
Integrability,"Thank you for your advice. I will do that as soon. PENG YAN, PhD student. Department of Aerospace Science & Technology. Politecnico di Milano; ________________________________; From: Nijso ***@***.***>; Sent: Wednesday, October 5, 2022 21:47; To: su2code/SU2 ***@***.***>; Cc: Peng Yan ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] [WIP]Coupling of SU2 and CoolProp (PR #1782). Yes, all those automatically generated files should be removed, so everything in the folder .idea (including the folder), and the entire cmake-build-debug folder. If they come from coolprop, tell it to install into another directory outside of SU2. ‚Äî; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/1782#issuecomment-1268887325>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ATJ4GKA5U3DU3MBG5LNUQC3WBXLMBANCNFSM6AAAAAAQ53HAJY>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1268908256:935,Message,Message,935,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1268908256,1,['Message'],['Message']
Integrability,"Thank you for your question.; The geometry files are stored in a separate repository, su2code/Testcases; due to repository memory limitations. The file structure is the same, so; when you check out the test cases repository into the same folder you will; get the necessary files in the right places.; To test whether the installation worked immediately, you can run the; quickstart tutorial which includes the geometry file already. Details on this, and other information you will likely find useful are also; available on the wiki of the github repository:; https://github.com/su2code/SU2/wiki/Download. Cheers,; Heather. On Fri, Jan 8, 2016 at 3:51 PM, alexp1729 notifications@github.com wrote:. > All the TestCases seem broken when I try to run SU2 41 compiled from; > source When I run the serial_regressionpy and parallel_regressionpy; > scripts, I get error messages like; > ; > There is no geometry file (GetnZone))!; > ; > and mesh files like mesh_ONERAM6_turb_hexa_43008su2 appear to be missing; > When I copy one of these from a 40 sample directory (where everything; > worked) and rerun the test case manually by typing something like; > ; > mpirun -n 2 /mit/su2_v41/bin/SU2_CFD config_CFDcfg; > ; > it works Something seems to be missing that generates the mesh files but; > I'm no SU2 expert, I just install it for the real users Thanks for any help; > ; > ```; > Alex; > ```; > ; > ‚Äî; > Reply to this email directly or view it on GitHub; > https://github.com/su2code/SU2/issues/222. ## . Heather Kline; NASA Space Technology Research Fellow; PhD Candidate, Aeronautics & Astronautics, Stanford University; BS Aerospace Engineering, Rensselaer Polytechnic Institute; kline.hl@gmail.com, hlkline@stanford.edu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/222#issuecomment-170169063:864,message,messages,864,https://su2code.github.io,https://github.com/su2code/SU2/issues/222#issuecomment-170169063,1,['message'],['messages']
Integrability,"Thank you so much, Tobi and Pedro. Yes, there is a temperature gradient; close to the wall. So SU2 gives me, in this case, a 'virtual heat flux'!; Kind regards. On Thu, Sep 28, 2023 at 8:25‚ÄØPM Pedro Gomes ***@***.***>; wrote:. > you are correct, there is a discussion on CFD-online about it. we impose 0; > heat flux, but report an ""apparent heat flux"" most codes will simply give; > you back the imposed heat flux value you specify, nevertheless there will; > probably be a temperature gradient close to the wall; >; > ‚Äî; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1740118992>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUUZNE6B63SH7XJLY2DX4YBMZANCNFSM6AAAAAA3QKLVDU>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1740735437:821,Message,Message,821,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1740735437,1,['Message'],['Message']
Integrability,"Thank you very much, Pedro!; Kind regards. On Tue, Oct 24, 2023 at 9:09‚ÄØAM Pedro Gomes ***@***.***>; wrote:. > Yes that makes sense, we are probably missing some validation on markers; > not appearing on incompatible boundary conditions.; >; > ‚Äî; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1777083598>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUQ652XHGRI7S7C7D7DYA6VYBAVCNFSM6AAAAAA3QKLVDWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTONZXGA4DGNJZHA>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1779772698:601,Message,Message,601,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1779772698,1,['Message'],['Message']
Integrability,"Thank you. I have found my where my problem was. My default python environment is anaconda python. But when I use `sudo pip install mpi4py`, it actually installed mpi4py for python2.7 (system python). So I have to install mpi4py for python3 (system or anaconda python). Due to my network problem, I choose to intall mpi4py with following commands:; ```; sudo apt install python3-pip; sudo pip3 install mpi4py; ```; Now I can install SU2 by Python Wrapper Build without errors. Thank you. Closing now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722#issuecomment-506576947:447,Wrap,Wrapper,447,https://su2code.github.io,https://github.com/su2code/SU2/issues/722#issuecomment-506576947,1,['Wrap'],['Wrapper']
Integrability,"Thank you. I see, so you set separate markers, e.g. MARKER_EULER= ( WingTop, WingBottom ), and where the marker boundaries meet, the mesh points on that interface is unchanged; did I understand that correctly? I guess that while this will reduce the artefacts on the LE/TE it still results in a departure from the design shape at the portions away from the boundary edges. As you mentioned before, there might not be a way to solve this without mapping back to an iges or parametric file. I suppose another approach might be to work the other way around? Perhaps one can limit the max allowable adapted size to match the 'worst case' allowable surface mesh? I just realised that may be a contributing factor to why the points jumpy across the fuselage; `PYADAP_HMAX` may be set excessively large. If I set this limit to less than the average surface mesh cell size, will it attempt to refine everything over the limit instantly? Or will it only use the limit for 'new' cells that are generated during adaptation? Thanks for your thoughts.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764836923:153,interface,interface,153,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764836923,1,['interface'],['interface']
Integrability,"Thanks @MicK7 I will have a look, my initial thought was to have a simple strategy where within each MPI rank parallelism is extracted via colouring or scatter-to-gather transformations and only one thread per rank participates in the message passing, I have no experience here though so this might be a bad strategy, idk. **Back to business:**; I went silent for a bit because in prototyping a typical residual computation and matrix update loop I made some realisations that made me go back to the drawing board regarding data structures, and eventually back to square 0. . ## Parallel strategy for flux computation; Because significant computation is required to obtain each edge's flux, it does not make sense to attempt a ""point-loop"" strategy (which would double the effort).; However, one can either use colouring to avoid the race conditions that would result from updating the residual of cells i and j, or store the edge fluxes and then, on a second point-loop perform the summation of fluxes for each cell, with the direction being accounted by the same adjacency information used in the point-loop GG gradient computation.; If we consider only the update of residuals the two strategies are fairly equivalent performance wise, the tie breaker is the matrix updates. ## Matrix Updates; By this I mean the `addBlock`, `subBlock` we do (two times each) to update diagonal and off-diagonal blocks for each edge.; Here is a dummy numerics loop that does nothing else but setting blocks in the matrix (with colouring).; ```c++; void testLoop1(const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; double** blk_i, double** blk_j,; SparseMatrix& matrix); {; matrix.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t j",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:235,message,message,235,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['message'],['message']
Integrability,Thanks @ScottImlay. Seems to work now. Just a quick question. You only adapted the volume mesh/solution routines. Is it also possible to use the new format for the surface files (i.e. in the routines SetTecplotBinary_SurfaceMesh/SetTecplotBinary_SurfaceSolution) ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-425020607:104,rout,routines,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-425020607,2,['rout'],['routines']
Integrability,Thanks @maxaehle üíê. Not sure how this will interact with scalar solvers (species transport) to come ... but in case someone there wants to work with sliding interfaces then I guess one has to test that a priori,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1344#issuecomment-896775901:157,interface,interfaces,157,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344#issuecomment-896775901,1,['interface'],['interfaces']
Integrability,"Thanks @pcarruscag for your comments! I have now incorporated most of them. What is missing from the first batch is a good way of initialization instead of the recursive lambda expressions, because I'm lacking completely convincing ideas for this. . The most comfortable interface I can think of is a function; - whose parameters are all indices at once, and; - which returns a pair/structure of one `size_t` and one `Data_t`.; - If the index tuple is valid (in range), the `size_t` component is arbitrary and the `Data_t` component is the data element.; - If the index tuple is invalid, the `size_t` component specifies the first out-of-range index and the `Data_t` component is arbitrary. So the lambda expression would look like this:. [captures](unsigned long i1, ..., unsigned long iK){; if( i1 >= ... ) return Nd_Range(1);; if( i2 >= ... ) return Nd_Range(2);; ...; return Nd_Value( ... );; }. Do you consider this interface sufficiently comfortable? Anyway I'll have to think about how to implement this...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-847253075:271,interface,interface,271,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847253075,2,['interface'],['interface']
Integrability,"Thanks @sun5k, the merge conflicts were probably a bit challenging because some files were moved with the other work we were doing on turbulence.; I had a look at the code and it looks like you did a nice job of modernizing the transition implementation :+1: and the verification against Fluent also looks good.; Given that this is an improvement in all directions (better code, feature that works, same amount of code) I encourage you to make the final push so that we can integrate it into develop.; As you see the GitHub tests are failing because of compiler warnings (unused variables and so on, you should be able to see the logs) let me know if you need some help.; Then we need at least one regression test, for example one of the coarser grids in your V&V, and with that we should be able to finish this PR!. After that please consider adding your results to our V&V page https://su2code.github.io/vandv/home/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1239202757:474,integrat,integrate,474,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1239202757,1,['integrat'],['integrate']
Integrability,"Thanks @talbring,; I moved the preconditioner and matrix-vector product wrapper classes to separate files, these are so light weight that I was thinking of leaving them in one file.; I also moved some inlines to the hpp but I kept the private inlines in the inl file, these are only needed in the cpp and so by including the inl from the cpp (instead of bottom of hpp) we might avoid triggering recompilation of more units when working on implementation details of CSysMatrix.; Finally I would like to move/rename the larger files on a separate PR, that way it will be easier to track changes.; What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-503615855:72,wrap,wrapper,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-503615855,1,['wrap'],['wrapper']
Integrability,"Thanks Max that sounds very promising indeed. To everyone else, a quick update on the issue of performance vs. MKL.; I played a bit with @vdweide 's case and it does not seem trivial to get those 10% of performance back, at least not without a lot of restructuring.; I did however measure the performance of native gemm in Eigen to be ""only"" 2.5 times worse than MKL, after some emails we determined that this was because with the Intel compiler Eigen was not using AVX instructions but with g++ those instructions could be enabled by setting the -march flag appropriately. So far the conclusions are:; - Get 0% to 10% performance loss if you are using MKL (one could always bypass Eigen and call mkl directly).; - Write clean code compatible with AD and that will perform better than most easy implementations.; - Eventually get better performance of the discrete adjoint via the more efficient differentiation of operations with matrix-like objects.; - Have an extra dependency that does not need to be compiled.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-463591821:969,depend,dependency,969,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-463591821,1,['depend'],['dependency']
Integrability,"Thanks Suman,. My suggestion is the following‚Ä¶ we have really never performed a detailed test of the CUSP scheme. As far I remember it was a really quick implementation. And it looks to see that you know SU2 and you are ready to contribute ‚Ä¶ Would it be possible for you to create a pull request with the changes, including a test case? if it is a bug, your change will pay off immediately. Best,; Francisco. > On Jul 12, 2017, at 10:03 PM, SumanVajjala <notifications@github.com> wrote:; > ; > @hlkline <https://github.com/hlkline> Thank you for your reply. We have been using SU2 for over 2 years and only recently we started looking at the code to understand some of the issues we were facing. To clarify I did not report it as a bug. I do understand that the flow variables obtained by Riemann invariants (line 10433) are set as the primitive variables for the boundary point. But when it came to the flux calculation I saw Jacobian_j and that triggered my question. I know that each scheme has a ComputeResidual routine but for this specific case what routine is being used? Is it the one in numerics_template.cpp? And I still do not understand why Jacobian_j should play a role in the flux calculation! I will be glad if you can kindly comment on it.; > ; > Finally, can I now treat that this is a non-issue?; > ; > @fpalacios <https://github.com/fpalacios> @oleburghardt <https://github.com/oleburghardt> @hlkline <https://github.com/hlkline> By the way don't you think Nu_c in line no 729 in numerics_direct_mean.cpp should be Nu_c = (1.0-Beta)*LamdaNeg? This was the other probable bug I was referring to within SU2 found in CUSP implementation.; > ; > Regards; > Suman; > ; > ‚Äî; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/issues/405#issuecomment-314971522>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AccuRkqESRvP7dcREH5t_PKPioRlkERhks5sNaUSgaJpZM4OKV38>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-315096146:1017,rout,routine,1017,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-315096146,2,['rout'],['routine']
Integrability,"Thanks Tim,. From the practical view of point, it is important to decide which numerical spatial integration do you want to use for the AD stuff‚Ä¶ even if it is not consistent with the direct solver. Excellent job!. Thanks,; Francisco. > On Jul 12, 2017, at 11:57 PM, Tim Albring <notifications@github.com> wrote:; > ; > I also thought about unifying the options. However, for example for the frozen viscosity option we have different default values (NO for disc. adj. and YES for cont. adj.). That's why I did it that way for now. But I'll think of some solutions for that problem for the future.; > ; > Best,; > Tim; > ; > ‚Äî; > You are receiving this because you modified the open/close state.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/407#issuecomment-314989610>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AccuRtpsNdEcP-XjJy86bhhu1LXesbZ-ks5sNb_kgaJpZM4OS2wu>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/407#issuecomment-315094012:97,integrat,integration,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/407#issuecomment-315094012,1,['integrat'],['integration']
Integrability,"Thanks Tom !. I made the changes (typo and initializations). I would not choose just ""SU2"" for the Py wrapper name, since there already is a SU2 python folder. By the way this also contains some python driving functions and this might be confusing. The true python wrapper is what you get when you directly interface C++ functionalities with python through SWIG. The previous name of the wrapper was SU2Solver but once again I would avoid it since the true goal of the wrapper is to interface functionalities that could be much deeper than just the solver level. The python wrapper is not just a solver. So to avoid confusion I chose the name WrapSU2. pySU2 would do the job too and this is consistent with the pySU2 folder (used to compile the wrapper). SU2Wrapper ? PyWrapSU2 ? Just keep in mind that ""SU2"" should be part of the name, imagine you have to import two wrapped modules (from different codes) in the same python script I would prefer having : . ********; import pySU2 # wrapper of SU2; import pyOtherCode # wrapper of another code; ********. than having : . ********; import pyWrap # wrapper of SU2 but this is unclear; import theWrapper # wrapper of an other code but this is unclear; ********",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/357#issuecomment-272404829:102,wrap,wrapper,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/357#issuecomment-272404829,13,"['interface', 'wrap']","['interface', 'wrapped', 'wrapper']"
Integrability,"Thanks Tom, unfortunately there are routines that are inactive only because calls to them were commented out elsewhere in the code (e.g. all the inverse design stuff), I tried to keep all of those.; I ended up deleting everything dealing with volume and surface outputs, as those were 100% not used.; Only the history / convergence routines remain, I also fixed a bug affecting harmonic balance simulations where all outputs went to the same file. Assuming harmonic balance is not used together with turbomachinery (I guess not since there is a driver class for each) it would be easy to move it over to the new output without too much loss of functionality. The turbomachinery stuff looks a bit harder because I don't know if it needs any of the fluid fields, it would probably be very easy for the people who work with this stuff though... Anyway it was a big mess, now it is smaller.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1115#issuecomment-734392212:36,rout,routines,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/1115#issuecomment-734392212,2,['rout'],['routines']
Integrability,"Thanks a lot, @TobiKattmann, for this fix,. I was able to reproduce the error locally as well and the fix makes perfect sense to me. I've only added one small statement:; `config_container[iZone]->SetiInst(INST_0);`; to SU2_SOL in cases with single instance, to enforce that iInst = config->GetiInst() in CBaselineSolver::LoadRestart() receives the correct value. @economon as of now, I think there are no multizone-multiinstance cases available in develop. When that comes through, it would only require an extra loop on iInst and the correct setting of; `config_container[iZone]->SetiInst(iInst);`; in the very same fashion as it is done for harmonic balance (lines 357-380 in SU2_SOL.cpp). Then, inside the LoadRestart routine, the correct container position is read in line 3939 of solver_structure.cpp,; `unsigned short iInst = config->GetiInst();`; and used onwards. . I'll wait until the tests pass for this latest commit and then merge it in by Monday morning if there are no further comments.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/572#issuecomment-417633741:722,rout,routine,722,https://su2code.github.io,https://github.com/su2code/SU2/pull/572#issuecomment-417633741,1,['rout'],['routine']
Integrability,"Thanks again for all of your hard work and integration, Samet. This is a very nice contribution to the open source community. Merging now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-268398593:43,integrat,integration,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-268398593,1,['integrat'],['integration']
Integrability,"Thanks for filing this. Unfortunately, we have not completely implemented the ALE formulation for the incompressible solver to handle dynamic meshes. If this is something you would be interested in helping develop further, please let us know. That being said, we should have proper guards (or error messages) that avoid this kind of memory access error in the incompressible case. We'll look into this right away.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/247#issuecomment-195838721:299,message,messages,299,https://su2code.github.io,https://github.com/su2code/SU2/issues/247#issuecomment-195838721,1,['message'],['messages']
Integrability,"Thanks for finding a way to speed things up.; With regards to the tolerance, it would be preferable to update the test values rather than the tolerance, since especially for changes in the integrated values rather than the residual values, small changes over the small number of iterations could indicate a problem that will grow over time. A very small number of iterations is used in the tests in order to save time for the tests. . Are the changes you quote for the original precision, or for the quad-precision? If the latter, and maybe either way, I would recommend running the case for a larger number of iterations to make sure that there aren't larger differences growing over time that would effect the output, maybe due to some other change in the code that hasn't been identified yet. If you are interested in having your changes included in the code, maybe this discussion should move to a pull request, where folks on the su2 dev team could easily view changes in the code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-276431901:189,integrat,integrated,189,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-276431901,1,['integrat'],['integrated']
Integrability,"Thanks for fixing the alignment.; With those options the code actually looks ok in areas that were recently cleaned up.; But the need for the manual formatting we have in loads of places comes from having code that is far too verbose and repetitive e.g. 10 calls to MPI routines with tons of arguments, 10 operator [] in a single line to get to the CSolver we need, entire copy pasted sections that should be functions, etc..; I am not a fan of that kind of wholesale automatic change because it does not fix any of the structural problems we have, and it tends to make the fixing of those issues harder because the aforementioned problematic areas are usually less readable after such changes.; I like the optimization approach of making small gradual improvements, but unfortunately this kind of maintenance is not very glamorous and few of us are up for it...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/969#issuecomment-625436086:270,rout,routines,270,https://su2code.github.io,https://github.com/su2code/SU2/pull/969#issuecomment-625436086,1,['rout'],['routines']
Integrability,"Thanks for looking into this.. it could be an important change. Regression changes are expected, of course, but does the convergence of the code improve with this change, in your experience? . Since it is an off-diagonal term, it may be hurting diagonal dominance and thus possibly convergence of the linear system. The final solution does not depend on the Jacobian approximation at convergence, but if this noticeably helps overall convergence rate, we should make the change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/491#issuecomment-355732699:344,depend,depend,344,https://su2code.github.io,https://github.com/su2code/SU2/pull/491#issuecomment-355732699,1,['depend'],['depend']
Integrability,"Thanks for putting the tests together, David. We'll get this merged asap to ensure that future commits do not break the wrapper. @talbring, when you have a moment, can you please verify that the small changes to preconfigure.py won't hurt anything?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298#issuecomment-239576578:120,wrap,wrapper,120,https://su2code.github.io,https://github.com/su2code/SU2/pull/298#issuecomment-239576578,1,['wrap'],['wrapper']
Integrability,"Thanks for the clarification clarkpede. One of the things I had tried when I first ran into that warning after looking at the code was to create a coarse grid with fewer than 1000 elements (just in case the sensor value was extremely large for a single element for some reason, then it should‚Äôve at least marked that one for adaptation). However, it still output the same results and warning message. I‚Äôm not exactly sure how the adaptation index is calculated for the SUPERSONIC_SHOCK or GRAD_FLOW, but is it possible that these values could be negative, causing the sensor value to always be below the threshold value?. I haven‚Äôt been able to find any examples using the mesh adaptation, so I may be missing an additional parameter from the configuration file. Thanks for any additional help,; Alex",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-435625964:392,message,message,392,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-435625964,1,['message'],['message']
Integrability,"Thanks for the comments guys.; I think for preconditioners CSysMatrix already gives default hooks to attach external solvers to, there is a build method and a compute method, and that was the logic I followed for this.; All the operations I do inside the wrapper are solver specific, the only thing that could eventually be abstracted from there is the conversion between our matrix format and the one PaStiX requires (which is a mere re-ordering so the column indices are ordered according to global index in linear partitioning, unfortunately this is enough to warrant a full copy).; My reason not to have gone with PETSc is [this table](https://www.mcs.anl.gov/petsc/documentation/linearsolvertable.html) that shows very little compatibility with the SU2 block sparse matrix format.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-524942947:255,wrap,wrapper,255,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-524942947,1,['wrap'],['wrapper']
Integrability,Thanks for the contribution and for working to wrap up the review changes. LGMT! Merging now.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/412#issuecomment-319186154:47,wrap,wrap,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/412#issuecomment-319186154,1,['wrap'],['wrap']
Integrability,"Thanks for the contribution! This is a much needed change. I wanted to perform a refactoring like this myself. The viscous (or turbulent) stress calculation is repeated many times in the code. Changing that calculation (e.g. adding QCR or UQ) currently requires changing many files. In my humble opinion, the stress tensor calculation should have its own class at the lowest level of the code, like the gas model (e.g. ideal gas) or the viscosity calculation (e.g. Sutherland's law). `CNumerics` classes need access to it, and `CNumerics` is meant to have minimal dependencies. But the stress isn't really ""numerics."" Its part of the underlying equations we're trying to solve. Changing the stress tensor isn't the same flavor as changing from JST to Roe. Because the stress is part of the underlying equations, it is sometimes needed in the `CSolver` classes. Previously, I've seen the stress tensor used in `CNSSolver` boundary conditions and axisymmetric source terms. That may still be true in the current version of the code. The best way to make sure that both `CSolver` and `CNumerics` have access to it is to make it an independent class. Unless, of course, we want to be manually setting the six tensor elements in `CNumerics`, like we do with primitive variables. I don't like that alternative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-742531842:564,depend,dependencies,564,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742531842,1,['depend'],['dependencies']
Integrability,"Thanks for the fix, Tim. One area that I had to modify a bit was the SetSensitivity() routine that you just modified.. does it all look ok to you in your discrete tests? Most of the ones in the repo were working fine for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-282792870:86,rout,routine,86,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-282792870,1,['rout'],['routine']
Integrability,"Thanks for the heads up - I just noticed you merged today! Does that mean; if I download the fresh-out-of-the oven master, these problems will go; away? Cheers!. On 6 Dec 2017 18:55, ""David Thomas"" <notifications@github.com> wrote:. > As the error message says, it cannot find ""Python.h"". This is again; > related to the Python wrapper compilation. If you really don't need it, I; > suggest you to just disable it when configuring your build (remove; > --enable-PY_WRAPPER). If you need the Python wrapper and if your Python is; > not located in a standard location on your supercomputer, you will have to; > manually modify the SU2_PY/pySU2/Makefile.am and put the right paths for; > the Python include and Python libs (I think similarly to what you did for; > mpi4py, see above)... Again, everything should be improved after #424; > <https://github.com/su2code/SU2/pull/424> is merged.; >; > ‚Äî; > You are receiving this because you modified the open/close state.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/447#issuecomment-349590138>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AQD-Esbg6axZxZB3ZUnHir1iqvyU8CUSks5s9mSrgaJpZM4Pm0yA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-349967348:248,message,message,248,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-349967348,3,"['message', 'wrap']","['message', 'wrapper']"
Integrability,"Thanks for the quick review @pcarruscag. I have cleaned up a little bit. Also added a nicer table of the output. l prefer that we always compute the min/max values, at least for the FVM CFD solvers, for a few reasons. The most important reason is that we should start to build up some intuition about the correlation between mesh quality metrics and accuracy + convergence in the solvers. This can be especially important during optimization when the mesh is deforming. I think the metrics are valuable to print every time for this reason, which might help users diagnose problems eventually. Additionally, the cost is relatively small (on par with the other pre-processing routines, it is only executed once and it is parallelized, and the memory is released if we don't write).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778#issuecomment-526456264:674,rout,routines,674,https://su2code.github.io,https://github.com/su2code/SU2/pull/778#issuecomment-526456264,2,['rout'],['routines']
Integrability,"Thanks for the reviews guys.; @economon I added comments to the area of the code you highlighted.; The file IO is not a bottleneck at the moment, and that filtering step is only done once.; I did have a look at anything with ""adjacency"" in the name but I took the easy way out (shamelessly) as those routines looked quite intimidating.; If you have plans to make the output structure capable of handling element values I will piggy-back/collaborate on that and output the derivatives via the output instead of writing a dedicated file.; Since we have two approvals, I will turn the example case I've included into a regression and then this can be merged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/595#issuecomment-435698786:300,rout,routines,300,https://su2code.github.io,https://github.com/su2code/SU2/pull/595#issuecomment-435698786,1,['rout'],['routines']
Integrability,"Thanks for the tips so far! By any chance do you know which part of the configuration/path search that results in the line that says:; ```; Run-time dependency python3 found: YES 3.6; ```. I can't figure out why it picks up my environment 3.7 (which has the mpi4py installed) correctly, but then somehow pulls in 3.6! Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-752694678:149,depend,dependency,149,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-752694678,1,['depend'],['dependency']
Integrability,"Thanks for your comment, Ruben, ; this pull request was indeed also intended to open a discussion among developers regarding the proper nomenclature for interface markers and variables. This is just a preliminary step towards sliding meshes so this capabilities will remain hidden for a while since it is still under development. ; We'll have plenty of time to discuss how the Marker_fsi_interface tag should change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-256055685:153,interface,interface,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-256055685,1,['interface'],['interface']
Integrability,"Thanks for your comments! Except for mixing plane and frozen rotor, sliding plane is also pretty common in turbomachinery simulation, it is indeed implemented in some, if not all, in-house codes. ; MRF is quite useful in turbomachinery simulation, expecially when we deal with transient simulation. Actually it is really rare to move the rotor mesh like in reality. One reason is that MRF is more efficient and accurate. Otherwise, you introduce new disturbance into the transient flow field every physical time step, which is not good. Because when you rotate the mesh, the velocity direction of each grid point inherited from last time step is not rotated. To make it more clear, you will have a flow going towards casing instead of parallel to, at the start of next physical time step. So you need more pseudo time steps to get a proper velocity variable. As a result, you get a zig-zag shape in the residual history.; I'm not actually moving the interface. The rotor mesh is not rotated, so as the interface at rotor zone. I'm just virtually rotating the rotor interface to find the new matching points between rotor and stator for each physical time step, so that the variable could be passed across the interface. In other words, only the passing variables are actually rotated. If I understand it correctly, there is no additional moving mesh restriction introduced here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1953783506:950,interface,interface,950,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1953783506,8,['interface'],['interface']
Integrability,"Thanks for your comments. Please refer http://stackoverflow.com/questions/14105650/how-does-stdflush-work. The output buffer is flushed automatically when it is full. Buffer size is usually fixed and does not depend on the count of writes. By using buffered I/O you are grouping your writes to a single step (equal to size of buffer) rather than multiple small writes (which is inefficient). ; By using ""endl"", we are forcing buffer flush after every line which defeats the purpose of buffered I/O. For the paraview output files, number of new lines is very less. So I have not made the modifications there. I have modified only output_structure.cpp, where the impact is real. The fix really helps writing of restart_flow.dat which has huge number of new lines (one for every vertex). I have checked the output files and there is no difference after the fix.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/281#issuecomment-223821839:209,depend,depend,209,https://su2code.github.io,https://github.com/su2code/SU2/pull/281#issuecomment-223821839,1,['depend'],['depend']
Integrability,"Thanks for your hints. Now I understand that:; a) In `CPhysicalGeometry::LoadSurfaceElements`, the process finds those global markers that have at least one element adjacent to the subdomain of the process, and assigns local IDs. The function is called in the constructor of `CPhysicalGeometry`.; b) The transfer of quantities from one MPI process to another is done with additional markers of type `SEND_RECEIVE`. They are created e.g. in `CPhysicalGeometry::SetSendReceive` => after the constructor has been called. I also saw that the problem of mapping local (non-`SEND_RECEIVE`) markers to some global identifiers can be (and is) solved by the `string` `config->GetMarker_All_TagBound(val_marker)`. And probably there is no point in assigning a global ID to each pair of communicating `SEND_RECEIVE` markers.; ; So there is no need for the local<->global mapping that I intended to implement. Instead I will just remove the two members of `CPhysicalGeometry` and what depends on it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1110#issuecomment-762234155:973,depend,depends,973,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110#issuecomment-762234155,1,['depend'],['depends']
Integrability,Thanks for your remarks. I already named the routines AD/FD to prepare for that. With an appropriate config option this also works then for the cont. adjoint. I'll try that first before merging.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/239#issuecomment-183855554:45,rout,routines,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/239#issuecomment-183855554,1,['rout'],['routines']
Integrability,"Thanks for your reply. 3.0.12 works well in my own machine. But the newest version in HPC is 3.0.10. I have required ICT to install it. Hopefully, it will be done tomorrow. Thanks. Ëé∑Âèñ Outlook for iOS<https://aka.ms/o0ukef>; ________________________________; Âèë‰ª∂‰∫∫: Pedro Gomes ***@***.***>; ÂèëÈÄÅÊó∂Èó¥: Monday, April 25, 2022 8:49:52 PM; Êî∂‰ª∂‰∫∫: su2code/SU2 ***@***.***>; ÊäÑÈÄÅ: Jia, Guangnan ***@***.***>; Author ***@***.***>; ‰∏ªÈ¢ò: Re: [su2code/SU2] Fail to Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx' (Issue #1617). This email from ***@***.*** originates from outside Imperial. Do not click on links and attachments unless you recognise the sender. If you trust the sender, add them to your safe senders list<https://spam.ic.ac.uk/SpamConsole/Senders.aspx> to disable email stamping for this address. Should work with swig 3.0.11 onward according to this https://www.swig.org/; (I have 3.0.12 and it's fine); Please confirm if upgrading swig works for you and I will try to put this requirement meson. ‚Äï; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/1617#issuecomment-1108974316>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ANDDBRPFTZJQUMEUKVME6GLVG3ZOBANCNFSM5UI2ADRA>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1617#issuecomment-1108977945:1281,Message,Message,1281,https://su2code.github.io,https://github.com/su2code/SU2/issues/1617#issuecomment-1108977945,1,['Message'],['Message']
Integrability,"Thanks, @clarkpede, for this PR and for the clear explanation of the features proposed. LGTM in terms of implementation and code style. I'll just wait for @EduardoMolina to comment on the contents. I only have a couple of minor questions:. > I moved the calculation of the maximum cell width to the CPhysicalGeometry class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver. I can see this approach reduces the computational cost of computing the MaxLength every time at the cost of having one more double in memory per point. However, would a call to SetMaxLength() be necessary in case of deformable meshes? . Also, from PR #532:; > As for code verification, I would propose using one of the cases examined by Travin, Stretlets, Mockett, or Xiao for comparison. (...) The cases I can see where they explicitly show the results of the blending function are: Circular cylinder at Re = 50,000 (Travin et al. 2002) (...). I guess this is the case for which you are showing the rough tests results in the Code Verification section. I am currently looking into some test cases at similar Re regimes. Are you using the unsteady compressible solver for this verification? I noticed that in Ref.[1] they use artificial compressibility, and I was wondering if we could also use this test case to look into the unsteady, incompressible (preconditioned) version of the solver (PR #514).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-403842613:430,depend,dependent,430,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-403842613,2,['depend'],['dependent']
Integrability,"Thanks, Ben! We're getting this all integrated as we speak...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/135#issuecomment-67568529:36,integrat,integrated,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/135#issuecomment-67568529,1,['integrat'],['integrated']
Integrability,"Thanks, Tim. Did you check if this is related to the compiler or architecture, by any chance? I know that the partitions provided by ParMETIS change depending on the system (although they should be deterministic). In the past, compiler optimizations have led to non-deterministic behavior on some systems. Does it still occur with -O0 optimization?. We'll look into it too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/276#issuecomment-221407884:149,depend,depending,149,https://su2code.github.io,https://github.com/su2code/SU2/issues/276#issuecomment-221407884,1,['depend'],['depending']
Integrability,"Thanks, looks like a straight forward setup (I was hoping for obscure features that do not get used often).; Is the problem case dependent (e.g. does it also happen with the quickstart case)? Or number of cores dependent?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-623639143:129,depend,dependent,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623639143,2,['depend'],['dependent']
Integrability,"That does not look like an MPI problem (yup automake + preconfigure.py is the legacy system). The probable problem there is that your OpenBLAS was not build with support for LAPACK functions (the undefined references in the error messages from the linker). If you are building OpenBLAS from source there is an option to provide LAPACK support (if I recall correctly, this is the default so I'm guessing you are using what the operating system provides).; The best solution is to get OpenBLAS with LAPACK support, alternatively:; - Install LAPACK for your operating system and below line 155 of meson.build add ```su2_deps += dependency('lapack')``` (this will use pkg config).; - Delete line 153 of meson.build, i.e. keep BLAS but disable LAPACK, this can either make what you are doing much slower, or have no difference at all...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721373702:230,message,messages,230,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721373702,2,"['depend', 'message']","['dependency', 'messages']"
Integrability,"That heavily depends on the filesystem as the linker copies and moves huge amounts of data. On my local machine linking is pretty fast, in the same order of compiling one file. However, on our cluster it is rather slow because its a (parallel) network filesystem. Anyway, in contrast to make, ninja builds ALL objects files in parallel without waiting for a specific static library to be linked. Linking is done as soon as all required object files are ready in parallel with the compilation of other object files. So yeah, for minor code modifications linking can still be the limiting factor, but there is no way around that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-516459774:13,depend,depends,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-516459774,1,['depend'],['depends']
Integrability,"That is dependent on #866, which is still in progress",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889#issuecomment-609967142:8,depend,dependent,8,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-609967142,1,['depend'],['dependent']
Integrability,"That is true. In that case, I will mute the SetAnalyzeSurface function entirely and create an error message. Will update in a minute.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1772#issuecomment-1257255255:100,message,message,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/1772#issuecomment-1257255255,1,['message'],['message']
Integrability,"That's not consistent with any code I know, when using the MRF approach you either get frozen rotor or mixing plane interfaces. If you want a more accurate simulation you move the mesh and update the interfaces, there are several advantages to not dealing with the MRF source terms. There are also practical aspects of not updating the interface when doing transient MRF, for example it lets you handle interfaces that are not cylindrical, people use this to model car wheels.; MRF is also less restrictive for time step size than moving mesh, but if you move the interface you bring some of the moving mesh restrictions to MRF. So my impression is that this strategy combines some of the downsides of both approaches...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1952787949:116,interface,interfaces,116,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1952787949,5,['interface'],"['interface', 'interfaces']"
Integrability,The ILU issue depends on number of cores regardless of MPI/OpenMP split.; The non-determinism of the NK solver should be worse with more threads.; I recommend initializing from the coarse results.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2340156243:14,depend,depends,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2340156243,1,['depend'],['depends']
Integrability,"The address sanitizer reports a heap buffer overflow for [this](https://github.com/su2code/SU2/blob/e33871a2c22dd1eefb3a023ea28369b1ca249b3f/SU2_CFD/src/interfaces/CInterface.cpp#L314) piece of code. I presume the issue is the access `SpanValuesDonor[kSpan + 1]` in the case that `kSpan == nSpanDonor - 1` so that `kSpan` references the last array entry already. Below is a stripped-down version of the corresponding code.; ```; ...; for (jSpan = 0; jSpan < nSpanDonor; jSpan++) {; ...; if (...); kSpan = jSpan;; ...; }; ... SpanValuesDonor[kSpan + 1] ...; ```. Is someone familiar with the `CInterface` code and could make recommendations for a fix?. Below is the address sanitizer report, see also [here](https://github.com/su2code/SU2/actions/runs/8536216515/job/23386086770?pr=2246#step:7:2062). ```; ==2308==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60f0008c96a0 at pc 0x558b6435ae51 bp 0x7ffc1cebf680 sp 0x7ffc1cebf670; READ of size 8 at 0x60f0008c96a0 thread T0; #0 0x558b6435ae50 in CInterface::PreprocessAverage(CGeometry*, CGeometry*, CConfig const*, CConfig const*, unsigned short) ../SU2_CFD/src/interfaces/CInterface.cpp:314; #1 0x558b6373d23a in CDriver::PreprocessTurbomachinery(CConfig**, CGeometry****, CSolver*****, CInterface***, bool) ../SU2_CFD/src/drivers/CDriver.cpp:2725; #2 0x558b63770d76 in CDriver::CDriver(char*, unsigned short, int, bool) ../SU2_CFD/src/drivers/CDriver.cpp:250; #3 0x558b637f54c2 in CMultizoneDriver::CMultizoneDriver(char*, unsigned short, int) ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:35; #4 0x558b63615b53 in main ../SU2_CFD/src/SU2_CFD.cpp:135; #5 0x7f0d8c503082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082); #6 0x558b6367005d in _start (/github/workspace/install/bin/SU2_CFD+0x63405d). 0x60f0008c96a0 is located 0 bytes to the right of 176-byte region [0x60f0008c95f0,0x60f0008c96a0); allocated by thread T0 here:; #0 0x7f0d8ed00787 in operator new[](unsigned long) ../../../../src/libsanitizer/asan/asan_new_del",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720:153,interface,interfaces,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720,1,['interface'],['interfaces']
Integrability,"The adjoint handling of the Eigen library can actually be a two step process. In the first step we just use the BlackBox differentiation of Eigen. This will work for every user in the primal code and adjoint code. As a second step we would then look into the BLAS wrapper of Eigen and check if we can provide a special treatment for the adjoint aka CoDiPack version. In general there are two options available:. 1. Wrap the BLAS calls in external functions, requires a lot of manual programming but can be generalized so that it is also available as a general feature of CoDiPack (e.g. We can handle BLAS to XX %). 2. Make use of the ""new"" AD tool I am currently programming. This tool does not insert itself into the Eigen structures, but wraps around them. Then the special path for BLAS can be activated without the AD tool even noticing it. For both options it will be very interesting for us to see how the performance compares with respect to the primal optimized and non optimized version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-462272618:264,wrap,wrapper,264,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-462272618,3,"['Wrap', 'wrap']","['Wrap', 'wrapper', 'wraps']"
Integrability,"The build fails with old compilers due to the upgrade of the Ubuntu version; in the Docker images used by CI.; Ubuntu 20.04 comes with GCC 9.4, I believe.; Should it install older GCC?. On Wed, Jul 6, 2022, 19:13 Pedro Gomes ***@***.***> wrote:. > We have been trying to support gcc 4.8.5; >; > ‚Äî; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/1701#issuecomment-1176416059>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AABYUQTAQAPJR75UCKTGMF3VSWWDPANCNFSM52ZNEMQA>; > .; > You are receiving this because you are subscribed to this thread.Message; > ID: ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1701#issuecomment-1274280362:612,Message,Message,612,https://su2code.github.io,https://github.com/su2code/SU2/issues/1701#issuecomment-1274280362,1,['Message'],['Message']
Integrability,The case is now also failing in #745. Tested it locally and found that the result is compiler dependent. GCC5.4 and GCC9 give different results.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/734#issuecomment-516389102:94,depend,dependent,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/734#issuecomment-516389102,1,['depend'],['dependent']
Integrability,"The case with large change of residuals (3 orders) is the rotating cylinders case (sliding interface).; With this PR I get the following flow field at the last iteration:; ![image](https://user-images.githubusercontent.com/38071223/59783874-0ca11880-92b9-11e9-840e-20fd87ec17e9.png); With develop I get this one at time iter 2:; ![image](https://user-images.githubusercontent.com/38071223/59783928-2cd0d780-92b9-11e9-90bd-9155dd2a6b4e.png); And I think it is fair to say the case was actually blowing up before:; ![image](https://user-images.githubusercontent.com/38071223/59784008-5984ef00-92b9-11e9-89e0-d78eb0d76b90.png); If I change the linear preconditioner to the ILU the develop results are basically the same as with this PR. Why does the previous LU_SGS diverge and the current doesn't? No idea, maybe for a different limit condition it would go the other way...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-503643650:91,interface,interface,91,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-503643650,1,['interface'],['interface']
Integrability,"The changes to SU2 are mostly minor. There are some adaptions regarding external functions, due to interface changes from CoDiPack 1 to CoDiPack 2. The `callPrimalFuncWithADType` is necessary for correct output handling. Passing the external function to it is the intended usage, therefore the encapsulation of the respective code block in a lambda expression. `callPrimalFuncWithADType` also takes care of the tape activity, which was previously spelled out in SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1903#issuecomment-1451814899:99,interface,interface,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/1903#issuecomment-1451814899,1,['interface'],['interface']
Integrability,"The corresponding OpenMP functionality would more something be like OpenMP single in order to print the error message once. I don't know MPI-3 too well yet, but I can have a look. Then we can make a decision whether or not we want to have MPI-3 functionality in there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/564#issuecomment-417216607:110,message,message,110,https://su2code.github.io,https://github.com/su2code/SU2/issues/564#issuecomment-417216607,1,['message'],['message']
Integrability,"The degrees are specified by ""logic"" axis (i j k), i.e. the result depends in the order you specify the corners in FFD_DEFINITION, e.g. your geometry has the span aligned with X, whereas in the first image the span is aligned with Y. Personally I find it confusing too, I just end up swapping things around until I get what I want.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/977#issuecomment-626871785:67,depend,depends,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626871785,1,['depend'],['depends']
Integrability,"The developer who worked on it was @frx-wintermute in #1951 ; A lot of those packages are header-only, not compiled libraries, if you use different versions than the ones we use in our regression tests you have no guarantees that the code will work properly, and it seems you are mostly interested in stability.; If you want to make changes to the meson.build script to look for local versions of libraries like cgns, parmetis, etc. see e.g. https://github.com/su2code/SU2/discussions/2064; We also have examples like this:; ```; pastix_dep = dependency('pastix', required: false). if not pastix_dep.found(); pastix_root = get_option('pastix_root')+'/install'; scotch_root = get_option('scotch_root')+'/lib'; pastix_dep = declare_dependency(include_directories: pastix_root,; link_args: [ '-L../'+pastix_root, '-L../'+scotch_root,; '-lpastix', '-lscotch', '-lptscotch', '-lptscotcherr',; '-lm', '-lrt', '-lpthread']); endif; su2_deps += pastix_dep; ```; where we try to use pkg-config and fall back to specifying paths. I recommend using pkg-config whenever possible.; If either you or @frx-wintermute are interested in complementing the feature by adding an option to prefer system libraries (via pkg-config, no paths because 99.9% of users will not know what to do) instead of the versions shipped with SU2, please go ahead and open a PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1646018871:543,depend,dependency,543,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1646018871,1,['depend'],['dependency']
Integrability,"The discrete adjoint may still run with the chosen objective, since that is entirely defined within the C++, but some additional steps may be needed to run your objective with the Python framework. First, I recommend that you verify in your primal solve that you can compute one of your chosen objectives such as ENTROPY_GENERATION, and that it appears in the history file, since this is a prerequisite for running shape optimization with the Python framework. You should be able to follow details of the old ENTROPY_GENERATION objective if you look in the COutputLegacy::SpecialOutput_Turbo() routine in the legacy output. Note that you may need to do some work to connect this for your particular problem, since as mentioned, the turbomachinery related features are currently being brought into line with the most recent version of the software, and the routine may not be called by default. Once you have your desired objectives being computed and printed to the history file, give the updateHistoryMap.py script a look so that you can update the fields that the python framework can handle. As for custom objectives, there is a variable within the fluid solvers named Total_Custom_ObjFunc that will be differentiated for you if you use it compute a custom expression within the solver class (you can do this in multiple places within the solver class, but make sure it is called). Same suggestions apply for making sure that you can compute the custom objective, it appears in the history file, and that the python script is updated to read that particular field during optimization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889#issuecomment-609959747:594,rout,routine,594,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-609959747,2,['rout'],['routine']
Integrability,"The discrete adjoint solvers (all of them, with deforming or static grids) compute sensitivities with respect to displacing individual nodes, the only projection done on the surface sensitivities is onto the surface normal (my previous reply was incomplete).; But this is just for post processing, this manipulation still does not consider that moving a surface node (e.g. through an FFD variable) also moves internal nodes, due to the _design mesh deformation_ (as opposed to FSI deformation for example). The volume sensitivity projection of SU2_DOT_AD is the differentiation of SU2_DEF. For deforming grid cases this step is still required, the best way I can put it in words is that the results still depend on the initial / reference coordinates of the grid, if you move any point of the initial grid you change the results, as you change not only the deformed final position of the point, but also the way the mesh itself responds to the physical (e.g. FSI) surface displacements that it is subject to.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1017#issuecomment-640078507:705,depend,depend,705,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-640078507,1,['depend'],['depend']
Integrability,The externals/ directory changes are intentional. They correct some issues with CGNS library implementation. Those fixes are now being integrated in the develop branch of CGNS library and should be available in the next fix release around the end of the year.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-511712751:135,integrat,integrated,135,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-511712751,1,['integrat'],['integrated']
Integrability,"The interpolation tool I use is a standalone program and not integrated into SU2. However, it is possible that @bmunguia and @jayantmukho have integrated it into SU2. Is that the case?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466#issuecomment-505741019:61,integrat,integrated,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/466#issuecomment-505741019,2,['integrat'],['integrated']
Integrability,"The message will look like this:; ```; The FFD box 'BLADE_BOX' is not properly defined. The first 4 points must be listed counter; clockwise, such that applying the right-hand rule results in a vector into the box.; This is according to the VTK hexahedron ordering:; 7 +----+ 6 ; /| /| ; 4 +----+5| ; |3+--|-+ 2 ; |/ |/ ; 0 +----+ 1 ; The CCW convention also applies in 2D, where only the bottom face is specified.; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025#issuecomment-1547062720:4,message,message,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025#issuecomment-1547062720,1,['message'],['message']
Integrability,"The native mesh adaption was deprecated. The amg interface is in development, you can re-open some of the issues where it is mentioned to ask new questions (that way all ""documentation"" stays in one place).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143#issuecomment-751685783:49,interface,interface,49,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143#issuecomment-751685783,1,['interface'],['interface']
Integrability,"The problem is not related to the OpenMPI library but the system's libz library and the fact that apparently it is not compiled using the -fPIC option (to create Position Independent Code, which means that the generated machine code is not dependent on being located at a specific address in order to work) but SU2 is compiled or must be compiled with this option in order to work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568#issuecomment-1074863970:240,depend,dependent,240,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568#issuecomment-1074863970,1,['depend'],['dependent']
Integrability,"The residuals (and indeed the converged results) change for some cases due to these changes (by very small amounts). Looking at limiter fields there are some differences that justify this. Those differences are present mostly in smooth flow regions, why in this regions?; Because this is where the old edge loops had a lot of logic to avoid divisions by zero, that is not required for the point loop implementation. There was also a change to the epsilon that initializes the min/max calculation (it now comes from the traits of the datatype).; I used the transonic_stator case to check that:; - The computed limiters are not too different, especially near periodic boundaries (for which a change in how min/max neighbor calculation was required).; - The results do not depend on number of ranks / threads. This is the flow field (for reference):; ![image](https://user-images.githubusercontent.com/38071223/72300708-779eac00-365c-11ea-9054-8b83a6ca8fe3.png). This shows the x-mom limiters near the trailing edge for the develop version:; ![image](https://user-images.githubusercontent.com/38071223/72300849-e3811480-365c-11ea-9fc6-3989c59d9997.png). And this for this branch:; ![image](https://user-images.githubusercontent.com/38071223/72300903-07445a80-365d-11ea-8bf0-eba72a2b50af.png). You can tell a slight ""darkening"" close to the blue spots, and also before the small spot close to the wall, before the shock. Near the periodic boundaries there are no visible changes.; I ran the case with 1 rank 1 thread (1/1), 1/4 and 4/8 (32 total), the results are the same (the convergence rate is different due to the behavior of the preconditioner).; [files.zip](https://github.com/su2code/SU2/files/4056576/files.zip). If you would like a specific test, or see some weird behavior in one of your cases let me know, but since only a few regressions changed I will only post comparisons of cases with substantial changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/834#issuecomment-573929388:770,depend,depend,770,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-573929388,1,['depend'],['depend']
Integrability,"The routine you are looking for is probably this one:. `void CPhysicalGeometry::SetGridVelocity(CConfig *config, unsigned long iter)` geometry_structure.cpp:14760 (cannot paste a link, the file is too big)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766#issuecomment-524363232:4,rout,routine,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/766#issuecomment-524363232,1,['rout'],['routine']
Integrability,"The source term is pretty simple but the feature as a whole is very intrusive on the code, even the mesh deformation is getting involved in this.; Would it be viable to use the python wrapper to provide the source term?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2273#issuecomment-2098573850:184,wrap,wrapper,184,https://su2code.github.io,https://github.com/su2code/SU2/pull/2273#issuecomment-2098573850,2,['wrap'],['wrapper']
Integrability,"There are certainly parameters in the config, and if you had posted yours I could give advice without having to write a bloody essay on all of them. DEFORM_STIFFNESS_TYPE= WALL_DISTANCE // always; DEFORM_COEFF= ""nu"" // the Poisson ratio, default 1E6, you can also try a small value 0.2-0.3; DEFORM_LIMIT= ""R"" // clamps domain points with wall distance greater than ""R"", this improves the condition of the stiffness matrix, which makes it easier for the linear solver to converge.; DEFORM_CONSOLE_OUTPUT= YES // so you can see if the linear solver converges; DEFORM_NONLINEAR_ITER= 1 // always; DEFORM_LINEAR_SOLVER = FGMRES // or CONJUGATE_GRADIENT if memory becomes a problem, i.e. if GMRES does not converge in 100-200 iterations.; DEFORM_LINEAR_SOLVER_PREC = ILU // always, always, never anything else.; DEFORM_LINEAR_SOLVER_ERROR= 1e-9 // at least, I usually set it to 1e-10; DEFORM_LINEAR_SOLVER_ITER= 200 // or a much larger number when using CG since its memory usage does not depend on number of iterations",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1026#issuecomment-645265175:984,depend,depend,984,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026#issuecomment-645265175,1,['depend'],['depend']
Integrability,There is a contribution to the Jacobian because the heat flux depends on the temperature at the node. Does it work better if you remove that contribution?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1643929911:62,depend,depends,62,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1643929911,1,['depend'],['depends']
Integrability,"There's no using the develop branch. Develop software don't make their way in our module systems, we only install releases, with tarbals of the sources and checksums of those tarballs, as we aim for reproducibility. . We have a large number of build tools, including pkgconfig, cmake, meson, ninja, bazel, autoconf, etc. We use EasyBuild to wrap things up and generate modules.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645653439:341,wrap,wrap,341,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645653439,1,['wrap'],['wrap']
Integrability,"These are all fantastic questions. I have exclusively used SLSQP for any optimizations that I have run. So, I can only speak to that optimization algorithm. . > Why do we want the gradient norm to be ~1E-6?. Not sure why this is. I agree with what @economon said. These tuning parameters are to coax out an ideal step size for the optimizer. As you can imagine, the ideal step size is wildly varying depending on the optimization objectives/constraints, scales of the geometry, and types/numbers of design variables that are being used. You have to play this game of scaling the objectives and constraints in different ways to coax out the ideal first step. In my limited testing, the value of 1E-6 for the gradient norm seems to work well for 3D RANS aerodynamic shape optimizations of an aircraft wing when using FFD control points to change the shape of the wing. This is a specific use case that was the subject of a lot of the underlying research that resulted in the shape optimization framework. Which is likely why I have had good results using this rule of thumb. . > Is 1E-6 a good rule? Or is it just a decent starting point, and values very different from 1E-6 are used in practice? Also, if this is ""a good rule,"" then shouldn't we just automatically rescale the problem after the first design iteration?. Scaling in an optimization problem can be pretty frustrating and time consuming. Anecdotally, I have been using @economon 's suggestions of leaving everything else as default (value of 1) and only playing with the objective and constraint scalings to get a good first step size. As mentioned before, this step size is of different values for different problems, which is why it is difficult to come up with universal scalings that would work for most problems. But I am hoping to address some of these scaling issues in #923 . . I haven't really found much good literature on this problem, but I might be looking in the wrong places. Recommendations are welcome. . A big boon is hav",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616810829:400,depend,depending,400,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616810829,1,['depend'],['depending']
Integrability,These changes are still related to the preprocessing.. I was thinking more about the actual reconstructions in the Upwind_Residual() routine. We have booleans that should be brought in line there too.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/403#issuecomment-319187443:133,rout,routine,133,https://su2code.github.io,https://github.com/su2code/SU2/pull/403#issuecomment-319187443,1,['rout'],['routine']
Integrability,"This bug pops up because the periodic mesh reconstruction (in `SU2_MSH`) doesn't always create a valid mesh in 3D. Some points disappear, and some points are duplicated. When `SU2_CFD` (specifically, `CPhysicalGeometry`) tries to get the number of points in the domain, it calculates the wrong number because some of those points are duplicated. That leads to segfaults, because the output routine thinks the extra (missing) points belong to another processor. I've got a little toy problem with a simple periodic cube. It's easy to see on the simple 4x4x4 (+ periodic) problem that 3 nodes disappear, and 3 nodes are duplicated. I've never observed this problem in any of the 2D test cases I ran. As to why `SU2_MSH` is missing some points and duplicating others, I'm not sure. I tried running Valgrind to check for uninitialized variables or illegal memory access, but nothing there. I'll have to look more into the problem. The `su2_periodic.f90` script mentioned in #416 seems to be a workaround. I don't run into any problems when I use that script.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431#issuecomment-337056131:390,rout,routine,390,https://su2code.github.io,https://github.com/su2code/SU2/issues/431#issuecomment-337056131,2,['rout'],['routine']
Integrability,"This had to be more intricate than first impressions suggested...; The displacements applied by CElasticityMovement to FSI interfaces come from the vertices, but halo vertices do not have the correct (i.e. communicated) coordinates which means for those the force vector contributions were not being computed correctly.; The known blocks (prescribed displacement) of the displacement vector are now set and communicated before ""de-singularizing"" the matrix, that process then grabs displacements from the displacement vector instead of from the vertices.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/658#issuecomment-467051581:123,interface,interfaces,123,https://su2code.github.io,https://github.com/su2code/SU2/pull/658#issuecomment-467051581,1,['interface'],['interfaces']
Integrability,"This has the green light to be merged for me. Taking off the WIP tag. @MicK7 : I have added an error message if a user tries to use a multizone CGNS file for now. It is still possible to run multizone problems by using a separate CGNS single zone file for each zone. Reading multizone CGNS would be a new capability anyway, so I think we should take it out of the critical path and see if we can get it working separately together in the next couple of weeks. That way, we can proceed with merging this and other PRs in the backlog.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-526775115:101,message,message,101,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-526775115,1,['message'],['message']
Integrability,This is a big change that will affect all the config files... could you please add a meaningful error message if somebody uses the old options? Thanks!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/451#issuecomment-336345293:102,message,message,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/451#issuecomment-336345293,1,['message'],['message']
Integrability,"This is a very important topic, @jayantmukho. The optimization functionality is very difficult for folks to get working on their own. There are too many options, and it is not user friendly. We need to improve, and I am open to streamlining the interface if you have some ideas. In general, the bevy of options that you nicely describe above have been added over the years in order to coax the scipy SLSQP optimizer into converging, especially with constraints. It has mostly been a trial-and-error process during that time. Most of the tricks involve getting the scaling set such that the SLSQP optimizer does not take any massively errant steps during its line search that cause divergence. I think it would be great to see a standard normalization of the problem (say, make everything on the order of 1 going in/out of the optimizer) and interfaces to new optimizers (this exists already in part in feature_pyopt). In practice, I use **ONLY** the Scale value in OPT_OBJECTIVE and OPT_CONSTRAINT (set to a value that results in a first optimizer step roughly 10% the characteristic length of my geometry), and ignore the options OPT_GRADIENT_FACTOR, OPT_RELAX_FACTOR, and OPT_LINE_SEARCH_BOUND. I sometimes use the OPT_BOUND_UPPER and OPT_BOUND_LOWER options. But even this approach still requires some manual tuning.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-520726069:245,interface,interface,245,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-520726069,2,['interface'],"['interface', 'interfaces']"
Integrability,"This is already possible with the python wrapper, see testcases/py_wrapper/flatPlate_unsteady_CHT_FlatPlate.py; I am against adding any more ""profile files"" to SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553#issuecomment-1057930032:41,wrap,wrapper,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1057930032,1,['wrap'],['wrapper']
Integrability,"This is possible using the Python wrapper. There are no tutorials for this yet, but you can check out PR #488, PR #503. PR #516. There's currently a regression test using unsteady heat-transfer boundary conditions at: https://github.com/su2code/SU2/tree/master/TestCases/py_wrapper/flatPlate_unsteady_CHT . You can use that as an example. Velocity BCs will be very similar.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1079#issuecomment-701405812:34,wrap,wrapper,34,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-701405812,1,['wrap'],['wrapper']
Integrability,"This is the sort of scalability (in terms of time to solution, not per iteration) we get now:; ![image](https://user-images.githubusercontent.com/38071223/83768964-2fb60b00-a677-11ea-91fb-794cc2af4652.png); Which you can directly compare with #861. Edit: The results at 192c are actually better, it depends on the position of the cluster nodes in the network, the update is apples to apples.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1009#issuecomment-636478203:299,depend,depends,299,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009#issuecomment-636478203,1,['depend'],['depends']
Integrability,"This is very interesting, since I often find that I am commenting out most of the python regression script when debugging only a couple of tests locally. Can you estimate how much work this would be? Is it just a simple wrapping of what we already have? We would also have to make sure that Travis CI can handle it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/462#issuecomment-342593274:220,wrap,wrapping,220,https://su2code.github.io,https://github.com/su2code/SU2/issues/462#issuecomment-342593274,2,['wrap'],['wrapping']
Integrability,"This issue is relevant to many environments.; For a long time I made a bypass using the environment variable SU2_RUN.; Setting in before a parallel run in a bash command:; export SU2_RUN=‚Äù-machinefile=[machinefile] -env I_MPI_DEVICE rdma [SU2 location]/SU2/bin‚Äú; Then ; parallel_computation.py -n [N] ; It only requires a small modification in ; [Home-source]/SU2/SU2_PY/SU2/run/interface.py ; Replace ; base_Command = os.path.join(SU2_RUN,'%s'); with; base_Command = SU2_RUN+""%s""; Then it works smoothly. ; Would you like to consider this as an alternative ?; Best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/335#issuecomment-263671223:379,interface,interface,379,https://su2code.github.io,https://github.com/su2code/SU2/pull/335#issuecomment-263671223,1,['interface'],['interface']
Integrability,"Tim,. I can share some initial impressions. I‚Äôm trying to build the Mesa 3D graphics library, which recently switched to Meson and Ninja. They are pretty impressive. It looks like Meson uses both pkg-config and (more recently) CMake under the hood. For specific packages that don‚Äôt play nicely with pkg-config, it will look for other similar utilities, such as llvm-config for the LLVM library. I have a beef mostly with documentation, but that‚Äôs hardly unusual in the open source world, and maybe not so relevant to SU2, which doesn‚Äôt have the multitude of external dependencies that many open source projects do. I think the struggles I have had relate mostly to the non-transparent way that Meson interacts with the underlying utilities (pkg-config, CMake, llvm-config,‚Ä¶). For example, I had to fumble around to get Meson to find llvm-config in a non-standard location (adding that location to $PATH turned out to be the answer), as well as to get pkg-config to find its required pkgconfig directories in non-standard locations (adding them to $PKG_CONFIG_PATH was the answer there). I also had to build/install Python 3 (required by Meson), and found that the Python 3.7 has problems with OpenSSL (module _ssl), on which Meson depends, so I went back to Python 3.6. I imagine any pre-built Python 3.7 would be fine, though a related bug appears to still be open (https://bugs.python.org/issue34028). On Windows, Meson will output Visual Studio projects, which would make any Windows developer happy, but your source still has to be cross-platform friendly‚Äînot a problem for TecIO, but I don‚Äôt know if that‚Äôs true elsewhere in SU2. FWIW,. Dave. From: Tim Albring [mailto:notifications@github.com]; Sent: Wednesday, May 22, 2019 7:31 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] Meson build system (#685). To see a major advantage, just compare the meson.build and the configure.ac file ... ‚Äî; You are receiving this becaus",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-494848848:567,depend,dependencies,567,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-494848848,1,['depend'],['dependencies']
Integrability,Time to merge this one. Please just let me know if you run into any issues with the new partitioning routines.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/513#issuecomment-387257646:101,rout,routines,101,https://su2code.github.io,https://github.com/su2code/SU2/pull/513#issuecomment-387257646,1,['rout'],['routines']
Integrability,"To answer the first question, yes, the distance calculations are done based the entire surface of a boundary element. This is done using routines written by @vdweide for the higher order solver. In short, the distance to the wall of a node in the mesh is found by finding the projection of the said node on a boundary element, and the distance is calculated using that information. . I validated this on a host of grids, some of which had sheared elements near the wall, and this procedure seemed to give the right predictions regardless of the quality of the mesh. . Yes, from what I understand, by the end of the ComputeWall_Distance function all the memory, weather it is the vectors or the ADT itself, should be deallocated. I based this code on what Edwin was doing so he might be able to substantiate on why he deallocates the vectors immediately.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-435105466:137,rout,routines,137,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-435105466,1,['rout'],['routines']
Integrability,"To everyone searching for the code in latest develop (there also @bigfooted's paper is given maybe, also it might be another from Eduardo Molina?) I posted it below.; It seems you are using an older version of the code so please compare it with the latest which is posted below. (I am too lazy to check myself, and I am also not knowledgeable in this stuff). (@ShiheJia when posting code please dont include every line number, keep the formatting and post the code wrapped in `'''c++ <code> '''` with `'` being the forward pointing tick); ```c++; case SA_EDDES: {; /*--- An Enhanced Version of DES with Rapid Transition from RANS to LES in Separated Flows.; Shur et al.; Flow Turbulence Combust - 2015; ---*/. su2double vortexTiltingMeasure = nodes->GetVortex_Tilting(iPoint);. const su2double omega = GeometryToolbox::Norm(3, vorticity);. su2double ratioOmega[MAXNDIM] = {};. for (auto iDim = 0; iDim < 3; iDim++){; ratioOmega[iDim] = vorticity[iDim]/omega;; }. const su2double deltaDDES = geometry->nodes->GetMaxLength(iPoint);. su2double ln_max = 0.0;; for (const auto jPoint : geometry->nodes->GetPoints(iPoint)) {; const auto coord_j = geometry->nodes->GetCoord(jPoint);; su2double delta[MAXNDIM] = {};; for (auto iDim = 0u; iDim < nDim; iDim++){; delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);; }; su2double ln[3];; ln[0] = delta[1]*ratioOmega[2] - delta[2]*ratioOmega[1];; ln[1] = delta[2]*ratioOmega[0] - delta[0]*ratioOmega[2];; ln[2] = delta[0]*ratioOmega[1] - delta[1]*ratioOmega[0];; const su2double aux_ln = sqrt(ln[0]*ln[0] + ln[1]*ln[1] + ln[2]*ln[2]);; ln_max = max(ln_max, aux_ln);; vortexTiltingMeasure += nodes->GetVortex_Tilting(jPoint);; }; vortexTiltingMeasure /= (nNeigh + 1);. const su2double f_kh = max(f_min,; min(f_max,; f_min + ((f_max - f_min)/(a2 - a1)) * (vortexTiltingMeasure - a1)));. const su2double r_d = (kinematicViscosityTurb+kinematicViscosity)/(uijuij*k2*pow(wallDistance, 2.0));; const su2double f_d = 1.0-tanh(pow(8.0*r_d,3.0));. su2double maxDelta = (ln_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462#issuecomment-985689737:465,wrap,wrapped,465,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-985689737,1,['wrap'],['wrapped']
Integrability,"Tom, I see your point with the exit message. The current style is the following;. ```; ------------------------ Iteration Preprocessing ------------------------; Zone 1: Euler/Navier-Stokes/RANS fluid iteration. ------------------------- Solver Preprocessing --------------------------. Error in ""void CSolver::Read_SU2_Restart_Metadata(CGeometry*, CConfig*, bool, std::__cxx11::string)"": ; -------------------------------------------------------------------------; Unable to open restart file solution_flow.dat; ------------------------------ Error Exit -------------------------------. ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-354017856:36,message,message,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-354017856,1,['message'],['message']
Integrability,"True that, I built it without the python wrapper locally. This build command worked for me. ; ```; ./meson.py omptestenv --buildtype=debug --warnlevel=2 -Denable-autodiff=true -Denable-directdiff=true -Dwith-omp=true; ```. The ""T"" in OMPT stands for ""tools"", see Chapter 4 of the [OpenMP 5.1 specification](https://www.openmp.org/spec-html/5.1/openmp.html). We also explain it with a focus on AD in our [preprint](https://arxiv.org/abs/2102.11572).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1214#issuecomment-788237663:41,wrap,wrapper,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214#issuecomment-788237663,1,['wrap'],['wrapper']
Integrability,"Try v7.0.2. On Mon, 9 Mar 2020, 02:05 timjim333, <notifications@github.com> wrote:. > Hi,; >; > I've got an issue where on starting an SU2 6.2.0 Falcon case, the; > preprocessing steps run but then the output gets stuck at:; >; > ---------------------- Python Interface Preprocessing; > --------------------- Setting customized boundary conditions for zone 0; >; > - and remains frozen there until I kill the job.; >; > It seems to have happened for only 3 out of nearly 400 successful cases.; > They are all similar, running Euler at Mach 1.7, on 40 cores. They all have; > similar simple body, farfield, and and symmetry conditions.; >; > I'm not sure of the best way to diagnose this, so any guidance would be; > appreciated.; >; > Many thanks and kind regards,; > Tim; >; > ‚Äî; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/907?email_source=notifications&email_token=AJCOXN63UWSSF6UABZZXXFLRGQ6EJA5CNFSM4LD6ZHGKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4ITNPDMQ>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN6R6JOEQCAYH7FKCLTRGQ6EJANCNFSM4LD6ZHGA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/907#issuecomment-596654031:260,Interface,Interface,260,https://su2code.github.io,https://github.com/su2code/SU2/issues/907#issuecomment-596654031,1,['Interface'],['Interface']
Integrability,Try wrapping the path in single quotes `MESH_FILENAME= 'D:\executable22\401_cfd_2d\proj5\mesh.su2'`,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1658#issuecomment-1152762841:4,wrap,wrapping,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/1658#issuecomment-1152762841,1,['wrap'],['wrapping']
Integrability,"UCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link current files; ; config_cfd = copy.deepcopy(config); for opt in adap_options:; config_cfd.pop(opt, None); config_cfd.LOW_MEMORY_OUTPUT = ""NO""; ; config_cfd.WRT_BINARY_RESTART = ""NO""; #config_cfd.R",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:3978,interface,interface,3978,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['interface'],['interface']
Integrability,Unfortunately it looks like the serial regression test with Python wrapper is timing out for both versions. Any ideas to speed this up or perhaps request another minute or two?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-347509883:67,wrap,wrapper,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-347509883,1,['wrap'],['wrapper']
Integrability,"Unfortunately, my example involves a swirler and nozzle for the; Navier-Stokes solver with Menter model, so the dataset is relatively large.; Let me check whether some older small Euler mesh exhibits the same message!; I will let you know! Thank you very much. On Mon, Oct 23, 2023 at 6:34‚ÄØPM Pedro Gomes ***@***.***>; wrote:. > Is there a simple example to reproduce the issue?; >; > ‚Äî; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1776057496>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUV3DNRF3O55YAWT563YA3PETAVCNFSM6AAAAAA3QKLVDWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTONZWGA2TONBZGY>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1776143584:209,message,message,209,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1776143584,3,"['Message', 'message']","['Message', 'message']"
Integrability,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-600991354:97,integrat,integrated,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354,1,['integrat'],['integrated']
Integrability,"Updating the interface creates relative motion and thus you have blade-passing frequencies to resolve, which require more detail to resolve than just rotation.; If you want this as a different option that's fine, but it's not going to be the default.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1963000242:13,interface,interface,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1963000242,1,['interface'],['interface']
Integrability,"We already require C++11 for some more advanced features, but it is always nice in my opinion to keep backward compatibility when possible. . However, this is not a deal breaker, I don't think, as most developers that want to use and add their own unit tests should have no problem with using C++11. If we can make it an optional dependency, to make sure the basic build still works simply, I think it could be ok.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-503685445:330,depend,dependency,330,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-503685445,2,['depend'],['dependency']
Integrability,"We are compiling those combinations we may well make them available, best I; can due is issue warnings. On Mon, 23 May 2022, 14:43 Nijso, ***@***.***> wrote:. > ***@***.**** commented on this pull request.; > ------------------------------; >; > In Common/include/option_structure.hpp; > <https://github.com/su2code/SU2/pull/1646#discussion_r879473183>:; >; > > + * \param[in] SA_Options - Selected SA option from config.; >; > + * \param[in] nSA_Options - Number of options selected.; >; > + * \param[in] rank - MPI rank.; >; > + * \return Struct with SA options.; >; > + */; >; > +inline SA_ParsedOptions ParseSAOptions(const SA_OPTIONS *SA_Options, unsigned short nSA_Options, int rank) {; >; > + SA_ParsedOptions SAParsedOptions;; >; > +; >; > + auto IsPresent = [&](SA_OPTIONS option) {; >; > + const auto sa_options_end = SA_Options + nSA_Options;; >; > + return std::find(SA_Options, sa_options_end, option) != sa_options_end;; >; > + };; >; > +; >; > + const bool found_neg = IsPresent(SA_OPTIONS::NEG);; >; > + const bool found_edw = IsPresent(SA_OPTIONS::EDW);; >; > + const bool found_bsl = !found_neg && !found_edw;; >; >; > ‚¨áÔ∏è Suggested change; >; > - const bool found_bsl = !found_neg && !found_edw;; >; > + const bool found_bsl = !found_neg && !found_edw;; >; > + const bool found_ft2 = IsPresent(SA_OPTIONS::FT2);; >; > +; >; > + if (found_neg && !found_ft2) {; >; > + SU2_MPI::Error(""Negative and NOFT2 were both selected but are incompatible. Please choose only one."", CURRENT_FUNCTION);; >; > + }; >; >; > ‚Äî; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/1646#pullrequestreview-981793059>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN33ZH2GAQODQZ7M2BLVLODOVANCNFSM5WSMMMUA>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1646#issuecomment-1134822257:1834,Message,Message,1834,https://su2code.github.io,https://github.com/su2code/SU2/pull/1646#issuecomment-1134822257,1,['Message'],['Message']
Integrability,"We can compute the HBoperator alternatively without using the complex; variables too for now by replacing the routine if fixing this issue is; complex so that we have a working version of HB. Complex numbers and; vectors are used for elegance but I agree with Francisco that getting the; code compiled without any issues is more important. We can keep it; commented for now and I'll push the updated subroutine soon for a working; version of HB and make sure that it is compiled without errors on Mac. Thanks,; Sravya. On Sat, Nov 12, 2016 at 7:24 AM, Tim Albring notifications@github.com; wrote:. > From what I see there is no easy way to resolve this. The problem is that; > the multiplication operator of the complex type in LLVM uses copysign which; > is a function that only excepts double and int... so that means it is not; > possible to instantiate complex with anything else than these types ...; > from my point of view it is not a very smart design decision. We should; > maybe enable the code section depending on the compiler. A possible; > solution would be to implement our own operators, which we would directly; > in codi then.; > ; > ‚Äî; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > https://github.com/su2code/SU2/issues/319#issuecomment-260128156, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AHenIObXD9Yd0margHrl2xNq7641i7uWks5q9doigaJpZM4KYAX3; > .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/319#issuecomment-260167765:110,rout,routine,110,https://su2code.github.io,https://github.com/su2code/SU2/issues/319#issuecomment-260167765,2,"['depend', 'rout']","['depending', 'routine']"
Integrability,"We can keep the wrapper routines as part of the CDriver class, but moving them to a separate file could already improve readability in my opinion.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-354105984:16,wrap,wrapper,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-354105984,2,"['rout', 'wrap']","['routines', 'wrapper']"
Integrability,We can remove pyCppTap.py. This is a holdover from early automatic differentiation work that is not functional any longer. Can you also please check whether the server.py is still necessary? That may only be needed for design space exploration routines (farming out jobs on a cluster) that are also not used regularly.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-533595722:244,rout,routines,244,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-533595722,1,['rout'],['routines']
Integrability,"We could play around with the Wait() calls to wait for a specific message instead of the first to arrive, but it would take some effort to go back to the previous behavior, where the comms happened one at a time for each pair of ranks that needed to communicate. In v7, the behavior is that each rank posts all of their receives, then posts all of their sends, before the buffers holding the received data are checked and unloaded (once the communication of that particular message has completed).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593174003:66,message,message,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593174003,2,['message'],['message']
Integrability,"We have not found that to be necessary because the interface is mostly unchanged, but if you are aware of anything please open a pull request to the website repository with updates, we welcome all contributors.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2361#issuecomment-2395582565:51,interface,interface,51,https://su2code.github.io,https://github.com/su2code/SU2/issues/2361#issuecomment-2395582565,1,['interface'],['interface']
Integrability,Well I've taken a look at this but it's probably beyong my current programming skills. I only have experience with Python. Perhaps someone else could look at this? I still think it's a very helpful error message for new users and it sounds like it wouldn't be too much work to fix it.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/842#issuecomment-568280604:204,message,message,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-568280604,1,['message'],['message']
Integrability,"What about the following?. - Find out the lowest rank that calls the error handler.; - Only this rank writes the error message. The tricky part of course is how to find out this lowest rank. A possible solution would be (although I am open for alternatives here). - The ranks in the error handler send out messages with a very specific tag to all other ranks.; - The ranks in the error handler attempt to receive messages for a certain amount of time or until all messages have been received. Typically MPI_Iprobe would be used for this purpose.; - Keep track of the lowest rank from which an actual message was received. This may not be very efficient, but you don't care here. Furthermore, not all messages will be received if not all ranks call the error handler. Again, you don't care, because the computation is killed afterwards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/564#issuecomment-415937480:119,message,message,119,https://su2code.github.io,https://github.com/su2code/SU2/issues/564#issuecomment-415937480,6,['message'],"['message', 'messages']"
Integrability,"What about the others ? If you have any doubts, comments or suggestions, please let me know. . I am pretty sure that everybody will at least come across the error message sooner or later, so know is your chance to influence its style :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-350737144:163,message,message,163,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-350737144,1,['message'],['message']
Integrability,"What is your goal in including LAPACK?. You might want to see the issue I raised ( #478 ). I asked what the LAPACK compile option does, and the short answer is that it doesn't do anything for the master and develop branches. The long answer is that several integrations, such as the higher-order finite element branch, use LAPACK but in different ways.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/481#issuecomment-355588717:257,integrat,integrations,257,https://su2code.github.io,https://github.com/su2code/SU2/issues/481#issuecomment-355588717,1,['integrat'],['integrations']
Integrability,"When I enter the ""shape_optimization.py -f unsteady_naca0012_opt.cfg"" in the commend the error is:; ```; Traceback (most recent call last):; File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 116, in <module>; main(); File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 34, in main; shape_optimization( options.filename ,; File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 51, in shape_optimization; config = SU2.io.Config(filename); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\io\config.py"", line 88, in __init__; super(Config,self).__init__(*args,**kwarg); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_bunch.py"", line 83, in __init__; super(OrderedBunch,self).__init__(*args,**kwarg); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_dict.py"", line 48, in __init__; self.__update(*args, **kwds); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_dict.py"", line 174, in update; for key, value in other:; TypeError: 'NoneType' object is not iterable; ```; When I enter the ""parallel_computation.py -f turb_naca0012.cfg -n NP in the commend the error is:; ```; Traceback (most recent call last):; File ""C:\Users\74351\Desktop\SU2\SU2\bin\parallel_computation.py"", line 110, in <module>; main(); File ""C:\Users\74351\Desktop\SU2\SU2\bin\parallel_computation.py"", line 53, in main; raise Exception(""No config file provided. Use -f flag""); Exception: No config file provided. Use -f flag; ```; Any solvers related to "".py"" cannot be executed, but I can run any cases with SU2_CFD. So I wonder if this situation is a problem with the Python Wrapper? . I will be very appreciated if I could get some feedback on this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1567#issuecomment-1074910200:1642,Wrap,Wrapper,1642,https://su2code.github.io,https://github.com/su2code/SU2/issues/1567#issuecomment-1074910200,1,['Wrap'],['Wrapper']
Integrability,"When I used mpich meson was picking up openmpi, even though mpirun mpicc mpicxx were all picking up the mpich versions.; I had to change the dependency specifically for mpich.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633083301:141,depend,dependency,141,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633083301,1,['depend'],['dependency']
Integrability,"When you create another boundary do you create a new unspecified marker or do you use the connections as a marker? In the former case, the connectivity will be affected, as the nodes at the interface should be linked. However, if you use the connection as an additional marker, it should work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/986#issuecomment-629171020:190,interface,interface,190,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-629171020,1,['interface'],['interface']
Integrability,"While I believe the velocity transfer is the way to go for adjoints and accuracy especially in incompressible flow, it should be possible to cater to both needs by basing the flow solver flow traction malarkey on Marker deform mesh, instead of marker fluid load.; Which would possibly make the setup easier as well.; If we want the flexibility to have fluid load markers independent of mesh deformation deformation, we may need a ""yet another config knob"".; One aspect to consider is that the displacement coming from python might be a forced motion, and so the consistency argument no longer matters.; Perhaps what we need, is a way to tell for which boundaries the velocity is known or not.; If the velocity is not known, it could be computed by finite differences at the interface and made part of the velocity-elasticity problem.; This would allow the forced motions to work together with FSI.; If the velocity is not known for any boundary, it is orders of magnitude quicker to compute it by finite differences. Sorry for the soliloquy, but I think all y'all get what I'm sayin'",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778391020:774,interface,interface,774,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778391020,1,['interface'],['interface']
Integrability,"While playing around with the singularity containers a little bit, what do you think about this solution?. Execute the python script inside the container with the python on the host; ~~~~; singularity exec su2_container.sif cat /SU2/bin/SU2_PY/parallel_computation.py | python3; ~~~~. Adjust the python interface (SU2_PY/SU2/run/interface.py) to execute the container:; ~~~~; # set mpi command; if user_defined:; mpi_Command = os.environ['SU2_MPI_COMMAND']; elif slurm_job:; mpi_Command = 'srun -n %i %s'; elif singularity_job:; mpi_Command = 'mpirun -n %i singularity exec su2_container.sif %s'; elif not which('mpirun') is None:; mpi_Command = 'mpirun -n %i %s'; elif not which('mpiexec') is None:; mpi_Command = 'mpiexec -n %i %s'; else:; mpi_Command = ''; ~~~~. Just need to make sure that the hostfile is also included in the mpirun command if run on multiple nodes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/747#issuecomment-519829012:303,interface,interface,303,https://su2code.github.io,https://github.com/su2code/SU2/issues/747#issuecomment-519829012,2,['interface'],['interface']
Integrability,"Why do you think it is confusing ? . It is either:; ```; blas_dep = declare_dependency(include_directories: '/home/talbring/Projects/OpenBLAS-0.3.6/include',; link_args:'-L/home/talbring/Projects/OpenBLAS-0.3.6/lib/ -lopenblas'). ```. or . ```; blas_dep = dependency('openblas'); ```. if `pkgconfig` can find the `*.pc` file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-520856033:256,depend,dependency,256,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-520856033,1,['depend'],['dependency']
Integrability,"Why is it good C++ to use containers (instead of raw arrays):; - Book keeping: No need for verbose allocations / de-allocations.; - Information: The size is carried with the container, the type of data, the allocation strategy (e.g. alignment), etc.; - Correctness: A const method can change the elements of a raw array, because in such cases const does not qualify the data, only the address (pointer) of that data. On the other hand, a const method will imply const containers, on which only const methods can be called, and so on.; - Performance 1: A nested array (**), or nested container (vector<vector>) is NOT a matrix, it is a list of arrays, consequently there is more construction / destruction overhead (more allocations) uncertain performance at runtime, because inner arrays can end up arbitrarily far from each other, you end up needing copies to talk with e.g. blas or mpi...; - Versatility: Above all a container encapsulates data structure details (e.g. if something is a vector or list or map or row-major matrix or column-major matrix or sparse matrix) behind an interface. Which then lets you change the details separately from the code that uses the data. Whenever you pass an array by pointer you are locking yourself to ONE very particular organization of data in memory.; - Performance 2: This encapsulation is not insulation, it is completely transparent to the compiler because any half decent container type will be defined inline. Furthermore... If the compiler sees two pointers it has absolutely no idea if they are pointing to the same thing, or worse if they partially overlap. To legally optimize such code compilers need to introduce a ton of checks and fallback code, on the other hand, defining operations on containers which you know never to overlap provides a clean way to avoid compiler-paranoia.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1225#issuecomment-793832435:1082,interface,interface,1082,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225#issuecomment-793832435,1,['interface'],['interface']
Integrability,"Wing was one of the preferred IDEs for the development of the python IO-based wrappers early on in the project. I do not expect that folks are using it any longer, and unless anyone is against it (please speak up), I think it can also be removed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-534162206:78,wrap,wrappers,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-534162206,1,['wrap'],['wrappers']
Integrability,With commit [1836f11](https://github.com/su2code/SU2/pull/1536/commits/1836f111c0759eb50946ba6b68ac281ef4b1b717) the gradients (for massflow prescribed in the primal) can now be validated really well (tested for AvgTemp and PRESSURE_DROP OF's). . BUT only for serial execution ... for multiple processes the adjoint diverges after a few iterations. I need to give that parallel treatment another thought.; UPDATE: With [ce164a2](https://github.com/su2code/SU2/pull/1536/commits/ce164a232d6c0f845784f37e45336f7276746d61) also the parallel execution works fine. Please read my explanation attempt in the commit message (in case you are interested) and let me know what you think,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657:609,message,message,609,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657,1,['message'],['message']
Integrability,"With the address sanitizer it gets stuck writing the binary restart file. When I terminate, I get:; ^CTraceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 280, in run_command; return_code = proc.wait(); File ""/usr/lib64/python2.7/subprocess.py"", line 1099, in wait; pid, sts = _eintr_retry_call(os.waitpid, self.pid, 0); File ""/usr/lib64/python2.7/subprocess.py"", line 125, in _eintr_retry_call; return func(*args). I thought SU2 exclusively used python3? It registers as compiled with python3 (Program python3 found: YES (/bin/python3)).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-623683360:438,interface,interface,438,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623683360,2,['interface'],['interface']
Integrability,"Wonderful contribution. Thanks for doing all that. Streamlining the dev process is very helpful and cmake is definitely becoming a standard. Best,. Juan. On Nov 10, 2019, at 11:24 AM, Daumantas Kavolis <notifications@github.com> wrote:. Ôªø; Proposed Changes. Added CMake build support for SU2. With this, many popular IDEs will be able to use SU2 as a project with minimal setup. CMake also enables to add dependencies more easily since most libraries have CMake support. vcpkg is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use preconfigure.py anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is ${CMAKE_PREFIX_PATH}/bin. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile pySU2ad with Nothing known about namespace 'medi' in Common/include/mpi_structure.hpp:57 without -includeall SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing using namespace declarations and either importing used symbols explicitly with using or prepending namespace name, clang-tidy warns against them by default and it makes the code clearer. SU2 CMake options are:. * Build modules:; * SU2_BUILD_CFD: ON|OFF; * SU2_BUILD_DEF: ON|OFF, disabled when building with Codi; * SU2_BUILD_DOT: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_GEO: ON|OFF, disabled when building with Codi; * SU2_BUILD_MSH: ON|OFF, disabled when building with Codi; * SU2_BUIL",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:405,depend,dependencies,405,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,2,['depend'],['dependencies']
Integrability,"Writing a simple unit test is difficult, since SU2 both doesn't have unit tests and wasn't written with unit testing in mind. That being said, I've got a unit test that I'm happy with. Our group has put our own unit-testing framework into our fork of SU2, based off of Boost and automake testing. The unit test I created runs off of that framework. That means it won't run out-of-the-box on the develop branch of SU2. When I run the unit test with no changes to `CNumerics::GetViscousProjJacs`, I get that the residuals and Jacobians match to within 10 times the machine epsilon, aside from the [4][0] value of the Jacobians. There, the relative difference is of the order 1E-6. When I switch the two lines in `CNumerics::GetViscousProjJacs` for ideal gases to be negative, the tests run with no complaints. Ideal gas and generalized variants match to within 10 times machine epsilon. I'm uploading my test file just as an example, in case anyone wants to see what I've tested.; [viscous_ideal_vs_general.zip](https://github.com/su2code/SU2/files/2590517/viscous_ideal_vs_general.zip). As for comparison to some results from another code, I think that's a lot to ask. Getting a good comparison would depend on an understanding of how the ideal gas model, viscosity, numerics, and Jacobians are handled in the external code. Small differences would make the comparison completely invalid. I completely support testing and checking the changes I'm proposing. But comparison with an external code seems to provide a very low return on investment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439491945:1200,depend,depend,1200,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439491945,2,['depend'],['depend']
Integrability,"YES! I am excited to try this out. I can probably test it on some of the other TMR cases (airfoils, flatplates). Will post the results when I get those done. . Side note, there was one issue that @bmunguia and I encountered when performing optimizations with adaptive CFL. Say the DIRECT simulation is run with adaptive CFL and is well converged (6 to 8 orders of residual reduction). When the discrete adjoint performs the one direct iteration to store the computational graph, it uses the initial CFL value, not the CFL that the adaptive CFL routine ended at. This results in the residuals being very high for that one iteration, which then affects the convergence of the discrete adjoint. . I will try to run an adjoint on one of these cases as well to see if the problem persists. Perhaps could be overcome with a simple additional field for CFL in the restart meta-data",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-531520526:544,rout,routine,544,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-531520526,2,['rout'],['routine']
Integrability,"Yes for MARKER_ROUGH, or MARKER_ROUGH_WALL to be clearer.; Or just WALL_ROUGHNESS as you have right now, since it would not really a marker, just the properties of markers (and I've seen some people on CFD online confused with similar naming e.g. MARKER_SHROUD). Regarding the MPI stuff, I had the following idea over lunch:; In CPhysicalGeometry::SetWallDistance we compute the closest distance, and in so doing we also get the mpi rank and markerID associated with the closest vertex.; So, before computing the wall distances you communicate the local marker ids and wall roughness's (via Allgather as you are doing now), with this info you can build a `unordered_map<pair<int,int>, su2double>` to map pairs of <rank,markerID> to the values of roughness.; Now when you loop over the points to compute the distances you can retrieve the roughness from this map instead of from config.; It's almost exactly the same as you have, but avoids using the config as a messenger between routines, and using a stl map should also make the code simpler. In the boundary conditions you can still get the marker roughness via the marker tag as you are doing now, and I guess the wall type (smooth / rough) can be inferred from having 0 (default) roughness (?); With the string+double list specification you also avoid having to specify 0 roughness and SMOOTH wall type for markers where you don't want to use this feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-630861158:980,rout,routines,980,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630861158,2,['rout'],['routines']
Integrability,Yes it depends on the order of the grid points but it will give the correct y-coordinate whenever the previous vertex in the loop is the one adjacent to the y=0 vertex on the marker or if the loop starts at y=0 it works if the next one in the loop which is adjacent on the marker. It seems to be the case for my examples but I don't think it always is. . I don't like it but I can't find a Get which returns the index of the adjacent node on the marker when passing the index of the current vertex or node in the loop. . ` geometry->vertex[iMarker][iVertex]->GetNormal_Neighbor() ` does not return the right one . ` geometry->node[iPoint]->GetPoint(index) ` with some `index` should return the right one but the index where it is stored varies so I need to look into the logic behind that,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/927#issuecomment-611106724:7,depend,depends,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-611106724,1,['depend'],['depends']
Integrability,"Yes it is inconsistent that's why it would need validation, the worst-case scenario is when your design variable is the thing the primal solver is manipulating to implement the fixed mode.; For example I'm pitching the wing (geometric AOA let's call it) the adjoint gives me a value for dCL / dalpha, but in practice this value is 0 because the primal solver does not allow the CL to change.; But doing the above would be dumb right, the validation question is what happens to the derivatives of other outputs? Is dCD / dalpha correct? I imagine this depends on the relation between CD and CL in this case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1030108842:551,depend,depends,551,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030108842,1,['depend'],['depends']
Integrability,"Yes there is a `lapack.pc` file in each of those folders.; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ cat /usr/lib/pkgconfig/lapack.pc ; libdir=/usr/lib; includedir=/usr/include. Name: LAPACK; Description: FORTRAN reference implementation of LAPACK Linear Algebra PACKage; Version: 3.9.0; URL: http://www.netlib.org/lapack/; Libs: -L${libdir} -llapack; Requires.private: blas; ```; The output of `pkg-config openblas --version` is 0.3.8, but it shows a message as well:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ pkg-config openblas --version; pkg-config: --version specified with other options or module names, assuming --modversion.; 0.3.8; ```; I also installed using the same meson arguments on an Ubuntu system (Python v3.7.5, mpich v3.3.2) which did not need the `$PKG_CONFIG_PATH` variable to be set. So all this is a little confusing for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632009282:458,message,message,458,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632009282,1,['message'],['message']
Integrability,"Yes, I understand that, on some OSes, self contained bundles (shipping build tools and external dependencies) are easier to handle. What I am suggesting is not to completely disable this self contained approach: I am just saying that there should be an option to disable it, so that life could be made easier for both classes of users (those who benefit from the self contained approach and those who prefer using system-wide build tools).; Please note that a ""mandatory"" self contained approach makes SU2 less likely to be packaged for inclusion into distributions such as Debian, because it means that more modifications are needed to create a proper package.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1450351389:96,depend,dependencies,96,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1450351389,1,['depend'],['dependencies']
Integrability,"Yes, please do create a new pull request.; To switch branches from the command line do:; git checkout develop; Or, from within the github web interface it looks like you just need to make sure that the ""develop"" branch is selected in the drop-down menus when you fork and make the pull request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/71#issuecomment-56880854:142,interface,interface,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/71#issuecomment-56880854,1,['interface'],['interface']
Integrability,"Yes. I did have installed g++.; ```; (base) root@a5502ebdff64:/home# g++ --version; g++ (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0; Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```; ```; (base) root@a5502ebdff64:/home/SU2# apt-get install gcc g++; Reading package lists... Done; Building dependency tree ; Reading state information... Done; g++ is already the newest version (4:7.4.0-1ubuntu2.3).; gcc is already the newest version (4:7.4.0-1ubuntu2.3).; 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847853:441,depend,dependency,441,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847853,1,['depend'],['dependency']
Integrability,"Yet another doubt on the same subject: I just realized that SU2V7.31 (I; have not tested it on later SU2 releases) accepts imposing both adiabatic; walls plus isothermal boundary condition on some walls (when running Menter; model), but when I simply impose only isothermal conditions (leaving; commented out the adiabatic markers), I get the message: SU2 process; returned error '1'. Is there a workaround for this? Kind regards. On Thu, Sep 28, 2023 at 8:25‚ÄØPM Pedro Gomes ***@***.***>; wrote:. > you are correct, there is a discussion on CFD-online about it. we impose 0; > heat flux, but report an ""apparent heat flux"" most codes will simply give; > you back the imposed heat flux value you specify, nevertheless there will; > probably be a temperature gradient close to the wall; >; > ‚Äî; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1740118992>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUUZNE6B63SH7XJLY2DX4YBMZANCNFSM6AAAAAA3QKLVDU>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1775968391:343,message,message,343,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1775968391,3,"['Message', 'message']","['Message', 'message']"
Integrability,"You are right. Even though we compute these quantities inside the solver, they have not been added to the output classes yet. This should be straightforward though now in the new structure. Take a look at CFlowOutput::SetAerodynamicCoefficients(), for example, and try to pattern match to add these along with the others since we already have a ```solver->GetTotal_CQ()``` routine (and CT and CMerit) to access the computed value. Probably also need to add to the AddAerodynamicCoefficients() routine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/957#issuecomment-621662776:373,rout,routine,373,https://su2code.github.io,https://github.com/su2code/SU2/issues/957#issuecomment-621662776,2,['rout'],['routine']
Integrability,You may want to remove the string based interface since it's known to be inneficient.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214#issuecomment-1950299227:40,interface,interface,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214#issuecomment-1950299227,1,['interface'],['interface']
Integrability,"You mean that only the coefficients are calculated wrong while the solution itself is correct? . Actually, I checked that yesterday by calculating the lift coefficient manually from the nodal forces, which I obtained through the python interface with GetFlowLoad. I found that the CL from SU2 is correct, the results were numerically equivalent. It might be that the Vertex Tractions are calculated with a wrong reference value?? That would be something that happens deep in the solver, which is beyond my abilities... For the farfield, I set MACH_NUMBER= 0.0 and used MACH_MOTION= 0.2, which should be used for the scaling of coefficients, forces, etc. as far I understood. The velocity are u=68.0588 m/s, v=0.0, w=+/- 2.37 m/s, which corresponds exactly to Ma=0.2 at sea level with pressure=101325.0, density=1.225 and temperature=288.15. I checked the values by slicing through the volume mesh, and I can see exactly these numbers in far in front of the wing / close to the farfield.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1459859767:236,interface,interface,236,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1459859767,1,['interface'],['interface']
Integrability,"You mentioned issues with the develop branch, those are likely due to compilation differences.; Yes run to convergence with both branches and compare please. I expect integrated quantities will be exactly the same.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1659015548:167,integrat,integrated,167,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1659015548,1,['integrat'],['integrated']
Integrability,"[...]; > If either you or @frx-wintermute are interested in complementing the feature by adding an option to prefer system libraries (via pkg-config, no paths because 99.9% of users will not know what to do) instead of the versions shipped with SU2, please go ahead and open a PR. Hello @pcarruscag!. To be honest, my daydream is: I would love to see SU2 shipping nothing in 'externals/' (or just empty subdirectories such as 'externals/meson/' ); then those external dependencies are by default downloaded from external repositories or tar archives. This defaul behavior would be obtained by configuring with the './meson.py' script and then by building with './ninja'. But, if a user wants to build SU2 from source and prefers to use system-wide Meson and Ninja and system-wide versions of the external dependencies, it would be possible to avoid downloading these external dependencies. By running './preconfigure.py' with appropriate options, it would be possible to decide which external dependencies to **not** download. At that point, system-wide Meson and Ninja could be used to build SU2 from source. And the 'meson.build' file would do the following:. * for each required or enabled (at configure time) dependency **\<foo\>**, it would check whether it is found in 'externals/**\<foo\>**/'; if not, it would check whether it can be found as a system-wide installation (perhaps via pkgconfig); if not, it would exit with error; * for each dependency which is not required nor enabled at configure time, it would avoid using it at all. I think this daydream is achievable, and I hope that other people consider it as a useful goal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1646970778:468,depend,dependencies,468,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1646970778,6,['depend'],"['dependencies', 'dependency']"
Integrability,"_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1652,Depend,Dependency,1652,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['Depend'],['Dependency']
Integrability,"_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; .... And then; Elwardi-PC:04092] *** Process received signal ***; [Elwardi-PC:04092] Signal: Segmentation fault (11); [Elwardi-PC:04092] Signal code: Address not mapped (1); [Elwardi-PC:04092] Failing at address: (nil); [Elwardi-PC:04092] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x3efd0)[0x7f6f2de1dfd0]; [Elwardi-PC:04092] *** End of error message ***; Segmentation fault; ```; So there is probably something else I didn't pay attention to. ## Immediate improvements. Forcing the dev to create his own ""is_registered"" static variable and initializing it himself can be eliminated by by putting the variable in a templated class (notice that the variable initialization only depends on the type it belongs to and the factory class) which the solver can inherit from. ## My question. Any idea on what is causing the seg fault. I'm pretty sure it's because I'm returning a nullptr somewhere though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:2832,message,message,2832,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957,2,"['depend', 'message']","['depends', 'message']"
Integrability,"``; Installing _amgio.; The Meson build system; Version: 0.52.999; Source dir: /opt/su2/SU2_src; Build dir: /opt/su2/SU2_src/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; expor",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:1888,depend,dependency,1888,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,2,"['Message', 'depend']","['Message', 'dependency']"
Integrability,"```diff; $ git --no-pager diff --cached ; diff --git a/meson.build b/meson.build; index ca86992ea..b68a03c52 100644; --- a/meson.build; +++ b/meson.build; @@ -1,15 +1,12 @@; project('SU2', 'c', 'cpp',; version: '7.5.1 ""Blackbird""',; + meson_version: '0.61.1',; license: 'LGPL2',; default_options: ['buildtype=release',; 'warning_level=0',; 'c_std=c99',; 'cpp_std=c++11']); ; -if meson.version() != '0.61.1'; - error('SU2 must be configured with the extended Meson script (./meson.py) in the SU2 root directory.'); -endif; -; pymod = import('python'); python = pymod.find_installation(); ; ```. I used this patch, and then ran the following:. ```; $ meson setup builddir --wipe; The Meson build system; Version: 1.0.1; Source dir: /tmp/SU2; Build dir: /tmp/SU2/builddir; Build type: native build. meson.build:1:0: ERROR: Meson version is 1.0.1 but project requires 0.61.1; ```. Using the >= comparison, it configures fine, and downloads a git submodule for mutationpp/coolprop on demand. From a hasty look around, it seems like the other git submodules are used as externals/ directories, not meson subprojects. Another project I know uses e.g. ```; if not fs.exists('submoduledir/README.md'); error('Missing the `submoduledir` submodule! Run `git submodule update --init` to fix this.'); endif; ```. for each submodule before it gets processed by meson. This is less automatic than wrapping it in meson.py, but does provide pretty clear directions... the sticking point is if people download tarballs. You currently point people to github's autogenerated archives, which is NOT sufficient as it doesn't have submodules included. I would actually suggest using `meson dist --include-subprojects --no-tests` to produce your own tarballs and attach them as additional releases artifacts. Meson *does* include submodules (whether or not they are subprojects) automatically to the tarball it creates.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434:1382,wrap,wrapping,1382,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434,2,['wrap'],['wrapping']
Integrability,"a JST scheme without dissipation term on the BC. A ""reflected state"" is created where scalars are copied and velocity is mirrored along the plane. Then the quantities (domain & reflected) are averaged (on the edge) and `CNumerics::GetInviscidProjFlux` is called with these values. The returned Proj_Flux is directly taken as Residual. For JST dissipation would be added in a step afterwards.; -> **new Euler BC**: Here for compressible flow always (!) `CUpwRoe_Flow` is taken as numerical convective scheme. Boundaries have their own numerics container in `CONV_BOUND_TERM`. Look in CDriver.cpp for allocation of `SPACE_CENTERED` compressible schemes (as JST was used in all examples in this issue, but the problem is still there if upwind schemes were taken). And independent of the users choice of `CONV_NUM_METHOD_FLOW`, as said above, `CUpwRoe_Flow` is hard coded as numerical convective scheme for boundary nodes. As in the old Euler BC a ""reflected state"" is created and handed to the `ComputeResidual` Routine of the numerical scheme, together with the boundary vertex state.; -> So one major difference between both formulations is that in the new Euler wall left & right state are created and the respective convective scheme class does the rest via `ComputeResidual`. In the old implementation everything done in the `ComputeResidual` routine is ""copied"" into the BC_Euler_Wall and modified to its needs... and it looks like central convective scheme (JST) without dissipation term. 2. When changing the `CUpwRoe_Flow` scheme, which is used only for convective schemes on boundaries `CONV_BOUND_TERM`, such that it behaves like JST without dissipation term -> then old Euler and new Euler wall BC return the same results in CD and CL. 3. So the Convective Residual is somewhat different on the surface where the Objectives CL and CD are evaluated. JST without dissipation term vs `CUpwRoeBase_Flow::ComputeResidual`. Which (and if) one of both approaches is the ""corect"" is not something I ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-565461347:1329,Rout,Routine,1329,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565461347,1,['Rout'],['Routine']
Integrability,"able-new-dtags -Wl,--gc-sections -Wl,-rpath,/home/user/anaconda3/lib -Wl,-rpath-link,/home/user/anaconda3/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4367,Message,Message,4367,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311,1,['Message'],['Message']
Integrability,"acency structure.; 5 surface markers.; 10222 boundary elements in index 0 (Marker = aircraft).; 9712 boundary elements in index 1 (Marker = farfield).; 3382 boundary elements in index 2 (Marker = inner_nearfield).; 19738 boundary elements in index 3 (Marker = symmetry).; 3382 boundary elements in index 4 (Marker = outer_nearfield).; Calling ParMETIS...; Traceback (most recent call last):; File ""/home/app/SU2/install/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 61, in main; options.compute ); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; RuntimeError:; Command = mpirun -n 12 /home/app/SU2/install/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '15'; [ubuntu:8553] *** An error occurred in MPI_Wait; [ubuntu:8553] *** on communicator MPI COMMUNICATOR 3 DUP FROM 0; [ubuntu:8553] *** MPI_ERR_TRUNCATE: message truncated; [ubuntu:8553] *** MPI_ERRORS_ARE_FATAL: your MPI job will now abort; --------------------------------------------------------------------------; mpirun has exited due to process rank 9 with PID 8554 on; node ubuntu exiting improperly. There are two reasons this could occur:. 1. this process did not call ""init"" before exiting, but others in; the job did. This can cause a job to hang indefinitely while it waits; for all processes to call ""init"". By rule, if one process calls ""init"",; then ALL processes must call ""init"" prior to termination. 2. this process called ""init"", but exited without calling ""finalize"".; By rule, all processes that call ""init"" MUST call ""finalize"" prior to; exiting or it will be considered an ""abnormal termination"". This may have caused other processes in the application to be; terminated by signals sent by mpirun (as reported here).; --------------------------------------------------------------------------; [ubuntu:08544] 1 more process has sent help message help-mpi-errors.tx",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485283:1404,message,message,1404,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485283,1,['message'],['message']
Integrability,"aively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4 threads) approach is about 5% faster thank the MPI-only (8 ranks), I expect larger cases to have identical performance. ### How To; - Compile: Add -fopenmp to the compiler and linker arguments.; - Run: Set number of threads with env variable `OM",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2585,rout,routines,2585,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['rout'],['routines']
Integrability,"and here's a trace from a unix cluster --. ```; ---------------------- Read Grid File Information -----------------------; Three dimensional problem.; 3113133 points before parallel partitioning.; Performing linear partitioning of the grid nodes.; 4478644 interior elements before parallel partitioning.; Distributing elements across all ranks.; Calling the partitioning functions.; Getting into adjacency function.; Building the graph adjacency structure.; 8 surface markers.; 166730 boundary elements in index 0 (Marker = aircraft).; 33766 boundary elements in index 1 (Marker = farfield).; 742 boundary elements in index 2 (Marker = injest).; 290 boundary elements in index 3 (Marker = inlet).; 22500 boundary elements in index 4 (Marker = inner_nearfield).; 243 boundary elements in index 5 (Marker = outlet).; 146871 boundary elements in index 6 (Marker = symmetry).; 22500 boundary elements in index 7 (Marker = outer_nearfield).; Calling ParMETIS...; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36096 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36400 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 35800 bytes received but buffer size is 31680; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; trunc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485343:984,Message,Message,984,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485343,1,['Message'],['Message']
Integrability,"appening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; > Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). So, it sounds like I don't need to care about it as long as I use discrete adjoint then. > > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); > ; > you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. I forgot to mention. I have tested VENKATAKRISHNAN limiter with v6. I am hoping that it is fixed by now after reading [this discussion](https://github.com/su2code/SU2/issues/917). > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > ; > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth. Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance exceeding 1e-1.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847:1660,message,message,1660,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847,2,['message'],['message']
Integrability,"ares (indeed what I need now is a QR decomposition). And, as an added bonus, I think some other areas of the code could be simplified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is that we then need to provide a portable version that can be differentiated with CoDi or to implement the exact differentiation (similar to what is done in the ""solve_b"" routines). @vdweide that is not an issue with Eigen because everything is templated and therefore compatible with any type or class that overloads the appropriate arithmetic operators.; I have used it for over 2 years and I can attest to its compatibility with AD tools (I've tried 3), and speed when linked with a BLAS library, their native implementations are also very good, peeking inside their code... you can tell they know what they are doing. P.S. I feel this post needs a disclaimer, I am not affiliated in any way to Eigen, my motivation is not to promote their work (but I obviously think they deserve it). I genuinely think adopting an algebr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:1978,interface,interface,1978,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,2,['interface'],['interface']
Integrability,"ariable, which means there will be no penalty to scalar code, new overloads for accessor methods will be required to set/get SIMD-arrays of data instead of scalars.; - The geometric properties and graph information associated with CGeometry will require the same contiguous storage treatment received by CVariable.; - Linear algebra, dimension-specific multiplication kernels with manual low level optimisations (unrolling, vectorization through intrinsics, and software prefetching), complex code but encapsulated in a low maintenance area of the code. **General improvements**; - Fusing convective and viscous residual loops, this will NOT be done by super gluing convective and viscous numerics. I do not have a concrete design in mind yet but I hope to be able to do something akin to the *decorator* pattern I mentioned before. I also plan to make the numerics a full-fledged *visitor* to reduce compilation dependencies, currently a change to numerics may affect CVariable CSolver and CNumerics (as mentioned by @clarkpede), CSolver is involved because it is responsible for fetching data, I may move that to CNumerics, which would let them fetch data as needed.; - Lookup accesses to CSysMatrix to avoid linear searches, the small increase in memory usage can be mitigated by sharing these lookup tables/arrays and the sparsity pattern between matrices associated with the same geometry (on the subject of these lookup tables, knowing where the diagonal of a row is should enable more efficient upper/lower multiplications). ## Work items; This is a lot of work and some changes will be significant, I will divide the work in steps, off the top of my head this order seems ok:; - CSysMatrix lookups and any required parallel pragmas put in place.; - Point-loop gradients and limiters, no SIMD (at which point I hope #777 to be finished so the next item does not disrupt it).; - Split CSolvers over multiple files, colour-based parallel residual loops (at this point we have hybrid parallel!).;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539523312:3289,depend,dependencies,3289,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539523312,1,['depend'],['dependencies']
Integrability,"aybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that üëç ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place üòâ ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handled by the numerics class. In the new version an appropriate 'reflected state' is constructed and the numerics container is called to compute the residual. Before, the code of one numerics ->ComputeResidual Routine was simply copied and slightly modified. But of course there is always room for errors üêõ . Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-562621057:2206,Rout,Routine,2206,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057,1,['Rout'],['Routine']
Integrability,"b directory is now in the path, but it seems to work for now.). I'm getting an issue now where the script seems to crash while `Running initial CFD solution`:. ```; (test_env) tim@super:/work/projects/mesh_adapt_testing/A000i_adap/2_cfd$ LD_LIBRARY_PATH=$CONDA_PREFIX/lib:$LD_LIBRARY_PATH SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -n %i %s"" python /opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py -f inv_test.cfg -n 40 > mesh_adapt.out; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Traceback (most recent call last):; File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 112, in <module>; main(); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 73, in main; options.save_all ); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 102, in mesh_adaptation_amg; SU2.run.amg(config); File ""/opt/su2/SU2v7_adap/bin/SU2/run/amg.py"", line 220, in amg; SU2_CFD(config_cfd); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /work/projects/mesh_adapt_testing/A000i_adap/2_cfd/adap/ini/,; Command = mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754504570:1371,interface,interface,1371,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570,1,['interface'],['interface']
Integrability,"binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7175,Message,Message,7175,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Message'],['Message']
Integrability,"both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then we are left with this initial transient phase that differs. Of course if there is more evidence that one or the other version produces physically ""better"" results I would love to see that. Until then, both initial oscillations are equally correct/uncorrect in my opinion. [I'll add a few words about the adjoint here later]. [I'll add the idea of an FSI case of @cvencro here later where the initial phase has a major impact]; Consider an FSI computation of an airfoil where the trailing edge can exhibit flutter (periodic up-and-down-movement of the trailing edge) in certain flow regimes. Now if during the initial transient the forces on the airfoil are higher than in the converged state then the fluttering can be excited where the initial transient can be seen as an activation energy. If you were to e.g. ramp up flow speed/conditions slowly up to the same magnitude as before one mig",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563314747:1909,integrat,integrated,1909,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747,2,['integrat'],['integrated']
Integrability,"c'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2526,Message,Message,2526,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['Message'],['Message']
Integrability,"ch request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix instead of lists of lists.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:1875,wrap,wrapper,1875,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827,2,['wrap'],['wrapper']
Integrability,"cio/teciompisrc/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -fpermissive -DUSEENUM -DTECIOMPI -DTHREED -DMAKEARCHIVE -DNO_ASSERTS -DNO_THIRD_PARTY_LIBS -DTP_PROJECT_USES_BOOST -DBOOST_ALL_NO_LIB -DLINUX -DLINUX64 -MD -MQ 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -MF 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o.d' -o 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -c ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; In file included from /usr/local/include/boost/type_traits/is_complete.hpp(15),; from /usr/local/include/boost/type_traits/is_convertible.hpp(17),; from ../externals/tecio/teciompisrc/../boost/iterator/interoperable.hpp(13),; from ../externals/tecio/teciompisrc/../boost/iterator/iterator_facade.hpp(11),; from /usr/local/include/boost/range/iterator_range_core.hpp(27),; from /usr/local/include/boost/range/iterator_range.hpp(13),; from ../externals/tecio/teciompisrc/../boost/assign/list_of.hpp(20),; from ../externals/tecio/teciompisrc/../boost/assign.hpp(20),; from ../externals/tecio/teciompisrc/fileStuff.h(7),; from ../externals/tecio/teciompisrc/ZoneHeaderWriterAbstract.h(3),; from ../externals/tecio/teciompisrc/ClassicZoneHeaderWriter.h(2),; from ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.h(2),; from ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.cpp(1):; /usr/local/include/boost/type_traits/is_function.hpp(23): catastrophic error: cannot open source file ""boost/type_traits/detail/is_function_cxx_03.hpp""; #include <boost/type_traits/detail/is_function_cxx_03.hpp>; ^; Is boost required for installing SU2? I have compiled this using Intel parallel studio 2018.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-619968113:1579,interoperab,interoperable,1579,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619968113,1,['interoperab'],['interoperable']
Integrability,"connectivities,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; const Matrix& limiter,; RowMajorMatrix& residual,; SparseMatrix& matrix); {; using FltVec = Array<double,SIMDLEN>;. residual.setZero();; matrix.setDiagZero();. size_t color = 0;; for(const auto& connectivity : connectivities); {; #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t iEdge=0; iEdge<connectivity.size(); iEdge+=SIMDLEN); {; auto iPoint = connectivity.first_vec(iEdge);; auto jPoint = connectivity.second_vec(iEdge);. FltVec d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = (coords.getVec(jPoint,iDim)-coords.getVec(iPoint,iDim))*0.5;. FltVec phiL[MAXNVAR], phiR[MAXNVAR], flux[MAXNVAR],; blk_i[MAXNVAR*MAXNVAR],; blk_j[MAXNVAR*MAXNVAR];. for(size_t iVar=0; iVar<nVar; ++iVar); {; // Reconstruction goes here. flux[iVar] = (phiL[iVar]+phiR[iVar])*0.5;; }. // some silly way to make the Jacobians depend on the reconstruction; for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t jVar=0; jVar<nVar; ++jVar); blk_j[iVar*nVar+jVar] = (phiL[iVar]*phiR[jVar]-phiL[jVar]*phiR[iVar])*0.5;. // the matrix-matrix multiplications; for(size_t i=0; i<WORKITERS; ++i) {; // blk_i = blk_j * blk_j; for(size_t k=0; k<nVar*nVar; ++k) blk_j[k] = blk_i[k];; }. // something akin to a dissipation term; for(size_t iVar=0; iVar<nVar; ++iVar) {; FltVec sum = flux[iVar];; for(size_t kVar=0; kVar<nVar; ++kVar); sum += blk_j[iVar*nVar+kVar]*(phiL[kVar]-phiR[kVar])*0.5;. // residuals for iPoint and jPoint updated here. matrix.updateBlocks_v(color, iEdge, iPoint, jPoint, blk_i, blk_j);; }; ++color;; }; }; ```; The more WORKITERS we have the better the vectorized code is going to look, I used a conservative number based on:; For the Roe scheme 4 matrices are generated (Jacobian i, Jacobian j, P tensor, P^-1 tensor), each coefficient of those matrices requires a reasonable number of floating point ops, and two of those matrices are indeed multiplied by each other.; So lets say 5 matri",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539177957:1657,depend,depend,1657,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539177957,2,['depend'],['depend']
Integrability,"d <file>..."" to update what will be committed). (use ""git checkout -- <file>..."" to discard changes in working directory). modified: .travis.yml. no changes added to commit (use ""git add"" and/or ""git commit -a""). Jairos-Mac-mini:SU2 jaspe$ git commit -am ""This is an update of .travis.yml; for feature_force_read_target_on_AD."". [feature_force_read_target_on_AD 3f2115373] This is an update of; .travis.yml for feature_force_read_target_on_AD. 1 file changed, 2 insertions(+), 2 deletions(-); After that, I issued git push origin feature_force_read_target_on_AD, and; got the error message:. To https://github.com/su2code/SU2.git. ! [rejected] feature_force_read_target_on_AD ->; feature_force_read_target_on_AD (fetch first). error: failed to push some refs to 'https://github.com/su2code/SU2.git'. hint: Updates were rejected because the remote contains work that you do. hint: not have locally. This is usually caused by another repository pushing. hint: to the same ref. You may want to first integrate the remote changes. hint: (e.g., 'git pull ...') before pushing again. hint: See the 'Note about fast-forwards' in 'git push --help' for details.; I issued then git pull origin develop, to merge changes in remote to my; local branch, successfully , but a new git push origin; feature_force_read_target_on_AD, produced the same error message.; Would be the first commit command enough?. With kind regards,. Jairo. On Tue, Oct 30, 2018 at 7:25 PM Thomas D. Economon <notifications@github.com>; wrote:. > Hi @jaspe55 <https://github.com/jaspe55> - thanks for the first; > contribution!; >; > Can you please switch the email and branch name in .travis.yml back to; > su2code-dev@lists.stanford.edu and develop, respectively? That should get; > the tests running so we can give this a proper review (should be quick; > given the small change).; >; > ‚Äî; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/6",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-434929137:1229,integrat,integrate,1229,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-434929137,1,['integrat'],['integrate']
Integrability,"dd dependencies more easily since most libraries have CMake support. vcpkg is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use preconfigure.py anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is ${CMAKE_PREFIX_PATH}/bin. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile pySU2ad with Nothing known about namespace 'medi' in Common/include/mpi_structure.hpp:57 without -includeall SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing using namespace declarations and either importing used symbols explicitly with using or prepending namespace name, clang-tidy warns against them by default and it makes the code clearer. SU2 CMake options are:. * Build modules:; * SU2_BUILD_CFD: ON|OFF; * SU2_BUILD_DEF: ON|OFF, disabled when building with Codi; * SU2_BUILD_DOT: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_GEO: ON|OFF, disabled when building with Codi; * SU2_BUILD_MSH: ON|OFF, disabled when building with Codi; * SU2_BUILD_PY_WRAPPER: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_SOL: ON|OFF, disabled when building with Codi; * Enable modules:; * SU2_ENABLE_CGNS:; * SU2_CGNS_CPPFLAGS: flags to pass when compiling CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:1413,wrap,wrapper,1413,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,2,['wrap'],['wrapper']
Integrability,"default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7853,depend,dependency,7853,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['depend'],['dependency']
Integrability,"discadj_arina2k fails with some mpi error, but it does not fail when I run it on my local machine. Not sure what is going on here. ```; Clearing the computational graph.; [9c7d9f63f200:01637] *** An error occurred in MPI_Allgather; [9c7d9f63f200:01637] *** reported by process [4177330177,1]; [9c7d9f63f200:01637] *** on communicator MPI_COMM_WORLD; [9c7d9f63f200:01637] *** MPI_ERR_TRUNCATE: message truncated; [9c7d9f63f200:01637] *** MPI_ERRORS_ARE_FATAL (processes in this communicator will now abort,; [9c7d9f63f200:01637] *** and potentially your MPI job). ```; There is another case that sometimes fails due to the tight tolerance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1415450196:393,message,message,393,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1415450196,1,['message'],['message']
Integrability,"e cuts).; Distributing ParMETIS coloring.; Rebalancing vertices.; Rebalancing volume element connectivity.; Rebalancing markers and surface elements.; 6403 vertices including ghost points. ; 11338 interior elements including halo cells. ; 11338 triangles.; Establishing MPI communication patterns.; Identify vertices.; Storing a mapping from global to local point index. ------------------------- Solution Postprocessing -----------------------. Error in ""void CBaselineSolver::SetOutputVariables(CGeometry*, CConfig*)"": ; -------------------------------------------------------------------------; Unable to open SU2 restart file solution_flow.dat; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 17 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] 23 more processes have sent help message help-mpi-api.txt / mpi-abort; [hongwei-Workstation:07803] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages; ```; ```; hongwei@hongwei-Workstation:~/SU2_RUN/QuickStart$ singularity exec su2.sif SU2_SO",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-514630913:4695,depend,depending,4695,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-514630913,1,['depend'],['depending']
Integrability,"e: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2269,Depend,Dependency,2269,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['Depend'],['Dependency']
Integrability,"easier implementation experience. Certainly, this is not the only consideration but it should be taken into account. Currently, resulting from the significant contributions of the members of this developers group, SU2 implementation works like a charm. I think we should strive to conserve this feature, especially if we aim at attracting more users and developers into the community. (...). >@vdweide; >(...) @bmunguia and @EduardoMolina, what type of application did you have in mind for PETSc? The only thing I can think of is a full Newton solver. And no matter how much I like PETSc, @juanjosealonso and @erangit have a point here. Looks like I start to belong to the group of old conservatives as well.... >@economon ; >(...) If you really would like to give PETSc a shot, I recommend talking with @anilvar who had an interface for connecting it to SU2 in one of our branches. >@pcarruscag; >(...) being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD. (...). >@EduardoMolina; >(...) When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2.; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. (...). >@pcarruscag ; >(...) That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. (...). >@economon ; >I would add one practical comment for consideration: it is worth checking whether the main restriction we have is related to approximations in the Jacobian that limit the effective CFL we can use or whether the convergence of the linear solver itself is a problem (speed or complete lack of convergence). A quick test without re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460853218:2535,integrat,integration,2535,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460853218,2,['integrat'],['integration']
Integrability,"ed, May 27, 2020 at 12:29 PM Juan J. Alonso <notifications@github.com>; > wrote:; > ; > > Monika,; > >; > > There is a chance we could work together on this‚Ä¶Eduardo Molina (copied); > > co-advised a short project last year on wall functions which made some; > > progress but did not finalize an implementation. It may be a better; > > starting point. Eduardo, can you comment where that code went?; > >; > > I am also copying Matt S. who is interested in wall function; > > implementations in SU2. Perhaps we can get everyone on the same page to get; > > these working in the baseline state‚Ä¶and then improve them in various ways?; > >; > > Best,; > >; > > Juan; > >; > >; > > > On May 27, 2020, at 9:20 AM, monika1387 <notifications@github.com>; > > wrote:; > > >; > > >; > > > Sure, now make sense why it is showing issues, Thank you for the; > > > confirmation!; > > >; > > > On Wed, May 27, 2020 at 5:22 AM Pedro Gomes <notifications@github.com>; > > > wrote:; > > >; > > > > I gave the wall function routines a cleanup in #975; > > > > <https://github.com/su2code/SU2/pull/975> and I think something is; > > > > missing, we compute the shear stresses but they are not considered in; > > the; > > > > BC's of the NS solver.; > > > >; > > > > ‚Äî; > > > > You are receiving this because you commented.; > > > > Reply to this email directly, view it on GitHub; > > > > <https://github.com/su2code/SU2/issues/399#issuecomment-634539255>, or; > > > > unsubscribe; > > > > <; > > https://github.com/notifications/unsubscribe-auth/ALJ3OXAF4VX5CFIJVJFLIDTRTTLVBANCNFSM4DN4N2YA; > > >; > > > > .; > > > >; > > >; > > >; > > > --; > > > *Thank you,*; > > >; > > > *Monika Chauhan *; > > >; > > > *Graduate Research Assistant, Doctoral Program*; > > >; > > > *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA; > > 24061*; > > > *Cell# 540-998-5012*; > > > ‚Äî; > > > You are receiving this because you commented.; > > > Reply to this email directly, view it on GitHub <; > > https://github.com",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-635018259:2005,rout,routines,2005,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-635018259,1,['rout'],['routines']
Integrability,"ed.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8826,Wrap,Wrapper,8826,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Wrap'],['Wrapper']
Integrability,"ently) CMake under the hood. For specific packages that don‚Äôt play nicely with pkg-config, it will look for other similar utilities, such as llvm-config for the LLVM library. I have a beef mostly with documentation, but that‚Äôs hardly unusual in the open source world, and maybe not so relevant to SU2, which doesn‚Äôt have the multitude of external dependencies that many open source projects do. I think the struggles I have had relate mostly to the non-transparent way that Meson interacts with the underlying utilities (pkg-config, CMake, llvm-config,‚Ä¶). For example, I had to fumble around to get Meson to find llvm-config in a non-standard location (adding that location to $PATH turned out to be the answer), as well as to get pkg-config to find its required pkgconfig directories in non-standard locations (adding them to $PKG_CONFIG_PATH was the answer there). I also had to build/install Python 3 (required by Meson), and found that the Python 3.7 has problems with OpenSSL (module _ssl), on which Meson depends, so I went back to Python 3.6. I imagine any pre-built Python 3.7 would be fine, though a related bug appears to still be open (https://bugs.python.org/issue34028). On Windows, Meson will output Visual Studio projects, which would make any Windows developer happy, but your source still has to be cross-platform friendly‚Äînot a problem for TecIO, but I don‚Äôt know if that‚Äôs true elsewhere in SU2. FWIW,. Dave. From: Tim Albring [mailto:notifications@github.com]; Sent: Wednesday, May 22, 2019 7:31 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] Meson build system (#685). To see a major advantage, just compare the meson.build and the configure.ac file ... ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/685?email_source=notifications&email_token=AADV2HBMTJ7RZMV763KCYPLPWVKIXA5CNFSM4HOUXHQKYY3PNVWW",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-494848848:1231,depend,depends,1231,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-494848848,1,['depend'],['depends']
Integrability,"eps for unsteady problems.; * Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; * Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate:; * Loop over the (Runge-Kutta) stages; * Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; * End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; * End loop over the (Runge-Kutta) stages; * End loop over the disciplines; * End loop over the pseudo time steps.; * End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defined per zone. Well, I suppose this leaves plenty of room for discussion, so I would say to continue the online discussion a bit further, such that things become a bit clearer how to tackle this issue. After that having a telecon would be good to iron out the details. Regards,. Edwin. ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-328368371>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxHiNAbZtzVEvIm0XDsNvQmZ6lrwwks5shEHjgaJpZM4PQ90s>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328403160:3260,integrat,integration,3260,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328403160,2,['integrat'],['integration']
Integrability,"er Weide's group at the University of Twente.; # - Lab. of New Concepts in Aeronautics at Tech. Institute of Aeronautics.; #; # Copyright 2012-2018, Francisco D. Palacios, Thomas D. Economon,; # Tim Albring, and the SU2 contributors.; #; # SU2 is free software; you can redistribute it and/or; # modify it under the terms of the GNU Lesser General Public; # License as published by the Free Software Foundation; either; # version 2.1 of the License, or (at your option) any later version.; #; # SU2 is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; # Lesser General Public License for more details.; #; # You should have received a copy of the GNU Lesser General Public; # License along with SU2. If not, see <http://www.gnu.org/licenses/>. import os, sys, shutil, copy, time; import numpy as np. from .. import io as su2io; from .. import amginria as su2amg; from interface import CFD as SU2_CFD. try :; import pyamg ; except:; sys.stderr.write(""## ERROR : Unable to import pyamg module.\n""); sys.exit(1). def amg ( config , kind='' ):; ; sys.stdout.write(""SU2-AMG Anisotropic Mesh Adaptation\n""); ; #--- TODO: Check pyamg version compatibility; ; #--- Check config options related to mesh adaptation; ; adap_options = ['ADAP_SIZES', 'ADAP_SUBITE', 'ADAP_SENSOR', \; 'ADAP_BACK', 'ADAP_HMAX', 'ADAP_HMIN', 'ADAP_HGRAD', 'ADAP_RESIDUAL_REDUCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed me",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:2379,interface,interface,2379,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['interface'],['interface']
Integrability,"er=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; e",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1641,Message,Message,1641,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['Message'],['Message']
Integrability,"f501dc168cd7ef4a4d1f81140a0959a9d4382128 fixes divergence of the `disc_adj_fsi` case among the parallel regression tests that occurred when using the CoDiPack type `RealReverseIndex` instead of `RealReverse`. Since the bug is not obvious from the commit and there might be a better way to fix this, let me put this up for discussion. In `CDiscAdjMultizoneDriver::SetRecording`, the tape is recorded part by part. The part of the code that is at fault involves three of them.; - `DEPENDENCIES -> OBJECTIVE_FUNCTION`: an index is last used on a right hand side; - `OBJECTIVE_FUNCTION -> TRANSFER`: the index is available for reuse and used on the left hand side; - `recording for a zone`: the index is used on a right hand side. In `CDiscAdjMultizoneDriver.cpp::ComputeAdjoints`, however, the `TRANSFER -> OBJECTIVE_FUNCTION` part of the evaluation is skipped in some cases. After the `recording for a zone` evaluation accumulated adjoints for the said index, the adjoint reset that would be performed in the skipped tape part is missing. Instead, the tape evaluation `DEPENDENCIES -> OBJECTIVE_FUNCTION` receives the adjoints for this index, which is wrong because the index is associated with a different primal variable in this part of the tape. Have there been issues regarding dependencies between tape parts previously? Are there mechanisms established that address such issues?. If someone wants to give it a try, I added a build option for the tape type in 183c3ca7a3235c8293cf2242c66c82d35a3922c7. You can switch to the index tape by calling meson with `-Dcodi-tape=JacobianIndex`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733:479,DEPEND,DEPENDENCIES,479,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733,3,"['DEPEND', 'depend']","['DEPENDENCIES', 'dependencies']"
Integrability,"fig_amg['amg_log']); ; if os.path.exists(""current.itp.solb""):; os.remove(""current.itp.solb""); ; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Generating adapted mesh using AMG\n' % pad_cpt); ; mesh_new = su2amg.amg_call_python(mesh, config_amg); ; #--- print mesh size; ; sys.stdout.write(' %s AMG done: %s\n' % (pad_nul, su2amg.return_mesh_size(mesh_new))); ; mesh_new['markers'] = mesh['markers']; mesh_new['dimension'] = mesh['dimension']; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter; ; su2amg.write_mesh(current_mesh, current_solution, mesh_new); ; #--- Run su2; ; log = 'ite%d.SU2'%global_iter; stdout_hdl = open('%sstdout'%log,'w') # new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdou",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:10080,interface,interface,10080,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['interface'],['interface']
Integrability,"first. (I'm not sure if this is really a great workaround since the whole Python environment lib directory is now in the path, but it seems to work for now.). I'm getting an issue now where the script seems to crash while `Running initial CFD solution`:. ```; (test_env) tim@super:/work/projects/mesh_adapt_testing/A000i_adap/2_cfd$ LD_LIBRARY_PATH=$CONDA_PREFIX/lib:$LD_LIBRARY_PATH SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -n %i %s"" python /opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py -f inv_test.cfg -n 40 > mesh_adapt.out; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Traceback (most recent call last):; File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 112, in <module>; main(); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 73, in main; options.save_all ); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 102, in mesh_adaptation_amg; SU2.run.amg(config); File ""/opt/su2/SU2v7_adap/bin/SU2/run/amg.py"", line 220, in amg; SU2_CFD(config_cfd); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /work/projects/mesh_adapt_testing/A000i_adap/2_cfd/adap/ini/,; Command = mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; ------------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754504570:1272,interface,interface,1272,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570,1,['interface'],['interface']
Integrability,"for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1881,Message,Message,1881,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['Message'],['Message']
Integrability,"g 'LDFLAGS' from environment with value: '-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,/home/user/anaconda3/lib -Wl,-rpath-link,/home/user/anaconda3/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4238,depend,dependency,4238,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311,1,['depend'],['dependency']
Integrability,"g-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; Build targets in project: 12; ; Found ninja-1.10.0.git at /home/user/programs/su2/SU2_src/ninja; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; ```. Am I specifying it incorrectly?; Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:5007,Wrap,Wrapper,5007,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311,1,['Wrap'],['Wrapper']
Integrability,"gin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8294,Depend,Dependency,8294,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Depend'],['Dependency']
Integrability,"ging global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\U",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6396,depend,dependency,6396,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['depend'],['dependency']
Integrability,"h mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/opt/su2/SU2v7_adap -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/opt/intel/compilers_and_libraries_2020/linux/mkl`. reports:; ```; Installing _amgio.; The Meson build system; Version: 0.52.999; Source dir: /opt/su2/SU2_src; Build dir: /opt/su2/SU2_src/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $S",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:1729,depend,dependency,1729,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['depend'],['dependency']
Integrability,"he wrong python paths. (Though I'm not 100% sure if this is the cause.). i.e. running:; `CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/opt/su2/SU2v7_adap -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/opt/intel/compilers_and_libraries_2020/linux/mkl`. reports:; ```; Installing _amgio.; The Meson build system; Version: 0.52.999; Source dir: /opt/su2/SU2_src; Build dir: /opt/su2/SU2_src/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:1681,depend,dependency,1681,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['depend'],['dependency']
Integrability,"his working for LES; simulation (wall models in SU2). On Wed, May 27, 2020 at 12:29 PM Juan J. Alonso <notifications@github.com>; wrote:. > Monika,; >; > There is a chance we could work together on this‚Ä¶Eduardo Molina (copied); > co-advised a short project last year on wall functions which made some; > progress but did not finalize an implementation. It may be a better; > starting point. Eduardo, can you comment where that code went?; >; > I am also copying Matt S. who is interested in wall function; > implementations in SU2. Perhaps we can get everyone on the same page to get; > these working in the baseline state‚Ä¶and then improve them in various ways?; >; > Best,; >; > Juan; >; >; > > On May 27, 2020, at 9:20 AM, monika1387 <notifications@github.com>; > wrote:; > >; > >; > > Sure, now make sense why it is showing issues, Thank you for the; > > confirmation!; > >; > > On Wed, May 27, 2020 at 5:22 AM Pedro Gomes <notifications@github.com>; > > wrote:; > >; > > > I gave the wall function routines a cleanup in #975; > > > <https://github.com/su2code/SU2/pull/975> and I think something is; > > > missing, we compute the shear stresses but they are not considered in; > the; > > > BC's of the NS solver.; > > >; > > > ‚Äî; > > > You are receiving this because you commented.; > > > Reply to this email directly, view it on GitHub; > > > <https://github.com/su2code/SU2/issues/399#issuecomment-634539255>, or; > > > unsubscribe; > > > <; > https://github.com/notifications/unsubscribe-auth/ALJ3OXAF4VX5CFIJVJFLIDTRTTLVBANCNFSM4DN4N2YA; > >; > > > .; > > >; > >; > >; > > --; > > *Thank you,*; > >; > > *Monika Chauhan *; > >; > > *Graduate Research Assistant, Doctoral Program*; > >; > > *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA; > 24061*; > > *Cell# 540-998-5012*; > > ‚Äî; > > You are receiving this because you commented.; > > Reply to this email directly, view it on GitHub <; > https://github.com/su2code/SU2/issues/399#issuecomment-634777816>, or; > unsubscri",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-634857692:1203,rout,routines,1203,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-634857692,1,['rout'],['routines']
Integrability,"if back_extension == "".su2"":; ; #pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); print ""skipping back mesh ...""; #import _amgio as amgio; #amgio.py_ConvertSU2toInria(config_amg['adap_back'], """", ""amg_back""); #config_amg['adap_back'] = ""amg_back.meshb""; ; if 'ADAP_SOURCE' in config:; config_amg['adap_source'] = os.path.join(cwd,config['ADAP_SOURCE']); ; global_iter = 0; ; sys.stdout.write(""\nStarting mesh adaptation process.\n""); ; for iSiz in range(len(mesh_sizes)):; ; mesh_size = int(mesh_sizes[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d - Mesh size coefficient %.1lf\n"" % (iSiz+1, len(mesh_sizes), mesh_size)); ; for iSub in range(nSub):; ; config_amg['size'] = mesh_size; config_amg['amg_log'] = 'ite%d.amg.stdout' % (global_iter); ; # Prints; pad_cpt = (""(%d/%d)"" % (iSub+1, nSub)).ljust(9); pad_nul = """".ljust(9); ; if not amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : Can't find mesh.\n""; ; #--- Get sensor; ; sensor = su2amg.create_sensor(mesh, adap_sensor); su2amg.write_solution(""current_sensor.solb"", sensor); ; if not os.path.exists(""current_sensor.solb""):; raise RuntimeError , ""\n##ERROR : Can't find adap sensor.\n""; ; #--- Run amg; ; sys.stdout.write(""Running amg. Log : %s\n"" % config_amg['amg_log']); ; if os.path.exists(""current.itp.solb""):; os.remove(""current.itp.solb""); ; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n#",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:8487,interface,interface,8487,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['interface'],['interface']
Integrability,"ig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment vari",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2313,Message,Message,2313,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['Message'],['Message']
Integrability,"implified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is that we then need to provide a portable version that can be differentiated with CoDi or to implement the exact differentiation (similar to what is done in the ""solve_b"" routines). @vdweide that is not an issue with Eigen because everything is templated and therefore compatible with any type or class that overloads the appropriate arithmetic operators.; I have used it for over 2 years and I can attest to its compatibility with AD tools (I've tried 3), and speed when linked with a BLAS library, their native implementations are also very good, peeking inside their code... you can tell they know what they are doing. P.S. I feel this post needs a disclaimer, I am not affiliated in any way to Eigen, my motivation is not to promote their work (but I obviously think they deserve it). I genuinely think adopting an algebra library (that is compatible with AD) would greatly simplify our work and further drop the entry barrier to new developers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:2186,rout,routines,2186,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,4,['rout'],['routines']
Integrability,"in/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYT",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2620,Depend,Dependency,2620,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['Depend'],['Dependency']
Integrability,"ing for C++ compiler default output file name; configure:3442: result: a.out; configure:3448: checking for suffix of executables; configure:3455: g++ -o conftest conftest.cpp >&5; configure:3459: $? = 0; configure:3481: result: ; configure:3503: checking whether we are cross compiling; configure:3511: g++ -o conftest conftest.cpp >&5; configure:3515: $? = 0; configure:3522: ./conftest; configure:3526: $? = 0; configure:3541: result: no; configure:3546: checking for suffix of object files; configure:3568: g++ -c conftest.cpp >&5; configure:3572: $? = 0; configure:3593: result: o; configure:3597: checking whether we are using the GNU C++ compiler; configure:3616: g++ -c conftest.cpp >&5; configure:3616: $? = 0; configure:3625: result: yes; configure:3634: checking whether g++ accepts -g; configure:3654: g++ -c -g conftest.cpp >&5; configure:3654: $? = 0; configure:3695: result: yes; configure:3720: checking dependency style of g++; configure:3831: result: gcc3; configure:3921: checking for gcc; configure:3937: found /usr/bin/gcc; configure:3948: result: gcc; configure:3979: checking for C compiler version; configure:3988: gcc --version >&5; gcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3999: $? = 0; configure:3988: gcc -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-mu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:5208,depend,dependency,5208,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['depend'],['dependency']
Integrability,"ion: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2446,depend,dependency,2446,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['depend'],['dependency']
Integrability,"it ""a"" to look at some assembly, honestly sliced bread has nothing on perf. NOTE: By and large Perf is not an intrusive tool, as such the accuracy of the measurements is limited i.e. it is probably not a good idea to draw conclusion about <1% variations. Moving on, I took the top level percentages only, normalized by that of CFluidIteration::Iterate (to exclude pre-processing time) and multiplied the results from the total ""iteration time"" from the history file. Doing that for before and after results allowed computing individual speedup factors for each important routine (in terms of time, otherwise they are all special and important in their own way) e.g. gradients, limiters, upwind/viscous residuals, etc.; ![image](https://user-images.githubusercontent.com/38071223/63292708-30cfa480-c2be-11e9-8d4a-5feb3dc61abf.png). Here is the data by the way: [results.xlsx](https://github.com/su2code/SU2/files/3517492/results.xlsx). As predicted the linear solvers stay the same and routines that are light see more speedup than their arithmetic-intensive friends.; What is surprising to me is how intensive the convective residuals appear to be with only a 7% improvement, so surprising in fact, I do not think the above paints the full picture. Maybe the outlet bandwidth bottleneck (into the Jacobian matrix) is more important.; To put that do the test I switched to Euler-explicit time marching and repeated the measurements:; ![image](https://user-images.githubusercontent.com/38071223/63293351-d8010b80-c2bf-11e9-8135-2502eac1128e.png); Better, but not by much, which means upwind and viscous residuals computations might gain a lot from vectorization (SIMD). And like @economon mentioned even more if they are somehow fused together.; It also means the writes to CSysMatrix are relatively expensive, I think there are two-three reasons for it.; - We do a linear search on each Add/SubtractBlock - This could be replaced by a map.; - The Jacobian contributions are first written into a tempor",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-522730951:3993,rout,routines,3993,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-522730951,2,['rout'],['routines']
Integrability,"ix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ninja",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2760,Wrap,Wrapper,2760,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610,1,['Wrap'],['Wrapper']
Integrability,"j[iDim];; phiR -= (gradJ++)*d_ij[iDim];; }; ...; ```; to get better assembly; ```asm; .L7:; vmovapd ymm3, ymm13; vmovapd ymm2, YMMWORD PTR [rbp-400]; add rax, 32; vgatherqpd ymm0, QWORD PTR [rcx+ymm1*8], ymm3; vpaddq ymm1, ymm1, ymm11; vmovapd YMMWORD PTR [rbp-272], ymm0; vmovapd YMMWORD PTR [rbp-240], ymm0; vfmadd132pd ymm0, ymm2, YMMWORD PTR [rax-32]; vmovdqa YMMWORD PTR [rbp-208], ymm1; vmovapd YMMWORD PTR [rbp-400], ymm0; cmp rax, rbx; jne .L7; ```; which makes the vectorized code perform just as well as the scalar code, iterators could also be used for the other variables but that would start to hurt readability without improving the performance much. _Note: There is also a chance the compiler (gcc) is not doing this kind of optimization because of the way I wrote the code..._. **So we need AoS to avoid losing performance in lightweight numerics classes.**. Before we look into the impact of not using SoA in the gradient and limiters routines let me tell you there is a way to have the best of both worlds, enter the *_array of structures of arrays_* or as I like to call it zig zag storage, aka a right mess.; Imagine an AoS of short arrays of SIMD length, e.g. `{ {u0 u1 u2 u3} {v0 ... v3} {w0 ... w3} {u4 u5 u6 u7} ... }` with that it is possible to fully vectorize point loops as the first index (iPoint) is contiguous in groups of SIMD length and when looping along variables and dimensions in edge loops the stride is small enough (equal to SIMD length) to trigger hardware prefetching.; The catch is that we need even more integer arithmetic and so we really need iterators to amortise that cost, there is also the drawback that scalar usage of such a container would be terrible. **For these reasons I think we should sacrifice ultimate performance and keep node data in AoS storage.**. The major impact on gradients and limiters is the way the code is written, to vectorize the computation we need to compute the gradient into a local variable and then ""transpose"" it when s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:12794,rout,routines,12794,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['rout'],['routines']
Integrability,"ld -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1479,depend,dependency,1479,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['depend'],['dependency']
Integrability,"le 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Pr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6917,depend,dependency,6917,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['depend'],['dependency']
Integrability,"le-pywrapper=true --prefix=/opt/su2/SU2v7_adap -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/opt/intel/compilers_and_libraries_2020/linux/mkl`. reports:; ```; Installing _amgio.; The Meson build system; Version: 0.52.999; Source dir: /opt/su2/SU2_src; Build dir: /opt/su2/SU2_src/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPA",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:1848,Message,Message,1848,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['Message'],['Message']
Integrability,"led -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1562,depend,dependency,1562,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['depend'],['dependency']
Integrability,"lel partitioning.; Performing linear partitioning of the grid nodes.; 4478644 interior elements before parallel partitioning.; Distributing elements across all ranks.; Calling the partitioning functions.; Getting into adjacency function.; Building the graph adjacency structure.; 8 surface markers.; 166730 boundary elements in index 0 (Marker = aircraft).; 33766 boundary elements in index 1 (Marker = farfield).; 742 boundary elements in index 2 (Marker = injest).; 290 boundary elements in index 3 (Marker = inlet).; 22500 boundary elements in index 4 (Marker = inner_nearfield).; 243 boundary elements in index 5 (Marker = outlet).; 146871 boundary elements in index 6 (Marker = symmetry).; 22500 boundary elements in index 7 (Marker = outer_nearfield).; Calling ParMETIS...; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36096 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36400 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 35800 bytes received but buffer size is 31680; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36368 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485343:1143,Message,Message,1143,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485343,2,['Message'],['Message']
Integrability,"les/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/x86_64-w64-mingw32/8.1.0/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Trace",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12148,message,message,12148,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,2,"['Message', 'message']","['Message', 'message']"
Integrability,"lete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working version with ParMETIS. Fixed bug in global index. Now clean up and testing...; - Cleaned version of ParMETIS routines with better console output during partitioning.; - Small bug in initial element division.; - Made arrays in ParMETIS call dynamic.; - Fixed compiler warnings and added MPI directives so that the pure serial code works with the ParMETIS routines.; - Bootstrap on zion.; - Added some typecasts. Still tracking down a memory problem...; - Critical bug fix for vtxdist array.; - Partial fix; - More MPI improvements.; - Fixing a bug in SU2_DEF; - Updated BC_ActDisk_Boundary (MPI); - Merge remote-tracking branch 'upstream/develop' into develop; - changing solidboundary setting to be heatflux OR euler etc instead of AND, also working on doxygen documentation; - Dynamic allocation for some marker-related arrays.; - visualize part taken out to match upstream/dev; - Collection of improvements; - Release 3.2.7; - Fixing LOW_MEMORY_OUTPUT; - Updated LOW_MEMORY_OUTPUT option; - Updated configure.ac; - After autoconf; - Updated MPI; - Updated BC_Engine_Exhaust and BC_Engine_Bleed; - Small change; - Fixing subsonic engine intake option; - Small output change; - Added output_su2.cpp; - Updated Engine BC; - Working on Engine BCs; - Added Supersonic Outlet BC; - Minor change; - Merge remote",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:2350,rout,routines,2350,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['rout'],['routines']
Integrability,"m>; > > wrote:; > >; > > > Monika,; > > >; > > > There is a chance we could work together on this‚Ä¶Eduardo Molina; > (copied); > > > co-advised a short project last year on wall functions which made some; > > > progress but did not finalize an implementation. It may be a better; > > > starting point. Eduardo, can you comment where that code went?; > > >; > > > I am also copying Matt S. who is interested in wall function; > > > implementations in SU2. Perhaps we can get everyone on the same page; > to get; > > > these working in the baseline state‚Ä¶and then improve them in various; > ways?; > > >; > > > Best,; > > >; > > > Juan; > > >; > > >; > > > > On May 27, 2020, at 9:20 AM, monika1387 <notifications@github.com>; > > > wrote:; > > > >; > > > >; > > > > Sure, now make sense why it is showing issues, Thank you for the; > > > > confirmation!; > > > >; > > > > On Wed, May 27, 2020 at 5:22 AM Pedro Gomes <; > notifications@github.com>; > > > > wrote:; > > > >; > > > > > I gave the wall function routines a cleanup in #975; > > > > > <https://github.com/su2code/SU2/pull/975> and I think something is; > > > > > missing, we compute the shear stresses but they are not considered; > in; > > > the; > > > > > BC's of the NS solver.; > > > > >; > > > > > ‚Äî; > > > > > You are receiving this because you commented.; > > > > > Reply to this email directly, view it on GitHub; > > > > > <https://github.com/su2code/SU2/issues/399#issuecomment-634539255>,; > or; > > > > > unsubscribe; > > > > > <; > > >; > https://github.com/notifications/unsubscribe-auth/ALJ3OXAF4VX5CFIJVJFLIDTRTTLVBANCNFSM4DN4N2YA; > > > >; > > > > > .; > > > > >; > > > >; > > > >; > > > > --; > > > > *Thank you,*; > > > >; > > > > *Monika Chauhan *; > > > >; > > > > *Graduate Research Assistant, Doctoral Program*; > > > >; > > > > *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA; > > > 24061*; > > > > *Cell# 540-998-5012*; > > > > ‚Äî; > > > > You are receiving this because you commented.; > > > > Re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-638479089:2907,rout,routines,2907,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-638479089,2,['rout'],['routines']
Integrability,"mance. I used an unsteady 3D case with 83425 points. I took the extreme case of calling the output routines every time-step and only 5 inner iterations. For the first run I enabled the writing of restart and tecplot file:; ```; -------------------------- Performance Summary --------------------------; Simulation totals:; Cores: 8 | DOFs/point: 6 ; Points/core: 10428.1 | Ghost points/core: 2045.25 ; Wall-clock time (hrs): 0.153299 | Core-hrs: 1.22639 . Preprocessing phase:; Preproc. Time (s): 2.69291 | Preproc. Time (%): 0.487956 . Compute phase:; Compute Time (s): 385.71 | Compute Time (%): 69.8909 ; Iteration count: 560 | Avg. s/iter: 0.688769 ; Core-s/iter/Mpoints: 55.2191 | Mpoints/s: 0.144877 . Output phase:; Output Time (s): 163.472 | Output Time (%): 29.6211 ; Output count: 112 | Avg. s/output: 1.45957 ; -------------------------------------------------------------------------; ```; Note that the iteration count is the total number of all inner iterations. 30% of the time is spend in the output routine. That may sound like a lot, but lets take a look at the second case, where I still call the output routines, but disabled the writing of any files. ```; -------------------------- Performance Summary --------------------------; Simulation totals:; Cores: 8 | DOFs/point: 6; Points/core: 10428.1 | Ghost points/core: 2045.25; Wall-clock time (hrs): 0.112822 | Core-hrs: 0.902578. Preprocessing phase:; Preproc. Time (s): 3.84826 | Preproc. Time (%): 0.947474. Compute phase:; Compute Time (s): 399.446 | Compute Time (%): 98.347; Iteration count: 560 | Avg. s/iter: 0.713297; Core-s/iter/Mpoints: 57.1855 | Mpoints/s: 0.139896. Output phase:; Output Time (s): 2.86557 | Output Time (%): 0.705527; Output count: 112 | Avg. s/output: 0.0255854; Restart Aggr. BW (MB/s): 0 | MB/s/core: 0; -------------------------------------------------------------------------; ``` ; You can see that now the time spend in the output routines (including gathering all data, partitioning and sor",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-535018704:1058,rout,routine,1058,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-535018704,1,['rout'],['routine']
Integrability,"me/slimshady/UserPackages/SU2_INSTALL`. Then I did this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py configure build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1392,Message,Message,1392,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['Message'],['Message']
Integrability,"mplate the method.; template<typename WV>; void Compute(WV& wv, const SolutionContainer& sol) const; {; // Boilerplate, call base first. This is akin to the decorator design pattern; // without polymorphism. The working variables resemble Python's ""self"" which; // makes this solution reasonably idiomatic.; Base::Compute(wv, sol);. // Then do our specific job.; wv.area = 0.0;; for(int i=0; i<nDim; ++i); wv.area += pow(sol.areaVector[i],2);; wv.area = sqrt(wv.area);; }; };. // Same mechanics as above; template<typename Base>; class ComputeFlux : Base; {; protected:; enum : int {nDim = Base::nDim};. struct WorkVarsType : Base::WorkVarsType ; {; double flux; // ...add new member; };. template<typename WV>; void Compute(WV& wv, const SolutionContainer& sol) const; {; // ...call base; Base::Compute(wv,sol);. // ...do aditional work; wv.flux = 0.0;; for(int i=0; i<nDim; ++i); wv.flux += sol.velocity[i]*sol.areaVector[i];; }; };. // This class is used to terminate the chain, it makes the link; // with the interface and it is used to specify any fixed sizes.; template<int NDIM>; class Terminator : private VirtualInterface; {; protected:; enum : int {nDim = NDIM};. struct WorkVarsType {};. template<typename... Ts>; void Compute(Ts&...) const {}; };. // Finally we use the building blocks to implement Compute.; // The blocks can be reordered depending on application to; // help the compiler fuse loops or minimize register spillage,; // the resulting WorkVarsType definition will be equivalent.; class ComposedClass: public; ComputeFlux< ComputeArea< Terminator<3> > >; {; public:; ResultType Compute(const SolutionContainer& sol) const;; };. ResultType ComposedClass::Compute(const SolutionContainer& sol) const; {; // Create the working variables on the stack.; ComputeFlux::WorkVarsType wv;. // Pass down the working variables and whatever other arguments.; // If the convention was followed, all building blocks will run.; // Recall that all Compute's were templates, they will be; // ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:4383,interface,interface,4383,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,2,['interface'],['interface']
Integrability,"n very well. The order of the points needs to be according to the VTK hexahedron http://www.princeton.edu/~efeibush/viscourse/vtk.pdf I can't visualize where you are getting that deformation, but when using an FFD box that does not include the entire design surface you need to be careful with the continuity of the deformation to prevent creating discontinuous steps. Mmmh I see. It looks like the blade elements are extending beyond the blade surface itself and, therefore, are cut by the FFD box even if the whole geometry appears to be included withing the FFD box domain. I solved the issue by defining an user-defined fixing plane (very cool option, btw). I experienced a similar situation with an internal flow over cylinder, too.; My question was whether this behavior was mesh-dependent or FFD box-dependent. I guess it is reasonable to say that mesh elements extension beyond the body which we're optimizing is causing this, however FFD continuity allows to keep this dummy shape deformation from happening. . Secondly, I had MAX DIFF = 0 because I couldn't understand your correction properly. I had to consider the righ-hand rule third component (_thumb_) pointing inside the FFD box for each of the surfaces we establish when attaching the FFD box (_each of those defined by the points listed in FFD_DEFINITION_). Then it worked perfectly.; Still, I don't understand why for some geometries we apply what discussed in the [tutorial](https://su2code.github.io/tutorials/Species_Transport/) and here it is the opposite. At least I know what to expect and how to fix it. If you could add an alert message in the next SU2 version, that would be much appreciated. > Well, it's the F-FFD week it seems :) https://www.cfd-online.com/Forums/su2/249879-when-use-su2_def-generate-ffd-box-i-can-not-get-ffd_surface_points.html. It's sunday: is the week ending or starting? ahah I guess we both stopped counting ;); As always, thank you very much for the time you're spending on our bugs and issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025#issuecomment-1546805169:1639,message,message,1639,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025#issuecomment-1546805169,1,['message'],['message']
Integrability,"nda3/bin/x86_64-conda_cos6-linux-gnu-gcc ld.bfd 2.33.1; Using 'AR' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-ar'; Using 'LDFLAGS' from environment with value: '-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,/home/user/anaconda3/lib -Wl,-rpath-link,/home/user/anaconda3/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4080,depend,dependency,4080,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311,1,['depend'],['dependency']
Integrability,"ng 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2234,depend,dependency,2234,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['depend'],['dependency']
Integrability,"ns@github.com>; > > wrote:; > > ; > > > Monika,; > > >; > > > There is a chance we could work together on this‚Ä¶Eduardo Molina (copied); > > > co-advised a short project last year on wall functions which made some; > > > progress but did not finalize an implementation. It may be a better; > > > starting point. Eduardo, can you comment where that code went?; > > >; > > > I am also copying Matt S. who is interested in wall function; > > > implementations in SU2. Perhaps we can get everyone on the same page to get; > > > these working in the baseline state‚Ä¶and then improve them in various ways?; > > >; > > > Best,; > > >; > > > Juan; > > >; > > >; > > > > On May 27, 2020, at 9:20 AM, monika1387 <notifications@github.com>; > > > wrote:; > > > >; > > > >; > > > > Sure, now make sense why it is showing issues, Thank you for the; > > > > confirmation!; > > > >; > > > > On Wed, May 27, 2020 at 5:22 AM Pedro Gomes <notifications@github.com>; > > > > wrote:; > > > >; > > > > > I gave the wall function routines a cleanup in #975; > > > > > <https://github.com/su2code/SU2/pull/975> and I think something is; > > > > > missing, we compute the shear stresses but they are not considered in; > > > the; > > > > > BC's of the NS solver.; > > > > >; > > > > > ‚Äî; > > > > > You are receiving this because you commented.; > > > > > Reply to this email directly, view it on GitHub; > > > > > <https://github.com/su2code/SU2/issues/399#issuecomment-634539255>, or; > > > > > unsubscribe; > > > > > <; > > > https://github.com/notifications/unsubscribe-auth/ALJ3OXAF4VX5CFIJVJFLIDTRTTLVBANCNFSM4DN4N2YA; > > > >; > > > > > .; > > > > >; > > > >; > > > >; > > > > --; > > > > *Thank you,*; > > > >; > > > > *Monika Chauhan *; > > > >; > > > > *Graduate Research Assistant, Doctoral Program*; > > > >; > > > > *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA; > > > 24061*; > > > > *Cell# 540-998-5012*; > > > > ‚Äî; > > > > You are receiving this because you commented.; > > > > Reply to th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-635021148:2359,rout,routines,2359,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-635021148,1,['rout'],['routines']
Integrability,o_su2.jpg (0) ; - D Logo/su2_eagle.png (0) ; - M Makefile.am (32) ; - M Makefile.in (53) ; - D MeshTools/Matlab/MergeSU2.m (77) ; - D MeshTools/Matlab/ReadSU2.m (160) ; - D MeshTools/Matlab/WriteSU2.m (91) ; - D MeshTools/Matlab/angle2dcm.m (28) ; - D MeshTools/Matlab/example_MergeMeshes.m (38) ; - D MeshTools/Matlab/getElemTypeInfo.m (52) ; - D MeshTools/Matlab/mesh_bipara_1.su2 (38465) ; - D MeshTools/Matlab/mesh_bipara_2.su2 (3248) ; - D MeshTools/Matlab/plotElem.m (45) ; - D MeshTools/Matlab/plotFace.m (60) ; - D MeshTools/Matlab/plotMarkers.m (64) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux_x86_64 (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.macosx (112) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win (14) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win32 (33) ; - D MeshTools/PointwiseSU2plugin/Makefile (304) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.sln (64) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.suo (0) ; - D MeshTools/PointwiseSU2plugin/depend.sh (28) ; - D MeshTools/PointwiseSU2plugin/mkplugin (10) ; - D MeshTools/PointwiseSU2plugin/mkplugin.bat (82) ; - D MeshTools/PointwiseSU2plugin/mkplugin.tcl (422) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTool,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:13350,depend,depend,13350,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['depend'],['depend']
Integrability,"olvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call tho",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1181,rout,routines,1181,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['rout'],['routines']
Integrability,"onstructor of CSysMatrix by using 'new', and calling the StiffMatrix.Initialize() method, for what I see in matrix_structure.cpp. Also, StiffMatrix is a sparse matrix (nDim x nPoint) x (nDim x nPoint), which must be allocated correctly using the Initialize method to avoid carrying around lots of zeros. With regards to the other point, I think that it is interesting to use the Initialize features of the CSysVector and CSysMatrix in the constructor of the class, just as it happens in the rest of the solver classes (see for example solver_direct_mean, line 261, where the Jacobian of the problem is initialized using a Jacobian.Initialize() call in the constructor). As far as I see it, the mesh update problem is nothing but a copy of the linear elasticity problem, so maintaining the parallelism with all the other solvers in the code (and, in particular, with the structural solver) may be interesting. . Moreover, by allocating the memory in the constructor using StiffMatrix.Initialize(nPoint, nPointDomain...) we make sure we can use the linear solvers in parallel by building a compliant sparse matrix. And if we allocate the stiffness matrix in the constructor, it makes sense to also do so with the vectors of the problem. Again, this maintains the similarities with the rest of the solvers. Finally, in my particular case I call the SetVolume_Deformation() function at least as many times as I do with the fluid and the structural solver. The mesh deformation is a third field in the problem, and by initializing the structure at the beginning of the simulation we can reuse the same spaces in memory along the whole of it, given that (at least in unsteady cases) the mesh update routines may be called several times. This way we avoid to be continuously allocating/deallocating memory. Also, this is useful to have a more accurate measure of the amount of memory we will be using along the simulation right at the beginning of the calculation - although peaks of memory are unavoidable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-148017482:2086,rout,routines,2086,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-148017482,1,['rout'],['routines']
Integrability,"orementioned flag), for 2-3 minutes for hundreds of MB of record (hence the 500k mesh...).; Run `perf report -g ""fractal,0.5,caller""`, this will show % of time spent in a function relative to its caller and you can expand each function to see what are its children, grandchildren, etc. Like so:; ![image](https://user-images.githubusercontent.com/38071223/63290949-725e5080-c2ba-11e9-90aa-ffc834e726db.png); How cool is that!! Pro-tip hit ""a"" to look at some assembly, honestly sliced bread has nothing on perf. NOTE: By and large Perf is not an intrusive tool, as such the accuracy of the measurements is limited i.e. it is probably not a good idea to draw conclusion about <1% variations. Moving on, I took the top level percentages only, normalized by that of CFluidIteration::Iterate (to exclude pre-processing time) and multiplied the results from the total ""iteration time"" from the history file. Doing that for before and after results allowed computing individual speedup factors for each important routine (in terms of time, otherwise they are all special and important in their own way) e.g. gradients, limiters, upwind/viscous residuals, etc.; ![image](https://user-images.githubusercontent.com/38071223/63292708-30cfa480-c2be-11e9-8d4a-5feb3dc61abf.png). Here is the data by the way: [results.xlsx](https://github.com/su2code/SU2/files/3517492/results.xlsx). As predicted the linear solvers stay the same and routines that are light see more speedup than their arithmetic-intensive friends.; What is surprising to me is how intensive the convective residuals appear to be with only a 7% improvement, so surprising in fact, I do not think the above paints the full picture. Maybe the outlet bandwidth bottleneck (into the Jacobian matrix) is more important.; To put that do the test I switched to Euler-explicit time marching and repeated the measurements:; ![image](https://user-images.githubusercontent.com/38071223/63293351-d8010b80-c2bf-11e9-8135-2502eac1128e.png); Better, but not by m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-522730951:3579,rout,routine,3579,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-522730951,2,['rout'],['routine']
Integrability,"ork; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4538,integrat,integrated,4538,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['integrat'],['integrated']
Integrability,"orted in increasing order of the point indices to reduce cache misses, this means small groups of contiguous edges will share the same ""iPoint"", coloring single edges destroys this. Furthermore coloring either requires edges to be re-sorted by color, or if the edge indices of each color are instead kept in arrays, performance will suffer due to increased indirection which confounds the hardware pre-fetcher.; This can be mitigated to some extent by coloring groups of edges, groups of edges of the same color can be processed simultaneously, but within each group edges need to be processed serially. However grouping will reduce how much parallelism can be exploited within each color.; - **Gather to scatter** will in general use more memory due to the intermediate variables and extra adjacency information needed. If the entire algorithm is transformed performance may suffer as some computations may have to be repeated.; However, some reductions are possible without intermediate variables, for example when assembling the system matrix for implicit schemes only the diagonal entries can result in race conditions, now it just so happens that each diagonal entry is equal to the negated corresponding column sum.; - **Atomics** are terrible for the performance of code that writes frequently to memory (i.e. bandwidth-bound code), they do not increase the memory footprint and so make sense for compute-bound code.; Bugs due to a missing atomic can be very hard to debug (but any race condition is). Coloring is what one sees most in the literature, and yet I lean towards gather-to-scatter. Fewer things can go wrong with it as it is easy to understand, one gets the maximum amount of parallelism. I will now take two familiar routines, computing gradients (Green-Gauss) and limiters, vectorize / parallelize them in different ways, and measure relative performance to illustrate some of these key points introduced here. There will be C++ snipets and there will be some x86 assembly too :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:6844,rout,routines,6844,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['rout'],['routines']
Integrability,"output classes, we should find a common level of abstraction for all the different physical problems we might want to have. Right now there isn't even a unified way of specifying the kind of problem for each zone (what is fluid, what is solid etc) and the kind of coupling. This might also affect the actual implementation/restructuring since we somehow have to decide what driver we have to instantiate and so on. Hopefully we can gather all the people involved to have a discussion on that. Since we have a lot of people working in their branches on multizone problems we should tackle that better sooner than later. As Edwin already suggested, maybe it is a good idea to put some people in charge of organizing some of the bigger structural changes. Furthermore in case some people don't know, we have a slack channel for the dev team. I think that makes it easier to communicate, arrange meetings, discuss problems and ask questions. In case you need an invite, let me know, everybody who wants to contribute is welcome. Thanks for the discussion, I still think that communication is the key of success !. Tim. On Sep 13, 2017 10:30 AM, Edwin van der Weide <notifications@github.com> wrote:. Hi Tom,. Sounds like a plan then to have a look at CIntegration to see what we can do to generalize the time integration. I definitely want to help with this, but I don't think I am the appropriate person to take the lead, because I simply don't have a good overview of all the multi-physics options. Tom, are you willing to take the lead for this?. Furthermore, it is good to have other people involved as well, preferably with detailed knowledge of the different disciplines. Any volunteers?. Thanks,. Edwin. ‚Äî; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-329096830>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AEtI5MkXdqhqPPMuaDziLuDRzWCJfYwrks5sh5KagaJpZM4PQ90s>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329146567:1347,integrat,integration,1347,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329146567,2,['integrat'],['integration']
Integrability,"output for a typical run:. > ------------------------------- Begin Solver -----------------------------; > ; > ---; > ; > Direct iteration to store computational graph.; > ; > ## Compute residuals to check the convergence of the direct problem.; > ; > log10[RMS Density]: -13.0442, Drag: 0.0213497, Lift: 0.326934.; > ; > ------------------------ Discrete Adjoint Summary -----------------------; > ; > ## Total Geometry Sensitivity (updated every 250 iterations): 2.2985e+02; > ; > log10[Maximum residual]: -5.3961e+00.; > Maximum residual point 211, located at (1.2558e+00, 1.9961e+01).; > ; > Iter Time(s) Res[Psi_Rho] Res[Psi_E] Sens_Press Sens_AoA; > 0 1.584266 -6.884726 -12.303428 -2.8113e-06 2.3500e-01; > ; > ---; > ; > Direct iteration to store computational graph.; > ; > ## Compute residuals to check the convergence of the direct problem.; > ; > ```; > 1 1.193311 -6.893856 -12.313088 -2.8113e-06 2.3500e-01; > 2 0.829305 -6.903124 -12.322907 -2.8113e-06 2.3500e-01; > ```. As you can see the message. > ---; > ; > Direct iteration to store computational graph.; > ; > ## Compute residuals to check the convergence of the direct problem. Appears twice, I thought that was a IO bug and I changed. ``````; if (rank == MASTER_NODE) {; cout << endl << ""-------------------------------------------------------------------------"" << endl;; cout << ""Direct iteration to store computational graph."" << ends;; cout << ""Compute residuals to check the convergence of the direct problem."" << ends;; cout << ""-------------------------------------------------------------------------"" << endl << Lendl; }. ```;; by . ``````. ```; if (rank == MASTER_NODE && ((ExtIter == 0) || unsteady )) {; cout << endl << ""-------------------------------------------------------------------------"" << Lendl; cout << ""Direct iteration to store computational graph."" << ends;; cout << ""Compute residuals to check the convergence of the direct problem."" << ends;; cout << ""----------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/329#issuecomment-260126556:1088,message,message,1088,https://su2code.github.io,https://github.com/su2code/SU2/issues/329#issuecomment-260126556,1,['message'],['message']
Integrability,"p_args : [default_warning_flags,su2_cpp_args],; name_prefix : '',; name_suffix: 'so',; install_dir: 'bin'; ) ; ```; However, bug still remains while running python script that used pysu2/pysu2ad module. There is a MPI related issue after calling Postprocessing in pysu2: . ```; ------------------------- Solver Postprocessing -------------------------; Deleted CNumerics container.; Deleted CIntegration container.; Deleted CSolver container.; Deleted CIteration container.; Deleted CInterface container.; Deleted CGeometry container.; Deleted CFreeFormDefBox class.; Deleted CSurfaceMovement class.; Deleted CVolumetricMovement class.; Deleted CConfig container.; Deleted nInst container.; Deleted COutput class.; -------------------------------------------------------------------------; [DN0a22c803:22646] *** Process received signal ***; [DN0a22c803:22646] Signal: Segmentation fault: 11 (11); [DN0a22c803:22646] Signal code: (0); [DN0a22c803:22646] Failing at address: 0x0; [DN0a22c803:22646] *** End of error message ***; Segmentation fault: 11; ```; The exact crash location is: ; ```; Exception Type: EXC_BAD_ACCESS (SIGSEGV); Exception Codes: KERN_INVALID_ADDRESS at 0x0000737e9bdce5a2; Exception Codes: 0x0000000000000001, 0x0000737e9bdce5a2; Exception Note: EXC_CORPSE_NOTIFY. VM Region Info: 0x737e9bdce5a2 is not in any region. Bytes after previous region: 3842065106339 Bytes before following region: 13412496251486; REGION TYPE START - END [ VSIZE] PRT/MAX SHRMOD REGION DETAIL; Stack 70000ee7c000-70000eefe000 [ 520K] rw-/rwx SM=PRV thread 2; ---> GAP OF 0xfb164002000 BYTES; MALLOC_TINY 7fb172f00000-7fb173000000 [ 1024K] rw-/rwx SM=PRV . 0 _pysu2.so 	 0x116e2dfd0 CConfig::GetDiscrete_Adjoint() const + 12 (CConfig.hpp:8596); 1 _pysu2.so 	 0x1173844ca CDriver::Postprocessing() + 8600 (CDriver.cpp:558); 2 _pysu2.so 	 0x116bcaf0c _wrap_CDriver_Postprocessing + 199 (pySU2.cxx:10061); 0 libsystem_kernel.dylib 	 0x7ff801374d5a __select + 10; 1 libopen-pal.40.dylib 	 0x10a42def6 sele",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1606#issuecomment-1106125840:1579,message,message,1579,https://su2code.github.io,https://github.com/su2code/SU2/issues/1606#issuecomment-1106125840,1,['message'],['message']
Integrability,"pe: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile a",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2125,depend,dependency,2125,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['depend'],['dependency']
Integrability,"ple dataset, I have run some; variations on the jobs, and my findings were:; (Please note that *all* ""markers"" I have mentioned in the next items refer; to solid walls in the mesh, using the RANS solver); 1- When I impose HEATFLUX=0 *and* ISOTHERMAL=290 Kelvin, for the same; markers, there are no complaints from SU2. It shows that SU2 ignores the; imposition of HEATFLUX=0, in this case.; 2- Just setting ISOTHERMAL=290 Kelvin (using all of the same markers as in; (item 1), above), without any HEATFLUX setting, then SU2 produces the same; results as in (item1).; 3- When some markers are set with HEATFLUX=0 and the rest of them are set; with ISOTHERMAL=290 Kelvin (so that each wall marker in the mesh is; referenced), there are no complaints from SU2, and the job goes as expected.; 4-The error message mentioned earlier, appears when one or more solid wall; markers *is not marked* concerning HEATFLUX or ISOTHERMAL; .; My conclusion then is that the error message appeared when I mistakenly; have not included a wall marker (assigning it as a HEATFLUX or an; ISOTHERMAL marker!); Does it make sense?; Kind regards,. On Mon, Oct 23, 2023 at 7:48‚ÄØPM Jairo Cavalcante ***@***.***>; wrote:. > Unfortunately, my example involves a swirler and nozzle for the; > Navier-Stokes solver with Menter model, so the dataset is relatively large.; > Let me check whether some older small Euler mesh exhibits the same message!; > I will let you know! Thank you very much.; >; > On Mon, Oct 23, 2023 at 6:34‚ÄØPM Pedro Gomes ***@***.***>; > wrote:; >; >> Is there a simple example to reproduce the issue?; >>; >> ‚Äî; >> Reply to this email directly, view it on GitHub; >> <https://github.com/su2code/SU2/pull/2109#issuecomment-1776057496>, or; >> unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/AHGXZUV3DNRF3O55YAWT563YA3PETAVCNFSM6AAAAAA3QKLVDWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTONZWGA2TONBZGY>; >> .; >> You are receiving this because you commented.Message ID:; >> ***@***.***>; >>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1777018035:1004,message,message,1004,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1777018035,5,"['Message', 'message']","['Message', 'message']"
Integrability,"python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:3172,Wrap,Wrapper,3172,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['Wrap'],['Wrapper']
Integrability,"r: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should me",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1797,Message,Message,1797,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['Message'],['Message']
Integrability,"refix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ni",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2249,Depend,Dependency,2249,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610,3,"['Depend', 'Message']","['Dependency', 'Message']"
Integrability,"research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3388,integrat,integrated,3388,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['integrat'],['integrated']
Integrability,"ry elements in index 2 (Marker = injest).; 290 boundary elements in index 3 (Marker = inlet).; 22500 boundary elements in index 4 (Marker = inner_nearfield).; 243 boundary elements in index 5 (Marker = outlet).; 146871 boundary elements in index 6 (Marker = symmetry).; 22500 boundary elements in index 7 (Marker = outer_nearfield).; Calling ParMETIS...; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36096 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36400 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 35800 bytes received but buffer size is 31680; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36368 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36088 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 1128 bytes received but buffer size is 1056; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485343:1691,Message,Message,1691,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485343,7,['Message'],['Message']
Integrability,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1798,Depend,Depends,1798,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,2,"['Depend', 'message']","['Depends', 'message']"
Integrability,"s nowadays, so we should always be improving the class design accordingly. I suppose this will just get more important with adding more physics, zones, and more complex time integration schemes. I would like to highlight that when the code was first released, we did not have ""zones"" at all (not until some early sliding mesh work after a couple of versions), and the CDriver and CIteration classes didn't even exist until we dreamed them up a couple of years ago. My point is that, with some proper planning, we have the creativity and the right team to develop the solution we need, and we shouldn't be afraid to make big changes when necessary. Moving quickly while leveraging the team's broad skillset is one of our biggest advantages in this project. As you all know, over the years, we continue to move toward a *_structure.cpp and *_physics.cpp mindset for how we do our abstractions/data encapsulations, with ""structure"" components reused and ""physics"" components being specialized to a certain set of governing equations. This has happened in many places, including recently with the CTransfer class, for instance, and it is likely to happen with the COutput class(es) before long. However, one area where there hasn't been much evolution is within the CIntegration classes. Apart from a couple of additions for structural problems and now the DG integration, it is largely the same as it was in the first release. Perhaps this is our opportunity to rethink and update these classes for future expansion, just as we've done for others over the years. We could rework them, move them up or down in the hierarchy, change where they're instantiated, change the inheritance, and so on. Even if they get a little more complicated (like usual), as long as they're properly abstracted, it isn't likely to bother the developers working in other areas of the code too much. In short, I think some effort spent on the CIntegration classes could help here, and they are due for some updates anyway. Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329078585:1438,integrat,integration,1438,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329078585,1,['integrat'],['integration']
Integrability,s which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1157,Depend,Depends,1157,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,1,['Depend'],['Depends']
Integrability,"ssipation would be added in a step afterwards.; -> **new Euler BC**: Here for compressible flow always (!) `CUpwRoe_Flow` is taken as numerical convective scheme. Boundaries have their own numerics container in `CONV_BOUND_TERM`. Look in CDriver.cpp for allocation of `SPACE_CENTERED` compressible schemes (as JST was used in all examples in this issue, but the problem is still there if upwind schemes were taken). And independent of the users choice of `CONV_NUM_METHOD_FLOW`, as said above, `CUpwRoe_Flow` is hard coded as numerical convective scheme for boundary nodes. As in the old Euler BC a ""reflected state"" is created and handed to the `ComputeResidual` Routine of the numerical scheme, together with the boundary vertex state.; -> So one major difference between both formulations is that in the new Euler wall left & right state are created and the respective convective scheme class does the rest via `ComputeResidual`. In the old implementation everything done in the `ComputeResidual` routine is ""copied"" into the BC_Euler_Wall and modified to its needs... and it looks like central convective scheme (JST) without dissipation term. 2. When changing the `CUpwRoe_Flow` scheme, which is used only for convective schemes on boundaries `CONV_BOUND_TERM`, such that it behaves like JST without dissipation term -> then old Euler and new Euler wall BC return the same results in CD and CL. 3. So the Convective Residual is somewhat different on the surface where the Objectives CL and CD are evaluated. JST without dissipation term vs `CUpwRoeBase_Flow::ComputeResidual`. Which (and if) one of both approaches is the ""corect"" is not something I am able to say with great confidence. I tend towards: ""Well, just as you get (slightly) different results if you choose JST or ROE in the domain due to the different residual formulation, you get different results if different convective schemes on the boundary vertices are chosen. In the domain the choice is ~ Upwind if discontinuities like sh",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-565461347:1665,rout,routine,1665,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565461347,1,['rout'],['routine']
Integrability,"st machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2649,Wrap,Wrapper,2649,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['Wrap'],['Wrapper']
Integrability,"t normal (and a tangent to this normal) the current implementation of BC_Sym cannot be ""exploited"" to serve as an ""inviscid (slip) wall"" for non-straight markers. Using `MARKER_EULER= ( sym )` is not correct either as the gradients of the velocity components (used in the viscous stress tensor of the momentum equations) are not computed correctly for the reflected state. Although using MARKER_EULER in the current develop will give you the same results as the master (or older develop before #657 ) with MARKER_SYM (... as it uses the same implementation). If you pull the ""Preprocessing"" part from the develop Sym_BC into the loop over all vertices of the boundary marker, the unit normal (and tangential) gets recomputed for each vertex. That gives you results which should be a lot closer to what happens in the master. Plus handling the velocity gradient correctly. From my point of view this would be the correct way.; Apply this patch in the root of the latest develop code using `patch -p1 < SymAsInviscidSlipWall.diff` to get the code I mean. [SymAsInviscidSlipWall.diff.txt](https://github.com/su2code/SU2/files/3417354/SymAsInviscidSlipWall.diff.txt). The implementation of the Symmetry_BC could serve double as 'Inviscid (slip) wall' (which is prescribed in the NASA documents) for viscous flow if the 'Preprocessing' part gets recomputed for each boundary vertex. But how to integrate that best is s.th. to discuss. One could just pull it in at some higher computational cost, put a conditional together with a boolean (e.g. SYMMETRY_AS_SLIP_WALL= YES) or fixing and using MARKER_EULER for that case. I hope that clarifies what happens with that boundary. Please let me know if that works for you and fixes the issue. When I fixed the Regression Testcases for #657 i think that this one was not part of it, right? Maybe this validation case goes into the su2code/VandV repo :) . Cheers,Tobi. Edit: I think we can all agree, that it is Toms fault due to his requested changes in the PR üòâ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513801538:2302,integrat,integrate,2302,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513801538,1,['integrat'],['integrate']
Integrability,"t routines every time-step and only 5 inner iterations. For the first run I enabled the writing of restart and tecplot file:; ```; -------------------------- Performance Summary --------------------------; Simulation totals:; Cores: 8 | DOFs/point: 6 ; Points/core: 10428.1 | Ghost points/core: 2045.25 ; Wall-clock time (hrs): 0.153299 | Core-hrs: 1.22639 . Preprocessing phase:; Preproc. Time (s): 2.69291 | Preproc. Time (%): 0.487956 . Compute phase:; Compute Time (s): 385.71 | Compute Time (%): 69.8909 ; Iteration count: 560 | Avg. s/iter: 0.688769 ; Core-s/iter/Mpoints: 55.2191 | Mpoints/s: 0.144877 . Output phase:; Output Time (s): 163.472 | Output Time (%): 29.6211 ; Output count: 112 | Avg. s/output: 1.45957 ; -------------------------------------------------------------------------; ```; Note that the iteration count is the total number of all inner iterations. 30% of the time is spend in the output routine. That may sound like a lot, but lets take a look at the second case, where I still call the output routines, but disabled the writing of any files. ```; -------------------------- Performance Summary --------------------------; Simulation totals:; Cores: 8 | DOFs/point: 6; Points/core: 10428.1 | Ghost points/core: 2045.25; Wall-clock time (hrs): 0.112822 | Core-hrs: 0.902578. Preprocessing phase:; Preproc. Time (s): 3.84826 | Preproc. Time (%): 0.947474. Compute phase:; Compute Time (s): 399.446 | Compute Time (%): 98.347; Iteration count: 560 | Avg. s/iter: 0.713297; Core-s/iter/Mpoints: 57.1855 | Mpoints/s: 0.139896. Output phase:; Output Time (s): 2.86557 | Output Time (%): 0.705527; Output count: 112 | Avg. s/output: 0.0255854; Restart Aggr. BW (MB/s): 0 | MB/s/core: 0; -------------------------------------------------------------------------; ``` ; You can see that now the time spend in the output routines (including gathering all data, partitioning and sorting) just takes 0.7% of the overall time. Its not nothing, but roughly one order of magnitude sma",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-535018704:1165,rout,routines,1165,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-535018704,1,['rout'],['routines']
Integrability,"t the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2120,rout,routines,2120,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,4,['rout'],['routines']
Integrability,"ter types instead of arrays, and a boat load of template meta-programming (I'm guessing) there are professional libraries for this.; This quickly-hacked-together code is compatible with custom types, portable, and seems to do the trick. To pull this off we do not need to have `Vector` or `Matrix` of this class, the underlying type for those data structures is still `double`, only the `getVec` type methods need to convert on the fly to the SIMD type, for example:; ```C++; // use the ""pointer ctor"" to return an array starting at ""row0""; Array<double,4> Matrix<double>::getVec(size_t row0, size_t col) const {; return Array<double,4>(&data_[row0+col*rows_]);; }. // use the ""gather ctor"" to return an array with the indices in ""rows""; template<class U>; Array<double,4> Matrix<double>::getVec(const U& rows, size_t col) const {; return Array<double,4>(&data_[col*rows_], rows);; }; ```; After inlining those copies get optimized away.; Although the stored type, and ""scalar interface"" of the containers do not need to change, the storage order of the data does. Notice that in the above data is stored by columns instead of rows (something that @vdweide mentioned in #716) this has greater implications for gradients as instead of the familiar ""vector of matrices"" we would need a ""matrix of vectors"", i.e. the derivative of variable i w.r.t. coordinate j stored as a vector for all points. The `Adjacency` also needs to be stored in a funny way. For the scalar version of the code it was stored as a CSR sparse matrix (one array of indices into the arrays of data for each point, the rows).; For the vectorized version we want to load (small) arrays of jPoint's, arrays of iEdge's, and arrays of directions, and as we know either those are contiguous or we take a huge performance hit.; If all points had the same number of neighbors we could store the adjacency in LIL (list of lists) format, essentially a column-major matrix, but that is not true for hybrid meshes and so we would possibly wast",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:9827,interface,interface,9827,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['interface'],['interface']
Integrability,"thanks all for the comments! when I modified that routine, unfortunately I didn't get any error on linux.we can definitely comment or add a flag for the time being or we could use an older implementation of the HB operator where the real part and the complex one are treated independently, like Sravya is suggesting. However, if possible, it would be great if we can try to find a way to deal with multiplication between complex numbers (working in AD mode on mac). I don't know how to replicate this issue since I don't have a mac; do you have any suggestion? Maybe, Sravya, can we have a look together ( as you have a Mac :) ) so that we can find a solution also for other parts of the code for harmonic balance, not in the develop (eg spectral interpolation,...) ? Are complex numbers just used in HB or is somebody else using them?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/319#issuecomment-260175432:50,rout,routine,50,https://su2code.github.io,https://github.com/su2code/SU2/issues/319#issuecomment-260175432,1,['rout'],['routine']
Integrability,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2520,Depend,Depending,2520,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,2,"['Depend', 'depend']","['Depending', 'dependency']"
Integrability,"the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > ‚Äî; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H554WAUPBYMWVADRO4BUNANCNFSM4MR3ATFA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-621078198:1115,message,messages,1115,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198,1,['message'],['messages']
Integrability,the valgrind message has been solved by the most recent commit,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1550#issuecomment-1064176242:13,message,message,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/1550#issuecomment-1064176242,1,['message'],['message']
Integrability,"thon\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running c",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8419,Message,Message,8419,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Message'],['Message']
Integrability,"tiple jobs per node and you are not realizing it? Can you log in to one of the nodes during the run and see what is running there? Orphaned jobs from a previous run?. Best,. Juan. On Mar 1, 2020, at 9:40 AM, Andrew Burkett <notifications@github.com<mailto:notifications@github.com>> wrote:. I think that is just a coincidence that the timings were the same but I should have provided more data up front. I did the preprocessing output check you described and a==b. The following output is from 16 cores on 1 node if you want to take a look. output_1.txt<https://github.com/su2code/SU2/files/4272178/output_1.txt>. Here are three sets of timings. One for SU2 v7 on a smaller problem (6.8e6 cells) and one for SU2 v7 on a larger one (27e6 cells) and one for SU2 v6.2 on the same smaller problem. These are all done with the same compiled version of openmpi (v4.02) and compiling SU2 from source for both versions. The four machines are nearly identical. They're all dual socket machines running sandy bridge xeons, so they are a bit on the older side. Mesh 1 (6.8e6 cells). * 8 processes (1 machine x 8 cores) => 13s/iteration; * 8 processes (2 machine x 4 cores) => 18.4s/iteration; * 16 processes (1 machine x 16 cores) => 8.5s/iteration; * 16 processes (2 machines x 8 cores) => 17s/iteration; * 16 processes (4 machines x 4 cores) => 15.8s/iteration; * 32 processes (2 machines x 16 cores) => 18.1s/iteration; * 64 processes (4 machines x 16 cores) => 21.9s/iteration. Mesh 2 (27e6 cells). * 8 processes (1 machine x 8 cores) => 50s/iteration; * 16 processes (1 machine x 16 cores) => 32s/iteration; * 16 processes (2 machines x 8 cores) => 32s/iteration; * 16 processes (4 machines x 4 cores) => 31s/iteration; * 32 processes (2 machines x 16 cores) => 34s/iteration; * 64 processes (4 machines x 16 cores) => 40s/iteration. A final set of timings for Mesh 1 with SU2 v6.2 for reference. * 8 processes (1 machine x 8 cores) => 26s/iteration; * 8 processes (2 machine x 4 cores) => 25s/iteration; *",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593127059:2402,bridg,bridge,2402,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593127059,1,['bridg'],['bridge']
Integrability,"to run v&v on; major releases only, aka 7.0 but not 7.1, and I agree that keeping a record; of the most recent version checked is a good idea-and as necessary minor; releases could be tested, as suggested by individual developers. The regression tests should ensure that the v&v results will be unlikely to; be changed. One thing we can do to reduce that risk further would be to; introduce regression tests that compare solution files rather than the; terminal output alone. I can take a stab at that if there's no other; volunteers- probably only needs to be a couple of critical tests, the file; diff may be slightly more expensive than currently, but given the increase; in test precision and detail I think it would be worth it. H. On Thu, Sep 20, 2018, 1:46 PM erangit <notifications@github.com> wrote:. > Hi All; > I‚Äôm a bit worried about the logistics related to checking this v&v data; > base for every new release.; > Unlike the tutorials, these cases, by their nature will be large and will; > require long integrations(the 2D cases might not fall on this category).; > This means also that significant computational resources will be required; > for this evaluation (about twice a year for a growing list of cases). Is it; > practical?; > The only way that I think that it might work is that each contributor will; > be responsible for checking the casesthat he has introduced, before each; > release. Being a voluntary institution, this can not be enforced (and we do; > not want to enforce). How about trying to be less demanding:; > In each validation case there will be a statement about the last version; > that it was checked with and the responsible contributor. Each contributor; > will receive a recommendation to check his cases before a new release, and; > will be able to do that and update the OK label also after the release.; > Less waterproof but might be more workable.; > What do you think?; > Eran; >; > ‚Äî; > You are receiving this because you are subscribed to this thr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423283690:1151,integrat,integrations,1151,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423283690,1,['integrat'],['integrations']
Integrability,"true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1558,Message,Message,1558,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['Message'],['Message']
Integrability,"uch lower level, namely where the spatial residual is computed. At least, this should be the case for the fluid dynamics part. I don't know whether this is also the case for other disciplines, like structures. What about the following high level structure?. - Loop over the number of iterations, or time steps for unsteady problems.; - Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; - Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate: ; - Loop over the (Runge-Kutta) stages; - Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; - End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; - End loop over the (Runge-Kutta) stages ; - End loop over the disciplines; - End loop over the pseudo time steps.; - End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defined per zone. Well, I suppose this leaves plenty of room for discussion, so I would say to continue the online discussion a bit further, such that things become a bit clearer how to tackle this issue. After that having a telecon would be good to iron out the details. . Regards,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328368371:1516,integrat,integration,1516,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328368371,4,['integrat'],['integration']
Integrability,"uctures. What about the following high level structure?. * Loop over the number of iterations, or time steps for unsteady problems.; * Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; * Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate:; * Loop over the (Runge-Kutta) stages; * Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; * End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; * End loop over the (Runge-Kutta) stages; * End loop over the disciplines; * End loop over the pseudo time steps.; * End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defined per zone. Well, I suppose this leaves plenty of room for discussion, so I would say to continue the online discussion a bit further, such that things become a bit clearer how to tackle this issue. After that having a telecon would be good to iron out the details. Regards,. Edwin. ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-328368371>, or mute the thread<",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328403160:3025,integrat,integration,3025,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328403160,2,['integrat'],['integration']
Integrability,"ure.; 8 surface markers.; 166730 boundary elements in index 0 (Marker = aircraft).; 33766 boundary elements in index 1 (Marker = farfield).; 742 boundary elements in index 2 (Marker = injest).; 290 boundary elements in index 3 (Marker = inlet).; 22500 boundary elements in index 4 (Marker = inner_nearfield).; 243 boundary elements in index 5 (Marker = outlet).; 146871 boundary elements in index 6 (Marker = symmetry).; 22500 boundary elements in index 7 (Marker = outer_nearfield).; Calling ParMETIS...; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36096 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36400 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 35800 bytes received but buffer size is 31680; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36368 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36088 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485343:1417,Message,Message,1417,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485343,2,['Message'],['Message']
Integrability,"w64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/x86_64-w64-mingw32/8.1.0/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 245, in run; app.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 159, in generate; s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12563,Wrap,Wrapper,12563,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Wrap'],['Wrapper']
Integrability,"we could maybe also use multizone, and allow a zone to be selected for volume averaging and integrated variables.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1894#issuecomment-1396603114:92,integrat,integrated,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/1894#issuecomment-1396603114,1,['integrat'],['integrated']
Integrability,"while you might be envisioning a more clever approach, the python wrapper has some tools to help with this too. SU2.io.tools.restart2solution(config,state=None); """""" moves restart file to solution file, ; optionally updates state; direct or adjoint is read from config; adjoint objective is read from config; """""". should be called right after a call to SU2_CFD (ie with SU2.run.direct()",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/17#issuecomment-29596087:66,wrap,wrapper,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/17#issuecomment-29596087,1,['wrap'],['wrapper']
Integrability,"x-hp-probook-g3-450: SU2_NEW$ meson build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1481,depend,dependency,1481,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['depend'],['dependency']
Integrability,y/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NE,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6963,interface,interface,6963,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['interface'],['interface']
Integrability,"{; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; double flux = phi_ave[iVar]*area(iEdge,iDim);. grad(iPoint,iVar,iDim) += flux;; grad(jPoint,iVar,iDim) -= flux;; }; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); for(size_t iDim=0; iDim<nDim; ++iDim); #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); grad(iPoint,iVar,iDim) /= volume[iPoint];; }; ```; Well it is not just a few pragmas, we need to make the number of variables known at compile time (via a template parameter) and we need to transpose how the gradient is stored, i.e. instead of {xyz, xyz, xyz, xyz} we need {xxxx, yyyy, zzzz}. This code gets a speed-up of **2.2**. This code is generic but the template needs to be instantiated for every possible number of variables and we need a `switch` to call the right version at runtime, not very friendly.; Processing multiple edges at the same time is not worth the effort, for one we need `gather/scatter` on a very light routine, and on top of that we need to sort the edges such that we do not attempt to `scatter` to the same point when updating the gradient (a problem similar to the race condition described for SPMD). We can switch to a point-based loop and process multiple points in a SIMD way, that avoids the `scatter` problem but `gathers` will still be required. Here is what the scalar version of the point-based loop looks like:; ```C++; void computeGradients(size_t nPoint,; size_t nVar,; size_t nDim,; const Adjacency& adj,; const Matrix& area,; const vector<double>& volume,; const Matrix& phi,; VectorOfMatrix& grad); {; for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) = 0.0;. for(size_t iNeigh=0; iNeigh<adj.nNeighbor(iPoint); ++iNeigh); {; size_t jPoint = adj.jPoint(iPoint,iNeigh);; size_t iEdge = adj.iEdge(iPoint,iNeigh);; double dir = adj.dir(iPoint,iNeigh);. for(size_t iVar=0; iVar<nVar; ++iVar); {; double phi_ave = 0.5*(phi(iPoint,i",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:3332,rout,routine,3332,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['rout'],['routine']
Modifiability," ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5901,config,config,5901,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,2,['config'],"['config', 'config-lite-']"
Modifiability, $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10592,config,configure,10592,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,6,['config'],['configure']
Modifiability," 'current.meshb'; config_amg['mesh_out'] = 'current.new.meshb'; config_amg['metric_in'] = ''; config_amg['sol_in'] = 'current_sensor.solb'; config_amg['itp_sol_in'] = 'current.solb'; config_amg['adap_source'] = ''; ; if 'ADAP_BACK' in config:; config_amg['adap_back'] = os.path.join(cwd,config['ADAP_BACK']); #os.symlink(os.path.join(cwd, config.ADAP_BACK), config.ADAP_BACK); else:; config_amg['adap_back'] = config['MESH_FILENAME']; ; print ""config_amg : "" + config_amg['adap_back']; back_name, back_extension = os.path.splitext(config_amg['adap_back']); ; if not os.path.exists(config_amg['adap_back']):; raise RuntimeError , ""\n\n##ERROR : Can't find back mesh: %s.\n\n"" % config_amg['adap_back']; ; if back_extension == "".su2"":; ; #pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); print ""skipping back mesh ...""; #import _amgio as amgio; #amgio.py_ConvertSU2toInria(config_amg['adap_back'], """", ""amg_back""); #config_amg['adap_back'] = ""amg_back.meshb""; ; if 'ADAP_SOURCE' in config:; config_amg['adap_source'] = os.path.join(cwd,config['ADAP_SOURCE']); ; global_iter = 0; ; sys.stdout.write(""\nStarting mesh adaptation process.\n""); ; for iSiz in range(len(mesh_sizes)):; ; mesh_size = int(mesh_sizes[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d - Mesh size coefficient %.1lf\n"" % (iSiz+1, len(mesh_sizes), mesh_size)); ; for iSub in range(nSub):; ; config_amg['size'] = mesh_size; config_amg['amg_log'] = 'ite%d.amg.stdout' % (global_iter); ; # Prints; pad_cpt = (""(%d/%d)"" % (iSub+1, nSub)).ljust(9); pad_nul = """".ljust(9); ; if not amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:7768,config,config,7768,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability, - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeT,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18579,plugin,plugins,18579,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability," ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.D.Palacios@boeing.com|; | Dr. Thomas D. Economon, economon@stanford.edu |; -------------------------------------------------------------------------; | SU2 Developers: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial College London. |; -------------------------------------------------------------------------; | Copyright (C) 2012-2015 SU2, the open-source CFD code. |; | ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16676,config,configure,16676,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability," --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unrecognized option '-qversion'; gcc: no input files; configure:3999: $? = 1; configure:4003: checking whether we are using the GNU C compiler; configure:4022: gcc -c conftest.c >&5; configure:4022: $? = 0; configure:4031: result: yes; configure:4040: checking whether gcc accepts -g; configure:4060: gcc -c -g conftest.c >&5; configure:4060: $? = 0; configure:4101: result: yes; configure:4118: checking for gcc option to accept ISO C89; configure:4181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conftest.c -o conftest2.o >&5; configure:4380: $? = 0; configure:4386: gcc -c conftest.c -o conftest2.o >&5; configure:4390: $? = 0; configure:4401: cc -c conftest.c >&5; configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4619: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:7207,config,configure,7207,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,12,['config'],['configure']
Modifiability," 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <stdio.h>; | #ifdef HAVE_SYS_TYPES_H; | # include <sys/types.h>; | #endif; | #ifdef HAVE_SYS_STAT_H; | # include <sys/stat.h>; | #endif; | #ifdef STDC_HEADERS; | # include <stdlib.h>; | # include <stddef.h>; | #else; | # ifdef HAVE_STDLIB_H; | # include <stdlib.h>; | # endif; | #endif; | #ifdef HAVE_STRING_H; | # if !defined STDC_HEADERS && defined HAVE_MEMORY_H; | # include <memory.h>; | # endif; | # include <string.h>; | #endif; | #ifdef HAVE_STRINGS_H; | # include <strings.h>; | #endif; | #ifdef HAVE_INTTYPES_H; | # include <inttypes.h>; | #endif; | #ifdef HAVE_STDINT_H; | # include <stdint.h>; | #endif; | #ifdef HAVE_UNISTD_H; | # include <unistd.h>; | #endif; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking X11/Intrinsic.h presence; configure:5409: gcc -E conftest.c; conftest.c:28:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:57",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:14261,config,configure,14261,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability," 8:38 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: [su2code/SU2] C++ compiler cannot create executables (#738). Dear developers,; I am trying to install SU2 in docker ubuntu 18.04 container so that I can easily share with partner. But I failed to compile the code with following errors:. (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx. checking build system type... x86_64-pc-linux-gnu. checking host system type... x86_64-pc-linux-gnu. checking target system type... x86_64-pc-linux-gnu. checking for a BSD-compatible install... /usr/bin/install -c. checking whether build environment is sane... yes. checking for a thread-safe mkdir -p... /bin/mkdir -p. checking for gawk... no. checking for mawk... mawk. checking whether make sets $(MAKE)... yes. checking whether make supports nested variables... yes. checking whether make supports nested variables... (cached) yes. checking for style of include used by make... GNU. checking whether the C++ compiler works... no. configure: error: in `/home/SU2':. configure: error: C++ compiler cannot create executables. See `config.log' for more details. I am sure that I have installed gcc/g++ successfully. You can see. (base) root@a5502ebdff64:/home# gcc --version. gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0. Copyright (C) 2017 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. (base) root@a5502ebdff64:/home# g++ -o hello hello.cc. (base) root@a5502ebdff64:/home# ./hello. Hello, World!. I have uploaded the config.log file. Could you give me some suggestions, please?; config.log<https://github.com/su2code/SU2/files/3418183/config.log>. ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on Gi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847308:1205,variab,variables,1205,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847308,1,['variab'],['variables']
Modifiability, ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/C,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18738,plugin,plugins,18738,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability," ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=/app/mpich-3.2.1' '--cache-file=/dev/null' '--srcdir=.' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=-lpthread ' 'CPPFLAGS= -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/openpa/src -I/app/setups/mpich-3.2.1/src/openpa/src -D_REENTRANT -I/app/setups/mpich-3.2.1/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. The output of mpicxx --version is. g++ (GCC) 5.5.0; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. d) The configuration of meson:. ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-tecio=false -Dwith-mpi=disabled -Denable-cgns=false --prefix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620552610:1208,config,configuration,1208,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610,1,['config'],['configuration']
Modifiability, C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; con,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10406,config,configure,10406,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability," C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5973,config,config-lite-,5973,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config-lite-']
Modifiability, D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:19043,plugin,plugins,19043,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability, D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpVersions.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin_Instructions.txt (0) ; - I QuickStart/inv_NACA0012.cfg (0) ; - I README (0) ; - I SU2_CFD/include/SU2_CF,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:19712,plugin,plugins,19712,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability, MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:16054,plugin,plugins,16054,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability, MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugi,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18419,plugin,plugins,18419,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability, MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structure,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18499,plugin,plugins,18499,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability," Palacios, Thomas D. Economon,; # Tim Albring, and the SU2 contributors.; #; # SU2 is free software; you can redistribute it and/or; # modify it under the terms of the GNU Lesser General Public; # License as published by the Free Software Foundation; either; # version 2.1 of the License, or (at your option) any later version.; #; # SU2 is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; # Lesser General Public License for more details.; #; # You should have received a copy of the GNU Lesser General Public; # License along with SU2. If not, see <http://www.gnu.org/licenses/>. import os, sys, shutil, copy, time; import numpy as np. from .. import io as su2io; from .. import amginria as su2amg; from interface import CFD as SU2_CFD. try :; import pyamg ; except:; sys.stderr.write(""## ERROR : Unable to import pyamg module.\n""); sys.exit(1). def amg ( config , kind='' ):; ; sys.stdout.write(""SU2-AMG Anisotropic Mesh Adaptation\n""); ; #--- TODO: Check pyamg version compatibility; ; #--- Check config options related to mesh adaptation; ; adap_options = ['ADAP_SIZES', 'ADAP_SUBITE', 'ADAP_SENSOR', \; 'ADAP_BACK', 'ADAP_HMAX', 'ADAP_HMIN', 'ADAP_HGRAD', 'ADAP_RESIDUAL_REDUCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:2531,config,config,2531,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability," added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to make mesh finer to capture shock waves. In ver.7, grid adaptation related parameters in configuration template file are not used, so it appears that grid adaptation function is dead now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:1985,adapt,adaptation,1985,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111,4,"['adapt', 'config']","['adaptation', 'configuration']"
Modifiability," case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need to run the cases themselves. . I also wanted to broach the topic of convergence here. Would it be a good idea to standardize the termination criteria wherever possible? For example, in the NACA0012 case we can ensure that residuals are reduced by 8 orders of magnitude for all meshes. Or for the ONERAM6, we use Cauchy convergence and make sure the C_L is converged to 6 orders of magnitude. This would have to be flexible since the same level of convergence might not apply to all the cases in the repository. But for within a test case, I think it would be good to use the same convergence criteria for a family of meshes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:2415,flexible,flexible,2415,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,2,['flexible'],['flexible']
Modifiability," checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:11872,config,configure,11872,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,8,['config'],['configure']
Modifiability," commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Questions. * How do developers feel about adding unit tests to SU2?; * If a unit-testing framework were added to SU2, would you actually use it?; * Do developers have a preference (or experience with) any of the unit testing frameworks?; * Should unit tests be expected when submitting PRs?. ‚Äî; You are receiving this bec",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4429,flexible,flexible,4429,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['flexible'],['flexible']
Modifiability," configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4619: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4644: result: gcc -E; configure:4664: gcc -E conftest.c; configure:4664: $? = 0; configure:4678: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4678: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:8586,config,configure,8586,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability," connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. double phi_ave[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); phi_ave[iVar] = 0.5*(phi(iPoint,iVar)+phi(jPoint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; double flux = phi_ave[iVar]*area(iEdge,iDim);. grad(iPoint,iVar,iDim) += flux;; grad(jPoint,iVar,iDim) -= flux;; }; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); for(size_t iDim=0; iDim<nDim; ++iDim); #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); grad(iPoint,iVar,iDim) /= volume[iPoint];; }; ```; Well it is not just a few pragmas, we need to make the number of variables known at compile time (via a template parameter) and we need to transpose how the gradient is stored, i.e. instead of {xyz, xyz, xyz, xyz} we need {xxxx, yyyy, zzzz}. This code gets a speed-up of **2.2**. This code is generic but the template needs to be instantiated for every possible number of variables and we need a `switch` to call the right version at runtime, not very friendly.; Processing multiple edges at the same time is not worth the effort, for one we need `gather/scatter` on a very light routine, and on top of that we need to sort the edges such that we do not attempt to `scatter` to the same point when updating the gradient (a problem similar to the race condition described for SPMD). We can switch to a point-based loop and process multiple points in a SIMD way, that avoids the `scatter` problem but `gathers` will still be required. Here is what the scalar version of the point-based loop looks like:; ```C++; void computeGradients(size_t nPoint,; size_t nVar,; size_t nDim,; const Adjacency& adj,; const Matrix& area,; const vector<double>& volume,; const Matrix& phi,; VectorOfMatrix& grad); {; for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) = 0.0;. for(size_t iNe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:3124,variab,variables,3124,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['variab'],['variables']
Modifiability," container that automates the per-thread creation and access. > Why are they redefined each time inside the loop?; > Is this for efficiency reasons?. Referring to variables being declared inside loops. One stylist reason is that declaring everything at the top of a function is the C way of doing things, the C++ people whose books/blogs I've read and talks I've watched, recommend keeping namespaces (the inside of the loop being one) as clean as possible.; The only reason not to do this is if you explicitly want re-use, in the case of trivial types this does not improve efficiency, and in the context of OpenMP code it can create issues. Just like we need one numerics per thread, if we declare variables outside a parallel loop the default OpenMP behaviour is to consider them shared, and concurrent writes to shared locations = gdb and many bad words xD.; **EDIT:** I should mention here that if the parallel region is started before the variable declarations they become local and all is well, with the exception of class members, those will be shared most of the time (this is where const correctness can give some peace of mind). > Also, just an additional (hopefully constructive) comment: I find all of these developments great, and I honestly think that you are doing an amazing job on performance and overall code improvement. However, as a non-C++-master myself, I'm just a little concerned of whether some advanced programming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...).""; I try to encapsulate and hide the tricky bits as much as possible to make the code as readable as possible, whether I am succeeding or not is for the community to decide, in all these PR's I've been poi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:3115,variab,variable,3115,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,2,['variab'],['variable']
Modifiability," documentation, but that‚Äôs hardly unusual in the open source world, and maybe not so relevant to SU2, which doesn‚Äôt have the multitude of external dependencies that many open source projects do. I think the struggles I have had relate mostly to the non-transparent way that Meson interacts with the underlying utilities (pkg-config, CMake, llvm-config,‚Ä¶). For example, I had to fumble around to get Meson to find llvm-config in a non-standard location (adding that location to $PATH turned out to be the answer), as well as to get pkg-config to find its required pkgconfig directories in non-standard locations (adding them to $PKG_CONFIG_PATH was the answer there). I also had to build/install Python 3 (required by Meson), and found that the Python 3.7 has problems with OpenSSL (module _ssl), on which Meson depends, so I went back to Python 3.6. I imagine any pre-built Python 3.7 would be fine, though a related bug appears to still be open (https://bugs.python.org/issue34028). On Windows, Meson will output Visual Studio projects, which would make any Windows developer happy, but your source still has to be cross-platform friendly‚Äînot a problem for TecIO, but I don‚Äôt know if that‚Äôs true elsewhere in SU2. FWIW,. Dave. From: Tim Albring [mailto:notifications@github.com]; Sent: Wednesday, May 22, 2019 7:31 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] Meson build system (#685). To see a major advantage, just compare the meson.build and the configure.ac file ... ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/685?email_source=notifications&email_token=AADV2HBMTJ7RZMV763KCYPLPWVKIXA5CNFSM4HOUXHQKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODV7HU5Y#issuecomment-494828151>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AADV2HCTYNNIVVXY7RSS5WTPWVKIXANCNFSM4HOUXHQA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-494848848:1947,config,configure,1947,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-494848848,1,['config'],['configure']
Modifiability," file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\li",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6499,config,config-lite-,6499,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config-lite-']
Modifiability," gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:11820,config,configure,11820,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability," import amginria as su2amg; from interface import CFD as SU2_CFD. try :; import pyamg ; except:; sys.stderr.write(""## ERROR : Unable to import pyamg module.\n""); sys.exit(1). def amg ( config , kind='' ):; ; sys.stdout.write(""SU2-AMG Anisotropic Mesh Adaptation\n""); ; #--- TODO: Check pyamg version compatibility; ; #--- Check config options related to mesh adaptation; ; adap_options = ['ADAP_SIZES', 'ADAP_SUBITE', 'ADAP_SENSOR', \; 'ADAP_BACK', 'ADAP_HMAX', 'ADAP_HMIN', 'ADAP_HGRAD', 'ADAP_RESIDUAL_REDUCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(ada",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:3298,config,config,3298,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability," means for each numerical method we will have 4 explicit template instantiations (Euler2D, Euler3D, (RA)NS2D, (RA)NS3D) but in the end these are still polymorphic objects that will be instantiated by some factory function (i.e. it will look clean, especially because I will not port all methods in one go xD). The template machinery to support this is actually not too crazy:; ```c++; #include <array>; #include <cmath>. // An example type to use instead of the container that stores solution data for all vertices.; struct SolutionContainer; {; std::array<double,3> velocity;; std::array<double,3> areaVector;; };. using ResultType = double;. // We want classes with this interface.; class VirtualInterface; {; public:; virtual ResultType Compute(const SolutionContainer&) const = 0;; };. // The Compute method is to be composed via an inheritance chain, to do this; // we allow each building block to inherit from any class. These classes should; // be function objects that have no member variables, all data used in the; // resulting Compute method will be on the stack.; template<typename Base>; class ComputeArea : Base; {; protected:; // Different template instantiations will be made for; // 2D/3D to allow perfect loop unrolling.; enum : int {nDim = Base::nDim};. // To share variables between building blocks we will pass; // down a struct which is also composed by inheritance; struct WorkVarsType : Base::WorkVarsType; {; double area; // add ""area"" to the variables of Base; };; ; // The final implementation of Compute will be a call down the chain.; // The final constructed WorkVarsType is not known at this stage,; // hence we also template the method.; template<typename WV>; void Compute(WV& wv, const SolutionContainer& sol) const; {; // Boilerplate, call base first. This is akin to the decorator design pattern; // without polymorphism. The working variables resemble Python's ""self"" which; // makes this solution reasonably idiomatic.; Base::Compute(wv, sol);. // Then do our sp",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:2712,variab,variables,2712,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,2,['variab'],['variables']
Modifiability," model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unrecognized option '-qversion'; gcc: no input files; configure:3999: $? = 1; configure:4003: checking whether we are using the GNU C compiler; configure:4022: gcc -c conftest.c >&5; configure:4022: $? = 0; configure:4031: result: yes; configure:4040: checking whether gcc accepts -g; configure:4060: gcc -c -g conftest.c >&5; configure:4060: $? = 0; configure:4101: result: yes; configure:4118: checking for gcc option to accept ISO C89; configure:4181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conftest.c -o conftest2.o >&5; configure:4380: $? = 0; configure:4386: gcc -c conftest.c -o conftest2.o >&5; configure:4390: $? = 0; configure:4401: cc -c conftest.c >&5; configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4619: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2"";",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:7477,config,configure,7477,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability," no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.D.Palacios@boeing.com|; | Dr. Thomas D. Economon, economon@stanford.edu |; -------------------------------------------------------------------------; | SU2 Developers: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16282,config,config,16282,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability," of contiguous data.; It is not the only way, it is also possible to `gather` and `scatter` data. That is populating the register from non-contiguous locations and vice versa. This is about one order of magnitude slower, to the point where if the computations are very simple it may not pay-off to vectorize. **Relation with algorithms**; Some form of `gather` and `scatter` is required in unstructured CFD, which means SIMD has a price of admission. Some thought needs to go into designing algorithms that amortize that cost by maximizing the so called FLOP/Byte ratio, and mask the latency of those operations by being able to start computing as soon as the first element of data is available. **What elements should we try to process simultaneously?**; The choice is between multiple geometric primitives (edges/points) or multiple solution primitives (variables). The latter sounds like a sensible idea until we get to areas of the code where different primitives require different treatment, that and the fact that the number of variables might not fit evenly in the number of lanes can lead to very tricky and non-generic code. Nevertheless if the same code were to be applied to e.g. 4 solution variables, this strategy would likely perform better as it avoids the pesky gather/scatter operations.; Processing multiple geometric primitives can make full utilization of whatever register size (important on GPU's), the code is just as readable (as I hope to show), but gather/scatter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:2382,variab,variables,2382,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['variab'],['variables']
Modifiability," of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4176,config,configure,4176,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['config'],['configure']
Modifiability," result: yes; configure:2872: checking for a thread-safe mkdir -p; configure:2911: result: /bin/mkdir -p; configure:2918: checking for gawk; configure:2934: found /bin/gawk; configure:2945: result: gawk; configure:2956: checking whether make sets $(MAKE); configure:2978: result: yes; configure:3075: checking whether make supports nested variables; configure:3092: result: yes; configure:3117: checking for style of include used by make; configure:3145: result: GNU; configure:3196: result: >>> MPI support disabled by default <<<; configure:3269: checking for g++; configure:3285: found /usr/bin/g++; configure:3296: result: g++; configure:3323: checking for C++ compiler version; configure:3332: g++ --version >&5; g++ (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3343: $? = 0; configure:3332: g++ -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3343: $? = 0; configure:3332: g++ -V >&5; g++: '-V' option must have argument; configure:3343: $? = 1; configure:3332: g++ -qversion >&5; g++: unreco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:3012,config,configure,3012,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability," results. However, at low Mach numbers, the code is presenting poor convergence due to the wide disparity between the particle and acoustic wave speeds in the dual time stepping. During the last weeks, I studied some preconditioning formulations that can be added to SU2. Currently, we are only scaling the dissipation part improving accuracy not convergence at Low Mach number flows. . I found this interesting paper that presents the preconditioning formulation in conservative variables (minor changes in the code) for implicit solvers based on the classical Weiss and Smith formulation. A robust low speed preconditioning formulation for viscous flow ‚Ä¶ <https://www.google.com.br/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0ahUKEwjS8_vzre3QAhXIjJAKHatADsQQFggfMAA&url=http%3A%2F%2Fwww.sciencedirect.com%2Fscience%2Farticle%2Fpii%2FS0045793011000223&usg=AFQjCNG9Pc2UPSeqsdqHfVa0symixryb9w&sig2=2eqLmLoBa4t3XCMT_DWSrQ&bvm=bv.141320020,d.Y2I>; Preconditioning applied to variable and constant density flows - AIAA <https://www.google.com.br/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&sqi=2&ved=0ahUKEwjF65S3s-3QAhXFkZAKHfwbDlEQFggfMAA&url=http%3A%2F%2Farc.aiaa.org%2Fdoi%2Fpdf%2F10.2514%2F3.12946&usg=AFQjCNGpofvU3ntuYJaA6o_nAz8MOKubCg&sig2=YIumr88W2hKQK0AMzI3fAw&bvm=bv.141320020,d.Y2I>. I really would like some help to implement the above preconditioning implicit dual time-step formulation (Eq. 18 of the Weiss and Smith paper or section 4.3.3 of Colin et al.). Supposing I already have the preconditioning matrix, I just have to modify CEulerSolver::SetResidual_DualTime?. Thanks in advance. Eduardo . > On 5 Dec 2016, at 17:29, Thomas D. Economon <notifications@github.com> wrote:; > ; > Great! Thanks, Eduardo. Let's work now together in this branch to make sure that everything is integrated nicely. Just let me know what help you may need.; > ; > ‚Äî; > You are receiving this because you modified the open/close state.; > Reply to this email directly, view it on",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/333#issuecomment-266321042:1027,variab,variable,1027,https://su2code.github.io,https://github.com/su2code/SU2/pull/333#issuecomment-266321042,1,['variab'],['variable']
Modifiability, sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? =,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10822,config,configure,10822,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability," sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1633,config,configure,1633,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['config'],['configure']
Modifiability," to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem. However, this concept could reduce code duplication and improve readability and maintainability, so I'm curious to see the progress on this...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:1604,config,config,1604,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665,2,"['config', 'maintainab']","['config', 'maintainability']"
Modifiability," where integration to the wall makes sense and a fuselage marker where wall functions (or even an inviscid BC) is the right thing to do. So let‚Äôs indeed do something like what Tom suggests (in the spirit of MARKER_MONITORING) so that one can control which markers get wall functions applied. If a list of markers is not specified in the config file, the default behavior should be that all no-slip walls get wall function BCs. If a list of markers is specified, then those and only those markers listed get wall function Bfs (with the others getting integration to the wall treatment). Now, what you point out in the second half of your message is the ultimate in flexibility: not only specifying wall functions in a subset of the no-slip wall markers, but also allowing for different kinds of wall functions to be used in those markers. I imagine that this would be a seldom used capability‚Ä¶but someone out there might have the need. I guess it does not seem to me that the coding of the most flexible logic is that much more complicated, so we may as well do that. If you guys think it is too complicated, the advertised options in the config file can allow some simpler behavior. My two cents,. Juan. On Sep 5, 2017, at 9:58 PM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Juan,. I think that having the flexibility to apply wall functions on only a subset of the viscous wall boundaries would be useful. E.g., if you are interested in a wing, you can apply integration to the wall there, but apply wall functions on the fuselage. My preference would be to have a dedicated BC type for that, i.e. Tom's second suggestion. Apart from this, we can have the different wall model types as a single input parameter, i.e. you apply the same wall model type for all viscous boundaries. Or would you like to have the flexibility to specify this as well per individual marker?. Edwin. ‚Äî; You are receiving this because you commented.; Reply to this email directl",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327377108:1200,flexible,flexible,1200,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327377108,2,['flexible'],['flexible']
Modifiability," yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PA",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:11622,config,configure,11622,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; config",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10037,config,configure,10037,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,6,['config'],['configure']
Modifiability,"# Failing Regression tests (91 of'em); The Euler Wall BC (comp. & incomp. affected) is used in many Testcases. All failing tests are listed. ; Box checkked -> values adapted to newer ones. ; tiny delta = all delta_vals below 0.1; ; medium delta = one delta val larger than 0.1 but all below 1.0; ; big delta = one delta_val larger than 1.0. I use this post for me to keep track of what I already fixed on what is left to do. ## serial_regression; - [x] channel, tiny delta; - [x] naca0012, tiny delta; - [x] wedge, medium delta; - [x] oneram6, big delta, restart; - [x] fixedcl_naca0012, tiny delta; - [x] polar_naca0012, tiny delta; - [x] bluntbody, medium delta; - [x] inc_euler_naca0012, tiny delta; - [x] inc_nozzle, medium delta; - [x] inc_lam_bend, tiny delta; - [x] contadj_naca0012, big delta, cont.Adj. There is some issue with all the cont.adj. cases in the boundary formulation; - [x] contadj_oneram6, big delta, cont.Adj., great diff to develop; - [x] contadj_wedge, big delta, cont.Adj.; - [x] contadj_fixedcl_naca0012, big delta (no computed vals), cont.Adj.; - [x] harmonic_balance, tiny delta; - [x] sine_gust, tiny delta; - [x] aeroelastic, tiny delta; - [x] edge_VW, tiny delta, NICFD; - [x] edge_PPR, tiny delta, NICFD; - [x] uniform_flow, tiny delta; - [x] channel_2D, tiny delta; - [x] channel_3D, tiny delta; - [x] pipe, tiny delta; - [x] rotating_cylinders, medium delta; - [x] supersonic_vortex_shedding, big delta; - [x] fsi2d, tiny delta; - [x] stat_fsi; - [x] stat_fsi_restart; - [x] dyn_fsi; - [x] airfoil_fsi_rbf, big delta (no computed vals); - [x] contadj_euler_py; - [x] shape_opt_euler_py, big delta; - [x] opt_multiobj_py, medium delta; - [x] opt_multiobjcombo_py, medium delta; - [x] opt_multiobj1surf_py, medium delta; - [x] opt_2surf1obj_py, tiny delta; - [x] pywrapper_naca0012, tiny delta; - [x] pywrapper_aeroelastic, tiny delta; - [x] pywrapper_fsi2d, tiny delta. ## parallel_regression; - [x] channel, tiny delta; - [x] naca0012, tiny delta; - [x] wedge, medi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-524639197:166,adapt,adapted,166,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-524639197,1,['adapt'],['adapted']
Modifiability,"# Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link current files; ; config_cfd = copy.deepcopy(config); for opt in adap_options:; config_cfd.pop(opt, None); config_cfd.LOW_MEMORY_OUTPUT = ""NO""; ; config_cfd.WRT_BINARY_RESTART = ""NO""; #config_cfd.READ_BINARY_RESTART = ""NO""; ; current_mesh = ""Initial_mesh""; current_solution = ""Initial_solution""; ; if config['RESTART_SOL'] == 'NO':; ; stdout_hdl = open('ini.stdout','w') # new targets; stderr_hdl = open('ini.stderr','w'); ; success = False; val_out = [False]; ; sys.stdout.write('Running initial CFD solution.\n'); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:4234,adapt,adaptation,4234,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['adapt'],['adaptation']
Modifiability,"## V&V; Now we have a regression script dedicated to the V&V examples see #1538; I have added a high-lift case to the website ([here](https://github.com/su2code/su2code.github.io/pull/71), and [here](https://su2code.github.io/vandv/30p30n/)).; I think that to avoid the [issue of outdated files](https://github.com/su2code/VandV/pull/3) in V&V repo, the best strategy is to add only meshes and documentation to the V&V repo (without duplicating the website). Then anything needed to run the case should be put under regression (via the TestCases and SU2 repos as usual).; If the meshes are too large for GitHub, and are not publicly available elsewhere, we can use the SU2 Foundation Google drive. The config files can be forced to remain updated by running them in --dry_run mode in the V&V regressions. So I think the next steps would be:; - Revive the configs of the [other V&V cases](https://github.com/su2code/VandV) and put them under regression.; - Add V&V for other areas. So if you have ever done any V&V of an SU2 feature not covered yet please consider **adding the data to the V&V repo, the results to the website, and creating a minimal regression test** for it. If you have never done any V&V, please consider reviving one of the existing ones.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507:702,config,config,702,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507,2,['config'],"['config', 'configs']"
Modifiability,"#### Verification. The NTS method sets the value of the `Roe_Dissipation`, or the central/upwind blending constant. In this context, 1 = upwind scheme, 0 = central scheme. The NTS method was explicitly designed to make `Roe_Dissipation`:. + Go to 1 in attached boundary layers; + Go to 1 in irrotational regions, even if strain is present (i.e., the freestream); + Go to 0 in regions with high vorticity. Below is an example result from the backward facing step problem. The figure compares the current develop branch with the branch from the PR. Something definitely looks wrong with the current develop branch, but the PR looks much better. All three goals seem to be met. ![nts_comparison](https://user-images.githubusercontent.com/13340225/45257129-ccdef500-b366-11e8-88b6-a1d1df38e8fc.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/577#issuecomment-419661485:270,layers,layers,270,https://su2code.github.io,https://github.com/su2code/SU2/pull/577#issuecomment-419661485,1,['layers'],['layers']
Modifiability,"$? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #d",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:12019,config,configure,12019,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"('%dd'%(nvar*ndof),data[start:end])); 	array = array.reshape(ndof,nvar). 	# The last two values are for metadata: one int for ExtIter and 8 su2doubles.; 	# Metadata: 1 int for ExtIter and 8 doubles; 	#ncount = len(data) - nvar*ndof*8 - 4 - 64; 	ExtIter = struct.unpack('i',data[end:end+4])[0]; 	metadata = struct.unpack('8d',data[end+4:end+4+8*8]). 	# Create dictionary; 	data_file = {'names':variables_names,'data':array, 'ExtIter':ExtIter, 'MetaData':metadata}; 	return data_file. def read_restart_ascii(filename):; 	""""""; 	; 	""""""; 	infile = open(filename, 'r'); 	header = infile.readline(); 	variables_names = header.replace(""\"""","" "").replace(""\t"", "" "").strip().split()[1:]; 	infile.close(); 	; 	array = np.loadtxt(filename, skiprows = 1). 	array = array[:,1:]; 	; 	# Create dictionary; 	data_file = {'names':variables_names,'data':array, 'ExtIter':0, 'MetaData':[]}	; 	return data_file. def write_restart_binary(data_file,filename=""solution_flow_bin.dat""):; 	"""""". 	""""""; 	fout = open(filename,'wb'). 	# The first is a magic number that we can use to check for binary files (it is the hex; 	# representation for ""SU2"").; 	fout.write(struct.pack('i', 535532)). 	# The second two values are number of variables and number of points (DoFs).; 	nvar = data_file['data'].shape[1]; 	ndof = data_file['data'].shape[0]; 	fout.write(struct.pack('i', nvar)); 	fout.write(struct.pack('i', ndof)); 	fout.write(struct.pack('i', 1)); 	fout.write(struct.pack('i', 8)). 	# Write the variable names of the file. Note that we are adopting a; # fixed length of 33 for the string length to match with CGNS.; 	for variable_name in data_file['names']:; 		fout.write(struct.pack('33s', variable_name)); 	; 	# Write the entire data in one shoot; 	fout.write(struct.pack('%dd'%(nvar*ndof), *data_file['data'].flatten())). 	# Write ExtIter and Metadata; 	fout.write(struct.pack('i',data_file['ExtIter'])); 	for i in range(8):; 		fout.write(struct.pack('d', data_file['MetaData'][i])); 	fout.close(). 	return None; # ----------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528461173:2694,variab,variables,2694,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528461173,2,['variab'],"['variable', 'variables']"
Modifiability,(121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPU,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18007,plugin,plugins,18007,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,(307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUns,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15077,plugin,plugins,15077,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"(I don't usually build the python wrapper locally); On Ubuntu 18 (GCC 7.5) I can confirm the same problem linking the python wrapper library with default meson options.; However, passing -fPIC in CXXFLAGS and LDFLAGS solves the issue, clang-10 does not have this fPIC problem, and looking around I found other reports of this issue being particular to GCC (https://github.com/xoreaxeaxeax/rosenbridge/issues/1). Maybe in your case the environment variables are not making it to the compiler wrapper? (it looks like you are using a cluster and they can be funny...) Try giving a wrong value to CXXFLAGS (e.g. fPIK), meson should fail when it tests the compiler. So in summary I don't think we should change the defaults of the build system, but I'll ask other devs if they've had the same problem.; I'll change the tittle to make it easier for folks with the same issue to find this.; Please do let us know what solution you find, we may at least add a warning to ours doc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568#issuecomment-1076433714:447,variab,variables,447,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568#issuecomment-1076433714,1,['variab'],['variables']
Modifiability,"(Krylov solvers, sparse approximate factorizations, etc.) is relatively independent from what I have in mind.; Nevertheless being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD.; What I would like is to have a ""CMatrixDense"" class, to give concrete examples:; - For RBF interpolation the guy who worked on it before me implemented his own Cholesky and LU factorizations, matrix-matrix, matrix-vector routines, etc.; - @jayantmukho recently needed some eigenvector decomposition's for the uncertainty quantification feature.; - I imagine in some other places of the code similar routines were needed, for example small matrix inversion when computing gradients by weighted least squares (indeed what I need now is a QR decomposition). And, as an added bonus, I think some other areas of the code could be simplified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:1257,refactor,refactoring,1257,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,2,['refactor'],['refactoring']
Modifiability,) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/Ca,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18658,plugin,plugins,18658,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"**SOLVED** see edit. Hello! I seem to remember that it used to be possible to get angle of attack in the history file? Is this still possible? I would like to be able to just pull the angle of attack out of the history file, along with the aero coeffs.; Context:; I have looked through the custom output document and the reference config file, and (perhaps I am secretly blind), but there does not seem to be a simple output group for it.; Reason I need it: performing analysis for fixed Cl, so angle of attack is useful information. At the moment I am getting probed data:; ```; CUSTOM_OUTPUTS='m_vel_x : Macro{VELOCITY_X};\; m_vel_y : Macro{VELOCITY_Y};\; vel_x1: Probe{$m_vel_x}[-15, -15];\; vel_y1: Probe{$m_vel_y}[-15, -15]'; ```; And just getting the tan(y/x) of the probed values for angle. This works well enough.; The other option I have is stripping the angle of attack out of the forced breakdown file, would prefer to not do, but can. EDIT:. **It can be pulled out of line 2 of flow.meta**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2138#issuecomment-1780159397:331,config,config,331,https://su2code.github.io,https://github.com/su2code/SU2/issues/2138#issuecomment-1780159397,2,['config'],['config']
Modifiability,"*WHY* should this be a bug? You don't provide any problems or erroneous solutions you might have had...; This way you could just as well refer randomly to any other code line. Possibly you are asking for whether that might be an improvement?; (I don't think so. Although it might actually work to some extend, I see no point in breaking up the numerical scheme at certain surface elements... ? What is your argument?)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-313379854:302,extend,extend,302,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-313379854,1,['extend'],['extend']
Modifiability,"++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2072,Config,Configuration,2072,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['Config'],['Configuration']
Modifiability,", this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1410,variab,variable,1410,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['variab'],['variable']
Modifiability,",; const Vector& volume,; const Matrix& phi,; VectorOfMatrix& grad); {; const size_t SIMDLEN = 4;. for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); {; for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad.setVec(iPoint,iVar,iDim,Array<double,SIMDLEN>(0.0));. for(size_t iNeigh=0; iNeigh<adj.nNeighbor_vec(iPoint); ++iNeigh); {; auto jPoint = adj.jPoint_vec(iPoint,iNeigh);; auto iEdge = adj.iEdge_vec(iPoint,iNeigh);; auto dir = adj.dir_vec(iPoint,iNeigh);. for(size_t iVar=0; iVar<nVar; ++iVar); {; auto phi_ave = (phi.getVec(iPoint,iVar)+; phi.getVec(jPoint,iVar))*0.5;. for(size_t iDim=0; iDim<nDim; ++iDim); grad.addVec(iPoint,iVar,iDim,; phi_ave*dir*area.getVec(iEdge,iDim));; }; }. for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad.setVec(iPoint,iVar,iDim,; grad.getVec(iPoint,iVar,iDim)/volume.getVec(iPoint));; }; }; ```; I think this is just as readable especially considering that in SU2 we always need to use some Set/Get/Add/Sub method to update a variable, the difference is that here those methods have overloads to operate on small fixed size vectors. The speedup is **1.35** (i.e. 35% faster than edge-based reference) note that the improvement relative to scalar-point-based is only 1.6, those pesky gathers... The loop advances `SIMDLEN` points on each iteration, yet there are no pragmas and small simd-loops in sight, in good C++ fashion that trickery has been encapsulated in a ""simd-friendly"" class.; Such a class can look something like this:; ```C++; template<class T, size_t N>; class Array; {; #define FOREACH for(size_t k=0; k<N; ++k); public:; enum : size_t {Size = N};; enum : size_t {Align = N*sizeof(T)};; private:; // fixed size and aligned array of internal data, naturally maps to a SIMD register; alignas(Align) T vals_[N];; /*; * Some helper methods go here; */; public:; // **** CONSTRUCTORS **** //; // We want to be able to construct this type from single scalars,; // a memory location from whi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:6289,variab,variable,6289,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['variab'],['variable']
Modifiability,- D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpVersions.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin_Instructions.txt (0) ; ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:19627,plugin,plugins,19627,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"- The meshes are available here: https://github.com/su2code/VandV/tree/master/rans/dsma661; - The config files for the GG + LSQ results are here: [dsma661_configs.zip](https://github.com/su2code/SU2/files/3842634/dsma661_configs.zip). - I did not run the other solvers myself. Those are results from the NASA TMR website. I don't have access to those solvers unfortunately. . - Yeah the non-monotonic variation worried me as well. But all the simulations were converged to a density residual of -13. (all of them have over 6 orders of residual reduction). The residuals for the GG+LSQ results shown here:; ![res_SA](https://user-images.githubusercontent.com/30271435/68789548-8a641880-05fa-11ea-8885-4e024fe84eda.png); I tried a few re-runs of that finest mesh with a couple of different options. I reduced the maximum CFL to ~30 from 1000 and it still gave the same result. I reduced the number of cores I was running on from 80 to 20 and that had no effect either. As soon as I ran without the `NUM_METHOD_GRAD_RECON= LEAST_SQUARES` option, it got a C_L of about 0.159402 which would be more in line with the other solvers. @economon I haven't tried a high fixed CFL. Let me check that behavior and report back.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-553524258:98,config,config,98,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-553524258,1,['config'],['config']
Modifiability,"- having a configuration switch to the class so that each process write its own file should work really well (already seen this stuff in other cfd packages) : it is very fast and not too memory consuming. - To cope with high memory usage, the only other solution is to enable parallel cgns in su2. But the problem may be that it requires hdf5 parallel library. @pcarruscag do you know if it is a licence issue or just technical difficulties (hdf5 use cmake and not meson) that prevent adding hdf5 to the external libraries ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1131#issuecomment-745160184:11,config,configuration,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/1131#issuecomment-745160184,1,['config'],['configuration']
Modifiability,"-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3343: $? = 0; configure:3332: g++ -V >&5; g++: '-V' option must have argument; configure:3343: $? = 1; configure:3332: g++ -qversion >&5; g++: unrecognized option '-qversion'; g++: no input files; configure:3343: $? = 1; configure:3363: checking whether the C++ compiler works; configure:3385: g++ conftest.cpp >&5; configure:3389: $? = 0; configure:3437: result: yes; configure:3440: checking for C++ compiler default output file name; configure:3442: result: a.out; configure:3448: checking for suffix of executables; configure:3455: g++ -o conftest conftest.cpp >&5; configure:3459: $? = 0; configure:3481: result: ; configure:3503: checking whether we are cross compiling; configure:3511: g++ -o conftest conftest.cpp >&5; configure:3515: $? = 0; configure:3522: ./conftest; configure:3526: $? = 0; configure:3541: result: no; configure:3546: checking for suffix of object files; configure:3568: g++ -c conftest.cpp >&5; configure:3572: $? = 0; configure:3593: result: o; configure:3597: checking whether we are using the GNU C++ compiler; configure:3616: g++ -c conftest.cpp >&5; configure:3616: $? = 0; configure:3625: result: yes; configure:3634: checking whether g++ accepts -g; configure:3654: g++ -c -g conftest.cpp >&5; configure:3654: $? = 0; configure:3695: result: yes; configure:3720: checking dependency style of g++; configure:3831: result: gcc3; configure:3921: checking for gcc; configure:3937: found /usr/bin/gcc; configure:3948: result: gcc; configure:3979: checking for C compiler version; configure:3988: gcc --version >&5; gcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MER",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:4626,config,configure,4626,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"-o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <stdio.h>; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:12373,config,configure,12373,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability,".2.8.3; - Updated CGNS in parallel.; - Added the ability to writting 2 files at each checkpoint when using 2nd order dual time stepping; - Merge branch 'develop' into feature_dualoutput; - Updated FieldView; - Preliminary implementation (ASCII); - Minor changes; - Update code; - Updated FieldView format; - Merge branch 'develop' into feature_dualoutput; - Bug fixing; - Updated FieldView ASCII format; - Complete implementation of the FFD_CONTINUITY capability; - Updated FFD intersections; - ver 3.2.9; - adding targetea file to equivalent area adjoint folder. address issue #160; - Merge branch 'develop' of github.com:su2code/SU2 into develop; - Final push to v3.2.9; - after bootstrap; - updates to comments in config_structure to make doxygen pretty; - Bug fixing; - Merge branch 'develop'; - EA in ft^2; - further update to config; - Merge remote-tracking branch 'upstream/develop' into upstream_dev; - Minor changes; - Updated NF BC; - More adjustments; - Small update; - Final update Nearfield BC; - added massflowrate as option for cauchy criteria, more config file comments; - Merge remote-tracking branch 'upstream/develop' into upstream_dev; - paraview output modified/added back in for current version for SU2_DEF; - Merge branch 'develop' into feature_dualoutput; - Removed deprecated options from quicstart config.; - Working version of the compressible actuator disk; - Updated fixed CL mode.; - Very minor change; - Merge branch 'develop' into feature_dualoutput; - Final push to 3.2.9; - Merge branch 'develop'; - Minor change; - Minor change; - Small change; - Minor change; - Bug fixing: unsigned short val_vertex --> unsigned long val_vertex; - CFL adapt now works for adjoint problems; - Merge branch 'develop' into feature_dualoutput; - Fixing a typo; - Fix in the Euler BC for grid movement cases; - merging and fixing conflicts bwtn feature_dealloc and develop; - dealloc; - Time spectral fix.; - Merging some recent bug fixes from master into the develop branch to keep nsy",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:9016,config,config,9016,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,6,['config'],['config']
Modifiability,".7.5, and made sure to reconfigure (had an issue with the gnome-terminal, but solved).; I re-compiled everything, but unfortunately the error persists, so I checked .local/python3.7.5./site-packages/pyamg but no _amgio extension was there.; When I move in external/AMGIO/su2io/ and run :; `python3 setup.py build_ext && python3 setup.py install`; An error occours:; ```; running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; swig -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‚Äò-Wno-non-virtual-dtor‚Äô is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‚ÄòGmfGetLinTab‚Äô:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‚Äò%lld‚Äô expects argument of type ‚Äòlong long int *‚Äô, but argument 3 has type ‚Äòint64_t * {aka long int *}‚Äô [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‚Äòsafe_fscanf‚Äô; if( fscanf(hdl, format, ptr) != 1 ) \; ^~~~~~; ../externals/AMGIO/sources/libmeshb7.c: In function ‚ÄòGmfSetLinTab‚Äô:; ../externals/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619345758:1094,variab,variable,1094,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758,1,['variab'],['variable']
Modifiability,".; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; Te",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7792,config,config,7792,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config']
Modifiability,.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15949,plugin,plugins,15949,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,".c:28:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:87",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:15167,config,configure,15167,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpV,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15638,plugin,plugins,15638,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1520,config,configuration,1520,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809,6,['config'],['configuration']
Modifiability,".stderr = sav_stderr; ; else:; required_options=['SOLUTION_FLOW_FILENAME']; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : RESTART_SOL is set to YES, but the solution is missing:\n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; current_mesh = config['MESH_FILENAME']; current_solution = config['SOLUTION_FLOW_FILENAME']; ; sys.stdout.write('Initial CFD solution is provided.\n'); ; #--- Check existence of initial mesh, solution; ; required_files = [current_mesh,current_solution]; ; if not all (os.path.exists(fil) for fil in required_files):; err = '\n\n## ERROR : Can\'t find:\n'; for fil in required_files:; if not os.path.exists(fil):; err += fil + '\n'; raise RuntimeError , err; ; #--- Start looping; ; # Get mesh dimension; dim = su2amg.get_su2_dim(current_mesh); if ( dim != 2 and dim != 3 ):; raise RuntimeError , ""Wrong dimension number\n""; ; #--- AMG parameters; ; config_amg = dict(); ; config_amg['hgrad'] = float(config['ADAP_HGRAD']); config_amg['hmax'] = float(config['ADAP_HMAX']); config_amg['hmin'] = float(config['ADAP_HMIN']); config_amg['mesh_in'] = 'current.meshb'; config_amg['mesh_out'] = 'current.new.meshb'; config_amg['metric_in'] = ''; config_amg['sol_in'] = 'current_sensor.solb'; config_amg['itp_sol_in'] = 'current.solb'; config_amg['adap_source'] = ''; ; if 'ADAP_BACK' in config:; config_amg['adap_back'] = os.path.join(cwd,config['ADAP_BACK']); #os.symlink(os.path.join(cwd, config.ADAP_BACK), config.ADAP_BACK); else:; config_amg['adap_back'] = config['MESH_FILENAME']; ; print ""config_amg : "" + config_amg['adap_back']; back_name, back_extension = os.path.splitext(config_amg['adap_back']); ; if not os.path.exists(config_amg['adap_back']):; raise RuntimeError , ""\n\n##ERROR : Can't find back mesh: %s.\n\n"" % config_amg['adap_back']; ; if back_extension == "".su2"":; ; #pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); print ""skipping back mesh ...""; #import _",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:6629,config,config,6629,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,3,['config'],['config']
Modifiability,"/21182966/28308831-b937bf76-6ba7-11e7-9108-e8a2ab959b74.png). Then I noticed a difference in SENS_GEO (which is the second term of the upper equation, right?) between compressible and incompressible. . ![image](https://user-images.githubusercontent.com/21182966/28310143-bb28c42a-6bab-11e7-8c14-8409b6b12027.png). So if the scale is adjusting current step size the step of dC and SENS_GEO represents the second term, then the SENS_GEO would change when the scale is changed. But this is not the case for incompressible and compressible. . In short, the only noticeable change, due to scaling, occurs in deformation folder of DSN_002. But this is after the optimization step, which is really confusing. Scaling adjusts the current step size and because it can not find a sufficient decrease it is halving the dv_value. But then one should expect different values in the adjoint folder for different scale factors, right?. I hope you can use this information and can tell me whether it is a correct behavior of the optimizer. I should also note that I did not make use of constraints, just as in the test case. I read that the optimizer will switch from optimization procedure. I think this should not matter because of the test case. . I attached also the configure files (compressible (working, scale= 0.01) and incompressible (not working, scale =0.01)) and the mesh file, which is in both cases the same file. [compressible_cfg.txt](https://github.com/su2code/SU2/files/1155421/compressible_cfg.txt); [incompressible_cfg.txt](https://github.com/su2code/SU2/files/1155427/incompressible_cfg.txt); [mesh_300_su2.txt](https://github.com/su2code/SU2/files/1155430/mesh_300_su2.txt). I hope I provide enough information so that one can clarify the behavior of the optimizer. I also appreciate if one can tell me which variables have to be kept in mind. I really want to learn from this and if more information is needed, I really do not mind to provide it. Many thanks in advance!. Floris van der Schuur",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-316018103:3795,config,configure,3795,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-316018103,4,"['config', 'variab']","['configure', 'variables']"
Modifiability,/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D Me,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15740,plugin,plugins,15740,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:16211,plugin,plugins,16211,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:16937,plugin,plugins,16937,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,/pull/814/files#diff-4> (25); * A SU2_GEO/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-5> (9); * A SU2_MSH/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-6> (8); * A SU2_PY/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-8> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26>,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:5701,Config,ConfigureMKL,5701,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['Config'],['ConfigureMKL']
Modifiability,"0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 245, in run; app.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 159, in generate; self._generate(env); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 215, in _generate; intr.backend.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 321, in generate; self.generate_target(t); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 641, in generate_target; elem = self.generate_link(target, outname, obj_list, linker, pch_objects, stdlib_args=stdlib_args); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2571, in generate_link; dep_targets.extend(self.guess_external_link_dependencies(linker, target, commands, internal)); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2453, in guess_external_link_dependencies; staticlibs = self.guess_library_absolute_path(linker, libname,; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2395, in guess_library_absolute_path; trial = CCompiler._get_file_from_list(self.environment, trial); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\compilers\mixins\clike.py"", line 922, in _get_file_from_list; if f.is_file():; File ""C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\pathlib.py"", line 1439, in is_file; return S_ISREG(self.stat().st_mode); File ""C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\pathlib.py"", line 1221, in stat; return self._accessor.stat(self); OSError: [WinError 123] Die Syntax f√ºr den Dateinamen, Verzeichnisnamen oder die Datentr√§gerbezeichnung ist fal",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:14152,extend,extend,14152,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['extend'],['extend']
Modifiability,"03: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNIST",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:12071,config,configure,12071,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,8,['config'],['configure']
Modifiability,"055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <stdio.h>; | #ifdef HAVE_SYS_TYPES_H; | # include <sys/types.h>; | #endif; | #ifdef HAVE_SYS_STAT_H; | # include <sys/stat.h>; | #end",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:12488,config,configure,12488,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"1) after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type **set MSMPI_LIB64=\\%MSMPI_LIB64%** in cmd or **$env:MSMPI_LIB64=""\\""+$env:MSMPI_LIB64** in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;; 2)after Configuration, you should find the file named ""build.ninja"" in folder called ""build"", then open it as a text editor, you can look for string ""**-l\\\\**"" through the entire file, you wiil find several of strings like ""-l\\\\D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi"", it's the path of msmpi installation, it may be a little different in your pc, then you should replace all strings with ""D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi.lib"", it's path of **msmpi.lib**, please use your own path;; 3) Last ,type **ninja -C build install** to compileÔºåthis time it will be all right.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-997986082:58,Variab,Variable,58,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-997986082,2,"['Config', 'Variab']","['Configuration', 'Variable']"
Modifiability,"1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5814,config,config-lite-,5814,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config-lite-']
Modifiability,"181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conftest.c -o conftest2.o >&5; configure:4380: $? = 0; configure:4386: gcc -c conftest.c -o conftest2.o >&5; configure:4390: $? = 0; configure:4401: cc -c conftest.c >&5; configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4619: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4644: result: gcc -E; configure:4664: gcc -E conftest.c; configure:4664: $? = 0; configure:4678: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4678: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end con",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:8152,config,configure,8152,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:15241,config,configure,15241,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output fo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:1426,variab,variables,1426,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474,2,['variab'],['variables']
Modifiability,"20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should mention, I cloned the `develop` branch and used [this commit](https://github.com/su2code/SU2/commit/ad6311322b9952f92584d3e141237e7156cdc07c):; `git checkout ad6311322b9952f92584d3e141237e7156cdc07c`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1988,Config,Configuration,1988,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,3,"['Config', 'config', 'variab']","['Configuration', 'configuration', 'variables']"
Modifiability,"2357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ¬∑¬∑¬∑; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN INCONSISTANT TOPOLOGY . Thank you for using feflo.a . ```; Which in turn creates an invalid `amg.su2` mesh in the `adap/ite0 folder`, which triggers the fault.; I'm a bit puzzled as the domain is very simple, and the `log.out` is going well (with no complains of SU2 about any negative volume or trias with wrong normals). The mesh is only made of TRIAS and TETRAS, it should work in principle.; Am I missing something in the setup / mesh? I know you have little control on the `amg.out`, but maybe there some special hint that I'm missing. . Btw the final error in the terminal is but I think the problem arises before reaching `flo.csv` file:; ```; Traceback (most recent call last):; File ""/usr/local/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/usr/local/bin/SU2/run/amg.py"", line 464, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.csv' -> 'flo_ini.csv'. ```; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-623572280:2939,config,config,2939,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280,2,['config'],['config']
Modifiability,"3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6. Can you give me some tips for troubleshooting this?; Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2774,variab,variables,2774,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,2,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unrecognized option '-qversion'; gcc: no input files; configure:3999: $? = 1; configure:4003: checking whether we are using the GNU C compiler; configure:4022: gcc -c conftest.c >&5; configure:4022: $? = 0; configure:4031: result: yes; configure:4040: checking whether gcc accepts -g; configure:4060: gcc -c -g conftest.c >&5; configure:4060: $? = 0; configure:4101: result: yes; configure:4118: checking for gcc option to accept ISO C89; configure:4181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conftest.c -o conftest2.o >&5; configure:4380: $? = 0; configure:4386: gcc -c conftest.c -o conftest2.o >&5; configure:4390: $? = 0; configure:4401: cc -c conftest.c >&5; configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4619: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexiste",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:7555,config,configure,7555,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,4/files#diff-6> (8); * A SU2_PY/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-8> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26> (28); * A cmake/check_thread_storage.c<https://github.com/su2code/SU2/pull/814/files#diff-27> (5); * A cmake/functions.cmake<https://github.com/su2code/SU2/pull/814/files#diff-28> ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:5881,Config,ConfigureMetis,5881,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['Config'],['ConfigureMetis']
Modifiability,422) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:14521,plugin,plugins,14521,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,5) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpVersions.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:19545,plugin,plugins,19545,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,54: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; config,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10730,config,configure,10730,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,6,['config'],['configure']
Modifiability,"6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 245, in run; app.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 159, in generate; self._generate(env); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 215, in _generate; intr.backend.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 321, in generate; self.generate_target(t); File """,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12817,config,configuration,12817,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['configuration']
Modifiability,"6_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/x86_64-w64-mingw32/8.1.0/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Progra",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12349,Config,Configuration,12349,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Config'],['Configuration']
Modifiability,75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CA,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18819,plugin,plugins,18819,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 245, in run; app.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 159, in generate; self._generate(env); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 215, in _generate; intr.backend.generate(); File ""D:\Programme\SU2-7.1.1\ex",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12709,variab,variables,12709,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['variab'],['variables']
Modifiability,"988: gcc -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unrecognized option '-qversion'; gcc: no input files; configure:3999: $? = 1; configure:4003: checking whether we are using the GNU C compiler; configure:4022: gcc -c conftest.c >&5; configure:4022: $? = 0; configure:4031: result: yes; configure:4040: checking whether gcc accepts -g; configure:4060: gcc -c -g conftest.c >&5; configure:4060: $? = 0; configure:4101: result: yes; configure:4118: checking for gcc option to accept ISO C89; configure:4181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conftest.c -o conftest2.o >&5; configure:4380: $? = 0; configure:4386: gcc -c conftest.c -o conftest2.o >&5; configure:4390: $? = 0; configure:4401: cc -c conftest.c >&5; configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:6569,config,configure,6569,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,14,['config'],['configure']
Modifiability,"9\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\Kle",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6335,config,config,6335,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config']
Modifiability,: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10868,config,configure,10868,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,8,['config'],['configure']
Modifiability,": yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.D.Palacios@boeing.com|; | Dr. Thomas D. Economon, economon@stanford.edu |; -------------------------------------------------------------------------; | SU2 Developers: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial Col",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16532,config,config,16532,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,"; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link current files; ; config_cfd = copy.deepcopy(config); for opt in adap_options:; config_cfd.pop(opt, None); config_cfd.LOW_MEMORY_OUTPUT = ""NO""; ; config_cfd.WRT_BINARY_RESTART = ""NO""; #config_cfd.READ_BINARY_RESTART = ""NO""; ; current_mesh = ""Initial_mesh""; current_solution = ""Initial_solution""; ; if config['RESTART_SOL'] == 'NO':; ; stdout_hdl = open('ini.stdout','w') # new targets; stderr_hdl = open('ini.stderr','w'); ; success = False; val_out = [False]; ; sys.stdout.write('Running initial CFD solution.\n'); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_mesh = config['MESH_FILENAME']; current_solution = ""ini_restart_flow.dat""; ; config_cfd.CONV_FILENAME = ""ini_history""; config_cfd.RESTART_FLOW_FILENAME = current_s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:4488,config,config,4488,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,; * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26> (28); * A cmake/check_thread_storage.c<https://github.com/su2code/SU2/pull/814/files#diff-27> (5); * A cmake/functions.cmake<https://github.com/su2code/SU2/pull/814/files#diff-28> (416); * A externals/cgns/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-29> (26); * A externals/metis/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-30> (108); * A externals/parmetis/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#d,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:6165,Config,ConfigureTecio,6165,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['Config'],['ConfigureTecio']
Modifiability,; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/Upgra,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15002,plugin,plugins,15002,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpVersions.h (0) ; - D MeshTools/PointwiseSU2plugin/src/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:19475,plugin,plugins,19475,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"; Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2413,variab,variables,2413,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['variab'],['variables']
Modifiability,"; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\inclu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6528,config,config,6528,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config']
Modifiability,"; configure:2934: found /bin/gawk; configure:2945: result: gawk; configure:2956: checking whether make sets $(MAKE); configure:2978: result: yes; configure:3075: checking whether make supports nested variables; configure:3092: result: yes; configure:3117: checking for style of include used by make; configure:3145: result: GNU; configure:3196: result: >>> MPI support disabled by default <<<; configure:3269: checking for g++; configure:3285: found /usr/bin/g++; configure:3296: result: g++; configure:3323: checking for C++ compiler version; configure:3332: g++ --version >&5; g++ (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3343: $? = 0; configure:3332: g++ -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3343: $? = 0; configure:3332: g++ -V >&5; g++: '-V' option must have argument; configure:3343: $? = 1; configure:3332: g++ -qversion >&5; g++: unrecognized option '-qversion'; g++: no input files; configure:3343: $? = 1; configure:3363: checking whether the C++ compiler works; configure:3",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:3136,config,configure,3136,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability,"; configure:3546: checking for suffix of object files; configure:3568: g++ -c conftest.cpp >&5; configure:3572: $? = 0; configure:3593: result: o; configure:3597: checking whether we are using the GNU C++ compiler; configure:3616: g++ -c conftest.cpp >&5; configure:3616: $? = 0; configure:3625: result: yes; configure:3634: checking whether g++ accepts -g; configure:3654: g++ -c -g conftest.cpp >&5; configure:3654: $? = 0; configure:3695: result: yes; configure:3720: checking dependency style of g++; configure:3831: result: gcc3; configure:3921: checking for gcc; configure:3937: found /usr/bin/gcc; configure:3948: result: gcc; configure:3979: checking for C compiler version; configure:3988: gcc --version >&5; gcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3999: $? = 0; configure:3988: gcc -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unreco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:5692,config,configure,5692,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long in,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10546,config,configure,10546,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability,; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409:,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:11268,config,configure,11268,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,8,['config'],['configure']
Modifiability,"; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Generating adapted mesh using AMG\n' % pad_cpt); ; mesh_new = su2amg.amg_call_python(mesh, config_amg); ; #--- print mesh size; ; sys.stdout.write(' %s AMG done: %s\n' % (pad_nul, su2amg.return_mesh_size(mesh_new))); ; mesh_new['markers'] = mesh['markers']; mesh_new['dimension'] = mesh['dimension']; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter; ; su2amg.write_mesh(current_mesh, current_solution, mesh_new); ; #--- Run su2; ; log = 'ite%d.SU2'%global_iter; stdout_hdl = open('%sstdout'%log,'w') # new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_solutio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:10214,adapt,adaptation,10214,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['adapt'],['adaptation']
Modifiability,"<nVar; ++iVar); {; FltVec phiL = 0.0;; FltVec phiR = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); {; phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; phiR -= grad.getVec(jPoint,iVar,iDim)*d_ij[iDim];; }. phiL = phi.getVec(iPoint,iVar) + limiter.getVec(iPoint,iVar)*phiL;; phiR = phi.getVec(jPoint,iVar) + limiter.getVec(jPoint,iVar)*phiR;. FltVec flux = (phiL+phiR)*0.5;. for(size_t k=0; k<SIMDLEN; ++k) {; residual(iPoint[k],iVar) += flux[k];; residual(jPoint[k],iVar) -= flux[k];; }; }; ```; Note that at the end of the loop we need to de-swizzle the flux to update the multiple indexes references by iPoint and jPoint, which are now short arrays of integers (this operation can be moved to the container, akin to `getVec` but I show it here for clarity). **With SoA (aka column major storage) this code is 1.5 times slower than the scalar version.**. The reason for that is poor locality (of the spacial variety), as we loop through the number of variables and dimensions we are accessing the data in strides of nPoint, as the contiguous index is the first one so that we can perform vector read/writes when computing gradients and limiters.; With the scalar version the data for each point is contiguous which means on the first access we get whatever extra data is on the same cache line for free and subsequent accesses will be hardware prefetched since the stride is small (1 in this case). We lose all this with SoA storage. If we go back to arrays of structures (AoS, aka row major storage, basically what we have in #753) performance is only 9% worse (the code is identical). Those 9% are mostly due to increased integer arithmetic in the accesses to the data, on each call to `getVec` we resolve 4/8 row/column pairs into 1D indexes, while this calculation is vectorized, it seems to be less optimizable by compilers, for example this; ```c++; for(size_t iDim=0; iDim<nDim; ++iDim); phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; ```; gets compiled into this monstrosity; ```asm; .L13",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:8395,variab,variables,8395,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['variab'],['variables']
Modifiability,"= 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #de",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:12218,config,configure,12218,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"= 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: ch",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:9759,config,configure,9759,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,6,['config'],['configure']
Modifiability,> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26> (28); * A cmake/check_thread_storage.c<https://github.com/su2code/SU2/pull/814/files#diff-27> (5); * A cmake/functions.cmake<https://github.com/su2code/SU2/pull/814/files#diff-28> (416); * A externals/cgns/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-29> (26); * A externals/metis/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-30,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:6070,Config,ConfigureParmetis,6070,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['Config'],['ConfigureParmetis']
Modifiability,"> * From the history output it seems that the maximum CFL value is not being reached, even for small CFL values the update seems to stop one step before max. There was a small factor applied to keep it above and below the CFL min and max (1.001, 0.999), respectively. But I have removed that, since it is not necessary. Btw, I have added the ability to print the min/max time step, and min/max/avg CFL to the screen by adding MIN_DELTA_TIME, MAX_DELTA_TIME, MIN_CFL, MAX_CFL, AVG_CFL to the SCREEN_OUTPUT. > * I still see some residual oscillations with high CFL values (100-1000), I think the issue is that despite the oscillations the linear solver still converges fine, and so the reduction never kicks in. There are reduction checks for both the linear and nonlinear residuals, but they likely still need some tuning (the factors were just empirical from my tests). I am also finding in my tests that if I am having trouble with a particular RANS case, sometimes it is most effective to turn off the adaption and go for a fixed CFL of 250, 500, or even 1000, if stable (don't forget you may need NUM_METHOD_GRAD_RECON= LEAST_SQUARES for that to be stable).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-541376224:1004,adapt,adaption,1004,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-541376224,1,['adapt'],['adaption']
Modifiability,"> 1.How does this relate to my new PR #921? Should I close that one, since the shape optimization is going to be overhauled anyways?. @clarkpede this is going to take a while to implement (on the order of months). In the mean time, it would still be good to fix the issue you bring up in #921, if it is an easy fix. If you think the fix is going to be on the same order of time, then might not be worth investing the effort if it is going to get overhauled anyway. . As for the post-processed objective functions, I am planning on fully incorporating #913 into this work so that any variables that can be defined using the expression language, can be used as an objective function. According to that PR, the post-processing has been auto-differentiated as well, so getting gradients should be automatic as well. . @talbring I agree with all of your points. I especially want to extract the FFD functionality and expose CGeometry and CConfig functions to python. I haven't used swig before so I need to do some homework. And yes, this PR is called Shape Optimization overhaul but I am hoping the changes made here are general enough that they can be used in a plethora of other situations. If I end up being myopic in any of the refactoring, please point it out :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/923#issuecomment-607953901:583,variab,variables,583,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607953901,2,"['refactor', 'variab']","['refactoring', 'variables']"
Modifiability,"> ; > ; > @CatarinaGarbacz thanks for pushing your changes! I have left some comments and questions.; > ; > A bigger question I have is if there is a more general way to deal with SU2_INTERP, making it usable for all of develop. Just answering @WallyMaier comment, this should be possible by changing the file **fem_interpolation_structure.cpp** and change the function call:. output = COutputFactory::CreateOutput(**NEMO_NAVIER_STOKES**, input_config_container[ZONE_0],nDim);. So we have to replace **NEMO_NAVIER_STOKES** to something like **config[val_iZone]->GetKind_Solver()**.; ; I have not tested this change, but I tested changing it for NAVIER_STOKES, and it was able to interpolate the baseline SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1160#issuecomment-760110555:543,config,config,543,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160#issuecomment-760110555,2,['config'],['config']
Modifiability,"> ; > ; > @TobiKattmann - I was just reading your slides on [multizone](https://su2foundation.org/wp-content/uploads/2020/06/Kattmann.pdf), when I noticed that you mention python scripts not working for multizone, and I guess that would include the mesh adaptation scripts... is this still the case? Thank you!. Hi @timjim333, I have to admit I am not fully (i.e. not üòâ) aware of the mesh adaption capabilities of/with SU2. And there is quite a bit to read in this issue which i won't really have time to until the weekend but here's already my quicktake:; If you can run the intended feature (with multizone) manually (i.e. a c++ binary) and it works, then probably the python script 'just' sets up some folders and does clever choices for parameters that are put into new .cfg files which are run afterwards. So just orchestrating. There it is likely that it is not fixed with multizone by now but that is usually not too difficult to fix ... it is tedious though. . If you think that I understand what you want to do specifically with the posts in this thread then I will read through that and answer again, otherwise I would not mind a specification üëç",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-765021250:254,adapt,adaptation,254,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-765021250,2,['adapt'],"['adaptation', 'adaption']"
Modifiability,"> ; > ; > Dear Daumantas,; > ; > I appreciate your effort in adding support for cmake in SU2. We have recently introduced the Meson build system (https://mesonbuild.com/) (#685, #745) as a candidate to replace automake. A guide on how to use can be found [here](https://su2code.github.io/docs_v7/Build-SU2-From-Source/). The idea is that we will have this system along automake at least for the upcoming version 7 and that we get rid of automake afterwards. Considering that, I don't think that it makes sense to maintain 3 different build systems **at the moment**. I really hate turning contributions down, but this one is three months too late. However, we might reconsider adding support for another build system once we got rid of automake, or, if we feel that meson does not fit our needs.; > ; > I am all ears to hear other opinions. However, let's not start a discussion on the advantages/disadvantages of the build systems. Some benefits can be found in the Issue/PR linked above. Ok, I tried meson with MinGW but couldn't figure out how to link with MSMPI since it's not a part of MinGW. However, using CMake and with a few source code fixes, I managed to compile nearly every configuration with MSVC. Surprisingly, there were very few errors in SU2. The externals only had a few preprocessor issues. At the moment only MeDiPack fails to compile with MSVC but not with MinGW even though the MPI headers are the same so I suspect it's an issue with MSVC itself, I'm using the latest preview version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-553571450:1187,config,configuration,1187,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-553571450,2,['config'],['configuration']
Modifiability,"> ; > ; > I'll adapt one of the existing Testcases to use this feature. Well that was a lie. I thought it would be a good idea to adapt the 2D cht streamwise periodic case but I forgot that the used mesh is used for a streamwise periodic primal, FD and DA case as well as HeatTransfer BC Testcase (and that is a bit of work tbh). And for the periodic BC I had to change the mesh (adding new markers). As we do not have a single standalone (always run in a CHT setup) heat-equation Testcase, I went ahead and cut out the solid zone only and made that a Testcase. I already merged the gmsh geo and .su2 over at su2code/Testcases/pull/76 . If this is not liked I can of course do sth different. Note that the new Testcase takes ~2s to complete its 750 iterations until convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843:15,adapt,adapt,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843,2,['adapt'],['adapt']
Modifiability,"> ; > ; > This is how the scale factor is computed `su2double Scale = config->GetDV_Value(0)*config->GetOpt_RelaxFactor();`; > OPT_RELAX_FACTOR is 1000 in your config, and so it cancels the scale you want to apply. Please try this again and reopen the issue if the problem persists. Thanks a lot, your help has been much appreciated",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1023#issuecomment-645596675:70,config,config,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/1023#issuecomment-645596675,3,['config'],['config']
Modifiability,"> > > Hi @sun5k, could you please add also the configuration files to reproduce these results? I would try to run these simulations too with my implementation of the transition model.; > > > Thank you in advance!; > > ; > > ; > > Hi @rois1995 Of course! However, I'm still under testing, so I can't guarantee the result if the numerical scheme or the other options are changed. Which configuration file would you want?; > > By any chance, are you implementing or developing a transition model? Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer.; > ; > If you could send me the config files for the T3A, T3A- and NLF test cases it would be awesome!; > ; > I have implemented the same model as yours, the LM model, in parallel to you 'cause I needed it for some simulations. I also tried implementing the same version but related to the SA turbulence model, however it still is bothering me that I cannot seem to get good results on it.; > ; > If you want, I also tried the prolate spheroid test-case with good results. If you need I can give the configs and the meshes. The only thing about this test-case is that it is more related to the cross-flow transition, thus it needs to be implemented, which I think I'll do in these days.; > ; > I think that the k-w-gamma model is the way to go right after the implementation of the LM model since it has lots of equations in common. Do you think that you need another class for it or you will write on the same classes that you have already built (like the CTransLMSolver)?. The test case(T3A, T3A-, and NLF-0416) configuration files were uploaded to my git repository. Here is the [link](https://github.com/sun5k/SU2/tree/develop/TestCases/transition ). Suggestions for the prolate spheroid test-case is appreciated. However, my t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830:47,config,configuration,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830,3,['config'],"['config', 'configuration']"
Modifiability,"> > Have you been able to converge the adjoint now that MPI problems are fixed, and verify the derivatives you obtain?; > ; > For convergence, yes. For verifying the derivatives, I'm looking for a way to do it now. It seems that I can use the following python scripts to get derivatives. - `discrete_adjoint.py`; - `finite_differences.py`; - `direct_differentiation.py` (not exactly sure what this is doing though). `discrete_adjoint.py` and `direct_differentiation.py` matched pretty well. `finite_differences.py` output values differ sometimes by 20% or so. Is such difference expected?. I will update the config file and the mesh file so that this verification can be done with the same files.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-894761404:608,config,config,608,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894761404,1,['config'],['config']
Modifiability,"> > Hi @sun5k, could you please add also the configuration files to reproduce these results? I would try to run these simulations too with my implementation of the transition model.; > > Thank you in advance!; > ; > Hi @rois1995 Of course! However, I'm still under testing, so I can't guarantee the result if the numerical scheme or the other options are changed. Which configuration file would you want?; > ; > By any chance, are you implementing or developing a transition model? Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer. If you could send me the config files for the T3A, T3A- and NLF test cases it would be awesome!. I have implemented the same model as yours, the LM model, in parallel to you 'cause I needed it for some simulations. I also tried implementing the same version but related to the SA turbulence model, however it still is bothering me that I cannot seem to get good results on it. . If you want, I also tried the prolate spheroid test-case with good results. If you need I can give the configs and the meshes. The only thing about this test-case is that it is more related to the cross-flow transition, thus it needs to be implemented, which I think I'll do in these days. I think that the k-w-gamma model is the way to go right after the implementation of the LM model since it has lots of equations in common. Do you think that you need another class for it or you will write on the same classes that you have already built (like the CTransLMSolver)?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1198926920:45,config,configuration,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1198926920,4,['config'],"['config', 'configs', 'configuration']"
Modifiability,"> > I have a question: for each point in the mesh I am trying to compute the dot product between the velocity vector and the normal to the wall of the nearest point on the wall. How do I access such information? I've found that in the CPoint class I have the ClosestWall_Elem variable which stores the index of the closest element on a wall. However, when I try to assess the information with a number of cores greater than 2, it crashes. Moreover, to recover the normal of the element I perform a mean of the normals on the nodes of that element. Is there a structure that has the normals saved for each element of the primal grid? The part that I am referring to is from line 208 in CTransLMSolver.cpp .; > ; > There is the geometry toolbox for dot product and normal: https://github.com/su2code/SU2/blob/master/Common/include/toolboxes/geometry_toolbox.hpp just look in the code for examples, in vscode you can search for GeometryToolbox::DotProduct or GeometryToolbox::Norm. The problem is more related to the finding of the wall-normal for a point within the volume mesh, not to the computations that it will be involved in.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1429614350:276,variab,variable,276,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1429614350,1,['variab'],['variable']
Modifiability,"> > I'm thinking about reusing the SST test case ([axisymmetric_rans/air_nozzle](https://github.com/su2code/SU2/tree/master/TestCases/axisymmetric_rans/air_nozzle)) so that the same mesh can be used. Would that be fine ?; > ; > That's a quite specific testcase. How did you test the implementation? Do you have some simple results for the turbulent axisymmetric jet? We know that the results for round jets are not super good for standard SA, but at least we know what the result should look like, here on p.32 - 35 they test SA for the round jet and compare to the Wygnanski & Fiedler measurements: https://www.researchgate.net/publication/24296213_Turbulence_Modeling_Validation_Testing_and_Development; > ; > The domain is just a rectangle so pretty simple to set up.; > ; > You could also use the V&V test that we have, but it is a variable density jet: https://su2code.github.io/vandv/SANDIA_jet/. I did some tests on a supersonic jet, since I already had the files, but it's a quite complex case so it's not that good to verify the implementation. I will look into the simpler cases you mentioned !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-1891046092:836,variab,variable,836,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-1891046092,2,['variab'],['variable']
Modifiability,"> > Thanks for your contribution! Be sure to run remove the unnecessary files and run clang_format to clean up new files.; > > I wonder with the new additions of the NEMO, Species and now CoolProp fluids, there would be a smart way to consolidate; > ; > Hi, I removed the unnecessary files. Also, could you please tell me how to run clang_format on new files? Google told me that > meson would run clang_format on all c++ files automatically. Thank you. in the root folder there is a clang-format configuration file: /SU2/.clang-format ; From the root folder, you can call `clang-format -i filename`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1272392451:497,config,configuration,497,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1272392451,1,['config'],['configuration']
Modifiability,"> @PENGYAN777 great thanks for the fixes. What more do you need to do on this PR? From the SU2 side we just need you to add a regression test. You will need to change /.github/workflows/regression.yaml to enable compilation with CoolProp for one of the config sets (BaseMPI) and then add a test to parallel_regression.py; > ; > **NOTE** If you need to add a new mesh file, do not commit the mesh in the code repo, instead open a PR to the TestCases repo with the mesh. I think there are **two more things** I can do, to improve this new feature. 1. Now this new feature can only work for inviscid flow since the viscosity and conductivity are still obtained from Sutherland model or other default models. My next step is to let SU2 get viscosity and conductivity from CoolProp then this new feature can also apply for viscous flow. 2. For subcritical flow, it is possible for flow to enter two-phase region while CoolProp need distribution of phases to compute speed of sound. Since SU2 does not have two-phase flow solver, I plan to let SU2 choose Peng-Robinson model for subcritical flow and CoolProp for supercritical mode. Do you have any suggestion?. Once I finish these two functions and get approved from you, then I will add the regression test as you advised. Thank you for your help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1287649621:253,config,config,253,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1287649621,1,['config'],['config']
Modifiability,"> @aeroamit What does temperature do? Could you compute the heat flux from the temperature in e.g. paraview? Is the root cause the computation of the energy equation or the computation of heat flux?. Hi @bigfooted, Temperature boundary condition for wall corresponds to Isothermal wall BC (cold wall condition). This condition is applied to obtain heat flux unlike adiabatic wall (no heat transfer). ; The snapshot, I posted from ParaView shows heat flux variation with x. This is obtained directly from surface_flow.vtu. You can simply go to Filters -> Data Analysis -> Plot data and select Points_X for X Array and heat flux in variable. Regarding computing heat flux from temperature field, I am not sure, but ParaView is having calculator utility as well as option to compute gradient of unstructured grid (from there you can obtain temperature gradients in 3 directions). ; Coming to last question, root cause of the problem - @WallyMaier has run the case yesterday, we will be posting some details soon.; Best ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1106#issuecomment-741947377:630,variab,variable,630,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-741947377,2,['variab'],['variable']
Modifiability,"> @antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; > ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png); > ; > Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim. When I was referring to separated zones I mean in the mesh, so I'm not referring to SU2 multizone. This is an example I took online (it is apparently a structured hexa mesh, so not the best example for mesh adaptation, hexa not supported), but I hope it explains the different zones at mesher level.; By defining different zones for top and bottom of the wing (and wing tip), the edges, leading and trailing as well as the one on the tip will be maintained after mesh adaptation.; In your case I would also suggest to split the body in body top and body bottom so to prevent (or reduce) artifacts in the trailing cone. ![image](https://user-images.githubusercontent.com/41752169/105387785-2e414f00-5c16-11eb-9284-1d18c9a5981f.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764812340:61,adapt,adapted,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764812340,3,['adapt'],"['adaptation', 'adapted']"
Modifiability,"> @joshkellyjak @pcarruscag Should I make some first commits for a ""tag type / debug"" recording to this branch? (This problem is the main motivation but technically it's quite unrelated.); > ; > We need it here, but it might be better to merge it from a dedicated branch. Personally I would like this to selfishly enhance my understanding, but I don't think it should be merged when we complete the PR. Could be useful documentation for the website.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2317#issuecomment-2291240593:314,enhance,enhance,314,https://su2code.github.io,https://github.com/su2code/SU2/pull/2317#issuecomment-2291240593,1,['enhance'],['enhance']
Modifiability,"> @patelha57, I want to express my gratitude for your contribution. Your efforts are truly appreciated. However, I wanted to share some of my observations regarding the implementation, with all due respect.; > ; > In my humble opinion (IMHO), there seem to be a few flaws in the current implementation, particularly when it comes to setting the Mach number and Reynolds number. It appears that SU2 offers different fluid models, and in order to access the speed of sound for the far field, the following line of code may be more appropriate:; > ; > ```c++; > Mach2Vel_FreeStream = auxFluidModel->GetSoundSpeed();; > ```; > ; > rather than using:; > ; > ```c++; > su2double SoundSpeed = sqrt(Gamma * Gas_Constant * Temperature);; > ```; > ; > Perhaps these concerns can be addressed in the review of your PR. Similarly, I noticed that changing the Reynolds number doesn't seem to have any effect. It should modify certain variables, which are likely addressed in this section of the code: [link to the relevant code](https://github.com/su2code/SU2/blob/c435309e2a4ffd992b89c5b3bb252cb4af9fa990/SU2_CFD/src/solvers/CEulerSolver.cpp#L909-L928). Additionally, it would be helpful to include a check to warn the user if the initialization is based on thermodynamic quantities.; > ; > Once again, I want to express my deep appreciation for your contributions. Hey @kursatyurt, thanks for the input! I absolutely agree about the speed of sound change that you suggested, so I will address it in my PR. I will also double check about the Reynolds number update. Haven't used that function before so not sure what the issue is. . It would be great to get additional input on that PR so please review if you get the chance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2045#issuecomment-1581591610:921,variab,variables,921,https://su2code.github.io,https://github.com/su2code/SU2/pull/2045#issuecomment-1581591610,1,['variab'],['variables']
Modifiability,"> @talbring : since you are already working on the output here and if you agree, can you please add the sensitivities as a required output for adjoint runs even if the volume fields are customized (like we do for coords/conservatives for the primal)? I have gotten several reports that this is tripping up some folks, e.g., see #964 . In fact I already deactivated it in this branch. It makes no sense to allow customizable output for the adjoint anyway and it was giving troubles when you want to use the same config for primal and adjoint.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913#issuecomment-626229423:511,config,config,511,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-626229423,1,['config'],['config']
Modifiability,"> Apart from the two comments below, I would add that it would be nice to put virtual (`override` or `final`) and `const` specifiers where appropriate, at some point, not necessarily now. I am in the process of doing this. There are a large number of `virtual` functions in the solvers. . I wanted to verify how I am thinking about using `final`, `override`, and `const`:. 1) Any virtual class that is overridden by a child class should have the `override` specifier; 2) If the function is not overriden further in another child class, should have the `final` specifier. ; 3) Any functions that don't change any variables should be declared `const` (mostly getter functions); 4) Any function arguments that are passed by reference and should not be changed during the execution of the function, should be declared `const`. Is there any case I am missing? Is there a reason why I don't see any functions with the `override final` specification?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/849#issuecomment-575799066:612,variab,variables,612,https://su2code.github.io,https://github.com/su2code/SU2/pull/849#issuecomment-575799066,1,['variab'],['variables']
Modifiability,"> Can you describe a bit more the stopping strategy you want? The new output structure is much more flexible than before, and you can even use Cauchy criteria based on time averages (of pretty much any coefficient), with different windowing methods and so on. Does Cauchy criteria based on time averages only work for time-independent flows? Because it seems that WINDOW_START_ITER needs to be set in the section of TIME-DEPENDENT SIMULATION in the input .cfg file. Thank you.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1304#issuecomment-863322166:100,flexible,flexible,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-863322166,1,['flexible'],['flexible']
Modifiability,"> Can you describe how the functions and modes you are adding are used? Maybe a python example would help. It seems a lot of this exists in the disc adj multizone driver, for example the derivative of the objective function is stored by that driver. Yes, I will definitely add a Python example and supporting documentation. . Essentially we modified the recording, seeding, and extracting of the AD tape in `CDiscAdjResidualSolver` to provide partial derivatives of objective, residuals, and forces with respect to conservative variables, coordinates, displacements, and farfield variables. We need the partials to form and solve the adjoint system, which is handled by external MDO framework",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750#issuecomment-1779475947:528,variab,variables,528,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750#issuecomment-1779475947,2,['variab'],['variables']
Modifiability,"> Check if you need to update the config template or any doc on the website. It would also be good to modify an existing test case to exercise this feature. Thank you so much for your comment. Yes, I will update the website with this additional feature. I will modify one of the existing test cases in this pull request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1953#issuecomment-1463418485:34,config,config,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/1953#issuecomment-1463418485,1,['config'],['config']
Modifiability,"> Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; > ; > * I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:171,inherit,inheriting,171,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665,3,"['config', 'inherit']","['config', 'inheriting']"
Modifiability,"> Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; > ; > ```; > solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; > if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; > solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; > }; > ```; > ; > Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps. @bmunguia is correct.. I was experimenting with adapting the CFLs independently for the two systems to further improve convergence, but did not have time to find a stable solution. So, I left the framework as-is to accommodate this at some point.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/918#issuecomment-603980676:206,adapt,adaptive,206,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603980676,5,"['Adapt', 'adapt', 'config']","['AdaptCFLNumber', 'adapting', 'adaptive', 'config']"
Modifiability,"> Do that in a different order please, add the regression now, we merge the PR, and then you continue the work. We want short PRs. Hi, I meet a problem when I change /.github/workflows/regression.yaml to enable compilation with CoolProp for one of the config sets (BaseMPI). To compile CoolProp, I import cmake submodule of meson. However, when github workflow builds BaseMPI, the error message is **'can not find cmake.'** . I think this is because github does not have cmake. . Do you have any advice? Thank you. (the other subproject Mutationpp also import cmake submodule, do you know how that new feature is built on github?)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1289289170:252,config,config,252,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1289289170,1,['config'],['config']
Modifiability,> Don't modify the configs to add default options. Just the template is enough. In that case I think we're done?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2362#issuecomment-2437194156:19,config,configs,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/2362#issuecomment-2437194156,1,['config'],['configs']
Modifiability,"> Ettore, Thanks for submitting this. I thought you gave an excellent presentation at the SU2 Conference and the much better actuator disk model you and your colleagues have put together will surely be useful to many people. Thanks for participating and being a member of the SU2 Community. Please stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed‚Ä¶.maybe next year?). Best wishes, Juan; > [‚Ä¶](#); > On Jun 18, 2020, at 1:27 AM, SaettaE ***@***.***> wrote: Proposed Changes Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors: Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II. EttoreSaetta, lorenzorusso07, rtogna. Related Work Introduction of new options in the config. file. Introduction of an additional input file that contains the propeller data. Introduction of additional c++ functions. Addition of code lines to existing functions preserving the original actuator disk model. PR Checklist [X ] I am submitting my contribution to the develop branch. My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). [ X] My contribution is commented and consistent with SU2 style. I have added a test case that demonstrates my contribution, if necessary. I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. You can view, comment on, or merge this pull request online at: #1027 <#1027> Commit Summary Update config_template.cfg File Changes M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5) Patch Links: https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch> https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff> ‚Äî You are receiving this because you are subscribed to this t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027#issuecomment-646601487:568,variab,variable,568,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646601487,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"> Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.; > - Has a very simple syntax; > - Is header-only; > - Requires C++11 compilation; > - Not as feature rich as Google Test or Boost Test; >; > Questions; >; > - How do developers feel about adding unit tests to SU2?; > - If a unit-testing framework were added to SU2, would you actually; > use it?; > - Do developers hav",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:5642,flexible,flexible,5642,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['flexible'],['flexible']
Modifiability,"> Hi @sun5k, could you please add also the configuration files to reproduce these results? I would try to run these simulations too with my implementation of the transition model.; > ; > Thank you in advance!. Hi @rois1995 Of course! ; However, I'm still under testing, so I can't guarantee the result if the numerical scheme or the other options are changed.; Which configuration file would you want?. By any chance, are you implementing or developing a transition model? ; Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1198403061:43,config,configuration,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1198403061,2,['config'],['configuration']
Modifiability,"> Hi Ale, can you add the mesh (from the workshop I presume) to the Testcases repo with a restart file and then use that to run a coupled iterations for regression testing? We may need to wait for the turbo outputs PR. Hi Pedro, I'm adding them now. ; Yes, configs and mesh are from the tutorial, although I slightly amended the config to make it work with develop (just one config input commented), so that we don't need to wait for that PR. In fact, I added the folder to develop. For the regresstion testing (sorry for the silly question, I'm a bit of a novice), is it enough to run the single test case or should I do the proper regression test with provided python script?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-1792594463:257,config,configs,257,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-1792594463,3,['config'],"['config', 'configs']"
Modifiability,"> Hi and thank you for this PR, I think it will be really useful. I noticed that you removed several functions in the python wrapper, and also renamed others. This will break the compatibility with the fsi module. May I ask you why you had to remove it? We can maybe find a solution that keeps the possibility to use the fsi module as well. Hi Nicola! Are you asking about methods relating to number of vertices, global indices, coordinates, deformable marker tags, etc.? If so, we have not removed those and they are still available through the Python wrapper. These functions were relocated to [CDriverBase](https://github.com/su2code/SU2/blob/feature_pysu2_DEF/Common/include/drivers/CDriverBase.hpp) so they can be inherited by all other drivers. These changes should not break compatibility with the FSI module (aside from some function renaming).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1351900925:719,inherit,inherited,719,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1351900925,1,['inherit'],['inherited']
Modifiability,"> Hi,; > I made the Cygwin build installation instruction example. I just checked my SU2_CFD.exe and it is 625MB as well. Nevertheless, I have no clue why this is the case and how to solve that.; > ; > For reference I attach my config.log file.; > ; > [config.log](https://github.com/su2code/SU2/files/3483335/config.log). According to the configure file(line 2726), try 'make install-strip' after 'make'. ; The exe will be smaller than before after adding the strip option.; The following link may help. Just have a look at faq 6.3.; https://www.cygwin.com/faq.html; Good luck.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/754#issuecomment-519762878:228,config,config,228,https://su2code.github.io,https://github.com/su2code/SU2/issues/754#issuecomment-519762878,4,['config'],"['config', 'configure']"
Modifiability,"> Hi,; > I made the Cygwin build installation instruction example. I just checked my SU2_CFD.exe and it is 625MB as well. Nevertheless, I have no clue why this is the case and how to solve that.; > ; > For reference I attach my config.log file.; > ; > [config.log](https://github.com/su2code/SU2/files/3483335/config.log). The fllowing link may help us; https://stackoverflow.com/questions/1042773/gcc-c-hello-world-program-exe-is-500kb-big-when-compiled-on-windows-how",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/754#issuecomment-519737756:228,config,config,228,https://su2code.github.io,https://github.com/su2code/SU2/issues/754#issuecomment-519737756,3,['config'],['config']
Modifiability,"> I am not so familiar with turbomachinery but it looks like all spanwisesection initialization is done in CPhysicalGeometry.cpp. I think it initializes in the function ComputeNSpan. This function is called in CDriver like this:; > ; > ```; > geometry[iZone][INST_0][MESH_0]->ComputeNSpan(config[iZone], iZone, INFLOW, true);; > geometry[iZone][INST_0][MESH_0]->ComputeNSpan(config[iZone], iZone, OUTFLOW, true);; > ```; > ; > So you should get an initialized value for inflow and outflow. Maybe you can check what is going on there and see if this function does what is expected. Hi Nijso! Thanks for your suggestion. ; Indeed, CPhysicalGeometry.cpp is where the initialization is done. I'll also report this to the SU2 Turbo Group, to check whether we can find a solution. Currently I just hardcoded a section of that script as follows:. ```; .; .; if(marker_flag == OUTFLOW){; 	nSpanWiseSections[INFLOW - 1] = 57;; 	nSpanWiseSections[OUTFLOW - 1] = 57; ; if(nSpanWiseSections[INFLOW -1] != nSpanWiseSections[OUTFLOW - 1]){; char buf[100];; SPRINTF(buf, ""nSpan inflow %u, nSpan outflow %u"", nSpanWiseSections[INFLOW], nSpanWiseSections[OUTFLOW]);; SU2_MPI::Error(string("" At the moment only turbomachinery with the same amount of span-wise section can be simulated\n"") + buf, CURRENT_FUNCTION);; }; else{; config->SetnSpanWiseSections(nSpanWiseSections[OUTFLOW -1]);; }; }. }. }; void CPhysicalGeometry::SetTurboVertex(CConfig *config, unsigned short val_iZone, unsigned short marker_flag, bool allocate) {; .; .; .; ```. This modification was firstly suggested by @MKursatUzuner but I'm pasting it in here to have another source in case the topic opened in CFD Online gets deleted.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2203#issuecomment-1900339640:289,config,config,289,https://su2code.github.io,https://github.com/su2code/SU2/issues/2203#issuecomment-1900339640,4,['config'],['config']
Modifiability,"> I don't understand the question very well. The order of the points needs to be according to the VTK hexahedron http://www.princeton.edu/~efeibush/viscourse/vtk.pdf I can't visualize where you are getting that deformation, but when using an FFD box that does not include the entire design surface you need to be careful with the continuity of the deformation to prevent creating discontinuous steps. Mmmh I see. It looks like the blade elements are extending beyond the blade surface itself and, therefore, are cut by the FFD box even if the whole geometry appears to be included withing the FFD box domain. I solved the issue by defining an user-defined fixing plane (very cool option, btw). I experienced a similar situation with an internal flow over cylinder, too.; My question was whether this behavior was mesh-dependent or FFD box-dependent. I guess it is reasonable to say that mesh elements extension beyond the body which we're optimizing is causing this, however FFD continuity allows to keep this dummy shape deformation from happening. . Secondly, I had MAX DIFF = 0 because I couldn't understand your correction properly. I had to consider the righ-hand rule third component (_thumb_) pointing inside the FFD box for each of the surfaces we establish when attaching the FFD box (_each of those defined by the points listed in FFD_DEFINITION_). Then it worked perfectly.; Still, I don't understand why for some geometries we apply what discussed in the [tutorial](https://su2code.github.io/tutorials/Species_Transport/) and here it is the opposite. At least I know what to expect and how to fix it. If you could add an alert message in the next SU2 version, that would be much appreciated. > Well, it's the F-FFD week it seems :) https://www.cfd-online.com/Forums/su2/249879-when-use-su2_def-generate-ffd-box-i-can-not-get-ffd_surface_points.html. It's sunday: is the week ending or starting? ahah I guess we both stopped counting ;); As always, thank you very much for the time you're s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025#issuecomment-1546805169:450,extend,extending,450,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025#issuecomment-1546805169,1,['extend'],['extending']
Modifiability,"> I have a question: for each point in the mesh I am trying to compute the dot product between the velocity vector and the normal to the wall of the nearest point on the wall. How do I access such information? I've found that in the CPoint class I have the ClosestWall_Elem variable which stores the index of the closest element on a wall. However, when I try to assess the information with a number of cores greater than 2, it crashes. Moreover, to recover the normal of the element I perform a mean of the normals on the nodes of that element. Is there a structure that has the normals saved for each element of the primal grid? The part that I am referring to is from line 208 in CTransLMSolver.cpp . There is the geometry toolbox for dot product and normal:; https://github.com/su2code/SU2/blob/master/Common/include/toolboxes/geometry_toolbox.hpp; just look in the code for examples, in vscode you can search for GeometryToolbox::DotProduct or GeometryToolbox::Norm",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1426019269:274,variab,variable,274,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1426019269,1,['variab'],['variable']
Modifiability,"> I think generalizing the inlet option to read more values would be good. I worked on trying to create a new inlet and it got complicated pretty quickly. The main issue I run into is in COptionInlet in SetValues. To add mass fractions, we need to know the number of species which can vary, so this would need access to config. Just adding an ""INLET_GAS_COMPOSITION"" field lets us use the same supersonic inlet bc (no additional repeated code) but with just one extra get function to pull from config. It feels a little hacky... but seems to save a lot of additional repeated code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1374304203:320,config,config,320,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1374304203,2,['config'],['config']
Modifiability,"> I think the person that most recently looked into those Jacobians was @bmunguia; > All I know is that an 100% accurate Jacobian is not necessary for correctness (only the flux matters) but it may make convergence better (sometimes it also makes it worse). > I also worked on refactoring (and checking) the stress tensors. So if there's any questions, feel free to ping me. Thank you for your reply, in fact there still exists some question.; Because in the code for calculating viscous Jacobians, I did not find any partial derivative of primitive variables.; In the stress tensor, partial derivatives such as ‚àÇu/‚àÇx_i, ‚àÇœÅ/‚àÇx_i (GradPrimVar[iVar][iDim]) are part of the expression of tau[iDim][jDim], which affects the value of Proj_Flux_Tensor[iVar].; In the approximate process of the Jacobian matrix, it seems that the originally expected terms such as ‚àÇ(u/œÅ)/‚àÇx are replaced by values like val_Mean_PrimVar[jDim+1]/(Density*val_dist_ij), and then used as part of Jacobian_i and Jacobian_j's expression.; I thought there should be some differential terms, but I didn't find it.; So my question is to know more details about the approximation in calculating viscous Jacobians.; I mention this problem because I want to add some equations (such as concentration equations, moment distribution equations) based on SU2's NS solver, develop an implicit solver, and solve adjoint problems. So augmented Jacobian matrices are needed. I have gone through the SU2 code of TNE2Solver in version 4.0.1. But the solver seems to be imperfect, and have some differences from NSSolver in dealing with the viscous Jacobian matrix. Moreover, the TNE2Solver can be applied to only a few cases. It seems that its code requires further modification.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1028#issuecomment-648845465:277,refactor,refactoring,277,https://su2code.github.io,https://github.com/su2code/SU2/issues/1028#issuecomment-648845465,2,"['refactor', 'variab']","['refactoring', 'variables']"
Modifiability,"> I want to be done with this PR folks... This is really tiring to maintain so if you don't want it please just tell me...; > Can we agree on:; > Instead of CSolver having the `node` field it will have a pure virtual function `CVariable* GetNodes()`, derived solvers need to implement this method and have a `nodes` field of the most appropriate type (e.g. CEulerVariable for CEulerSolver).; > ; > I know some of you do not like the name `nodes` but there is something to be said about consistency (that has always been the name) and I do not think changing a generic name for another generic name justifies breaking the formatting everywhere and having needlessly long calls to get some data. In the interest of keeping the PRs moving, I am ok with this. It will also be natural for folks in the short term to learn the new system, since everyone is already accustomed to using the solver->node* construct. We can always go for a targeted refactoring later separate from the changes in this PR if we would like.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/753#issuecomment-538218606:940,refactor,refactoring,940,https://su2code.github.io,https://github.com/su2code/SU2/pull/753#issuecomment-538218606,2,['refactor'],['refactoring']
Modifiability,"> I'm fine with the consistency with the user input. Is the dry run mode working ok for these variables?. Yes. Both for direct and adjoint the RMS, BGS, and MAX of the controlling variables show up in dry run mode as they're listed in the configuration file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057#issuecomment-1645128810:94,variab,variables,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057#issuecomment-1645128810,3,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"> I'm thinking about reusing the SST test case ([axisymmetric_rans/air_nozzle](https://github.com/su2code/SU2/tree/master/TestCases/axisymmetric_rans/air_nozzle)) so that the same mesh can be used. Would that be fine ?. That's a quite specific testcase. How did you test the implementation? Do you have some simple results for the turbulent axisymmetric jet? We know that the results for round jets are not super good for standard SA, but at least we know what the result should look like, here on p.32 - 35 they test SA for the round jet and compare to the Wygnanski & Fiedler measurements:; https://www.researchgate.net/publication/24296213_Turbulence_Modeling_Validation_Testing_and_Development. The domain is just a rectangle so pretty simple to set up. You could also use the V&V test that we have, but it is a variable density jet:; https://su2code.github.io/vandv/SANDIA_jet/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-1889612505:816,variab,variable,816,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-1889612505,2,['variab'],['variable']
Modifiability,"> If you are referring to surface heat flux it is one of the default surface outputs.; > Maybe there is a bug in v6.2 but in current develop it seems to work fine, you can try using this config: [v7.cfg.zip](https://github.com/su2code/SU2/files/3762621/v7.cfg.zip); > Some options changed name since v6.2, you can read about it here: https://su2code.github.io/docs/Guide-to-v7/; > I replaced the relevant time domain options but commented out all the output options.; > ; > On another note I think you should revise your settings, you had a time step of 0 on an unsteady simulation for example. If you have setup questions have a look at the user forum https://www.cfd-online.com/Forums/su2/ and start a topic if there is no related one already.; > ; > If you have issues with heatflux output with the develop version / v7 we can re-open this issue. I tried but heatflux equals to 0.000. What is wrong?. > If you are referring to surface heat flux it is one of the default surface outputs.; > Maybe there is a bug in v6.2 but in current develop it seems to work fine, you can try using this config: [v7.cfg.zip](https://github.com/su2code/SU2/files/3762621/v7.cfg.zip); > Some options changed name since v6.2, you can read about it here: https://su2code.github.io/docs/Guide-to-v7/; > I replaced the relevant time domain options but commented out all the output options.; > ; > On another note I think you should revise your settings, you had a time step of 0 on an unsteady simulation for example. If you have setup questions have a look at the user forum https://www.cfd-online.com/Forums/su2/ and start a topic if there is no related one already.; > ; > If you have issues with heatflux output with the develop version / v7 we can re-open this issue. I tried but heatflux equals to 0.000. What is wrong?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805#issuecomment-545908540:187,config,config,187,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-545908540,2,['config'],['config']
Modifiability,"> If you are referring to surface heat flux it is one of the default surface outputs.; > Maybe there is a bug in v6.2 but in current develop it seems to work fine, you can try using this config: [v7.cfg.zip](https://github.com/su2code/SU2/files/3762621/v7.cfg.zip); > Some options changed name since v6.2, you can read about it here: https://su2code.github.io/docs/Guide-to-v7/; > I replaced the relevant time domain options but commented out all the output options.; > ; > On another note I think you should revise your settings, you had a time step of 0 on an unsteady simulation for example. If you have setup questions have a look at the user forum https://www.cfd-online.com/Forums/su2/ and start a topic if there is no related one already.; > ; > If you have issues with heatflux output with the develop version / v7 we can re-open this issue. I wonder that if I use TIME_STEPPING without dual time, is timestep a must?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805#issuecomment-546276782:187,config,config,187,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-546276782,1,['config'],['config']
Modifiability,"> In Xcode, go to the menu item Product -> Scheme -> Edit Scheme... Once the dialogue pops up, there are tabs for ""Arguments"" where you can add the config file name to the command line call, and also ""Options"" where you can set a custom working directory where the config/mesh are located. Thank you very much @economon ; Your method works exactly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/994#issuecomment-631892301:148,config,config,148,https://su2code.github.io,https://github.com/su2code/SU2/issues/994#issuecomment-631892301,2,['config'],['config']
Modifiability,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:330,adapt,adapting,330,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301,4,['adapt'],"['adaptation', 'adapting']"
Modifiability,"> In the early days, we thought completely removing CVariable and CNumerics would be very intrusive to change and would hurt flexibility... Over the years, I don't think that folks have really modified the CNumerics classes all that often (once you have implemented the Roe method, it is more or less done). As someone who has worked with the CNumerics classes a lot, I can say that we really don't gain much by keeping them as separate classes. On the surface, it seems like a good use of the [strategy pattern](https://sourcemaking.com/design_patterns/strategy). But from a pragmatic approach, it's not as flexible as OO purists would like you to believe. First off, if you need a new variable in the CNumerics class, you need to change both the solver class and the numerics class, since the solver class calls Setters to set the numerics variables. If you don't call the right Setters, you get a silent failure (unless you're using valgrind). The passing of variables between solver and numerics also leads to a lot of code duplication. And for many solvers (e.g. the viscous NS numerics or the source terms in the SST model) you only end up with one numerics class anyways. I also imagine there's a strong performance hit from all the Setters and copying of variables. But I haven't taken the time to check for myself. In my opinion, you could keep 80% of the current flexibility by using different functions instead of different classes. But I also think we would have to work carefully, or else we'll make the code harder to maintain.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-514020687:608,flexible,flexible,608,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-514020687,5,"['flexible', 'variab']","['flexible', 'variable', 'variables']"
Modifiability,"> Is it possible for the fluid side to work index-based and the structural side as before?; > We are combining the cross terms manually and re-recording each step anyway... (Please rather say internal-based, or variable-based - both approaches are index-based, they differ in the way they are stored :-)). In principle, yes. One can have both at the same time. I'd have to think about it, sounds a bit messy to me right now to get it all consistent. One could also change `GetMultizone_Problem()` to `GetMultizone_Problem() && !GetFSI_Problem()` or similar at those places. Anyway, we know the reason for this problem, so I'll leave it up to you which way we go. > but it depends also a lot on what timing we are moving in. Yes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542224837:211,variab,variable-based,211,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542224837,1,['variab'],['variable-based']
Modifiability,"> Just in case it is helpful, the Abseil library from Google is a nice way to use some C++14 and later features with only a C++11 requirement. We could consider integrating if it makes life much easier...; > ; > https://abseil.io. Thanks for pointing me to this library :) There was a project that was in dire need for such libraries. Well I'm still a newbie discovering the code. From what I can see, the whole code base is C-oriented (maybe even originating from Fortran??). But I would advise against integrating it (Maybe it's a bit of an overkill for the current state of SU2) because most devs won't actually use the features from c++17 (myself included) and we should be able to deal with the lack of make_unique and variable templates in c++11 :smile:. With that said, if you're planning on using more c++ features while rebuilding/extending the code base, it might be a very good idea to integrate it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-670977781:724,variab,variable,724,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-670977781,2,"['extend', 'variab']","['extending', 'variable']"
Modifiability,"> Just put the default definition of the function in a dynamically linked library and when you want to use a different definition of this function, just point your library path to your custom library in e.g. your testcases directory. Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; - I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; - BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; - Now, switching between my custom BC types and the standard ones only requires to edit the config file. As I understand,; - Dynamically loading a library specified in the config file at runtime is easy. ""dlopen"" is there, and possibly more sophisticated libraries?; - The issue is that there is no way to ""select"" the new BC because it was not known at compile-time.; - Most of the code is built around the assumption of ""knowing things"" at compile time. So a series of if statements checking the setting in the config file was the way to go. If the setting in the config says EULER; The Euler BC gets picked up. But what if it says Custom_EULER?. I got distracted by some other stuff. But here is the thing:; - All BCs should inherit from a Base Class (Assuming BCs are classes to begin with); - The selection mechanism will rely on the custom BC class registering itself to a Factory automatically.; - Through the magic of templates and macro expansion, it's possible to easily add the custom BC to the map of known BCs (Yet to be implemented). If this interests you and if you think there is a decent chance of incorporating this design into the code, please let me know. I will give this a higher priority :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421:397,inherit,inheriting,397,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421,7,"['config', 'inherit']","['config', 'inherit', 'inheriting']"
Modifiability,"> Looks good, can you document how it would be used?. Sure. Added an option so that you can compile the AD build using the tag type (`-Dcodi-tape=Tag`) for now. You will have to check out the current develop branch of CoDiPack.; I'm thinking about writing a ""`SetRecording_Debug`"" next. Together with config file options and so on... documentation will follow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2343#issuecomment-2309023723:301,config,config,301,https://su2code.github.io,https://github.com/su2code/SU2/pull/2343#issuecomment-2309023723,1,['config'],['config']
Modifiability,"> Looks quite simple to me now, what do you think?. I fully agree. The CVariable footprint is much smaller and no more nasty address handling. (Adding another variable in another solver requires a bit more code though and a little understanding of what is going on than the ""Address""-version, but on the other hand this explicit handling of each primal-solver creates a good separation :+1: )",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1050172065:159,variab,variable,159,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1050172065,2,['variab'],['variable']
Modifiability,"> Method described below.; > No config options needed.; > Takes about a minute to interpolate an 8M node mesh to a 70M mesh on 1000 cores.; > May or may not add OpenMP to this which would improve scalability.; > Restarts are read twice for RANS problems, which is not great for this type of feature... This is a great addition, I am now doing this outside of SU2 with some python code, but having this native in SU2 is really great! I haven't looked at the details yet, but I guess the assumption is that the geometry stay the same, we only have a finer mesh? Also, the 'restarts are read twice for RANS' is that a general issue when having additional solvers (like heat, scalar, nemo)?; Last thing (for now): Does it work when using an inlet.dat boundary file?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1277#issuecomment-830808518:32,config,config,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/1277#issuecomment-830808518,1,['config'],['config']
Modifiability,"> Nice work @jayantmukho, I hope that script helped with moving the inlines. Yes! It did. I was able to build off the script you gave me to enable moving multi-line inlines. Now it only fails when the function signatures don't match up (because of different variable names). I've attached it here:; [split_inlines.txt](https://github.com/su2code/SU2/files/4054552/split_inlines.txt); [merge_inlines.txt](https://github.com/su2code/SU2/files/4054551/merge_inlines.txt). > General question, did you update the `#include ""solver_structure.hpp""` automatically or manually (fixing the compilation errors one by one)? I ask because this kind of file restructuring gives us a good opportunity to make sure we are including files only where needed, which helps with build times. I replaced the solver_structure.hpp files with just CSolver.hpp first. Then quashed errors by specific solver includes when needed. But its a good point. I will go through it again to remove any unnecessary includes that might have crept in. . > Apart from the two comments below, I would add that it would be nice to put virtual (`override` or `final`) and `const` specifiers where appropriate, at some point, not necessarily now. Ah yes, this is a good time to do this. Will do.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/849#issuecomment-573749755:258,variab,variable,258,https://su2code.github.io,https://github.com/su2code/SU2/pull/849#issuecomment-573749755,1,['variab'],['variable']
Modifiability,"> Nice work already! If you click on 'Details' at the right of the failed Regression and Unit Testing cases you will see why they fail. I think one of the first things to do is go through these error messages ('variable may be used uninitialized', etc) and fix them so the regression tests will run. Thank you! I am in the middle of doing it. Hopefully, there are not that many issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810#issuecomment-1308632788:211,variab,variable,211,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810#issuecomment-1308632788,1,['variab'],['variable']
Modifiability,"> Nice! By the way, did you use some scripts for going through all the files and returning 'bad' naming conventions?. No, now I am just going through it by hand probably some linters are available to at least detect them. Actually, I am a bit confused as it is not so clear in the guide. It looks like the beginning of the project was just abbreviated from the Google style guide and was not enforced. Enforcing function names in UpperCamelCase and leaving variable names to the developer seems reasonable. > Can you explain the snake/camel terminology? :). Let's say we have a variable we want to name as `number of nodes per mesh` there are 2 common choices as . ```cpp; number_of_nodes_per_mesh = 42;; numberOfNodesPerMesh = 42;; ```; The first case is called the [snake case](https://en.wikipedia.org/wiki/Snake_case) and the second one is the [camel case ](https://en.wikipedia.org/wiki/Camel_case). Snake case is generally used in Python as [PEP8](https://peps.python.org/pep-0008/) suggests. . > Please revert the python accessor changes. I merged develop many of them vanished, should I revert the remaining ones?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1981#issuecomment-1482062542:457,variab,variable,457,https://su2code.github.io,https://github.com/su2code/SU2/pull/1981#issuecomment-1482062542,4,['variab'],['variable']
Modifiability,"> No, currently there is no way of doing that. The ""inlet option"" takes a fixed number of arguments. Ok, thanks @pcarruscag. So either I need to create a new supersonic inlet for NEMO, or an additional config option that allows the user to specify the mass fractions and T_ve. Which of these two approaches would be better?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1374042897:202,config,config,202,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1374042897,1,['config'],['config']
Modifiability,"> OK, I see that some refactoring happened e.g. to the python wrapper in the meantime. What's the best way to resolve the conflicts? --> If I hit the Resolve conflicts button, there is nothing I can do. Sorry, mistakenly I removed your functions from conflicted files github somewhat allow me to solve the conflict but not added any new commit or revert it. Feel free to add them as an additional commit or revert my commit. . Normally if you have a merge conflict easiest way is to solve the conflict from your IDE. Pull the latest develop and merge to your branch, while merging you need to resolve the merge conflict. This was an easy case you only have a few conflict, git write conflicts ass. ```; >>> code from your branch; void xyz(); /* your implementation */; === develop; void xyz(); /* their implementation */; <<< ; ````; your need to replace that part with whichever code you want to keep or delete both of them etc. Then mark from the top right corner as resolved. I am sorry, I am a bit tired and did not identify your part of the code from the previous implementation since it is in the middle. I removed all of them and GitHub automatically push it. The required code pieces are these if I am not wrong. I am really sorry about the mistake. from `SU2_CFD/src/python_wrapper_structure.cpp`; ```cpp; ////////////////////////////////////////////////////////////////////////////////; /* Functions related to dynamic mesh */; ////////////////////////////////////////////////////////////////////////////////. void CDriver::SetTranslationRate(passivedouble xDot, passivedouble yDot, passivedouble zDot) {; if (rank == MASTER_NODE) {; cout << endl << "" Setting new translational velocity in x, y, z direction."";; }; for (iZone = 0; iZone < nZone; iZone++) {; config_container[iZone]->SetTranslation_Rate(0, xDot);; config_container[iZone]->SetTranslation_Rate(1, yDot);; config_container[iZone]->SetTranslation_Rate(2, zDot);; }; }. void CDriver::SetRotationRate(passivedouble rot_x, passived",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1536008994:22,refactor,refactoring,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1536008994,1,['refactor'],['refactoring']
Modifiability,"> Personally I would like this to selfishly enhance my understanding, but I don't think it should be merged when we complete the PR. Could be useful documentation for the website. Well I think the functionality should be merged at some point. It might become too much for this PR(?). Let me just go ahead and create a dedicated branch for the tag tape. We could just use that branch as a helper then and prepare it for develop after this one is merged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2317#issuecomment-2292306791:44,enhance,enhance,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/2317#issuecomment-2292306791,1,['enhance'],['enhance']
Modifiability,> Please describe what you tried. With this configure file and the same files above.; [BB_ISOTHERMAL_8.03_183500_AUSMPLUSUP_0.05.zip](https://github.com/su2code/SU2/files/3771219/BB_ISOTHERMAL_8.03_183500_AUSMPLUSUP_0.05.zip),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805#issuecomment-546264432:44,config,configure,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-546264432,1,['config'],['configure']
Modifiability,"> Please modify the existing CoolProp test case to use the models, or add a new one. I add a new config file to include the CoolProp viscosity and conductivity model. I use the same mesh, so no new mesh is required.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1819#issuecomment-1326751620:97,config,config,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/1819#issuecomment-1326751620,1,['config'],['config']
Modifiability,> Please run `preconfigure.py --help` and see if it addresses what you need. You mean the script in the `legacy` folder ? . It does not provide any flag to tell the configure script to use existing external dependencies.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645514795:165,config,configure,165,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645514795,1,['config'],['configure']
Modifiability,> Question: What happens in moving mesh cases if the surface starts out flat and then gets deformed?. @pcarruscag I now explicitly stated that: `config->GetKind_GridMovement() != RIGID_MOTION` ->then recompute normals.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-518311244:145,config,config,145,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-518311244,1,['config'],['config']
Modifiability,"> SU2 is a fantastic library, but the build process is really painful to get static linking within another C++ program. CMake is a standard for building C++ projects and would be extremely helpful. Ideally Python wouldn't be necessary to build SU2 or link it with another project. I'm not sure I understand this... the fact that the build system uses python means that it is really painful to configure the build system to emit a static library? (This should absolutely not be the case! Meson has a core option `-Ddefault_library={static|shared|both}` to select what kind of library you want to build, for any library whose build description claims it can support either one. It's a bit like cmake's `-DBUILD_SHARED_LIBS` except much more powerful.). However, as far as I can tell, su2 doesn't mark any of its libraries as public at all (i.e., installable) so maybe that's a moot point. As far as making python be necessary to build the project, I think this mainly boils down to ""I myself use cmake, I have cmake installed, I don't want to install another program when I could use the program I already have"". Is it really that big of a deal, though? The software *does* use it, and it's not that difficult to install TBH (Linux operating systems in particular almost certainly have it installed already).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1711#issuecomment-1312985406:393,config,configure,393,https://su2code.github.io,https://github.com/su2code/SU2/issues/1711#issuecomment-1312985406,1,['config'],['configure']
Modifiability,"> Since you accuse me of randomly reporting issues (...). No, absolutely not. But it makes the impression if you point to a line of code and then giving no information or ideas.; Since no one of the core developers seemed to have a reply (and that might be the reason), I gave it a try ;). > Shouldn't numerical flux (at farfield) be evaluated based on boundary variables calculated from the Riemann Invariants?. It is.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-313628509:362,variab,variables,362,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-313628509,1,['variab'],['variables']
Modifiability,"> So I am closing this for now. It will be announced when this model becomes available. Hello, vdweide. Thank you for your attention and this contribution. Did you ever try some testcases? I am a beginner SU2 user. Can you maybe give us a configure file about S-K transition flat plate using LM model? Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/502#issuecomment-446515213:239,config,configure,239,https://su2code.github.io,https://github.com/su2code/SU2/issues/502#issuecomment-446515213,1,['config'],['configure']
Modifiability,"> Thank you for updating the solution file @snow54 , there's quite a big difference in the adjoint residuals, do the final derivatives still make sense? Is the flow field noticeably different (for the better, e.g. smoother? or equivalent to not having the boundary at all?) now that nearfield is treated as an internal boundary?; > If so let's update the residuals and merge. I think we can update the residuals. Gradients between adjoint and finite difference match quite well as shown below. I haven't finished calculating for all design variables, but I think it is enough. ![Comparison_gradient](https://user-images.githubusercontent.com/18245846/129564585-d7812108-d315-4606-83d9-e39a8c9403b3.png). In terms of flow field, the capture below is from the current develop branch. The boundary between structured grid and unstructured gird is a nearfield boundary. An object is above this capture and pressure wave propagates from there. Since this grid is inclined by Mach angle, pressure distribution on the nearfield should be fairly similar to the region above but this capture shows some strange pressure disturbance. Limiter: VAN_ALBADA_EDGE; ![NF_before](https://user-images.githubusercontent.com/18245846/129564639-030fe1b7-7e50-4bb1-9951-21f5ea27bb52.png). Limiter: VENKATAKRISHNAN_WANG; ![NF_before_VEN](https://user-images.githubusercontent.com/18245846/129568934-137681db-04db-40f1-819f-7bcc8c7e0d88.png). The capture below is from the branch with this PR. The issue I mentioned above does not exist. Limiter: VAN_ALBADA_EDGE; ![NF_after](https://user-images.githubusercontent.com/18245846/129564659-cec5a848-1b0b-4051-8298-e3d383dacc6d.png). I think the residuals for direct solver will be different like the adjoint if you run it for some hundreds more iterations (currently, the test case has only 20 iterations). However, since the nearfield boundary is a bit far from an object, it takes some iterations for pressure waves to reach the nearfield boundary. This PR also solves an issu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1351#issuecomment-899498618:540,variab,variables,540,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899498618,2,['variab'],['variables']
Modifiability,"> Thank you for your answer. If you could share the configs and meshes that you are using I can try following the approach suggested by @pcarruscag and use the TKE from the turbulence solver instead of the freestream one.; > ; > Plus, I have some doubts on the default value of the turbulent to laminar viscosity ratio which is equal to 10 in SU2, although on the NASA page suggests to be in the range of 10^-2 to 10^-5. However, I think that this is another issue. @rois1995 Hi ~ . Can you give me a link to the NASA TMR guide for setting the viscosity ratio? I'm not sure where to find it. Sorry, I found it!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-2251837355:52,config,configs,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-2251837355,2,['config'],['configs']
Modifiability,"> Thanks @fmpmorgado! NEMO definitely needs some speed up! This looks good!; > ; > Regarding the preprocessing, why is the ComputeSoundSpeed() function returning slightly different results?. @WallyMaier . Inside the CNEMOEulerVariable, you set the fluidmodel with the freestream conditions written in the config file and use the ComputeSoundSpeed(). However, in the CNEMOEulerSolver, in the deleted loop, you had GetSoundSpeed(), which retrieves the solution already estabilished in the Primitive Matrix. The Primitive Matrix was estabilished inside the SetPrimVar() function. However, inside the function, we set the fluidmodel with slightly different values than the ones used in the config file, because we first run the iterative process to find the translational and vibrational temperature with the given energies. This iterative process provides slightly different temperatures than the ones in the config file, thus computing slightly different sound speeds",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1340#issuecomment-890297817:305,config,config,305,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340#issuecomment-890297817,3,['config'],['config']
Modifiability,"> Thanks for pointing that out. I dont think it is intentional. Maybe we can use this PR also to fix this ?. That depends on how atomic we want these PRs to be. This PR is largely a refactoring PR, and shouldn't change any underlying performance. But adding extra calculations on source terms and wall conditions might change the performance of the code. The two changes are completely compatible, so combining them wouldn't be hard. Nevertheless, I propose we keep these changes separate, so that the purpose of each PR is clear and easy to see. In my mind, two small PRs are easier to check and review than one large PR. @talbring @economon What do you think? One big PR or two small PRs?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626#issuecomment-458177675:182,refactor,refactoring,182,https://su2code.github.io,https://github.com/su2code/SU2/pull/626#issuecomment-458177675,2,['refactor'],['refactoring']
Modifiability,"> Thanks for the PR! I just have a single question: Why Set_MPI_MaxLength needed to be called 2 times for periodic boundaries?; > ; > LGTM! If Travis pass, we are ready to merge.; > Eduardo. To be honest, I don't know. I just know that that:. + Without calling it twice, the max length is not initialized on some of the periodic halo nodes.; + When you do call it twice, the max length is initialized on all periodic halo nodes. Something similar happens when loading a solution from a restart file, where the solver needs to do something like this:. solver[MESH_0][FLOW_SOL]->Set_MPI_Solution(geometry[MESH_0], config);; solver[MESH_0][FLOW_SOL]->Set_MPI_Solution(geometry[MESH_0], config);. @economon Do you know why the MPI calls need to be made twice?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-463668790:612,config,config,612,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-463668790,2,['config'],['config']
Modifiability,> Thanks for this +1 Please strip all the comments and non relevant options from the configs. Thank you Pedro for all your suggestions.; I have reverted the serial_regression.py file and updated the configuration files. This work is done in 84c9584d430e23ea62b4371cad3d0a96d9717cdb.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1418#issuecomment-958936613:85,config,configs,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-958936613,2,['config'],"['configs', 'configuration']"
Modifiability,"> Thanks. Is it possible to target only some paths for formatting? I'm concerned about making life too difficult for developers, and we cannot break lines in some files because we parse them to generate some python code. Having only some paths we would then include more files over time until we cover everything. @pcarruscag ; The hook options of pre-commit hooks are [here](https://pre-commit.com/index.html#pre-commit-configyaml---hooks) . As far as I understand yes it is possible with the `files` option (AFAIK it is a regex pattern) another option is excluding some directories now I only exclude the `external` directory. . I look at the regression test the values seem okay but the test fails is this due to wrappers? If you tell me which directories should be omitted, I would adjust it quickly. In general, we can also disable column limit/wrapping from `clang-format` but it is probably not the best option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1948#issuecomment-1455246335:421,config,configyaml---hooks,421,https://su2code.github.io,https://github.com/su2code/SU2/pull/1948#issuecomment-1455246335,1,['config'],['configyaml---hooks']
Modifiability,"> The documentation looks great! (Answered a couple of my questions); > Can you give an example of linking to external libraries? e.g. BLAS; > For example I currently need:; > ; > ```; > export CPPFLAGS=""-DHAVE_LAPACK""; > export LDFLAGS=""-L$OPENBLAS/haswell_omp/lib""; > export LIBS=""-lopenblas -lgfortran -fopenmp""; > ```. Well you have two options. First, if the libraries can be found with `pkg-config`, the easiest is to just use ; ```; openblas = dependency('openblas') ; su2_deps += openblas; ```; Otherwise you'll have to declare the dependency with; ```; openblas = declare_dependency(...); su2_deps += openblas; ```; where the arguments for that routine are explained [here](https://mesonbuild.com/Reference-manual.html#declare_dependency)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-517243186:397,config,config,397,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-517243186,1,['config'],['config']
Modifiability,"> The fixed-Cl mode is not active during adjoints, the AOA is just taken from the metadata. I.e. you would propose to try to disable the delta-pressure udpdate during the adjoint for prescribed massflow? In my understanding that would result in an inconsistent gradient -> which might work good enough for optimizations but in a gradient validation I would expect significant deviations. > If something is determined iteratively, then I think it is a solution variable, [...]. So it is settled then -> I will try to give pressure-drop the same treatment as regular solution variables as mentioned in point 2. of the PR description.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1030096530:460,variab,variable,460,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030096530,2,['variab'],"['variable', 'variables']"
Modifiability,"> The language is much more flexible and allows also for if-statements, loops, maps and so on. For the output it does not make that much sense, but for initial conditions it might be useful later. This could be useful even for general outputs. One example that comes to mind is if you wanted to calculate the momentum/pressure loss due to a shock. Excited for these new features!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913#issuecomment-607959681:28,flexible,flexible,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-607959681,1,['flexible'],['flexible']
Modifiability,"> The logic when computing the Laplacians (used for 4th order dissipation) is that for points on a physical boundary, only other physical boundaries are considered when adding solution differences.; > I think this is to avoid adding very large differences for wall points. However when we have a point at a wall-symmetry intersection, the wall point will receive contributions from the symmetry points since that is also a ""physical boundary"".; > That is my hypothesis anyway, anyone care to run some tests? :). Thanks you for the hint, I am running some tests using different values of the 4th order dissipation coefficient for the OneraM6 test case.; Lowering this value, as expected, increase the oscillations of the JST scheme. Anyway the problem is still there.; What looks strange to me is that this difference is present only for the skin friction coefficient and not for the other variables.; Is it possible that the problem is due to the computation of the Cf?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1125#issuecomment-742483637:889,variab,variables,889,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742483637,1,['variab'],['variables']
Modifiability,"> The restarts are read once per solver, so, if you have Incomp RANS, with weakly coupled heat, a scalar, and mesh deformation... 5 times :); Well, it seems fast enough, so it does not pose an immediate problem. I guess the solution to this is to move the reading of the data 'higher up', first get all the solvers and variables, then read the file and populate the solver variables, something like that? ; Anyway, I think the way it is done now looks good.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1277#issuecomment-831214603:319,variab,variables,319,https://su2code.github.io,https://github.com/su2code/SU2/pull/1277#issuecomment-831214603,2,['variab'],['variables']
Modifiability,"> The solution I suggested didn‚Äôt work?. I still have to check if the implementation is correct but with more than two cores the code breaks. However, I found out that the wall-normal of a volume point can be computed as the normalized gradient of the wall-distance. Does this sound correct to you? . However, there is a problem: I am using the aux variables to compute these gradients, but to compute dot(n, U) I first need n, thus I cannot compute them simultaneously. Since these computations are performed in the Preprocessing of the solvers, I was thinking to compute the normal within the FLOW_SOL preprocessing and the dot(n, U) in the TRANS_SOL preprocessing since the flow solver comes before the trans solver. Is this right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1429962062:349,variab,variables,349,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1429962062,1,['variab'],['variables']
Modifiability,"> The solution to (2) appears to be to change geometry->node[iPoint]->GetnNeighbor() to geometry->node[iPoint]->GetnPoint() at line 3759 of CEulerSolver.cpp, in the CEulerSolver::SetUpwind_Ducros_Sensor() method. @GomerOfDoom thanks for tracking that, I fixed the exit condition on that method, but only now that I'm refactoring CPoint in #966 have I realized the difference between nPoint and nNeighbor... Does your case have periodicity?; I will fix incorrect uses of nNeighbor in other areas of the code as part of #966, time domain with moving grids will have similar issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-622511555:317,refactor,refactoring,317,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622511555,1,['refactor'],['refactoring']
Modifiability,"> There are 2 cases in the testcases repository, both are using the Euler solver. Maybe also check if your case is running correctly with the settings from those testcases. Earlier, I was defining the mesh movement for the static zone as:. ` GRID_MOVEMENT= NONE `. since it was stationary. However, after checking the test cases, I found that the stator zones should also be defined as moving as. ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.0 ; ```. even though the mesh stays stationary. In that case, the unphysical flow results I presented earlier vanished. Earlier, I tried the cylinder test case with the inner zone having . ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.0; ```. and the outer zone having; ` GRID_MOVEMENT= NONE `. where the simulation gave physically viable results. I guess the zone interface may not accurately work if the `GRID_MOVEMENT` options of the neighbouring zones do not match while one of the zones has a non-zero movement. However, I have not simulated any other test cases. Also, the sliding_interface/rotating_cylinders test case diverges with the given .cfg files. At around the 775th time step, I received the following error message:. `SU2 has diverged (Residual > 10^20 detected). `. However, it works just fine if the simulations are done in subsonic flow (e.g. `MACH_NUMBER= 0.1`) while keeping the rest of the configuration the same.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2051695181:1440,config,configuration,1440,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2051695181,1,['config'],['configuration']
Modifiability,"> There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; > I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each oper",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:32,refactor,refactoring,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696,4,"['refactor', 'variab']","['refactoring', 'variables']"
Modifiability,"> This is a good point, as you know we've tried to move to the ""m"" versions of SST (#1483) (dropping k from viscous terms) but I don't think we have looked too deeply into the convective terms. However, the Roe speed of sound is only used by dissipation terms, the consistent part of the flux is based on primitive variables, and those account for tke, so I suspect there is some other inconsistency at play when defining farfield conditions or the farfield boundary itself. Also note that you are probably using very high values of free stream turbulence intensity and viscosity ratio, the defaults are (5% and 10x). I did not see this type of problem in https://su2code.github.io/vandv/swbli/. Thank you for reply. ; I just ran the V&V SWBLI case. Both k-w SST and SA model results were no problem. . In the k-w SST case, When I arbitrarily changed free stream turbulent intensity 5e-3 to 5e-2, the flow condition at the inlet was changed. You can see the below figure(The S-A and kw(5e-3) is on the same line).; ![image](https://user-images.githubusercontent.com/50565314/208935044-bba92715-1828-4ddb-929a-b77877416cbb.png). The problem seems to arise when you have a large TKE.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1361444490:315,variab,variables,315,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1361444490,1,['variab'],['variables']
Modifiability,"> Use the develop branch of the code and the config file I uploaded before. Heatflux is being outputted.; > Please understand that we do not have resources to fix bugs in previous versions of the code. Hello. . I read the code. In the file 'solver_direct_mean.cpp', there is a function, 'CNSSolver::Friction_Forces', in which a line of code is wrong. The last parameter of the code, 'HeatFlux[iMarker][iVertex] = -thermal_conductivity*GradTemperature*RefHeatFlux;' is for normalization, but we only declare it before. In another word, 'RefHeatFlux' is forgotten. If I delete 'RefHeatFlux' in this line of code, it works. Certainly, at this moment, heatflux I get is not normalized any more. My version is 6.2.0.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805#issuecomment-554811138:45,config,config,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-554811138,1,['config'],['config']
Modifiability,"> We can already output all LUT and MLP variables using; > ; > ```; > LOOKUP_NAMES= Beta_ProgVar; > VOLUME_OUTPUT= LOOKUP; > ```. Ok, Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2303#issuecomment-2169382876:40,variab,variables,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/2303#issuecomment-2169382876,1,['variab'],['variables']
Modifiability,"> Yes but it would be kind of you to check if a feature of a future release is going in the direction of what you need. Compiled libraries would be easy to handle via pkg config. . Ah, I did not understand that this is something you were already working on and were asking me to test, I thought you were suggesting to use develop to install the software on our production cluster. I should not have assumed that, it's just something that is unfortunately quite frequent in the field of scientific software (just use the head of the git repo). I did not have any clone of the repo, so did not see that script (only the one in `legacy`) initially. . ```; $ ./preconfigure.py --help; usage: preconfigure.py [-h] [--with-own-meson] [--no-codi] [--no-medi]; [--no-opdi] [--no-mpp] [--no-coolprop] [--no-mel]; [--no-mlpcpp]. optional arguments:; -h, --help show this help message and exit; --with-own-meson download own copies of Meson and Ninja; --no-codi do not download own copy of CoDiPack; --no-medi do not download own copy of MeDiPack; --no-opdi do not download own copy of OpDiLib; --no-mpp do not download own copy of Mutationpp; --no-coolprop do not download own copy of CoolProp; --no-mel do not download own copy of MEL; --no-mlpcpp do not download copy of MLpCpp; ``` . It seems like to go in the right direction. Is there a plan to provide options to specify how to find installed copies of those ? Something like `--medi=/path/to/installed/medi` and such ? pkgconfig or other auto-detection mechanisms usually work, but sometimes it doesn't, and explicit workarounds sometimes help. . I also don't see other packages that end up in externals, such as `metis`, `parmetis`, `autotools`, `catch2`. I am not sure how those are used (or if they are used), but I noticed folders for them in the `externals` folder. Is there a plan to allow using external versions of those ?. > But your choices of words sound a bit unfriendly so I honestly don't care, we can also close the issue until the next re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645726352:171,config,config,171,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645726352,1,['config'],['config']
Modifiability,"> You may want to remove the string based interface since it's known to be inneficient. When replacing the string-based with index-based look-up methods, the performance improves substantially. The figure below shows the average measured evaluation time (measured with chrono library) vs the number of output variables. It's clear that using index-based look-up methods results in reduced query time, as well as improved scaling. ![scaling_nVars](https://github.com/su2code/SU2/assets/38651601/31252439-ac6e-4f1b-82d4-e13a55d54c98)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214#issuecomment-1952521226:309,variab,variables,309,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214#issuecomment-1952521226,2,['variab'],['variables']
Modifiability,"> You should be able to use CConfig::SetFinestMesh in CDriver::Geometrical_Preprocessing_FVM to initialize this to the coarsest grid that was produced.; > ; > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want. Your suggestion is also valid, but in my opinion it would be more coherent, in terms of code structure, to reduce the finest mesh level whenever we modify the number of multigrid levels. So in CMultiGridGeometry::CMultiGridGeometry add this line of code; `config->SetFinestMesh(iMesh-1);`; after reducing the number of MGLevels. > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want.; I can do that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-908181097:235,config,config,235,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-908181097,3,['config'],['config']
Modifiability,"> after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type set MSMPI_LIB64=\%MSMPI_LIB64% in cmd or $env:MSMPI_LIB64=""\""+$env:MSMPI_LIB64 in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;. @Zcaic Hi zcaic, . I tried this, but it still thow the same error. with message; ```; OSError: [WinError 123] Êñá‰ª∂Âêç„ÄÅÁõÆÂΩïÂêçÊàñÂç∑Ê†áËØ≠Ê≥ï‰∏çÊ≠£Á°Æ„ÄÇ: 'D:\\mingw-w64\\x86_64\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\lib\\C:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'; ```. ‚¨ÜÔ∏è just from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\libC:\\Program...`. Is that any solutions ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582:57,Variab,Variable,57,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582,1,['Variab'],['Variable']
Modifiability,"> the off-PR comments can be integrated in this PR to clear that up a bit. If not that is OK as well. It's more than OK, the CHT implementation suffers a bit from being a single person's project.. you're very welcome to have a look over it! :-). > Can you add that option to the config_template.cfg together with that description, the valid inputs and the default. Actually I'm hesitating a bit adding it to the config template right now. I'd prefer to have `DIRECT_TEMPERATURE_ROBIN_HEATFLUX` as the default and ""hide"" the rest as developer's options for the moment.; The reason simply is that those different methods need to checked and validated against each other before we make them public.; E.g. I figured that for the incompressible CHT test case from the repo, there is a severe gap between the heatfluxes obtained from the ""averaged"" approach and the direct one, see below. ![heatflux_convergence](https://user-images.githubusercontent.com/22639394/72885197-bb9e4a80-3d07-11ea-9fad-a4d709dc511e.png). That needs to be cleared up first...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/839#issuecomment-577108935:412,config,config,412,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577108935,2,['config'],['config']
Modifiability,">; configure:4644: result: gcc -E; configure:4664: gcc -E conftest.c; configure:4664: $? = 0; configure:4678: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4678: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftes",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:9566,config,configure,9566,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,">Do I understand correctly that the roughness height does not influence the wall distance calculation itself?... @pcarruscag , Yes. I can use the markerID to find the corresponding roughness as long as the field element and the nearest wall marker are on the same rank. I was not sure how to relate the markerID on rankID from a different rank to the global config list, hence the current implementation. I am open to fixing it with a different implementation if I can figure out how to actually do it. The few things I tried all ended up causing problems and this was one way to avoid them (also my inexperience with MPI did not help).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-596708744:358,config,config,358,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-596708744,1,['config'],['config']
Modifiability,">I found out the other day that this: unordered_map<pair<int,int>, su2double> does not work without extra tricks,. Yes, I found some examples to do it. But I was not quite understanding what are the sizes of local maps or how to communicate them over MPI. . >so if you have it out of the config in some matrix format it is probably better. In that case, I can just move the current global arrays to physical geometry class and simplify some of the function calls.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-653479936:288,config,config,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653479936,2,['config'],['config']
Modifiability,">‚Ä¶, but it helps to keep the code more approachable and portable. How do you think about to improve any corresponding [system configuration checks](https://github.com/su2code/SU2/blob/ec551e427f20373511432e6cd87402304cc46baa/configure.ac#L53 ""build specification"") then?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400#issuecomment-360106079:56,portab,portable,56,https://su2code.github.io,https://github.com/su2code/SU2/issues/400#issuecomment-360106079,3,"['config', 'portab']","['configuration', 'configure', 'portable']"
Modifiability,"@BeckettZhou I think that's a good idea. Just to make sure I understand the BANC model: for cases that have large mesh sizes, we provide configuration files, and visualization of the results (comparisons to higher fidelity data and/or to other solvers). If someone would like to run the case for themselves, they would contact the custodian and the custodian is obligated to provide the meshes. The next step would be to start the github repo. @economon Is it possible to start the repo under the su2code umbrella? Is that something you could start and people can start compiling validation test cases, and their results?. Cheers, ; Jayant",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-425961143:137,config,configuration,137,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-425961143,1,['config'],['configuration']
Modifiability,"@DominicMasters ; Hey. I have been trying to run a 3d euler case in SU2. My meshed file with boundary as wing, symmetry and farfield is not working, ; I would appreciate if you could share the config file and mesh file for me to view once.; Thank you. ; ![capture](https://user-images.githubusercontent.com/31462793/38780237-f802ec6e-4098-11e8-8994-903bf0ea5813.JPG)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/321#issuecomment-381415514:193,config,config,193,https://su2code.github.io,https://github.com/su2code/SU2/issues/321#issuecomment-381415514,1,['config'],['config']
Modifiability,@EduardoMolina most of the variables have either been deleted or removed. I expect most will make a return in a future PR for implicit functionality within the NEMO framework,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1139#issuecomment-752122739:27,variab,variables,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139#issuecomment-752122739,1,['variab'],['variables']
Modifiability,"@EvertBunschoten @danielmayer @Cristopher-Morales I have now modified the flamelet approach such that it uses the diffusion coefficient D from the LUT file. In this way, the variable mass_diffusivity contains the same variable/same units for the flamelet approach as for the species transport approach. Note that this means you now need diffusion coefficient ""D"" in the LUT instead of ""rho*D"".; @EvertBunschoten I have removed the hard-coded computation of diffusivity from the unity Lewis approach.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1346426110:174,variab,variable,174,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1346426110,2,['variab'],['variable']
Modifiability,"@JedrzejMosiezny . The reason why the mesh and config files are split into separate repos is the following: ideally we want to have the test cases being closely coupled to the current version of the code as config options change quite frequently. However, the mesh files are simply too big to have them in the main repo (it takes too much time to check them out etc.). So a compromise was to still leave the config files in the main repo in order for them to stay up-to-date. We thought that the information [here](https://github.com/su2code/SU2/wiki/Test-Cases) would be quite clear for the user on how to merge config and mesh files. Following this instructions should avoid having to search for the mesh files manually. Let us know if you think different. @economon could you add Jƒôdrzej to the dev team here on github ? Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-355152833:47,config,config,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-355152833,8,['config'],['config']
Modifiability,"@LaSerpe : thanks for the mesh!. @EduardoMolina : no huge rush on merging this one.. we should make sure everything is working ok. It would be very helpful if you can take a look at the Taylor-Green Vortex case again, like we looked at before, now that the parallelization is improved. The option to run is still there (TGV = YES), and I think you already have the meshes.. @pcarruscag : thanks for the comments (will address soon). Also, thanks for the reminder about the pre-accumulation. I disabled that since I had to rework the least squares routines for the periodic BC and I did not turn it back on. The variables may need to be adjusted now though",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652#issuecomment-464599593:611,variab,variables,611,https://su2code.github.io,https://github.com/su2code/SU2/pull/652#issuecomment-464599593,1,['variab'],['variables']
Modifiability,"@MarcoFossati @monika1387 @economon I've been working with Adrien Loseille from INRIA to bring Vic's old fork (referenced above) up to date with develop. Check out [feature_adap](https://github.com/su2code/SU2/tree/feature_adap). It uses goal-oriented (adjoint-based) adaptation instead of feature-based (just based on Mach or pressure) that Vic's fork used. Some things to note:; 1. It's currently only tested on Euler (it uses a Hessian of the Euler fluxes so it might work for NS/RANS, but probably not) (@WallyMaier and I also extended it to TNE2 in [feature_amgtne2](https://github.com/su2code/SU2/tree/feature_amgtne2) but the source terms are giving us trouble on adapted meshes); 2. It requires AD support since it uses the discrete adjoint to weigh the Euler flux Hessians; 3. I did all my testing with the AMG executable since pyAMG doesn't have all the features I currently need, but I just updated the branch to use pyAMG. I just tested the new interface with an airfoil and it seems to be working, but there might still be some bugs. You'll want to run mesh_adaptation_amg.py with the following options:; **ADAP_SIZES:** list of mesh complexities for each adaptive level. This is correlated to mesh size, but picking good values requires some playing around; **ADAP_SUBITE:** number of adaptations performed at each adaptive level. If set to (2,3) for example, it will run 2 adaptive iterations to try to reach ADAP_SIZES[0], and 3 iterations to try to reach ADAP_SIZES[1]; **ADAP_EXT_ITER:** number of iterations used by SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_RESIDUAL_REDUCTION:** order of magnitude residual reduction for SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_SENSOR:** currently only works for GOAL; **ADAP_HMAX:** maximum cell size (m); **ADAP_HMIN:** minimum cell size (m); **ADAP_HGRAD:** gradation coefficient (>1) used by AMG during mesh smoothing. A larger value corresponds to larger allowed gradient in mesh size. E.g. for the RAE2822 I used:;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504675574:268,adapt,adaptation,268,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504675574,3,"['adapt', 'extend']","['adaptation', 'adapted', 'extended']"
Modifiability,@ScSteffen : you might try to revert the Jacobian fix factor to the previous value since you are using JST (and perhaps it is not converging with the new setting). Try adding this option to the config (the default is currently 4.0):. CENTRAL_JACOBIAN_FIX_FACTOR= 1.0,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/940#issuecomment-644868893:194,config,config,194,https://su2code.github.io,https://github.com/su2code/SU2/issues/940#issuecomment-644868893,1,['config'],['config']
Modifiability,"@TobiKattmann - I was just reading your slides on [multizone](https://su2foundation.org/wp-content/uploads/2020/06/Kattmann.pdf), when I noticed that you mention python scripts not working for multizone, and I guess that would include the mesh adaptation scripts... is this still the case? Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764800900:244,adapt,adaptation,244,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764800900,1,['adapt'],['adaptation']
Modifiability,@TobiKattmann Just test whether it works and gives the same results. The regression test should be added still with the old driver. I will adapt it accordingly.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-527185086:139,adapt,adapt,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-527185086,1,['adapt'],['adapt']
Modifiability,"@YairMO in the zip file you can find the .geo file to create the mesh via gmsh, the L3 mesh and the configs file used for simulations with SA.; [MeshAndConfig.zip](https://github.com/user-attachments/files/17174513/MeshAndConfig.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2380638829:100,config,configs,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2380638829,1,['config'],['configs']
Modifiability,"@Zcaic nope, I add '\\' before`'C:Program Files...` and the environment MSMPI_LIB64 finally like `\C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\`. I paste wrong error message before . the actual error message after I change the envirnment variable is ; from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\lib\\C:\\Program...` . just a more `\\`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-1191551136:244,variab,variable,244,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1191551136,1,['variab'],['variable']
Modifiability,"@aditya12398 It is exactly like @GomerOfDoom mentioned: if you use the `-Dcustom-mpi=true` flag, you must define the environment variables to point to the correct mpi implementation. For example if mpich is installed at `/mpich_x86-64-linux-gnu` the linker/cpp/c flags must be defined as follows (on ubuntu):; ```; export LD_FLAGS='-L/mpich-x86_64-linux-gnu/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/mpich-x86_64-linux-gnu/include'; export C_FLAGS='-I/mpich-x86_64-linux-gnu/include'; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634851094:129,variab,variables,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634851094,1,['variab'],['variables']
Modifiability,"@all, I agree that it might be a problem for bigger cases and that we have to think of some ways to reduce the memory requirements for the discrete adjoint. . One approach that I started already, is to template the linear solver in order to use double datatype also when running the differentiated version of the code. However, that was more involved than I thought, but still its on my agenda. The nice thing is that this also reduces the runtime a lot. . The next thing is, like @pcarruscag correctly pointed out, the use of preaccumulation. However, this also requires a more detailed analysis, since it can also lead to an increased memory footprint if not applied carefully. Currently, a lot of memory is used for the geometrical derivatives, i.e. the derivatives with respect to the mesh coordinates (this requires approx 1.5 times the memory needed for derivatives with respect to the conservative variables). But since these derivatives are only needed when writing the solution we could think of doing some recomputation as runtime is not that important. So you see we have some ideas and I am sure we can reduce the memory by approx 50% if we apply all of them. However, time is unfortunately limited at the moment, but I will definitely continue improving the adjoint solver. Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/594#issuecomment-427848887:905,variab,variables,905,https://su2code.github.io,https://github.com/su2code/SU2/issues/594#issuecomment-427848887,1,['variab'],['variables']
Modifiability,"@antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png). Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764777223:59,adapt,adapted,59,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764777223,1,['adapt'],['adapted']
Modifiability,"@bigfooted Has there ever been any discussion regarding implementation of a `START_TIME=` capability into the config file? After going through the code a bit, it looks like doing this would be a good starting point for implementing ability to adjust deltaT mid-runs, as in general the code presumes `TimeIter*deltaT` as being the current time. This would be problematic for unsteady restarts that have a varying timestep. Plus, this would allow one to, without using the Python wrapper, use a different timestep in the config file for an unsteady restart. It also may clear up some confusion to have an explicit option for this, as in #2071. It can maybe look something like:. % Start time for restarting unsteady simulations; % = -1 for default calculation (START_TIME=RESTART_ITER*TIME_STEP); START_TIME=-1. Then `CConfig::GetPhysicalTime` could be appropriately updated and used in-place of all locations in the code where a physical time is manually calculated.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190#issuecomment-1870730956:110,config,config,110,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190#issuecomment-1870730956,4,['config'],['config']
Modifiability,@chamsolli ; I am trying to configure my own 3D Euler case for this mesh.; ![capture](https://user-images.githubusercontent.com/31462793/38834251-7f1740ca-418d-11e8-962c-8e778331955e.JPG),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/523#issuecomment-381744025:28,config,configure,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/523#issuecomment-381744025,1,['config'],['configure']
Modifiability,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-750490818:289,adapt,adaptation,289,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818,6,"['adapt', 'config']","['adaptation', 'adapted', 'adapts', 'configuration']"
Modifiability,"@clarkpede @economon In my never ending shuffling-code-around I noticed that we do this:; ```; for (unsigned short iPeriodic = 1; iPeriodic <= config->GetnMarker_Periodic()/2; iPeriodic++) {; InitiatePeriodicComms(geometry, config, iPeriodic, PERIODIC_IMPLICIT);; CompletePeriodicComms(geometry, config, iPeriodic, PERIODIC_IMPLICIT);; }; ```; ... for implicit iterations but not for explicit ones, the purpose of that comm is to:. /*--- Communicate the solution from our master set of periodic; nodes (from the linear solver perspective) to the passive; periodic nodes on the matching face. This is done at the; end of the iteration to synchronize the solution after the; linear solve. ---*/. I imagine the residual is constructed in a way that is consistent for the 2 periodic points, but... The explicit iteration implementation is now in CFVMFlowSolverBase.hpp::Explicit_Iteration_impl",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/763#issuecomment-770241115:143,config,config,143,https://su2code.github.io,https://github.com/su2code/SU2/issues/763#issuecomment-770241115,3,['config'],['config']
Modifiability,"@clarkpede I have not used the mesh adaptation tools since my last post (I was simply learning to use them for an undergrad project). With that said, I do not have any other concerns. It worked well for my application. I appreciate your help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-500491744:36,adapt,adaptation,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-500491744,2,['adapt'],['adaptation']
Modifiability,@danielmayer @Cristopher-Morales @EvertBunschoten I will change to the custom objectives and custom outputs in the PR so config files might break if you use SURFACE_SCALAR_* as an output/objective,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1551309137:121,config,config,121,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1551309137,1,['config'],['config']
Modifiability,"@danielmayer @mheimgartner @bigfooted @EvertBunschoten please note that `CScalarSolver`, `CScalarVariable` and `scalar_sources/convection/diffusion` were renamed to (basically just extended by *Legacy) `CScalarLegacySolver`, `CScalarLegacyVariable` and `scalarLegacy_sources/convection/diffusion`. So all files that you are used to do now have the `Legacy` addition in their names as I introduced the same/similar files in #1330. The 'new' ones are really new in the sense that they form the general base for scalar transport and I will create a `CSpecies*` family of files to incorporate the species transport. So right now both concepts are present in the same branch but the Legacy will be subsequently removed/replaced by the new stuff. . In any case: merge with the upstream feature_flamelet on github regularly. Add Testcases so that these subsequent merges do not introduce any problems I am unable to see otherwise. And if you want to push a commit here please get in touch shortly with me first.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223#issuecomment-925781391:181,extend,extended,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-925781391,1,['extend'],['extended']
Modifiability,"@dean0927 : this is a very new feature, unfortunately, which is not quite released to the public yet and we do not yet have examples. However, you can take a look at the MMS cases at the following link and their configs to see how the options work. You will need to set KIND_VERIFICATION_SOLUTION= USER_DEFINED_SOLUTION, implement the solution/BC inside of the CUserDefinedSolution class, and then call BC_Custom() on the boundaries where you want it applied (MARKER_CUSTOM in the config)/. https://github.com/su2code/VandV/tree/master/mms/fvm_incomp_euler",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/690#issuecomment-505161925:212,config,configs,212,https://su2code.github.io,https://github.com/su2code/SU2/issues/690#issuecomment-505161925,2,['config'],"['config', 'configs']"
Modifiability,"@economon , when I compile this branch with all the debug flags I get the following warnings. ../src/geometry_structure.cpp: In member function ‚Äòvirtual void CPhysicalGeometry::Set_MPI_Coord(CConfig*)‚Äô:; ../src/geometry_structure.cpp:15933:33: warning: variable ‚ÄòiPeriodic_Index‚Äô set but not used [-Wunused-but-set-variable]; unsigned short iDim, iMarker, iPeriodic_Index, MarkerS, MarkerR;; ^~~~~~~~~~~~~~~; ../src/geometry_structure.cpp: In member function ‚Äòvirtual void CPhysicalGeometry::Set_MPI_GridVel(CConfig*)‚Äô:; ../src/geometry_structure.cpp:16066:33: warning: variable ‚ÄòiPeriodic_Index‚Äô set but not used [-Wunused-but-set-variable]; unsigned short iDim, iMarker, iPeriodic_Index, MarkerS, MarkerR;; ^~~~~~~~~~~~~~~; ../src/geometry_structure.cpp: In member function ‚Äòvirtual void CPhysicalGeometry::Set_MPI_OldCoord(CConfig*)‚Äô:; ../src/geometry_structure.cpp:16195:33: warning: variable ‚ÄòiPeriodic_Index‚Äô set but not used [-Wunused-but-set-variable]; unsigned short iDim, iMarker, iPeriodic_Index, MarkerS, MarkerR;. Further inspection shows that iPeriodic_Index is used to retrieve the periodic transformations. However, these lines are commented. //angles = config->GetPeriodicRotation(iPeriodic_Index);; //translation = config->GetPeriodicTranslate(iPeriodic_Index);. Hence angles and translation get their default values of 0.0. Is this correct? These lines are not commented in develop. If it is correct, could you fix the compiler warning?. For the rest, I think this is a no-brainer and can be merged in quickly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/699#issuecomment-498964784:253,variab,variable,253,https://su2code.github.io,https://github.com/su2code/SU2/pull/699#issuecomment-498964784,8,"['config', 'variab']","['config', 'variable']"
Modifiability,"@economon Dr. Alonso emailed me saying that ""We used [grid adaptation] successfully in tetrahedral meshes, but I do not believe the hexahedral adaptation was ever fully functional."" That matches my experience with a few tests I ran.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/492#issuecomment-355796132:59,adapt,adaptation,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/492#issuecomment-355796132,2,['adapt'],['adaptation']
Modifiability,"@economon Hello Dr. Economon, thank you very much for the replying. 1. I tried using unix2dos to convert the file attached to the previous post, but the problem remains as picture shown (attached and highlighted) and these non-binary files cannot be read in SU2 when running restart simulation. Is it possible I did not configure it correctly during the installation? ; My configure command is: ""./configure --prefix=user-dir --enable-mpi --with-cc=mpicc --with-cxx=mpicxx"". 2. Thanks for the suggestion. And since I am using MATLAB to post-process the data and trying to import the binary restart data directly into MATLAB, could you please advise me the precision and other information of the binary restart file?. Again thank you very much for your helping with this issue.; Sincerely; ![picture1](https://user-images.githubusercontent.com/33880907/33277349-40eaa6d8-d366-11e7-970f-1ae712fb449b.jpg); ![picture2](https://user-images.githubusercontent.com/33880907/33277354-4374751e-d366-11e7-8f8e-4b6a81c5b78f.jpg)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/477#issuecomment-347244204:320,config,configure,320,https://su2code.github.io,https://github.com/su2code/SU2/issues/477#issuecomment-347244204,3,['config'],['configure']
Modifiability,"@economon Hm ok, that is strange. The one that it builds is the newest on github (v1.9). On linux meson finds ninja if it is in the root directory of the source code (which should be there after bootstrapping), apparently that is not the case on mac. Can you check whether it works when you add the source dir in your path variable? Like @davetaflin also mentioned for windows, on mac you can also directly generated xcode files (by adding `--backend=xcode` to the meson call), then ninja is not required. But anyway, I will look for a solution to that problem. @davetaflin Thanks for your impressions. I would say the documentation is decent. The important things are there, which helped me setting it up. But I guess that we can also ask the developers if we have some problems when adding more complex dependencies (however, we then also should ask ourselves whether we really want to add them in this case). But is the conclusion that you'd also prefer meson over automake ? :D",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-495117437:323,variab,variable,323,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-495117437,1,['variab'],['variable']
Modifiability,"@economon I am able to compile the code with develop branch. However, it diverges no matter my cfl number or cfl config i tried. I changed rotational speed too. But even changing rotational speed to 1 rad/s does not lead to convergence. Thanks again for all recommendations posted",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-633149396:113,config,config,113,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633149396,1,['config'],['config']
Modifiability,"@economon I tested a couple of simpler problems at subsonic speeds, including the ONERA M6 case at M=0.8395. There's occasionally a difference of one iteration out of about 20. Usually the current develop branch is the one that requires more iterations, but not always. I included a snapshot from my tests on the ONERA M6 case at CFL=30. ![convergence_comparison](https://user-images.githubusercontent.com/13340225/48648855-6c97af80-e9b6-11e8-863a-56dfdf0903c8.png). I don't have a good supersonic, viscous test problem, but I suspect the differences in convergence won't be huge there either. This sign change affects a single term out of many and a single component of a 4x4 or 5x5 Jacobian. My take is that the differences are there, but they are very small. I wouldn't have noticed the problem myself if I hadn't been refactoring the code to enable some changes on our end.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439538677:822,refactor,refactoring,822,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439538677,2,['refactor'],['refactoring']
Modifiability,"@economon I was envisioning something similar to the TestCases folder. With v&v cases grouped according to what they are testing. Something along the lines of: . 1) Inviscid Simulations: ; a) 2D Inviscid bump; b) 2D oblique shocks interaction; c) ...; 2) RANS simulations: ; a) Flatplate; b) NACA0012; c) ...; 3) Unsteady simulations:; a) Square Cylinder; b) ...; 4) Turbomachinary: ; a) ... And so on. Each of the directories would have sub-directories for different mesh sizes, with configuration files for each mesh level that have optimized parameters for best results. So for example if we are talking about the NACA0012 case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:485,config,configuration,485,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,4,['config'],['configuration']
Modifiability,"@economon I'm documenting my thoughts on mocking here, partially in response to you but also for any collaborators. The biggest hurdle with mocking frameworks is that they usually require versatile abstract base classes and depedency inversion. SU2 is relatively good at that with solvers, variables, and numerics. But classes like CConfig are completely incompatible with mocking. CGeometry seems to be somewhere in the middle. Mocking can also be [overused](https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html). I agree, mocking is a great tool, and has its legitimate uses. [Martin Fowler](https://www.martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs) recommends mocking in at least two use cases:; > One is if you're spending a lot of time debugging when tests fail because they aren't breaking cleanly and telling you where the problem is...The second area is if your objects don't contain enough behavior, mockist testing may encourage the development team to create more behavior rich objects. But I believe we can get pretty far just with what we have, and start including mocking as needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850#issuecomment-621842313:290,variab,variables,290,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-621842313,1,['variab'],['variables']
Modifiability,"@economon Is this multizone issue with .cgns files are resolved or still under progress? Because I am trying from last 1 week and having issues in running with. cgns file so just wondering is something wrong in code? ; Also as of now I am trying with FEM_LES (cgns) to FEM_LES (cgns) which didnt work, is it possible to run FEM_LES (cgns) with Unsteady RANS or NS (.su2) pair? It will work? My intent is to extend my LES simulation domain for far field analysis. Appreciate your advise!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-708041917:407,extend,extend,407,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-708041917,1,['extend'],['extend']
Modifiability,"@economon The behavior without adaptive CFL is similar to its non-adaptive behavior. I cannot increase the CFL greater than a certain value and get convergence. For example, for the 2nd coarsest mesh (297 x 57 or 129) I cannot increase the CFL > 20. This is regardless of weather I use adaptive CFL or not. I cannot set the CFL higher than 20. . But this limit increases slightly for the finer meshes. For example, for the finest mesh I can push the CFL up to 30 (adaptive or otherwise). Basically cannot get high CFLs for the GG reconstruction. I should also mention that all these runs are without slope limiters to get the most accurate solutions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-554101997:31,adapt,adaptive,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-554101997,4,['adapt'],['adaptive']
Modifiability,"@economon for prototyping, the changes proposed in #753 allow a container to be added to CVariable as a public member and thus directly accessible everywhere (one can even allocate only in some derived constructors, with no risk of leaking memory). For release-quality code I think encapsulation is desirable, that being said I'm not above declaring the client solver a friend of the specific CVariable it uses (also with the changes introduced, there would be a way to access member variables directly without moving them to base CVariable).; I like encapsulation not because of OOP principles but because of `GetVelocity(iDim)` instead of `GetPrimitive(iDim+1)`. As for overhead I think it is 0 as long as methods are inline: [example](https://gcc.godbolt.org/z/QXoExF); But in all honesty I also chose to change the CVariable interface as little as possible to make my life easier.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-520226075:484,variab,variables,484,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-520226075,1,['variab'],['variables']
Modifiability,@economon should the options in config template be removed then?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/686#issuecomment-495058672:32,config,config,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/686#issuecomment-495058672,1,['config'],['config']
Modifiability,"@economon, I expect to run into problems for grids containing around 250 million DOFs, depending a bit on how many variables you store in the restart file. We can definitely do this test with a dummy grid. As you added this to the RPSVV group, let's close this issue here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/696#issuecomment-500965914:115,variab,variables,115,https://su2code.github.io,https://github.com/su2code/SU2/issues/696#issuecomment-500965914,1,['variab'],['variables']
Modifiability,"@economon, I think you forget one thing. The configure script requires aclocal. When a newer version of the autotools is used to create the configure script, it does not work (as far as I know) and you still need the bootstrap in order to get things to work. The solution to this would be to use a less recent version of autotools, but that is not what we want either, I guess.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-427430150:45,config,configure,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-427430150,2,['config'],['configure']
Modifiability,"@economon, from the config files in the V&V folder, it seems like you ran without adaptive CFL and without the unweighted LSQ. The main difference between the V&V runs and these ones is that I don't use any slope limiter. In the V&V cases the `SLOPE_LIMITER_TURB= VENKATAKRISHNAN` option was used. . There are some other differences: ; 1. I use adaptive CFL; 2. I use `REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE`; 3. Linear solver settings are slightly different. For the V&V runs the following are used: ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-15; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 25; ```; For my runs, I used the settings you had suggested in #790 : ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10; ```; 4. For the SST runs, I did not specify these options that you used in the V&V case: ; ```; % Free-stream turbulence intensity for the SST model; < FREESTREAM_TURBULENCEINTENSITY = 0.00038729; < %; < % Free-strem turbulence to laminar viscosity ratio for the SST model; < FREESTREAM_TURB2LAMVISCRATIO = 0.009; ```; I have attached the config files I used. I am still working on confirming all the regression tests, everything seems to be reasonable thus far. . [flatplate_configs.zip](https://github.com/su2code/SU2/files/4336003/flatplate_configs.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-599337194:20,config,config,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-599337194,4,"['adapt', 'config']","['adaptive', 'config']"
Modifiability,"@fertinaz the problem is that the pkg_config name for MPICH is not ""mpi"" which is what meson is configured to look for...; It is ""mpich"", please see my reply from 23 of May, it is very simple to edit the meson.build script to look for ""mpich"" instead of ""mpi"".; I have used this on numerous machines and the code works fine...; Whatever you do, please do not follow the advice to use 6.2.0, we have all worked extremely hard to make v7.x much faster, fix bugs, and add nice features... Unfortunately we cannot test every combination of compiler, operating system, and libraries.; I'm sure that somewhere, someone has fixed similar problems, sadly not all fixes make it back into the code. Other alternatives, some of which folks have suggested on this thread.; - Use ""custom-mpi"" mode, you will need to set some environment variables (CC=mpicc CXX=mpicxx etc. see above); - Use the legacy build system (i.e. follow the instructions for 6.2.0 but with the 7.0.7 code) be sure to add ""-DNDEBUG"" to the CXXFLAGS environment variable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721322008:96,config,configured,96,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721322008,6,"['config', 'variab']","['configured', 'variable', 'variables']"
Modifiability,"@fpalacios : there were two main issues with the regressions. Both are time out problems if Travis waits for over 10 minutes without any console output. The first was that we need to flush the output for Python 3 for each regression test, otherwise there is too long between cases and sometimes it fails. The second is that sometimes it takes too long to download the test cases, so I have added the keywords 'travis_wait 90' in the call to the entire python script in .travis.yml in order to extend the 10 minute restriction to 90 min. We still need to reduce the time for the tests overall, but it seems to be stable for the time being.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-381217217:493,extend,extend,493,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-381217217,1,['extend'],['extend']
Modifiability,"@fpalacios FYI this is included in https://github.com/su2code/SU2/pull/385. (I know you said you were going to add it, but I ended up needing to use that while checking over my code, and it turned out to be just a couple of lines). ; There was an option FIN_DIFF_STEP actually already in the configuration options, but just wasn't being used yet in the python code - I'm not sure who added that in, but thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/367#issuecomment-287273357:292,config,configuration,292,https://su2code.github.io,https://github.com/su2code/SU2/issues/367#issuecomment-287273357,1,['config'],['configuration']
Modifiability,"@fpalacios, @economon - There's a comment in the config files that says that 'OBJECTIVE_FUNCTION' sets the objective function for the optimizer - however it seems that this option is only used with controlling the adjoint solver and output, and whatever the user specifies there will be overwritten by the optimizer. I put an alternative comment in the config_templates here; I can either revert that back or change the comment in all the config files (I have a script).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-296410309:49,config,config,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-296410309,2,['config'],['config']
Modifiability,"@hlkline . Thanks! That's what I was looking for -- I'd tried Google and was disheartened when this was the first response:; ![image](https://cloud.githubusercontent.com/assets/868479/8146370/07259a96-11fa-11e5-8611-06d02d487c73.png) . Which was a link to the official SU2 page stating: . > Instead of writing a detailed user manual, the approach has been taken to teach the various aspects of the SU2 code through a range of tutorials. I'd propose adding something to the effect of what you've said there. @ThomasHermann . Now I know where to start ;) I think we can both agree that reading someone else's code and trying to make a user manual from scratch is a bit unrealistic -- I'll see what I can do with the config file though!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/183#issuecomment-111760318:714,config,config,714,https://su2code.github.io,https://github.com/su2code/SU2/issues/183#issuecomment-111760318,1,['config'],['config']
Modifiability,"@hlkline : it is true that we have been experimenting a lot to find the best formula, and no doubt we will continue to tweak things as we constantly evolve. But, one constant you can always trust is that the repo will be the home for important decisions on issues and PRs, so there is no need to worry about missing critical updates. . With slack and now rocket chat, we are looking to improve communication efficiency as people collaborate on particular developments in the code (say in pairs or small groups), or perhaps in the future, it can be opened to the public as a sort of support channel. This is to be seen as we gather some experience and feedback.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/645#issuecomment-464602965:149,evolve,evolve,149,https://su2code.github.io,https://github.com/su2code/SU2/issues/645#issuecomment-464602965,2,['evolve'],['evolve']
Modifiability,"@hlkline Thank you for your reply. We have been using SU2 for over 2 years and only recently we started looking at the code to understand some of the issues we were facing. To clarify I did not report it as a bug. I do understand that the flow variables obtained by Riemann invariants (line 10433) are set as the primitive variables for the boundary point. But when it came to the flux calculation I saw Jacobian_j and that triggered my question. I know that each scheme has a ComputeResidual routine but for this specific case what routine is being used? Is it the one in numerics_template.cpp? And I still do not understand why Jacobian_j should play a role in the flux calculation! I will be glad if you can kindly comment on it. Finally, can I now treat that this is a non-issue?. @fpalacios @oleburghardt @hlkline By the way don't you think Nu_c in line no 729 in numerics_direct_mean.cpp should be Nu_c = (1.0-Beta)*LamdaNeg? This was the other *probable* bug I was referring to within SU2 found in CUSP implementation. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-314971522:244,variab,variables,244,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-314971522,2,['variab'],['variables']
Modifiability,"@hlkline Thanks for the tip about CGNS and HDF5, I couldn't see anywhere that the CGNS library needed HDF5 with ZLIB support. Perhaps that is something the configure script should catch?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/219#issuecomment-164822706:156,config,configure,156,https://su2code.github.io,https://github.com/su2code/SU2/issues/219#issuecomment-164822706,1,['config'],['configure']
Modifiability,"@jaspe55 : I have just cleaned up a couple of things and can confirm that your mesh file is there. However, we are missing the converged solution file (solution_flow.dat) and the target Cp file for inverse design. Similar to the process for the mesh, can you please upload the solution file to the TestCases repo and the target Cp file to the SU2 code repo (alongside the config file)? Once the files are present, we can update the regression values in the serial_regression_AD.py and parallel_regression_AD.py files, and this PR will be ready to merge.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-456240798:372,config,config,372,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-456240798,1,['config'],['config']
Modifiability,"@jaspe55 : I see that you have added the residual check for the python regression script, but I do not see the config file, target file, or mesh. The config file and target file should be placed in SU2/TestCases/disc_adj_euler/arina2k/ (according to your path in the regression script), and the mesh placed in the TestCases/disc_adj_euler/arina2k/ directory in the TestCases repository here (develop): https://github.com/su2code/TestCases/tree/develop. Don't forget to 'git add' the files to make sure they are included on push. We can help diagnose any segfaults with the files.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-447209397:111,config,config,111,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-447209397,2,['config'],['config']
Modifiability,@javsu : can you try the change in the develop branch directly? It was working for me there with the config in the test cases repo (other than changing EXT_ITER -> ITER). You can also be more aggressive with the CFL in that config.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-633126402:101,config,config,101,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633126402,2,['config'],['config']
Modifiability,@javsu : please try the branch fix_gridvel where I have aded the change and updated the config file for that case. Shouldn't require any modifications (it converges ~10 orders in a little over 1k iters for me).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-633305481:88,config,config,88,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633305481,1,['config'],['config']
Modifiability,"@jayantmukho :; I think this is a very important addition. A typical optimization case (at least in the industry) deals with very different setups (say aircraft at cruise, take-off, and landing: different flight regimes and different configurations). That way it makes sense to allow also for different mesh files, each for every point.; Nimrod Cohen who works with me has been working on that line. I don't know how far he has gone.; I shall have him posted to this PR, he might be able to contribute.; Best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-525685943:234,config,configurations,234,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-525685943,1,['config'],['configurations']
Modifiability,"@jayantmukho If the upload size limit on Github is an issue, and I suspect it likely will be for these large 3D meshes, we can follow the BANC model -- the researchers who conducted the corresponding V&V cases are named custodians of these test case with explicit understanding that data will be shared upon request. This way, the data resides with a particular SU2 dev group or groups and need not be uploaded. However, I think the config files and all other info necessary for other users to replicate the test cases must be uploaded. Best,; Beckett",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423295060:433,config,config,433,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423295060,1,['config'],['config']
Modifiability,@jayantmukho Thanks for dealing with the python calls ... I think as soon as you deal with the two unused variables everything should be fine and we can merge that in!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-533469803:106,variab,variables,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-533469803,1,['variab'],['variables']
Modifiability,"@jayantmukho Thanks for taking the lead on that. This is long overdue ... I already talked to some people about that and the conclusion was often that we should get rid of the current python framework and rely solely on the in-memory python wrapper functionalities. From what I can tell this is also what you would suggest. I have some additional things to add here:. - We should keep in mind other things than ""just"" shape optimization problems.; - The surface parameterization should be more or less independent of all the other things, so that we can easily integrate other tools/methods. In a first step it might be a good idea to just put all the FFD stuff into a separate (c++) library with a python interface.; - As you already mentioned, I am currently working on a more general way of defining output fields and in particular also objective functions in #913. I will add more information to this PR soon. The new python implementation should, in theory, not need to know about the specific objective function, but rather just asks for the value and the (surface) gradient. ; - We have to expose more c++ classes/functions to python. Especially the config and the geometry. . Maybe I will add more stuff/ideas, but thats it for now. @clarkpede : We will probably keep most of the postprocessing stuff in c++, so don't worry about that at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/923#issuecomment-607708376:462,parameteriz,parameterization,462,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607708376,2,"['config', 'parameteriz']","['config', 'parameterization']"
Modifiability,"@jayantmukho The fix in PR in #921 is done. Whereas the shape optimization restart did not work before, it does work now, at least on the two test cases I checked. The only thing missing is a regression test, to make sure bugs like that don't happen again. So I agree that it should be merged soon while the long-term refactoring occurs. As for post-processing, the objective function calculation can be quite complex in the use-cases Beckett and I have encountered. That's why it's run as a post-processing step, rather than updated continuously during runtime. But I agree that those types of changes can be limited to the C++ side of the code, with minimal changes to the python wrappers. So it may not be relevant to the current refactoring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/923#issuecomment-607975492:318,refactor,refactoring,318,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607975492,2,['refactor'],['refactoring']
Modifiability,@jayantmukho Uh no I didn't have pkg-config before. Problem solved after I install it. Thank you so much!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/903#issuecomment-595963233:37,config,config,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595963233,1,['config'],['config']
Modifiability,"@lucaabergo Currently I only see the config options in the PR, I guess the source code of implementation is coming later? Or are you planning to interact with an external code?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1959#issuecomment-1480865617:37,config,config,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1959#issuecomment-1480865617,1,['config'],['config']
Modifiability,"@marcovanderbijl : thanks for the question. The original limit there is simply to impose an upper bound for memory considerations, since the first instantiation of the array of FFD boxes (before the number of FFD boxes embedded in the mesh is detected) needs a default value. We can of course change this to automatically detect the number to avoid the requirement or make it an input option in the config, but we have not run into this issue yet. For now, you should be able to increase that to a reasonable number without any issue. Please give it a try.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/684#issuecomment-495078497:399,config,config,399,https://su2code.github.io,https://github.com/su2code/SU2/issues/684#issuecomment-495078497,2,['config'],['config']
Modifiability,"@mheimgartner first of all congrats to this openend PR. For the builds in the tests, compiler warnings are treated like errors. I.e. the code compiles and works on your side but the test-builds won't if certain warnings are present (like unused variables). ; For more information where to look, see the `Details` button next to the individual builds. Click and wait a moment ... that will automatically scroll down for you. ; The failing builds will be for the same code bits probably, so looking at BaseNoMPI for the start should suffice. To look in the `Details` and change code from there might be tedious so you can see the warnings locally by setting `./meson.py <your build folder> ... --warnlevel=3 ...`. Work through the warnings until there are none left -> commit the changes and push. That will probably calm the compiler-warnings-are-errors gods and grant you access to the regression test",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332#issuecomment-885546022:245,variab,variables,245,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-885546022,1,['variab'],['variables']
Modifiability,"@mheimgartner it would be helpful to compare the full residual history of the two regression Testcases before and after this last commit. (you prob already have the ""old"" histories and just have to do 2 new ones, you know best how the case beahaves etc). The commit I added will fail the regression test but I strongly believe the Pseudo-time update, convective and viscous Jacobians were wrong. . A reason this went unnoticed might be because the densities were O(1), so disregarding them in the solution update after the Linear Solver acts some kind of Relaxation Factor (which can be larger 1 depending whether density < or > 1). And I guess that could be fixed via CFL or this CFLReductionFactor anyway.; The Jacobians were taking with respect to Y alone, which is not correct. They have to be taken with respect with rho*Y, the transported variable imo. The conv Jacobian is arguably the most important one (and tested alone showed the biggest lift in residual improvement). ; I briefly checked the BC's and DualTimeRes for this Jacobian problem. For the BC's I found no hand-derived Jacobians and DualTimeRes seems ok (but is not used afaik).; Note that if one got a case to convergence(=> Res ~=0) the Jacobians and pseudo time derivative do not matter of course at that point. So comparing fully converged solution should show only marginal/no differences. A little test showed mild benefits after 10 iter with the C6_vel_inl (but only 5 LinSolIter ... aint nobody got time for 50). old; Iter| rms p ....... | rms u ....... | rms v ......... | rms scalar; 10| -5.707858| -4.397627| -4.445825| -5.408779|; new; 10| -5.701236| -4.405045| -4.460350| -5.473466|",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447:845,variab,variable,845,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447,1,['variab'],['variable']
Modifiability,"@monika1387 I suggest you to switch to the INRIA pyAMG to do your mesh adaptation (https://pyamg.saclay.inria.fr). There are a couple of elements you need to keep in mind to use it: 1) at present, it seems to work with a specific branch of SU2 (see the link in the pyAMG website), 2) while working on it with INRIA people we found an issue with a file named ""amg.py"" which resides in the SU2_PY/SU2/run folder. I suggest you to replace that with the one attached here.; Please let me know if this works out for you. #!/usr/bin/env python. ## \file adjoint.py; # \brief python package for running mesh adaptation using the AMG Inria library; # \author Victorien Menier; # \version 6.0.0 ""Falcon""; #; # The current SU2 release has been coordinated by the; # SU2 International Developers Society <www.su2devsociety.org>; # with selected contributions from the open-source community.; #; # The main research teams contributing to the current release are:; # - Prof. Juan J. Alonso's group at Stanford University.; # - Prof. Piero Colonna's group at Delft University of Technology.; # - Prof. Nicolas R. Gauger's group at Kaiserslautern University of Technology.; # - Prof. Alberto Guardone's group at Polytechnic University of Milan.; # - Prof. Rafael Palacios' group at Imperial College London.; # - Prof. Vincent Terrapon's group at the University of Liege.; # - Prof. Edwin van der Weide's group at the University of Twente.; # - Lab. of New Concepts in Aeronautics at Tech. Institute of Aeronautics.; #; # Copyright 2012-2018, Francisco D. Palacios, Thomas D. Economon,; # Tim Albring, and the SU2 contributors.; #; # SU2 is free software; you can redistribute it and/or; # modify it under the terms of the GNU Lesser General Public; # License as published by the Free Software Foundation; either; # version 2.1 of the License, or (at your option) any later version.; #; # SU2 is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERC",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:71,adapt,adaptation,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,2,['adapt'],['adaptation']
Modifiability,"@monika1387 There are numerous bugs and difficulties with SU2's in-house mesh adaptivity. Without knowing more specifics about your problem (e.g. seeing your *.cfg file), it's hard to know what the problem is. For example, you should probably *not* be using the `SUPERSONIC_SHOCK` mesh adaptivity option. It seems to be ad-hoc and not generalized to arbitrary shock positions. If you want help with SU2's in-house mesh adaptation, could you post your *.cfg file?. Based on comments by @bmunguia and @MarcoFossati, it seems like you've got a bit of an [X/Y problem](https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem). You could try to fix the problems with SU2's in-house mesh adaptivity. But the bigger question is ""What's the best way to do mesh adaptation in SU2?"" For that, INRIA's AMG library may be the best solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-505438349:78,adapt,adaptivity,78,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-505438349,5,['adapt'],"['adaptation', 'adaptivity']"
Modifiability,"@oleburghardt I figured why `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution)` was being executed, but as the FSI problem is multi-zone adjoint, it is required that `config->GetMultizone_Problem() = true` even when we are not using the driver `CDiscAdjMultizoneDriver`. . There is, of course, the possibility to set a specific boolean for these test cases in particular, but I think that would over-complicate the code. Else, it should be possible to extend the index based to the rest of the features required (geometry and structural solvers), which would be my preferred option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542204060:194,config,config,194,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542204060,2,"['config', 'extend']","['config', 'extend']"
Modifiability,"@patelha57, I want to express my gratitude for your contribution. Your efforts are truly appreciated. However, I wanted to share some of my observations regarding the implementation, with all due respect. In my humble opinion (IMHO), there seem to be a few flaws in the current implementation, particularly when it comes to setting the Mach number and Reynolds number. It appears that SU2 offers different fluid models, and in order to access the speed of sound for the far field, the following line of code may be more appropriate:. ```cpp; Mach2Vel_FreeStream = auxFluidModel->GetSoundSpeed();; ```. rather than using:. ```cpp; su2double SoundSpeed = sqrt(Gamma * Gas_Constant * Temperature);; ```. Perhaps these concerns can be addressed in the review of your PR. Similarly, I noticed that changing the Reynolds number doesn't seem to have any effect. It should modify certain variables, which are likely addressed in this section of the code: [link to the relevant code](https://github.com/su2code/SU2/blob/c435309e2a4ffd992b89c5b3bb252cb4af9fa990/SU2_CFD/src/solvers/CEulerSolver.cpp#L909-L928). Additionally, it would be helpful to include a check to warn the user if the initialization is based on thermodynamic quantities. Once again, I want to express my deep appreciation for your contributions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2045#issuecomment-1579449075:880,variab,variables,880,https://su2code.github.io,https://github.com/su2code/SU2/pull/2045#issuecomment-1579449075,1,['variab'],['variables']
Modifiability,@pcarruscag . Fell free to check and merge. I will refactor screen outputs later in the logging implementation,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1988#issuecomment-1491542559:51,refactor,refactor,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/1988#issuecomment-1491542559,1,['refactor'],['refactor']
Modifiability,"@pcarruscag . a) I have done that. I get the same error.; b) Linux is the OS; c) The output of mpirun --version is; HYDRA build details:; Version: 3.2.1; Release Date: Fri Nov 10 20:21:01 CST 2017; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=/app/mpich-3.2.1' '--cache-file=/dev/null' '--srcdir=.' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=-lpthread ' 'CPPFLAGS= -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/openpa/src -I/app/setups/mpich-3.2.1/src/openpa/src -D_REENTRANT -I/app/setups/mpich-3.2.1/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. The output of mpicxx --version is. g++ (GCC) 5.5.0; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. d) The configuration of meson:. ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-tecio=false -Dwith-mpi=disabled -Denable-cgns=false --prefix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C+",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620552610:251,Config,Configure,251,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610,1,['Config'],['Configure']
Modifiability,"@pcarruscag ; Hello, I solved the question with adding some code to ```CSurfaceMovement.cpp```.; The following is my specific added code:; ```; ...; 557: else if ((config->GetDesign_Variable(0) == ROTATION) || (config->GetDesign_Variable(0) == TRANSLATION) ||; 558: (config->GetDesign_Variable(0) == SCALE) || (config->GetDesign_Variable(0) == HICKS_HENNE) ||; 559: (config->GetDesign_Variable(0) == SURFACE_BUMP) || (config->GetDesign_Variable(0) == ANGLE_OF_ATTACK) ||; 560: (config->GetDesign_Variable(0) == CST)) {; 561: /*--- Apply rotation, displacement and stretching design variables (this; 562: should be done before the bump function design variables) ---*/; 563: ; 564: for (iDV = 0; iDV < config->GetnDV(); iDV++) {; 565: switch (config->GetDesign_Variable(iDV)) {; 566: case SCALE:; 567: SetScale(geometry, config, iDV, false);; 568: break;; 569: case TRANSLATION:; 570: SetTranslation(geometry, config, iDV, false);; 571: break;; 572: case ROTATION:; 573: SetRotation(geometry, config, iDV, false);; 574: break;; 575: }; 576: }; 577: ; 578: /*--- Apply the design variables to the control point position ---*/; 579: ; 580: for (iDV = 0; iDV < config->GetnDV(); iDV++) {; 581: switch (config->GetDesign_Variable(iDV)) {; 582: case HICKS_HENNE:; 583: SetHicksHenne(geometry, config, iDV, false);; 584: break;; 585: }; 586: }; 587: ; 588: /*--- Apply the design variables to the control point position ---*/; 589: ; 590: for (iDV = 0; iDV < config->GetnDV(); iDV++) {; 591: switch (config->GetDesign_Variable(iDV)) {; 592: case CST:; 593: SetCST(geometry, config, iDV, false);; 594: break;; 595: }; 596: }; ...; ```. I add ; ```; (config->GetDesign_Variable(0) == CST)) ; ``` ; in line 560 and add ; ```; for (iDV = 0; iDV < config->GetnDV(); iDV++) {; switch (config->GetDesign_Variable(iDV)) {; case CST:; SetCST(geometry, config, iDV, false);; break;; }; }; ```; in line 590~596. Then I recompiled it and run ```SU2_DEF naca0012.cfg``` , it worked as expected. But I'm not sure if the ad",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2123#issuecomment-1703314305:164,config,config,164,https://su2code.github.io,https://github.com/su2code/SU2/issues/2123#issuecomment-1703314305,22,"['config', 'variab']","['config', 'variables']"
Modifiability,"@pcarruscag ; [config-and-makefile-for-scotch-and-pastix.zip](https://github.com/su2code/SU2/files/6959270/config-and-makefile-for-scotch-and-pastix.zip). So very good news, I compiled successfully on Fedora 34 using GCC-11.2 and OpenMPI-4.1.1 using Scotch-6.0.6 and Pastix-5.2.3. I have attached the relevant config and make-file with my relevant edits for reference. Newer openmpi works if you are willing to edit the CCFLAGS pointing to their bin, lib and include file. Currently had no issues running test cases such as fea and aeroelastic. However I don't know which one specifically uses pastix so i can test that but if you do know, let me know. I disabled forward mode ad during meson config so I didn't run into the error. I also enabled shared libraries for both scotch and pastix. . Looking forward to your response =)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1349#issuecomment-895748919:15,config,config-and-makefile-for-scotch-and-pastix,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895748919,4,['config'],"['config', 'config-and-makefile-for-scotch-and-pastix']"
Modifiability,"@pcarruscag @WallyMaier ; I think I've adressed most of what you spotted in the latest commits. Thanks for taking so much care - you already helped me a lot getting everything ready to enter the main version, especially concerning the just-for-development adaptions that I had forgotten about. @TobiKattmann ; I sneaked in another commit for primal CHT that _might_ help with your issue. I'm still running tests that might confirm my guesswork. (Though you can already try it by setting `CHT_ROBIN= NO` which will then just directly apply heat fluxes.) I'm coming back to this once I'm sure about it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774#issuecomment-538411667:256,adapt,adaptions,256,https://su2code.github.io,https://github.com/su2code/SU2/pull/774#issuecomment-538411667,1,['adapt'],['adaptions']
Modifiability,@pcarruscag For me its fine if you do it in a separate PR. @economon I also assume that is has something to do with how the interfaces are handled. We definitely have to check it. For now in PR #715 I enabled grid movement (in the config) also in fixed zones.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-505477458:231,config,config,231,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-505477458,1,['config'],['config']
Modifiability,"@pcarruscag For the 2D flamelet approach, the first 2 transported scalars are always ""progress variable"" and ""total enthalpy"". If I want to use ""ProgressVariable"" and TotalEnthalpy"" as names in custom outputs/objectives, I have to add these to CPrimitiveIndices.hpp?. In the config file, a user can optionally define additional transported species, and we also give them names like ""Y_CO"",""X_NOx"". Can we use these names from the config file in the same way?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1514329442:95,variab,variable,95,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1514329442,3,"['config', 'variab']","['config', 'variable']"
Modifiability,"@pcarruscag Hi Pedro, sorry to bother you again, I read the ""develop"" branch and noticed that you made some changes a month ago, such as redefined InletPtotal instead of the previous Inlet_Ptotal, I guess is to disambiguate some definition? And the error I got probably related with it. In this case, I think I should better also use the ""develop"" version. Is the building process same as here? https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327#issuecomment-2241513266:452,config,configuration-and-compilation,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327#issuecomment-2241513266,1,['config'],['configuration-and-compilation']
Modifiability,"@pcarruscag I tried to restart the solution with zero mach number for config. However, for some reason, convergence takes so much longer than simply solving mach=0.1 config. Indeed, i started my simulation when you post your suggestion and it still haven't converged yet. Residual getting smaller but it is so slow. Therefore it might not be an efficient solution. Thanks for advice anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-632892959:70,config,config,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-632892959,4,['config'],['config']
Modifiability,"@pcarruscag It crashes when it get to writing the output files. Where can I try VOLUME_OUTPUT, in config file?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2103#issuecomment-1679163134:98,config,config,98,https://su2code.github.io,https://github.com/su2code/SU2/issues/2103#issuecomment-1679163134,1,['config'],['config']
Modifiability,"@pcarruscag PTAL what would be the best way to handle variable declarations with the switch statement? Either they all need to be pre-declared at the top of the function, or I can declare them inline and restrict the scope, but then the residual computation needs to take place in each case. Which of these ways would be preferred?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1882#issuecomment-1399842680:54,variab,variable,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/1882#issuecomment-1399842680,1,['variab'],['variable']
Modifiability,@pcarruscag Thanks for approving the pull request. Your advice has been immensely important for me to complete this. I hope this is merged timely to avoid any further changes with the develop branch. I will update the config template and add a test case to the repo soon.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815#issuecomment-589673332:218,config,config,218,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-589673332,1,['config'],['config']
Modifiability,"@pcarruscag Thanks. I already incorporated your comments!. I extended the expressions to the volume output fields. Similar to the `SCREEN_OUTPUT` you can now define custom volume field variables directly in the `VOLUME_OUTPUT` option, e.g,. `VOLUME_OUTPUT= COORDINATES, SOLUTION, {MOMENTUM_X/DENSITY}`. This required to remove all `-` in the field names for obvious reasons. Note that at the moment it is required that all fields used in the expression are also added manually to the output. I will probably make that automatic soon.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913#issuecomment-602785986:61,extend,extended,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-602785986,2,"['extend', 'variab']","['extended', 'variables']"
Modifiability,"@pcarruscag This works for me. Do you think this is OK or we need to do it different/more, maybe a config keyword to activate/deactivate, or other options?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2110#issuecomment-1704811794:99,config,config,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/2110#issuecomment-1704811794,1,['config'],['config']
Modifiability,"@pcarruscag Unfortunately, i tried to use ITER=99999 and it still gives zero result for every variable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-632647020:94,variab,variable,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-632647020,1,['variab'],['variable']
Modifiability,"@pcarruscag When you say that you rescaled all the variables, what do you mean? Using the built-in tuning parameters? Or in the python scripts? And for the deformations (which must have physical values when applied by SU2_DEF), how did you rescale those?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616833563:51,variab,variables,51,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616833563,1,['variab'],['variables']
Modifiability,"@pcarruscag Yes, completely forgot about this. I can probably bring the functionality back in without using or waiting for #774 to make the regression test pass. I'll talk to @rsanfer next week to split the config files into the new multi-zone format.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-538361577:207,config,config,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-538361577,1,['config'],['config']
Modifiability,"@pcarruscag Yes, we would have a group (or matrix, I guess) of CConfigs. We don't have to follow a rigorous ""one-config-per-class"" definition; we could make a lot of headway just by splitting things up very roughly. If I understand, you're thinking we would have to have a base class with lots of virtual functions, and then derived classes with specific implementations. I don't think that would be necessary. First off, that wouldn't solve any problems, since the base class would have to have virtual placeholders for all the config classes. Second, the respective solver classes know what calls they need to make. So they can just have a specific derived class as a parameter (e.g. `CIncSolverConfig`). They don't need an abstract base class because we expect the incompressible settings to incompressible settings, and we won't ever switch it out for any other type of settings. The derived classes (e.g. `CIncSolverConfig`) could implement their own config getters/setters, without having any matching virtual functions in the base Config class. That should allow us to keep our inlines and avoid dynamic dispatches. There may be other flaws with my thinking that i'm not seeing. I just wanted to put my idea out there so we can make more informed decisions. I can also move this discussion to a separate issue, if we want to flesh out this discussion more.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-501240303:113,config,config-per-class,113,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-501240303,4,"['Config', 'config']","['Config', 'config', 'config-per-class']"
Modifiability,"@pcarruscag sorry for being picky :D but I would like to have the double changed to passivedouble. In case someone needs a float we can name it passivefloat. Sometimes I use automated scripts to check for occurences of double variables, so we should use passivedouble whenever we can to avoid future confusions on whether the use of double is intentionally or not.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-426698341:226,variab,variables,226,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-426698341,1,['variab'],['variables']
Modifiability,"@pcarruscag thank you for your answer.; We have tried running the 3D case using periodic boundary conditions.; The results are here reported:. ![roe_jst_addenda](https://user-images.githubusercontent.com/53580993/117795264-4df49580-b24e-11eb-9aa0-d0f525bc9075.png). Using the ROE scheme there is no problem.; Using the JST scheme the result is better now, but there is still a difference of ~2 counts for the drag coefficient. The configuration files and the grids are attached here:; [Addenda_ROEvsJST.zip](https://github.com/su2code/SU2/files/6458287/Addenda_ROEvsJST.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1280#issuecomment-838761364:431,config,configuration,431,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-838761364,1,['config'],['configuration']
Modifiability,"@pcarruscag yes all the modification are in external. It is just that the LGTM C++ if failing because it is too old and can't cope with cmake syntax. Since I mainly copy pasted the source of hdf5 without modification, I don't really want to modify them for maintainability.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1500#issuecomment-1016692673:257,maintainab,maintainability,257,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1016692673,1,['maintainab'],['maintainability']
Modifiability,"@pcarruscag, @clarkpede , actually, I have used a anaconda environment. But `python ./meson.py build` do not find my anaconda environment. . As the [recommanded](https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/):. ![image](https://user-images.githubusercontent.com/29271051/159851833-8d3127ea-12f1-4ad5-ac07-60795b2bf62e.png). I have also set the environment variable:. ![image](https://user-images.githubusercontent.com/29271051/159852345-c0f93a83-70be-4934-a11a-42a0788ba22b.png). But it still do not work. Can I provide the location of python.exe?. Or how can I setup a anaconda environment to build su2?. After `conda activete SU2`, it still find another python environment:. ![image](https://user-images.githubusercontent.com/29271051/159874390-3d55a29f-c0d9-4016-8526-7a3bd4142763.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1575#issuecomment-1077026166:367,variab,variable,367,https://su2code.github.io,https://github.com/su2code/SU2/issues/1575#issuecomment-1077026166,1,['variab'],['variable']
Modifiability,"@pcarruscag, I have not built the MKL executable with meson yet. What I typically did when using configure is to use environment variables for the compiler and linker flags.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-526036812:97,config,configure,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-526036812,2,"['config', 'variab']","['configure', 'variables']"
Modifiability,"@pcarruscag, Nice.....; I saw the results and cross checked with reference results, they seems to be matching. I also observed that you have changed the mesh (adapted+boundary layer continuation for top wall). ; Seems like mesh was the culprit earlier?? (though inlet still seems to have minor issue but doesn't matter); Also see the attached experiment data file (in case you want to use)...; [Schulein_2004_expt.dat.gz](https://github.com/su2code/SU2/files/8799043/Schulein_2004_expt.dat.gz). Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1651#issuecomment-1141217827:159,adapt,adapted,159,https://su2code.github.io,https://github.com/su2code/SU2/pull/1651#issuecomment-1141217827,1,['adapt'],['adapted']
Modifiability,"@pcarruscag, my icpc version is 19.0.0.117 20180804....; The speed up is most likely also processor dependent. I ran this case on a Xeon(R) Gold 6140 CPU @ 2.30GHz with 24 Mb cache. Anyway, this is probably as fast as you can get the code to run with the current data structures. Maybe you can squeeze another 10 percent out of it, but that's most likely it. If we really want to speed things up, we need to change the data structures significantly (structure of arrays, a single array per variable, aligned memory allocation, padding arrays to a multiple of 8, no small loops over the number of dimensions, etc.) . As said before, I think we can get at least a factor of 4 in speed compared to the current version if we can use a significant number of SIMD loops, i.e. vectorization. However, I don't know how much support there is for a pretty much complete rewrite of the computational kernel. My two cents,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-524038333:490,variab,variable,490,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-524038333,2,"['rewrite', 'variab']","['rewrite', 'variable']"
Modifiability,"@petebachant: the paper that I linked earlier on this thread had some fairly simple examples similar to the one you propose.. different flat plates and so on with varying y^+. You can likely reuse the grid(s) in the TestCases repo. @vdweide: it was very simple in this first implementation. It checks for a single boolean for whether or not to apply wall functions (WALL_FUNCTIONS= YES or NO, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L15339), and then assumes they should be applied to all no-slip walls (heat flux or isothermal, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L16653). This could of course be made more specific for individual markers using a config structure like MARKER_MONITORING to list them, or by making a dedicated BC type for it potentially.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327308587:796,config,config,796,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327308587,2,['config'],['config']
Modifiability,"@rsanfer I've only done it through the environment variables like Edwin suggests, and that is how I documented it. That way the libraries can be anywhere which is handy when you can't ""install"" them in the machine you want to run on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-423933257:51,variab,variables,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-423933257,1,['variab'],['variables']
Modifiability,"@rsanfer You shouldn't get in touch with the new AD routines at all unless you're using `CDiscAdjMultizoneDriver`.; So in case `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution)` gets executed, that likely means that the if-statement above, `config->GetMultizone_Problem()`, evaluates to true.; Some weeks ago I added another boolean (`CConfig::GetMultiphysicsDiscrete_Adjoint()`) but I was asked to revert that to the line above.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542170904:269,config,config,269,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542170904,1,['config'],['config']
Modifiability,"@rsanfer, you can always specify the lapack libraries by setting the environment variables LDFLAGS and LIBS. This is what I do and it gives you more control than specifying it in configure.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-423923605:81,variab,variables,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-423923605,2,"['config', 'variab']","['configure', 'variables']"
Modifiability,"@talbring : great progress! As previously discussed, I think this goes in the correct direction.. I would love to see completely customizable obj/constraints/parameters in a flexible way, for any problem a user can dream up. Like @clarkpede says, sometimes the objectives can require some heavy lifting (and require many local solution variables), and this thing is quite difficult to implement currently (it would be great if things like #889 were made easier). Do you think the language parser can eventually be used for this, or do you think we should just stick to writing those implementations in the COutput classes for each problem type (flow, elasticity, heat, etc).?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913#issuecomment-609965745:174,flexible,flexible,174,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-609965745,2,"['flexible', 'variab']","['flexible', 'variables']"
Modifiability,"@talbring ; when I run . `parallel_computation.py -f turb_ONERAM6.cfg -n 8; `; I get errors due to three other configuration parameters, which I had to comment out to be able to run this example. These are:. ```; SOLUTION_LIN_FILENAME: invalid option name. Check current SU2 options in config_template.cfg.; RESTART_LIN_FILENAME: invalid option name. Check current SU2 options in config_template.cfg.; SURFACE_LIN_FILENAME: invalid option name. Check current SU2 options in config_template.cfg.; ```; Are this lines supposed to be there? I'm not sure, reason why I'm letting you know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/391#issuecomment-300506190:111,config,configuration,111,https://su2code.github.io,https://github.com/su2code/SU2/pull/391#issuecomment-300506190,1,['config'],['configuration']
Modifiability,@talbring How do I clean and rebuild the configuration?. Regards; Suman,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-619956807:41,config,configuration,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619956807,1,['config'],['configuration']
Modifiability,"@talbring I am successful with configuring SU2 using meson.py. However, while installing using ninja I get the following error. [100/846] Compiling C++ object 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o'.; FAILED: externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o ; icpc -Iexternals/tecio/teciompisrc/c3ca80e@@teciompi@sta -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -Iexternals/tecio/teciompisrc/../ -I../externals/tecio/teciompisrc/../ -Iexternals/tecio/teciompisrc/./ -I../externals/tecio/teciompisrc/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -fpermissive -DUSEENUM -DTECIOMPI -DTHREED -DMAKEARCHIVE -DNO_ASSERTS -DNO_THIRD_PARTY_LIBS -DTP_PROJECT_USES_BOOST -DBOOST_ALL_NO_LIB -DLINUX -DLINUX64 -MD -MQ 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -MF 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o.d' -o 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -c ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; In file included from /usr/local/include/boost/type_traits/is_complete.hpp(15),; from /usr/local/include/boost/type_traits/is_convertible.hpp(17),; from ../externals/tecio/teciompisrc/../boost/iterator/interoperable.hpp(13),; from ../externals/tecio/teciompisrc/../boost/iterator/iterator_facade.hpp(11),; from /usr/local/include/boost/range/iterator_range_core.hpp(27),; from /usr/local/include/boost/range/iterator_range.hpp(13),; from ../externals/tecio/teciompisrc/../boost/assign/list_of.hpp(20),; from ../externals/tecio/teciompisrc/../boost/assign.hpp(20),; from ../externals/tecio/teciompisrc/fileStuff.h(7),; from .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-619968113:31,config,configuring,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619968113,1,['config'],['configuring']
Modifiability,"@talbring Sorry for not being more specific. The config file is actually into; `TestCases/optimization_rans/pitching_oneram6/turb_ONERAM6.cfg`. If this configs are actually not supposed to be there, I could make a pull request removing them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/391#issuecomment-300515238:49,config,config,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/391#issuecomment-300515238,2,['config'],"['config', 'configs']"
Modifiability,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/911#issuecomment-598751341:434,config,configuration-and-compilation,434,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341,6,['config'],"['configuration', 'configuration-and-compilation']"
Modifiability,"@talbring Thanks. That second link is very informative. I think that SU2 could really use a more advanced build process, and meson seems like a good candidate. As an example of why I think SU2 needs a better build process: Right now for AD builds, the build process listed in the tutorial asks you to use the `preconfigure.py` script to download and update the codi and medi git submodules. But there's a couple problems with the preconfigure script. It doesn't support out-of-source builds, and it expects all configure arguments to come in ""option=value"" pairs. A good build process (using CMake or meson) should allow adding submodules or external packages easily, without problems like these.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-500395507:511,config,configure,511,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-500395507,1,['config'],['configure']
Modifiability,"@talbring Yes, I do. I can't uninstall it since it breaks other packages. @pcarruscag Yeah same for me. You can see it here:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ mpicc -v; mpicc for MPICH version 3.3.2; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-pkgversion='Arch Linux 9.2.1+20200130-2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:356,Config,Configured,356,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474,5,"['Config', 'config', 'plugin']","['Configured', 'configure', 'plugin']"
Modifiability,"@talbring how do you want the ""interface"" to work for the user?; Do they modify meson.build?; Do they define environment variables for the root folder of each dependency? (I guess not); Do we force the installation directory? (not a good idea since some components can be installed with apt-get); Do we force them to link only statically / dynamically?; Also are you aware that linker flags for BLAS can be compiler dependent, especially for MKL?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-525688282:121,variab,variables,121,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-525688282,1,['variab'],['variables']
Modifiability,"@talbring, if you are concerned with implementing BC_Sym_Plane in CSolver and every derived class inheriting a default implementation, it can be named BC_Sym_Plane_Flow and then the compressible and incompressible solvers can call it from their implementation of BC_Sym_Plane. Anything is better than copy pasting code, as that will only make a future refactoring more difficult. By the way, I too think the implementation is very good and I really appreciate @TobiKattmann 's effort to document it from the theoretical and implementation point of view.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657#issuecomment-471325872:98,inherit,inheriting,98,https://su2code.github.io,https://github.com/su2code/SU2/pull/657#issuecomment-471325872,2,"['inherit', 'refactor']","['inheriting', 'refactoring']"
Modifiability,"@talbring, is it easy to add such a test to configure? I have no idea how to do this to be honest?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574#issuecomment-419802820:44,config,configure,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/574#issuecomment-419802820,1,['config'],['configure']
Modifiability,"@timjim333 it could be an issue with shared libraries, which ultimately is a path issue, as you suspected.; To verify it try opening a python shell, checking the version displayed (should be your 3.7.8) and try `import pyamg` in the shell. If the ""No such file or directory"" error shows up, it means pyamg was not correctly installed; otherwise it is in fact installed. In the latter case, you can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Fo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:422,config,configured,422,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['config'],['configured']
Modifiability,"@vdweide @pcarruscag ah ok, I wasn't sure how it was working on the RBF but seeing that there is no need for it to be in configure, it's better to clean it up as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-423941082:121,config,configure,121,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-423941082,1,['config'],['configure']
Modifiability,"@vdweide @talbring Ok, thanks you for all your thoughts and help troubleshooting this so far - I guess it might be the SU2 export plugin introducing this as I can't seem to identify the mesh issue within Pointwise itself. I'll contact support and leave a message here if any workarounds are found.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-495885490:130,plugin,plugin,130,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-495885490,1,['plugin'],['plugin']
Modifiability,"@vdweide agreed, but for the sake of not giving SU2 a bad rep, the MPI standard specifies those variables to be const (https://www.mpi-forum.org/docs/mpi-3.0/mpi30-report.pdf page 572 or 602 of the pdf) so this is a (small-ish) mpich 3.0 implementation issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587#issuecomment-424283842:96,variab,variables,96,https://su2code.github.io,https://github.com/su2code/SU2/issues/587#issuecomment-424283842,1,['variab'],['variables']
Modifiability,"@vdweide, I hacked the configuration scripts to clone Eigen into externals and added the required search paths and flags in configure.ac. I also put an include in blas_structure just to test and looks ok.; I suggest we both work on this branch (feature_test_eigen) and create a PR once we have a ""demo"" working.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460055024:23,config,configuration,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460055024,2,['config'],"['configuration', 'configure']"
Modifiability,"@vdweide, and what MKL flags do you use? The same you mentioned before?. On Thu, 29 Aug 2019, 07:00 Edwin van der Weide, <notifications@github.com>; wrote:. > @pcarruscag <https://github.com/pcarruscag>, I have not built the MKL; > executable with meson yet. What I typically did when using configure is to; > use environment variables for the compiler and linker flags.; >; > ‚Äî; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/771?email_source=notifications&email_token=AJCOXN5M6NECJGMGJEGDHGTQG5QXLA5CNFSM4IPIUEI2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5NK6TA#issuecomment-526036812>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AJCOXN23NPS4JJDU2VGK3NTQG5QXLANCNFSM4IPIUEIQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-526052883:291,config,configure,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-526052883,2,"['config', 'variab']","['configure', 'variables']"
Modifiability,"@vdweide: I cannot give you the geometry or the mesh because they are the property of an aircraft manufacturer, a colleague is going to check if he can provide a dummy geometry, similar to the one we are working onto. What I can give you is the config file (I still had to change some values related to the geometry). @hlkline: What I meant was that the meshes were generated using a multi block strategy. Before writing into SU2 or CGNS, they were converted in a proper unstructured format. I had indeed checked the surface solution, but not the volume one. And it seems that there are some weird cells (see attached screenshot). I will investigate. Thanks for your inputs!. [EBW2v2.txt](https://github.com/su2code/SU2/files/1999732/EBW2v2.txt). ![volume](https://user-images.githubusercontent.com/39187559/39983910-a25a9172-5759-11e8-9d5e-d7066ae95d00.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533#issuecomment-388723451:245,config,config,245,https://su2code.github.io,https://github.com/su2code/SU2/issues/533#issuecomment-388723451,1,['config'],['config']
Modifiability,"@yukaiweng: no problem on the repost. A couple comments... 1. I am not able to reproduce the problem on my mac, but I have a suspicion that the line endings in the text files could be causing an issue. Are you working on Windows? There may be a problem with the line endings that can resolved by using the ""dos2unix"" or ""unix2dos"" utility on linux that can format the file in the correct direction. Check this out any time you move files between Linux/Mac <-> Windows. 2. You can always convert between the two file types using the config options and restarting for one iteration, e.g. if you have a binary restart file and you restart with. WRT_BINARY_RESTART= NO; READ_BINARY_RESTART= YES; EXT_ITER= 1. you will get an ASCII restart upon completion. You can do also do this in the other direction to get a binary restart from ASCII. Hope this helps,; Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/477#issuecomment-347066655:532,config,config,532,https://su2code.github.io,https://github.com/su2code/SU2/issues/477#issuecomment-347066655,1,['config'],['config']
Modifiability,"A short summary of the things I did in the additional commits:. - I added a consistent error handling that can be used throughout the code. For example if a marker is not specified the error looks like that: ; ```; -------------------------------- Error ---------------------------------; In ""short unsigned int CConfig::GetMarker_CfgFile_TagBound(std::__cxx11::string)"": ; ------------------------------------------------------------------------; The configuration file doesn't have any definition for marker airfoil; ------------------------------------------------------------------------; Exiting now ...; ```; or if a solution cannot be found:. ```; -------------------------------- Error ---------------------------------; In ""void CSolver::Read_SU2_Restart_Metadata(CGeometry*, CConfig*, bool, std::__cxx11::string)"": ; ------------------------------------------------------------------------; Unable to open SU2 restart file solution_flow.dat; ------------------------------------------------------------------------; Exiting now ...; ```; In case you want to throw an error, you can simply call the function `SU2_MPI::Error(""Error Message"", CURRENT_FUNCTION)` where `CURRENT_FUNCTION` is a predefined macro which expands to the name of the routine at compile time. I already replaced almost all error messages in the code. - More MPI functions are included in the MPI Wrapper. - The rank/size is now stored in most of the bigger classes and initialized in the constructor. That means there are no calls to MPI_Comm_rank / MPI_Comm_size anymore in every routine ... For convenience there is also a SU2_MPI::GetRank() / SU2_MPI::GetSize(), in case you need it outside of the main classes. Let me know what you think. Not everything I did has to stay the way I implemented it :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-347663941:452,config,configuration,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-347663941,2,['config'],['configuration']
Modifiability,"ALL; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -----------------------------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2095,config,config,2095,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,2,['config'],['config']
Modifiability,About the new CodeFactor issues: I aligned the x86_64 and aarch64 testVals so it is easier (for the naked eye) to compare the differences. But now CodeFactor complains about the extra spaces before the `=`. Should I remove the extra spaces or this could be configured to silent it somewhere ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619#issuecomment-1138426539:257,config,configured,257,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619#issuecomment-1138426539,1,['config'],['configured']
Modifiability,Actually I had a look at your branch and the way it is right now is not correct I believe because I had taken the other variables v and 1/y out of the derivative using the chain rule and combined them with the other derivatives to end up with the terms as they are now so only d(mu)/dy was missing. The AxiAuxVarGrad you are using is apparently d(v*mu/y)/dy so the other terms have to be different. I will change them. Why not just simply compute the viscosity gradient? Is there any reason not to pull the other variables out?. Is there not already an AuxVar being just v*mu or something? . Anyway I guess it will work the same either way,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-727969107:120,variab,variables,120,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-727969107,4,['variab'],['variables']
Modifiability,"Adam: I noticed you updated this PR with some changes. Are you happy with this change to the TecIO library now?. Also, it looks like you updated some of the configure to v1.15. Was this required for your changes? We typically use v1.12, which we ship with the source code in externals/autotools. This will be built for you automatically and autoreconf will be called if you use the SU2/bootstrap script.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/339#issuecomment-316291071:157,config,configure,157,https://su2code.github.io,https://github.com/su2code/SU2/pull/339#issuecomment-316291071,1,['config'],['configure']
Modifiability,"Added a node_inlet variable to hold the inlet flow properties and allow us to get dPdU, etc., for implicit solver with nemo convective schemes. We could get away with a single allocation if we put this with the node_infty allocation, but for now will leave in the BC function.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1372670747:19,variab,variable,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1372670747,1,['variab'],['variable']
Modifiability,Added a small comment to the config file to clarify the selection of time step Vs the CFL for unsteady simulations.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/218#issuecomment-164605469:29,config,config,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/218#issuecomment-164605469,1,['config'],['config']
Modifiability,"After a lot of configuring and reconfiguring, it turns out the above issue occurs when the system's meson is used instead of the meson.py that ships with SU2. However, I'm not sure this is correct behavior. Shouldn't the choice of the meson executable script be irrelevant? In other words, shouldn't the configuration be dependent on meson.build and not on meson.py? Using system's installed meson should produce the same result as using the meson.py that ships with SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1528#issuecomment-1022884747:15,config,configuring,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/1528#issuecomment-1022884747,2,['config'],"['configuration', 'configuring']"
Modifiability,"After hibernating on this over the winter, I finally had some time to put some work into this. I am in the process of running a number of cases. So far I have results for 2 RANS cases with mesh convergence studies. These can be seen at https://github.com/su2code/VandV . The repo contains the relevant meshes and configuration files for each mesh level. It might not be necessary to have the different config files since the only changes between them are CFL numbers and mesh filenames. We can discuss this. . The folder for each case also has a README.md file that presents the test case and some of the relevant results. This displays the information nicely in the repository page, and is a decent mock up of how it would look, if we decide to put it on the website. . I just wanted to share this to get initial reactions to how I have set the repo up. I haven't included any discussion about the actual results either, but that is something that can be added.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-470729235:313,config,configuration,313,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-470729235,2,['config'],"['config', 'configuration']"
Modifiability,After some testing I can report the following:. - With Jacobian contributions disabled convergence is greatly increased and on-par with the isothermal/heat flux configurations; - After around 12800 timesteps the solution diverges and SU2 crashes.; - For some reason the global flowfield is drastically different between convective and isothermal/adiabatic cases. As the convective case is somewhere between adiabatic and isothermal conditions this should not be the case. Here you can see a comparison of pressure between convective case (top) and isothermal case (bottom). The only difference is the type of boundary of the conical walls.; ![Comparison](https://github.com/su2code/SU2/assets/42602495/068a78c8-f469-4c6f-b80a-b594a5b79190). The same comparison by temperature:; ![Temperature](https://github.com/su2code/SU2/assets/42602495/022682f8-89a7-4a41-a004-1cfff96e6f70). I'm a bit lost as to what's happaning here...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1648290476:161,config,configurations,161,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1648290476,1,['config'],['configurations']
Modifiability,"Agree with Francisco: the best solution is to have an input parameter that can be used to scale the FD step size. I would suggest FD_REFERENCE_LENGTH to be created (and possibly specified in the config file). If FD_REFERENCE_LENGTH is not specified, then it could default to REF_LENGTH_MOMENT. Best,. Juan. On Mar 5, 2017, at 6:35 PM, Francisco Palacios <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi,. Yep, I changed that. I know that from the math point of view it doesn‚Äôt make a lot of sense but, from the practical point of view, it is useful. There are some cases, in which computing gradients using finite differences is the only choice. And with the shape_optimization script it was not possible to control the step size for the finite differences. The option for step size was only in finite_differences.py. The step size is scaled with the reference length because from the practical point of view, I have found that the size of the aircraft, wing, airfoil, is important to determine a meaningful step size. e.g. should we use the same step for an aircraft with a MAC of ~150in than for an airfoil with a chord of 1in. Remember that most of the times we are using FD when the adjoint is not converging‚Ä¶ so we have bad convergence of the direct problem (including some level of unsteadiness that we want to filter with the selection of the step size). In other words, with the right choice of the FD step size you can obtain, at least, an useful gradient‚Ä¶ and that number is somehow linked to the size of the aircraft, wing, or airfoil. The best solution would be to add the step size to the finite_differences.py and also to the shape_optimization.py (creating a new option in the config file)‚Ä¶ not a top priority, but I‚Äôll do it soon. Best,; Francisco. > On Mar 1, 2017, at 3:25 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:; >; > Bumping this issue. This has come up several times now for different people/projects. Is the",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/367#issuecomment-284300083:195,config,config,195,https://su2code.github.io,https://github.com/su2code/SU2/issues/367#issuecomment-284300083,1,['config'],['config']
Modifiability,"Agreed that libraries are great as long as they are optional - sometimes we need them for highly specialized tasks. Btw, is it possible to use your wrapper for other external solvers? For example, it might be worth testing with PETSc again soon for performance reasons. I would encourage making a single base interface for external solvers that talks to the existing structure in SU2, which never needs to change, and then creating the implementations for each solver that adapts the particular solver data structures to the fixed interface (similar with the grid readers and output routines). Is this easy to do now?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-524932838:473,adapt,adapts,473,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-524932838,1,['adapt'],['adapts']
Modifiability,"Agreed, but unfortunately, I think we need to modify how we currently have the test cases set up, because we have a chicken & egg problem. Both of these pull requests require changes to the configs that live in the other repo. Those need to be modified first for the tests to pass, but it seems unsustainable to require commits to separate repos to test the pull requests (this makes this very valuable feature tough to use). We might want to move the configs back into the SU2 repo so that folks can update their tests with their code commits. This way, we will see the green light and accept. On Jul 29, 2015, at 3:31 PM, Brendan Tracey <notifications@github.com<mailto:notifications@github.com>> wrote:. In general, you can wait for Travis to give the green light before merging into develop. This way develop stays working. In addition, when done merging usually I delete the branch to keep things clean. ‚Äî; Reply to this email directly or view it on GitHubhttps://github.com/su2code/SU2/pull/185#issuecomment-126116253.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/185#issuecomment-126116991:190,config,configs,190,https://su2code.github.io,https://github.com/su2code/SU2/pull/185#issuecomment-126116991,2,['config'],['configs']
Modifiability,Ah I just mean adding it to the meson.build file as an option and to provide the paths to headers/libraries. I am not in favor of doing it via environment variables ...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-525356822:155,variab,variables,155,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-525356822,1,['variab'],['variables']
Modifiability,"Ah sorry,; SU2_DOT mostly only uses OpenMP in the passive linear system, I'm not sure if @thomasdick Sobolev smoother has some recorded part that involves OpenMP.; For the python wrapper I usually set the number of threads with env var OMP_NUM_THREADS It may be a bit confusing for most users having to specify the number of threads when instantiating the driver :thinking: ; I think disc_adj_flow would be the easiest to adapt. Those tests print a sensitivity at a particular vertex of a marker to be checked by the regression script, so you would have to make sure that's only printed on one rank (for parallel AD).; disc_adj_fea should also be fine for hybrid AD.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1470288877:422,adapt,adapt,422,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1470288877,1,['adapt'],['adapt']
Modifiability,"Ah, nice catch, Devon. You're right, we don't actually need to include the --enable-tecio flag, since the configure process will try to include it by default. In your builds, did it find, compile, and link TECIO automatically for you?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/245#issuecomment-195547082:106,config,configure,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/245#issuecomment-195547082,1,['config'],['configure']
Modifiability,"Ah, that tutorial page is very important.. I don't think it was ever linked in the main wiki menu, but it is critical for making the options clear to the user (especially the surface handling). We need to make the design features as easy to use as possible - it is already hard enough for experts to use adjoints :). This is a good opportunity to move it over to the new repo where we are placing the tutorials here: https://su2code.github.io/Tutorials/docs/home/. The files, including the markdown, mesh, config, and images, can be moved to that repo. The markdown portion goes into the _docs directory, and we should make sure it's linked under the shape design tutorials. Do you have some time for this? Let me know if you need some help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/494#issuecomment-357458143:506,config,config,506,https://su2code.github.io,https://github.com/su2code/SU2/pull/494#issuecomment-357458143,2,['config'],['config']
Modifiability,"Ah, yes, I see the problem. You're probably right. Have the configs (and test results) in the SU2 repository, and keep the meshes in the test repository. . Thanks for the explanation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/185#issuecomment-126117513:60,config,configs,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/185#issuecomment-126117513,1,['config'],['configs']
Modifiability,"Akshay, regarding the convergence problems with SST_SUST, what free-stream values did you use? This model is more sensitive to free-stream values than SST, because for latter the turbulent variables dissipate. For SST_SUST I typically use. % Ratio of the turbulent and laminar viscosity in the free-stream (10.0); FREESTREAM_TURB2LAMVISCRATIO= 0.882; %; % Free stream turbulence intensitity, sqrt(2 k_inf/3)/U_inf (0.0005); FREESTREAM_TURBULENCEINTENSITY= 0.0007. Especially FREESTREAM_TURB2LAMVISCRATIO is much lower than the default version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-540140961:189,variab,variables,189,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-540140961,1,['variab'],['variables']
Modifiability,"All for improving the abstractions if possible. We did something similar for the scalar upwinding and the viscous schemes already. . My only comments, which you can probably guess already, are to make sure we don't take a large performance hit by adding more layers (for example, one can make an argument to remove the entire set of CNumerics classes and implement the methods more efficiently directly in the solver class with vectorization, etc) and that we maintain the flexibility for folks to quickly add new convective schemes which was the original motivation for the existing structure (and more layers could complicate this). Sounds like you're already considering these things, but it is important to find the right balance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-500942445:259,layers,layers,259,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-500942445,2,['layers'],['layers']
Modifiability,"All, . Regarding the steady test cases, Embraer folks published a paper of their efforts to validate SU2 using the DPW and HLPW geometries (https://doi.org/10.2514/6.2018-2845 <https://doi.org/10.2514/6.2018-2845>) in the last AVIATION. I think that they will be happy to contribute with the meshes and config files. . Also, I can contribute with some unsteady cases. I think that the Backward Facing Step and the Tandem Cylinder test cases are a good start. Best,. Eduardo; > ‚Äî; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/issues/581#issuecomment-423207120>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AJVmCdByjE1ogiSKp7fIos58GcRe-Rdlks5uc6e0gaJpZM4Ww0V4>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423260699:303,config,config,303,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423260699,1,['config'],['config']
Modifiability,"All,. Following this discussion, why not use something more descriptive for OBJECTIVE_FUNCTION? At the end of the day, it is meant as the functional, derived from the solution of the PDE, that we are solving the adjoint equations for. Then we use that adjoint field to compute gradients. How about ADJOINT_FUNCTIONAL? Or ADJ_FUNCTIONAL?. Best,. Juan. On Feb 22, 2016, at 8:34 AM, Francisco Palacios <notifications@github.com<mailto:notifications@github.com>> wrote:. Sorry for my late reply and thanks Heather for opening this important discussion.; I fully agree with you and OBJECTIVE_FUNCTION and OPT_OBJECTIVE cause confusion. As far I see the problem, if we focus on a typical users point of view, I think that OPT_OBJECTIVE and OPT_CONSTRAINT must be in the config file and as close as possible. They are the key to define an optimization problem (one of the key features of SU2). On the other hand, as you suggested we need to add some flexibility. It would be interesting to to able to define a multi-objective like; OPT_OBJECTIVE= DRAG \* DRAG_WEIGHT; LIFT^2 \* LIFT^2_WEIGHT;. As Tim pointed out OBJECTIVE_FUNCTION is important because is what we use to play and develop the adjoint capability but, from the users point of view it is not as interesting as the OPT_OBJECTIVE. If everything works ok, OPT_OBJECTIVE should be enough for most of the SU2 users. How many typical users are interested in solving and adjoint problem for the sake of solving of an adjoint problem?. However OBJECTIVE_FUNCTION is not a good name, from the point of view of the continuous adjoint, I would feel comfortable if we change it to ADJ_BND_CONDITION. That probably doesn't work for the discrete adjoint, isn't it? Tim, What key word would work for the Discrete Adjoint? We need something that reflect the effect, in mathematical terms, of the objective function in the AD adjoint problem. Finally, before adding any capability we should ask ourself how general is going to be and if it going to be useful for",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-187268164:764,config,config,764,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-187268164,1,['config'],['config']
Modifiability,"All,. I would agree that we need to look at an existing library and not re-develop one. The standard for dense linear algebra is LAPACK. It has been around forever, relies on BLAS routines, is currently being used in the SU2 higher-order DG-FEM solver. Various computer vendors (including GPU manufacturers) have spent many years optimizing BLAS and LAPACK calls on their own computer architectures. This means that your code is (a) portable and, by linking to the appropriate vendor-provided version of the library (say like Intel‚Äôs MKL), (b) you get highest performance. I am not familiar with Eigen (just looked at the web page), but there is an interesting comparison between Eigen and LAPACK (written by the developers of Eigen‚Ä¶take it with a grain of salt) here<http://eigen.tuxfamily.org/index.php?title=FAQ#How_does_Eigen_compare_to_BLAS.2FLAPACK.3F>. If all they say is true, then Eigen would be a very good choice. If it is a bit exaggerated, then maybe LAPACK is better. Does anyone have experience with Eigen? Are there any reasons why LAPACK is better? Can the folks involved in FV and DG-FEM solvers talk to each other before making a decision?. While PETSc is a wonderful library (and parallel), I would hesitate to use it as the solution for the problem that we are trying to solve: it is not the easiest thing to compile and it is most definitely not lightweight. If one also wanted to replace Krylov-space solvers and preconditioners in SU2 the PETSc might make more sense‚Ä¶.but it still forces the developer to conform to their view of the world (including matrix setup and decomposition). Best,. Juan. On Jan 31, 2019, at 4:43 PM, Brian Mungu√≠a <notifications@github.com<mailto:notifications@github.com>> wrote:. @EduardoMolina<https://github.com/EduardoMolina> and I have discussed this over the past few weeks and are also in favor of using an external library. I don't have a strong opinion on the library we choose, but he seems to be in favor of PETSc<https://www.mcs.anl.gov/p",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459566859:433,portab,portable,433,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459566859,1,['portab'],['portable']
Modifiability,"All,. Of course, another approach to verifying which sign is correct is to do an analytic differentiation (using CoDi?) or simply using complex-step on the residual calculation routine to get exact Jacobians (for a particular state) and confirm the correct sign. This does require some code extraction / refactoring to perform the test, but it has the benefit that you would know exactly what the correct answer is for the specific residual implementation. Best,. Juan. On Nov 16, 2018, at 11:03 AM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. As Jacobians affect convergence rate and not accuracy, you could do a quick test of the same problem with the current version and the sign flipped to see if there is measurable difference in the convergence rate. If yes, then it should give you a hint about which direction. If no, then we should still correct it, but prob don't need to put in too much effort. @clarkpede<https://github.com/clarkpede> : I'm interested in your unit testing set up... ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/609#issuecomment-439493827>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxInSS3cmLF8iFkD22AoYAp0G3G2yks5uvwvxgaJpZM4YeD9V>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439500791:304,refactor,refactoring,304,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439500791,2,['refactor'],['refactoring']
Modifiability,"All,. Thanks for getting this going. My two cents:. 1. Indeed, while these V&V cases and the TestCases directory / repo are not identical, there is some overlap‚Ä¶some of the TestCases are definitely validation cases too. We can continue to add test cases to the TestCases repo, knowing that only a subset of those cases belong in the V&V list. 2. An important aspect of the V&V is the convergence of the solution as the mesh is refined. As Jayant knows well, this can help us catch bugs. This means that a well-constructed V&V suite needs to include a series of meshes (of increasing density), the corresponding configuration files, and the actual experimental data (or other numerical data from runs on different solvers). I strongly agree with the suggestions made that (a) the entire V&V suite needs to be run before every major release (with configuration files updated), (b) that this should be linked form the main SU2 page, (c) that the 2014 AIAA paper (and Tom‚Äôs AVIATION 2018 paper) should serve as a starting point, (d) that the NASA TMR website can give us ideas of additional access, and (e) that the SU2 V&V page should be managed within GitHub.com<http://GitHub.com> so the entire community can edit / add to this / these page/s to continue to grow the number of cases and their relevance. Best,. Juan. On Sep 20, 2018, at 3:02 AM, Ruben Sanchez <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks, Pedro, I think that's a great idea. As you mention, we would have to work out the logistics as this would require quite a bit of implication from the community, but the extra burden on the release would be compensated by avoiding big ""updating"" operations every now and then. Also as most users only work with the released versions, so it's a way to ensure they always know what updates have happened / which new features are available. ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://git",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423207120:611,config,configuration,611,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423207120,2,['config'],['configuration']
Modifiability,"All,; If you have a look at ""feature_test_eigen"", I ""ported"" the JST ComputeResidual method.; I only changed the local variables of the method, so some temporaries are required to make things compatible with the outside world and with base class variables. Nevertheless, the performance is not worse (direct and discrete adjoint) and I think it reads better, but that is subjective.; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460671586:119,variab,variables,119,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460671586,2,['variab'],['variables']
Modifiability,"All: we will need all the help we can get to make a big documentation push for v7. Please do take some time and contribute to the new structure that @talbring is setting up. Even if you only have some time to work through the new documentation and find/correct typos or issues you find. I will be adding some governing equations to the solver sections very soon. As for documenting the config options, the best policy is that it is automatic. As has been done with the output and the dry run mode (-d), we can also do the same for all config options. They can be made self-describing by adding their description/comment directly into the code that creates the option in the C++, which can then be printed on request with a -h flag (or something similar). This is no doubt the way to go in my mind. But, that will likely be for after v7, so for now, let's invest in the docs, since they are critically important.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/775#issuecomment-543255462:386,config,config,386,https://su2code.github.io,https://github.com/su2code/SU2/issues/775#issuecomment-543255462,2,['config'],['config']
Modifiability,"Alright, so my above hunch was correct: that there was an assumption of dictionary key order. I switched that variable over to an ordered bunch and I believe all the tests are passing, despite one of them timing out. After addressing that, the entire repo (including the wrapper) should now be compatible with both Python 2 and Python 3, and is setup to be tested with both.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-340193114:110,variab,variable,110,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-340193114,1,['variab'],['variable']
Modifiability,"Alright. I did some digging, and the problem has nothing to do with the warning message. It goes much deeper. In a recent release, SU2 switched to reading and writing binary restart files instead of ASCII. The grid adaptation code is still written only for ASCII. If I'm right, then trying to read a binary restart file with the flow solution breaks the program. I'll submit an issue detailing the bug. For now, try adding the following lines to your cfg file when you run `SU2_CFD`:. %; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= NO; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= NO. Then run `SU2_MSH`, just like you have been. Does that clear things up?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-436131167:215,adapt,adaptation,215,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-436131167,2,['adapt'],['adaptation']
Modifiability,"Also since this issue is getting resolved, is there anyway or option I can; reduced number of variables in exported results? I tried using; VOLUME_OUTPUT= (COORDINATES, PRIMITIVE) deleted SOLUTIONS so that I can; able to reduce the size of file from redundant parameters which i don't; need as of now. But seems like that does not work either and exported .vtk; with same size. It supposed to work like that if I understand correctly. On Mon, Mar 16, 2020 at 6:53 PM Monika Chauhan <monika1387@vt.edu> wrote:. > @clarkepede Sure, I will try to make an example to show .; > So my problem is CD nozzle and I am running FEM-LES solver and exported; > data in .csv and PARAVIEW type. Everything seems good its just I was unable; > to visualize exported .vtk files (open but does not show me the final; > result- stuck in just opening it - I am not sure if its paraview issue or; > its 4 GB file which causing this error). So I tried to export my file using; > Tecplot type option but unable to do so and getting this Bus error which I; > never encountered earlier in SU2 ever (what is that error - YOUR; > APPLICATION TERMINATED WITH THE EXIT STRING: Bus error (signal 7)). So; > trying to dump my files in anyway to visualize them, since its FEM-LES; > solver with DG scheme so files are pretty huge. Still let me know if I need; > to send you an example. Attached .cfg file for reference.; >; >; >; > On Mon, Mar 16, 2020 at 6:13 PM Clark Pederson <notifications@github.com>; > wrote:; >; >> @monika1387 <https://github.com/monika1387> I'm sorry, I still don't; >> understand. Do you have a minimal working example, where you can reproduce; >> the problem you're having?; >>; >> Where does the error occur? In SU2_CFD? In SU2_SOL? In Paraview? In; >> Tecplot? What's the specific error message? What's the context?; >>; >> ‚Äî; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it on GitHub; >> <https://github.com/su2code/SU2/issues/787#issuecomment-599781328>,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-599795725:94,variab,variables,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-599795725,1,['variab'],['variables']
Modifiability,"Although my own participation with SU2 is now reduced due to pursuing other endeavors, I want to say that I hope that your future experiences with SU2 and the open-source community will be more positive, that I hope neither of you have been dissuaded from contributing here or on other open-source projects, and that this has been a good reminder that it is easy for things to get heated quickly, especially on the internet where tone of voice cannot be easily conveyed. . @SumanVajjala: ; conv_numerics‚ÜíComputeResidual is setting the fluxes inside of that function, and it uses the normal and flow variable information set at previous lines, ; conv_numerics‚ÜíSetNormal(Normal); (line 10290 in your example) ; conv_numerics‚ÜíSetPrimitive(V_domain, V_infty); (line 10433 in your example). ComputeResidual can be found in numerics_direct_mean.cpp, where you will see that SetResidual is handled differently depending on the numerical scheme chosen, and that calls to GetInviscidProjFlux are included. ; A similar pattern is followed in the other boundary conditions, although there may be more going on here which someone else may be able to comment on. . If you have any questions that are not bugs/code issues, SU2 also has a forum at: https://www.cfd-online.com/Forums/su2/. I also recommend using an IDE (xcode, eclipse, etc) to assist with navigating the code. Best,; Heather",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-314942908:599,variab,variable,599,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-314942908,1,['variab'],['variable']
Modifiability,"And here is a simple test case demonstrating potential use. A major benefit of the supersonic inlet is being able to model supersonic propulsion systems, such as a scramjet, where the propulsion system exit boundary is modeled as a supersonic inlet, with distinct properties from the farfield flow conditions. Here we have a two dimensional test case demonstrating the interaction of exhaust flow with free-stream flow at the exit plane of a 2D scramjet system. Flow conditions adapted from [A Design Method for Three-Dimensional Scramjet Nozzles with Shape Transition](https://arc-aiaa-org.stanford.idm.oclc.org/doi/abs/10.2514/1.B38293); Jens Kunze, Michael K. Smart, and Rowan Gollan; Journal of Propulsion and Power 2022 38:1, 3-17. <img width=""1262"" alt=""image"" src=""https://user-images.githubusercontent.com/44848904/211415971-b6122204-0d95-43ca-903b-d60fd6326c39.png"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1375043856:478,adapt,adapted,478,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1375043856,2,['adapt'],['adapted']
Modifiability,"And why is your Test repo so large?; Perhaps some data files would be happier living elsewhere?. I'm thinking that if your Tests load large mesh files, for example, these mesh files could be placed in a data repository (like Figshare, Data Dryad, Zenodo), and your configuration files for each test could fetch the data it needs. I would imagine that the input data does not change often (or perhaps ever?) and one permalink and DOI is better suited for data than a version-controlled repo.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72739420:265,config,configuration,265,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72739420,1,['config'],['configuration']
Modifiability,Another possibility would be to compress the boost files and uncompress it during configure/preconfigure. With tar.gz this reduces the size down to 15 MB.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-427287810:82,config,configure,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-427287810,1,['config'],['configure']
Modifiability,"Aok. For now, let's close this one, and please just raise another issue in the future if we need to clean configure.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/567#issuecomment-417519404:106,config,configure,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/567#issuecomment-417519404,1,['config'],['configure']
Modifiability,"Aok. Thanks for checking that. Let's see if we can figure out a workaround on this pull request to get everything sorted. Having the autotools versioning all lined up is very important for portability, and distclean is very handy when you're working with the AD build.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/235#issuecomment-182577919:189,portab,portability,189,https://su2code.github.io,https://github.com/su2code/SU2/pull/235#issuecomment-182577919,1,['portab'],['portability']
Modifiability,Apparently meson looks for ninja by just trying to execute the command `ninja` with the python call `Popen`. And I guess it depends on the python version (on our cluster we have 3.6) whether the current working dir is included in the search path or not ... Then it is unfortunately not possible skip the step in between to tell meson where to find ninja ... Then for now you'll have to do the following steps (as mentions by @TobiKattmann):. Build ninja in externals/ninja using `configure.py --bootstrap`; Add `externals/ninja` to the `PATH` variable; Run meson with `externals/meson/meson.py build`,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-495564089:480,config,configure,480,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-495564089,2,"['config', 'variab']","['configure', 'variable']"
Modifiability,"Are the compiler wrappers, mpicc and mpicxx, also installed? When I look in your log file it mentions ; ./configure: line 3362: /usr/bin/mpicxx: No such file or directory",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513849210:106,config,configure,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513849210,1,['config'],['configure']
Modifiability,Are you sure you're using the config file that corresponds to the current develop or master ? Because I don't see these options in TestCases/rans/oneram6/turb_oneram6.cfg,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/391#issuecomment-300510899:30,config,config,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/391#issuecomment-300510899,1,['config'],['config']
Modifiability,"As discussed I will follow your suggestions and implement the new procedure of specifying the turbulence models guaranteeing backwards compatibility of the config file. ; ; Besides, the baseline or standalone Spalart-Allmaras turbulence model currently implemented in SU2 is actually its ft2=0 variation, a.k.a noft2. To keep compatibility with previous SU2 versions results it is preferable to keep the current nomenclature, i.e., SA will refer to the SA-noft2 variant. In that sense, to introduce the actual baseline version an additional variant should be implemented, yesft2 :), corresponding to the standard model found in the literature. I will make sure to properly document this matter in the SU2 website.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1364#issuecomment-916890178:156,config,config,156,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-916890178,1,['config'],['config']
Modifiability,"As for the question I raised, Dr. Alonso mentioned the problem in an email he sent me. He said, ""We used [grid adaptation] successfully in tetrahedral meshes, but I do not believe the hexahedral adaptation was ever fully functional."". That matches my experience with a few tests I ran. After playing around a little, it seems like adaptivity for hexahedra was only partially finished. Many sections of the are implemented, but there seem to be both bugs and unfinished implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/487#issuecomment-355796302:111,adapt,adaptation,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/487#issuecomment-355796302,3,['adapt'],"['adaptation', 'adaptivity']"
Modifiability,"As much as bug reports and enhancements are also appreciated, we are not following the strict *see something, say something* policy :) we need more application of the *see something, do something* policy :D",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/796#issuecomment-537097526:27,enhance,enhancements,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/796#issuecomment-537097526,1,['enhance'],['enhancements']
Modifiability,"As the error message says, it cannot find ""Python.h"". This is again related to the Python wrapper compilation. If you really don't need it, I suggest you to just disable it when configuring your build (remove --enable-PY_WRAPPER). If you need the Python wrapper and if your Python is not located in a standard location on your supercomputer, you will have to manually modify the SU2_PY/pySU2/Makefile.am and put the right paths for the Python include and Python libs (I think similarly to what you did for mpi4py, see above)... Again, everything should be improved after #424 is merged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-349590138:178,config,configuring,178,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-349590138,1,['config'],['configuring']
Modifiability,"As we mentioned in the dev meeting where you exposed the problem, the implementation is not good for strongly coupled flows, and I would guess that it is worse for diffusion than convection (because diffusion is elliptic).; I suspect the main problem is that the linear system does not contain information from the other side of the interface, meaning the solution of the two domains is effectively decoupled.; You could try running the case at much lower CFL (below 1) even with an explicit method.; It is also possible that the current treatment could be improved, since it is an example of multiplicative Schwartz decomposition, maybe there is an ""optimal"" way of implementing that from a physics point of view. Just speculating here, but maybe it would help treating the interface as an outlet if flow is going out, and as an inlet if flow is coming in.; On the numerics side, you can also try hacking the MZ driver to use something more stable than block-Gauss-Seidel (e.g. some quasi-Newton thing for the interface). But those are all band-aids IMO, if you want a robust fluid-fluid interface you need the coupling to be present in the linear system. The simplest way to do that is to have an internal boundary and treat the problem as single zone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509:1112,coupling,coupling,1112,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509,2,['coupling'],['coupling']
Modifiability,"At some point we might have to clean up the configure script anyway, I guess :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/567#issuecomment-416889527:44,config,configure,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/567#issuecomment-416889527,1,['config'],['configure']
Modifiability,"Attached below is also my configuration file, if it is at all helpful. [laminar_config_unsteady.txt](https://github.com/su2code/SU2/files/10670340/laminar_config_unsteady.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1914#issuecomment-1419993517:26,config,configuration,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/1914#issuecomment-1419993517,1,['config'],['configuration']
Modifiability,"BTW, can I add any parameter (or environment variable) to the `meson.py` line (or to the `ninja` invocation) in order to force linking with `-lopen-pal -lopen-rte -lz`, as a temporary workaround to this problem? Note that I cannot use LDFLAGS because its contents would be put **before** libmpi.a so the link would fail anyway... Is there any other environment variable I can set for adding libraries **at the end** of the link line?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/867#issuecomment-583904096:45,variab,variable,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-583904096,2,['variab'],['variable']
Modifiability,"Both ‚Äò**rapidjson**‚Äô and ‚Äò**CoolProp**‚Äô are licensed under the shortest and simplest permissive **MIT** license. I am not an expert but whether indicating the text of the licenses and copyright marks at the beginning of each of my files is reasonable?. Honestly, I don‚Äôt like the idea to treat **rapidjson** as a git submodule because some **rapidjson** internals are Windows specific (e.g., _/include/rapidjson/msinttypes_ subfolder content) and I don‚Äôt really confident with Meson build setup procedure. . Actually, I generated the **all_cubics_extended_JSON_binary** variable in the following way.; **CoolProp** library contains dozens of json files from which I assembled the single file for my own needs. Then, I made some modifications to the _generate_headers.py_ file (under _/dev_ subfolder of the **CoolProp** root) and run it in order to translate my large json file into the C++ header file. The generated file is not as large (~1.3 MB) as it seems but verbose a little bit. Could you clarify what **tecplot** sources do you mean?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1402#issuecomment-942054879:570,variab,variable,570,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402#issuecomment-942054879,2,['variab'],['variable']
Modifiability,"By ""Sliding State layer"", do you mean a virtual `CVariable::GetSlidingMeshDonorVariable` that returns 0 by default, but forwards to `GetSolution` on the flow and `GetPrimitive` on the turb variables?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1344#issuecomment-892577112:189,variab,variables,189,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344#issuecomment-892577112,1,['variab'],['variables']
Modifiability,"By the way, I have another set up updates for you guys to consider that are; beyond the scope of this pull request. Let me know if you are waiting on me; to close the pull request or if you can do that. I put the recommended changes for the structure of config.py file in a gist; https://gist.github.com/spendres/7bbe6eb60fac1f2f148a that separates the; low level config errors validation. I also created a few unit test cases to; allow a controlled build up of regex checks without risk of breaking; previous bug fixes. Let me know. Steve. On Sat, Jan 10, 2015 at 11:34 PM, Steven Endres spendres@gmail.com wrote:. > thanks for the commands; > ; > On Sat, Jan 10, 2015 at 11:54 AM, Trent Lukaczyk <notifications@github.com; > ; > > wrote:; > > ; > > so now the file is being committed as deleted... please roll back to this; > > commit; > > spendres@6cbddbe; > > https://github.com/spendres/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > > ; > > here are the commands you can use --; > > Reset the index to the desired tree; > > ; > > git reset 6cbddbe; > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > > Move the branch pointer back to the previous HEAD; > > ; > > git reset --soft HEAD@{1}; > > ; > > git commit -m ""Revert to 6cbddbe; > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > > ""; > > Update working copy to reflect the new commit; > > ; > > git reset --hard; > > ; > > ‚Äî; > > Reply to this email directly or view it on GitHub; > > https://github.com/su2code/SU2/pull/144#issuecomment-69462490.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144#issuecomment-69498342:254,config,config,254,https://su2code.github.io,https://github.com/su2code/SU2/pull/144#issuecomment-69498342,2,['config'],['config']
Modifiability,CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15228,plugin,plugins,15228,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/sha,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18071,plugin,plugins,18071,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,Can we set Velocity_Ref to 1.0 and Alpha and Beta to 0.0 in case ModVel_Freestream is zero in SetNondinemsionalisation routine? There might some cases of pure rotation with zero free stream velocity which makes many variables in Pressure_Forces/Momentum_Forces/Friction_Forces undefined because Velocity_Ref goes to zero.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/472#issuecomment-346165153:216,variab,variables,216,https://su2code.github.io,https://github.com/su2code/SU2/pull/472#issuecomment-346165153,1,['variab'],['variables']
Modifiability,"Can you confirm what results you're actually getting with the `SUPERSONIC_SHOCK` option? I'm having trouble producing something like what you see in the figure above. When I run the `SUPERSONIC_SHOCK` option, I get no elements adapted (3626 elements for both cases). This has to due with how the supersonic shock refinement is set up, which seems ad-hoc. I don't think the `SUPERSONIC_SHOCK` option can be used for general cases. Other developers know more about this than me--that section of the code goes all the way back to v1.0 of SU2. Maybe @fpalacios or @economon can tell you more about the mesh adaptation?. You might also be interested in the recent collaboration between the SU2 developers and the developers of the INRIA-AMG library. It seems like SU2 development is moving away from in-house mesh adaptation codes and more towards leveraging the AMG library. There was a presentation about it back in 2016 [that you can find here](https://su2code.github.io/documents/su2_dev_alonso.pdf). There was also a talk about it at the recent SU2 conference that [you can watch here on YouTube](https://youtu.be/jkZaPsKDvvQ?t=16318).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-438766705:227,adapt,adapted,227,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-438766705,3,['adapt'],"['adaptation', 'adapted']"
Modifiability,"Can you describe a bit more the stopping strategy you want? The new output structure is much more flexible than before, and you can even use Cauchy criteria based on time averages (of pretty much any coefficient), with different windowing methods and so on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1304#issuecomment-862396862:98,flexible,flexible,98,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-862396862,1,['flexible'],['flexible']
Modifiability,"Charanya,. thanks for the detailed answer. Let me ask you some more info. Apparently, you where able to reproduce the results I had comparing the two code versions simply using different boundary conditions on the latest code version. Can you specify me how?. Tobi,. In the meanwhile, to narrow down the problem, I ran also a couple tests in 2D to seek confirmation. For the (Euler) **pitching_NACA64A010.cfg** test case in the repository I rerun the same test at AoA of 1 deg and removing the pitching (no mesh deforming). I attach config files and summaries relative to the test cases. [config_CFD_6_2_0.txt](https://github.com/su2code/SU2/files/3938858/config_CFD_6_2_0.txt); [Summary_6_2_0.txt](https://github.com/su2code/SU2/files/3938859/Summary_6_2_0.txt); [config_CFD_6_0_1.txt](https://github.com/su2code/SU2/files/3938863/config_CFD_6_0_1.txt); [Summary_6_0_1.txt](https://github.com/su2code/SU2/files/3938865/Summary_6_0_1.txt). In this case the situation is definitely better as the two solvers give the same results. It looks like it is an issue related to the 3D case. <img width=""1220"" alt=""Screenshot 2019-12-09 at 11 27 27"" src=""https://user-images.githubusercontent.com/23583209/70424365-f316a780-1a77-11ea-8f68-4fc83e188ed7.png"">. I also quote Charanya in saying that it is definitely good that convergence to same values is reached but the transient response is fundamental and holds physical/mathematical values (I think of Wagner et similia) :). I would also suggest to add a regression test in this sense. Best, ; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563150217:533,config,config,533,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563150217,2,['config'],['config']
Modifiability,"Checkout the small_fixes branch please, I hope the problem is ""that"" simple as I will not debug that function any further because it has the world record for nested loops. If it does not work you will have to hope for help from the turbo folks.; ```c++; for (iMarker = 0; iMarker < nMarker; iMarker++){; for (iMarkerTP=1; iMarkerTP < config->GetnMarker_Turbomachinery()+1; iMarkerTP++){; if (config->GetMarker_All_Turbomachinery(iMarker) == iMarkerTP){; if (config->GetMarker_All_TurbomachineryFlag(iMarker) == marker_flag){; for (iVertex = 0; iVertex < nVertex[iMarker]; iVertex++) {; iPoint = vertex[iMarker][iVertex]->GetNode();; for (jMarker = 0; jMarker < nMarker; jMarker++){; if (config->GetMarker_All_KindBC(jMarker) == PERIODIC_BOUNDARY) {; PeriodicBoundary = config->GetMarker_All_PerBound(jMarker);; jVertex = nodes->GetVertex(iPoint, jMarker);; if ((jVertex != -1) && (PeriodicBoundary == (val_iZone + 1))){; coord = nodes->GetCoord(iPoint);; switch (config->GetKind_TurboMachinery(val_iZone)){; case CENTRIFUGAL; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1219#issuecomment-790064117:334,config,config,334,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219#issuecomment-790064117,12,['config'],['config']
Modifiability,"Classic stale bot. There are only 2 fixes since the UR fix was merged into develop in #1057, the Inner vs TimeIter fix and turning off CFL adaptation for the discrete adjoint (which I just added). If we're holding off on any algorithmic changes, I guess the only thing to discuss is which CFL should be used for the discrete adjoint. As is, it'll use whatever's specified in CFL_NUMBER in the config file, but I'm personally in favor of storing the local CFL to reduce the bottleneck of the adjoint. This could also be part of a separate PR if you need the bug fixes yesterday.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-739058644:139,adapt,adaptation,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739058644,2,"['adapt', 'config']","['adaptation', 'config']"
Modifiability,Closer. It was just a versioning problem with the autotools. Looks like all we need to do now is clean up some old options left in the test case config files causing them to fail.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208#issuecomment-152448207:145,config,config,145,https://su2code.github.io,https://github.com/su2code/SU2/pull/208#issuecomment-152448207,1,['config'],['config']
Modifiability,Common/src/su2mpi.cpp (41) ; - M Common/src/vector_structure.cpp (46) ; - D Doxygen/Doxyfile (2368) ; - M INSTALL (2) ; - D Logo/logo_su2.jpg (0) ; - D Logo/su2_eagle.png (0) ; - M Makefile.am (32) ; - M Makefile.in (53) ; - D MeshTools/Matlab/MergeSU2.m (77) ; - D MeshTools/Matlab/ReadSU2.m (160) ; - D MeshTools/Matlab/WriteSU2.m (91) ; - D MeshTools/Matlab/angle2dcm.m (28) ; - D MeshTools/Matlab/example_MergeMeshes.m (38) ; - D MeshTools/Matlab/getElemTypeInfo.m (52) ; - D MeshTools/Matlab/mesh_bipara_1.su2 (38465) ; - D MeshTools/Matlab/mesh_bipara_2.su2 (3248) ; - D MeshTools/Matlab/plotElem.m (45) ; - D MeshTools/Matlab/plotFace.m (60) ; - D MeshTools/Matlab/plotMarkers.m (64) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux_x86_64 (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.macosx (112) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win (14) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win32 (33) ; - D MeshTools/PointwiseSU2plugin/Makefile (304) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.sln (64) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.suo (0) ; - D MeshTools/PointwiseSU2plugin/depend.sh (28) ; - D MeshTools/PointwiseSU2plugin/mkplugin (10) ; - D MeshTools/PointwiseSU2plugin/mkplugin.bat (82) ; - D MeshTools/PointwiseSU2plugin/mkplugin.tcl (422) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:13243,Plugin,PluginSDK,13243,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Plugin'],['PluginSDK']
Modifiability,"Config options and their options can be found in:; https://github.com/su2code/SU2/blob/master/config_template.cfg; As a part of the code repository, this document will remain up to date with whatever version of the code you have. I believe that this is the single document to which you refer. I apologize that its location or purpose may not have been clear - I will shortly go edit the wiki to see if I can make it clearer that this file exists. . Additionally, the file config_template_basic.cfg in the same directory is a shorter version with only the options most commonly used. . Further documentation of the config options is also available in the comments of:; https://github.com/su2code/SU2/blob/master/Common/src/config_structure.cpp. And although it has not been up to date as we moved towards the wiki and config file template rather than keeping doxygen up to date, additional documentation can be produced using the files in su2code/Documentation/Doxygen.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/183#issuecomment-111755617:0,Config,Config,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/183#issuecomment-111755617,5,"['Config', 'config']","['Config', 'config']"
Modifiability,"Config, mesh and inlet file for anyone who wants to run the code:; https://mailuc-my.sharepoint.com/:f:/g/personal/baigan_mail_uc_edu/Ep03wpFrJW1Hvwa73U_Sp6QBaZ_dNyyynRcwWZFCIMF0lQ?e=t5UZb4. @pcarruscag I re-wrote the entire code doing changes as you suggested. The code was working fine standalone as far as creating the CInletInterpolation pointer and interpolation functions are concerned. However, I get a segmentation error and the interpolation fails. I have tried to see if there are any memory issues but couldn't find any (as far as I know). I will appreciate any help. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815#issuecomment-581192013:0,Config,Config,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-581192013,1,['Config'],['Config']
Modifiability,"Cool results @jayantmukho, few questions (which maybe you have answered somewhere already); - If someone wants to play around with the same case, are your configs available somewhere? (asking for a friend); - The grid levels in the plots correspond to the meshes available through that link right?; - Did you run the other solvers yourself? If so how does the runtime compare?; - The non monotonic variation with LSQ+GG is a bit weird, did the case converge to the same level? (I had some cases that at very high CFL would stagnate and not converge properly)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-553517069:155,config,configs,155,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-553517069,1,['config'],['configs']
Modifiability,"Currently each variation/correction model has its unique name identification in SU2. In order to simultaneously combine multiple correction models to a given turbulence model I suggest the following:; - The config file option KIND_TURB_MODEL should specify only which turbulence model to use, i.e. SA or SST.; - Introduce an additional config file field TURB_MODEL_CORRECTIONS to indicate all variations/corrections to be considered. . Here an example,; % Specify turbulent model (NONE, SA, SST); KIND_TURB_MODEL= SA; % Turbulence model corrections (NONE, SA-EDW, SA-NOFT2, SA-COMP, SA-NEG, SA-QCR2000, SST-SUST); TURB_MODEL_CORRECTIONS= SA-EDW, SA-NEG. What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1066#issuecomment-906376697:207,config,config,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/1066#issuecomment-906376697,2,['config'],['config']
Modifiability,"D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8083,config,config-lite-,8083,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config-lite-']
Modifiability,Dear @EduardoMolina . can you try to generate the periodic mesh with the fortran code attached. After compiling the code you can run it as ./su2perio.exe < config_file.cfg ; The config file is the same you are using for the SU2_MSH. Let me know if it works. ; [su2_perio.tar.gz](https://github.com/su2code/SU2/files/1177849/su2_perio.tar.gz). regards. sv,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/416#issuecomment-318160225:178,config,config,178,https://su2code.github.io,https://github.com/su2code/SU2/issues/416#issuecomment-318160225,1,['config'],['config']
Modifiability,"Dear Dr Albring,. I just followed the procedures and included the files to create a test case to SU2_CFD_AD [a coarse mesh, a TargetCp.dat and a config file for an Arina nozzle. The coarse mesh is a 2000 triangles one; which is enough to give us an idea of the shockwave location and the geometry modifications. The next mesh I have would be an ~85000 elements which gives us a good information on the 27th function call]. ; I had some segmentation faults during long jobs: Is there some recommended tuning I can do on OS/HW or SU2 in order to minimize them?. With kind regards,. Jairo. > On Dec 7, 2018, at 09:45, Jairo Paes Cavalcante Filho <jairo.pcfilho@gmail.com> wrote:; > ; > Hello Dr. Albring,; > ; > Yes! Sorry for the delay due some internal presentations and events here.; > I just finished a small model and successfully tested it on openSUSE. I expect to upload it today.; > ; > With kind regards,; > ; > Jairo; > ; >> On Dec 7, 2018, at 06:35, Tim Albring <notifications@github.com <mailto:notifications@github.com>> wrote:; >> ; >> Hi Jairo,; >> ; >> what is the status here ? Is it possible to provide a simpler (smaller) case ?; >> ; >> ‚Äî; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-445175541>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180u4PogeqhPW9rrfY4mW705IYKjvhks5u2jZpgaJpZM4X34F2>.; >> ; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-445429636:145,config,config,145,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-445429636,2,['config'],['config']
Modifiability,"Dear Dr. Economon, . I just uploaded the mentioned files. I hope everything may be ok now. With kind regards,. Jairo. > On Jan 21, 2019, at 22:31, Thomas D. Economon <notifications@github.com> wrote:; > ; > @jaspe55 <https://github.com/jaspe55> : I have just cleaned up a couple of things and can confirm that your mesh file is there. However, we are missing the converged solution file (solution_flow.dat) and the target Cp file for inverse design.; > ; > Similar to the process for the mesh, can you please upload the solution file to the TestCases repo and the target Cp file to the SU2 code repo (alongside the config file)? Once the files are present, we can update the regression values in the serial_regression_AD.py and parallel_regression_AD.py files, and this PR will be ready to merge.; > ; > ‚Äî; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-456240798>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180tLXcO2Ht3-J3rmwCWlPKQutyTiUks5vFmoEgaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-456794388:615,config,config,615,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-456794388,1,['config'],['config']
Modifiability,"Dear Dr. Economon,. I just finished the run on AD with the files you have adjusted and it did; converge. I also have successfully run some simple inverse design tests; with a limit on the number of cycles.; Thank you very much for your guidance and help. With kind regards,. Jairo. On Wed, Jan 30, 2019 at 2:13 PM Thomas D. Economon <notifications@github.com>; wrote:. > *@economon* approved this pull request.; >; > LGMT. Thanks @jaspe55 <https://github.com/jaspe55>; >; > Just one request: I have adjusted the number of iterations for the; > regression test and updated the residual values in the python script. I; > also had to move around some files. Can you please run the case (to; > convergence) and verify that the results are what you expect? Note that the; > config file and target Cp are in the code repository and the mesh and; > solution file are in the testcases repository. If everything looks ok, then; > this is ready to be merged.; >; > ‚Äî; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/600#pullrequestreview-198200089>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Ac180hqzVnSUPCnSBkQrTPfIv0kIltygks5vIdKrgaJpZM4X34F2>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-459568514:769,config,config,769,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-459568514,2,['config'],['config']
Modifiability,"Dear Edwin,. Thanks for your quick response. I thoroughly verified my config file, AoA option was given only once. I am not getting any clue about this error. In-fact, I made only two modifications to the config file, which I have sent to Dr. Giuilo, yesterday. Those two are: 1. MARKER_ZONE_INTERFACE option from MARKER_FSI_INTERFACE 2. SST Turbulence model from SA. Then I arrived at new config file for the today downloaded code from develop branch. Hence I suspected minor mistake in any one of newly updated files to develop branch. Thanks & Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-318056745:70,config,config,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-318056745,3,['config'],['config']
Modifiability,"Dear Giuilo,. Congratulations! I would like to thank you for your patience in downloading and running the case. I have downloaded & installed the develop branch code afresh and tried to run the case with SST turbulence model, but unfortunately I got an error stating, ""AOA: option appears twice"", while reading the config file it self. I think it is due to little mistake with any of newly updated files. Please look into this matter once. . I am sorry for troubling you many times. Thanks & Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-318045988:315,config,config,315,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-318045988,1,['config'],['config']
Modifiability,"Dear Giuilo,. Thank you so much for your quick response. Here are answers for your questions:; 1. Restart files are in Binary format.; 2. I am running this simulation in parallel mode on 160 cores.; 3. Paraview output file(.vtk) is also having all the issues, what I faced with Tecplot file. I am very much ready to provide you the config & grid files, but grid file is approx. 394MB. Shall I send through drop box?. Thanks & Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-317359930:332,config,config,332,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-317359930,1,['config'],['config']
Modifiability,"Dear Heather,; I am analyzing a propeller of an UAV. I have static thrust measurements such that when I used Euler results I got 3.5 lbf thrust as compared to the measured 6 lbs. My next step was to perform an NS equation with SA turb model. I got 7 times over predicted results such that the mesh has a Y+ of less than 1. Then I thought of doing an SST but was not long enough that it gave me error with divergence. I have been setting up my SST case as per the tutorial example of NACA0012. However, I do not happen to see any entry with regards to eddy frequency etc. (usually required by SST) in the config file. Any guidance will be great.; Thanks; Jehan; From: Heather Kline notifications@github.com; To: su2code/SU2 SU2@noreply.github.com ; Sent: Tuesday, May 12, 2015 11:43 AM; Subject: [SU2] Feature deallocation (#174). Bringing this branch up to date with current develop branch. ; Various deallocation changes; Some regression tests fail but all run. (previously was not the case); You can view, comment on, or merge this pull request online at:; ¬†¬†https://github.com/su2code/SU2/pull/174; Commit Summary; - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working versi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:604,config,config,604,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['config'],['config']
Modifiability,"Dear Jyothi,. Just a couple of questions before start looking into this: can you please check/confirm that the restart files (the ones that are post-processed by the SU2_SOL) do not show any of such issues?; I am assuming you are running your simulation in parallel, can you also check if those wrong values are written in the tecplot output also if you run your computation serially (so that SU2_SOL is not needed)?; Last one, what about the paraview output? Is that one ok?. It would be great if you could provide the config file and the grid, so that I can reproduce the very same behaviour. Cheers,; Giuilo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-317345934:520,config,config,520,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-317345934,1,['config'],['config']
Modifiability,"Dear Jyothi,; regarding the error with the option AOA given twice. the problem is related to the fact that in your config file you are giving the option with the ""o"" lower case. If you update the option from ; ""AoA"" --> ""AOA"" it will work. regards. Salvo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-318158198:115,config,config,115,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-318158198,1,['config'],['config']
Modifiability,"Dear Jyothi,; thanks, I managed to download all files correctly.; I noticed that in your config file you are using the MARKER_FSI_INTERFACE option, which is actually outdated (currently it should read MARKER_ZONE_INTERFACE), so I am assuming that you are not running the latest version of the develop branch.; First, I would suggest you to update SU2 on your local server, as the issue might have been solved in one of the latest updates.; Indeed, I was able to run the test case and the output files look good using the latest version. By the way, I had troubles using the SA turbulence model (a segmentation fault which I have to investigate further, but the case run just fine using the SST model). Let me know if you still get the ""nan"" issue in the output files using the latest version of the develop branch. cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-317780215:89,config,config,89,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-317780215,1,['config'],['config']
Modifiability,"Dear SU2 Team Members,. Greetings! We are very happy to inform you that we are exploring the aerodynamic shape optimization script of SU2 R 5.0.0 (Raven) with different configurations. And we would also like to seek your assistance in connection with the following two issues:. We are not getting any clue on restarting procedure of the optimization process from previously finished cycles. Is there any way for exporting the intermediate / final optimized geometry as 3D CAD model. Thanking you in advance. Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/489#issuecomment-355968201:169,config,configurations,169,https://su2code.github.io,https://github.com/su2code/SU2/issues/489#issuecomment-355968201,1,['config'],['configurations']
Modifiability,"Dear Salvo,. Thanks a lot. I appreciate your observation in tracing out the cause of ""lower case o"" used in my config file. My AoA problem is solved. Just I replaced AoA with AOA, then the run took-off. But in earlier versions AoA option was working and never used AOA upto now. This is the first time I am using AOA in my config file. Anyway thanks once again. Regrads,; Jyothi Kumar Puttam.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-318276357:111,config,config,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-318276357,2,['config'],['config']
Modifiability,"Dear WenyinWei,; presently SU2 is interfaced with the INRIA AMG library for mesh adaptation. You can find all the necessary details and examples at https://pyamg.saclay.inria.fr. There are efforts going on in Stanford to connect it to goal-oriented adaptation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/743#issuecomment-514651250:81,adapt,adaptation,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/743#issuecomment-514651250,2,['adapt'],['adaptation']
Modifiability,"Dear all, ; I have added a pdf file here that includes some test case results obtained with our BC transition model. These zero pressure gradient and variable pressure gradient flat plate test cases are very popular for model validation. I have also included Eppler E387 airfoil results. I would appreciate if you have any 3-D test case and share it with me.; Looking forward to hear your feedback. ; Sincerely,; Samet. [BC_model_TestCaseResults.pdf](https://github.com/su2code/SU2/files/562425/BC_model_TestCaseResults.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257360833:150,variab,variable,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257360833,2,['variab'],['variable']
Modifiability,"Dear all,; Thank you very much for your comments!; I agree with you, transferring the velocity is definitely the best solution in the long run. However, as Pedro mentioned, there is also the case when a certain imposed deformation is set, without solving any structural system. This is the case of a forced motion. In the python script configuration files it is required to set the marker_fluid_load as this is the only way to make SU2 compute the tractions at that marker. Maybe, a solution to both needs, can be to make SU2 compute the tractions anyway for the wall boundary. . In this way, if you have the velocity at the interface, you can define this interface as also marker_fluid_load, the FSI bool will be true and the new BC_velocity will be used. If you do not have the velocity at the interface, you will avoid marker_fluid_load and SU2 will not fail trying to use bc_velocity. This will also give me more time to develop, from the python side, the required modifications to use the new interface. Please let me know your comments",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778585840:336,config,configuration,336,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778585840,1,['config'],['configuration']
Modifiability,"Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; ```; solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; }; ```; Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/918#issuecomment-603929367:204,adapt,adaptive,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603929367,4,"['Adapt', 'adapt', 'config']","['AdaptCFLNumber', 'adaptive', 'config']"
Modifiability,"Do you have openmpi installed? Also, did you rebuild using the `meson setup --wipe build` command or `meson configure build <flags>` followed by the wipe command? If you just reran the ninja command then perhaps that could be the reason. I faced this issue first when I installed SU2 with openmpi and then used the mpich executable. So you might want to look into that. About the pywrapper issue, is your python version >= 3.7? What is the error that you are facing?. Edit: I forgot to mention, I ran the parallel script using both the command that you mentioned, it works just fine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721555309:108,config,configure,108,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721555309,1,['config'],['configure']
Modifiability,"Do you have pkg-config installed? It uses pkg-config to look for the dependencies it required. You can check if you have pkg-config with `which pkg-config`. If you don't have it, you can install on your ubuntu through. `sudo apt-get install pkg-config`. If it still doesn't work, or if you already have pkg-config installed, the python3.pc needs to be found by the pkg-config. Usually done by setting a `PKG_CONFIG_PATH` environment variable that points to the relevant python3.pc file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/903#issuecomment-595955473:16,config,config,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595955473,8,"['config', 'variab']","['config', 'variable']"
Modifiability,"Do you mean I need to add this in the flow config file? I tried that, it didn't work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1287#issuecomment-843267186:43,config,config,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-843267186,1,['config'],['config']
Modifiability,"Documenting the plan discussed in our developers call this morning here:; * Put header and sources together ; * Remove separation between Common/, SU2_CFD/, etc.; * Each major folder becomes a library (geometry/, solvers/, etc.); * Keep some subdirectories in major folders (e.g., solvers/flow/); * Set up include paths in the meson build system to make #include statements clean in the source; * Will prob require removing automake as part of this, which can‚Äôt build these libraries in parallel. Still need to finish separating files first. Tasks:; * @talbring - iteration classes; * @jayantmukho - grid adaptation, ADT structure, grid movement; * @pcarruscag - AD structure, folders for fem_\* ; * @economon - fluid model. Somewhat related:; * Run a test to see how many formatting-related conflicts result from running clang-format on and then diffing two fairly different branches (@pcarruscag). Please add anything else I am missing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-631567733:605,adapt,adaptation,605,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-631567733,1,['adapt'],['adaptation']
Modifiability,Don't modify the configs to add default options. Just the template is enough,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2362#issuecomment-2405204259:17,config,configs,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/2362#issuecomment-2405204259,1,['config'],['configs']
Modifiability,Done. These options are all now exposed to the user in the configuration file directly (v3.2.9).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/107#issuecomment-102170781:59,config,configuration,59,https://su2code.github.io,https://github.com/su2code/SU2/issues/107#issuecomment-102170781,1,['config'],['configuration']
Modifiability,"Dr. Albring, our model do not require any other config option for now. If needed in the future, I would definitely ask you some help. Thank you for your reviews. Please let me know if any other things need to be fixed.; Samet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257394392:48,config,config,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257394392,1,['config'],['config']
Modifiability,"Dr. Albring,; I have one more issue.; The gamma_BC is a variable in my model that is computed in every cell, and its value is in between 0 and 1 (so that it controls production term on/off in that cell). I would like to write gamma_BC variable to a tecplot output file in order to see the laminar and turbulent regions. However, as a beginner level C++ user, I really couldn't figure out how the output routines work. Would you please help me on this? Is it a complicated work?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257569540:56,variab,variable,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257569540,2,['variab'],['variable']
Modifiability,"Dr. Economon,. I have tried to add Schubauer-Klebanoff natural transition case for regression tests as you requested.; In my forked code under develop branch, I have the .cfg file in ""Schubauer_Klebanoff"" folder under ""TestCases/transition"" folder, so the config file directory should be correctly set. However, about a month ago, Dr. Albring moved grid.su2 file somewhere else that I could not locate now, so I am not sure how the regression test code will locate the grid file :) Just in case, I am attaching the grid file that I used for regression test. . Should there be any problem, please let me know.; [grid.zip](https://github.com/su2code/SU2/files/633737/grid.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-265131364:256,config,config,256,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-265131364,1,['config'],['config']
Modifiability,"EOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16036,config,config,16036,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,"ERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: che",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:9899,config,configure,9899,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,6,['config'],['configure']
Modifiability,"Edwin,. I think it is a good idea to be able to have some level of control over the application of the wall functions on a marker-by-marker basis: as you say, it would be fairly common to have a wing marker where integration to the wall makes sense and a fuselage marker where wall functions (or even an inviscid BC) is the right thing to do. So let‚Äôs indeed do something like what Tom suggests (in the spirit of MARKER_MONITORING) so that one can control which markers get wall functions applied. If a list of markers is not specified in the config file, the default behavior should be that all no-slip walls get wall function BCs. If a list of markers is specified, then those and only those markers listed get wall function Bfs (with the others getting integration to the wall treatment). Now, what you point out in the second half of your message is the ultimate in flexibility: not only specifying wall functions in a subset of the no-slip wall markers, but also allowing for different kinds of wall functions to be used in those markers. I imagine that this would be a seldom used capability‚Ä¶but someone out there might have the need. I guess it does not seem to me that the coding of the most flexible logic is that much more complicated, so we may as well do that. If you guys think it is too complicated, the advertised options in the config file can allow some simpler behavior. My two cents,. Juan. On Sep 5, 2017, at 9:58 PM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Juan,. I think that having the flexibility to apply wall functions on only a subset of the viscous wall boundaries would be useful. E.g., if you are interested in a wing, you can apply integration to the wall there, but apply wall functions on the fuselage. My preference would be to have a dedicated BC type for that, i.e. Tom's second suggestion. Apart from this, we can have the different wall model types as a single input parameter, i.e. you apply the same wall model ty",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327377108:543,config,config,543,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327377108,2,['config'],['config']
Modifiability,Else after return is fine but I don't like the others.; Isolate declarations is not addressing the true problem. Variables should be declared when needed and made const if possible.; We cannot use auto for the return type of operations with su2double,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1989#issuecomment-1491794539:113,Variab,Variables,113,https://su2code.github.io,https://github.com/su2code/SU2/pull/1989#issuecomment-1491794539,1,['Variab'],['Variables']
Modifiability,"Eran,. I don't see the problem. The only thing you have to do before calling the configure script is to invoke autoreconf (which is included in all repos of any distribution). At the moment we have to do that most of the time anyway due to compatibility problems.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-423805426:81,config,configure,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-423805426,1,['config'],['configure']
Modifiability,"Ettore,. Thanks for submitting this. I thought you gave an excellent presentation at the SU2 Conference and the much better actuator disk model you and your colleagues have put together will surely be useful to many people. Thanks for participating and being a member of the SU2 Community. Please stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed‚Ä¶.maybe next year?). Best wishes,. Juan. > On Jun 18, 2020, at 1:27 AM, SaettaE <notifications@github.com> wrote:; > ; > Proposed Changes; > ; > Addition of a new actuator disk model with a variable load and swirl distributions along disk radius.; > ; > Contributors:; > Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; > EttoreSaetta, lorenzorusso07, rtogna.; > ; > Related Work; > ; > Introduction of new options in the config. file.; > Introduction of an additional input file that contains the propeller data.; > Introduction of additional c++ functions.; > Addition of code lines to existing functions preserving the original actuator disk model.; > ; > PR Checklist; > ; > [X ] I am submitting my contribution to the develop branch.; > My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; > [ X] My contribution is commented and consistent with SU2 style.; > I have added a test case that demonstrates my contribution, if necessary.; > I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/1027 <https://github.com/su2code/SU2/pull/1027>; > Commit Summary; > ; > Update config_template.cfg; > File Changes; > ; > M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5); > Patch Links:; > ; > https://github.com/su2code/SU2/pull/1027.patch <https://githu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454:586,variab,variable,586,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"FFD has had major improvements, including options in the config for controlling the set up. See also #213 #239 #330",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/116#issuecomment-360062909:57,config,config,57,https://su2code.github.io,https://github.com/su2code/SU2/issues/116#issuecomment-360062909,1,['config'],['config']
Modifiability,"FYI, just so I can keep debugging the RANS adaptation in feature_adap_sst, I've merged it into [feature_adap](https://github.com/su2code/SU2/tree/feature_adap). You should use feature_adap instead from here on out since feature_adap_sst will be pretty volatile. I'll modify my comment above in case anybody references this thread.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619421429:43,adapt,adaptation,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619421429,1,['adapt'],['adaptation']
Modifiability,"F_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:15982,config,config,15982,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:163,adapt,adaption,163,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720,4,"['Adapt', 'adapt', 'config']","['Adaptive', 'adaption', 'configuration']"
Modifiability,"First off, I love the changes. A cleanup of COuput and greater output flexibility were much needed. So let me see if I understand this code. Say that I, as a developer, want to add a new variable to the volume output. For example, I want the production of turbulent kinetic energy from the SST model during a compressible simulation. As a user, I can always add new outputs by adding new field names to the config file. But production isn't one of the (currently) available config-file options. So I would have to code it. First, I would obviously make sure that the production is properly stored in the turbulence variable class, with an accessor like `GetTurbProduction()`. Second, in `CFlowCompOutput::LoadVolumeData`, I would add to the appropriate place:. ```cpp; SetVolumeOutputValue(""PRODUCTION"", iPoint, Node_Turb->GetTurbProduction());; ```. Third, I would add `PRODUCTION` as a cfg input by adding the following line to `CFlowCompOutput::SetVolumeOutputFields`:. ```cpp; AddVolumeOutput(""PRODUCTION"", ""Turb_Production"", ""PRIMITVE""); ```. I could also split off production into its own output group by changing `PRIMITVE` to any other name. This name does not have to be registered anywhere else. In other words, I can change `PRIMITVE` to `SST_NUMERICS` and the only other place I need to put `SST_NUMERICS` is my cfg file. Finally, I could add either of the two following lines to my cfg file:; ```; VOLUME_OUTPUT= (COORDINATES, SOLUTION, PRODUCTION) ; VOLUME_OUTPUT= (COORDINATES, SOLUTION, SST_NUMERICS); ``` . Is this example correct? If not, what am I misunderstanding? What am I missing?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-514031723:187,variab,variable,187,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-514031723,4,"['config', 'variab']","['config', 'config-file', 'variable']"
Modifiability,"Fixed up the alignment issues, but I really think it is time that we move to an auto-formatter as a project (clang-format or another tool). It is not sustainable in a large project such as this to manually manage it. We can do it as a pre-commit hook, which is a bit harsh as it forces everyone to install the formatter and could cause issues at commit time for folks, or we could also do it as a GitHub action perhaps. For instance, ninja can already do this for us as a one liner: install clang-format, drop a .clang-format file into the root SU2/ directory, configure a build, cd into build folder and ```$ ninja clang-format``` = entire project auto-formatted into a style of our choosing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/969#issuecomment-625329082:561,config,configure,561,https://su2code.github.io,https://github.com/su2code/SU2/pull/969#issuecomment-625329082,1,['config'],['configure']
Modifiability,"Folks,. Any idea why the CodeFactor fails here? I just replaced the name of a variable in 4 lines. Also restarting the check for CodeFactor does not seem to work. Thanks,; Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1016#issuecomment-639018734:78,variab,variable,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/1016#issuecomment-639018734,1,['variab'],['variable']
Modifiability,"Food for thought: According to his most recent AIAA talk, Spalart himself has tried to keep the model variants ""modular."" Some of the variants are compatible with each other. For example, you can add a ""rotation-curvature correction"" and a ""compressiblity correction"". The NASA TMR catalogue reflects this design by stating ""These corrections can be applied individually or together in combination with the General Model."". A simple `SA_QCR` or `SA_COMP` naming scheme doesn't match the underlying design. On the user-facing side, separate config options might be better for some of the variations. On the code side, bit flags (Issue #770) might be a good way to gather all the model variants together into a single config option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/992#issuecomment-652446915:540,config,config,540,https://su2code.github.io,https://github.com/su2code/SU2/issues/992#issuecomment-652446915,4,['config'],['config']
Modifiability,"For SU2_DOT_AD the mesh deformation is differentiated manually, this is easy to do because it is a linear operation and the stiffness matrix does not depend on the design variables. You can read more about this kind of manual differentiation (forward and reverse) here: https://people.maths.ox.ac.uk/gilesm/files/NA-08-01.pdf. 1. If there is a better way please get involved in the optimization overall discussion. 2. Your interpretation of the sensitivities is correct. For clarity the FD mode of SU2_DOT is for use with the continuous adjoint only, for which the sensitivities at the surface already include the projection. 3. Not entirely sure if I understood. I think the interpretation of the boundary displacement sensitivities depends on how you initialize the adjoints. Formally what you should get is the product of the Jacobian transpose with the vector of adjoints you initialize. Those surface sensitivities are different from the ones in the file because they include the volume projection, whereas the ones in the file do not (they are the sensitivity wrt the surface nodes, but not considering that moving surface nodes also moves interior nodes).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1017#issuecomment-639520678:171,variab,variables,171,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-639520678,1,['variab'],['variables']
Modifiability,For future questions on configuration settings you will get a faster response on our forum at http://www.cfd-online.com/Forums/su2/. ; The location of metis can be set with the configuration flags described in the installation instructions at; https://github.com/su2code/SU2/wiki/Build-from-Source,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/40#issuecomment-70964739:24,config,configuration,24,https://su2code.github.io,https://github.com/su2code/SU2/issues/40#issuecomment-70964739,2,['config'],['configuration']
Modifiability,"For next release, I think we have no choice but to just update the current template. In the future, we should go to a self-describing set of config options (add descriptive strings to each option in config_structure.cpp) so that we can automatically write a consistent config template. Better yet, the same strings can be used for an interactive help mode using the command line parser that @talbring has added. These things would go a long way to help users with the config - which is one of our major pain points.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/772#issuecomment-524917823:141,config,config,141,https://su2code.github.io,https://github.com/su2code/SU2/issues/772#issuecomment-524917823,3,['config'],['config']
Modifiability,"For updating the build, I would recommend the following: after adding the headers and sources in the correct directories, modify only configure.ac to do the correct checks for the tecio option, m4/tecio.m4 to configure the compilation of tecio, and externals/tecio/Makefile.am to make sure the proper headers/files are being included in the build. . Then, as a final step, run the ./bootstrap script in the root directory of SU2/, which will build and run autoreconf with an older, standard version of the autotools that we ship for portability. This will update the makefiles throughout the build for you, and from there, you can run configure - make - install. Just let me know if you're still having trouble.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-414578307:134,config,configure,134,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-414578307,4,"['config', 'portab']","['configure', 'portability']"
Modifiability,"From the SU2 paper, talking about ""guiding principles"":. <img width=""574"" alt=""Screen Shot 2019-10-09 at 3 26 46 PM"" src=""https://user-images.githubusercontent.com/19416354/66525312-edb5d480-eaa9-11e9-9c0f-158b3941b407.png"">. I particularly like. > Full documentation, including a comprehensive set of tutorials. (""including"" implying that the tutorials are a subset of the documentation), and . > expose the full set of options [...] to the practitioner. This conflicts with our ""operating principle"", laid out on the tutorials page:. > Rather than writing a long manual on all available (and constantly evolving) configuration options available in SU2[...]. The Guide to V7 is a good start, but I think at the bare minimum (since I agree that full documentation would be a huge task, though one that's apparently promised on a paper we link on our homepage), we should provide more information about the existing options beyond forcing the user to scroll through config_template.cfg or dig through the tutorials.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/775#issuecomment-540239931:615,config,configuration,615,https://su2code.github.io,https://github.com/su2code/SU2/issues/775#issuecomment-540239931,2,['config'],['configuration']
Modifiability,"GCC doesn‚Äôt necessarily come with g++. Does which g++ show anything? If not, try: sudo apt-get install g++. Dave. From: thw1021 [mailto:notifications@github.com]; Sent: Monday, July 22, 2019 8:38 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: [su2code/SU2] C++ compiler cannot create executables (#738). Dear developers,; I am trying to install SU2 in docker ubuntu 18.04 container so that I can easily share with partner. But I failed to compile the code with following errors:. (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx. checking build system type... x86_64-pc-linux-gnu. checking host system type... x86_64-pc-linux-gnu. checking target system type... x86_64-pc-linux-gnu. checking for a BSD-compatible install... /usr/bin/install -c. checking whether build environment is sane... yes. checking for a thread-safe mkdir -p... /bin/mkdir -p. checking for gawk... no. checking for mawk... mawk. checking whether make sets $(MAKE)... yes. checking whether make supports nested variables... yes. checking whether make supports nested variables... (cached) yes. checking for style of include used by make... GNU. checking whether the C++ compiler works... no. configure: error: in `/home/SU2':. configure: error: C++ compiler cannot create executables. See `config.log' for more details. I am sure that I have installed gcc/g++ successfully. You can see. (base) root@a5502ebdff64:/home# gcc --version. gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0. Copyright (C) 2017 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. (base) root@a5502ebdff64:/home# g++ -o hello hello.cc. (base) root@a5502ebdff64:/home# ./hello. Hello, World!. I have uploaded the config.log file. Could you give me some suggestions, p",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847308:574,config,configure,574,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847308,1,['config'],['configure']
Modifiability,"GE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conft",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:9991,config,configure,9991,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability,"Good catch! yep! I implemented an interesting/important change: Before, WALL_DISTANCE was computed using only the surfaces that you have identified as moving surfaces... as you can imagine that only works when you have a very simple problem (maybe an airfoil) but... if you have a problem with more Navier-Stokes markers together and you are moving only one of them the method doesn't work (e.g. wing-fuselage). For that reason I reimplemented WALL_DISTANCE which now is computed from all the solid surfaces and I also created DEF_WALL_DISTANCE that computes the distance from the surfaces that we are moving (as before). Frankly, I haven't found a situation in which DEF_WALL_DISTANCE outperforms the new solid WALL_DISTANCE... And, my suggestion is to eliminate DEF_WALL_DISTANCE in the future. For the time being I have added DEFORM_STIFFNESS_TYPE= DEF_WALL_DISTANCE to the config files to see if that solves the problem. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/412#issuecomment-318673304:877,config,config,877,https://su2code.github.io,https://github.com/su2code/SU2/pull/412#issuecomment-318673304,2,['config'],['config']
Modifiability,"Good point about making the eigen-functions static. That makes it a lot more accessible in other parts of the code. Will include that in the changes along with the option name changes. . I like the idea about the static allocation, but I foresee a problem that you actually mention. If I convert the variables to be statically defined, I would have to make the eigen-functions accept statically defined arrays. Since most arrays in SU2 are dynamically allocated, this would cause some compatibility issues. . In general, I see the value in making a math library associated with matrix operations. Maybe you could pitch the idea in an issue and get feedback on it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-433963723:300,variab,variables,300,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-433963723,2,['variab'],['variables']
Modifiability,"Got it, by navigation you mean from cpp to hpp then?; I agree with you but I would suggest having those extra subdirs in solver and co.; ```; SU2/; solvers/; meson.build; CSolver.hpp; CSolver.cpp; flow/; solver_\*.cpp; solver_\*.hpp; turbulence/; ```; For me what makes navigation a bit cumbersome is scrolling past all the variables to get to the ones of a particular solver for example, the hpp/cpp I don't mind so much they are 2 clicks away in the IDE I use.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-630925996:324,variab,variables,324,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-630925996,1,['variab'],['variables']
Modifiability,"Got my first glasses half a year into Fortran‚Ä¶ and never looked back. From: Pedro Gomes <notifications@github.com>; Sent: 28 January 2021 11:13; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] Structural stress penalty function for optimization, fix some CConfig problems (#1176). @pcarruscag commented on this pull request. ________________________________. In Common/src/grid_movement/CSurfaceMovement.cpp<https://github.com/su2code/SU2/pull/1176#discussion_r566010726>:. > - Omega = (config->GetRotation_Rate(3)/config->GetOmega_Ref());. + Omega = config->GetRotation_Rate(2)/config->GetOmega_Ref();. As blind an any programmer, we should have XYZ enums. ‚Äî; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/1176#discussion_r566010726>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AATH4JKAAEAXKNHHCUGOQT3S4FBB7ANCNFSM4WOZ6DBA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1176#issuecomment-769213365:556,config,config,556,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176#issuecomment-769213365,4,['config'],['config']
Modifiability,"Great! Thanks @economon for the link. I have 2 main questions after reading through those changes:. 1. Would the custom objective function below need to modified for a velocity init/pressure outlet instead of a mass flow outlet?. `Total_Custom_ObjFunc = pow((config->GetSurface_MassFlow(0)/config->GetSurface_MassFlow(1) - 0.046),2.0)`. 2. This question needs a bit of context. A summary of the issues I see in the deformed mesh:. a. ~1.04M (out of ~4.2M) elements are missing:; <img width=""713"" alt=""Screen Shot 2020-03-18 at 10 39 32 AM"" src=""https://user-images.githubusercontent.com/62301101/77670983-ed749d00-6f54-11ea-86ee-6a49c0003f84.png"">; b. Sequences of elements interleaved at irregular intervals:; <img width=""714"" alt=""Screen Shot 2020-03-18 at 10 40 10 AM"" src=""https://user-images.githubusercontent.com/62301101/77671352-7ee40f00-6f55-11ea-91b8-ed13178139db.png"">; c. The NPOIN= declaration is missing, and points also interleaved at irregular intervals:; <img width=""884"" alt=""Screen Shot 2020-03-18 at 10 37 14 AM"" src=""https://user-images.githubusercontent.com/62301101/77671853-29f4c880-6f56-11ea-9061-046d690ab42f.png"">. To me it almost seems as if different processes are trying to write to the file at the same time and overwriting each other. Could this be caused by my using the DRAG objective function with my hardcoded initial velocity values? If so, could a custom objective function solve this problem?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/912#issuecomment-604543256:259,config,config,259,https://su2code.github.io,https://github.com/su2code/SU2/issues/912#issuecomment-604543256,2,['config'],['config']
Modifiability,"Guys, we really want to merge this in soon to go on with the output/input refactorization. Someone else has some comments ? Otherwise, we need some approvals :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528#issuecomment-396174581:74,refactor,refactorization,74,https://su2code.github.io,https://github.com/su2code/SU2/pull/528#issuecomment-396174581,1,['refactor'],['refactorization']
Modifiability,"H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. ------------------------------------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:15769,extend,extended,15769,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,"['config', 'extend']","['config', 'extended']"
Modifiability,"Heather, thanks for your response.; I do agree that it is preferable to avoid an exhaustive list of defaults. However, currently SU2 runs double booking: For the C++ code, defaults are set in SetRunTime_Options (part of config_structures.cpp) and for the Python scripts, a partial list of defaults is defined in config.py. If we can automatically sync between the c++ and python codes, it will make developers life much easier. ; I suggest creating a single ASCII file that contains all the defaults values. This file can be read both by the c++ code and by the Python scripts, before overwitting parameters, reading from the case cfg file. ; Such a file can be part of the distribution. Whenever a new parameter is defined in SetRunTime_Options, its default value should be written in the defaults' file. Actually, we can prepare a rendering script that would read through SetRunTime_Options and prepares the defaults in the ASCII file, synced with the c++, for the Python. What do you think?; Best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-377178756:312,config,config,312,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-377178756,1,['config'],['config']
Modifiability,"Hello @aditya12398 ,. I was able to recreate your problem with pywrapper enabled on my machine, and I believe I may have found the issue. There was a change with Python 3.8's configure utility. The change is noted here:. https://docs.python.org/dev/whatsnew/3.8.html#debug-build-uses-the-same-abi-as-release-build. This affected the meson build system, as noted here:. https://github.com/mesonbuild/meson/issues/5629. I believe I have solved the problem by adding two lines to the main `meson.build` file in the SU2 root directory. If you can, please checkout branch ""fix_python_3.8"", and see if that solves the Python wrapper compilation problem. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631167702:175,config,configure,175,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631167702,1,['config'],['configure']
Modifiability,"Hello @aditya12398 ,. The fifth line of the file you attached shows a call to `c++`, rather than `mpicxx`, which could cause those undefined references. Basically, the linker is not seeing your mpi libraries. I believe that, in order to use the `-Dcustom-mpi=true` flag, you may need to define your compiler environment variables (such as `$CC`, `$CXX`, `$LD`, `$MPICXX`, etc). Having both OpenMPI and MPICH installed on your system is complicating things, I think. Without some manual configuration of your system's environment, it may not be clear to meson/ninja which mpi implementation should be used. You may need to do some digging around on the internet to see how to properly resolve which MPI implementation gets used for different applications. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634825410:320,variab,variables,320,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634825410,4,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"Hello @kohyun, to navigate to the mesh and config file you can just use the Terminal App and `cd` to your directory with mesh/config.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/994#issuecomment-631607647:43,config,config,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/994#issuecomment-631607647,2,['config'],['config']
Modifiability,"Hello @pcarruscag, what do you mean by portable name? Do you mean a variable on Linux to determine the user name? If so, then it is `$USER`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/979#issuecomment-626970877:39,portab,portable,39,https://su2code.github.io,https://github.com/su2code/SU2/issues/979#issuecomment-626970877,2,"['portab', 'variab']","['portable', 'variable']"
Modifiability,"Hello @pcarruscag,. I've been following the conversation about #1124 and the possible conflicts with this PR. I wanted to say that, with respect to this specific PR I kept working on a different branch lately (**feature_pyBeam_ShapeDesignV2**) which, is currently the most advanced version of the project. How to conciliate? Shall we pull from feature_pyBeam_ShapeDesignV2 directly here? . One issue of that version is that I had to introduce some changes into the CFD solver to extend to FSI the fixed Cl design feature. I thought the mods where general but that actually broke something within SU2 CFD AD. . Best,; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/902#issuecomment-743400230:479,extend,extend,479,https://su2code.github.io,https://github.com/su2code/SU2/pull/902#issuecomment-743400230,1,['extend'],['extend']
Modifiability,"Hello Dr. Economon,; I have been busy for some time, and just had chance to submit my transition model here on GitHub. Before starting the NREL case, I decided to check the caradonna_tung test case to see how to set grid movement configurations etc.. Although I have successfully run the case with euler equations, I could not do so with the navier-stokes equations as the case stopped running with error ""Convective scheme not implemented (turbulent)"". This is why I could not solve the NREL test case. If I am missing something, would you please help me on the issue?. Samet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257389300:230,config,configurations,230,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257389300,1,['config'],['configurations']
Modifiability,"Hello Pedro, thanks for your quick reply! ; More than the differentiation of the mesh deformation problem I was referring to what SU2_DOT does in the specific, at least in terms of workflow.; In fact, reading your answer I realise that maybe I'm misunderstanding the process done by SU2_DOT.; I thought that, in case of Disc. Adjoint, SU2 solver was already providing the _total_ sensitivity of the objective function with respect to the boundary grid nodes displacements. This already includes the contribution of the mesh deformation. given this, I thought that SU2_DOT was simply projecting such sensitivities on the FFD box point displacements chosen as design variables. But I cannot understand then why the need to include the mesh deformation problem within SU2_DOT.; Can you let me know about that please?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1017#issuecomment-640071772:665,variab,variables,665,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-640071772,2,['variab'],['variables']
Modifiability,"Hello Pedro,. No problem at all. I just got stuck on a few issues in the PB solver and other things so I wasn't able to focus on this PR in a while. But yeah, I am indeed stuck on how to update the map in MPI. What I have done so far is kept the Global roughness array in config class for the BC_* routines and created an unordered map in physical geometry class which will be used in the SetWallDistance routine instead of the config call. I haven't used maps in C++ at all, so it is taking a while. I will try a few more things and if I can't fix it I will ask on slack or in the meeting next time. Cheers,; Akshay",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-653064740:272,config,config,272,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653064740,2,['config'],['config']
Modifiability,"Hello Pedro,. Unfortunately, I will not be able to attend in the developer meeting tomorrow. However, I will try to shed some light on the PR internals.; 1.	I added ‚Äò**rapidjson**‚Äô subfolder into the externals which is actually a set of files from ; https://github.com/Tencent/rapidjson/tree/master/include/rapidjson catalog.; These header files are the essence of the ‚Äò**rapidjson**‚Äô library, which makes working with _json_ files much easier. I guess the rapidjson‚Äôs headers make up more than 1/3 of the total code size within PR.; 2.	The **CPengRobinsonCoolPropAncillaries.hpp** file contains char array ‚Äò**_all_cubics_extended_JSON_binary_**‚Äô that is the binary representation of all the fluid ‚Äòjson‚Äô files extracted from **CoolProp** sources and translated into single compiled variable. Such a solution lets keep all raw data of the fluids in a single place without necessity to work with file system. The definition of ‚Äò**_all_cubics_extended_JSON_binary_**‚Äô variable consists of 11.7k lines of codes. ; 3.	The key files of the PR are the **CPengRobinsonCoolProp.hpp** and **CPengRobinsonCoolProp.cpp** (about 1.7k lines of code in sum). All the source codes of the fluid model are contained exclusively in these files and there are no calls to external libraries inside except **rapidjson** library (in constructor of the class). If you have any other questions, just let me know. ; Sincerely and best wishes. P.S. I faced with the issue while running LGTM code analysis (compile errors). Honestly, I need some time to fix it because I am working on Windows (**mingw-w64** and **Visual Studio**) and I haven‚Äôt encountered similar errors. This is my fault and I promise to check my sources on Linux before pushing the commits.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1402#issuecomment-941017233:783,variab,variable,783,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402#issuecomment-941017233,2,['variab'],['variable']
Modifiability,"Hello SU2 developers,. I am reopening this topic because I am studying a case of jet impingement on a wall with a time-varying flow at the inlet. I have used compressible RANS and TOTAL_CONDITIONS as inlet BC. Specifically, I have set a time-varying stagnation pressure at inlet. To do this, I used the Python script mentioned in the previous messages, modifying some commands to suit my problem. I should mention that I do not use Python frequently, so there are likely some errors. Indeed, I checked the documentation and noticed that the command I used to vary the pressure at the inlet (SetMarkerCustomPtotal) is not listed. However, when I run the simulation, it seems to work quite well. Unfortunately, when examining the pressure field, it appears that the time-varying boundary conditions are applied on the walls with no-slip conditions (represented by the MARKER_ISOTHERMAL command) and not at the inlet as I want. Could you please tell me what changes I need to make in the Python script to correctly set up the problem? For completeness, I am attaching the script I modified, the configuration file, and a video of the pressure field.; [2D_jet_val_unsteady_5.zip](https://github.com/user-attachments/files/15524970/2D_jet_val_unsteady_5.zip). Thank you in advance for your help. Best Regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1079#issuecomment-2143793953:1092,config,configuration,1092,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2143793953,1,['config'],['configuration']
Modifiability,"Hello Tobi,. Thanks for your quick reply! I'll address you doubts as follows. > I used this mesh <Testcases>/control_surface/mesh_ONERAM6_inv.su2 and the boundary marker names are a bit different in the mesh, compared to your provided config (WING vs LOWER_SIDE, UPPER_SIDE, TIP + SYMMETRY vs SYMMETRY_FACE). . Yeah, the mesh you are mentioning is the same. I simply united the TIP, LOWER_SIDE and UPPER_SIDE under the marker tag WING. > The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh; In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more ü§î. I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings.; [Summary_steady_6_0_1.txt](https://github.com/su2code/SU2/files/3906039/Summary_steady_6_0_1.txt); [Summary_steady_6_2_0.txt](https://github.com/su2code/SU2/files/3906010/Summary_steady_6_2_0.txt). Regarding the unsteady case, I'm aware that this test may have little physics behind (especially if comparing the first timesteps) but I wanted to investigate the reason :). Results are too different and I think these might be one of the reasons behind some discrepancies I'm encountering in my FSI framework. ; My framework for FSI features a restart from a steady solution at t=0 and an unsteady simulation with imposed boundary of the wing marker. The discrepancies in that case are huge and are clearly wrong. I went back to the root and found this weird behaviour comparing the two versions so I thought this might be one cause. > Another thing: There is no tag 6.0.2 üòï ... 6.0.1 and then 6.1.0.. Yep you are right, the version is definitely 6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-559850074:235,config,config,235,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559850074,4,"['config', 'extend']","['config', 'extend']"
Modifiability,"Hello Tom,. Thanks for responding. I have been trying to recreate the problem on smaller meshes, but so far, no luck. However, I am seeing a problem that may be _related_ on a smaller mesh. This is occurring with the latest commit (c093a62a2b) of develop:. When compiled with mpi and buildtype of either release or debug, when attempting to restart a DDES, I am getting the following:. 1) Compiled in release mode: segmentation faults following ""initialize jacobian structure (SA model)""; 2) Compiled in debug mode: ; ```; | Total Time| 1| 1| s| 1|; | Time Step| 1.25e-06| 1| s| 1.25e-06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; SU2_CFD_MPI_DEBUG: ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp:294: const Scalar_t& container_helpers::AccessorImpl<Index_t, Scalar_t, StorageType::ColumnMajor, AlignSize, 0, 1>::operator()(Index_t) const [with Index_t = long unsigned int; Scalar_t = double; long unsigned int AlignSize = 64]: Assertion `i>=0 && i<m_rows' failed.; ```; This problem appears on a relatively small (~7 million cell) mesh of the same geometry as the larger one I mentioned in my initial post. Running the simulation in serial mode runs successfully and does not produce any errors. I have put the RANS result, mesh, and DDES configure file and restart files on a shared folder:. https://drive.google.com/open?id=1IDpK_0xYktI-lbG-ozre9Sf_3ksC7xtt. Any/all help is greatly appreciated. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-620295725:1423,config,configure,1423,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-620295725,1,['config'],['configure']
Modifiability,"Hello Wally, do you know anyone has a TestCase config of HEAT_EQUATION_FVM? I have not found such one in the TestCases folder.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/783#issuecomment-526993716:47,config,config,47,https://su2code.github.io,https://github.com/su2code/SU2/issues/783#issuecomment-526993716,1,['config'],['config']
Modifiability,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:128,adapt,adaptation,128,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809,9,"['Adapt', 'adapt']","['Adaptation', 'adaptation']"
Modifiability,"Hello guys, I have a proposal to make some numerical tests automatically compared with standard analytical results, requiring the deviation of specific physical variables to be in an allowable range. So that such numerical result bias error could be detected in time accurately after every time the numerical algorithm changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-514969680:161,variab,variables,161,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-514969680,1,['variab'],['variables']
Modifiability,"Hello! I was using the python script ""shape_optimization"". I wanted to; leave out some design variables to ensure they will not be modified (i.e.; fixing the extremities of a nozzle, for example), but apparently it was not; working when trying that. On Thu, May 16, 2024 at 6:59‚ÄØPM Nijso ***@***.***> wrote:. > Hi, @jaspe55 <https://github.com/jaspe55> Sorry that it took so long to; > get back to you on this topic, but what is the exact command that you are; > using, do you use one of the python scripts?; >; > ‚Äî; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/2265#issuecomment-2116274865>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUR4CHGFULNFYLVZUELZCUT5VAVCNFSM6AAAAABGHNGHR2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCMJWGI3TIOBWGU>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265#issuecomment-2116341103:94,variab,variables,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265#issuecomment-2116341103,1,['variab'],['variables']
Modifiability,"Hello!; Thanks for your help. Writing the line:; OUTPUT_FILES= RESTART_ASCII. enabled the simulation to run past 250 iterations and after 4500 or so iterations, I was able to yield the correct values for Cl and Cd.; However, an issue still persists. The file restart_flow.csv doesn't seem to appear in the directory. I have amended the config file to have the lines:. OUTPUT_WRT_FREQ = 10; OUTPUT_FILES=(RESTART_ASCII). at the very end. However, after 10 iterations, a csv file isn't created.; I am not sure how to go about fixing this issue so any help is appreciated.; I have attatched the amended configuration file and a screenshot from Windows Powershell.; [turb_NACA0012_sa.txt](https://github.com/su2code/SU2/files/8008885/turb_NACA0012_sa.txt). Thank you; ![SU2_](https://user-images.githubusercontent.com/99037921/152658358-bdf3c06c-d3a6-4343-aa14-d5d7c7374cb9.png); !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1537#issuecomment-1030696289:336,config,config,336,https://su2code.github.io,https://github.com/su2code/SU2/issues/1537#issuecomment-1030696289,2,['config'],"['config', 'configuration']"
Modifiability,"Hello, ; I did not fix this issue. I just found possible source of it. You can use case attached to this message to reproduce the issue. Run: python path_to_su2/finite_differences.py -f turb_SA_RAE2822.cfg -n 12; or; python path_to_su2/discrete_adjoint.py -f turb_SA_RAE2822.cfg -n 12. It ends with error message: . Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM.; ------------------------------ Error Exit -------------------------------_. The config file created prior to call the solver constains DV_VALUE = 0.0 instead of six values as in original cfg file. The reason for this (probable one) is described in my original post. . I'm not experienced with SU2 coding and handling of codes on GitHub, so I would like to ask someone to fix this issue. . Thank you,; Jan. [RAE_Test.zip](https://github.com/su2code/SU2/files/11199780/RAE_Test.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2005#issuecomment-1503154876:614,config,config,614,https://su2code.github.io,https://github.com/su2code/SU2/issues/2005#issuecomment-1503154876,1,['config'],['config']
Modifiability,"Hello, ; You are right, this pr cannot solve the problem but just make the solution look reasonable.; For some complicated case, it is hard to converge, not like in the simple cases.; I have read the relevant code and book, and I think maybe a good way is to rewrite the bc code and move the nonzero normal components limitation to where the flux are calculated. Or we can store the flux of the points on the sym bc, and in CFVMFlowSolverBase<V, R>::BC_Sym_Plane we just use the stored flux without recalculation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2174#issuecomment-1868453319:259,rewrite,rewrite,259,https://su2code.github.io,https://github.com/su2code/SU2/pull/2174#issuecomment-1868453319,2,['rewrite'],['rewrite']
Modifiability,"Hello, @pcarruscag . Thank you for help. I try the examples and they run well. By the way, SU2 v6.2.0 doesn't have the option 'USE_ACCURATE_FLUX_JACOBIANS'. I'm not practised enough to know what it is for. Here is my config.; [cavity.zip](https://github.com/su2code/SU2/files/3525060/cavity.zip); It still diverges on lid-driven cavity flow case, at even a rather low CFL number, like 0.01. However, when I simulate laminar boundary layer case with 0.1 incoming mach number, it is OK, converging very slowly. Regards; Cao J. Z.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/761#issuecomment-523415869:217,config,config,217,https://su2code.github.io,https://github.com/su2code/SU2/issues/761#issuecomment-523415869,1,['config'],['config']
Modifiability,"Hello,. May I ask which version of the code do you use and on which branch ? In fact, this bug (and it was not the only one) was already fixed a few days ago on the branch feature_pyWrapper. You may pull those new changes just to be sure to have a clean version. Otherwise, I would not trust the results. The reason why the FSI Python tool (note the distinction with the SU2 Python wrapper, which is maintained and up-to-date) accumulates some bugs is that, normally, it is not really maintained anymore in prevision of a new coupling framework. I recently introduced some fixes to make it work again (I mean the coupling SU2 + pitch-plunge structural solver) in the meantime, but you may want to double-check each result you get. Best,. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/449#issuecomment-333879558:526,coupling,coupling,526,https://su2code.github.io,https://github.com/su2code/SU2/issues/449#issuecomment-333879558,2,['coupling'],['coupling']
Modifiability,"Hello,. So, to clarify, there were two issues:. 1) With the old commit (382e82f), we were seeing the assertion failure at line 1881 of numerics_structure.cpp, but only with the very large mesh (180 million cells). 2) With the newer commit (c093a62), we were seeing the assertion failure at line 294 of C2DContainer.hpp, which was occurring even with smaller meshes (7 million cells). The solution to (2) appears to be to change `geometry->node[iPoint]->GetnNeighbor()` to `geometry->node[iPoint]->GetnPoint()` at line 3759 of CEulerSolver.cpp, in the `CEulerSolver::SetUpwind_Ducros_Sensor()` method. I made this change locally, and attempted to run on our large mesh. Issue (2) seems to be fixed, but we still run into issue (1). I have now gone through the read restart routines, and have found a potential issue:. For reference, the restart file for our large mesh with averaging data included consists of:; 39 fields * 75,107,967 points = 2,929,210,713 variable values (which is larger than `INT_MAX`). Beginning at line 3931 of CSolver.cpp, in method `CSolver::Read_SU2_Restart_Binary(...)`, we have the following:. ```; int *blocklen = new int[geometry->GetnPointDomain()];; int *displace = new int[geometry->GetnPointDomain()];; int counter = 0;; for (iPoint_Global = 0; iPoint_Global < geometry->GetGlobal_nPointDomain(); iPoint_Global++ ) {; if (geometry->GetGlobal_to_Local_Point(iPoint_Global) > -1) {; blocklen[counter] = nFields;; displace[counter] = iPoint_Global*nFields;; counter++;; }; }; MPI_Type_indexed(geometry->GetnPointDomain(), blocklen, displace, MPI_DOUBLE, &filetype);; ```; The problem here is that for our case, where `iPoint_Global` can get up to 75,107,967 and `nFields` = 39, the value assigned to `displace[counter]` in the loop can over-run `INT_MAX`. This would result in potential garbage / incorrect displace values being passed to `MPI_Type_indexed(...)`. Unfortunately, simply changing `displace` to a `long int *` won't work, as the expected argument type for `",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-622026420:957,variab,variable,957,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622026420,2,['variab'],['variable']
Modifiability,"Hello,; As a simple user, when I forget to save the last history before continuing a simulation I am very frustrated, because it is lost forever... Since the new history file erases the previous one.; Also, making these history backups is not very practical...; I would very prefer an option in the config file like: ""when RESTART_SOL= YES append to the history or not?"".; I think it would not be difficult to set another variable like: ""max_it must be counted from the beginning or from the last launch?"".; I agree it makes it a bit more complex, but not too much I think :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/99#issuecomment-103369490:299,config,config,299,https://su2code.github.io,https://github.com/su2code/SU2/issues/99#issuecomment-103369490,4,"['config', 'variab']","['config', 'variable']"
Modifiability,"Hello,; Sorry for a very very late comment, but if I did not get it wrong, it seems like the turbulence intensity value specified in the config file is now multiplied by 100 in the turb_sources.cpp at line 143 after this commit. . Generally, the users tend to use the percent value (because nearly every paper on the subject talk in percentages) for turbulence intensitirs, so for example, if the experimental conditions say 3% for the turbulence intensity, the option in the config file should be 3.0. But now with this 100* modification, the users must enter 0.03, is that correct? . If it is correct, then transition test case/tutorial config files should be updated as well. Because the transition onset correlations (Menter or Abu-Ghannam) uses the percent value. . All in all, however, I suggest that we should remove the factor of 100, so the value in the config file is in percentages directly, as it was before. . Regards,; Samet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1267#issuecomment-971340179:137,config,config,137,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267#issuecomment-971340179,4,['config'],['config']
Modifiability,"Hello,; You need to use the appropriate environment variables, here is for example how I build one of my branches:; export CXXFLAGS=""-Wno-deprecated-declarations -O3 -march=corei7-avx -I/rds/general/user/me/home/pastix/install -I/rds/general/user/me/home/Eigen335""; export CPPFLAGS=""-DHAVE_PASTIX -DHAVE_LAPACK -DEIGEN_NO_DEBUG -DEIGEN_DONT_PARALLELIZE""; export LDFLAGS=""-L/rds/general/user/me/home/pastix/install -L/rds/general/user/me/home/scotch/lib -L/apps/intel/2017.6/mkl/lib/intel64/""; export LIBS=""-lpastix -lscotch -lptscotch -lptscotcherr -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread -lm -ldl""; Regards,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/662#issuecomment-478389641:52,variab,variables,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/662#issuecomment-478389641,1,['variab'],['variables']
Modifiability,"Hello,; is there any reply? What I understood from the original post, the DV value for FFD_TWIST is not straighforward. ; Why it is not taken in degrees? The comment says: _/--- The angle of rotation is computed based on a characteristic length of the wing, otherwise it is difficult to compare with other length based design variables. ---/; It could be easily done in reversed sense. Is there anything what I miss?; Nevermind, the config file comment could be done in better way, to help user understand the design variable setting. . Jan",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/693#issuecomment-1519645066:326,variab,variables,326,https://su2code.github.io,https://github.com/su2code/SU2/issues/693#issuecomment-1519645066,3,"['config', 'variab']","['config', 'variable', 'variables']"
Modifiability,"Hello; I tried a few things, even after setting the environment variables, like mentioned in the previous comment, SU2 build failed with the same long error. I installed MPICH in a custom path and set the variables like so:; ```; export CC='/usr/bin/gcc'; export CXX='/usr/bin/g++'; export MPICC='/usr/local/mpich-3.3.2/bin/mpicc'; export MPICXX='/usr/local/mpich-3.3.2/bin/mpicxx'; export LD_FLAGS='-L/usr/local/mpich-3.3.2/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/usr/local/mpich-3.3.2/include'; export C_FLAGS='-I/usr/local/mpich-3.3.2/include'; export PKG_CONFIG_PATH='/usr/local/mpich-3.3.2/lib/pkgconfig'; ```; The following two lines are absent from my meson output:; ```; Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-640396480:64,variab,variables,64,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-640396480,2,['variab'],['variables']
Modifiability,"Hello; My apologies that this hasn't been answered yet. ; For future problems you may get a faster response on the forum at: ; cfd-online.com/Forums/su2/. It seems like it may have been configuration issue when installing SU2 for parallel, and if that isn't the issue, it is possible that someone on the forum has had a similar problem and been able to solve it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23#issuecomment-105084462:186,config,configuration,186,https://su2code.github.io,https://github.com/su2code/SU2/issues/23#issuecomment-105084462,1,['config'],['configuration']
Modifiability,"Here a fluid-only case that somewhat quickly converges. Contains the mesh, 1 cfg for primal and adjoint and a little bash-script where the path to the SU2 binaries has to be adapted to fit your system. The idea was to first run primal and adjoint with vanilla develop and then the same with the new code. I left the log-files of my run in there as well for a quick look . If there is something else I can do let me know. . [new-per-bc-test.tar.gz](https://github.com/su2code/SU2/files/8408958/new-per-bc-test.tar.gz)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585#issuecomment-1087404188:174,adapt,adapted,174,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585#issuecomment-1087404188,1,['adapt'],['adapted']
Modifiability,"Hey ! I recently encountered this issue as well. It seems that on some systems, the `libz` is available both as a static `.a` and dynamic `.so` library. It seems, in some cases, that the former is not compiled with the `-fPIC` flag by default. Unfortunately, the HDF5 code packaged with SU2 seems to prefer linking to the former when it is available, leading to errors when compiling the Python API (this flag is required for Python extensions). . The following worked for me: in _externals/cgns/hdf5/meson.build_, line 28 (and presumably 29, if the same issue exists for `szip`), you can change the `static: true` argument to `static: false`. When (re)configuring, `meson` should now pick up the shared library instead. . Please let me know if this worked for you also !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568#issuecomment-1083104460:653,config,configuring,653,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568#issuecomment-1083104460,1,['config'],['configuring']
Modifiability,"Hey @pcarruscag !. Thanks for the suggestions. . 1) That's a good point. I will change the option names to be more specific. . 2) Not a 100% certain what you mean by this. To be clear, instead of allocating memory using the keyword new (MeanReynoldsStress = new su2double* [3];), I should be declaring them statically (su2double MeanReynoldsStress[3][3])? I was following the variable declaration norms I saw in the code. But I guess those were usually for allocations to nDim. Is that what you are suggesting?. 3) I have generalized the Eigen-value functions to n order matrices now. But I think I am going to keep them in the numerics class. Since it seems like that is where they would be most useful. Would you suggest otherwise?. Cheers,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-433784029:376,variab,variable,376,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-433784029,2,['variab'],['variable']
Modifiability,"Hey Akshay,; I found out the other day that this: `unordered_map<pair<int,int>, su2double>` does not work without extra tricks, and the alternative `map<pair<int,int>, su2double>` may not be very efficient, so if you have it out of the config in some matrix format it is probably better.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-653157902:236,config,config,236,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653157902,1,['config'],['config']
